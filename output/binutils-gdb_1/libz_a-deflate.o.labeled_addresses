putShortMSB	ELSE,0:DO,0:FOR,0:functions,0:SWITCH,0:CALL,2:IF,0:WHILE,0	28
0x40011f3	              0x55	                                push rbp	       719	deflate.c	
0x40011f4	          0x4889e5	                            mov rbp, rsp	       719	deflate.c	
0x40011f7	        0x48897df8	                mov qword [rbp - 8], rdi	       719	deflate.c	
0x40011fb	          0x8975f4	              mov dword [rbp - 0xc], esi	       719	deflate.c	
0x40011fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	deflate.c	
0x4001202	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       720	deflate.c	
0x4001206	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	deflate.c	
0x400120a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       720	deflate.c	
0x400120e	        0x488d4801	                      lea rcx, [rax + 1]	       720	deflate.c	
0x4001212	        0x488b55f8	                mov rdx, qword [rbp - 8]	       720	deflate.c	
0x4001216	        0x48894a28	             mov qword [rdx + 0x28], rcx	       720	deflate.c	
0x400121a	          0x4801f0	                            add rax, rsi	       720	deflate.c	
0x400121d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       720	deflate.c	
0x4001220	          0xc1ea08	                              shr edx, 8	       720	deflate.c	
0x4001223	            0x8810	                      mov byte [rax], dl	       720	deflate.c	
0x4001225	        0x488b45f8	                mov rax, qword [rbp - 8]	       721	deflate.c	
0x4001229	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       721	deflate.c	
0x400122d	        0x488b45f8	                mov rax, qword [rbp - 8]	       721	deflate.c	
0x4001231	        0x488b4028	            mov rax, qword [rax + 0x28] 	       721	deflate.c	
0x4001235	        0x488d4801	                      lea rcx, [rax + 1]	       721	deflate.c	
0x4001239	        0x488b55f8	                mov rdx, qword [rbp - 8]	       721	deflate.c	
0x400123d	        0x48894a28	             mov qword [rdx + 0x28], rcx	       721	deflate.c	
0x4001241	          0x4801f0	                            add rax, rsi	       721	deflate.c	
0x4001244	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       721	deflate.c	
0x4001247	            0x8810	                      mov byte [rax], dl	       721	deflate.c	
0x4001249	              0x90	                                     nop	       722	deflate.c	
0x400124a	              0x5d	                                 pop rbp	       722	deflate.c	
0x400124b	              0xc3	                                     ret	       722	deflate.c	
deflateBound	ELSE,0:DO,2:FOR,0:functions,0:SWITCH,1:CALL,1:IF,7:WHILE,0	127
0x400102a	              0x55	                                push rbp	       655	deflate.c	
0x400102b	          0x4889e5	                            mov rbp, rsp	       655	deflate.c	
0x400102e	        0x4883ec30	                           sub rsp, 0x30	       655	deflate.c	
0x4001032	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       655	deflate.c	
0x4001036	        0x488975d0	             mov qword [rbp - 0x30], rsi	       655	deflate.c	
0x400103a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       661	deflate.c	FUNCTION_10
0x400103e	        0x4883c007	                              add rax, 7	       661	deflate.c	FUNCTION_10
0x4001042	        0x48c1e803	                              shr rax, 3	       661	deflate.c	FUNCTION_10
0x4001046	          0x4889c2	                            mov rdx, rax	       661	deflate.c	FUNCTION_10
0x4001049	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       660	deflate.c	FUNCTION_10
0x400104d	          0x4801c2	                            add rdx, rax	       660	deflate.c	FUNCTION_10
0x4001050	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       661	deflate.c	FUNCTION_10
0x4001054	        0x4883c03f	                           add rax, 0x3f	       661	deflate.c	FUNCTION_10
0x4001058	        0x48c1e806	                              shr rax, 6	       661	deflate.c	FUNCTION_10
0x400105c	          0x4801d0	                            add rax, rdx	       661	deflate.c	FUNCTION_10
0x400105f	        0x4883c005	                              add rax, 5	       660	deflate.c	FUNCTION_10
0x4001063	        0x488945f0	             mov qword [rbp - 0x10], rax	       660	deflate.c	FUNCTION_10
0x4001067	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       664	deflate.c	FUNCTION_10
0x400106b	          0x4889c7	                            mov rdi, rax	       664	deflate.c	FUNCTION_10
0x400106e	      0xe800f5ffff	              call sym.deflateStateCheck	       664	deflate.c	FUNCTION_10
0x4001073	            0x85c0	                           test eax, eax	       664	deflate.c	FUNCTION_10
0x4001075	            0x740d	                            je 0x4001084	       664	deflate.c	FUNCTION_10
0x4001077	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       665	deflate.c	FUNCTION_10
0x400107b	        0x4883c006	                              add rax, 6	       665	deflate.c	FUNCTION_10
0x400107f	      0xe96d010000	                           jmp 0x40011f1	       665	deflate.c	FUNCTION_10
0x4001084	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       668	deflate.c	FUNCTION_10	IF_1	CALL_1
0x4001088	        0x488b4038	            mov rax, qword [rax + 0x38] 	       668	deflate.c	FUNCTION_10	IF_1	CALL_1
0x400108c	        0x488945f8	                mov qword [rbp - 8], rax	       668	deflate.c	FUNCTION_10	IF_1	CALL_1
0x4001090	        0x488b45f8	                mov rax, qword [rbp - 8]	       669	deflate.c	FUNCTION_10	IF_1
0x4001094	          0x8b4030	            mov eax, dword [rax + 0x30] 	       669	deflate.c	FUNCTION_10	IF_1
0x4001097	          0x83f801	                              cmp eax, 1	       669	deflate.c	FUNCTION_10	IF_1
0x400109a	            0x741a	                            je 0x40010b6	       669	deflate.c	FUNCTION_10	IF_1
0x400109c	          0x83f802	                              cmp eax, 2	       669	deflate.c	FUNCTION_10	IF_1
0x400109f	            0x7438	                            je 0x40010d9	       669	deflate.c	FUNCTION_10	IF_1
0x40010a1	            0x85c0	                           test eax, eax	       669	deflate.c	FUNCTION_10	IF_1
0x40010a3	     0xf85e2000000	                           jne 0x400118b	       669	deflate.c	FUNCTION_10	IF_1
0x40010a9	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       671	deflate.c	FUNCTION_10
0x40010b1	      0xe9e0000000	                           jmp 0x4001196	       672	deflate.c	FUNCTION_10
0x40010b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       674	deflate.c	FUNCTION_10	SWITCH_1
0x40010ba	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       674	deflate.c	FUNCTION_10	SWITCH_1
0x40010c0	            0x85c0	                           test eax, eax	       674	deflate.c	FUNCTION_10	SWITCH_1
0x40010c2	            0x7407	                            je 0x40010cb	       674	deflate.c	FUNCTION_10	SWITCH_1
0x40010c4	      0xb80a000000	                            mov eax, 0xa	       674	deflate.c	FUNCTION_10	SWITCH_1
0x40010c9	            0xeb05	                           jmp 0x40010d0	       674	deflate.c	FUNCTION_10	SWITCH_1
0x40010cb	      0xb806000000	                              mov eax, 6	       674	deflate.c	FUNCTION_10	SWITCH_1
0x40010d0	        0x488945e0	             mov qword [rbp - 0x20], rax	       674	deflate.c	FUNCTION_10	SWITCH_1
0x40010d4	      0xe9bd000000	                           jmp 0x4001196	       675	deflate.c	FUNCTION_10	SWITCH_1
0x40010d9	    0x48c745e01200	           mov qword [rbp - 0x20], 0x12 	       678	deflate.c	FUNCTION_10	SWITCH_1
0x40010e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       679	deflate.c	FUNCTION_10	SWITCH_1
0x40010e5	        0x488b4038	            mov rax, qword [rax + 0x38] 	       679	deflate.c	FUNCTION_10	SWITCH_1
0x40010e9	          0x4885c0	                           test rax, rax	       679	deflate.c	FUNCTION_10	SWITCH_1
0x40010ec	     0xf84a3000000	                            je 0x4001195	       679	deflate.c	FUNCTION_10	SWITCH_1
0x40010f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       681	deflate.c	FUNCTION_10	SWITCH_1
0x40010f6	        0x488b4038	            mov rax, qword [rax + 0x38] 	       681	deflate.c	FUNCTION_10	SWITCH_1
0x40010fa	        0x488b4018	            mov rax, qword [rax + 0x18] 	       681	deflate.c	FUNCTION_10	SWITCH_1
0x40010fe	          0x4885c0	                           test rax, rax	       681	deflate.c	FUNCTION_10	SWITCH_1
0x4001101	            0x7414	                            je 0x4001117	       681	deflate.c	FUNCTION_10	SWITCH_1
0x4001103	        0x488b45f8	                mov rax, qword [rbp - 8]	       682	deflate.c	FUNCTION_10	SWITCH_1
0x4001107	        0x488b4038	            mov rax, qword [rax + 0x38] 	       682	deflate.c	FUNCTION_10	SWITCH_1
0x400110b	          0x8b4020	            mov eax, dword [rax + 0x20] 	       682	deflate.c	FUNCTION_10	SWITCH_1
0x400110e	          0x83c002	                              add eax, 2	       682	deflate.c	FUNCTION_10	SWITCH_1
0x4001111	            0x89c0	                            mov eax, eax	       682	deflate.c	FUNCTION_10	SWITCH_1
0x4001113	        0x480145e0	            add qword [rbp - 0x20], rax 	       682	deflate.c	FUNCTION_10	SWITCH_1
0x4001117	        0x488b45f8	                mov rax, qword [rbp - 8]	       683	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x400111b	        0x488b4038	            mov rax, qword [rax + 0x38] 	       683	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x400111f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       683	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001123	        0x488945e8	             mov qword [rbp - 0x18], rax	       683	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001127	      0x48837de800	               cmp qword [rbp - 0x18], 0	       684	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x400112c	            0x7418	                            je 0x4001146	       684	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x400112e	      0x488345e001	               add qword [rbp - 0x20], 1	       686	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_3
0x4001133	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001137	        0x488d5001	                      lea rdx, [rax + 1]	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x400113b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x400113f	           0xfb600	                   movzx eax, byte [rax]	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001142	            0x84c0	                             test al, al	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001144	            0x75e8	                           jne 0x400112e	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001146	        0x488b45f8	                mov rax, qword [rbp - 8]	       688	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4
0x400114a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       688	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4
0x400114e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       688	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4
0x4001152	        0x488945e8	             mov qword [rbp - 0x18], rax	       688	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4
0x4001156	      0x48837de800	               cmp qword [rbp - 0x18], 0	       689	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x400115b	            0x7418	                            je 0x4001175	       689	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x400115d	      0x488345e001	               add qword [rbp - 0x20], 1	       691	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x4001162	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001166	        0x488d5001	                      lea rdx, [rax + 1]	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x400116a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x400116e	           0xfb600	                   movzx eax, byte [rax]	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001171	            0x84c0	                             test al, al	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001173	            0x75e8	                           jne 0x400115d	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001175	        0x488b45f8	                mov rax, qword [rbp - 8]	       693	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5
0x4001179	        0x488b4038	            mov rax, qword [rax + 0x38] 	       693	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5
0x400117d	          0x8b4044	            mov eax, dword [rax + 0x44] 	       693	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5
0x4001180	            0x85c0	                           test eax, eax	       693	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5
0x4001182	            0x7411	                            je 0x4001195	       693	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5
0x4001184	      0x488345e002	               add qword [rbp - 0x20], 2	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001189	            0xeb0a	                           jmp 0x4001195	       696	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x400118b	    0x48c745e00600	               mov qword [rbp - 0x20], 6	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001193	            0xeb01	                           jmp 0x4001196	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001195	              0x90	                                     nop	       696	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001196	        0x488b45f8	                mov rax, qword [rbp - 8]	       703	deflate.c	FUNCTION_10	SWITCH_1
0x400119a	          0x8b4054	            mov eax, dword [rax + 0x54] 	       703	deflate.c	FUNCTION_10	SWITCH_1
0x400119d	          0x83f80f	                            cmp eax, 0xf	       703	deflate.c	FUNCTION_10	SWITCH_1
0x40011a0	            0x750f	                           jne 0x40011b1	       703	deflate.c	FUNCTION_10	SWITCH_1
0x40011a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       703	deflate.c	FUNCTION_10	SWITCH_1
0x40011a6	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	       703	deflate.c	FUNCTION_10	SWITCH_1
0x40011ac	          0x83f80f	                            cmp eax, 0xf	       703	deflate.c	FUNCTION_10	SWITCH_1
0x40011af	            0x740d	                            je 0x40011be	       703	deflate.c	FUNCTION_10	SWITCH_1
0x40011b1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       704	deflate.c	FUNCTION_10	SWITCH_1
0x40011b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       704	deflate.c	FUNCTION_10	SWITCH_1
0x40011b9	          0x4801d0	                            add rax, rdx	       704	deflate.c	FUNCTION_10	SWITCH_1
0x40011bc	            0xeb33	                           jmp 0x40011f1	       704	deflate.c	FUNCTION_10	SWITCH_1
0x40011be	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       707	deflate.c	FUNCTION_10	IF_7
0x40011c2	        0x48c1e80c	                            shr rax, 0xc	       707	deflate.c	FUNCTION_10	IF_7
0x40011c6	          0x4889c2	                            mov rdx, rax	       707	deflate.c	FUNCTION_10	IF_7
0x40011c9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       707	deflate.c	FUNCTION_10	IF_7
0x40011cd	          0x4801c2	                            add rdx, rax	       707	deflate.c	FUNCTION_10	IF_7
0x40011d0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       707	deflate.c	FUNCTION_10	IF_7
0x40011d4	        0x48c1e80e	                            shr rax, 0xe	       707	deflate.c	FUNCTION_10	IF_7
0x40011d8	          0x4801c2	                            add rdx, rax	       707	deflate.c	FUNCTION_10	IF_7
0x40011db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       708	deflate.c	FUNCTION_10	IF_7
0x40011df	        0x48c1e819	                           shr rax, 0x19	       708	deflate.c	FUNCTION_10	IF_7
0x40011e3	          0x4801c2	                            add rdx, rax	       707	deflate.c	FUNCTION_10	IF_7
0x40011e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       708	deflate.c	FUNCTION_10	IF_7
0x40011ea	          0x4801d0	                            add rax, rdx	       708	deflate.c	FUNCTION_10	IF_7
0x40011ed	        0x4883c007	                              add rax, 7	       707	deflate.c	FUNCTION_10	IF_7
0x40011f1	              0xc9	                                   leave	       709	deflate.c	FUNCTION_10
0x40011f2	              0xc3	                                     ret	       709	deflate.c	FUNCTION_10
fill_window	ELSE,2:DO,1:FOR,0:functions,0:SWITCH,0:CALL,9:IF,12:WHILE,1	303
0x4002fba	              0x55	                                push rbp	      1484	deflate.c	
0x4002fbb	          0x4889e5	                            mov rbp, rsp	      1484	deflate.c	
0x4002fbe	        0x4883ec30	                           sub rsp, 0x30	      1484	deflate.c	
0x4002fc2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1484	deflate.c	
0x4002fc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1487	deflate.c	
0x4002fca	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1487	deflate.c	
0x4002fcd	          0x8945e8	             mov dword [rbp - 0x18], eax	      1487	deflate.c	
0x4002fd0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1492	deflate.c	FUNCTION_19
0x4002fd4	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1492	deflate.c	FUNCTION_19
0x4002fd8	            0x89c2	                            mov edx, eax	      1492	deflate.c	FUNCTION_19
0x4002fda	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1492	deflate.c	FUNCTION_19
0x4002fde	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1492	deflate.c	FUNCTION_19
0x4002fe4	            0x29c2	                            sub edx, eax	      1492	deflate.c	FUNCTION_19
0x4002fe6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1492	deflate.c	FUNCTION_19
0x4002fea	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1492	deflate.c	FUNCTION_19
0x4002ff0	            0x29c2	                            sub edx, eax	      1492	deflate.c	FUNCTION_19
0x4002ff2	            0x89d0	                            mov eax, edx	      1492	deflate.c	FUNCTION_19
0x4002ff4	          0x8945e0	             mov dword [rbp - 0x20], eax	      1492	deflate.c	FUNCTION_19
0x4002ff7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1510	deflate.c	FUNCTION_19	DO_1
0x4002ffb	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1510	deflate.c	FUNCTION_19	DO_1
0x4003001	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1510	deflate.c	FUNCTION_19	DO_1
0x4003005	          0x8b4850	            mov ecx, dword [rax + 0x50] 	      1510	deflate.c	FUNCTION_19	DO_1
0x4003008	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1510	deflate.c	FUNCTION_19	DO_1
0x400300b	             0x1c8	                            add eax, ecx	      1510	deflate.c	FUNCTION_19	DO_1
0x400300d	      0x2d06010000	                          sub eax, 0x106	      1510	deflate.c	FUNCTION_19	DO_1
0x4003012	            0x39c2	                            cmp edx, eax	      1510	deflate.c	FUNCTION_19	DO_1
0x4003014	     0xf828d000000	                            jb 0x40030a7	      1510	deflate.c	FUNCTION_19	DO_1
0x400301a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1512	deflate.c	FUNCTION_19	DO_1
0x400301d	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      1512	deflate.c	FUNCTION_19	DO_1
0x4003020	            0x89c6	                            mov esi, eax	      1512	deflate.c	FUNCTION_19	DO_1
0x4003022	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1512	deflate.c	FUNCTION_19	DO_1
0x4003026	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1512	deflate.c	FUNCTION_19	DO_1
0x400302a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1512	deflate.c	FUNCTION_19	DO_1
0x400302d	        0x488d0c02	                    lea rcx, [rdx + rax]	      1512	deflate.c	FUNCTION_19	DO_1
0x4003031	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1512	deflate.c	FUNCTION_19	DO_1
0x4003035	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1512	deflate.c	FUNCTION_19	DO_1
0x4003039	          0x4889f2	                            mov rdx, rsi	      1512	deflate.c	FUNCTION_19	DO_1
0x400303c	          0x4889ce	                            mov rsi, rcx	      1512	deflate.c	FUNCTION_19	DO_1
0x400303f	          0x4889c7	                            mov rdi, rax	      1512	deflate.c	FUNCTION_19	DO_1
0x4003042	      0xe800000000	                          call 0x4003047	      1512	deflate.c	FUNCTION_19	DO_1
0x4003047	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1513	deflate.c	FUNCTION_19	DO_1
0x400304b	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1513	deflate.c	FUNCTION_19	DO_1
0x4003051	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      1513	deflate.c	FUNCTION_19	DO_1
0x4003054	            0x89c2	                            mov edx, eax	      1513	deflate.c	FUNCTION_19	DO_1
0x4003056	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1513	deflate.c	FUNCTION_19	DO_1
0x400305a	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      1513	deflate.c	FUNCTION_19	DO_1
0x4003060	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x4003064	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x400306a	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x400306d	            0x89c2	                            mov edx, eax	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x400306f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x4003073	    0x8990ac000000	             mov dword [rax + 0xac], edx	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x4003079	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1515	deflate.c	FUNCTION_19	DO_1	IF_4
0x400307d	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      1515	deflate.c	FUNCTION_19	DO_1	IF_4
0x4003084	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1515	deflate.c	FUNCTION_19	DO_1	IF_4
0x4003087	          0x4829c2	                            sub rdx, rax	      1515	deflate.c	FUNCTION_19	DO_1	IF_4
0x400308a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1515	deflate.c	FUNCTION_19	DO_1	IF_4
0x400308e	    0x488990980000	             mov qword [rax + 0x98], rdx	      1515	deflate.c	FUNCTION_19	DO_1	IF_4
0x4003095	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1516	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_3
0x4003099	          0x4889c7	                            mov rdi, rax	      1516	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_3
0x400309c	      0xe89fcfffff	                     call sym.slide_hash	      1516	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_3
0x40030a1	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1517	deflate.c	FUNCTION_19	DO_1	IF_4
0x40030a4	           0x145e0	             add dword [rbp - 0x20], eax	      1517	deflate.c	FUNCTION_19	DO_1	IF_4
0x40030a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40030ab	          0x488b00	                    mov rax, qword [rax]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40030ae	          0x8b4008	                mov eax, dword [rax + 8]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40030b1	            0x85c0	                           test eax, eax	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40030b3	     0xf8419020000	                            je 0x40032d2	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40030b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030bd	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030c5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030cb	            0x89c1	                            mov ecx, eax	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030d1	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030d7	            0x89c0	                            mov eax, eax	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030d9	          0x4801c8	                            add rax, rcx	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030dc	        0x488d0c02	                    lea rcx, [rdx + rax]	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030e4	          0x488b00	                    mov rax, qword [rax]	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030e7	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030ea	          0x4889ce	                            mov rsi, rcx	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030ed	          0x4889c7	                            mov rdi, rax	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030f0	      0xe856f9ffff	                       call sym.read_buf	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030f5	          0x8945ec	             mov dword [rbp - 0x14], eax	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40030f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1535	deflate.c	FUNCTION_19	DO_1
0x40030fc	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      1535	deflate.c	FUNCTION_19	DO_1
0x4003102	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1535	deflate.c	FUNCTION_19	DO_1
0x4003105	             0x1c2	                            add edx, eax	      1535	deflate.c	FUNCTION_19	DO_1
0x4003107	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1535	deflate.c	FUNCTION_19	DO_1
0x400310b	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1535	deflate.c	FUNCTION_19	DO_1
0x4003111	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x4003115	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x400311b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x400311f	    0x8b802c170000	          mov eax, dword [rax + 0x172c] 	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x4003125	             0x1d0	                            add eax, edx	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x4003127	          0x83f802	                              cmp eax, 2	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x400312a	     0xf867d010000	                           jbe 0x40032ad	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x4003130	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1539	deflate.c	FUNCTION_19	DO_1
0x4003134	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1539	deflate.c	FUNCTION_19	DO_1
0x400313a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1539	deflate.c	FUNCTION_19	DO_1
0x400313e	    0x8b802c170000	          mov eax, dword [rax + 0x172c] 	      1539	deflate.c	FUNCTION_19	DO_1
0x4003144	            0x29c2	                            sub edx, eax	      1539	deflate.c	FUNCTION_19	DO_1
0x4003146	            0x89d0	                            mov eax, edx	      1539	deflate.c	FUNCTION_19	DO_1
0x4003148	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1539	deflate.c	FUNCTION_19	DO_1
0x400314b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1540	deflate.c	FUNCTION_19	DO_1
0x400314f	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1540	deflate.c	FUNCTION_19	DO_1
0x4003153	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1540	deflate.c	FUNCTION_19	DO_1
0x4003156	          0x4801d0	                            add rax, rdx	      1540	deflate.c	FUNCTION_19	DO_1
0x4003159	           0xfb600	                   movzx eax, byte [rax]	      1540	deflate.c	FUNCTION_19	DO_1
0x400315c	           0xfb6d0	                           movzx edx, al	      1540	deflate.c	FUNCTION_19	DO_1
0x400315f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1540	deflate.c	FUNCTION_19	DO_1
0x4003163	    0x899080000000	             mov dword [rax + 0x80], edx	      1540	deflate.c	FUNCTION_19	DO_1
0x4003169	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1541	deflate.c	FUNCTION_19	DO_1
0x400316d	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	      1541	deflate.c	FUNCTION_19	DO_1
0x4003173	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1541	deflate.c	FUNCTION_19	DO_1
0x4003177	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1541	deflate.c	FUNCTION_19	DO_1
0x400317d	            0x89c1	                            mov ecx, eax	      1541	deflate.c	FUNCTION_19	DO_1
0x400317f	            0xd3e2	                             shl edx, cl	      1541	deflate.c	FUNCTION_19	DO_1
0x4003181	            0x89d1	                            mov ecx, edx	      1541	deflate.c	FUNCTION_19	DO_1
0x4003183	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1541	deflate.c	FUNCTION_19	DO_1
0x4003187	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1541	deflate.c	FUNCTION_19	DO_1
0x400318b	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1541	deflate.c	FUNCTION_19	DO_1
0x400318e	          0x83c201	                              add edx, 1	      1541	deflate.c	FUNCTION_19	DO_1
0x4003191	            0x89d2	                            mov edx, edx	      1541	deflate.c	FUNCTION_19	DO_1
0x4003193	          0x4801d0	                            add rax, rdx	      1541	deflate.c	FUNCTION_19	DO_1
0x4003196	           0xfb600	                   movzx eax, byte [rax]	      1541	deflate.c	FUNCTION_19	DO_1
0x4003199	           0xfb6c0	                           movzx eax, al	      1541	deflate.c	FUNCTION_19	DO_1
0x400319c	            0x31c1	                            xor ecx, eax	      1541	deflate.c	FUNCTION_19	DO_1
0x400319e	            0x89ca	                            mov edx, ecx	      1541	deflate.c	FUNCTION_19	DO_1
0x40031a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1541	deflate.c	FUNCTION_19	DO_1
0x40031a4	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1541	deflate.c	FUNCTION_19	DO_1
0x40031aa	            0x21c2	                            and edx, eax	      1541	deflate.c	FUNCTION_19	DO_1
0x40031ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1541	deflate.c	FUNCTION_19	DO_1
0x40031b0	    0x899080000000	             mov dword [rax + 0x80], edx	      1541	deflate.c	FUNCTION_19	DO_1
0x40031b6	      0xe9dd000000	                           jmp 0x4003298	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031bf	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031c9	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031cf	            0x89c1	                            mov ecx, eax	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031d1	            0xd3e2	                             shl edx, cl	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031d3	            0x89d1	                            mov ecx, edx	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031d9	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031dd	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031e0	          0x83c202	                              add edx, 2	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031e3	            0x89d2	                            mov edx, edx	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031e5	          0x4801d0	                            add rax, rdx	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031e8	           0xfb600	                   movzx eax, byte [rax]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031eb	           0xfb6c0	                           movzx eax, al	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031ee	            0x31c1	                            xor ecx, eax	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031f0	            0x89ca	                            mov edx, ecx	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031f6	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031fc	            0x21c2	                            and edx, eax	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40031fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003202	    0x899080000000	             mov dword [rax + 0x80], edx	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003208	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x400320c	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003210	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003214	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003217	          0x2345e4	             and eax, dword [rbp - 0x1c]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x400321a	            0x89c0	                            mov eax, eax	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x400321c	          0x4801c0	                            add rax, rax	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x400321f	          0x4801c2	                            add rdx, rax	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003222	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003226	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x400322a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x400322e	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003234	            0x89c0	                            mov eax, eax	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003236	          0x4801c0	                            add rax, rax	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003239	          0x4801c8	                            add rax, rcx	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x400323c	           0xfb700	                   movzx eax, word [rax]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x400323f	          0x668902	                      mov word [rdx], ax	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003242	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003246	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x400324a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x400324e	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003254	            0x89c0	                            mov eax, eax	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003256	          0x4801c0	                            add rax, rax	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003259	          0x4801d0	                            add rax, rdx	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x400325c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x400325f	          0x668910	                      mov word [rax], dx	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003262	        0x8345e401	               add dword [rbp - 0x1c], 1	      1551	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003266	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x400326a	    0x8b802c170000	          mov eax, dword [rax + 0x172c] 	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003270	          0x8d50ff	                      lea edx, [rax - 1]	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003273	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003277	    0x89902c170000	          mov dword [rax + 0x172c], edx 	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x400327d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003281	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003287	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x400328b	    0x8b802c170000	          mov eax, dword [rax + 0x172c] 	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003291	             0x1d0	                            add eax, edx	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003293	          0x83f802	                              cmp eax, 2	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003296	            0x7614	                           jbe 0x40032ac	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4003298	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x400329c	    0x8b802c170000	          mov eax, dword [rax + 0x172c] 	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x40032a2	            0x85c0	                           test eax, eax	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x40032a4	     0xf8511ffffff	                           jne 0x40031bb	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x40032aa	            0xeb01	                           jmp 0x40032ad	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x40032ac	              0x90	                                     nop	      1554	deflate.c	FUNCTION_19	DO_1	IF_6
0x40032ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1561	deflate.c	FUNCTION_19	DO_1
0x40032b1	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1561	deflate.c	FUNCTION_19	DO_1
0x40032b7	      0x3d05010000	                          cmp eax, 0x105	      1561	deflate.c	FUNCTION_19	DO_1
0x40032bc	            0x7715	                            ja 0x40032d3	      1561	deflate.c	FUNCTION_19	DO_1
0x40032be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1561	deflate.c	FUNCTION_19	DO_1
0x40032c2	          0x488b00	                    mov rax, qword [rax]	      1561	deflate.c	FUNCTION_19	DO_1
0x40032c5	          0x8b4008	                mov eax, dword [rax + 8]	      1561	deflate.c	FUNCTION_19	DO_1
0x40032c8	            0x85c0	                           test eax, eax	      1561	deflate.c	FUNCTION_19	DO_1
0x40032ca	     0xf8500fdffff	                           jne 0x4002fd0	      1561	deflate.c	FUNCTION_19	DO_1
0x40032d0	            0xeb01	                           jmp 0x40032d3	      1561	deflate.c	FUNCTION_19	DO_1
0x40032d2	              0x90	                                     nop	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40032d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1570	deflate.c	FUNCTION_19	DO_1
0x40032d7	    0x488b90381700	          mov rdx, qword [rax + 0x1738] 	      1570	deflate.c	FUNCTION_19	DO_1
0x40032de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1570	deflate.c	FUNCTION_19	DO_1
0x40032e2	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1570	deflate.c	FUNCTION_19	DO_1
0x40032e6	          0x4839c2	                            cmp rdx, rax	      1570	deflate.c	FUNCTION_19	DO_1
0x40032e9	     0xf8355010000	                           jae 0x4003444	      1570	deflate.c	FUNCTION_19	DO_1
0x40032ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1571	deflate.c	FUNCTION_19	DO_1
0x40032f3	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1571	deflate.c	FUNCTION_19	DO_1
0x40032f9	            0x89c2	                            mov edx, eax	      1571	deflate.c	FUNCTION_19	DO_1
0x40032fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1571	deflate.c	FUNCTION_19	DO_1
0x40032ff	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1571	deflate.c	FUNCTION_19	DO_1
0x4003305	            0x89c0	                            mov eax, eax	      1571	deflate.c	FUNCTION_19	DO_1
0x4003307	          0x4801d0	                            add rax, rdx	      1571	deflate.c	FUNCTION_19	DO_1
0x400330a	        0x488945f8	                mov qword [rbp - 8], rax	      1571	deflate.c	FUNCTION_19	DO_1
0x400330e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1574	deflate.c	FUNCTION_19	IF_8
0x4003312	    0x488b80381700	          mov rax, qword [rax + 0x1738] 	      1574	deflate.c	FUNCTION_19	IF_8
0x4003319	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1574	deflate.c	FUNCTION_19	IF_8
0x400331d	            0x7362	                           jae 0x4003381	      1574	deflate.c	FUNCTION_19	IF_8
0x400331f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003323	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003327	        0x482b45f8	                sub rax, qword [rbp - 8]	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x400332b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x400332f	    0x48817df00201	          cmp qword [rbp - 0x10], 0x102 	      1579	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003337	            0x7608	                           jbe 0x4003341	      1579	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003339	    0x48c745f00201	          mov qword [rbp - 0x10], 0x102 	      1580	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003341	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1581	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003345	            0x89c1	                            mov ecx, eax	      1581	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003347	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1581	deflate.c	FUNCTION_19	IF_8	IF_9
0x400334b	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1581	deflate.c	FUNCTION_19	IF_8	IF_9
0x400334f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1581	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003353	          0x4801d0	                            add rax, rdx	      1581	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003356	          0x4889ca	                            mov rdx, rcx	      1581	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003359	      0xbe00000000	                              mov esi, 0	      1581	deflate.c	FUNCTION_19	IF_8	IF_9
0x400335e	          0x4889c7	                            mov rdi, rax	      1581	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003361	      0xe800000000	                          call 0x4003366	      1581	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003366	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x400336a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x400336e	          0x4801c2	                            add rdx, rax	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003371	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x4003375	    0x488990381700	          mov qword [rax + 0x1738], rdx 	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x400337c	      0xe9c3000000	                           jmp 0x4003444	      1599	deflate.c	FUNCTION_19	IF_8
0x4003381	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x4003385	    0x488b80381700	          mov rax, qword [rax + 0x1738] 	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x400338c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x4003390	    0x4881c2020100	                          add rdx, 0x102	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x4003397	          0x4839d0	                            cmp rax, rdx	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x400339a	     0xf83a4000000	                           jae 0x4003444	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x40033a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033a4	    0x488b80381700	          mov rax, qword [rax + 0x1738] 	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033ab	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033af	          0x4829c2	                            sub rdx, rax	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033b2	          0x4889d0	                            mov rax, rdx	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033b5	    0x480502010000	                          add rax, 0x102	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033bb	        0x488945f0	             mov qword [rbp - 0x10], rax	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033c3	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033cb	    0x488b80381700	          mov rax, qword [rax + 0x1738] 	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033d2	          0x4829c2	                            sub rdx, rax	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033d5	          0x4889d0	                            mov rax, rdx	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033d8	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033dc	            0x731d	                           jae 0x40033fb	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1591	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033e2	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1591	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1591	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033ea	    0x488b80381700	          mov rax, qword [rax + 0x1738] 	      1591	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033f1	          0x4829c2	                            sub rdx, rax	      1591	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033f4	          0x4889d0	                            mov rax, rdx	      1591	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033f7	        0x488945f0	             mov qword [rbp - 0x10], rax	      1591	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1592	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40033ff	            0x89c1	                            mov ecx, eax	      1592	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4003401	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1592	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4003405	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1592	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4003409	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1592	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x400340d	    0x488b80381700	          mov rax, qword [rax + 0x1738] 	      1592	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4003414	          0x4801d0	                            add rax, rdx	      1592	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4003417	          0x4889ca	                            mov rdx, rcx	      1592	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x400341a	      0xbe00000000	                              mov esi, 0	      1592	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x400341f	          0x4889c7	                            mov rdi, rax	      1592	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4003422	      0xe800000000	                          call 0x4003427	      1592	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4003427	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1593	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x400342b	    0x488b90381700	          mov rdx, qword [rax + 0x1738] 	      1593	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4003432	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1593	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4003436	          0x4801c2	                            add rdx, rax	      1593	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4003439	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1593	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x400343d	    0x488990381700	          mov qword [rax + 0x1738], rdx 	      1593	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4003444	              0x90	                                     nop	      1599	deflate.c	FUNCTION_19	IF_8
0x4003445	              0xc9	                                   leave	      1599	deflate.c	FUNCTION_19	IF_8
0x4003446	              0xc3	                                     ret	      1599	deflate.c	FUNCTION_19	IF_8
deflateResetKeep	ELSE,0:DO,0:FOR,0:functions,0:SWITCH,0:CALL,4:IF,2:WHILE,0	80
0x4000a57	              0x55	                                push rbp	       469	deflate.c	
0x4000a58	          0x4889e5	                            mov rbp, rsp	       469	deflate.c	
0x4000a5b	        0x4883ec20	                           sub rsp, 0x20	       469	deflate.c	
0x4000a5f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       469	deflate.c	
0x4000a63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       472	deflate.c	
0x4000a67	          0x4889c7	                            mov rdi, rax	       472	deflate.c	
0x4000a6a	      0xe804fbffff	              call sym.deflateStateCheck	       472	deflate.c	
0x4000a6f	            0x85c0	                           test eax, eax	       472	deflate.c	
0x4000a71	            0x740a	                            je 0x4000a7d	       472	deflate.c	
0x4000a73	      0xb8feffffff	                     mov eax, 0xfffffffe	       473	deflate.c	FUNCTION_4
0x4000a78	      0xe909010000	                           jmp 0x4000b86	       473	deflate.c	FUNCTION_4
0x4000a7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       476	deflate.c	FUNCTION_4	IF_1	CALL_1
0x4000a81	    0x48c740280000	               mov qword [rax + 0x28], 0	       476	deflate.c	FUNCTION_4	IF_1	CALL_1
0x4000a89	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       476	deflate.c	FUNCTION_4	IF_1	CALL_1
0x4000a8d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       476	deflate.c	FUNCTION_4	IF_1	CALL_1
0x4000a91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       476	deflate.c	FUNCTION_4	IF_1	CALL_1
0x4000a95	        0x48895010	             mov qword [rax + 0x10], rdx	       476	deflate.c	FUNCTION_4	IF_1	CALL_1
0x4000a99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       477	deflate.c	FUNCTION_4	IF_1
0x4000a9d	    0x48c740300000	               mov qword [rax + 0x30], 0	       477	deflate.c	FUNCTION_4	IF_1
0x4000aa5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       478	deflate.c	FUNCTION_4	IF_1
0x4000aa9	    0xc74058020000	               mov dword [rax + 0x58], 2	       478	deflate.c	FUNCTION_4	IF_1
0x4000ab0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       480	deflate.c	FUNCTION_4
0x4000ab4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       480	deflate.c	FUNCTION_4
0x4000ab8	        0x488945f8	                mov qword [rbp - 8], rax	       480	deflate.c	FUNCTION_4
0x4000abc	        0x488b45f8	                mov rax, qword [rbp - 8]	       481	deflate.c	FUNCTION_4
0x4000ac0	    0x48c740280000	               mov qword [rax + 0x28], 0	       481	deflate.c	FUNCTION_4
0x4000ac8	        0x488b45f8	                mov rax, qword [rbp - 8]	       482	deflate.c	FUNCTION_4
0x4000acc	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       482	deflate.c	FUNCTION_4
0x4000ad0	        0x488b45f8	                mov rax, qword [rbp - 8]	       482	deflate.c	FUNCTION_4
0x4000ad4	        0x48895020	             mov qword [rax + 0x20], rdx	       482	deflate.c	FUNCTION_4
0x4000ad8	        0x488b45f8	                mov rax, qword [rbp - 8]	       484	deflate.c	FUNCTION_4
0x4000adc	          0x8b4030	            mov eax, dword [rax + 0x30] 	       484	deflate.c	FUNCTION_4
0x4000adf	            0x85c0	                           test eax, eax	       484	deflate.c	FUNCTION_4
0x4000ae1	            0x7912	                           jns 0x4000af5	       484	deflate.c	FUNCTION_4
0x4000ae3	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	deflate.c	FUNCTION_4
0x4000ae7	          0x8b4030	            mov eax, dword [rax + 0x30] 	       485	deflate.c	FUNCTION_4
0x4000aea	            0xf7d8	                                 neg eax	       485	deflate.c	FUNCTION_4
0x4000aec	            0x89c2	                            mov edx, eax	       485	deflate.c	FUNCTION_4
0x4000aee	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	deflate.c	FUNCTION_4
0x4000af2	          0x895030	             mov dword [rax + 0x30], edx	       485	deflate.c	FUNCTION_4
0x4000af5	        0x488b45f8	                mov rax, qword [rbp - 8]	       489	deflate.c	FUNCTION_4	IF_2
0x4000af9	          0x8b4030	            mov eax, dword [rax + 0x30] 	       489	deflate.c	FUNCTION_4	IF_2
0x4000afc	          0x83f802	                              cmp eax, 2	       489	deflate.c	FUNCTION_4	IF_2
0x4000aff	            0x7419	                            je 0x4000b1a	       489	deflate.c	FUNCTION_4	IF_2
0x4000b01	        0x488b45f8	                mov rax, qword [rbp - 8]	       491	deflate.c	FUNCTION_4
0x4000b05	          0x8b4030	            mov eax, dword [rax + 0x30] 	       491	deflate.c	FUNCTION_4
0x4000b08	            0x85c0	                           test eax, eax	       491	deflate.c	FUNCTION_4
0x4000b0a	            0x7407	                            je 0x4000b13	       491	deflate.c	FUNCTION_4
0x4000b0c	      0xb82a000000	                           mov eax, 0x2a	       491	deflate.c	FUNCTION_4
0x4000b11	            0xeb0c	                           jmp 0x4000b1f	       491	deflate.c	FUNCTION_4
0x4000b13	      0xb871000000	                           mov eax, 0x71	       491	deflate.c	FUNCTION_4
0x4000b18	            0xeb05	                           jmp 0x4000b1f	       491	deflate.c	FUNCTION_4
0x4000b1a	      0xb839000000	                           mov eax, 0x39	       489	deflate.c	FUNCTION_4	IF_2
0x4000b1f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       487	deflate.c	FUNCTION_4
0x4000b23	          0x894208	                mov dword [rdx + 8], eax	       487	deflate.c	FUNCTION_4
0x4000b26	        0x488b45f8	                mov rax, qword [rbp - 8]	       494	deflate.c	FUNCTION_4
0x4000b2a	          0x8b4030	            mov eax, dword [rax + 0x30] 	       494	deflate.c	FUNCTION_4
0x4000b2d	          0x83f802	                              cmp eax, 2	       494	deflate.c	FUNCTION_4
0x4000b30	            0x7519	                           jne 0x4000b4b	       494	deflate.c	FUNCTION_4
0x4000b32	      0xba00000000	                              mov edx, 0	       494	deflate.c	FUNCTION_4
0x4000b37	      0xbe00000000	                              mov esi, 0	       494	deflate.c	FUNCTION_4
0x4000b3c	      0xbf00000000	                              mov edi, 0	       494	deflate.c	FUNCTION_4
0x4000b41	      0xe800000000	                          call 0x4000b46	       494	deflate.c	FUNCTION_4
0x4000b46	          0x4889c2	                            mov rdx, rax	       494	deflate.c	FUNCTION_4
0x4000b49	            0xeb17	                           jmp 0x4000b62	       494	deflate.c	FUNCTION_4
0x4000b4b	      0xba00000000	                              mov edx, 0	       494	deflate.c	FUNCTION_4
0x4000b50	      0xbe00000000	                              mov esi, 0	       494	deflate.c	FUNCTION_4
0x4000b55	      0xbf00000000	                              mov edi, 0	       494	deflate.c	FUNCTION_4
0x4000b5a	      0xe800000000	                          call 0x4000b5f	       494	deflate.c	FUNCTION_4
0x4000b5f	          0x4889c2	                            mov rdx, rax	       494	deflate.c	FUNCTION_4
0x4000b62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       492	deflate.c	FUNCTION_4
0x4000b66	        0x48895060	             mov qword [rax + 0x60], rdx	       492	deflate.c	FUNCTION_4
0x4000b6a	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	deflate.c	FUNCTION_4
0x4000b6e	    0xc7404c000000	               mov dword [rax + 0x4c], 0	       497	deflate.c	FUNCTION_4
0x4000b75	        0x488b45f8	                mov rax, qword [rbp - 8]	       499	deflate.c	FUNCTION_4
0x4000b79	          0x4889c7	                            mov rdi, rax	       499	deflate.c	FUNCTION_4
0x4000b7c	      0xe800000000	                          call 0x4000b81	       499	deflate.c	FUNCTION_4
0x4000b81	      0xb800000000	                              mov eax, 0	       501	deflate.c	FUNCTION_4
0x4000b86	              0xc9	                                   leave	       502	deflate.c	FUNCTION_4
0x4000b87	              0xc3	                                     ret	       502	deflate.c	FUNCTION_4
longest_match	ELSE,0:DO,1:FOR,0:functions,0:SWITCH,0:CALL,5:IF,2:WHILE,0	217
0x4002cca	              0x55	                                push rbp	      1239	deflate.c	
0x4002ccb	          0x4889e5	                            mov rbp, rsp	      1239	deflate.c	
0x4002cce	            0x4157	                                push r15	      1239	deflate.c	
0x4002cd0	            0x4156	                                push r14	      1239	deflate.c	
0x4002cd2	            0x4155	                                push r13	      1239	deflate.c	
0x4002cd4	            0x4154	                                push r12	      1239	deflate.c	
0x4002cd6	              0x53	                                push rbx	      1239	deflate.c	
0x4002cd7	        0x48897db0	             mov qword [rbp - 0x50], rdi	      1239	deflate.c	
0x4002cdb	          0x8975ac	             mov dword [rbp - 0x54], esi	      1239	deflate.c	
0x4002cde	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1240	deflate.c	
0x4002ce2	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1240	deflate.c	
0x4002ce8	          0x8945bc	             mov dword [rbp - 0x44], eax	      1240	deflate.c	
0x4002ceb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1241	deflate.c	
0x4002cef	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1241	deflate.c	
0x4002cf3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1241	deflate.c	
0x4002cf7	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1241	deflate.c	
0x4002cfd	            0x89c0	                            mov eax, eax	      1241	deflate.c	
0x4002cff	        0x488d1c02	                    lea rbx, [rdx + rax]	      1241	deflate.c	
0x4002d03	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1244	deflate.c	FUNCTION_17
0x4002d07	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1244	deflate.c	FUNCTION_17
0x4002d0d	          0x8945c0	             mov dword [rbp - 0x40], eax	      1244	deflate.c	FUNCTION_17
0x4002d10	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1245	deflate.c	FUNCTION_17
0x4002d14	    0x8b80d0000000	            mov eax, dword [rax + 0xd0] 	      1245	deflate.c	FUNCTION_17
0x4002d1a	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1245	deflate.c	FUNCTION_17
0x4002d1d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1246	deflate.c	FUNCTION_17
0x4002d21	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1246	deflate.c	FUNCTION_17
0x4002d27	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1246	deflate.c	FUNCTION_17
0x4002d2b	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1246	deflate.c	FUNCTION_17
0x4002d2e	      0x2d06010000	                          sub eax, 0x106	      1246	deflate.c	FUNCTION_17
0x4002d33	            0x39c2	                            cmp edx, eax	      1247	deflate.c	FUNCTION_17
0x4002d35	            0x761c	                           jbe 0x4002d53	      1247	deflate.c	FUNCTION_17
0x4002d37	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1247	deflate.c	FUNCTION_17
0x4002d3b	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1247	deflate.c	FUNCTION_17
0x4002d41	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1247	deflate.c	FUNCTION_17
0x4002d45	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1247	deflate.c	FUNCTION_17
0x4002d48	            0x29c2	                            sub edx, eax	      1247	deflate.c	FUNCTION_17
0x4002d4a	            0x89d0	                            mov eax, edx	      1247	deflate.c	FUNCTION_17
0x4002d4c	       0x506010000	                          add eax, 0x106	      1247	deflate.c	FUNCTION_17
0x4002d51	            0xeb05	                           jmp 0x4002d58	      1247	deflate.c	FUNCTION_17
0x4002d53	      0xb800000000	                              mov eax, 0	      1247	deflate.c	FUNCTION_17
0x4002d58	          0x8945c8	             mov dword [rbp - 0x38], eax	      1246	deflate.c	FUNCTION_17
0x4002d5b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1251	deflate.c	FUNCTION_17	CALL_2
0x4002d5f	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1251	deflate.c	FUNCTION_17	CALL_2
0x4002d63	        0x488945d0	             mov qword [rbp - 0x30], rax	      1251	deflate.c	FUNCTION_17	CALL_2
0x4002d67	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1252	deflate.c	FUNCTION_17
0x4002d6b	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1252	deflate.c	FUNCTION_17
0x4002d6e	          0x8945cc	             mov dword [rbp - 0x34], eax	      1252	deflate.c	FUNCTION_17
0x4002d71	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1262	deflate.c	FUNCTION_17
0x4002d75	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1262	deflate.c	FUNCTION_17
0x4002d79	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1262	deflate.c	FUNCTION_17
0x4002d7d	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1262	deflate.c	FUNCTION_17
0x4002d83	            0x89c0	                            mov eax, eax	      1262	deflate.c	FUNCTION_17
0x4002d85	    0x480502010000	                          add rax, 0x102	      1262	deflate.c	FUNCTION_17
0x4002d8b	        0x4c8d2c02	                    lea r13, [rdx + rax]	      1262	deflate.c	FUNCTION_17
0x4002d8f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1263	deflate.c	FUNCTION_17
0x4002d92	            0x4898	                                    cdqe	      1263	deflate.c	FUNCTION_17
0x4002d94	        0x4883e801	                              sub rax, 1	      1263	deflate.c	FUNCTION_17
0x4002d98	          0x4801d8	                            add rax, rbx	      1263	deflate.c	FUNCTION_17
0x4002d9b	        0x440fb630	                  movzx r14d, byte [rax]	      1263	deflate.c	FUNCTION_17
0x4002d9f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1264	deflate.c	FUNCTION_17
0x4002da2	            0x4898	                                    cdqe	      1264	deflate.c	FUNCTION_17
0x4002da4	          0x4801d8	                            add rax, rbx	      1264	deflate.c	FUNCTION_17
0x4002da7	        0x440fb638	                  movzx r15d, byte [rax]	      1264	deflate.c	FUNCTION_17
0x4002dab	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1273	deflate.c	FUNCTION_17
0x4002daf	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	      1273	deflate.c	FUNCTION_17
0x4002db5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1273	deflate.c	FUNCTION_17
0x4002db9	    0x8b80cc000000	            mov eax, dword [rax + 0xcc] 	      1273	deflate.c	FUNCTION_17
0x4002dbf	            0x39c2	                            cmp edx, eax	      1273	deflate.c	FUNCTION_17
0x4002dc1	            0x7204	                            jb 0x4002dc7	      1273	deflate.c	FUNCTION_17
0x4002dc3	        0xc16dbc02	               shr dword [rbp - 0x44], 2	      1274	deflate.c	FUNCTION_17	CALL_3
0x4002dc7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1279	deflate.c	FUNCTION_17	IF_1
0x4002dcb	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      1279	deflate.c	FUNCTION_17	IF_1
0x4002dd1	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1279	deflate.c	FUNCTION_17	IF_1
0x4002dd4	            0x39c2	                            cmp edx, eax	      1279	deflate.c	FUNCTION_17	IF_1
0x4002dd6	            0x730d	                           jae 0x4002de5	      1279	deflate.c	FUNCTION_17	IF_1
0x4002dd8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1279	deflate.c	FUNCTION_17	IF_1
0x4002ddc	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1279	deflate.c	FUNCTION_17	IF_1
0x4002de2	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1279	deflate.c	FUNCTION_17	IF_1
0x4002de5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1285	deflate.c	FUNCTION_17	CALL_4
0x4002de9	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1285	deflate.c	FUNCTION_17	CALL_4
0x4002ded	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1285	deflate.c	FUNCTION_17	CALL_4
0x4002df0	        0x4c8d2402	                    lea r12, [rdx + rax]	      1285	deflate.c	FUNCTION_17	CALL_4
0x4002df4	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1330	deflate.c	FUNCTION_17	DO_1
0x4002df7	            0x4898	                                    cdqe	      1330	deflate.c	FUNCTION_17	DO_1
0x4002df9	          0x4c01e0	                            add rax, r12	      1330	deflate.c	FUNCTION_17	DO_1
0x4002dfc	           0xfb600	                   movzx eax, byte [rax]	      1330	deflate.c	FUNCTION_17	DO_1
0x4002dff	          0x4438f8	                            cmp al, r15b	      1330	deflate.c	FUNCTION_17	DO_1
0x4002e02	     0xf8551010000	                           jne 0x4002f59	      1330	deflate.c	FUNCTION_17	DO_1
0x4002e08	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1331	deflate.c	FUNCTION_17	DO_1
0x4002e0b	            0x4898	                                    cdqe	      1331	deflate.c	FUNCTION_17	DO_1
0x4002e0d	        0x4883e801	                              sub rax, 1	      1331	deflate.c	FUNCTION_17	DO_1
0x4002e11	          0x4c01e0	                            add rax, r12	      1331	deflate.c	FUNCTION_17	DO_1
0x4002e14	           0xfb600	                   movzx eax, byte [rax]	      1331	deflate.c	FUNCTION_17	DO_1
0x4002e17	          0x4438f0	                            cmp al, r14b	      1330	deflate.c	FUNCTION_17	DO_1
0x4002e1a	     0xf8539010000	                           jne 0x4002f59	      1330	deflate.c	FUNCTION_17	DO_1
0x4002e20	      0x410fb61424	                   movzx edx, byte [r12]	      1332	deflate.c	FUNCTION_17	DO_1
0x4002e25	           0xfb603	                   movzx eax, byte [rbx]	      1332	deflate.c	FUNCTION_17	DO_1
0x4002e28	            0x38c2	                              cmp dl, al	      1331	deflate.c	FUNCTION_17	DO_1
0x4002e2a	     0xf8529010000	                           jne 0x4002f59	      1331	deflate.c	FUNCTION_17	DO_1
0x4002e30	        0x4983c401	                              add r12, 1	      1332	deflate.c	FUNCTION_17	DO_1
0x4002e34	      0x410fb61424	                   movzx edx, byte [r12]	      1333	deflate.c	FUNCTION_17	DO_1
0x4002e39	        0x488d4301	                      lea rax, [rbx + 1]	      1333	deflate.c	FUNCTION_17	DO_1
0x4002e3d	           0xfb600	                   movzx eax, byte [rax]	      1333	deflate.c	FUNCTION_17	DO_1
0x4002e40	            0x38c2	                              cmp dl, al	      1332	deflate.c	FUNCTION_17	DO_1
0x4002e42	     0xf8511010000	                           jne 0x4002f59	      1332	deflate.c	FUNCTION_17	DO_1
0x4002e48	        0x4883c302	                              add rbx, 2	      1341	deflate.c	FUNCTION_17	DO_1
0x4002e4c	        0x4983c401	                              add r12, 1	      1341	deflate.c	FUNCTION_17	DO_1
0x4002e50	        0x4883c301	                              add rbx, 1	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002e54	           0xfb613	                   movzx edx, byte [rbx]	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e57	        0x4983c401	                              add r12, 1	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002e5b	      0x410fb60424	                   movzx eax, byte [r12]	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e60	            0x38c2	                              cmp dl, al	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002e62	     0xf8599000000	                           jne 0x4002f01	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002e68	        0x4883c301	                              add rbx, 1	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e6c	           0xfb613	                   movzx edx, byte [rbx]	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e6f	        0x4983c401	                              add r12, 1	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e73	      0x410fb60424	                   movzx eax, byte [r12]	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e78	            0x38c2	                              cmp dl, al	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e7a	     0xf8581000000	                           jne 0x4002f01	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e80	        0x4883c301	                              add rbx, 1	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e84	           0xfb613	                   movzx edx, byte [rbx]	      1349	deflate.c	FUNCTION_17	DO_1
0x4002e87	        0x4983c401	                              add r12, 1	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e8b	      0x410fb60424	                   movzx eax, byte [r12]	      1349	deflate.c	FUNCTION_17	DO_1
0x4002e90	            0x38c2	                              cmp dl, al	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e92	            0x756d	                           jne 0x4002f01	      1348	deflate.c	FUNCTION_17	DO_1
0x4002e94	        0x4883c301	                              add rbx, 1	      1349	deflate.c	FUNCTION_17	DO_1
0x4002e98	           0xfb613	                   movzx edx, byte [rbx]	      1349	deflate.c	FUNCTION_17	DO_1
0x4002e9b	        0x4983c401	                              add r12, 1	      1349	deflate.c	FUNCTION_17	DO_1
0x4002e9f	      0x410fb60424	                   movzx eax, byte [r12]	      1349	deflate.c	FUNCTION_17	DO_1
0x4002ea4	            0x38c2	                              cmp dl, al	      1349	deflate.c	FUNCTION_17	DO_1
0x4002ea6	            0x7559	                           jne 0x4002f01	      1349	deflate.c	FUNCTION_17	DO_1
0x4002ea8	        0x4883c301	                              add rbx, 1	      1349	deflate.c	FUNCTION_17	DO_1
0x4002eac	           0xfb613	                   movzx edx, byte [rbx]	      1350	deflate.c	FUNCTION_17	DO_1
0x4002eaf	        0x4983c401	                              add r12, 1	      1349	deflate.c	FUNCTION_17	DO_1
0x4002eb3	      0x410fb60424	                   movzx eax, byte [r12]	      1350	deflate.c	FUNCTION_17	DO_1
0x4002eb8	            0x38c2	                              cmp dl, al	      1349	deflate.c	FUNCTION_17	DO_1
0x4002eba	            0x7545	                           jne 0x4002f01	      1349	deflate.c	FUNCTION_17	DO_1
0x4002ebc	        0x4883c301	                              add rbx, 1	      1350	deflate.c	FUNCTION_17	DO_1
0x4002ec0	           0xfb613	                   movzx edx, byte [rbx]	      1350	deflate.c	FUNCTION_17	DO_1
0x4002ec3	        0x4983c401	                              add r12, 1	      1350	deflate.c	FUNCTION_17	DO_1
0x4002ec7	      0x410fb60424	                   movzx eax, byte [r12]	      1350	deflate.c	FUNCTION_17	DO_1
0x4002ecc	            0x38c2	                              cmp dl, al	      1350	deflate.c	FUNCTION_17	DO_1
0x4002ece	            0x7531	                           jne 0x4002f01	      1350	deflate.c	FUNCTION_17	DO_1
0x4002ed0	        0x4883c301	                              add rbx, 1	      1350	deflate.c	FUNCTION_17	DO_1
0x4002ed4	           0xfb613	                   movzx edx, byte [rbx]	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002ed7	        0x4983c401	                              add r12, 1	      1350	deflate.c	FUNCTION_17	DO_1
0x4002edb	      0x410fb60424	                   movzx eax, byte [r12]	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002ee0	            0x38c2	                              cmp dl, al	      1350	deflate.c	FUNCTION_17	DO_1
0x4002ee2	            0x751d	                           jne 0x4002f01	      1350	deflate.c	FUNCTION_17	DO_1
0x4002ee4	        0x4883c301	                              add rbx, 1	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002ee8	           0xfb613	                   movzx edx, byte [rbx]	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002eeb	        0x4983c401	                              add r12, 1	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002eef	      0x410fb60424	                   movzx eax, byte [r12]	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002ef4	            0x38c2	                              cmp dl, al	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002ef6	            0x7509	                           jne 0x4002f01	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002ef8	          0x4c39eb	                            cmp rbx, r13	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002efb	     0xf824fffffff	                            jb 0x4002e50	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4002f01	          0x4c89ea	                            mov rdx, r13	      1356	deflate.c	FUNCTION_17	DO_1
0x4002f04	          0x4889d8	                            mov rax, rbx	      1356	deflate.c	FUNCTION_17	DO_1
0x4002f07	          0x4829c2	                            sub rdx, rax	      1356	deflate.c	FUNCTION_17	DO_1
0x4002f0a	          0x4889d0	                            mov rax, rdx	      1356	deflate.c	FUNCTION_17	DO_1
0x4002f0d	      0xba02010000	                          mov edx, 0x102	      1356	deflate.c	FUNCTION_17	DO_1
0x4002f12	            0x29c2	                            sub edx, eax	      1356	deflate.c	FUNCTION_17	DO_1
0x4002f14	          0x4189d4	                           mov r12d, edx	      1356	deflate.c	FUNCTION_17	DO_1
0x4002f17	    0x498d9dfefeff	                  lea rbx, [r13 - 0x102]	      1357	deflate.c	FUNCTION_17	DO_1
0x4002f1e	        0x443b65c0	            cmp r12d, dword [rbp - 0x40]	      1361	deflate.c	FUNCTION_17	DO_1
0x4002f22	            0x7e36	                           jle 0x4002f5a	      1361	deflate.c	FUNCTION_17	DO_1
0x4002f24	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1362	deflate.c	FUNCTION_17	DO_1
0x4002f28	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1362	deflate.c	FUNCTION_17	DO_1
0x4002f2b	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      1362	deflate.c	FUNCTION_17	DO_1
0x4002f31	        0x448965c0	            mov dword [rbp - 0x40], r12d	      1363	deflate.c	FUNCTION_17	DO_1
0x4002f35	        0x443b65c4	            cmp r12d, dword [rbp - 0x3c]	      1364	deflate.c	FUNCTION_17	DO_1
0x4002f39	            0x7d53	                           jge 0x4002f8e	      1364	deflate.c	FUNCTION_17	DO_1
0x4002f3b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1368	deflate.c	FUNCTION_17	DO_1	IF_6	IF_7
0x4002f3e	            0x4898	                                    cdqe	      1368	deflate.c	FUNCTION_17	DO_1	IF_6	IF_7
0x4002f40	        0x4883e801	                              sub rax, 1	      1368	deflate.c	FUNCTION_17	DO_1	IF_6	IF_7
0x4002f44	          0x4801d8	                            add rax, rbx	      1368	deflate.c	FUNCTION_17	DO_1	IF_6	IF_7
0x4002f47	        0x440fb630	                  movzx r14d, byte [rax]	      1368	deflate.c	FUNCTION_17	DO_1	IF_6	IF_7
0x4002f4b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f4e	            0x4898	                                    cdqe	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f50	          0x4801d8	                            add rax, rbx	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f53	        0x440fb638	                  movzx r15d, byte [rax]	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f57	            0xeb01	                           jmp 0x4002f5a	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f59	              0x90	                                     nop	      1333	deflate.c	FUNCTION_17	DO_1
0x4002f5a	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f5d	          0x2345cc	             and eax, dword [rbp - 0x34]	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f60	            0x89c0	                            mov eax, eax	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f62	        0x488d1400	                    lea rdx, [rax + rax]	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f66	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f6a	          0x4801d0	                            add rax, rdx	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f6d	           0xfb700	                   movzx eax, word [rax]	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f70	           0xfb7c0	                           movzx eax, ax	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f73	          0x8945ac	             mov dword [rbp - 0x54], eax	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f76	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f79	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f7c	            0x7611	                           jbe 0x4002f8f	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f7e	        0x836dbc01	               sub dword [rbp - 0x44], 1	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f82	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f86	     0xf8559feffff	                           jne 0x4002de5	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f8c	            0xeb01	                           jmp 0x4002f8f	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f8e	              0x90	                                     nop	      1364	deflate.c	FUNCTION_17	DO_1
0x4002f8f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1375	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f93	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      1375	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f99	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1375	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f9c	            0x39c2	                            cmp edx, eax	      1375	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002f9e	            0x7205	                            jb 0x4002fa5	      1375	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002fa0	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1375	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002fa3	            0xeb0a	                           jmp 0x4002faf	      1375	deflate.c	FUNCTION_17	DO_1	IF_6
0x4002fa5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1376	deflate.c	FUNCTION_17	WHILE_1
0x4002fa9	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1376	deflate.c	FUNCTION_17	WHILE_1
0x4002faf	              0x5b	                                 pop rbx	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4002fb0	            0x415c	                                 pop r12	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4002fb2	            0x415d	                                 pop r13	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4002fb4	            0x415e	                                 pop r14	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4002fb6	            0x415f	                                 pop r15	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4002fb8	              0x5d	                                 pop rbp	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4002fb9	              0xc3	                                     ret	      1377	deflate.c	FUNCTION_17	WHILE_1
slide_hash	ELSE,0:DO,2:FOR,0:functions,0:SWITCH,0:CALL,0:IF,0:WHILE,0	62
0x4000040	              0x55	                                push rbp	       203	deflate.c	
0x4000041	          0x4889e5	                            mov rbp, rsp	       203	deflate.c	
0x4000044	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       203	deflate.c	
0x4000048	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       206	deflate.c	
0x400004c	          0x8b4050	            mov eax, dword [rax + 0x50] 	       206	deflate.c	
0x400004f	          0x8945f0	             mov dword [rbp - 0x10], eax	       206	deflate.c	
0x4000052	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       208	deflate.c	FUNCTION_1
0x4000056	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       208	deflate.c	FUNCTION_1
0x400005c	          0x8945ec	             mov dword [rbp - 0x14], eax	       208	deflate.c	FUNCTION_1
0x400005f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       209	deflate.c	FUNCTION_1
0x4000063	        0x488b4078	            mov rax, qword [rax + 0x78] 	       209	deflate.c	FUNCTION_1
0x4000067	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       209	deflate.c	FUNCTION_1
0x400006a	          0x4801d2	                            add rdx, rdx	       209	deflate.c	FUNCTION_1
0x400006d	          0x4801d0	                            add rax, rdx	       209	deflate.c	FUNCTION_1
0x4000070	        0x488945f8	                mov qword [rbp - 8], rax	       209	deflate.c	FUNCTION_1
0x4000074	      0x48836df802	                  sub qword [rbp - 8], 2	       211	deflate.c	FUNCTION_1
0x4000079	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	deflate.c	FUNCTION_1
0x400007d	           0xfb700	                   movzx eax, word [rax]	       211	deflate.c	FUNCTION_1
0x4000080	           0xfb7c0	                           movzx eax, ax	       211	deflate.c	FUNCTION_1
0x4000083	          0x8945f4	              mov dword [rbp - 0xc], eax	       211	deflate.c	FUNCTION_1
0x4000086	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       212	deflate.c	FUNCTION_1
0x4000089	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       212	deflate.c	FUNCTION_1
0x400008c	            0x720a	                            jb 0x4000098	       212	deflate.c	FUNCTION_1
0x400008e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       212	deflate.c	FUNCTION_1
0x4000091	          0x2b45f0	             sub eax, dword [rbp - 0x10]	       212	deflate.c	FUNCTION_1
0x4000094	            0x89c2	                            mov edx, eax	       212	deflate.c	FUNCTION_1
0x4000096	            0xeb05	                           jmp 0x400009d	       212	deflate.c	FUNCTION_1
0x4000098	      0xba00000000	                              mov edx, 0	       212	deflate.c	FUNCTION_1
0x400009d	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	deflate.c	FUNCTION_1
0x40000a1	          0x668910	                      mov word [rax], dx	       212	deflate.c	FUNCTION_1
0x40000a4	        0x836dec01	               sub dword [rbp - 0x14], 1	       213	deflate.c	FUNCTION_1
0x40000a8	        0x837dec00	               cmp dword [rbp - 0x14], 0	       213	deflate.c	FUNCTION_1
0x40000ac	            0x75c6	                           jne 0x4000074	       213	deflate.c	FUNCTION_1
0x40000ae	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       214	deflate.c	FUNCTION_1	DO_1
0x40000b1	          0x8945ec	             mov dword [rbp - 0x14], eax	       214	deflate.c	FUNCTION_1	DO_1
0x40000b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       216	deflate.c	FUNCTION_1	DO_1
0x40000b8	        0x488b4070	            mov rax, qword [rax + 0x70] 	       216	deflate.c	FUNCTION_1	DO_1
0x40000bc	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       216	deflate.c	FUNCTION_1	DO_1
0x40000bf	          0x4801d2	                            add rdx, rdx	       216	deflate.c	FUNCTION_1	DO_1
0x40000c2	          0x4801d0	                            add rax, rdx	       216	deflate.c	FUNCTION_1	DO_1
0x40000c5	        0x488945f8	                mov qword [rbp - 8], rax	       216	deflate.c	FUNCTION_1	DO_1
0x40000c9	      0x48836df802	                  sub qword [rbp - 8], 2	       218	deflate.c	FUNCTION_1
0x40000ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       218	deflate.c	FUNCTION_1
0x40000d2	           0xfb700	                   movzx eax, word [rax]	       218	deflate.c	FUNCTION_1
0x40000d5	           0xfb7c0	                           movzx eax, ax	       218	deflate.c	FUNCTION_1
0x40000d8	          0x8945f4	              mov dword [rbp - 0xc], eax	       218	deflate.c	FUNCTION_1
0x40000db	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       219	deflate.c	FUNCTION_1
0x40000de	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       219	deflate.c	FUNCTION_1
0x40000e1	            0x720a	                            jb 0x40000ed	       219	deflate.c	FUNCTION_1
0x40000e3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       219	deflate.c	FUNCTION_1
0x40000e6	          0x2b45f0	             sub eax, dword [rbp - 0x10]	       219	deflate.c	FUNCTION_1
0x40000e9	            0x89c2	                            mov edx, eax	       219	deflate.c	FUNCTION_1
0x40000eb	            0xeb05	                           jmp 0x40000f2	       219	deflate.c	FUNCTION_1
0x40000ed	      0xba00000000	                              mov edx, 0	       219	deflate.c	FUNCTION_1
0x40000f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       219	deflate.c	FUNCTION_1
0x40000f6	          0x668910	                      mov word [rax], dx	       219	deflate.c	FUNCTION_1
0x40000f9	        0x836dec01	               sub dword [rbp - 0x14], 1	       223	deflate.c	FUNCTION_1	DO_2
0x40000fd	        0x837dec00	               cmp dword [rbp - 0x14], 0	       223	deflate.c	FUNCTION_1	DO_2
0x4000101	            0x75c6	                           jne 0x40000c9	       223	deflate.c	FUNCTION_1	DO_2
0x4000103	              0x90	                                     nop	       225	deflate.c	FUNCTION_1	DO_2
0x4000104	              0x5d	                                 pop rbp	       225	deflate.c	FUNCTION_1	DO_2
0x4000105	              0xc3	                                     ret	       225	deflate.c	FUNCTION_1	DO_2
deflate_stored	ELSE,1:DO,1:FOR,0:functions,0:SWITCH,0:CALL,11:IF,20:WHILE,0	567
0x4003447	              0x55	                                push rbp	      1646	deflate.c	
0x4003448	          0x4889e5	                            mov rbp, rsp	      1646	deflate.c	
0x400344b	        0x4883ec30	                           sub rsp, 0x30	      1646	deflate.c	
0x400344f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1646	deflate.c	
0x4003453	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1646	deflate.c	
0x4003456	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1651	deflate.c	FUNCTION_20
0x400345a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1651	deflate.c	FUNCTION_20
0x400345e	        0x4883e805	                              sub rax, 5	      1651	deflate.c	FUNCTION_20
0x4003462	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1651	deflate.c	FUNCTION_20
0x4003466	          0x8b5250	            mov edx, dword [rdx + 0x50] 	      1651	deflate.c	FUNCTION_20
0x4003469	            0x89d2	                            mov edx, edx	      1651	deflate.c	FUNCTION_20
0x400346b	          0x4839d0	                            cmp rax, rdx	      1651	deflate.c	FUNCTION_20
0x400346e	        0x480f47c2	                          cmova rax, rdx	      1651	deflate.c	FUNCTION_20
0x4003472	          0x8945f8	                mov dword [rbp - 8], eax	      1651	deflate.c	FUNCTION_20
0x4003475	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1657	deflate.c	FUNCTION_20
0x400347c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1658	deflate.c	FUNCTION_20
0x4003480	          0x488b00	                    mov rax, qword [rax]	      1658	deflate.c	FUNCTION_20
0x4003483	          0x8b4008	                mov eax, dword [rax + 8]	      1658	deflate.c	FUNCTION_20
0x4003486	          0x8945fc	                mov dword [rbp - 4], eax	      1658	deflate.c	FUNCTION_20
0x4003489	    0xc745e8ffff00	          mov dword [rbp - 0x18], 0xffff	      1664	deflate.c	FUNCTION_20	DO_1
0x4003490	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1665	deflate.c	FUNCTION_20	DO_1
0x4003494	    0x8b8034170000	          mov eax, dword [rax + 0x1734] 	      1665	deflate.c	FUNCTION_20	DO_1
0x400349a	          0x83c02a	                           add eax, 0x2a	      1665	deflate.c	FUNCTION_20	DO_1
0x400349d	          0xc1f803	                              sar eax, 3	      1665	deflate.c	FUNCTION_20	DO_1
0x40034a0	          0x8945f0	             mov dword [rbp - 0x10], eax	      1665	deflate.c	FUNCTION_20	DO_1
0x40034a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1666	deflate.c	FUNCTION_20	DO_1
0x40034a7	          0x488b00	                    mov rax, qword [rax]	      1666	deflate.c	FUNCTION_20	DO_1
0x40034aa	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1666	deflate.c	FUNCTION_20	DO_1
0x40034ad	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1666	deflate.c	FUNCTION_20	DO_1
0x40034b0	     0xf82a6020000	                            jb 0x400375c	      1666	deflate.c	FUNCTION_20	DO_1
0x40034b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1669	deflate.c	FUNCTION_20	DO_1
0x40034ba	          0x488b00	                    mov rax, qword [rax]	      1669	deflate.c	FUNCTION_20	DO_1
0x40034bd	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1669	deflate.c	FUNCTION_20	DO_1
0x40034c0	          0x2b45f0	             sub eax, dword [rbp - 0x10]	      1669	deflate.c	FUNCTION_20	DO_1
0x40034c3	          0x8945f0	             mov dword [rbp - 0x10], eax	      1669	deflate.c	FUNCTION_20	DO_1
0x40034c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034ca	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034d4	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034db	            0x29c2	                            sub edx, eax	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034dd	            0x89d0	                            mov eax, edx	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034df	          0x8945ec	             mov dword [rbp - 0x14], eax	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034e2	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034e5	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034ec	          0x488b00	                    mov rax, qword [rax]	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034ef	          0x8b4008	                mov eax, dword [rax + 8]	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034f2	            0x89c0	                            mov eax, eax	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034f4	          0x4801c8	                            add rax, rcx	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034f7	          0x4839c2	                            cmp rdx, rax	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034fa	            0x7612	                           jbe 0x400350e	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x40034fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1672	deflate.c	FUNCTION_20	DO_1
0x4003500	          0x488b00	                    mov rax, qword [rax]	      1672	deflate.c	FUNCTION_20	DO_1
0x4003503	          0x8b5008	                mov edx, dword [rax + 8]	      1672	deflate.c	FUNCTION_20	DO_1
0x4003506	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1672	deflate.c	FUNCTION_20	DO_1
0x4003509	             0x1d0	                            add eax, edx	      1672	deflate.c	FUNCTION_20	DO_1
0x400350b	          0x8945e8	             mov dword [rbp - 0x18], eax	      1672	deflate.c	FUNCTION_20	DO_1
0x400350e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1673	deflate.c	FUNCTION_20	DO_1
0x4003511	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1673	deflate.c	FUNCTION_20	DO_1
0x4003514	            0x7606	                           jbe 0x400351c	      1673	deflate.c	FUNCTION_20	DO_1
0x4003516	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1674	deflate.c	FUNCTION_20	DO_1
0x4003519	          0x8945e8	             mov dword [rbp - 0x18], eax	      1674	deflate.c	FUNCTION_20	DO_1
0x400351c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1681	deflate.c	FUNCTION_20	DO_1
0x400351f	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1681	deflate.c	FUNCTION_20	DO_1
0x4003522	            0x7332	                           jae 0x4003556	      1681	deflate.c	FUNCTION_20	DO_1
0x4003524	        0x837de800	               cmp dword [rbp - 0x18], 0	      1681	deflate.c	FUNCTION_20	DO_1
0x4003528	            0x750a	                           jne 0x4003534	      1681	deflate.c	FUNCTION_20	DO_1
0x400352a	        0x837dd404	               cmp dword [rbp - 0x2c], 4	      1681	deflate.c	FUNCTION_20	DO_1
0x400352e	     0xf8529020000	                           jne 0x400375d	      1681	deflate.c	FUNCTION_20	DO_1
0x4003534	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1681	deflate.c	FUNCTION_20	DO_1
0x4003538	     0xf841f020000	                            je 0x400375d	      1681	deflate.c	FUNCTION_20	DO_1
0x400353e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1683	deflate.c	FUNCTION_20	DO_1
0x4003542	          0x488b00	                    mov rax, qword [rax]	      1683	deflate.c	FUNCTION_20	DO_1
0x4003545	          0x8b5008	                mov edx, dword [rax + 8]	      1683	deflate.c	FUNCTION_20	DO_1
0x4003548	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1683	deflate.c	FUNCTION_20	DO_1
0x400354b	             0x1d0	                            add eax, edx	      1683	deflate.c	FUNCTION_20	DO_1
0x400354d	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      1682	deflate.c	FUNCTION_20	DO_1
0x4003550	     0xf8507020000	                           jne 0x400375d	      1682	deflate.c	FUNCTION_20	DO_1
0x4003556	        0x837dd404	               cmp dword [rbp - 0x2c], 4	      1689	deflate.c	FUNCTION_20	DO_1
0x400355a	            0x751b	                           jne 0x4003577	      1689	deflate.c	FUNCTION_20	DO_1
0x400355c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1689	deflate.c	FUNCTION_20	DO_1
0x4003560	          0x488b00	                    mov rax, qword [rax]	      1689	deflate.c	FUNCTION_20	DO_1
0x4003563	          0x8b5008	                mov edx, dword [rax + 8]	      1689	deflate.c	FUNCTION_20	DO_1
0x4003566	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1689	deflate.c	FUNCTION_20	DO_1
0x4003569	             0x1d0	                            add eax, edx	      1689	deflate.c	FUNCTION_20	DO_1
0x400356b	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      1689	deflate.c	FUNCTION_20	DO_1
0x400356e	            0x7507	                           jne 0x4003577	      1689	deflate.c	FUNCTION_20	DO_1
0x4003570	      0xb801000000	                              mov eax, 1	      1689	deflate.c	FUNCTION_20	DO_1
0x4003575	            0xeb05	                           jmp 0x400357c	      1689	deflate.c	FUNCTION_20	DO_1
0x4003577	      0xb800000000	                              mov eax, 0	      1689	deflate.c	FUNCTION_20	DO_1
0x400357c	          0x8945f4	              mov dword [rbp - 0xc], eax	      1689	deflate.c	FUNCTION_20	DO_1
0x400357f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1690	deflate.c	FUNCTION_20	DO_1
0x4003582	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1690	deflate.c	FUNCTION_20	DO_1
0x4003586	            0x89d1	                            mov ecx, edx	      1690	deflate.c	FUNCTION_20	DO_1
0x4003588	      0xba00000000	                              mov edx, 0	      1690	deflate.c	FUNCTION_20	DO_1
0x400358d	      0xbe00000000	                              mov esi, 0	      1690	deflate.c	FUNCTION_20	DO_1
0x4003592	          0x4889c7	                            mov rdi, rax	      1690	deflate.c	FUNCTION_20	DO_1
0x4003595	      0xe800000000	                          call 0x400359a	      1690	deflate.c	FUNCTION_20	DO_1
0x400359a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1693	deflate.c	FUNCTION_20	DO_1
0x400359e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1693	deflate.c	FUNCTION_20	DO_1
0x40035a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1693	deflate.c	FUNCTION_20	DO_1
0x40035a6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1693	deflate.c	FUNCTION_20	DO_1
0x40035aa	        0x4883e804	                              sub rax, 4	      1693	deflate.c	FUNCTION_20	DO_1
0x40035ae	          0x4801d0	                            add rax, rdx	      1693	deflate.c	FUNCTION_20	DO_1
0x40035b1	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1693	deflate.c	FUNCTION_20	DO_1
0x40035b4	            0x8810	                      mov byte [rax], dl	      1693	deflate.c	FUNCTION_20	DO_1
0x40035b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x40035ba	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x40035be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x40035c2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x40035c6	        0x4883e803	                              sub rax, 3	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x40035ca	          0x4801d0	                            add rax, rdx	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x40035cd	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x40035d0	          0xc1ea08	                              shr edx, 8	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x40035d3	            0x8810	                      mov byte [rax], dl	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x40035d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1695	deflate.c	FUNCTION_20	DO_1
0x40035d9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1695	deflate.c	FUNCTION_20	DO_1
0x40035dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1695	deflate.c	FUNCTION_20	DO_1
0x40035e1	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1695	deflate.c	FUNCTION_20	DO_1
0x40035e5	        0x4883e802	                              sub rax, 2	      1695	deflate.c	FUNCTION_20	DO_1
0x40035e9	          0x4801d0	                            add rax, rdx	      1695	deflate.c	FUNCTION_20	DO_1
0x40035ec	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1695	deflate.c	FUNCTION_20	DO_1
0x40035ef	            0xf7d2	                                 not edx	      1695	deflate.c	FUNCTION_20	DO_1
0x40035f1	            0x8810	                      mov byte [rax], dl	      1695	deflate.c	FUNCTION_20	DO_1
0x40035f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1696	deflate.c	FUNCTION_20	DO_1
0x40035f7	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1696	deflate.c	FUNCTION_20	DO_1
0x40035fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1696	deflate.c	FUNCTION_20	DO_1
0x40035ff	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1696	deflate.c	FUNCTION_20	DO_1
0x4003603	        0x4883e801	                              sub rax, 1	      1696	deflate.c	FUNCTION_20	DO_1
0x4003607	          0x4801d0	                            add rax, rdx	      1696	deflate.c	FUNCTION_20	DO_1
0x400360a	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1696	deflate.c	FUNCTION_20	DO_1
0x400360d	            0xf7d2	                                 not edx	      1696	deflate.c	FUNCTION_20	DO_1
0x400360f	          0xc1ea08	                              shr edx, 8	      1696	deflate.c	FUNCTION_20	DO_1
0x4003612	            0x8810	                      mov byte [rax], dl	      1696	deflate.c	FUNCTION_20	DO_1
0x4003614	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1699	deflate.c	FUNCTION_20	DO_1
0x4003618	          0x488b00	                    mov rax, qword [rax]	      1699	deflate.c	FUNCTION_20	DO_1
0x400361b	          0x4889c7	                            mov rdi, rax	      1699	deflate.c	FUNCTION_20	DO_1
0x400361e	      0xe829dcffff	                  call sym.flush_pending	      1699	deflate.c	FUNCTION_20	DO_1
0x4003623	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1708	deflate.c	FUNCTION_20	DO_1
0x4003627	     0xf84ae000000	                            je 0x40036db	      1708	deflate.c	FUNCTION_20	DO_1
0x400362d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1709	deflate.c	FUNCTION_20	DO_1
0x4003630	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      1709	deflate.c	FUNCTION_20	DO_1
0x4003633	            0x7606	                           jbe 0x400363b	      1709	deflate.c	FUNCTION_20	DO_1
0x4003635	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1710	deflate.c	FUNCTION_20	DO_1
0x4003638	          0x8945ec	             mov dword [rbp - 0x14], eax	      1710	deflate.c	FUNCTION_20	DO_1
0x400363b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1711	deflate.c	FUNCTION_20	DO_1
0x400363e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1711	deflate.c	FUNCTION_20	DO_1
0x4003642	        0x488b4860	            mov rcx, qword [rax + 0x60] 	      1711	deflate.c	FUNCTION_20	DO_1
0x4003646	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1711	deflate.c	FUNCTION_20	DO_1
0x400364a	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1711	deflate.c	FUNCTION_20	DO_1
0x4003651	          0x4801c1	                            add rcx, rax	      1711	deflate.c	FUNCTION_20	DO_1
0x4003654	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1711	deflate.c	FUNCTION_20	DO_1
0x4003658	          0x488b00	                    mov rax, qword [rax]	      1711	deflate.c	FUNCTION_20	DO_1
0x400365b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1711	deflate.c	FUNCTION_20	DO_1
0x400365f	          0x4889ce	                            mov rsi, rcx	      1711	deflate.c	FUNCTION_20	DO_1
0x4003662	          0x4889c7	                            mov rdi, rax	      1711	deflate.c	FUNCTION_20	DO_1
0x4003665	      0xe800000000	                          call 0x400366a	      1711	deflate.c	FUNCTION_20	DO_1
0x400366a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x400366e	          0x488b00	                    mov rax, qword [rax]	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x4003671	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x4003675	          0x488b12	                    mov rdx, qword [rdx]	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x4003678	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x400367c	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x400367f	          0x4801ca	                            add rdx, rcx	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x4003682	        0x48895018	             mov qword [rax + 0x18], rdx	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x4003686	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1713	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x400368a	          0x488b00	                    mov rax, qword [rax]	      1713	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x400368d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1713	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x4003691	          0x488b12	                    mov rdx, qword [rdx]	      1713	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x4003694	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1713	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x4003697	          0x2b55ec	             sub edx, dword [rbp - 0x14]	      1713	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x400369a	          0x895020	             mov dword [rax + 0x20], edx	      1713	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x400369d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x40036a1	          0x488b00	                    mov rax, qword [rax]	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x40036a4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x40036a8	          0x488b12	                    mov rdx, qword [rdx]	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x40036ab	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x40036af	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x40036b2	          0x4801ca	                            add rdx, rcx	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x40036b5	        0x48895028	             mov qword [rax + 0x28], rdx	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x40036b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1715	deflate.c	FUNCTION_20	DO_1	IF_5	CALL_3
0x40036bd	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      1715	deflate.c	FUNCTION_20	DO_1	IF_5	CALL_3
0x40036c4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1715	deflate.c	FUNCTION_20	DO_1	IF_5	CALL_3
0x40036c7	          0x4801c2	                            add rdx, rax	      1715	deflate.c	FUNCTION_20	DO_1	IF_5	CALL_3
0x40036ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1715	deflate.c	FUNCTION_20	DO_1	IF_5	CALL_3
0x40036ce	    0x488990980000	             mov qword [rax + 0x98], rdx	      1715	deflate.c	FUNCTION_20	DO_1	IF_5	CALL_3
0x40036d5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1716	deflate.c	FUNCTION_20	DO_1	IF_5
0x40036d8	          0x2945e8	             sub dword [rbp - 0x18], eax	      1716	deflate.c	FUNCTION_20	DO_1	IF_5
0x40036db	        0x837de800	               cmp dword [rbp - 0x18], 0	      1722	deflate.c	FUNCTION_20	DO_1
0x40036df	            0x746f	                            je 0x4003750	      1722	deflate.c	FUNCTION_20	DO_1
0x40036e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1723	deflate.c	FUNCTION_20	DO_1
0x40036e5	          0x488b00	                    mov rax, qword [rax]	      1723	deflate.c	FUNCTION_20	DO_1
0x40036e8	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1723	deflate.c	FUNCTION_20	DO_1
0x40036ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1723	deflate.c	FUNCTION_20	DO_1
0x40036f0	          0x488b00	                    mov rax, qword [rax]	      1723	deflate.c	FUNCTION_20	DO_1
0x40036f3	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1723	deflate.c	FUNCTION_20	DO_1
0x40036f6	          0x4889ce	                            mov rsi, rcx	      1723	deflate.c	FUNCTION_20	DO_1
0x40036f9	          0x4889c7	                            mov rdi, rax	      1723	deflate.c	FUNCTION_20	DO_1
0x40036fc	      0xe84af3ffff	                       call sym.read_buf	      1723	deflate.c	FUNCTION_20	DO_1
0x4003701	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1724	deflate.c	FUNCTION_20	DO_1
0x4003705	          0x488b00	                    mov rax, qword [rax]	      1724	deflate.c	FUNCTION_20	DO_1
0x4003708	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1724	deflate.c	FUNCTION_20	DO_1
0x400370c	          0x488b12	                    mov rdx, qword [rdx]	      1724	deflate.c	FUNCTION_20	DO_1
0x400370f	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      1724	deflate.c	FUNCTION_20	DO_1
0x4003713	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1724	deflate.c	FUNCTION_20	DO_1
0x4003716	          0x4801ca	                            add rdx, rcx	      1724	deflate.c	FUNCTION_20	DO_1
0x4003719	        0x48895018	             mov qword [rax + 0x18], rdx	      1724	deflate.c	FUNCTION_20	DO_1
0x400371d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1725	deflate.c	FUNCTION_20	DO_1
0x4003721	          0x488b00	                    mov rax, qword [rax]	      1725	deflate.c	FUNCTION_20	DO_1
0x4003724	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1725	deflate.c	FUNCTION_20	DO_1
0x4003728	          0x488b12	                    mov rdx, qword [rdx]	      1725	deflate.c	FUNCTION_20	DO_1
0x400372b	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1725	deflate.c	FUNCTION_20	DO_1
0x400372e	          0x2b55e8	             sub edx, dword [rbp - 0x18]	      1725	deflate.c	FUNCTION_20	DO_1
0x4003731	          0x895020	             mov dword [rax + 0x20], edx	      1725	deflate.c	FUNCTION_20	DO_1
0x4003734	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x4003738	          0x488b00	                    mov rax, qword [rax]	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x400373b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x400373f	          0x488b12	                    mov rdx, qword [rdx]	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x4003742	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x4003746	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x4003749	          0x4801ca	                            add rdx, rcx	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x400374c	        0x48895028	             mov qword [rax + 0x28], rdx	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x4003750	        0x837df400	                cmp dword [rbp - 0xc], 0	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4003754	     0xf842ffdffff	                            je 0x4003489	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x400375a	            0xeb01	                           jmp 0x400375d	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x400375c	              0x90	                                     nop	      1667	deflate.c	FUNCTION_20	DO_1
0x400375d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1736	deflate.c	FUNCTION_20
0x4003761	          0x488b00	                    mov rax, qword [rax]	      1736	deflate.c	FUNCTION_20
0x4003764	          0x8b4008	                mov eax, dword [rax + 8]	      1736	deflate.c	FUNCTION_20
0x4003767	          0x2945fc	                sub dword [rbp - 4], eax	      1736	deflate.c	FUNCTION_20
0x400376a	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1737	deflate.c	FUNCTION_20
0x400376e	     0xf849d010000	                            je 0x4003911	      1737	deflate.c	FUNCTION_20
0x4003774	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1741	deflate.c	FUNCTION_20	IF_8
0x4003778	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1741	deflate.c	FUNCTION_20	IF_8
0x400377b	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1741	deflate.c	FUNCTION_20	IF_8
0x400377e	            0x775d	                            ja 0x40037dd	      1741	deflate.c	FUNCTION_20	IF_8
0x4003780	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1742	deflate.c	FUNCTION_20	IF_8
0x4003784	    0xc78028170000	            mov dword [rax + 0x1728], 2 	      1742	deflate.c	FUNCTION_20	IF_8
0x400378e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1743	deflate.c	FUNCTION_20	IF_8
0x4003792	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1743	deflate.c	FUNCTION_20	IF_8
0x4003795	            0x89c6	                            mov esi, eax	      1743	deflate.c	FUNCTION_20	IF_8
0x4003797	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1743	deflate.c	FUNCTION_20	IF_8
0x400379b	          0x488b00	                    mov rax, qword [rax]	      1743	deflate.c	FUNCTION_20	IF_8
0x400379e	          0x488b10	                    mov rdx, qword [rax]	      1743	deflate.c	FUNCTION_20	IF_8
0x40037a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1743	deflate.c	FUNCTION_20	IF_8
0x40037a5	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1743	deflate.c	FUNCTION_20	IF_8
0x40037a8	            0x89c0	                            mov eax, eax	      1743	deflate.c	FUNCTION_20	IF_8
0x40037aa	          0x48f7d8	                                 neg rax	      1743	deflate.c	FUNCTION_20	IF_8
0x40037ad	        0x488d0c02	                    lea rcx, [rdx + rax]	      1743	deflate.c	FUNCTION_20	IF_8
0x40037b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1743	deflate.c	FUNCTION_20	IF_8
0x40037b5	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1743	deflate.c	FUNCTION_20	IF_8
0x40037b9	          0x4889f2	                            mov rdx, rsi	      1743	deflate.c	FUNCTION_20	IF_8
0x40037bc	          0x4889ce	                            mov rsi, rcx	      1743	deflate.c	FUNCTION_20	IF_8
0x40037bf	          0x4889c7	                            mov rdi, rax	      1743	deflate.c	FUNCTION_20	IF_8
0x40037c2	      0xe800000000	                          call 0x40037c7	      1743	deflate.c	FUNCTION_20	IF_8
0x40037c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1744	deflate.c	FUNCTION_20	IF_8
0x40037cb	          0x8b5050	            mov edx, dword [rax + 0x50] 	      1744	deflate.c	FUNCTION_20	IF_8
0x40037ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1744	deflate.c	FUNCTION_20	IF_8
0x40037d2	    0x8990ac000000	             mov dword [rax + 0xac], edx	      1744	deflate.c	FUNCTION_20	IF_8
0x40037d8	      0xe9eb000000	                           jmp 0x40038c8	      1744	deflate.c	FUNCTION_20	IF_8
0x40037dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40037e1	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40037e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40037e9	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40037ef	            0x89c0	                            mov eax, eax	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40037f1	          0x4829c2	                            sub rdx, rax	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40037f4	          0x8b45fc	                mov eax, dword [rbp - 4]	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40037f7	          0x4839c2	                            cmp rdx, rax	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40037fa	            0x777a	                            ja 0x4003876	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40037fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x4003800	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x4003806	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x400380a	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x400380d	            0x29c2	                            sub edx, eax	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x400380f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x4003813	    0x8990ac000000	             mov dword [rax + 0xac], edx	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x4003819	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400381d	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003823	            0x89c6	                            mov esi, eax	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003825	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003829	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400382d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003831	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003834	            0x89c0	                            mov eax, eax	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003836	        0x488d0c02	                    lea rcx, [rdx + rax]	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400383a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400383e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003842	          0x4889f2	                            mov rdx, rsi	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003845	          0x4889ce	                            mov rsi, rcx	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003848	          0x4889c7	                            mov rdi, rax	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400384b	      0xe800000000	                          call 0x4003850	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003850	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4003854	    0x8b8028170000	          mov eax, dword [rax + 0x1728] 	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x400385a	          0x83f801	                              cmp eax, 1	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x400385d	            0x7717	                            ja 0x4003876	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x400385f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4003863	    0x8b8028170000	          mov eax, dword [rax + 0x1728] 	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4003869	          0x8d5001	                      lea edx, [rax + 1]	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x400386c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4003870	    0x899028170000	          mov dword [rax + 0x1728], edx 	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4003876	          0x8b45fc	                mov eax, dword [rbp - 4]	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x4003879	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x400387d	          0x488b12	                    mov rdx, qword [rdx]	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x4003880	          0x488b12	                    mov rdx, qword [rdx]	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x4003883	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x4003886	          0x48f7d9	                                 neg rcx	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x4003889	        0x488d340a	                    lea rsi, [rdx + rcx]	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x400388d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x4003891	        0x488b4a60	            mov rcx, qword [rdx + 0x60] 	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x4003895	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x4003899	    0x8b92ac000000	            mov edx, dword [rdx + 0xac] 	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x400389f	            0x89d2	                            mov edx, edx	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x40038a1	          0x4801d1	                            add rcx, rdx	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x40038a4	          0x4889c2	                            mov rdx, rax	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x40038a7	          0x4889cf	                            mov rdi, rcx	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x40038aa	      0xe800000000	                          call 0x40038af	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x40038af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x40038b3	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x40038b9	          0x8b45fc	                mov eax, dword [rbp - 4]	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x40038bc	             0x1c2	                            add edx, eax	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x40038be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x40038c2	    0x8990ac000000	             mov dword [rax + 0xac], edx	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x40038c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1757	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40038cc	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1757	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40038d2	            0x89c2	                            mov edx, eax	      1757	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40038d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1757	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40038d8	    0x488990980000	             mov qword [rax + 0x98], rdx	      1757	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40038df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x40038e3	    0x8b882c170000	          mov ecx, dword [rax + 0x172c] 	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x40038e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x40038ed	          0x8b5050	            mov edx, dword [rax + 0x50] 	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x40038f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x40038f4	    0x8b802c170000	          mov eax, dword [rax + 0x172c] 	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x40038fa	            0x29c2	                            sub edx, eax	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x40038fc	          0x8b45fc	                mov eax, dword [rbp - 4]	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x40038ff	            0x39c2	                            cmp edx, eax	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4003901	           0xf46c2	                         cmovbe eax, edx	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4003904	          0x8d1401	                    lea edx, [rcx + rax]	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4003907	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x400390b	    0x89902c170000	          mov dword [rax + 0x172c], edx 	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4003911	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003915	    0x488b90381700	          mov rdx, qword [rax + 0x1738] 	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400391c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003920	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003926	            0x89c0	                            mov eax, eax	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4003928	          0x4839c2	                            cmp rdx, rax	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400392b	            0x7317	                           jae 0x4003944	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400392d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1761	deflate.c	FUNCTION_20	IF_8
0x4003931	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1761	deflate.c	FUNCTION_20	IF_8
0x4003937	            0x89c2	                            mov edx, eax	      1761	deflate.c	FUNCTION_20	IF_8
0x4003939	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1761	deflate.c	FUNCTION_20	IF_8
0x400393d	    0x488990381700	          mov qword [rax + 0x1738], rdx 	      1761	deflate.c	FUNCTION_20	IF_8
0x4003944	        0x837df400	                cmp dword [rbp - 0xc], 0	      1764	deflate.c	FUNCTION_20	IF_12
0x4003948	            0x740a	                            je 0x4003954	      1764	deflate.c	FUNCTION_20	IF_12
0x400394a	      0xb803000000	                              mov eax, 3	      1765	deflate.c	FUNCTION_20	IF_12
0x400394f	      0xe910030000	                           jmp 0x4003c64	      1765	deflate.c	FUNCTION_20	IF_12
0x4003954	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1768	deflate.c	FUNCTION_20	IF_13
0x4003958	            0x743a	                            je 0x4003994	      1768	deflate.c	FUNCTION_20	IF_13
0x400395a	        0x837dd404	               cmp dword [rbp - 0x2c], 4	      1768	deflate.c	FUNCTION_20	IF_13
0x400395e	            0x7434	                            je 0x4003994	      1768	deflate.c	FUNCTION_20	IF_13
0x4003960	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1769	deflate.c	FUNCTION_20	IF_13
0x4003964	          0x488b00	                    mov rax, qword [rax]	      1769	deflate.c	FUNCTION_20	IF_13
0x4003967	          0x8b4008	                mov eax, dword [rax + 8]	      1769	deflate.c	FUNCTION_20	IF_13
0x400396a	            0x85c0	                           test eax, eax	      1768	deflate.c	FUNCTION_20	IF_13
0x400396c	            0x7526	                           jne 0x4003994	      1768	deflate.c	FUNCTION_20	IF_13
0x400396e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1769	deflate.c	FUNCTION_20	IF_13
0x4003972	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1769	deflate.c	FUNCTION_20	IF_13
0x4003978	            0x89c2	                            mov edx, eax	      1769	deflate.c	FUNCTION_20	IF_13
0x400397a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1769	deflate.c	FUNCTION_20	IF_13
0x400397e	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1769	deflate.c	FUNCTION_20	IF_13
0x4003985	          0x4839c2	                            cmp rdx, rax	      1769	deflate.c	FUNCTION_20	IF_13
0x4003988	            0x750a	                           jne 0x4003994	      1769	deflate.c	FUNCTION_20	IF_13
0x400398a	      0xb801000000	                              mov eax, 1	      1770	deflate.c	FUNCTION_20
0x400398f	      0xe9d0020000	                           jmp 0x4003c64	      1770	deflate.c	FUNCTION_20
0x4003994	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1773	deflate.c	FUNCTION_20	IF_14
0x4003998	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1773	deflate.c	FUNCTION_20	IF_14
0x400399c	            0x89c2	                            mov edx, eax	      1773	deflate.c	FUNCTION_20	IF_14
0x400399e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1773	deflate.c	FUNCTION_20	IF_14
0x40039a2	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1773	deflate.c	FUNCTION_20	IF_14
0x40039a8	            0x29c2	                            sub edx, eax	      1773	deflate.c	FUNCTION_20	IF_14
0x40039aa	            0x89d0	                            mov eax, edx	      1773	deflate.c	FUNCTION_20	IF_14
0x40039ac	          0x83e801	                              sub eax, 1	      1773	deflate.c	FUNCTION_20	IF_14
0x40039af	          0x8945f0	             mov dword [rbp - 0x10], eax	      1773	deflate.c	FUNCTION_20	IF_14
0x40039b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1774	deflate.c	FUNCTION_20	IF_14
0x40039b6	          0x488b00	                    mov rax, qword [rax]	      1774	deflate.c	FUNCTION_20	IF_14
0x40039b9	          0x8b4008	                mov eax, dword [rax + 8]	      1774	deflate.c	FUNCTION_20	IF_14
0x40039bc	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1774	deflate.c	FUNCTION_20	IF_14
0x40039bf	     0xf86c3000000	                           jbe 0x4003a88	      1774	deflate.c	FUNCTION_20	IF_14
0x40039c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1774	deflate.c	FUNCTION_20	IF_14
0x40039c9	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      1774	deflate.c	FUNCTION_20	IF_14
0x40039d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1774	deflate.c	FUNCTION_20	IF_14
0x40039d4	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1774	deflate.c	FUNCTION_20	IF_14
0x40039d7	            0x89c0	                            mov eax, eax	      1774	deflate.c	FUNCTION_20	IF_14
0x40039d9	          0x4839c2	                            cmp rdx, rax	      1774	deflate.c	FUNCTION_20	IF_14
0x40039dc	     0xf8ca6000000	                            jl 0x4003a88	      1774	deflate.c	FUNCTION_20	IF_14
0x40039e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1776	deflate.c	FUNCTION_20
0x40039e6	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      1776	deflate.c	FUNCTION_20
0x40039ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1776	deflate.c	FUNCTION_20
0x40039f1	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1776	deflate.c	FUNCTION_20
0x40039f4	            0x89c0	                            mov eax, eax	      1776	deflate.c	FUNCTION_20
0x40039f6	          0x4829c2	                            sub rdx, rax	      1776	deflate.c	FUNCTION_20
0x40039f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1776	deflate.c	FUNCTION_20
0x40039fd	    0x488990980000	             mov qword [rax + 0x98], rdx	      1776	deflate.c	FUNCTION_20
0x4003a04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1777	deflate.c	FUNCTION_20
0x4003a08	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1777	deflate.c	FUNCTION_20
0x4003a0e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1777	deflate.c	FUNCTION_20
0x4003a12	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1777	deflate.c	FUNCTION_20
0x4003a15	            0x29c2	                            sub edx, eax	      1777	deflate.c	FUNCTION_20
0x4003a17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1777	deflate.c	FUNCTION_20
0x4003a1b	    0x8990ac000000	             mov dword [rax + 0xac], edx	      1777	deflate.c	FUNCTION_20
0x4003a21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a25	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a2b	            0x89c6	                            mov esi, eax	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a31	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a35	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a39	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a3c	            0x89c0	                            mov eax, eax	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a3e	        0x488d0c02	                    lea rcx, [rdx + rax]	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a42	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a46	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a4a	          0x4889f2	                            mov rdx, rsi	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a4d	          0x4889ce	                            mov rsi, rcx	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a50	          0x4889c7	                            mov rdi, rax	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a53	      0xe800000000	                          call 0x4003a58	      1778	deflate.c	FUNCTION_20	IF_15
0x4003a58	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1779	deflate.c	FUNCTION_20	IF_15
0x4003a5c	    0x8b8028170000	          mov eax, dword [rax + 0x1728] 	      1779	deflate.c	FUNCTION_20	IF_15
0x4003a62	          0x83f801	                              cmp eax, 1	      1779	deflate.c	FUNCTION_20	IF_15
0x4003a65	            0x7717	                            ja 0x4003a7e	      1779	deflate.c	FUNCTION_20	IF_15
0x4003a67	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1780	deflate.c	FUNCTION_20	IF_15
0x4003a6b	    0x8b8028170000	          mov eax, dword [rax + 0x1728] 	      1780	deflate.c	FUNCTION_20	IF_15
0x4003a71	          0x8d5001	                      lea edx, [rax + 1]	      1780	deflate.c	FUNCTION_20	IF_15
0x4003a74	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1780	deflate.c	FUNCTION_20	IF_15
0x4003a78	    0x899028170000	          mov dword [rax + 0x1728], edx 	      1780	deflate.c	FUNCTION_20	IF_15
0x4003a7e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1781	deflate.c	FUNCTION_20	IF_15
0x4003a82	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1781	deflate.c	FUNCTION_20	IF_15
0x4003a85	           0x145f0	             add dword [rbp - 0x10], eax	      1781	deflate.c	FUNCTION_20	IF_15
0x4003a88	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1783	deflate.c	FUNCTION_20	IF_15	IF_16
0x4003a8c	          0x488b00	                    mov rax, qword [rax]	      1783	deflate.c	FUNCTION_20	IF_15	IF_16
0x4003a8f	          0x8b4008	                mov eax, dword [rax + 8]	      1783	deflate.c	FUNCTION_20	IF_15	IF_16
0x4003a92	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1783	deflate.c	FUNCTION_20	IF_15	IF_16
0x4003a95	            0x730d	                           jae 0x4003aa4	      1783	deflate.c	FUNCTION_20	IF_15	IF_16
0x4003a97	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1784	deflate.c	FUNCTION_20	IF_15	IF_16
0x4003a9b	          0x488b00	                    mov rax, qword [rax]	      1784	deflate.c	FUNCTION_20	IF_15	IF_16
0x4003a9e	          0x8b4008	                mov eax, dword [rax + 8]	      1784	deflate.c	FUNCTION_20	IF_15	IF_16
0x4003aa1	          0x8945f0	             mov dword [rbp - 0x10], eax	      1784	deflate.c	FUNCTION_20	IF_15	IF_16
0x4003aa4	        0x837df000	               cmp dword [rbp - 0x10], 0	      1785	deflate.c	FUNCTION_20	IF_15
0x4003aa8	            0x7446	                            je 0x4003af0	      1785	deflate.c	FUNCTION_20	IF_15
0x4003aaa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1786	deflate.c	FUNCTION_20	IF_15
0x4003aae	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1786	deflate.c	FUNCTION_20	IF_15
0x4003ab2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1786	deflate.c	FUNCTION_20	IF_15
0x4003ab6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1786	deflate.c	FUNCTION_20	IF_15
0x4003abc	            0x89c0	                            mov eax, eax	      1786	deflate.c	FUNCTION_20	IF_15
0x4003abe	        0x488d0c02	                    lea rcx, [rdx + rax]	      1786	deflate.c	FUNCTION_20	IF_15
0x4003ac2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1786	deflate.c	FUNCTION_20	IF_15
0x4003ac6	          0x488b00	                    mov rax, qword [rax]	      1786	deflate.c	FUNCTION_20	IF_15
0x4003ac9	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1786	deflate.c	FUNCTION_20	IF_15
0x4003acc	          0x4889ce	                            mov rsi, rcx	      1786	deflate.c	FUNCTION_20	IF_15
0x4003acf	          0x4889c7	                            mov rdi, rax	      1786	deflate.c	FUNCTION_20	IF_15
0x4003ad2	      0xe874efffff	                       call sym.read_buf	      1786	deflate.c	FUNCTION_20	IF_15
0x4003ad7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1787	deflate.c	FUNCTION_20	IF_17
0x4003adb	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1787	deflate.c	FUNCTION_20	IF_17
0x4003ae1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1787	deflate.c	FUNCTION_20	IF_17
0x4003ae4	             0x1c2	                            add edx, eax	      1787	deflate.c	FUNCTION_20	IF_17
0x4003ae6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1787	deflate.c	FUNCTION_20	IF_17
0x4003aea	    0x8990ac000000	             mov dword [rax + 0xac], edx	      1787	deflate.c	FUNCTION_20	IF_17
0x4003af0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1789	deflate.c	FUNCTION_20	IF_18
0x4003af4	    0x488b90381700	          mov rdx, qword [rax + 0x1738] 	      1789	deflate.c	FUNCTION_20	IF_18
0x4003afb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1789	deflate.c	FUNCTION_20	IF_18
0x4003aff	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1789	deflate.c	FUNCTION_20	IF_18
0x4003b05	            0x89c0	                            mov eax, eax	      1789	deflate.c	FUNCTION_20	IF_18
0x4003b07	          0x4839c2	                            cmp rdx, rax	      1789	deflate.c	FUNCTION_20	IF_18
0x4003b0a	            0x7317	                           jae 0x4003b23	      1789	deflate.c	FUNCTION_20	IF_18
0x4003b0c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1790	deflate.c	FUNCTION_20	IF_18	CALL_9
0x4003b10	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1790	deflate.c	FUNCTION_20	IF_18	CALL_9
0x4003b16	            0x89c2	                            mov edx, eax	      1790	deflate.c	FUNCTION_20	IF_18	CALL_9
0x4003b18	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1790	deflate.c	FUNCTION_20	IF_18	CALL_9
0x4003b1c	    0x488990381700	          mov qword [rax + 0x1738], rdx 	      1790	deflate.c	FUNCTION_20	IF_18	CALL_9
0x4003b23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1797	deflate.c	FUNCTION_20
0x4003b27	    0x8b8034170000	          mov eax, dword [rax + 0x1734] 	      1797	deflate.c	FUNCTION_20
0x4003b2d	          0x83c02a	                           add eax, 0x2a	      1797	deflate.c	FUNCTION_20
0x4003b30	          0xc1f803	                              sar eax, 3	      1797	deflate.c	FUNCTION_20
0x4003b33	          0x8945f0	             mov dword [rbp - 0x10], eax	      1797	deflate.c	FUNCTION_20
0x4003b36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1799	deflate.c	FUNCTION_20
0x4003b3a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1799	deflate.c	FUNCTION_20
0x4003b3e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1799	deflate.c	FUNCTION_20
0x4003b41	          0x4829c2	                            sub rdx, rax	      1799	deflate.c	FUNCTION_20
0x4003b44	          0x4889d0	                            mov rax, rdx	      1799	deflate.c	FUNCTION_20
0x4003b47	      0xbaffff0000	                         mov edx, 0xffff	      1799	deflate.c	FUNCTION_20
0x4003b4c	    0x483dffff0000	                         cmp rax, 0xffff	      1799	deflate.c	FUNCTION_20
0x4003b52	        0x480f47c2	                          cmova rax, rdx	      1799	deflate.c	FUNCTION_20
0x4003b56	          0x8945f0	             mov dword [rbp - 0x10], eax	      1799	deflate.c	FUNCTION_20
0x4003b59	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1800	deflate.c	FUNCTION_20
0x4003b5d	          0x8b5050	            mov edx, dword [rax + 0x50] 	      1800	deflate.c	FUNCTION_20
0x4003b60	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1800	deflate.c	FUNCTION_20
0x4003b63	            0x39c2	                            cmp edx, eax	      1800	deflate.c	FUNCTION_20
0x4003b65	           0xf46c2	                         cmovbe eax, edx	      1800	deflate.c	FUNCTION_20
0x4003b68	          0x8945f8	                mov dword [rbp - 8], eax	      1800	deflate.c	FUNCTION_20
0x4003b6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1801	deflate.c	FUNCTION_20
0x4003b6f	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1801	deflate.c	FUNCTION_20
0x4003b75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1801	deflate.c	FUNCTION_20
0x4003b79	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1801	deflate.c	FUNCTION_20
0x4003b80	            0x29c2	                            sub edx, eax	      1801	deflate.c	FUNCTION_20
0x4003b82	            0x89d0	                            mov eax, edx	      1801	deflate.c	FUNCTION_20
0x4003b84	          0x8945ec	             mov dword [rbp - 0x14], eax	      1801	deflate.c	FUNCTION_20
0x4003b87	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1802	deflate.c	FUNCTION_20
0x4003b8a	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1802	deflate.c	FUNCTION_20
0x4003b8d	            0x7338	                           jae 0x4003bc7	      1802	deflate.c	FUNCTION_20
0x4003b8f	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1802	deflate.c	FUNCTION_20
0x4003b93	            0x750a	                           jne 0x4003b9f	      1802	deflate.c	FUNCTION_20
0x4003b95	        0x837dd404	               cmp dword [rbp - 0x2c], 4	      1803	deflate.c	FUNCTION_20
0x4003b99	     0xf85b3000000	                           jne 0x4003c52	      1803	deflate.c	FUNCTION_20
0x4003b9f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1803	deflate.c	FUNCTION_20
0x4003ba3	     0xf84a9000000	                            je 0x4003c52	      1803	deflate.c	FUNCTION_20
0x4003ba9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1804	deflate.c	FUNCTION_20
0x4003bad	          0x488b00	                    mov rax, qword [rax]	      1804	deflate.c	FUNCTION_20
0x4003bb0	          0x8b4008	                mov eax, dword [rax + 8]	      1804	deflate.c	FUNCTION_20
0x4003bb3	            0x85c0	                           test eax, eax	      1803	deflate.c	FUNCTION_20
0x4003bb5	     0xf8597000000	                           jne 0x4003c52	      1803	deflate.c	FUNCTION_20
0x4003bbb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1804	deflate.c	FUNCTION_20
0x4003bbe	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1804	deflate.c	FUNCTION_20
0x4003bc1	     0xf878b000000	                            ja 0x4003c52	      1804	deflate.c	FUNCTION_20
0x4003bc7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1805	deflate.c	FUNCTION_20
0x4003bca	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      1805	deflate.c	FUNCTION_20
0x4003bcd	         0xf4645ec	          cmovbe eax, dword [rbp - 0x14]	      1805	deflate.c	FUNCTION_20
0x4003bd1	          0x8945e8	             mov dword [rbp - 0x18], eax	      1805	deflate.c	FUNCTION_20
0x4003bd4	        0x837dd404	               cmp dword [rbp - 0x2c], 4	      1807	deflate.c	FUNCTION_20	IF_20
0x4003bd8	            0x751d	                           jne 0x4003bf7	      1807	deflate.c	FUNCTION_20	IF_20
0x4003bda	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1806	deflate.c	FUNCTION_20	IF_20
0x4003bde	          0x488b00	                    mov rax, qword [rax]	      1806	deflate.c	FUNCTION_20	IF_20
0x4003be1	          0x8b4008	                mov eax, dword [rax + 8]	      1806	deflate.c	FUNCTION_20	IF_20
0x4003be4	            0x85c0	                           test eax, eax	      1806	deflate.c	FUNCTION_20	IF_20
0x4003be6	            0x750f	                           jne 0x4003bf7	      1806	deflate.c	FUNCTION_20	IF_20
0x4003be8	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1807	deflate.c	FUNCTION_20	IF_20
0x4003beb	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1807	deflate.c	FUNCTION_20	IF_20
0x4003bee	            0x7507	                           jne 0x4003bf7	      1807	deflate.c	FUNCTION_20	IF_20
0x4003bf0	      0xb801000000	                              mov eax, 1	      1807	deflate.c	FUNCTION_20	IF_20
0x4003bf5	            0xeb05	                           jmp 0x4003bfc	      1807	deflate.c	FUNCTION_20	IF_20
0x4003bf7	      0xb800000000	                              mov eax, 0	      1807	deflate.c	FUNCTION_20	IF_20
0x4003bfc	          0x8945f4	              mov dword [rbp - 0xc], eax	      1806	deflate.c	FUNCTION_20	IF_20
0x4003bff	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1808	deflate.c	FUNCTION_20	IF_20
0x4003c02	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1808	deflate.c	FUNCTION_20	IF_20
0x4003c05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1808	deflate.c	FUNCTION_20	IF_20
0x4003c09	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      1808	deflate.c	FUNCTION_20	IF_20
0x4003c0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1808	deflate.c	FUNCTION_20	IF_20
0x4003c11	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1808	deflate.c	FUNCTION_20	IF_20
0x4003c18	          0x4801c6	                            add rsi, rax	      1808	deflate.c	FUNCTION_20	IF_20
0x4003c1b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1808	deflate.c	FUNCTION_20	IF_20
0x4003c1f	          0x4889c7	                            mov rdi, rax	      1808	deflate.c	FUNCTION_20	IF_20
0x4003c22	      0xe800000000	                          call 0x4003c27	      1808	deflate.c	FUNCTION_20	IF_20
0x4003c27	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1809	deflate.c	FUNCTION_20	IF_20
0x4003c2b	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      1809	deflate.c	FUNCTION_20	IF_20
0x4003c32	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1809	deflate.c	FUNCTION_20	IF_20
0x4003c35	          0x4801c2	                            add rdx, rax	      1809	deflate.c	FUNCTION_20	IF_20
0x4003c38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1809	deflate.c	FUNCTION_20	IF_20
0x4003c3c	    0x488990980000	             mov qword [rax + 0x98], rdx	      1809	deflate.c	FUNCTION_20	IF_20
0x4003c43	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1810	deflate.c	FUNCTION_20	IF_20
0x4003c47	          0x488b00	                    mov rax, qword [rax]	      1810	deflate.c	FUNCTION_20	IF_20
0x4003c4a	          0x4889c7	                            mov rdi, rax	      1810	deflate.c	FUNCTION_20	IF_20
0x4003c4d	      0xe8fad5ffff	                  call sym.flush_pending	      1810	deflate.c	FUNCTION_20	IF_20
0x4003c52	        0x837df400	                cmp dword [rbp - 0xc], 0	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x4003c56	            0x7407	                            je 0x4003c5f	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x4003c58	      0xb802000000	                              mov eax, 2	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x4003c5d	            0xeb05	                           jmp 0x4003c64	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x4003c5f	      0xb800000000	                              mov eax, 0	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x4003c64	              0xc9	                                   leave	      1815	deflate.c	FUNCTION_20	IF_20
0x4003c65	              0xc3	                                     ret	      1815	deflate.c	FUNCTION_20	IF_20
deflatePrime	ELSE,0:DO,1:FOR,0:functions,0:SWITCH,0:CALL,2:IF,3:WHILE,0	75
0x4000c74	              0x55	                                push rbp	       546	deflate.c	
0x4000c75	          0x4889e5	                            mov rbp, rsp	       546	deflate.c	
0x4000c78	        0x4883ec20	                           sub rsp, 0x20	       546	deflate.c	
0x4000c7c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       546	deflate.c	
0x4000c80	          0x8975e4	             mov dword [rbp - 0x1c], esi	       546	deflate.c	
0x4000c83	          0x8955e0	             mov dword [rbp - 0x20], edx	       546	deflate.c	
0x4000c86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       550	deflate.c	FUNCTION_7
0x4000c8a	          0x4889c7	                            mov rdi, rax	       550	deflate.c	FUNCTION_7
0x4000c8d	      0xe8e1f8ffff	              call sym.deflateStateCheck	       550	deflate.c	FUNCTION_7
0x4000c92	            0x85c0	                           test eax, eax	       550	deflate.c	FUNCTION_7
0x4000c94	            0x740a	                            je 0x4000ca0	       550	deflate.c	FUNCTION_7
0x4000c96	      0xb8feffffff	                     mov eax, 0xfffffffe	       550	deflate.c	FUNCTION_7
0x4000c9b	      0xe9da000000	                           jmp 0x4000d7a	       550	deflate.c	FUNCTION_7
0x4000ca0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       551	deflate.c	FUNCTION_7
0x4000ca4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       551	deflate.c	FUNCTION_7
0x4000ca8	        0x488945f8	                mov qword [rbp - 8], rax	       551	deflate.c	FUNCTION_7
0x4000cac	        0x488b45f8	                mov rax, qword [rbp - 8]	       552	deflate.c	FUNCTION_7
0x4000cb0	    0x488b90101700	          mov rdx, qword [rax + 0x1710] 	       552	deflate.c	FUNCTION_7
0x4000cb7	        0x488b45f8	                mov rax, qword [rbp - 8]	       552	deflate.c	FUNCTION_7
0x4000cbb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       552	deflate.c	FUNCTION_7
0x4000cbf	        0x4883c002	                              add rax, 2	       552	deflate.c	FUNCTION_7
0x4000cc3	          0x4839c2	                            cmp rdx, rax	       552	deflate.c	FUNCTION_7
0x4000cc6	            0x730a	                           jae 0x4000cd2	       552	deflate.c	FUNCTION_7
0x4000cc8	      0xb8fbffffff	                     mov eax, 0xfffffffb	       553	deflate.c	FUNCTION_7
0x4000ccd	      0xe9a8000000	                           jmp 0x4000d7a	       553	deflate.c	FUNCTION_7
0x4000cd2	        0x488b45f8	                mov rax, qword [rbp - 8]	       555	deflate.c	FUNCTION_7
0x4000cd6	    0x8b8034170000	          mov eax, dword [rax + 0x1734] 	       555	deflate.c	FUNCTION_7
0x4000cdc	      0xba10000000	                           mov edx, 0x10	       555	deflate.c	FUNCTION_7
0x4000ce1	            0x29c2	                            sub edx, eax	       555	deflate.c	FUNCTION_7
0x4000ce3	            0x89d0	                            mov eax, edx	       555	deflate.c	FUNCTION_7
0x4000ce5	          0x8945f4	              mov dword [rbp - 0xc], eax	       555	deflate.c	FUNCTION_7
0x4000ce8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       556	deflate.c	FUNCTION_7	IF_2
0x4000ceb	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       556	deflate.c	FUNCTION_7	IF_2
0x4000cee	            0x7e06	                           jle 0x4000cf6	       556	deflate.c	FUNCTION_7	IF_2
0x4000cf0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       557	deflate.c	FUNCTION_7	IF_2
0x4000cf3	          0x8945f4	              mov dword [rbp - 0xc], eax	       557	deflate.c	FUNCTION_7	IF_2
0x4000cf6	        0x488b45f8	                mov rax, qword [rbp - 8]	       558	deflate.c	FUNCTION_7	DO_1
0x4000cfa	     0xfb780301700	         movzx eax, word [rax + 0x1730] 	       558	deflate.c	FUNCTION_7	DO_1
0x4000d01	            0x89c6	                            mov esi, eax	       558	deflate.c	FUNCTION_7	DO_1
0x4000d03	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       558	deflate.c	FUNCTION_7	DO_1
0x4000d06	      0xba01000000	                              mov edx, 1	       558	deflate.c	FUNCTION_7	DO_1
0x4000d0b	            0x89c1	                            mov ecx, eax	       558	deflate.c	FUNCTION_7	DO_1
0x4000d0d	            0xd3e2	                             shl edx, cl	       558	deflate.c	FUNCTION_7	DO_1
0x4000d0f	            0x89d0	                            mov eax, edx	       558	deflate.c	FUNCTION_7	DO_1
0x4000d11	          0x83e801	                              sub eax, 1	       558	deflate.c	FUNCTION_7	DO_1
0x4000d14	          0x2345e0	             and eax, dword [rbp - 0x20]	       558	deflate.c	FUNCTION_7	DO_1
0x4000d17	            0x89c2	                            mov edx, eax	       558	deflate.c	FUNCTION_7	DO_1
0x4000d19	        0x488b45f8	                mov rax, qword [rbp - 8]	       558	deflate.c	FUNCTION_7	DO_1
0x4000d1d	    0x8b8034170000	          mov eax, dword [rax + 0x1734] 	       558	deflate.c	FUNCTION_7	DO_1
0x4000d23	            0x89c1	                            mov ecx, eax	       558	deflate.c	FUNCTION_7	DO_1
0x4000d25	            0xd3e2	                             shl edx, cl	       558	deflate.c	FUNCTION_7	DO_1
0x4000d27	            0x89d0	                            mov eax, edx	       558	deflate.c	FUNCTION_7	DO_1
0x4000d29	             0x9f0	                             or eax, esi	       558	deflate.c	FUNCTION_7	DO_1
0x4000d2b	            0x89c2	                            mov edx, eax	       558	deflate.c	FUNCTION_7	DO_1
0x4000d2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       558	deflate.c	FUNCTION_7	DO_1
0x4000d31	    0x668990301700	            mov word [rax + 0x1730], dx 	       558	deflate.c	FUNCTION_7	DO_1
0x4000d38	        0x488b45f8	                mov rax, qword [rbp - 8]	       559	deflate.c	FUNCTION_7	DO_1
0x4000d3c	    0x8b9034170000	          mov edx, dword [rax + 0x1734] 	       559	deflate.c	FUNCTION_7	DO_1
0x4000d42	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       559	deflate.c	FUNCTION_7	DO_1
0x4000d45	             0x1c2	                            add edx, eax	       559	deflate.c	FUNCTION_7	DO_1
0x4000d47	        0x488b45f8	                mov rax, qword [rbp - 8]	       559	deflate.c	FUNCTION_7	DO_1
0x4000d4b	    0x899034170000	          mov dword [rax + 0x1734], edx 	       559	deflate.c	FUNCTION_7	DO_1
0x4000d51	        0x488b45f8	                mov rax, qword [rbp - 8]	       560	deflate.c	FUNCTION_7	DO_1	IF_3
0x4000d55	          0x4889c7	                            mov rdi, rax	       560	deflate.c	FUNCTION_7	DO_1	IF_3
0x4000d58	      0xe800000000	                          call 0x4000d5d	       560	deflate.c	FUNCTION_7	DO_1	IF_3
0x4000d5d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       561	deflate.c	FUNCTION_7	DO_1	IF_3
0x4000d60	            0x89c1	                            mov ecx, eax	       561	deflate.c	FUNCTION_7	DO_1	IF_3
0x4000d62	          0xd37de0	              sar dword [rbp - 0x20], cl	       561	deflate.c	FUNCTION_7	DO_1	IF_3
0x4000d65	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       562	deflate.c	FUNCTION_7	DO_1
0x4000d68	          0x2945e4	             sub dword [rbp - 0x1c], eax	       562	deflate.c	FUNCTION_7	DO_1
0x4000d6b	        0x837de400	               cmp dword [rbp - 0x1c], 0	       563	deflate.c	FUNCTION_7	DO_1
0x4000d6f	     0xf855dffffff	                           jne 0x4000cd2	       563	deflate.c	FUNCTION_7	DO_1
0x4000d75	      0xb800000000	                              mov eax, 0	       564	deflate.c	FUNCTION_7	DO_1	CALL_2
0x4000d7a	              0xc9	                                   leave	       565	deflate.c	FUNCTION_7	DO_1
0x4000d7b	              0xc3	                                     ret	       565	deflate.c	FUNCTION_7	DO_1
deflateTune	ELSE,0:DO,0:FOR,0:functions,0:SWITCH,0:CALL,1:IF,1:WHILE,0	33
0x4000fb3	              0x55	                                push rbp	       623	deflate.c	
0x4000fb4	          0x4889e5	                            mov rbp, rsp	       623	deflate.c	
0x4000fb7	        0x4883ec28	                           sub rsp, 0x28	       623	deflate.c	
0x4000fbb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       623	deflate.c	
0x4000fbf	          0x8975e4	             mov dword [rbp - 0x1c], esi	       623	deflate.c	
0x4000fc2	          0x8955e0	             mov dword [rbp - 0x20], edx	       623	deflate.c	
0x4000fc5	          0x894ddc	             mov dword [rbp - 0x24], ecx	       623	deflate.c	
0x4000fc8	        0x448945d8	             mov dword [rbp - 0x28], r8d	       623	deflate.c	
0x4000fcc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       626	deflate.c	
0x4000fd0	          0x4889c7	                            mov rdi, rax	       626	deflate.c	
0x4000fd3	      0xe89bf5ffff	              call sym.deflateStateCheck	       626	deflate.c	
0x4000fd8	            0x85c0	                           test eax, eax	       626	deflate.c	
0x4000fda	            0x7407	                            je 0x4000fe3	       626	deflate.c	
0x4000fdc	      0xb8feffffff	                     mov eax, 0xfffffffe	       626	deflate.c	
0x4000fe1	            0xeb45	                           jmp 0x4001028	       626	deflate.c	
0x4000fe3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       627	deflate.c	FUNCTION_9
0x4000fe7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       627	deflate.c	FUNCTION_9
0x4000feb	        0x488945f8	                mov qword [rbp - 8], rax	       627	deflate.c	FUNCTION_9
0x4000fef	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       628	deflate.c	FUNCTION_9
0x4000ff2	        0x488b45f8	                mov rax, qword [rbp - 8]	       628	deflate.c	FUNCTION_9
0x4000ff6	    0x8990cc000000	             mov dword [rax + 0xcc], edx	       628	deflate.c	FUNCTION_9
0x4000ffc	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       629	deflate.c	FUNCTION_9
0x4000fff	        0x488b45f8	                mov rax, qword [rbp - 8]	       629	deflate.c	FUNCTION_9
0x4001003	    0x8990c0000000	             mov dword [rax + 0xc0], edx	       629	deflate.c	FUNCTION_9
0x4001009	        0x488b45f8	                mov rax, qword [rbp - 8]	       630	deflate.c	FUNCTION_9	CALL_1
0x400100d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       630	deflate.c	FUNCTION_9	CALL_1
0x4001010	    0x8990d0000000	             mov dword [rax + 0xd0], edx	       630	deflate.c	FUNCTION_9	CALL_1
0x4001016	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       631	deflate.c	FUNCTION_9
0x4001019	        0x488b45f8	                mov rax, qword [rbp - 8]	       631	deflate.c	FUNCTION_9
0x400101d	    0x8990bc000000	             mov dword [rax + 0xbc], edx	       631	deflate.c	FUNCTION_9
0x4001023	      0xb800000000	                              mov eax, 0	       632	deflate.c	FUNCTION_9
0x4001028	              0xc9	                                   leave	       633	deflate.c	FUNCTION_9
0x4001029	              0xc3	                                     ret	       633	deflate.c	FUNCTION_9
deflateCopy	ELSE,0:DO,0:FOR,0:functions,0:SWITCH,0:CALL,13:IF,3:WHILE,0	208
0x400272c	              0x55	                                push rbp	      1105	deflate.c	
0x400272d	          0x4889e5	                            mov rbp, rsp	      1105	deflate.c	
0x4002730	        0x4883ec30	                           sub rsp, 0x30	      1105	deflate.c	
0x4002734	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1105	deflate.c	
0x4002738	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1105	deflate.c	
0x400273c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1114	deflate.c	FUNCTION_15
0x4002740	          0x4889c7	                            mov rdi, rax	      1114	deflate.c	FUNCTION_15
0x4002743	      0xe82bdeffff	              call sym.deflateStateCheck	      1114	deflate.c	FUNCTION_15
0x4002748	            0x85c0	                           test eax, eax	      1114	deflate.c	FUNCTION_15
0x400274a	            0x7507	                           jne 0x4002753	      1114	deflate.c	FUNCTION_15
0x400274c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1114	deflate.c	FUNCTION_15
0x4002751	            0x750a	                           jne 0x400275d	      1114	deflate.c	FUNCTION_15
0x4002753	      0xb8feffffff	                     mov eax, 0xfffffffe	      1115	deflate.c	FUNCTION_15
0x4002758	      0xe9ec020000	                           jmp 0x4002a49	      1115	deflate.c	FUNCTION_15
0x400275d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1118	deflate.c	FUNCTION_15	IF_1	CALL_1
0x4002761	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1118	deflate.c	FUNCTION_15	IF_1	CALL_1
0x4002765	        0x488945e8	             mov qword [rbp - 0x18], rax	      1118	deflate.c	FUNCTION_15	IF_1	CALL_1
0x4002769	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1120	deflate.c	FUNCTION_15	IF_1
0x400276d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1120	deflate.c	FUNCTION_15	IF_1
0x4002771	      0xba70000000	                           mov edx, 0x70	      1120	deflate.c	FUNCTION_15	IF_1
0x4002776	          0x4889ce	                            mov rsi, rcx	      1120	deflate.c	FUNCTION_15	IF_1
0x4002779	          0x4889c7	                            mov rdi, rax	      1120	deflate.c	FUNCTION_15	IF_1
0x400277c	      0xe800000000	                          call 0x4002781	      1120	deflate.c	FUNCTION_15	IF_1
0x4002781	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1122	deflate.c	FUNCTION_15
0x4002785	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1122	deflate.c	FUNCTION_15
0x4002789	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1122	deflate.c	FUNCTION_15
0x400278d	        0x488b4a50	            mov rcx, qword [rdx + 0x50] 	      1122	deflate.c	FUNCTION_15
0x4002791	      0xba40170000	                         mov edx, 0x1740	      1122	deflate.c	FUNCTION_15
0x4002796	      0xbe01000000	                              mov esi, 1	      1122	deflate.c	FUNCTION_15
0x400279b	          0x4889cf	                            mov rdi, rcx	      1122	deflate.c	FUNCTION_15
0x400279e	            0xffd0	                                call rax	      1122	deflate.c	FUNCTION_15
0x40027a0	        0x488945f0	             mov qword [rbp - 0x10], rax	      1122	deflate.c	FUNCTION_15
0x40027a4	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1123	deflate.c	FUNCTION_15
0x40027a9	            0x750a	                           jne 0x40027b5	      1123	deflate.c	FUNCTION_15
0x40027ab	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1123	deflate.c	FUNCTION_15
0x40027b0	      0xe994020000	                           jmp 0x4002a49	      1123	deflate.c	FUNCTION_15
0x40027b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1124	deflate.c	FUNCTION_15	CALL_2
0x40027b9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1124	deflate.c	FUNCTION_15	CALL_2
0x40027bd	        0x48895038	             mov qword [rax + 0x38], rdx	      1124	deflate.c	FUNCTION_15	CALL_2
0x40027c1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1125	deflate.c	FUNCTION_15
0x40027c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1125	deflate.c	FUNCTION_15
0x40027c9	      0xba40170000	                         mov edx, 0x1740	      1125	deflate.c	FUNCTION_15
0x40027ce	          0x4889ce	                            mov rsi, rcx	      1125	deflate.c	FUNCTION_15
0x40027d1	          0x4889c7	                            mov rdi, rax	      1125	deflate.c	FUNCTION_15
0x40027d4	      0xe800000000	                          call 0x40027d9	      1125	deflate.c	FUNCTION_15
0x40027d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1126	deflate.c	FUNCTION_15	CALL_3
0x40027dd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1126	deflate.c	FUNCTION_15	CALL_3
0x40027e1	          0x488910	                    mov qword [rax], rdx	      1126	deflate.c	FUNCTION_15	CALL_3
0x40027e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1128	deflate.c	FUNCTION_15
0x40027e8	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1128	deflate.c	FUNCTION_15
0x40027ec	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1128	deflate.c	FUNCTION_15
0x40027f0	          0x8b7250	            mov esi, dword [rdx + 0x50] 	      1128	deflate.c	FUNCTION_15
0x40027f3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1128	deflate.c	FUNCTION_15
0x40027f7	        0x488b4a50	            mov rcx, qword [rdx + 0x50] 	      1128	deflate.c	FUNCTION_15
0x40027fb	      0xba02000000	                              mov edx, 2	      1128	deflate.c	FUNCTION_15
0x4002800	          0x4889cf	                            mov rdi, rcx	      1128	deflate.c	FUNCTION_15
0x4002803	            0xffd0	                                call rax	      1128	deflate.c	FUNCTION_15
0x4002805	          0x4889c2	                            mov rdx, rax	      1128	deflate.c	FUNCTION_15
0x4002808	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1128	deflate.c	FUNCTION_15
0x400280c	        0x48895060	             mov qword [rax + 0x60], rdx	      1128	deflate.c	FUNCTION_15
0x4002810	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1129	deflate.c	FUNCTION_15	CALL_4
0x4002814	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1129	deflate.c	FUNCTION_15	CALL_4
0x4002818	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1129	deflate.c	FUNCTION_15	CALL_4
0x400281c	          0x8b7250	            mov esi, dword [rdx + 0x50] 	      1129	deflate.c	FUNCTION_15	CALL_4
0x400281f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1129	deflate.c	FUNCTION_15	CALL_4
0x4002823	        0x488b4a50	            mov rcx, qword [rdx + 0x50] 	      1129	deflate.c	FUNCTION_15	CALL_4
0x4002827	      0xba02000000	                              mov edx, 2	      1129	deflate.c	FUNCTION_15	CALL_4
0x400282c	          0x4889cf	                            mov rdi, rcx	      1129	deflate.c	FUNCTION_15	CALL_4
0x400282f	            0xffd0	                                call rax	      1129	deflate.c	FUNCTION_15	CALL_4
0x4002831	          0x4889c2	                            mov rdx, rax	      1129	deflate.c	FUNCTION_15	CALL_4
0x4002834	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1129	deflate.c	FUNCTION_15	CALL_4
0x4002838	        0x48895070	             mov qword [rax + 0x70], rdx	      1129	deflate.c	FUNCTION_15	CALL_4
0x400283c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1130	deflate.c	FUNCTION_15
0x4002840	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1130	deflate.c	FUNCTION_15
0x4002844	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1130	deflate.c	FUNCTION_15
0x4002848	    0x8bb284000000	            mov esi, dword [rdx + 0x84] 	      1130	deflate.c	FUNCTION_15
0x400284e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1130	deflate.c	FUNCTION_15
0x4002852	        0x488b4a50	            mov rcx, qword [rdx + 0x50] 	      1130	deflate.c	FUNCTION_15
0x4002856	      0xba02000000	                              mov edx, 2	      1130	deflate.c	FUNCTION_15
0x400285b	          0x4889cf	                            mov rdi, rcx	      1130	deflate.c	FUNCTION_15
0x400285e	            0xffd0	                                call rax	      1130	deflate.c	FUNCTION_15
0x4002860	          0x4889c2	                            mov rdx, rax	      1130	deflate.c	FUNCTION_15
0x4002863	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1130	deflate.c	FUNCTION_15
0x4002867	        0x48895078	             mov qword [rax + 0x78], rdx	      1130	deflate.c	FUNCTION_15
0x400286b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1131	deflate.c	FUNCTION_15
0x400286f	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1131	deflate.c	FUNCTION_15
0x4002873	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1131	deflate.c	FUNCTION_15
0x4002877	    0x8bb208170000	          mov esi, dword [rdx + 0x1708] 	      1131	deflate.c	FUNCTION_15
0x400287d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1131	deflate.c	FUNCTION_15
0x4002881	        0x488b4a50	            mov rcx, qword [rdx + 0x50] 	      1131	deflate.c	FUNCTION_15
0x4002885	      0xba04000000	                              mov edx, 4	      1131	deflate.c	FUNCTION_15
0x400288a	          0x4889cf	                            mov rdi, rcx	      1131	deflate.c	FUNCTION_15
0x400288d	            0xffd0	                                call rax	      1131	deflate.c	FUNCTION_15
0x400288f	        0x488945f8	                mov qword [rbp - 8], rax	      1131	deflate.c	FUNCTION_15
0x4002893	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1132	deflate.c	FUNCTION_15	CALL_5
0x4002897	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1132	deflate.c	FUNCTION_15	CALL_5
0x400289b	        0x48895010	             mov qword [rax + 0x10], rdx	      1132	deflate.c	FUNCTION_15	CALL_5
0x400289f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028a3	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028a7	          0x4885c0	                           test rax, rax	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028aa	            0x7427	                            je 0x40028d3	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028b0	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028b4	          0x4885c0	                           test rax, rax	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028b7	            0x741a	                            je 0x40028d3	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028b9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028bd	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028c1	          0x4885c0	                           test rax, rax	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028c4	            0x740d	                            je 0x40028d3	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1135	deflate.c	FUNCTION_15	CALL_8
0x40028ca	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1135	deflate.c	FUNCTION_15	CALL_8
0x40028ce	          0x4885c0	                           test rax, rax	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028d1	            0x7516	                           jne 0x40028e9	      1134	deflate.c	FUNCTION_15	CALL_7
0x40028d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1136	deflate.c	FUNCTION_15
0x40028d7	          0x4889c7	                            mov rdi, rax	      1136	deflate.c	FUNCTION_15
0x40028da	      0xe800000000	                          call 0x40028df	      1136	deflate.c	FUNCTION_15
0x40028df	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1137	deflate.c	FUNCTION_15
0x40028e4	      0xe960010000	                           jmp 0x4002a49	      1137	deflate.c	FUNCTION_15
0x40028e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1140	deflate.c	FUNCTION_15	IF_3	CALL_9
0x40028ed	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1140	deflate.c	FUNCTION_15	IF_3	CALL_9
0x40028f0	             0x1c0	                            add eax, eax	      1140	deflate.c	FUNCTION_15	IF_3	CALL_9
0x40028f2	            0x89c2	                            mov edx, eax	      1140	deflate.c	FUNCTION_15	IF_3	CALL_9
0x40028f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1140	deflate.c	FUNCTION_15	IF_3	CALL_9
0x40028f8	        0x488b4860	            mov rcx, qword [rax + 0x60] 	      1140	deflate.c	FUNCTION_15	IF_3	CALL_9
0x40028fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1140	deflate.c	FUNCTION_15	IF_3	CALL_9
0x4002900	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1140	deflate.c	FUNCTION_15	IF_3	CALL_9
0x4002904	          0x4889ce	                            mov rsi, rcx	      1140	deflate.c	FUNCTION_15	IF_3	CALL_9
0x4002907	          0x4889c7	                            mov rdi, rax	      1140	deflate.c	FUNCTION_15	IF_3	CALL_9
0x400290a	      0xe800000000	                          call 0x400290f	      1140	deflate.c	FUNCTION_15	IF_3	CALL_9
0x400290f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1141	deflate.c	FUNCTION_15	IF_3
0x4002913	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1141	deflate.c	FUNCTION_15	IF_3
0x4002916	            0x89c0	                            mov eax, eax	      1141	deflate.c	FUNCTION_15	IF_3
0x4002918	        0x488d1400	                    lea rdx, [rax + rax]	      1141	deflate.c	FUNCTION_15	IF_3
0x400291c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1141	deflate.c	FUNCTION_15	IF_3
0x4002920	        0x488b4870	            mov rcx, qword [rax + 0x70] 	      1141	deflate.c	FUNCTION_15	IF_3
0x4002924	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1141	deflate.c	FUNCTION_15	IF_3
0x4002928	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1141	deflate.c	FUNCTION_15	IF_3
0x400292c	          0x4889ce	                            mov rsi, rcx	      1141	deflate.c	FUNCTION_15	IF_3
0x400292f	          0x4889c7	                            mov rdi, rax	      1141	deflate.c	FUNCTION_15	IF_3
0x4002932	      0xe800000000	                          call 0x4002937	      1141	deflate.c	FUNCTION_15	IF_3
0x4002937	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1142	deflate.c	FUNCTION_15	IF_3
0x400293b	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1142	deflate.c	FUNCTION_15	IF_3
0x4002941	            0x89c0	                            mov eax, eax	      1142	deflate.c	FUNCTION_15	IF_3
0x4002943	        0x488d1400	                    lea rdx, [rax + rax]	      1142	deflate.c	FUNCTION_15	IF_3
0x4002947	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1142	deflate.c	FUNCTION_15	IF_3
0x400294b	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1142	deflate.c	FUNCTION_15	IF_3
0x400294f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1142	deflate.c	FUNCTION_15	IF_3
0x4002953	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1142	deflate.c	FUNCTION_15	IF_3
0x4002957	          0x4889ce	                            mov rsi, rcx	      1142	deflate.c	FUNCTION_15	IF_3
0x400295a	          0x4889c7	                            mov rdi, rax	      1142	deflate.c	FUNCTION_15	IF_3
0x400295d	      0xe800000000	                          call 0x4002962	      1142	deflate.c	FUNCTION_15	IF_3
0x4002962	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1143	deflate.c	FUNCTION_15
0x4002966	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1143	deflate.c	FUNCTION_15
0x400296a	            0x89c2	                            mov edx, eax	      1143	deflate.c	FUNCTION_15
0x400296c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1143	deflate.c	FUNCTION_15
0x4002970	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1143	deflate.c	FUNCTION_15
0x4002974	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1143	deflate.c	FUNCTION_15
0x4002978	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1143	deflate.c	FUNCTION_15
0x400297c	          0x4889ce	                            mov rsi, rcx	      1143	deflate.c	FUNCTION_15
0x400297f	          0x4889c7	                            mov rdi, rax	      1143	deflate.c	FUNCTION_15
0x4002982	      0xe800000000	                          call 0x4002987	      1143	deflate.c	FUNCTION_15
0x4002987	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1145	deflate.c	FUNCTION_15	CALL_11
0x400298b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1145	deflate.c	FUNCTION_15	CALL_11
0x400298f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1145	deflate.c	FUNCTION_15	CALL_11
0x4002993	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1145	deflate.c	FUNCTION_15	CALL_11
0x4002997	          0x4889c1	                            mov rcx, rax	      1145	deflate.c	FUNCTION_15	CALL_11
0x400299a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1145	deflate.c	FUNCTION_15	CALL_11
0x400299e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1145	deflate.c	FUNCTION_15	CALL_11
0x40029a2	          0x4829c1	                            sub rcx, rax	      1145	deflate.c	FUNCTION_15	CALL_11
0x40029a5	          0x4889c8	                            mov rax, rcx	      1145	deflate.c	FUNCTION_15	CALL_11
0x40029a8	          0x4801c2	                            add rdx, rax	      1145	deflate.c	FUNCTION_15	CALL_11
0x40029ab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1145	deflate.c	FUNCTION_15	CALL_11
0x40029af	        0x48895020	             mov qword [rax + 0x20], rdx	      1145	deflate.c	FUNCTION_15	CALL_11
0x40029b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1146	deflate.c	FUNCTION_15	CALL_12
0x40029b7	    0x8b8008170000	          mov eax, dword [rax + 0x1708] 	      1146	deflate.c	FUNCTION_15	CALL_12
0x40029bd	            0xd1e8	                              shr eax, 1	      1146	deflate.c	FUNCTION_15	CALL_12
0x40029bf	            0x89c0	                            mov eax, eax	      1146	deflate.c	FUNCTION_15	CALL_12
0x40029c1	        0x488d1400	                    lea rdx, [rax + rax]	      1146	deflate.c	FUNCTION_15	CALL_12
0x40029c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1146	deflate.c	FUNCTION_15	CALL_12
0x40029c9	          0x4801c2	                            add rdx, rax	      1146	deflate.c	FUNCTION_15	CALL_12
0x40029cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1146	deflate.c	FUNCTION_15	CALL_12
0x40029d0	    0x488990101700	          mov qword [rax + 0x1710], rdx 	      1146	deflate.c	FUNCTION_15	CALL_12
0x40029d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1147	deflate.c	FUNCTION_15	CALL_13
0x40029db	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1147	deflate.c	FUNCTION_15	CALL_13
0x40029df	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1147	deflate.c	FUNCTION_15	CALL_13
0x40029e3	    0x8b8008170000	          mov eax, dword [rax + 0x1708] 	      1147	deflate.c	FUNCTION_15	CALL_13
0x40029e9	            0x89c1	                            mov ecx, eax	      1147	deflate.c	FUNCTION_15	CALL_13
0x40029eb	          0x4889c8	                            mov rax, rcx	      1147	deflate.c	FUNCTION_15	CALL_13
0x40029ee	          0x4801c0	                            add rax, rax	      1147	deflate.c	FUNCTION_15	CALL_13
0x40029f1	          0x4801c8	                            add rax, rcx	      1147	deflate.c	FUNCTION_15	CALL_13
0x40029f4	          0x4801c2	                            add rdx, rax	      1147	deflate.c	FUNCTION_15	CALL_13
0x40029f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1147	deflate.c	FUNCTION_15	CALL_13
0x40029fb	    0x488990001700	          mov qword [rax + 0x1700], rdx 	      1147	deflate.c	FUNCTION_15	CALL_13
0x4002a02	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1149	deflate.c	FUNCTION_15
0x4002a06	    0x488d90d40000	                   lea rdx, [rax + 0xd4]	      1149	deflate.c	FUNCTION_15
0x4002a0d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1149	deflate.c	FUNCTION_15
0x4002a11	    0x488990580b00	            mov qword [rax + 0xb58], rdx	      1149	deflate.c	FUNCTION_15
0x4002a18	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1150	deflate.c	FUNCTION_15
0x4002a1c	    0x488d90c80900	                  lea rdx, [rax + 0x9c8]	      1150	deflate.c	FUNCTION_15
0x4002a23	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1150	deflate.c	FUNCTION_15
0x4002a27	    0x488990700b00	            mov qword [rax + 0xb70], rdx	      1150	deflate.c	FUNCTION_15
0x4002a2e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1151	deflate.c	FUNCTION_15
0x4002a32	    0x488d90bc0a00	                  lea rdx, [rax + 0xabc]	      1151	deflate.c	FUNCTION_15
0x4002a39	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1151	deflate.c	FUNCTION_15
0x4002a3d	    0x488990880b00	            mov qword [rax + 0xb88], rdx	      1151	deflate.c	FUNCTION_15
0x4002a44	      0xb800000000	                              mov eax, 0	      1153	deflate.c	FUNCTION_15
0x4002a49	              0xc9	                                   leave	      1155	deflate.c	FUNCTION_15
0x4002a4a	              0xc3	                                     ret	      1155	deflate.c	FUNCTION_15
deflateStateCheck	ELSE,0:DO,0:FOR,0:functions,0:SWITCH,0:CALL,0:IF,2:WHILE,0	61
0x4000573	              0x55	                                push rbp	       355	deflate.c	
0x4000574	          0x4889e5	                            mov rbp, rsp	       355	deflate.c	
0x4000577	        0x48897de8	             mov qword [rbp - 0x18], rdi	       355	deflate.c	
0x400057b	      0x48837de800	               cmp qword [rbp - 0x18], 0	       357	deflate.c	
0x4000580	            0x741a	                            je 0x400059c	       357	deflate.c	
0x4000582	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       358	deflate.c	
0x4000586	        0x488b4040	            mov rax, qword [rax + 0x40] 	       358	deflate.c	
0x400058a	          0x4885c0	                           test rax, rax	       357	deflate.c	
0x400058d	            0x740d	                            je 0x400059c	       357	deflate.c	
0x400058f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       358	deflate.c	
0x4000593	        0x488b4048	            mov rax, qword [rax + 0x48] 	       358	deflate.c	
0x4000597	          0x4885c0	                           test rax, rax	       358	deflate.c	
0x400059a	            0x750a	                           jne 0x40005a6	       358	deflate.c	
0x400059c	      0xb801000000	                              mov eax, 1	       359	deflate.c	FUNCTION_2
0x40005a1	      0xe98e000000	                           jmp 0x4000634	       359	deflate.c	FUNCTION_2
0x40005a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       360	deflate.c	FUNCTION_2
0x40005aa	        0x488b4038	            mov rax, qword [rax + 0x38] 	       360	deflate.c	FUNCTION_2
0x40005ae	        0x488945f8	                mov qword [rbp - 8], rax	       360	deflate.c	FUNCTION_2
0x40005b2	      0x48837df800	                  cmp qword [rbp - 8], 0	       361	deflate.c	FUNCTION_2	IF_1
0x40005b7	            0x746f	                            je 0x4000628	       361	deflate.c	FUNCTION_2	IF_1
0x40005b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       361	deflate.c	FUNCTION_2	IF_1
0x40005bd	          0x488b00	                    mov rax, qword [rax]	       361	deflate.c	FUNCTION_2	IF_1
0x40005c0	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       361	deflate.c	FUNCTION_2	IF_1
0x40005c4	            0x7562	                           jne 0x4000628	       361	deflate.c	FUNCTION_2	IF_1
0x40005c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       361	deflate.c	FUNCTION_2	IF_1
0x40005ca	          0x8b4008	                mov eax, dword [rax + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x40005cd	          0x83f82a	                           cmp eax, 0x2a	       361	deflate.c	FUNCTION_2	IF_1
0x40005d0	            0x745d	                            je 0x400062f	       361	deflate.c	FUNCTION_2	IF_1
0x40005d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	deflate.c	FUNCTION_2	IF_1
0x40005d6	          0x8b4008	                mov eax, dword [rax + 8]	       363	deflate.c	FUNCTION_2	IF_1
0x40005d9	          0x83f839	                           cmp eax, 0x39	       361	deflate.c	FUNCTION_2	IF_1
0x40005dc	            0x7451	                            je 0x400062f	       361	deflate.c	FUNCTION_2	IF_1
0x40005de	        0x488b45f8	                mov rax, qword [rbp - 8]	       365	deflate.c	FUNCTION_2	IF_2
0x40005e2	          0x8b4008	                mov eax, dword [rax + 8]	       365	deflate.c	FUNCTION_2	IF_2
0x40005e5	          0x83f845	                           cmp eax, 0x45	       363	deflate.c	FUNCTION_2	IF_1
0x40005e8	            0x7445	                            je 0x400062f	       363	deflate.c	FUNCTION_2	IF_1
0x40005ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       366	deflate.c	FUNCTION_2	IF_2
0x40005ee	          0x8b4008	                mov eax, dword [rax + 8]	       366	deflate.c	FUNCTION_2	IF_2
0x40005f1	          0x83f849	                           cmp eax, 0x49	       365	deflate.c	FUNCTION_2	IF_2
0x40005f4	            0x7439	                            je 0x400062f	       365	deflate.c	FUNCTION_2	IF_2
0x40005f6	        0x488b45f8	                mov rax, qword [rbp - 8]	       367	deflate.c	FUNCTION_2	IF_2
0x40005fa	          0x8b4008	                mov eax, dword [rax + 8]	       367	deflate.c	FUNCTION_2	IF_2
0x40005fd	          0x83f85b	                           cmp eax, 0x5b	       366	deflate.c	FUNCTION_2	IF_2
0x4000600	            0x742d	                            je 0x400062f	       366	deflate.c	FUNCTION_2	IF_2
0x4000602	        0x488b45f8	                mov rax, qword [rbp - 8]	       368	deflate.c	FUNCTION_2	IF_2
0x4000606	          0x8b4008	                mov eax, dword [rax + 8]	       368	deflate.c	FUNCTION_2	IF_2
0x4000609	          0x83f867	                           cmp eax, 0x67	       367	deflate.c	FUNCTION_2	IF_2
0x400060c	            0x7421	                            je 0x400062f	       367	deflate.c	FUNCTION_2	IF_2
0x400060e	        0x488b45f8	                mov rax, qword [rbp - 8]	       369	deflate.c	FUNCTION_2	IF_2
0x4000612	          0x8b4008	                mov eax, dword [rax + 8]	       369	deflate.c	FUNCTION_2	IF_2
0x4000615	          0x83f871	                           cmp eax, 0x71	       368	deflate.c	FUNCTION_2	IF_2
0x4000618	            0x7415	                            je 0x400062f	       368	deflate.c	FUNCTION_2	IF_2
0x400061a	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	deflate.c	FUNCTION_2	IF_2
0x400061e	          0x8b4008	                mov eax, dword [rax + 8]	       370	deflate.c	FUNCTION_2	IF_2
0x4000621	      0x3d9a020000	                          cmp eax, 0x29a	       369	deflate.c	FUNCTION_2	IF_2
0x4000626	            0x7407	                            je 0x400062f	       369	deflate.c	FUNCTION_2	IF_2
0x4000628	      0xb801000000	                              mov eax, 1	       371	deflate.c	FUNCTION_2	IF_2
0x400062d	            0xeb05	                           jmp 0x4000634	       371	deflate.c	FUNCTION_2	IF_2
0x400062f	      0xb800000000	                              mov eax, 0	       372	deflate.c	FUNCTION_2	IF_2
0x4000634	              0x5d	                                 pop rbp	       373	deflate.c	FUNCTION_2	IF_2
0x4000635	              0xc3	                                     ret	       373	deflate.c	FUNCTION_2	IF_2
deflateParams	ELSE,1:DO,0:FOR,0:functions,0:SWITCH,0:CALL,3:IF,10:WHILE,0	148
0x4000d7c	              0x55	                                push rbp	       572	deflate.c	
0x4000d7d	          0x4889e5	                            mov rbp, rsp	       572	deflate.c	
0x4000d80	        0x4883ec30	                           sub rsp, 0x30	       572	deflate.c	
0x4000d84	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       572	deflate.c	
0x4000d88	          0x8975d4	             mov dword [rbp - 0x2c], esi	       572	deflate.c	
0x4000d8b	          0x8955d0	             mov dword [rbp - 0x30], edx	       572	deflate.c	
0x4000d8e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       576	deflate.c	FUNCTION_8
0x4000d92	          0x4889c7	                            mov rdi, rax	       576	deflate.c	FUNCTION_8
0x4000d95	      0xe8d9f7ffff	              call sym.deflateStateCheck	       576	deflate.c	FUNCTION_8
0x4000d9a	            0x85c0	                           test eax, eax	       576	deflate.c	FUNCTION_8
0x4000d9c	            0x740a	                            je 0x4000da8	       576	deflate.c	FUNCTION_8
0x4000d9e	      0xb8feffffff	                     mov eax, 0xfffffffe	       576	deflate.c	FUNCTION_8
0x4000da3	      0xe909020000	                           jmp 0x4000fb1	       576	deflate.c	FUNCTION_8
0x4000da8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       577	deflate.c	FUNCTION_8
0x4000dac	        0x488b4038	            mov rax, qword [rax + 0x38] 	       577	deflate.c	FUNCTION_8
0x4000db0	        0x488945f0	             mov qword [rbp - 0x10], rax	       577	deflate.c	FUNCTION_8
0x4000db4	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	       582	deflate.c	FUNCTION_8
0x4000db8	            0x7507	                           jne 0x4000dc1	       582	deflate.c	FUNCTION_8
0x4000dba	    0xc745d4060000	               mov dword [rbp - 0x2c], 6	       582	deflate.c	FUNCTION_8
0x4000dc1	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       584	deflate.c	FUNCTION_8	IF_2
0x4000dc5	            0x7812	                            js 0x4000dd9	       584	deflate.c	FUNCTION_8	IF_2
0x4000dc7	        0x837dd409	               cmp dword [rbp - 0x2c], 9	       584	deflate.c	FUNCTION_8	IF_2
0x4000dcb	            0x7f0c	                            jg 0x4000dd9	       584	deflate.c	FUNCTION_8	IF_2
0x4000dcd	        0x837dd000	               cmp dword [rbp - 0x30], 0	       584	deflate.c	FUNCTION_8	IF_2
0x4000dd1	            0x7806	                            js 0x4000dd9	       584	deflate.c	FUNCTION_8	IF_2
0x4000dd3	        0x837dd004	               cmp dword [rbp - 0x30], 4	       584	deflate.c	FUNCTION_8	IF_2
0x4000dd7	            0x7e0a	                           jle 0x4000de3	       584	deflate.c	FUNCTION_8	IF_2
0x4000dd9	      0xb8feffffff	                     mov eax, 0xfffffffe	       585	deflate.c	FUNCTION_8
0x4000dde	      0xe9ce010000	                           jmp 0x4000fb1	       585	deflate.c	FUNCTION_8
0x4000de3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       587	deflate.c	FUNCTION_8
0x4000de7	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       587	deflate.c	FUNCTION_8
0x4000ded	            0x4898	                                    cdqe	       587	deflate.c	FUNCTION_8
0x4000def	        0x48c1e004	                              shl rax, 4	       587	deflate.c	FUNCTION_8
0x4000df3	    0x480500000000	                              add rax, 0	       587	deflate.c	FUNCTION_8
0x4000df9	          0x488b00	                    mov rax, qword [rax]	       587	deflate.c	FUNCTION_8
0x4000dfc	        0x488945f8	                mov qword [rbp - 8], rax	       587	deflate.c	FUNCTION_8
0x4000e00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       589	deflate.c	FUNCTION_8	IF_4
0x4000e04	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	       589	deflate.c	FUNCTION_8	IF_4
0x4000e0a	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	       589	deflate.c	FUNCTION_8	IF_4
0x4000e0d	            0x7518	                           jne 0x4000e27	       589	deflate.c	FUNCTION_8	IF_4
0x4000e0f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       589	deflate.c	FUNCTION_8	IF_4
0x4000e12	            0x4898	                                    cdqe	       589	deflate.c	FUNCTION_8	IF_4
0x4000e14	        0x48c1e004	                              shl rax, 4	       589	deflate.c	FUNCTION_8	IF_4
0x4000e18	    0x480500000000	                              add rax, 0	       589	deflate.c	FUNCTION_8	IF_4
0x4000e1e	          0x488b00	                    mov rax, qword [rax]	       589	deflate.c	FUNCTION_8	IF_4
0x4000e21	        0x483b45f8	                cmp rax, qword [rbp - 8]	       589	deflate.c	FUNCTION_8	IF_4
0x4000e25	            0x7447	                            je 0x4000e6e	       589	deflate.c	FUNCTION_8	IF_4
0x4000e27	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       590	deflate.c	FUNCTION_8	IF_4
0x4000e2b	    0x488b80381700	          mov rax, qword [rax + 0x1738] 	       590	deflate.c	FUNCTION_8	IF_4
0x4000e32	          0x4885c0	                           test rax, rax	       589	deflate.c	FUNCTION_8	IF_4
0x4000e35	            0x7437	                            je 0x4000e6e	       589	deflate.c	FUNCTION_8	IF_4
0x4000e37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       592	deflate.c	FUNCTION_8
0x4000e3b	      0xbe05000000	                              mov esi, 5	       592	deflate.c	FUNCTION_8
0x4000e40	          0x4889c7	                            mov rdi, rax	       592	deflate.c	FUNCTION_8
0x4000e43	      0xe800000000	                          call 0x4000e48	       592	deflate.c	FUNCTION_8
0x4000e48	          0x8945ec	             mov dword [rbp - 0x14], eax	       592	deflate.c	FUNCTION_8
0x4000e4b	        0x837decfe	cmp dword [rbp - 0x14], 0xfffffffffffffffe	       593	deflate.c	FUNCTION_8	IF_5
0x4000e4f	            0x7508	                           jne 0x4000e59	       593	deflate.c	FUNCTION_8	IF_5
0x4000e51	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       594	deflate.c	FUNCTION_8	IF_5
0x4000e54	      0xe958010000	                           jmp 0x4000fb1	       594	deflate.c	FUNCTION_8	IF_5
0x4000e59	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       595	deflate.c	FUNCTION_8	IF_5
0x4000e5d	          0x8b4020	            mov eax, dword [rax + 0x20] 	       595	deflate.c	FUNCTION_8	IF_5
0x4000e60	            0x85c0	                           test eax, eax	       595	deflate.c	FUNCTION_8	IF_5
0x4000e62	            0x750a	                           jne 0x4000e6e	       595	deflate.c	FUNCTION_8	IF_5
0x4000e64	      0xb8fbffffff	                     mov eax, 0xfffffffb	       596	deflate.c	FUNCTION_8	IF_5	CALL_2
0x4000e69	      0xe943010000	                           jmp 0x4000fb1	       596	deflate.c	FUNCTION_8	IF_5	CALL_2
0x4000e6e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       598	deflate.c	FUNCTION_8	IF_5	IF_6
0x4000e72	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       598	deflate.c	FUNCTION_8	IF_5	IF_6
0x4000e78	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       598	deflate.c	FUNCTION_8	IF_5	IF_6
0x4000e7b	     0xf841e010000	                            je 0x4000f9f	       598	deflate.c	FUNCTION_8	IF_5	IF_6
0x4000e81	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000e85	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000e8b	            0x85c0	                           test eax, eax	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000e8d	     0xf8583000000	                           jne 0x4000f16	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000e93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000e97	    0x8b8028170000	          mov eax, dword [rax + 0x1728] 	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000e9d	            0x85c0	                           test eax, eax	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000e9f	            0x7475	                            je 0x4000f16	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000ea1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       600	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000ea5	    0x8b8028170000	          mov eax, dword [rax + 0x1728] 	       600	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000eab	          0x83f801	                              cmp eax, 1	       600	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000eae	            0x750e	                           jne 0x4000ebe	       600	deflate.c	FUNCTION_8	IF_5	IF_7
0x4000eb0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       601	deflate.c	FUNCTION_8	IF_5
0x4000eb4	          0x4889c7	                            mov rdi, rax	       601	deflate.c	FUNCTION_8	IF_5
0x4000eb7	      0xe884f1ffff	                     call sym.slide_hash	       601	deflate.c	FUNCTION_8	IF_5
0x4000ebc	            0xeb22	                           jmp 0x4000ee0	       601	deflate.c	FUNCTION_8	IF_5
0x4000ebe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000ec2	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000ec6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000eca	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000ed0	          0x83e801	                              sub eax, 1	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000ed3	            0x89c0	                            mov eax, eax	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000ed5	          0x4801c0	                            add rax, rax	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000ed8	          0x4801d0	                            add rax, rdx	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000edb	      0x66c7000000	                       mov word [rax], 0	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000ee0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000ee4	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000eea	          0x83e801	                              sub eax, 1	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000eed	            0x89c0	                            mov eax, eax	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000eef	        0x488d1400	                    lea rdx, [rax + rax]	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000ef3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000ef7	        0x488b4078	            mov rax, qword [rax + 0x78] 	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000efb	      0xbe00000000	                              mov esi, 0	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f00	          0x4889c7	                            mov rdi, rax	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f03	      0xe800000000	                          call 0x4000f08	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       604	deflate.c	FUNCTION_8	IF_8	IF_9	IF_10
0x4000f0c	    0xc78028170000	            mov dword [rax + 0x1728], 0 	       604	deflate.c	FUNCTION_8	IF_8	IF_9	IF_10
0x4000f16	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       606	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4000f1a	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       606	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4000f1d	    0x8990c4000000	             mov dword [rax + 0xc4], edx	       606	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4000f23	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4000f26	            0x4898	                                    cdqe	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4000f28	        0x48c1e004	                              shl rax, 4	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4000f2c	    0x480500000000	                              add rax, 0	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4000f32	           0xfb700	                   movzx eax, word [rax]	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4000f35	           0xfb7d0	                           movzx edx, ax	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4000f38	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4000f3c	    0x8990c0000000	             mov dword [rax + 0xc0], edx	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4000f42	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f45	            0x4898	                                    cdqe	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f47	        0x48c1e004	                              shl rax, 4	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f4b	    0x480500000000	                              add rax, 0	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f51	           0xfb700	                   movzx eax, word [rax]	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f54	           0xfb7d0	                           movzx edx, ax	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f57	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f5b	    0x8990cc000000	             mov dword [rax + 0xcc], edx	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f61	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f64	            0x4898	                                    cdqe	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f66	        0x48c1e004	                              shl rax, 4	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f6a	    0x480500000000	                              add rax, 0	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f70	           0xfb700	                   movzx eax, word [rax]	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f73	           0xfb7d0	                           movzx edx, ax	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f76	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f7a	    0x8990d0000000	             mov dword [rax + 0xd0], edx	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4000f80	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       610	deflate.c	FUNCTION_8	IF_8
0x4000f83	            0x4898	                                    cdqe	       610	deflate.c	FUNCTION_8	IF_8
0x4000f85	        0x48c1e004	                              shl rax, 4	       610	deflate.c	FUNCTION_8	IF_8
0x4000f89	    0x480500000000	                              add rax, 0	       610	deflate.c	FUNCTION_8	IF_8
0x4000f8f	           0xfb700	                   movzx eax, word [rax]	       610	deflate.c	FUNCTION_8	IF_8
0x4000f92	           0xfb7d0	                           movzx edx, ax	       610	deflate.c	FUNCTION_8	IF_8
0x4000f95	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       610	deflate.c	FUNCTION_8	IF_8
0x4000f99	    0x8990bc000000	             mov dword [rax + 0xbc], edx	       610	deflate.c	FUNCTION_8	IF_8
0x4000f9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       612	deflate.c	FUNCTION_8	IF_8
0x4000fa3	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       612	deflate.c	FUNCTION_8	IF_8
0x4000fa6	    0x8990c8000000	             mov dword [rax + 0xc8], edx	       612	deflate.c	FUNCTION_8	IF_8
0x4000fac	      0xb800000000	                              mov eax, 0	       613	deflate.c	FUNCTION_8	IF_8
0x4000fb1	              0xc9	                                   leave	       614	deflate.c	FUNCTION_8	IF_8
0x4000fb2	              0xc3	                                     ret	       614	deflate.c	FUNCTION_8	IF_8
flush_pending	ELSE,0:DO,0:FOR,0:functions,0:SWITCH,0:CALL,2:IF,3:WHILE,0	72
0x400124c	              0x55	                                push rbp	       732	deflate.c	
0x400124d	          0x4889e5	                            mov rbp, rsp	       732	deflate.c	
0x4001250	        0x4883ec20	                           sub rsp, 0x20	       732	deflate.c	
0x4001254	        0x48897de8	             mov qword [rbp - 0x18], rdi	       732	deflate.c	
0x4001258	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       734	deflate.c	
0x400125c	        0x488b4038	            mov rax, qword [rax + 0x38] 	       734	deflate.c	
0x4001260	        0x488945f8	                mov qword [rbp - 8], rax	       734	deflate.c	
0x4001264	        0x488b45f8	                mov rax, qword [rbp - 8]	       736	deflate.c	FUNCTION_12
0x4001268	          0x4889c7	                            mov rdi, rax	       736	deflate.c	FUNCTION_12
0x400126b	      0xe800000000	                          call 0x4001270	       736	deflate.c	FUNCTION_12
0x4001270	        0x488b45f8	                mov rax, qword [rbp - 8]	       737	deflate.c	FUNCTION_12
0x4001274	        0x488b4028	            mov rax, qword [rax + 0x28] 	       737	deflate.c	FUNCTION_12
0x4001278	          0x8945f4	              mov dword [rbp - 0xc], eax	       737	deflate.c	FUNCTION_12
0x400127b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       738	deflate.c	FUNCTION_12
0x400127f	          0x8b4020	            mov eax, dword [rax + 0x20] 	       738	deflate.c	FUNCTION_12
0x4001282	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       738	deflate.c	FUNCTION_12
0x4001285	            0x730a	                           jae 0x4001291	       738	deflate.c	FUNCTION_12
0x4001287	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       738	deflate.c	FUNCTION_12
0x400128b	          0x8b4020	            mov eax, dword [rax + 0x20] 	       738	deflate.c	FUNCTION_12
0x400128e	          0x8945f4	              mov dword [rbp - 0xc], eax	       738	deflate.c	FUNCTION_12
0x4001291	        0x837df400	                cmp dword [rbp - 0xc], 0	       739	deflate.c	FUNCTION_12
0x4001295	     0xf84a8000000	                            je 0x4001343	       739	deflate.c	FUNCTION_12
0x400129b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       741	deflate.c	FUNCTION_12
0x400129e	        0x488b45f8	                mov rax, qword [rbp - 8]	       741	deflate.c	FUNCTION_12
0x40012a2	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       741	deflate.c	FUNCTION_12
0x40012a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       741	deflate.c	FUNCTION_12
0x40012aa	        0x488b4018	            mov rax, qword [rax + 0x18] 	       741	deflate.c	FUNCTION_12
0x40012ae	          0x4889ce	                            mov rsi, rcx	       741	deflate.c	FUNCTION_12
0x40012b1	          0x4889c7	                            mov rdi, rax	       741	deflate.c	FUNCTION_12
0x40012b4	      0xe800000000	                          call 0x40012b9	       741	deflate.c	FUNCTION_12
0x40012b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       742	deflate.c	FUNCTION_12	IF_1
0x40012bd	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       742	deflate.c	FUNCTION_12	IF_1
0x40012c1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       742	deflate.c	FUNCTION_12	IF_1
0x40012c4	          0x4801c2	                            add rdx, rax	       742	deflate.c	FUNCTION_12	IF_1
0x40012c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       742	deflate.c	FUNCTION_12	IF_1
0x40012cb	        0x48895018	             mov qword [rax + 0x18], rdx	       742	deflate.c	FUNCTION_12	IF_1
0x40012cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       743	deflate.c	FUNCTION_12	IF_2
0x40012d3	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       743	deflate.c	FUNCTION_12	IF_2
0x40012d7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       743	deflate.c	FUNCTION_12	IF_2
0x40012da	          0x4801c2	                            add rdx, rax	       743	deflate.c	FUNCTION_12	IF_2
0x40012dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       743	deflate.c	FUNCTION_12	IF_2
0x40012e1	        0x48895020	             mov qword [rax + 0x20], rdx	       743	deflate.c	FUNCTION_12	IF_2
0x40012e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       744	deflate.c	FUNCTION_12
0x40012e9	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       744	deflate.c	FUNCTION_12
0x40012ed	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       744	deflate.c	FUNCTION_12
0x40012f0	          0x4801c2	                            add rdx, rax	       744	deflate.c	FUNCTION_12
0x40012f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       744	deflate.c	FUNCTION_12
0x40012f7	        0x48895028	             mov qword [rax + 0x28], rdx	       744	deflate.c	FUNCTION_12
0x40012fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       745	deflate.c	FUNCTION_12	CALL_2
0x40012ff	          0x8b4020	            mov eax, dword [rax + 0x20] 	       745	deflate.c	FUNCTION_12	CALL_2
0x4001302	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       745	deflate.c	FUNCTION_12	CALL_2
0x4001305	            0x89c2	                            mov edx, eax	       745	deflate.c	FUNCTION_12	CALL_2
0x4001307	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       745	deflate.c	FUNCTION_12	CALL_2
0x400130b	          0x895020	             mov dword [rax + 0x20], edx	       745	deflate.c	FUNCTION_12	CALL_2
0x400130e	        0x488b45f8	                mov rax, qword [rbp - 8]	       746	deflate.c	FUNCTION_12
0x4001312	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       746	deflate.c	FUNCTION_12
0x4001316	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       746	deflate.c	FUNCTION_12
0x4001319	          0x4829c2	                            sub rdx, rax	       746	deflate.c	FUNCTION_12
0x400131c	        0x488b45f8	                mov rax, qword [rbp - 8]	       746	deflate.c	FUNCTION_12
0x4001320	        0x48895028	             mov qword [rax + 0x28], rdx	       746	deflate.c	FUNCTION_12
0x4001324	        0x488b45f8	                mov rax, qword [rbp - 8]	       747	deflate.c	FUNCTION_12
0x4001328	        0x488b4028	            mov rax, qword [rax + 0x28] 	       747	deflate.c	FUNCTION_12
0x400132c	          0x4885c0	                           test rax, rax	       747	deflate.c	FUNCTION_12
0x400132f	            0x7513	                           jne 0x4001344	       747	deflate.c	FUNCTION_12
0x4001331	        0x488b45f8	                mov rax, qword [rbp - 8]	       748	deflate.c	FUNCTION_12
0x4001335	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       748	deflate.c	FUNCTION_12
0x4001339	        0x488b45f8	                mov rax, qword [rbp - 8]	       748	deflate.c	FUNCTION_12
0x400133d	        0x48895020	             mov qword [rax + 0x20], rdx	       748	deflate.c	FUNCTION_12
0x4001341	            0xeb01	                           jmp 0x4001344	       748	deflate.c	FUNCTION_12
0x4001343	              0x90	                                     nop	       739	deflate.c	FUNCTION_12
0x4001344	              0xc9	                                   leave	       750	deflate.c	FUNCTION_12
0x4001345	              0xc3	                                     ret	       750	deflate.c	FUNCTION_12
deflateEnd	ELSE,0:DO,0:FOR,0:functions,0:SWITCH,0:CALL,6:IF,1:WHILE,0	94
0x40025e3	              0x55	                                push rbp	      1078	deflate.c	
0x40025e4	          0x4889e5	                            mov rbp, rsp	      1078	deflate.c	
0x40025e7	        0x4883ec20	                           sub rsp, 0x20	      1078	deflate.c	
0x40025eb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1078	deflate.c	
0x40025ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1081	deflate.c	
0x40025f3	          0x4889c7	                            mov rdi, rax	      1081	deflate.c	
0x40025f6	      0xe878dfffff	              call sym.deflateStateCheck	      1081	deflate.c	
0x40025fb	            0x85c0	                           test eax, eax	      1081	deflate.c	
0x40025fd	            0x740a	                            je 0x4002609	      1081	deflate.c	
0x40025ff	      0xb8feffffff	                     mov eax, 0xfffffffe	      1081	deflate.c	
0x4002604	      0xe921010000	                           jmp 0x400272a	      1081	deflate.c	
0x4002609	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1083	deflate.c	FUNCTION_14
0x400260d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1083	deflate.c	FUNCTION_14
0x4002611	          0x8b4008	                mov eax, dword [rax + 8]	      1083	deflate.c	FUNCTION_14
0x4002614	          0x8945fc	                mov dword [rbp - 4], eax	      1083	deflate.c	FUNCTION_14
0x4002617	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1086	deflate.c	FUNCTION_14
0x400261b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1086	deflate.c	FUNCTION_14
0x400261f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1086	deflate.c	FUNCTION_14
0x4002623	          0x4885c0	                           test rax, rax	      1086	deflate.c	FUNCTION_14
0x4002626	            0x7424	                            je 0x400264c	      1086	deflate.c	FUNCTION_14
0x4002628	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1086	deflate.c	FUNCTION_14
0x400262c	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1086	deflate.c	FUNCTION_14
0x4002630	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1086	deflate.c	FUNCTION_14
0x4002634	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      1086	deflate.c	FUNCTION_14
0x4002638	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1086	deflate.c	FUNCTION_14
0x400263c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1086	deflate.c	FUNCTION_14
0x4002640	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	      1086	deflate.c	FUNCTION_14
0x4002644	          0x4889ce	                            mov rsi, rcx	      1086	deflate.c	FUNCTION_14
0x4002647	          0x4889d7	                            mov rdi, rdx	      1086	deflate.c	FUNCTION_14
0x400264a	            0xffd0	                                call rax	      1086	deflate.c	FUNCTION_14
0x400264c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1087	deflate.c	FUNCTION_14
0x4002650	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1087	deflate.c	FUNCTION_14
0x4002654	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1087	deflate.c	FUNCTION_14
0x4002658	          0x4885c0	                           test rax, rax	      1087	deflate.c	FUNCTION_14
0x400265b	            0x7424	                            je 0x4002681	      1087	deflate.c	FUNCTION_14
0x400265d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1087	deflate.c	FUNCTION_14
0x4002661	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1087	deflate.c	FUNCTION_14
0x4002665	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1087	deflate.c	FUNCTION_14
0x4002669	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      1087	deflate.c	FUNCTION_14
0x400266d	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	      1087	deflate.c	FUNCTION_14
0x4002671	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1087	deflate.c	FUNCTION_14
0x4002675	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	      1087	deflate.c	FUNCTION_14
0x4002679	          0x4889ce	                            mov rsi, rcx	      1087	deflate.c	FUNCTION_14
0x400267c	          0x4889d7	                            mov rdi, rdx	      1087	deflate.c	FUNCTION_14
0x400267f	            0xffd0	                                call rax	      1087	deflate.c	FUNCTION_14
0x4002681	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1088	deflate.c	FUNCTION_14
0x4002685	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1088	deflate.c	FUNCTION_14
0x4002689	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1088	deflate.c	FUNCTION_14
0x400268d	          0x4885c0	                           test rax, rax	      1088	deflate.c	FUNCTION_14
0x4002690	            0x7424	                            je 0x40026b6	      1088	deflate.c	FUNCTION_14
0x4002692	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1088	deflate.c	FUNCTION_14
0x4002696	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1088	deflate.c	FUNCTION_14
0x400269a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1088	deflate.c	FUNCTION_14
0x400269e	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      1088	deflate.c	FUNCTION_14
0x40026a2	        0x488b4a70	            mov rcx, qword [rdx + 0x70] 	      1088	deflate.c	FUNCTION_14
0x40026a6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1088	deflate.c	FUNCTION_14
0x40026aa	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	      1088	deflate.c	FUNCTION_14
0x40026ae	          0x4889ce	                            mov rsi, rcx	      1088	deflate.c	FUNCTION_14
0x40026b1	          0x4889d7	                            mov rdi, rdx	      1088	deflate.c	FUNCTION_14
0x40026b4	            0xffd0	                                call rax	      1088	deflate.c	FUNCTION_14
0x40026b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1089	deflate.c	FUNCTION_14
0x40026ba	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1089	deflate.c	FUNCTION_14
0x40026be	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1089	deflate.c	FUNCTION_14
0x40026c2	          0x4885c0	                           test rax, rax	      1089	deflate.c	FUNCTION_14
0x40026c5	            0x7424	                            je 0x40026eb	      1089	deflate.c	FUNCTION_14
0x40026c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1089	deflate.c	FUNCTION_14
0x40026cb	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1089	deflate.c	FUNCTION_14
0x40026cf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1089	deflate.c	FUNCTION_14
0x40026d3	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      1089	deflate.c	FUNCTION_14
0x40026d7	        0x488b4a60	            mov rcx, qword [rdx + 0x60] 	      1089	deflate.c	FUNCTION_14
0x40026db	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1089	deflate.c	FUNCTION_14
0x40026df	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	      1089	deflate.c	FUNCTION_14
0x40026e3	          0x4889ce	                            mov rsi, rcx	      1089	deflate.c	FUNCTION_14
0x40026e6	          0x4889d7	                            mov rdi, rdx	      1089	deflate.c	FUNCTION_14
0x40026e9	            0xffd0	                                call rax	      1089	deflate.c	FUNCTION_14
0x40026eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1091	deflate.c	FUNCTION_14	CALL_3
0x40026ef	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1091	deflate.c	FUNCTION_14	CALL_3
0x40026f3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1091	deflate.c	FUNCTION_14	CALL_3
0x40026f7	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      1091	deflate.c	FUNCTION_14	CALL_3
0x40026fb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1091	deflate.c	FUNCTION_14	CALL_3
0x40026ff	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	      1091	deflate.c	FUNCTION_14	CALL_3
0x4002703	          0x4889ce	                            mov rsi, rcx	      1091	deflate.c	FUNCTION_14	CALL_3
0x4002706	          0x4889d7	                            mov rdi, rdx	      1091	deflate.c	FUNCTION_14	CALL_3
0x4002709	            0xffd0	                                call rax	      1091	deflate.c	FUNCTION_14	CALL_3
0x400270b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1092	deflate.c	FUNCTION_14	CALL_4
0x400270f	    0x48c740380000	               mov qword [rax + 0x38], 0	      1092	deflate.c	FUNCTION_14	CALL_4
0x4002717	        0x837dfc71	               cmp dword [rbp - 4], 0x71	      1094	deflate.c	FUNCTION_14
0x400271b	            0x7507	                           jne 0x4002724	      1094	deflate.c	FUNCTION_14
0x400271d	      0xb8fdffffff	                     mov eax, 0xfffffffd	      1094	deflate.c	FUNCTION_14
0x4002722	            0xeb05	                           jmp 0x4002729	      1094	deflate.c	FUNCTION_14
0x4002724	      0xb800000000	                              mov eax, 0	      1094	deflate.c	FUNCTION_14
0x4002729	              0x90	                                     nop	      1094	deflate.c	FUNCTION_14
0x400272a	              0xc9	                                   leave	      1095	deflate.c	FUNCTION_14	CALL_6
0x400272b	              0xc3	                                     ret	      1095	deflate.c	FUNCTION_14	CALL_6
deflate_slow	ELSE,2:DO,1:FOR,1:functions,0:SWITCH,0:CALL,9:IF,15:WHILE,0	652
0x4004494	              0x55	                                push rbp	      1929	deflate.c	
0x4004495	          0x4889e5	                            mov rbp, rsp	      1929	deflate.c	
0x4004498	        0x4883ec30	                           sub rsp, 0x30	      1929	deflate.c	
0x400449c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1929	deflate.c	
0x40044a0	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1929	deflate.c	
0x40044a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1940	deflate.c	FUNCTION_22	FOR_1
0x40044a7	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1940	deflate.c	FUNCTION_22	FOR_1
0x40044ad	      0x3d05010000	                          cmp eax, 0x105	      1940	deflate.c	FUNCTION_22	FOR_1
0x40044b2	            0x773f	                            ja 0x40044f3	      1940	deflate.c	FUNCTION_22	FOR_1
0x40044b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1941	deflate.c	FUNCTION_22	FOR_1
0x40044b8	          0x4889c7	                            mov rdi, rax	      1941	deflate.c	FUNCTION_22	FOR_1
0x40044bb	      0xe8faeaffff	                    call sym.fill_window	      1941	deflate.c	FUNCTION_22	FOR_1
0x40044c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1942	deflate.c	FUNCTION_22	FOR_1
0x40044c4	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1942	deflate.c	FUNCTION_22	FOR_1
0x40044ca	      0x3d05010000	                          cmp eax, 0x105	      1942	deflate.c	FUNCTION_22	FOR_1
0x40044cf	            0x7710	                            ja 0x40044e1	      1942	deflate.c	FUNCTION_22	FOR_1
0x40044d1	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1942	deflate.c	FUNCTION_22	FOR_1
0x40044d5	            0x750a	                           jne 0x40044e1	      1942	deflate.c	FUNCTION_22	FOR_1
0x40044d7	      0xb800000000	                              mov eax, 0	      1943	deflate.c	FUNCTION_22	FOR_1
0x40044dc	      0xe9000a0000	                           jmp 0x4004ee1	      1943	deflate.c	FUNCTION_22	FOR_1
0x40044e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1945	deflate.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x40044e5	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1945	deflate.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x40044eb	            0x85c0	                           test eax, eax	      1945	deflate.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x40044ed	     0xf848a070000	                            je 0x4004c7d	      1945	deflate.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x40044f3	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1951	deflate.c	FUNCTION_22	FOR_1
0x40044fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1952	deflate.c	FUNCTION_22	FOR_1
0x40044fe	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1952	deflate.c	FUNCTION_22	FOR_1
0x4004504	          0x83f802	                              cmp eax, 2	      1952	deflate.c	FUNCTION_22	FOR_1
0x4004507	     0xf86c7000000	                           jbe 0x40045d4	      1952	deflate.c	FUNCTION_22	FOR_1
0x400450d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004511	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004517	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x400451b	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004521	            0x89c1	                            mov ecx, eax	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004523	            0xd3e2	                             shl edx, cl	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004525	            0x89d1	                            mov ecx, edx	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004527	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x400452b	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x400452f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004533	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004539	          0x83c002	                              add eax, 2	      1953	deflate.c	FUNCTION_22	FOR_1
0x400453c	            0x89c0	                            mov eax, eax	      1953	deflate.c	FUNCTION_22	FOR_1
0x400453e	          0x4801d0	                            add rax, rdx	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004541	           0xfb600	                   movzx eax, byte [rax]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004544	           0xfb6c0	                           movzx eax, al	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004547	            0x31c1	                            xor ecx, eax	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004549	            0x89ca	                            mov edx, ecx	      1953	deflate.c	FUNCTION_22	FOR_1
0x400454b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x400454f	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004555	            0x21c2	                            and edx, eax	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004557	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x400455b	    0x899080000000	             mov dword [rax + 0x80], edx	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004561	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004565	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004569	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x400456d	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004573	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004577	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x400457a	            0x21c8	                            and eax, ecx	      1953	deflate.c	FUNCTION_22	FOR_1
0x400457c	            0x89c0	                            mov eax, eax	      1953	deflate.c	FUNCTION_22	FOR_1
0x400457e	          0x4801c0	                            add rax, rax	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004581	          0x4801d0	                            add rax, rdx	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004584	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004588	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x400458c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004590	    0x8b9280000000	            mov edx, dword [rdx + 0x80] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004596	            0x89d2	                            mov edx, edx	      1953	deflate.c	FUNCTION_22	FOR_1
0x4004598	          0x4801d2	                            add rdx, rdx	      1953	deflate.c	FUNCTION_22	FOR_1
0x400459b	          0x4801ca	                            add rdx, rcx	      1953	deflate.c	FUNCTION_22	FOR_1
0x400459e	           0xfb712	                   movzx edx, word [rdx]	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045a1	          0x668910	                      mov word [rax], dx	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045a4	           0xfb700	                   movzx eax, word [rax]	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045a7	           0xfb7c0	                           movzx eax, ax	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045aa	          0x8945f4	              mov dword [rbp - 0xc], eax	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045b1	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045b9	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045bf	            0x89c0	                            mov eax, eax	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045c1	          0x4801c0	                            add rax, rax	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045c4	          0x4801c2	                            add rdx, rax	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045cb	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045d1	          0x668902	                      mov word [rdx], ax	      1953	deflate.c	FUNCTION_22	FOR_1
0x40045d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40045d8	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40045de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40045e2	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40045e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40045ec	    0x8b90b0000000	            mov edx, dword [rax + 0xb0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40045f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40045f6	    0x8990a4000000	             mov dword [rax + 0xa4], edx	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40045fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1959	deflate.c	FUNCTION_22	FOR_1
0x4004600	    0xc780a0000000	               mov dword [rax + 0xa0], 2	      1959	deflate.c	FUNCTION_22	FOR_1
0x400460a	        0x837df400	                cmp dword [rbp - 0xc], 0	      1961	deflate.c	FUNCTION_22	FOR_1
0x400460e	     0xf84b2000000	                            je 0x40046c6	      1961	deflate.c	FUNCTION_22	FOR_1
0x4004614	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1961	deflate.c	FUNCTION_22	FOR_1
0x4004618	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	      1961	deflate.c	FUNCTION_22	FOR_1
0x400461e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1961	deflate.c	FUNCTION_22	FOR_1
0x4004622	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      1961	deflate.c	FUNCTION_22	FOR_1
0x4004628	            0x39c2	                            cmp edx, eax	      1961	deflate.c	FUNCTION_22	FOR_1
0x400462a	     0xf8396000000	                           jae 0x40046c6	      1961	deflate.c	FUNCTION_22	FOR_1
0x4004630	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1962	deflate.c	FUNCTION_22	FOR_1
0x4004634	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1962	deflate.c	FUNCTION_22	FOR_1
0x400463a	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      1962	deflate.c	FUNCTION_22	FOR_1
0x400463d	            0x89c2	                            mov edx, eax	      1962	deflate.c	FUNCTION_22	FOR_1
0x400463f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1962	deflate.c	FUNCTION_22	FOR_1
0x4004643	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1962	deflate.c	FUNCTION_22	FOR_1
0x4004646	      0x2d06010000	                          sub eax, 0x106	      1962	deflate.c	FUNCTION_22	FOR_1
0x400464b	            0x39c2	                            cmp edx, eax	      1961	deflate.c	FUNCTION_22	FOR_1
0x400464d	            0x7777	                            ja 0x40046c6	      1961	deflate.c	FUNCTION_22	FOR_1
0x400464f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004652	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004656	            0x89d6	                            mov esi, edx	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004658	          0x4889c7	                            mov rdi, rax	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400465b	      0xe86ae6ffff	                  call sym.longest_match	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004660	            0x89c2	                            mov edx, eax	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004662	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004666	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400466c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004670	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004676	          0x83f805	                              cmp eax, 5	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004679	            0x774b	                            ja 0x40046c6	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400467b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400467f	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004685	          0x83f801	                              cmp eax, 1	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004688	            0x742e	                            je 0x40046b8	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400468a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400468e	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004694	          0x83f803	                              cmp eax, 3	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004697	            0x752d	                           jne 0x40046c6	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004699	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1973	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400469d	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1973	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1973	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046a7	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1973	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046ad	            0x29c2	                            sub edx, eax	      1973	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046af	            0x89d0	                            mov eax, edx	      1973	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046b1	      0x3d00100000	                         cmp eax, 0x1000	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046b6	            0x760e	                           jbe 0x40046c6	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1980	deflate.c	FUNCTION_22	FOR_1	IF_5	IF_6
0x40046bc	    0xc780a0000000	               mov dword [rax + 0xa0], 2	      1980	deflate.c	FUNCTION_22	FOR_1	IF_5	IF_6
0x40046c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046ca	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046d0	          0x83f802	                              cmp eax, 2	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046d3	     0xf86b5030000	                           jbe 0x4004a8e	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046dd	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046e7	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046ed	            0x39c2	                            cmp edx, eax	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046ef	     0xf8799030000	                            ja 0x4004a8e	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40046f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1987	deflate.c	FUNCTION_22	FOR_1
0x40046f9	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1987	deflate.c	FUNCTION_22	FOR_1
0x40046ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1987	deflate.c	FUNCTION_22	FOR_1
0x4004703	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1987	deflate.c	FUNCTION_22	FOR_1
0x4004709	             0x1d0	                            add eax, edx	      1987	deflate.c	FUNCTION_22	FOR_1
0x400470b	          0x83e803	                              sub eax, 3	      1987	deflate.c	FUNCTION_22	FOR_1
0x400470e	          0x8945f8	                mov dword [rbp - 8], eax	      1987	deflate.c	FUNCTION_22	FOR_1
0x4004711	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004715	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400471b	          0x83e803	                              sub eax, 3	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400471e	          0x8845ef	               mov byte [rbp - 0x11], al	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004721	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004725	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400472b	            0x89c2	                            mov edx, eax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400472d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004731	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004737	            0x29c2	                            sub edx, eax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004739	            0x89d0	                            mov eax, edx	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400473b	          0x83e801	                              sub eax, 1	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400473e	        0x668945f2	                mov word [rbp - 0xe], ax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004742	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004746	    0x488b90101700	          mov rdx, qword [rax + 0x1710] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400474d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004751	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004757	            0x89c0	                            mov eax, eax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004759	          0x4801c0	                            add rax, rax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400475c	          0x4801c2	                            add rdx, rax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400475f	         0xfb745f2	             movzx eax, word [rbp - 0xe]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004763	          0x668902	                      mov word [rdx], ax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004766	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400476a	    0x488bb0001700	          mov rsi, qword [rax + 0x1700] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004771	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004775	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400477b	          0x8d4801	                      lea ecx, [rax + 1]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400477e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004782	    0x898a0c170000	          mov dword [rdx + 0x170c], ecx 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004788	            0x89c0	                            mov eax, eax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400478a	        0x488d1406	                    lea rdx, [rsi + rax]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400478e	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004792	            0x8802	                      mov byte [rdx], al	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004794	         0xfb745f2	             movzx eax, word [rbp - 0xe]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004798	          0x83e801	                              sub eax, 1	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400479b	        0x668945f2	                mov word [rbp - 0xe], ax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400479f	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047a3	            0x4898	                                    cdqe	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047a5	     0xfb680000000	                   movzx eax, byte [rax]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047ac	           0xfb6c0	                           movzx eax, al	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047af	       0x501010000	                          add eax, 0x101	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047b4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047b8	          0x4863c8	                         movsxd rcx, eax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047bb	        0x4883c134	                           add rcx, 0x34	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047bf	       0xfb7548a04	      movzx edx, word [rdx + rcx*4 + 4] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047c4	          0x8d4a01	                      lea ecx, [rdx + 1]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047c7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047cb	            0x4898	                                    cdqe	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047cd	        0x4883c034	                           add rax, 0x34	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047d1	      0x66894c8204	          mov word [rdx + rax*4 + 4], cx	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047d6	    0x66817df2ff00	              cmp word [rbp - 0xe], 0xff	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047dc	            0x7712	                            ja 0x40047f0	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047de	         0xfb745f2	             movzx eax, word [rbp - 0xe]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047e2	            0x4898	                                    cdqe	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047e4	     0xfb680000000	                   movzx eax, byte [rax]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047eb	           0xfb6c0	                           movzx eax, al	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047ee	            0xeb1c	                           jmp 0x400480c	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047f0	         0xfb745f2	             movzx eax, word [rbp - 0xe]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047f4	        0x66c1e807	                               shr ax, 7	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047f8	           0xfb7c0	                           movzx eax, ax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40047fb	       0x500010000	                          add eax, 0x100	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004800	            0x4898	                                    cdqe	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004802	     0xfb680000000	                   movzx eax, byte [rax]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004809	           0xfb6c0	                           movzx eax, al	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400480c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004810	          0x4863c8	                         movsxd rcx, eax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004813	    0x4881c1700200	                          add rcx, 0x270	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400481a	       0xfb7548a08	      movzx edx, word [rdx + rcx*4 + 8] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400481f	          0x8d4a01	                      lea ecx, [rdx + 1]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004822	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004826	            0x4898	                                    cdqe	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004828	    0x480570020000	                          add rax, 0x270	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400482e	      0x66894c8208	          mov word [rdx + rax*4 + 8], cx	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004833	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004837	    0x8b900c170000	          mov edx, dword [rax + 0x170c] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400483d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004841	    0x8b8008170000	          mov eax, dword [rax + 0x1708] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004847	          0x83e801	                              sub eax, 1	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400484a	            0x39c2	                            cmp edx, eax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400484c	           0xf94c0	                                 sete al	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400484f	           0xfb6c0	                           movzx eax, al	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004852	          0x8945fc	                mov dword [rbp - 4], eax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004855	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004859	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400485f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004863	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004869	            0x29c2	                            sub edx, eax	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400486b	            0x89d0	                            mov eax, edx	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400486d	          0x8d5001	                      lea edx, [rax + 1]	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004870	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004874	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400487a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2001	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400487e	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2001	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004884	          0x8d50fe	                      lea edx, [rax - 2]	      2001	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004887	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2001	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400488b	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      2001	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004891	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004895	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400489b	          0x8d5001	                      lea edx, [rax + 1]	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400489e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048a2	    0x8990ac000000	             mov dword [rax + 0xac], edx	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048ac	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048b2	          0x3b45f8	                cmp eax, dword [rbp - 8]	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048b5	     0xf87c7000000	                            ja 0x4004982	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048bf	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048c9	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048cf	            0x89c1	                            mov ecx, eax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048d1	            0xd3e2	                             shl edx, cl	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048d3	            0x89d1	                            mov ecx, edx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048d9	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048e1	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048e7	          0x83c002	                              add eax, 2	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048ea	            0x89c0	                            mov eax, eax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048ec	          0x4801d0	                            add rax, rdx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048ef	           0xfb600	                   movzx eax, byte [rax]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048f2	           0xfb6c0	                           movzx eax, al	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048f5	            0x31c1	                            xor ecx, eax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048f7	            0x89ca	                            mov edx, ecx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40048fd	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004903	            0x21c2	                            and edx, eax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004905	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004909	    0x899080000000	             mov dword [rax + 0x80], edx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400490f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004913	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004917	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400491b	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004921	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004925	          0x8b4058	            mov eax, dword [rax + 0x58] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004928	            0x21c8	                            and eax, ecx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400492a	            0x89c0	                            mov eax, eax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400492c	          0x4801c0	                            add rax, rax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400492f	          0x4801d0	                            add rax, rdx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004932	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004936	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400493a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400493e	    0x8b9280000000	            mov edx, dword [rdx + 0x80] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004944	            0x89d2	                            mov edx, edx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004946	          0x4801d2	                            add rdx, rdx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004949	          0x4801ca	                            add rdx, rcx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400494c	           0xfb712	                   movzx edx, word [rdx]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400494f	          0x668910	                      mov word [rax], dx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004952	           0xfb700	                   movzx eax, word [rax]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004955	           0xfb7c0	                           movzx eax, ax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004958	          0x8945f4	              mov dword [rbp - 0xc], eax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400495b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400495f	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004963	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004967	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400496d	            0x89c0	                            mov eax, eax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400496f	          0x4801c0	                            add rax, rax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004972	          0x4801c2	                            add rdx, rax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004975	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004979	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400497f	          0x668902	                      mov word [rdx], ax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004982	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x4004986	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x400498c	          0x8d50ff	                      lea edx, [rax - 1]	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x400498f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x4004993	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x4004999	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x400499d	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40049a3	            0x85c0	                           test eax, eax	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40049a5	     0xf85e6feffff	                           jne 0x4004891	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40049ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2007	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40049af	    0xc780a8000000	               mov dword [rax + 0xa8], 0	      2007	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40049b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2008	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40049bd	    0xc780a0000000	               mov dword [rax + 0xa0], 2	      2008	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40049c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40049cb	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40049d1	          0x8d5001	                      lea edx, [rax + 1]	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40049d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40049d8	    0x8990ac000000	             mov dword [rax + 0xac], edx	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40049de	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40049e2	     0xf848f020000	                            je 0x4004c77	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40049e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40049ec	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40049f2	            0x89c2	                            mov edx, eax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40049f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40049f8	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40049ff	          0x4829c2	                            sub rdx, rax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a02	          0x4889d0	                            mov rax, rdx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a05	          0x4889c7	                            mov rdi, rax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a08	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a0c	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a13	          0x4885c0	                           test rax, rax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a16	            0x781b	                            js 0x4004a33	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a18	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a1c	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a24	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a2b	            0x89c0	                            mov eax, eax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a2d	        0x488d3402	                    lea rsi, [rdx + rax]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a31	            0xeb05	                           jmp 0x4004a38	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a33	      0xbe00000000	                              mov esi, 0	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a3c	      0xb900000000	                              mov ecx, 0	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a41	          0x4889fa	                            mov rdx, rdi	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a44	          0x4889c7	                            mov rdi, rax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a47	      0xe800000000	                          call 0x4004a4c	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a4c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a50	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a56	            0x89c2	                            mov edx, eax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a58	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a5c	    0x488990980000	             mov qword [rax + 0x98], rdx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a67	          0x488b00	                    mov rax, qword [rax]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a6a	          0x4889c7	                            mov rdi, rax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a6d	      0xe8dac7ffff	                  call sym.flush_pending	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a72	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a76	          0x488b00	                    mov rax, qword [rax]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a79	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a7c	            0x85c0	                           test eax, eax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a7e	     0xf85f3010000	                           jne 0x4004c77	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a84	      0xb800000000	                              mov eax, 0	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a89	      0xe953040000	                           jmp 0x4004ee1	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a8e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a92	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a98	            0x85c0	                           test eax, eax	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004a9a	     0xf8496010000	                            je 0x4004c36	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4004aa0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004aa4	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004aa8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004aac	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ab2	          0x83e801	                              sub eax, 1	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ab5	            0x89c0	                            mov eax, eax	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ab7	          0x4801d0	                            add rax, rdx	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004aba	           0xfb600	                   movzx eax, byte [rax]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004abd	          0x8845f0	               mov byte [rbp - 0x10], al	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ac0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ac4	    0x488b90101700	          mov rdx, qword [rax + 0x1710] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004acb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004acf	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ad5	            0x89c0	                            mov eax, eax	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ad7	          0x4801c0	                            add rax, rax	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ada	          0x4801d0	                            add rax, rdx	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004add	      0x66c7000000	                       mov word [rax], 0	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ae2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ae6	    0x488bb0001700	          mov rsi, qword [rax + 0x1700] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004aed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004af1	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004af7	          0x8d4801	                      lea ecx, [rax + 1]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004afa	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004afe	    0x898a0c170000	          mov dword [rdx + 0x170c], ecx 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b04	            0x89c0	                            mov eax, eax	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b06	        0x488d1406	                    lea rdx, [rsi + rax]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b0a	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b0e	            0x8802	                      mov byte [rdx], al	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b10	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b14	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b18	          0x4863c8	                         movsxd rcx, eax	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b1b	        0x4883c134	                           add rcx, 0x34	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b1f	       0xfb7548a04	      movzx edx, word [rdx + rcx*4 + 4] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b24	          0x8d4a01	                      lea ecx, [rdx + 1]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b27	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b2b	            0x4898	                                    cdqe	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b2d	        0x4883c034	                           add rax, 0x34	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b31	      0x66894c8204	          mov word [rdx + rax*4 + 4], cx	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b3a	    0x8b900c170000	          mov edx, dword [rax + 0x170c] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b40	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b44	    0x8b8008170000	          mov eax, dword [rax + 0x1708] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b4a	          0x83e801	                              sub eax, 1	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b4d	            0x39c2	                            cmp edx, eax	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b4f	           0xf94c0	                                 sete al	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b52	           0xfb6c0	                           movzx eax, al	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b55	          0x8945fc	                mov dword [rbp - 4], eax	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b58	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b5c	     0xf848a000000	                            je 0x4004bec	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b66	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b6c	            0x89c2	                            mov edx, eax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b6e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b72	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b79	          0x4829c2	                            sub rdx, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b7c	          0x4889d0	                            mov rax, rdx	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b7f	          0x4889c7	                            mov rdi, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b86	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b8d	          0x4885c0	                           test rax, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b90	            0x781b	                            js 0x4004bad	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b92	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b96	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b9a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004b9e	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ba5	            0x89c0	                            mov eax, eax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004ba7	        0x488d3402	                    lea rsi, [rdx + rax]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bab	            0xeb05	                           jmp 0x4004bb2	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bad	      0xbe00000000	                              mov esi, 0	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bb2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bb6	      0xb900000000	                              mov ecx, 0	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bbb	          0x4889fa	                            mov rdx, rdi	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bbe	          0x4889c7	                            mov rdi, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bc1	      0xe800000000	                          call 0x4004bc6	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bca	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bd0	            0x89c2	                            mov edx, eax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bd2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bd6	    0x488990980000	             mov qword [rax + 0x98], rdx	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bdd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004be1	          0x488b00	                    mov rax, qword [rax]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004be4	          0x4889c7	                            mov rdi, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004be7	      0xe860c6ffff	                  call sym.flush_pending	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004bec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2023	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	CALL_6
0x4004bf0	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2023	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	CALL_6
0x4004bf6	          0x8d5001	                      lea edx, [rax + 1]	      2023	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	CALL_6
0x4004bf9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2023	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	CALL_6
0x4004bfd	    0x8990ac000000	             mov dword [rax + 0xac], edx	      2023	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	CALL_6
0x4004c03	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c07	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c0d	          0x8d50ff	                      lea edx, [rax - 1]	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c10	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c14	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c1a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c1e	          0x488b00	                    mov rax, qword [rax]	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c21	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c24	            0x85c0	                           test eax, eax	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c26	     0xf8577f8ffff	                           jne 0x40044a3	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c2c	      0xb800000000	                              mov eax, 0	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c31	      0xe9ab020000	                           jmp 0x4004ee1	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4004c36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2030	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004c3a	    0xc780a8000000	               mov dword [rax + 0xa8], 1	      2030	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4004c44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2031	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c48	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2031	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c4e	          0x8d5001	                      lea edx, [rax + 1]	      2031	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2031	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c55	    0x8990ac000000	             mov dword [rax + 0xac], edx	      2031	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c5b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c5f	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c65	          0x8d50ff	                      lea edx, [rax - 1]	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c68	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c6c	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c72	      0xe92cf8ffff	                           jmp 0x40044a3	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c77	              0x90	                                     nop	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4004c78	      0xe926f8ffff	                           jmp 0x40044a3	      2034	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c7d	              0x90	                                     nop	      1945	deflate.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x4004c7e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c82	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c88	            0x85c0	                           test eax, eax	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c8a	     0xf84c6000000	                            je 0x4004d56	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4004c90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004c94	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004c98	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004c9c	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004ca2	          0x83e801	                              sub eax, 1	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004ca5	            0x89c0	                            mov eax, eax	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004ca7	          0x4801d0	                            add rax, rdx	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004caa	           0xfb600	                   movzx eax, byte [rax]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cad	          0x8845f1	                mov byte [rbp - 0xf], al	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cb4	    0x488b90101700	          mov rdx, qword [rax + 0x1710] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cbb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cbf	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cc5	            0x89c0	                            mov eax, eax	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cc7	          0x4801c0	                            add rax, rax	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cca	          0x4801d0	                            add rax, rdx	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004ccd	      0x66c7000000	                       mov word [rax], 0	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cd2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cd6	    0x488bb0001700	          mov rsi, qword [rax + 0x1700] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cdd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004ce1	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004ce7	          0x8d4801	                      lea ecx, [rax + 1]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cea	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cee	    0x898a0c170000	          mov dword [rdx + 0x170c], ecx 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cf4	            0x89c0	                            mov eax, eax	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cf6	        0x488d1406	                    lea rdx, [rsi + rax]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cfa	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004cfe	            0x8802	                      mov byte [rdx], al	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d00	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d04	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d08	          0x4863c8	                         movsxd rcx, eax	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d0b	        0x4883c134	                           add rcx, 0x34	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d0f	       0xfb7548a04	      movzx edx, word [rdx + rcx*4 + 4] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d14	          0x8d4a01	                      lea ecx, [rdx + 1]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d17	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d1b	            0x4898	                                    cdqe	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d1d	        0x4883c034	                           add rax, 0x34	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d21	      0x66894c8204	          mov word [rdx + rax*4 + 4], cx	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d2a	    0x8b900c170000	          mov edx, dword [rax + 0x170c] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d30	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d34	    0x8b8008170000	          mov eax, dword [rax + 0x1708] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d3a	          0x83e801	                              sub eax, 1	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d3d	            0x39c2	                            cmp edx, eax	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d3f	           0xf94c0	                                 sete al	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d42	           0xfb6c0	                           movzx eax, al	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d45	          0x8945fc	                mov dword [rbp - 4], eax	      2038	deflate.c	FUNCTION_22	FOR_1
0x4004d48	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2039	deflate.c	FUNCTION_22	CALL_7
0x4004d4c	    0xc780a8000000	               mov dword [rax + 0xa8], 0	      2039	deflate.c	FUNCTION_22	CALL_7
0x4004d56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4004d5a	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4004d60	      0xba02000000	                              mov edx, 2	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4004d65	          0x83f802	                              cmp eax, 2	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4004d68	           0xf46d0	                         cmovbe edx, eax	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4004d6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4004d6f	    0x89902c170000	          mov dword [rax + 0x172c], edx 	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4004d75	        0x837dd404	               cmp dword [rbp - 0x2c], 4	      2042	deflate.c	FUNCTION_22	IF_13	CALL_9
0x4004d79	     0xf85ac000000	                           jne 0x4004e2b	      2042	deflate.c	FUNCTION_22	IF_13	CALL_9
0x4004d7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004d83	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4004d89	            0x89c2	                            mov edx, eax	      2043	deflate.c	FUNCTION_22	IF_13
0x4004d8b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004d8f	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4004d96	          0x4829c2	                            sub rdx, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4004d99	          0x4889d0	                            mov rax, rdx	      2043	deflate.c	FUNCTION_22	IF_13
0x4004d9c	          0x4889c7	                            mov rdi, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4004d9f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004da3	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4004daa	          0x4885c0	                           test rax, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dad	            0x781b	                            js 0x4004dca	      2043	deflate.c	FUNCTION_22	IF_13
0x4004daf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004db3	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4004db7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dbb	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dc2	            0x89c0	                            mov eax, eax	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dc4	        0x488d3402	                    lea rsi, [rdx + rax]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dc8	            0xeb05	                           jmp 0x4004dcf	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dca	      0xbe00000000	                              mov esi, 0	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dcf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dd3	      0xb901000000	                              mov ecx, 1	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dd8	          0x4889fa	                            mov rdx, rdi	      2043	deflate.c	FUNCTION_22	IF_13
0x4004ddb	          0x4889c7	                            mov rdi, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dde	      0xe800000000	                          call 0x4004de3	      2043	deflate.c	FUNCTION_22	IF_13
0x4004de3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004de7	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4004ded	            0x89c2	                            mov edx, eax	      2043	deflate.c	FUNCTION_22	IF_13
0x4004def	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004df3	    0x488990980000	             mov qword [rax + 0x98], rdx	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dfa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004dfe	          0x488b00	                    mov rax, qword [rax]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004e01	          0x4889c7	                            mov rdi, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4004e04	      0xe843c4ffff	                  call sym.flush_pending	      2043	deflate.c	FUNCTION_22	IF_13
0x4004e09	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004e0d	          0x488b00	                    mov rax, qword [rax]	      2043	deflate.c	FUNCTION_22	IF_13
0x4004e10	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4004e13	            0x85c0	                           test eax, eax	      2043	deflate.c	FUNCTION_22	IF_13
0x4004e15	            0x750a	                           jne 0x4004e21	      2043	deflate.c	FUNCTION_22	IF_13
0x4004e17	      0xb802000000	                              mov eax, 2	      2043	deflate.c	FUNCTION_22	IF_13
0x4004e1c	      0xe9c0000000	                           jmp 0x4004ee1	      2043	deflate.c	FUNCTION_22	IF_13
0x4004e21	      0xb803000000	                              mov eax, 3	      2044	deflate.c	FUNCTION_22	IF_13
0x4004e26	      0xe9b6000000	                           jmp 0x4004ee1	      2044	deflate.c	FUNCTION_22	IF_13
0x4004e2b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2046	deflate.c	FUNCTION_22	IF_14
0x4004e2f	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2046	deflate.c	FUNCTION_22	IF_14
0x4004e35	            0x85c0	                           test eax, eax	      2046	deflate.c	FUNCTION_22	IF_14
0x4004e37	     0xf849f000000	                            je 0x4004edc	      2046	deflate.c	FUNCTION_22	IF_14
0x4004e3d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e41	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e47	            0x89c2	                            mov edx, eax	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e4d	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e54	          0x4829c2	                            sub rdx, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e57	          0x4889d0	                            mov rax, rdx	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e5a	          0x4889c7	                            mov rdi, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e5d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e61	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e68	          0x4885c0	                           test rax, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e6b	            0x781b	                            js 0x4004e88	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e6d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e71	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e79	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e80	            0x89c0	                            mov eax, eax	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e82	        0x488d3402	                    lea rsi, [rdx + rax]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e86	            0xeb05	                           jmp 0x4004e8d	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e88	      0xbe00000000	                              mov esi, 0	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e91	      0xb900000000	                              mov ecx, 0	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e96	          0x4889fa	                            mov rdx, rdi	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e99	          0x4889c7	                            mov rdi, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4004e9c	      0xe800000000	                          call 0x4004ea1	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ea1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ea5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4004eab	            0x89c2	                            mov edx, eax	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ead	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004eb1	    0x488990980000	             mov qword [rax + 0x98], rdx	      2047	deflate.c	FUNCTION_22	IF_14
0x4004eb8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ebc	          0x488b00	                    mov rax, qword [rax]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ebf	          0x4889c7	                            mov rdi, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ec2	      0xe885c3ffff	                  call sym.flush_pending	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ec7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ecb	          0x488b00	                    mov rax, qword [rax]	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ece	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ed1	            0x85c0	                           test eax, eax	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ed3	            0x7507	                           jne 0x4004edc	      2047	deflate.c	FUNCTION_22	IF_14
0x4004ed5	      0xb800000000	                              mov eax, 0	      2047	deflate.c	FUNCTION_22	IF_14
0x4004eda	            0xeb05	                           jmp 0x4004ee1	      2047	deflate.c	FUNCTION_22	IF_14
0x4004edc	      0xb801000000	                              mov eax, 1	      2048	deflate.c	FUNCTION_22	IF_14
0x4004ee1	              0xc9	                                   leave	      2049	deflate.c	FUNCTION_22	IF_14
0x4004ee2	              0xc3	                                     ret	      2049	deflate.c	FUNCTION_22	IF_14
deflateGetDictionary	ELSE,0:DO,0:FOR,0:functions,0:SWITCH,0:CALL,2:IF,4:WHILE,0	59
0x4000989	              0x55	                                push rbp	       449	deflate.c	
0x400098a	          0x4889e5	                            mov rbp, rsp	       449	deflate.c	
0x400098d	        0x4883ec30	                           sub rsp, 0x30	       449	deflate.c	
0x4000991	        0x48897de8	             mov qword [rbp - 0x18], rdi	       449	deflate.c	
0x4000995	        0x488975e0	             mov qword [rbp - 0x20], rsi	       449	deflate.c	
0x4000999	        0x488955d8	             mov qword [rbp - 0x28], rdx	       449	deflate.c	
0x400099d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       453	deflate.c	FUNCTION_3
0x40009a1	          0x4889c7	                            mov rdi, rax	       453	deflate.c	FUNCTION_3
0x40009a4	      0xe8cafbffff	              call sym.deflateStateCheck	       453	deflate.c	FUNCTION_3
0x40009a9	            0x85c0	                           test eax, eax	       453	deflate.c	FUNCTION_3
0x40009ab	            0x740a	                            je 0x40009b7	       453	deflate.c	FUNCTION_3
0x40009ad	      0xb8feffffff	                     mov eax, 0xfffffffe	       454	deflate.c	FUNCTION_3
0x40009b2	      0xe99e000000	                           jmp 0x4000a55	       454	deflate.c	FUNCTION_3
0x40009b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	deflate.c	FUNCTION_3
0x40009bb	        0x488b4038	            mov rax, qword [rax + 0x38] 	       455	deflate.c	FUNCTION_3
0x40009bf	        0x488945f8	                mov qword [rbp - 8], rax	       455	deflate.c	FUNCTION_3
0x40009c3	        0x488b45f8	                mov rax, qword [rbp - 8]	       456	deflate.c	FUNCTION_3
0x40009c7	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	       456	deflate.c	FUNCTION_3
0x40009cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       456	deflate.c	FUNCTION_3
0x40009d1	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       456	deflate.c	FUNCTION_3
0x40009d7	             0x1d0	                            add eax, edx	       456	deflate.c	FUNCTION_3
0x40009d9	          0x8945f4	              mov dword [rbp - 0xc], eax	       456	deflate.c	FUNCTION_3
0x40009dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       457	deflate.c	FUNCTION_3	IF_1	CALL_1
0x40009e0	          0x8b4050	            mov eax, dword [rax + 0x50] 	       457	deflate.c	FUNCTION_3	IF_1	CALL_1
0x40009e3	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       457	deflate.c	FUNCTION_3	IF_1	CALL_1
0x40009e6	            0x730a	                           jae 0x40009f2	       457	deflate.c	FUNCTION_3	IF_1	CALL_1
0x40009e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	deflate.c	FUNCTION_3	IF_1
0x40009ec	          0x8b4050	            mov eax, dword [rax + 0x50] 	       458	deflate.c	FUNCTION_3	IF_1
0x40009ef	          0x8945f4	              mov dword [rbp - 0xc], eax	       458	deflate.c	FUNCTION_3	IF_1
0x40009f2	      0x48837de000	               cmp qword [rbp - 0x20], 0	       459	deflate.c	FUNCTION_3
0x40009f7	            0x7447	                            je 0x4000a40	       459	deflate.c	FUNCTION_3
0x40009f9	        0x837df400	                cmp dword [rbp - 0xc], 0	       459	deflate.c	FUNCTION_3
0x40009fd	            0x7441	                            je 0x4000a40	       459	deflate.c	FUNCTION_3
0x40009ff	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       460	deflate.c	FUNCTION_3
0x4000a02	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	deflate.c	FUNCTION_3
0x4000a06	        0x488b4860	            mov rcx, qword [rax + 0x60] 	       460	deflate.c	FUNCTION_3
0x4000a0a	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	deflate.c	FUNCTION_3
0x4000a0e	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       460	deflate.c	FUNCTION_3
0x4000a14	            0x89c6	                            mov esi, eax	       460	deflate.c	FUNCTION_3
0x4000a16	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	deflate.c	FUNCTION_3
0x4000a1a	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       460	deflate.c	FUNCTION_3
0x4000a20	            0x89c0	                            mov eax, eax	       460	deflate.c	FUNCTION_3
0x4000a22	          0x4801c6	                            add rsi, rax	       460	deflate.c	FUNCTION_3
0x4000a25	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       460	deflate.c	FUNCTION_3
0x4000a28	          0x4829c6	                            sub rsi, rax	       460	deflate.c	FUNCTION_3
0x4000a2b	          0x4889f0	                            mov rax, rsi	       460	deflate.c	FUNCTION_3
0x4000a2e	          0x4801c1	                            add rcx, rax	       460	deflate.c	FUNCTION_3
0x4000a31	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       460	deflate.c	FUNCTION_3
0x4000a35	          0x4889ce	                            mov rsi, rcx	       460	deflate.c	FUNCTION_3
0x4000a38	          0x4889c7	                            mov rdi, rax	       460	deflate.c	FUNCTION_3
0x4000a3b	      0xe800000000	                          call 0x4000a40	       460	deflate.c	FUNCTION_3
0x4000a40	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       461	deflate.c	FUNCTION_3	IF_2
0x4000a45	            0x7409	                            je 0x4000a50	       461	deflate.c	FUNCTION_3	IF_2
0x4000a47	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       462	deflate.c	FUNCTION_3	IF_2
0x4000a4b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       462	deflate.c	FUNCTION_3	IF_2
0x4000a4e	            0x8910	                    mov dword [rax], edx	       462	deflate.c	FUNCTION_3	IF_2
0x4000a50	      0xb800000000	                              mov eax, 0	       463	deflate.c	FUNCTION_3	IF_3
0x4000a55	              0xc9	                                   leave	       464	deflate.c	FUNCTION_3	CALL_2
0x4000a56	              0xc3	                                     ret	       464	deflate.c	FUNCTION_3	CALL_2
deflate_rle	ELSE,1:DO,1:FOR,1:functions,0:SWITCH,0:CALL,5:IF,10:WHILE,0	431
0x4004ee3	              0x55	                                push rbp	      2060	deflate.c	
0x4004ee4	          0x4889e5	                            mov rbp, rsp	      2060	deflate.c	
0x4004ee7	        0x4883ec30	                           sub rsp, 0x30	      2060	deflate.c	
0x4004eeb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2060	deflate.c	
0x4004eef	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2060	deflate.c	
0x4004ef2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2070	deflate.c	FUNCTION_23	FOR_1
0x4004ef6	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2070	deflate.c	FUNCTION_23	FOR_1
0x4004efc	      0x3d02010000	                          cmp eax, 0x102	      2070	deflate.c	FUNCTION_23	FOR_1
0x4004f01	            0x773f	                            ja 0x4004f42	      2070	deflate.c	FUNCTION_23	FOR_1
0x4004f03	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2071	deflate.c	FUNCTION_23	FOR_1
0x4004f07	          0x4889c7	                            mov rdi, rax	      2071	deflate.c	FUNCTION_23	FOR_1
0x4004f0a	      0xe8abe0ffff	                    call sym.fill_window	      2071	deflate.c	FUNCTION_23	FOR_1
0x4004f0f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2072	deflate.c	FUNCTION_23	FOR_1
0x4004f13	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2072	deflate.c	FUNCTION_23	FOR_1
0x4004f19	      0x3d02010000	                          cmp eax, 0x102	      2072	deflate.c	FUNCTION_23	FOR_1
0x4004f1e	            0x7710	                            ja 0x4004f30	      2072	deflate.c	FUNCTION_23	FOR_1
0x4004f20	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2072	deflate.c	FUNCTION_23	FOR_1
0x4004f24	            0x750a	                           jne 0x4004f30	      2072	deflate.c	FUNCTION_23	FOR_1
0x4004f26	      0xb800000000	                              mov eax, 0	      2073	deflate.c	FUNCTION_23	FOR_1
0x4004f2b	      0xe978060000	                           jmp 0x40055a8	      2073	deflate.c	FUNCTION_23	FOR_1
0x4004f30	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2075	deflate.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4004f34	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2075	deflate.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4004f3a	            0x85c0	                           test eax, eax	      2075	deflate.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4004f3c	     0xf84eb040000	                            je 0x400542d	      2075	deflate.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4004f42	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2079	deflate.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4004f46	    0xc780a0000000	               mov dword [rax + 0xa0], 0	      2079	deflate.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4004f50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4004f54	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4004f5a	          0x83f802	                              cmp eax, 2	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4004f5d	     0xf86a8010000	                           jbe 0x400510b	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4004f63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4004f67	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4004f6d	            0x85c0	                           test eax, eax	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4004f6f	     0xf8496010000	                            je 0x400510b	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4004f75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2081	deflate.c	FUNCTION_23	FOR_1
0x4004f79	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2081	deflate.c	FUNCTION_23	FOR_1
0x4004f7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2081	deflate.c	FUNCTION_23	FOR_1
0x4004f81	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2081	deflate.c	FUNCTION_23	FOR_1
0x4004f87	            0x89c0	                            mov eax, eax	      2081	deflate.c	FUNCTION_23	FOR_1
0x4004f89	        0x4883e801	                              sub rax, 1	      2081	deflate.c	FUNCTION_23	FOR_1
0x4004f8d	          0x4801d0	                            add rax, rdx	      2081	deflate.c	FUNCTION_23	FOR_1
0x4004f90	        0x488945f0	             mov qword [rbp - 0x10], rax	      2081	deflate.c	FUNCTION_23	FOR_1
0x4004f94	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2082	deflate.c	FUNCTION_23	FOR_1
0x4004f98	           0xfb600	                   movzx eax, byte [rax]	      2082	deflate.c	FUNCTION_23	FOR_1
0x4004f9b	           0xfb6c0	                           movzx eax, al	      2082	deflate.c	FUNCTION_23	FOR_1
0x4004f9e	          0x8945ec	             mov dword [rbp - 0x14], eax	      2082	deflate.c	FUNCTION_23	FOR_1
0x4004fa1	      0x488345f001	               add qword [rbp - 0x10], 1	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fa6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004faa	           0xfb600	                   movzx eax, byte [rax]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fad	           0xfb6c0	                           movzx eax, al	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fb0	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fb3	     0xf8552010000	                           jne 0x400510b	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fb9	      0x488345f001	               add qword [rbp - 0x10], 1	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fbe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fc2	           0xfb600	                   movzx eax, byte [rax]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fc5	           0xfb6c0	                           movzx eax, al	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fc8	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fcb	     0xf853a010000	                           jne 0x400510b	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fd1	      0x488345f001	               add qword [rbp - 0x10], 1	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fd6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fda	           0xfb600	                   movzx eax, byte [rax]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fdd	           0xfb6c0	                           movzx eax, al	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fe0	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fe3	     0xf8522010000	                           jne 0x400510b	      2083	deflate.c	FUNCTION_23	FOR_1
0x4004fe9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4004fed	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4004ff1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4004ff5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4004ffb	            0x89c0	                            mov eax, eax	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4004ffd	    0x480502010000	                          add rax, 0x102	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4005003	          0x4801d0	                            add rax, rdx	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4005006	        0x488945f8	                mov qword [rbp - 8], rax	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400500a	      0x488345f001	               add qword [rbp - 0x10], 1	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x400500f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4005013	           0xfb600	                   movzx eax, byte [rax]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4005016	           0xfb6c0	                           movzx eax, al	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4005019	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x400501c	     0xf859e000000	                           jne 0x40050c0	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x4005022	      0x488345f001	               add qword [rbp - 0x10], 1	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4005027	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400502b	           0xfb600	                   movzx eax, byte [rax]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400502e	           0xfb6c0	                           movzx eax, al	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4005031	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4005034	     0xf8586000000	                           jne 0x40050c0	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400503a	      0x488345f001	               add qword [rbp - 0x10], 1	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400503f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005043	           0xfb600	                   movzx eax, byte [rax]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005046	           0xfb6c0	                           movzx eax, al	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005049	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400504c	            0x7572	                           jne 0x40050c0	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400504e	      0x488345f001	               add qword [rbp - 0x10], 1	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005053	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005057	           0xfb600	                   movzx eax, byte [rax]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400505a	           0xfb6c0	                           movzx eax, al	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400505d	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005060	            0x755e	                           jne 0x40050c0	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005062	      0x488345f001	               add qword [rbp - 0x10], 1	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005067	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400506b	           0xfb600	                   movzx eax, byte [rax]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400506e	           0xfb6c0	                           movzx eax, al	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005071	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005074	            0x754a	                           jne 0x40050c0	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005076	      0x488345f001	               add qword [rbp - 0x10], 1	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400507b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400507f	           0xfb600	                   movzx eax, byte [rax]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005082	           0xfb6c0	                           movzx eax, al	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005085	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005088	            0x7536	                           jne 0x40050c0	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400508a	      0x488345f001	               add qword [rbp - 0x10], 1	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400508f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x4005093	           0xfb600	                   movzx eax, byte [rax]	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x4005096	           0xfb6c0	                           movzx eax, al	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x4005099	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400509c	            0x7522	                           jne 0x40050c0	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400509e	      0x488345f001	               add qword [rbp - 0x10], 1	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40050a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40050a7	           0xfb600	                   movzx eax, byte [rax]	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40050aa	           0xfb6c0	                           movzx eax, al	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40050ad	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40050b0	            0x750e	                           jne 0x40050c0	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40050b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40050b6	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40050ba	     0xf824affffff	                            jb 0x400500a	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40050c0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050c8	          0x4829c2	                            sub rdx, rax	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050cb	          0x4889d0	                            mov rax, rdx	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050ce	      0xba02010000	                          mov edx, 0x102	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050d3	            0x29c2	                            sub edx, eax	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050d9	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050e3	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050ed	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050f3	            0x39c2	                            cmp edx, eax	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050f5	            0x7614	                           jbe 0x400510b	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2093	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40050fb	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      2093	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005101	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2093	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4005105	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      2093	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400510b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x400510f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4005115	          0x83f802	                              cmp eax, 2	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4005118	     0xf867c010000	                           jbe 0x400529a	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x400511e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005122	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005128	          0x83e803	                              sub eax, 3	      2102	deflate.c	FUNCTION_23	FOR_1
0x400512b	          0x8845e4	               mov byte [rbp - 0x1c], al	      2102	deflate.c	FUNCTION_23	FOR_1
0x400512e	    0x66c745e60100	                mov word [rbp - 0x1a], 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005134	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005138	    0x488b90101700	          mov rdx, qword [rax + 0x1710] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x400513f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005143	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005149	            0x89c0	                            mov eax, eax	      2102	deflate.c	FUNCTION_23	FOR_1
0x400514b	          0x4801c0	                            add rax, rax	      2102	deflate.c	FUNCTION_23	FOR_1
0x400514e	          0x4801c2	                            add rdx, rax	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005151	         0xfb745e6	            movzx eax, word [rbp - 0x1a]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005155	          0x668902	                      mov word [rdx], ax	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005158	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x400515c	    0x488bb0001700	          mov rsi, qword [rax + 0x1700] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005163	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005167	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x400516d	          0x8d4801	                      lea ecx, [rax + 1]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005170	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005174	    0x898a0c170000	          mov dword [rdx + 0x170c], ecx 	      2102	deflate.c	FUNCTION_23	FOR_1
0x400517a	            0x89c0	                            mov eax, eax	      2102	deflate.c	FUNCTION_23	FOR_1
0x400517c	        0x488d1406	                    lea rdx, [rsi + rax]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005180	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005184	            0x8802	                      mov byte [rdx], al	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005186	         0xfb745e6	            movzx eax, word [rbp - 0x1a]	      2102	deflate.c	FUNCTION_23	FOR_1
0x400518a	          0x83e801	                              sub eax, 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x400518d	        0x668945e6	               mov word [rbp - 0x1a], ax	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005191	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005195	            0x4898	                                    cdqe	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005197	     0xfb680000000	                   movzx eax, byte [rax]	      2102	deflate.c	FUNCTION_23	FOR_1
0x400519e	           0xfb6c0	                           movzx eax, al	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051a1	       0x501010000	                          add eax, 0x101	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051a6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051aa	          0x4863c8	                         movsxd rcx, eax	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051ad	        0x4883c134	                           add rcx, 0x34	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051b1	       0xfb7548a04	      movzx edx, word [rdx + rcx*4 + 4] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051b6	          0x8d4a01	                      lea ecx, [rdx + 1]	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051b9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051bd	            0x4898	                                    cdqe	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051bf	        0x4883c034	                           add rax, 0x34	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051c3	      0x66894c8204	          mov word [rdx + rax*4 + 4], cx	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051c8	    0x66817de6ff00	            cmp word [rbp - 0x1a], 0xff 	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051ce	            0x7712	                            ja 0x40051e2	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051d0	         0xfb745e6	            movzx eax, word [rbp - 0x1a]	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051d4	            0x4898	                                    cdqe	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051d6	     0xfb680000000	                   movzx eax, byte [rax]	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051dd	           0xfb6c0	                           movzx eax, al	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051e0	            0xeb1c	                           jmp 0x40051fe	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051e2	         0xfb745e6	            movzx eax, word [rbp - 0x1a]	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051e6	        0x66c1e807	                               shr ax, 7	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051ea	           0xfb7c0	                           movzx eax, ax	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051ed	       0x500010000	                          add eax, 0x100	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051f2	            0x4898	                                    cdqe	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051f4	     0xfb680000000	                   movzx eax, byte [rax]	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051fb	           0xfb6c0	                           movzx eax, al	      2102	deflate.c	FUNCTION_23	FOR_1
0x40051fe	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005202	          0x4863c8	                         movsxd rcx, eax	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005205	    0x4881c1700200	                          add rcx, 0x270	      2102	deflate.c	FUNCTION_23	FOR_1
0x400520c	       0xfb7548a08	      movzx edx, word [rdx + rcx*4 + 8] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005211	          0x8d4a01	                      lea ecx, [rdx + 1]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005214	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005218	            0x4898	                                    cdqe	      2102	deflate.c	FUNCTION_23	FOR_1
0x400521a	    0x480570020000	                          add rax, 0x270	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005220	      0x66894c8208	          mov word [rdx + rax*4 + 8], cx	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005225	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005229	    0x8b900c170000	          mov edx, dword [rax + 0x170c] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x400522f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005233	    0x8b8008170000	          mov eax, dword [rax + 0x1708] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005239	          0x83e801	                              sub eax, 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x400523c	            0x39c2	                            cmp edx, eax	      2102	deflate.c	FUNCTION_23	FOR_1
0x400523e	           0xf94c0	                                 sete al	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005241	           0xfb6c0	                           movzx eax, al	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005244	          0x8945e8	             mov dword [rbp - 0x18], eax	      2102	deflate.c	FUNCTION_23	FOR_1
0x4005247	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400524b	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005251	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005255	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400525b	            0x29c2	                            sub edx, eax	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400525d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005261	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005267	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2105	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400526b	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      2105	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005271	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2105	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005275	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2105	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400527b	             0x1c2	                            add edx, eax	      2105	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400527d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2105	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005281	    0x8990ac000000	             mov dword [rax + 0xac], edx	      2105	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005287	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2106	deflate.c	FUNCTION_23	FOR_1	IF_7	CALL_3
0x400528b	    0xc780a0000000	               mov dword [rax + 0xa0], 0	      2106	deflate.c	FUNCTION_23	FOR_1	IF_7	CALL_3
0x4005295	      0xe9e3000000	                           jmp 0x400537d	      2106	deflate.c	FUNCTION_23	FOR_1	IF_7	CALL_3
0x400529a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400529e	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052a6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052ac	            0x89c0	                            mov eax, eax	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052ae	          0x4801d0	                            add rax, rdx	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052b1	           0xfb600	                   movzx eax, byte [rax]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052b4	          0x8845e5	               mov byte [rbp - 0x1b], al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052bb	    0x488b90101700	          mov rdx, qword [rax + 0x1710] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052c6	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052cc	            0x89c0	                            mov eax, eax	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052ce	          0x4801c0	                            add rax, rax	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052d1	          0x4801d0	                            add rax, rdx	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052d4	      0x66c7000000	                       mov word [rax], 0	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052dd	    0x488bb0001700	          mov rsi, qword [rax + 0x1700] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052e8	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052ee	          0x8d4801	                      lea ecx, [rax + 1]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052f1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052f5	    0x898a0c170000	          mov dword [rdx + 0x170c], ecx 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052fb	            0x89c0	                            mov eax, eax	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40052fd	        0x488d1406	                    lea rdx, [rsi + rax]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005301	         0xfb645e5	            movzx eax, byte [rbp - 0x1b]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005305	            0x8802	                      mov byte [rdx], al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005307	         0xfb645e5	            movzx eax, byte [rbp - 0x1b]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400530b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400530f	          0x4863c8	                         movsxd rcx, eax	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005312	        0x4883c134	                           add rcx, 0x34	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005316	       0xfb7548a04	      movzx edx, word [rdx + rcx*4 + 4] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400531b	          0x8d4a01	                      lea ecx, [rdx + 1]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400531e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005322	            0x4898	                                    cdqe	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005324	        0x4883c034	                           add rax, 0x34	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005328	      0x66894c8204	          mov word [rdx + rax*4 + 4], cx	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400532d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005331	    0x8b900c170000	          mov edx, dword [rax + 0x170c] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005337	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400533b	    0x8b8008170000	          mov eax, dword [rax + 0x1708] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005341	          0x83e801	                              sub eax, 1	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005344	            0x39c2	                            cmp edx, eax	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005346	           0xf94c0	                                 sete al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4005349	           0xfb6c0	                           movzx eax, al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400534c	          0x8945e8	             mov dword [rbp - 0x18], eax	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400534f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2111	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x4005353	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2111	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x4005359	          0x8d50ff	                      lea edx, [rax - 1]	      2111	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x400535c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2111	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x4005360	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2111	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x4005366	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2112	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x400536a	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2112	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x4005370	          0x8d5001	                      lea edx, [rax + 1]	      2112	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x4005373	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2112	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x4005377	    0x8990ac000000	             mov dword [rax + 0xac], edx	      2112	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x400537d	        0x837de800	               cmp dword [rbp - 0x18], 0	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005381	     0xf846bfbffff	                            je 0x4004ef2	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005387	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x400538b	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005391	            0x89c2	                            mov edx, eax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005393	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005397	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x400539e	          0x4829c2	                            sub rdx, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053a1	          0x4889d0	                            mov rax, rdx	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053a4	          0x4889c7	                            mov rdi, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053ab	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053b2	          0x4885c0	                           test rax, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053b5	            0x781b	                            js 0x40053d2	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053bb	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053c3	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053ca	            0x89c0	                            mov eax, eax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053cc	        0x488d3402	                    lea rsi, [rdx + rax]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053d0	            0xeb05	                           jmp 0x40053d7	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053d2	      0xbe00000000	                              mov esi, 0	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053db	      0xb900000000	                              mov ecx, 0	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053e0	          0x4889fa	                            mov rdx, rdi	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053e3	          0x4889c7	                            mov rdi, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053e6	      0xe800000000	                          call 0x40053eb	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053ef	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053f5	            0x89c2	                            mov edx, eax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40053fb	    0x488990980000	             mov qword [rax + 0x98], rdx	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005402	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005406	          0x488b00	                    mov rax, qword [rax]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005409	          0x4889c7	                            mov rdi, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x400540c	      0xe83bbeffff	                  call sym.flush_pending	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005411	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005415	          0x488b00	                    mov rax, qword [rax]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005418	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x400541b	            0x85c0	                           test eax, eax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x400541d	     0xf85cffaffff	                           jne 0x4004ef2	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005423	      0xb800000000	                              mov eax, 0	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4005428	      0xe97b010000	                           jmp 0x40055a8	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x400542d	              0x90	                                     nop	      2075	deflate.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x400542e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2116	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x4005432	    0xc7802c170000	            mov dword [rax + 0x172c], 0 	      2116	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x400543c	        0x837dd404	               cmp dword [rbp - 0x2c], 4	      2117	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x4005440	     0xf85ac000000	                           jne 0x40054f2	      2117	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x4005446	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400544a	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005450	            0x89c2	                            mov edx, eax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005452	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005456	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400545d	          0x4829c2	                            sub rdx, rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005460	          0x4889d0	                            mov rax, rdx	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005463	          0x4889c7	                            mov rdi, rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005466	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400546a	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005471	          0x4885c0	                           test rax, rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005474	            0x781b	                            js 0x4005491	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005476	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400547a	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400547e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005482	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005489	            0x89c0	                            mov eax, eax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400548b	        0x488d3402	                    lea rsi, [rdx + rax]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400548f	            0xeb05	                           jmp 0x4005496	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005491	      0xbe00000000	                              mov esi, 0	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4005496	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400549a	      0xb901000000	                              mov ecx, 1	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400549f	          0x4889fa	                            mov rdx, rdi	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054a2	          0x4889c7	                            mov rdi, rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054a5	      0xe800000000	                          call 0x40054aa	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054ae	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054b4	            0x89c2	                            mov edx, eax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054ba	    0x488990980000	             mov qword [rax + 0x98], rdx	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054c5	          0x488b00	                    mov rax, qword [rax]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054c8	          0x4889c7	                            mov rdi, rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054cb	      0xe87cbdffff	                  call sym.flush_pending	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054d4	          0x488b00	                    mov rax, qword [rax]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054d7	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054da	            0x85c0	                           test eax, eax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054dc	            0x750a	                           jne 0x40054e8	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054de	      0xb802000000	                              mov eax, 2	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054e3	      0xe9c0000000	                           jmp 0x40055a8	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40054e8	      0xb803000000	                              mov eax, 3	      2119	deflate.c	FUNCTION_23	FOR_1
0x40054ed	      0xe9b6000000	                           jmp 0x40055a8	      2119	deflate.c	FUNCTION_23	FOR_1
0x40054f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2121	deflate.c	FUNCTION_23	IF_9
0x40054f6	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2121	deflate.c	FUNCTION_23	IF_9
0x40054fc	            0x85c0	                           test eax, eax	      2121	deflate.c	FUNCTION_23	IF_9
0x40054fe	     0xf849f000000	                            je 0x40055a3	      2121	deflate.c	FUNCTION_23	IF_9
0x4005504	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	deflate.c	FUNCTION_23	IF_9
0x4005508	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2122	deflate.c	FUNCTION_23	IF_9
0x400550e	            0x89c2	                            mov edx, eax	      2122	deflate.c	FUNCTION_23	IF_9
0x4005510	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	deflate.c	FUNCTION_23	IF_9
0x4005514	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2122	deflate.c	FUNCTION_23	IF_9
0x400551b	          0x4829c2	                            sub rdx, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x400551e	          0x4889d0	                            mov rax, rdx	      2122	deflate.c	FUNCTION_23	IF_9
0x4005521	          0x4889c7	                            mov rdi, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4005524	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	deflate.c	FUNCTION_23	IF_9
0x4005528	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2122	deflate.c	FUNCTION_23	IF_9
0x400552f	          0x4885c0	                           test rax, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4005532	            0x781b	                            js 0x400554f	      2122	deflate.c	FUNCTION_23	IF_9
0x4005534	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	deflate.c	FUNCTION_23	IF_9
0x4005538	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2122	deflate.c	FUNCTION_23	IF_9
0x400553c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	deflate.c	FUNCTION_23	IF_9
0x4005540	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2122	deflate.c	FUNCTION_23	IF_9
0x4005547	            0x89c0	                            mov eax, eax	      2122	deflate.c	FUNCTION_23	IF_9
0x4005549	        0x488d3402	                    lea rsi, [rdx + rax]	      2122	deflate.c	FUNCTION_23	IF_9
0x400554d	            0xeb05	                           jmp 0x4005554	      2122	deflate.c	FUNCTION_23	IF_9
0x400554f	      0xbe00000000	                              mov esi, 0	      2122	deflate.c	FUNCTION_23	IF_9
0x4005554	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	deflate.c	FUNCTION_23	IF_9
0x4005558	      0xb900000000	                              mov ecx, 0	      2122	deflate.c	FUNCTION_23	IF_9
0x400555d	          0x4889fa	                            mov rdx, rdi	      2122	deflate.c	FUNCTION_23	IF_9
0x4005560	          0x4889c7	                            mov rdi, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4005563	      0xe800000000	                          call 0x4005568	      2122	deflate.c	FUNCTION_23	IF_9
0x4005568	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	deflate.c	FUNCTION_23	IF_9
0x400556c	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2122	deflate.c	FUNCTION_23	IF_9
0x4005572	            0x89c2	                            mov edx, eax	      2122	deflate.c	FUNCTION_23	IF_9
0x4005574	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	deflate.c	FUNCTION_23	IF_9
0x4005578	    0x488990980000	             mov qword [rax + 0x98], rdx	      2122	deflate.c	FUNCTION_23	IF_9
0x400557f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	deflate.c	FUNCTION_23	IF_9
0x4005583	          0x488b00	                    mov rax, qword [rax]	      2122	deflate.c	FUNCTION_23	IF_9
0x4005586	          0x4889c7	                            mov rdi, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4005589	      0xe8bebcffff	                  call sym.flush_pending	      2122	deflate.c	FUNCTION_23	IF_9
0x400558e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2122	deflate.c	FUNCTION_23	IF_9
0x4005592	          0x488b00	                    mov rax, qword [rax]	      2122	deflate.c	FUNCTION_23	IF_9
0x4005595	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2122	deflate.c	FUNCTION_23	IF_9
0x4005598	            0x85c0	                           test eax, eax	      2122	deflate.c	FUNCTION_23	IF_9
0x400559a	            0x7507	                           jne 0x40055a3	      2122	deflate.c	FUNCTION_23	IF_9
0x400559c	      0xb800000000	                              mov eax, 0	      2122	deflate.c	FUNCTION_23	IF_9
0x40055a1	            0xeb05	                           jmp 0x40055a8	      2122	deflate.c	FUNCTION_23	IF_9
0x40055a3	      0xb801000000	                              mov eax, 1	      2123	deflate.c	FUNCTION_23	IF_9
0x40055a8	              0xc9	                                   leave	      2124	deflate.c	FUNCTION_23	IF_9
0x40055a9	              0xc3	                                     ret	      2124	deflate.c	FUNCTION_23	IF_9
deflate_huff	ELSE,0:DO,0:FOR,1:functions,0:SWITCH,0:CALL,3:IF,6:WHILE,0	217
0x40055aa	              0x55	                                push rbp	      2133	deflate.c	
0x40055ab	          0x4889e5	                            mov rbp, rsp	      2133	deflate.c	
0x40055ae	        0x4883ec20	                           sub rsp, 0x20	      2133	deflate.c	
0x40055b2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2133	deflate.c	
0x40055b6	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2133	deflate.c	
0x40055b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2138	deflate.c	FUNCTION_24
0x40055bd	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2138	deflate.c	FUNCTION_24
0x40055c3	            0x85c0	                           test eax, eax	      2138	deflate.c	FUNCTION_24
0x40055c5	            0x752e	                           jne 0x40055f5	      2138	deflate.c	FUNCTION_24
0x40055c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2139	deflate.c	FUNCTION_24
0x40055cb	          0x4889c7	                            mov rdi, rax	      2139	deflate.c	FUNCTION_24
0x40055ce	      0xe8e7d9ffff	                    call sym.fill_window	      2139	deflate.c	FUNCTION_24
0x40055d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2140	deflate.c	FUNCTION_24	FOR_1
0x40055d7	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2140	deflate.c	FUNCTION_24	FOR_1
0x40055dd	            0x85c0	                           test eax, eax	      2140	deflate.c	FUNCTION_24	FOR_1
0x40055df	            0x7514	                           jne 0x40055f5	      2140	deflate.c	FUNCTION_24	FOR_1
0x40055e1	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2141	deflate.c	FUNCTION_24	FOR_1
0x40055e5	     0xf85ab010000	                           jne 0x4005796	      2141	deflate.c	FUNCTION_24	FOR_1
0x40055eb	      0xb800000000	                              mov eax, 0	      2142	deflate.c	FUNCTION_24	FOR_1	IF_1
0x40055f0	      0xe91c030000	                           jmp 0x4005911	      2142	deflate.c	FUNCTION_24	FOR_1	IF_1
0x40055f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2148	deflate.c	FUNCTION_24	FOR_1	IF_1	IF_2
0x40055f9	    0xc780a0000000	               mov dword [rax + 0xa0], 0	      2148	deflate.c	FUNCTION_24	FOR_1	IF_1	IF_2
0x4005603	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005607	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x400560b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2150	deflate.c	FUNCTION_24	FOR_1
0x400560f	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005615	            0x89c0	                            mov eax, eax	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005617	          0x4801d0	                            add rax, rdx	      2150	deflate.c	FUNCTION_24	FOR_1
0x400561a	           0xfb600	                   movzx eax, byte [rax]	      2150	deflate.c	FUNCTION_24	FOR_1
0x400561d	          0x8845fb	                  mov byte [rbp - 5], al	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005620	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005624	    0x488b90101700	          mov rdx, qword [rax + 0x1710] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x400562b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2150	deflate.c	FUNCTION_24	FOR_1
0x400562f	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005635	            0x89c0	                            mov eax, eax	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005637	          0x4801c0	                            add rax, rax	      2150	deflate.c	FUNCTION_24	FOR_1
0x400563a	          0x4801d0	                            add rax, rdx	      2150	deflate.c	FUNCTION_24	FOR_1
0x400563d	      0x66c7000000	                       mov word [rax], 0	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005642	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005646	    0x488bb0001700	          mov rsi, qword [rax + 0x1700] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x400564d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005651	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005657	          0x8d4801	                      lea ecx, [rax + 1]	      2150	deflate.c	FUNCTION_24	FOR_1
0x400565a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2150	deflate.c	FUNCTION_24	FOR_1
0x400565e	    0x898a0c170000	          mov dword [rdx + 0x170c], ecx 	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005664	            0x89c0	                            mov eax, eax	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005666	        0x488d1406	                    lea rdx, [rsi + rax]	      2150	deflate.c	FUNCTION_24	FOR_1
0x400566a	         0xfb645fb	               movzx eax, byte [rbp - 5]	      2150	deflate.c	FUNCTION_24	FOR_1
0x400566e	            0x8802	                      mov byte [rdx], al	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005670	         0xfb645fb	               movzx eax, byte [rbp - 5]	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005674	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005678	          0x4863c8	                         movsxd rcx, eax	      2150	deflate.c	FUNCTION_24	FOR_1
0x400567b	        0x4883c134	                           add rcx, 0x34	      2150	deflate.c	FUNCTION_24	FOR_1
0x400567f	       0xfb7548a04	      movzx edx, word [rdx + rcx*4 + 4] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005684	          0x8d4a01	                      lea ecx, [rdx + 1]	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005687	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2150	deflate.c	FUNCTION_24	FOR_1
0x400568b	            0x4898	                                    cdqe	      2150	deflate.c	FUNCTION_24	FOR_1
0x400568d	        0x4883c034	                           add rax, 0x34	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005691	      0x66894c8204	          mov word [rdx + rax*4 + 4], cx	      2150	deflate.c	FUNCTION_24	FOR_1
0x4005696	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2150	deflate.c	FUNCTION_24	FOR_1
0x400569a	    0x8b900c170000	          mov edx, dword [rax + 0x170c] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40056a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2150	deflate.c	FUNCTION_24	FOR_1
0x40056a4	    0x8b8008170000	          mov eax, dword [rax + 0x1708] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40056aa	          0x83e801	                              sub eax, 1	      2150	deflate.c	FUNCTION_24	FOR_1
0x40056ad	            0x39c2	                            cmp edx, eax	      2150	deflate.c	FUNCTION_24	FOR_1
0x40056af	           0xf94c0	                                 sete al	      2150	deflate.c	FUNCTION_24	FOR_1
0x40056b2	           0xfb6c0	                           movzx eax, al	      2150	deflate.c	FUNCTION_24	FOR_1
0x40056b5	          0x8945fc	                mov dword [rbp - 4], eax	      2150	deflate.c	FUNCTION_24	FOR_1
0x40056b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2151	deflate.c	FUNCTION_24	FOR_1
0x40056bc	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2151	deflate.c	FUNCTION_24	FOR_1
0x40056c2	          0x8d50ff	                      lea edx, [rax - 1]	      2151	deflate.c	FUNCTION_24	FOR_1
0x40056c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2151	deflate.c	FUNCTION_24	FOR_1
0x40056c9	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2151	deflate.c	FUNCTION_24	FOR_1
0x40056cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2152	deflate.c	FUNCTION_24	FOR_1
0x40056d3	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2152	deflate.c	FUNCTION_24	FOR_1
0x40056d9	          0x8d5001	                      lea edx, [rax + 1]	      2152	deflate.c	FUNCTION_24	FOR_1
0x40056dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2152	deflate.c	FUNCTION_24	FOR_1
0x40056e0	    0x8990ac000000	             mov dword [rax + 0xac], edx	      2152	deflate.c	FUNCTION_24	FOR_1
0x40056e6	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40056ea	     0xf84c9feffff	                            je 0x40055b9	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40056f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40056f4	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40056fa	            0x89c2	                            mov edx, eax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40056fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005700	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005707	          0x4829c2	                            sub rdx, rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400570a	          0x4889d0	                            mov rax, rdx	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400570d	          0x4889c7	                            mov rdi, rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005710	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005714	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400571b	          0x4885c0	                           test rax, rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400571e	            0x781b	                            js 0x400573b	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005720	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005724	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005728	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400572c	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005733	            0x89c0	                            mov eax, eax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005735	        0x488d3402	                    lea rsi, [rdx + rax]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005739	            0xeb05	                           jmp 0x4005740	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400573b	      0xbe00000000	                              mov esi, 0	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005740	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005744	      0xb900000000	                              mov ecx, 0	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005749	          0x4889fa	                            mov rdx, rdi	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400574c	          0x4889c7	                            mov rdi, rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400574f	      0xe800000000	                          call 0x4005754	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005754	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005758	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400575e	            0x89c2	                            mov edx, eax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005760	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005764	    0x488990980000	             mov qword [rax + 0x98], rdx	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400576b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400576f	          0x488b00	                    mov rax, qword [rax]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005772	          0x4889c7	                            mov rdi, rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005775	      0xe8d2baffff	                  call sym.flush_pending	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400577a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400577e	          0x488b00	                    mov rax, qword [rax]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005781	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005784	            0x85c0	                           test eax, eax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005786	     0xf852dfeffff	                           jne 0x40055b9	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400578c	      0xb800000000	                              mov eax, 0	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005791	      0xe97b010000	                           jmp 0x4005911	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4005796	              0x90	                                     nop	      2143	deflate.c	FUNCTION_24	FOR_1	IF_1	CALL_1
0x4005797	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2155	deflate.c	FUNCTION_24	FOR_1
0x400579b	    0xc7802c170000	            mov dword [rax + 0x172c], 0 	      2155	deflate.c	FUNCTION_24	FOR_1
0x40057a5	        0x837de404	               cmp dword [rbp - 0x1c], 4	      2156	deflate.c	FUNCTION_24	FOR_1
0x40057a9	     0xf85ac000000	                           jne 0x400585b	      2156	deflate.c	FUNCTION_24	FOR_1
0x40057af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057b3	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057b9	            0x89c2	                            mov edx, eax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057bf	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057c6	          0x4829c2	                            sub rdx, rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057c9	          0x4889d0	                            mov rax, rdx	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057cc	          0x4889c7	                            mov rdi, rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057d3	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057da	          0x4885c0	                           test rax, rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057dd	            0x781b	                            js 0x40057fa	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057e3	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057eb	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057f2	            0x89c0	                            mov eax, eax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057f4	        0x488d3402	                    lea rsi, [rdx + rax]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057f8	            0xeb05	                           jmp 0x40057ff	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057fa	      0xbe00000000	                              mov esi, 0	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40057ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005803	      0xb901000000	                              mov ecx, 1	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005808	          0x4889fa	                            mov rdx, rdi	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x400580b	          0x4889c7	                            mov rdi, rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x400580e	      0xe800000000	                          call 0x4005813	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005813	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005817	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x400581d	            0x89c2	                            mov edx, eax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x400581f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005823	    0x488990980000	             mov qword [rax + 0x98], rdx	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x400582a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x400582e	          0x488b00	                    mov rax, qword [rax]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005831	          0x4889c7	                            mov rdi, rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005834	      0xe813baffff	                  call sym.flush_pending	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005839	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x400583d	          0x488b00	                    mov rax, qword [rax]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005840	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005843	            0x85c0	                           test eax, eax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005845	            0x750a	                           jne 0x4005851	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005847	      0xb802000000	                              mov eax, 2	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x400584c	      0xe9c0000000	                           jmp 0x4005911	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4005851	      0xb803000000	                              mov eax, 3	      2158	deflate.c	FUNCTION_24	FOR_1
0x4005856	      0xe9b6000000	                           jmp 0x4005911	      2158	deflate.c	FUNCTION_24	FOR_1
0x400585b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2160	deflate.c	FUNCTION_24	IF_5
0x400585f	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      2160	deflate.c	FUNCTION_24	IF_5
0x4005865	            0x85c0	                           test eax, eax	      2160	deflate.c	FUNCTION_24	IF_5
0x4005867	     0xf849f000000	                            je 0x400590c	      2160	deflate.c	FUNCTION_24	IF_5
0x400586d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	deflate.c	FUNCTION_24	IF_5
0x4005871	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2161	deflate.c	FUNCTION_24	IF_5
0x4005877	            0x89c2	                            mov edx, eax	      2161	deflate.c	FUNCTION_24	IF_5
0x4005879	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	deflate.c	FUNCTION_24	IF_5
0x400587d	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2161	deflate.c	FUNCTION_24	IF_5
0x4005884	          0x4829c2	                            sub rdx, rax	      2161	deflate.c	FUNCTION_24	IF_5
0x4005887	          0x4889d0	                            mov rax, rdx	      2161	deflate.c	FUNCTION_24	IF_5
0x400588a	          0x4889c7	                            mov rdi, rax	      2161	deflate.c	FUNCTION_24	IF_5
0x400588d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	deflate.c	FUNCTION_24	IF_5
0x4005891	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2161	deflate.c	FUNCTION_24	IF_5
0x4005898	          0x4885c0	                           test rax, rax	      2161	deflate.c	FUNCTION_24	IF_5
0x400589b	            0x781b	                            js 0x40058b8	      2161	deflate.c	FUNCTION_24	IF_5
0x400589d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	deflate.c	FUNCTION_24	IF_5
0x40058a1	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2161	deflate.c	FUNCTION_24	IF_5
0x40058a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	deflate.c	FUNCTION_24	IF_5
0x40058a9	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2161	deflate.c	FUNCTION_24	IF_5
0x40058b0	            0x89c0	                            mov eax, eax	      2161	deflate.c	FUNCTION_24	IF_5
0x40058b2	        0x488d3402	                    lea rsi, [rdx + rax]	      2161	deflate.c	FUNCTION_24	IF_5
0x40058b6	            0xeb05	                           jmp 0x40058bd	      2161	deflate.c	FUNCTION_24	IF_5
0x40058b8	      0xbe00000000	                              mov esi, 0	      2161	deflate.c	FUNCTION_24	IF_5
0x40058bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	deflate.c	FUNCTION_24	IF_5
0x40058c1	      0xb900000000	                              mov ecx, 0	      2161	deflate.c	FUNCTION_24	IF_5
0x40058c6	          0x4889fa	                            mov rdx, rdi	      2161	deflate.c	FUNCTION_24	IF_5
0x40058c9	          0x4889c7	                            mov rdi, rax	      2161	deflate.c	FUNCTION_24	IF_5
0x40058cc	      0xe800000000	                          call 0x40058d1	      2161	deflate.c	FUNCTION_24	IF_5
0x40058d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	deflate.c	FUNCTION_24	IF_5
0x40058d5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2161	deflate.c	FUNCTION_24	IF_5
0x40058db	            0x89c2	                            mov edx, eax	      2161	deflate.c	FUNCTION_24	IF_5
0x40058dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	deflate.c	FUNCTION_24	IF_5
0x40058e1	    0x488990980000	             mov qword [rax + 0x98], rdx	      2161	deflate.c	FUNCTION_24	IF_5
0x40058e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	deflate.c	FUNCTION_24	IF_5
0x40058ec	          0x488b00	                    mov rax, qword [rax]	      2161	deflate.c	FUNCTION_24	IF_5
0x40058ef	          0x4889c7	                            mov rdi, rax	      2161	deflate.c	FUNCTION_24	IF_5
0x40058f2	      0xe855b9ffff	                  call sym.flush_pending	      2161	deflate.c	FUNCTION_24	IF_5
0x40058f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	deflate.c	FUNCTION_24	IF_5
0x40058fb	          0x488b00	                    mov rax, qword [rax]	      2161	deflate.c	FUNCTION_24	IF_5
0x40058fe	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2161	deflate.c	FUNCTION_24	IF_5
0x4005901	            0x85c0	                           test eax, eax	      2161	deflate.c	FUNCTION_24	IF_5
0x4005903	            0x7507	                           jne 0x400590c	      2161	deflate.c	FUNCTION_24	IF_5
0x4005905	      0xb800000000	                              mov eax, 0	      2161	deflate.c	FUNCTION_24	IF_5
0x400590a	            0xeb05	                           jmp 0x4005911	      2161	deflate.c	FUNCTION_24	IF_5
0x400590c	      0xb801000000	                              mov eax, 1	      2162	deflate.c	FUNCTION_24	IF_5
0x4005911	              0xc9	                                   leave	      2163	deflate.c	FUNCTION_24	IF_5
0x4005912	              0xc3	                                     ret	      2163	deflate.c	FUNCTION_24	IF_5
lm_init	ELSE,0:DO,0:FOR,0:functions,0:SWITCH,0:CALL,1:IF,0:WHILE,0	86
0x4002b4d	              0x55	                                push rbp	      1196	deflate.c	
0x4002b4e	          0x4889e5	                            mov rbp, rsp	      1196	deflate.c	
0x4002b51	        0x4883ec10	                           sub rsp, 0x10	      1196	deflate.c	
0x4002b55	        0x48897df8	                mov qword [rbp - 8], rdi	      1196	deflate.c	
0x4002b59	        0x488b45f8	                mov rax, qword [rbp - 8]	      1197	deflate.c	
0x4002b5d	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1197	deflate.c	
0x4002b60	            0x89c0	                            mov eax, eax	      1197	deflate.c	
0x4002b62	        0x488d1400	                    lea rdx, [rax + rax]	      1197	deflate.c	
0x4002b66	        0x488b45f8	                mov rax, qword [rbp - 8]	      1197	deflate.c	
0x4002b6a	        0x48895068	             mov qword [rax + 0x68], rdx	      1197	deflate.c	
0x4002b6e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1199	deflate.c	
0x4002b72	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1199	deflate.c	
0x4002b76	        0x488b45f8	                mov rax, qword [rbp - 8]	      1199	deflate.c	
0x4002b7a	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1199	deflate.c	
0x4002b80	          0x83e801	                              sub eax, 1	      1199	deflate.c	
0x4002b83	            0x89c0	                            mov eax, eax	      1199	deflate.c	
0x4002b85	          0x4801c0	                            add rax, rax	      1199	deflate.c	
0x4002b88	          0x4801d0	                            add rax, rdx	      1199	deflate.c	
0x4002b8b	      0x66c7000000	                       mov word [rax], 0	      1199	deflate.c	
0x4002b90	        0x488b45f8	                mov rax, qword [rbp - 8]	      1199	deflate.c	
0x4002b94	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1199	deflate.c	
0x4002b9a	          0x83e801	                              sub eax, 1	      1199	deflate.c	
0x4002b9d	            0x89c0	                            mov eax, eax	      1199	deflate.c	
0x4002b9f	        0x488d1400	                    lea rdx, [rax + rax]	      1199	deflate.c	
0x4002ba3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1199	deflate.c	
0x4002ba7	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1199	deflate.c	
0x4002bab	      0xbe00000000	                              mov esi, 0	      1199	deflate.c	
0x4002bb0	          0x4889c7	                            mov rdi, rax	      1199	deflate.c	
0x4002bb3	      0xe800000000	                          call 0x4002bb8	      1199	deflate.c	
0x4002bb8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1203	deflate.c	FUNCTION_16
0x4002bbc	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	      1203	deflate.c	FUNCTION_16
0x4002bc2	            0x4898	                                    cdqe	      1203	deflate.c	FUNCTION_16
0x4002bc4	        0x48c1e004	                              shl rax, 4	      1203	deflate.c	FUNCTION_16
0x4002bc8	    0x480500000000	                              add rax, 0	      1203	deflate.c	FUNCTION_16
0x4002bce	           0xfb700	                   movzx eax, word [rax]	      1203	deflate.c	FUNCTION_16
0x4002bd1	           0xfb7d0	                           movzx edx, ax	      1203	deflate.c	FUNCTION_16
0x4002bd4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1203	deflate.c	FUNCTION_16
0x4002bd8	    0x8990c0000000	             mov dword [rax + 0xc0], edx	      1203	deflate.c	FUNCTION_16
0x4002bde	        0x488b45f8	                mov rax, qword [rbp - 8]	      1204	deflate.c	FUNCTION_16
0x4002be2	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	      1204	deflate.c	FUNCTION_16
0x4002be8	            0x4898	                                    cdqe	      1204	deflate.c	FUNCTION_16
0x4002bea	        0x48c1e004	                              shl rax, 4	      1204	deflate.c	FUNCTION_16
0x4002bee	    0x480500000000	                              add rax, 0	      1204	deflate.c	FUNCTION_16
0x4002bf4	           0xfb700	                   movzx eax, word [rax]	      1204	deflate.c	FUNCTION_16
0x4002bf7	           0xfb7d0	                           movzx edx, ax	      1204	deflate.c	FUNCTION_16
0x4002bfa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1204	deflate.c	FUNCTION_16
0x4002bfe	    0x8990cc000000	             mov dword [rax + 0xcc], edx	      1204	deflate.c	FUNCTION_16
0x4002c04	        0x488b45f8	                mov rax, qword [rbp - 8]	      1205	deflate.c	FUNCTION_16
0x4002c08	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	      1205	deflate.c	FUNCTION_16
0x4002c0e	            0x4898	                                    cdqe	      1205	deflate.c	FUNCTION_16
0x4002c10	        0x48c1e004	                              shl rax, 4	      1205	deflate.c	FUNCTION_16
0x4002c14	    0x480500000000	                              add rax, 0	      1205	deflate.c	FUNCTION_16
0x4002c1a	           0xfb700	                   movzx eax, word [rax]	      1205	deflate.c	FUNCTION_16
0x4002c1d	           0xfb7d0	                           movzx edx, ax	      1205	deflate.c	FUNCTION_16
0x4002c20	        0x488b45f8	                mov rax, qword [rbp - 8]	      1205	deflate.c	FUNCTION_16
0x4002c24	    0x8990d0000000	             mov dword [rax + 0xd0], edx	      1205	deflate.c	FUNCTION_16
0x4002c2a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1206	deflate.c	FUNCTION_16
0x4002c2e	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	      1206	deflate.c	FUNCTION_16
0x4002c34	            0x4898	                                    cdqe	      1206	deflate.c	FUNCTION_16
0x4002c36	        0x48c1e004	                              shl rax, 4	      1206	deflate.c	FUNCTION_16
0x4002c3a	    0x480500000000	                              add rax, 0	      1206	deflate.c	FUNCTION_16
0x4002c40	           0xfb700	                   movzx eax, word [rax]	      1206	deflate.c	FUNCTION_16
0x4002c43	           0xfb7d0	                           movzx edx, ax	      1206	deflate.c	FUNCTION_16
0x4002c46	        0x488b45f8	                mov rax, qword [rbp - 8]	      1206	deflate.c	FUNCTION_16
0x4002c4a	    0x8990bc000000	             mov dword [rax + 0xbc], edx	      1206	deflate.c	FUNCTION_16
0x4002c50	        0x488b45f8	                mov rax, qword [rbp - 8]	      1208	deflate.c	FUNCTION_16
0x4002c54	    0xc780ac000000	               mov dword [rax + 0xac], 0	      1208	deflate.c	FUNCTION_16
0x4002c5e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1209	deflate.c	FUNCTION_16
0x4002c62	    0x48c780980000	               mov qword [rax + 0x98], 0	      1209	deflate.c	FUNCTION_16
0x4002c6d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1210	deflate.c	FUNCTION_16
0x4002c71	    0xc780b4000000	               mov dword [rax + 0xb4], 0	      1210	deflate.c	FUNCTION_16
0x4002c7b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1211	deflate.c	FUNCTION_16
0x4002c7f	    0xc7802c170000	            mov dword [rax + 0x172c], 0 	      1211	deflate.c	FUNCTION_16
0x4002c89	        0x488b45f8	                mov rax, qword [rbp - 8]	      1212	deflate.c	FUNCTION_16
0x4002c8d	    0xc780b8000000	               mov dword [rax + 0xb8], 2	      1212	deflate.c	FUNCTION_16
0x4002c97	        0x488b45f8	                mov rax, qword [rbp - 8]	      1212	deflate.c	FUNCTION_16
0x4002c9b	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	      1212	deflate.c	FUNCTION_16
0x4002ca1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1212	deflate.c	FUNCTION_16
0x4002ca5	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      1212	deflate.c	FUNCTION_16
0x4002cab	        0x488b45f8	                mov rax, qword [rbp - 8]	      1213	deflate.c	FUNCTION_16
0x4002caf	    0xc780a8000000	               mov dword [rax + 0xa8], 0	      1213	deflate.c	FUNCTION_16
0x4002cb9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1214	deflate.c	FUNCTION_16
0x4002cbd	    0xc78080000000	               mov dword [rax + 0x80], 0	      1214	deflate.c	FUNCTION_16
0x4002cc7	              0x90	                                     nop	      1220	deflate.c	FUNCTION_16
0x4002cc8	              0xc9	                                   leave	      1220	deflate.c	FUNCTION_16
0x4002cc9	              0xc3	                                     ret	      1220	deflate.c	FUNCTION_16
deflate	ELSE,7:DO,2:FOR,0:functions,0:SWITCH,0:CALL,62:IF,49:WHILE,1	1267
0x4001346	              0x55	                                push rbp	       766	deflate.c	
0x4001347	          0x4889e5	                            mov rbp, rsp	       766	deflate.c	
0x400134a	        0x4883ec50	                           sub rsp, 0x50	       766	deflate.c	
0x400134e	        0x48897db8	             mov qword [rbp - 0x48], rdi	       766	deflate.c	
0x4001352	          0x8975b4	             mov dword [rbp - 0x4c], esi	       766	deflate.c	
0x4001355	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       770	deflate.c	FUNCTION_13
0x4001359	          0x4889c7	                            mov rdi, rax	       770	deflate.c	FUNCTION_13
0x400135c	      0xe812f2ffff	              call sym.deflateStateCheck	       770	deflate.c	FUNCTION_13
0x4001361	            0x85c0	                           test eax, eax	       770	deflate.c	FUNCTION_13
0x4001363	            0x750c	                           jne 0x4001371	       770	deflate.c	FUNCTION_13
0x4001365	        0x837db405	               cmp dword [rbp - 0x4c], 5	       770	deflate.c	FUNCTION_13
0x4001369	            0x7f06	                            jg 0x4001371	       770	deflate.c	FUNCTION_13
0x400136b	        0x837db400	               cmp dword [rbp - 0x4c], 0	       770	deflate.c	FUNCTION_13
0x400136f	            0x790a	                           jns 0x400137b	       770	deflate.c	FUNCTION_13
0x4001371	      0xb8feffffff	                     mov eax, 0xfffffffe	       771	deflate.c	FUNCTION_13
0x4001376	      0xe966120000	                           jmp 0x40025e1	       771	deflate.c	FUNCTION_13
0x400137b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       773	deflate.c	FUNCTION_13
0x400137f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       773	deflate.c	FUNCTION_13
0x4001383	        0x488945f8	                mov qword [rbp - 8], rax	       773	deflate.c	FUNCTION_13
0x4001387	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       775	deflate.c	FUNCTION_13	IF_1
0x400138b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       775	deflate.c	FUNCTION_13	IF_1
0x400138f	          0x4885c0	                           test rax, rax	       775	deflate.c	FUNCTION_13	IF_1
0x4001392	            0x742b	                            je 0x40013bf	       775	deflate.c	FUNCTION_13	IF_1
0x4001394	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       776	deflate.c	FUNCTION_13	IF_1
0x4001398	          0x8b4008	                mov eax, dword [rax + 8]	       776	deflate.c	FUNCTION_13	IF_1
0x400139b	            0x85c0	                           test eax, eax	       775	deflate.c	FUNCTION_13	IF_1
0x400139d	            0x740c	                            je 0x40013ab	       775	deflate.c	FUNCTION_13	IF_1
0x400139f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       776	deflate.c	FUNCTION_13	IF_1
0x40013a3	          0x488b00	                    mov rax, qword [rax]	       776	deflate.c	FUNCTION_13	IF_1
0x40013a6	          0x4885c0	                           test rax, rax	       776	deflate.c	FUNCTION_13	IF_1
0x40013a9	            0x7414	                            je 0x40013bf	       776	deflate.c	FUNCTION_13	IF_1
0x40013ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       777	deflate.c	FUNCTION_13
0x40013af	          0x8b4008	                mov eax, dword [rax + 8]	       777	deflate.c	FUNCTION_13
0x40013b2	      0x3d9a020000	                          cmp eax, 0x29a	       776	deflate.c	FUNCTION_13	IF_1
0x40013b7	            0x751f	                           jne 0x40013d8	       776	deflate.c	FUNCTION_13	IF_1
0x40013b9	        0x837db404	               cmp dword [rbp - 0x4c], 4	       777	deflate.c	FUNCTION_13
0x40013bd	            0x7419	                            je 0x40013d8	       777	deflate.c	FUNCTION_13
0x40013bf	    0x488b15000000	            mov rdx, qword [0x040013c6] 	       778	deflate.c	FUNCTION_13
0x40013c6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       778	deflate.c	FUNCTION_13
0x40013ca	        0x48895030	             mov qword [rax + 0x30], rdx	       778	deflate.c	FUNCTION_13
0x40013ce	      0xb8feffffff	                     mov eax, 0xfffffffe	       778	deflate.c	FUNCTION_13
0x40013d3	      0xe909120000	                           jmp 0x40025e1	       778	deflate.c	FUNCTION_13
0x40013d8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       780	deflate.c	FUNCTION_13	IF_2
0x40013dc	          0x8b4020	            mov eax, dword [rax + 0x20] 	       780	deflate.c	FUNCTION_13	IF_2
0x40013df	            0x85c0	                           test eax, eax	       780	deflate.c	FUNCTION_13	IF_2
0x40013e1	            0x7519	                           jne 0x40013fc	       780	deflate.c	FUNCTION_13	IF_2
0x40013e3	    0x488b15000000	            mov rdx, qword [0x040013ea] 	       780	deflate.c	FUNCTION_13	IF_2
0x40013ea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       780	deflate.c	FUNCTION_13	IF_2
0x40013ee	        0x48895030	             mov qword [rax + 0x30], rdx	       780	deflate.c	FUNCTION_13	IF_2
0x40013f2	      0xb8fbffffff	                     mov eax, 0xfffffffb	       780	deflate.c	FUNCTION_13	IF_2
0x40013f7	      0xe9e5110000	                           jmp 0x40025e1	       780	deflate.c	FUNCTION_13	IF_2
0x40013fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       782	deflate.c	FUNCTION_13	IF_2	CALL_2
0x4001400	          0x8b404c	            mov eax, dword [rax + 0x4c] 	       782	deflate.c	FUNCTION_13	IF_2	CALL_2
0x4001403	          0x8945cc	             mov dword [rbp - 0x34], eax	       782	deflate.c	FUNCTION_13	IF_2	CALL_2
0x4001406	        0x488b45f8	                mov rax, qword [rbp - 8]	       783	deflate.c	FUNCTION_13	IF_2
0x400140a	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       783	deflate.c	FUNCTION_13	IF_2
0x400140d	          0x89504c	             mov dword [rax + 0x4c], edx	       783	deflate.c	FUNCTION_13	IF_2
0x4001410	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	deflate.c	FUNCTION_13
0x4001414	        0x488b4028	            mov rax, qword [rax + 0x28] 	       786	deflate.c	FUNCTION_13
0x4001418	          0x4885c0	                           test rax, rax	       786	deflate.c	FUNCTION_13
0x400141b	            0x742c	                            je 0x4001449	       786	deflate.c	FUNCTION_13
0x400141d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       787	deflate.c	FUNCTION_13
0x4001421	          0x4889c7	                            mov rdi, rax	       787	deflate.c	FUNCTION_13
0x4001424	      0xe823feffff	                  call sym.flush_pending	       787	deflate.c	FUNCTION_13
0x4001429	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       788	deflate.c	FUNCTION_13
0x400142d	          0x8b4020	            mov eax, dword [rax + 0x20] 	       788	deflate.c	FUNCTION_13
0x4001430	            0x85c0	                           test eax, eax	       788	deflate.c	FUNCTION_13
0x4001432	            0x7577	                           jne 0x40014ab	       788	deflate.c	FUNCTION_13
0x4001434	        0x488b45f8	                mov rax, qword [rbp - 8]	       795	deflate.c	FUNCTION_13	IF_4	IF_5
0x4001438	    0xc7404cffffff	     mov dword [rax + 0x4c], 0xffffffff 	       795	deflate.c	FUNCTION_13	IF_4	IF_5
0x400143f	      0xb800000000	                              mov eax, 0	       796	deflate.c	FUNCTION_13	IF_4	IF_5
0x4001444	      0xe998110000	                           jmp 0x40025e1	       796	deflate.c	FUNCTION_13	IF_4	IF_5
0x4001449	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       803	deflate.c	FUNCTION_13	IF_4
0x400144d	          0x8b4008	                mov eax, dword [rax + 8]	       803	deflate.c	FUNCTION_13	IF_4
0x4001450	            0x85c0	                           test eax, eax	       803	deflate.c	FUNCTION_13	IF_4
0x4001452	            0x7557	                           jne 0x40014ab	       803	deflate.c	FUNCTION_13	IF_4
0x4001454	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       803	deflate.c	FUNCTION_13	IF_4
0x4001457	             0x1c0	                            add eax, eax	       803	deflate.c	FUNCTION_13	IF_4
0x4001459	        0x837db404	               cmp dword [rbp - 0x4c], 4	       803	deflate.c	FUNCTION_13	IF_4
0x400145d	            0x7e07	                           jle 0x4001466	       803	deflate.c	FUNCTION_13	IF_4
0x400145f	      0xba09000000	                              mov edx, 9	       803	deflate.c	FUNCTION_13	IF_4
0x4001464	            0xeb05	                           jmp 0x400146b	       803	deflate.c	FUNCTION_13	IF_4
0x4001466	      0xba00000000	                              mov edx, 0	       803	deflate.c	FUNCTION_13	IF_4
0x400146b	            0x29d0	                            sub eax, edx	       803	deflate.c	FUNCTION_13	IF_4
0x400146d	            0x89c2	                            mov edx, eax	       803	deflate.c	FUNCTION_13	IF_4
0x400146f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       803	deflate.c	FUNCTION_13	IF_4
0x4001472	             0x1c0	                            add eax, eax	       803	deflate.c	FUNCTION_13	IF_4
0x4001474	        0x837dcc04	               cmp dword [rbp - 0x34], 4	       803	deflate.c	FUNCTION_13	IF_4
0x4001478	            0x7e07	                           jle 0x4001481	       803	deflate.c	FUNCTION_13	IF_4
0x400147a	      0xb909000000	                              mov ecx, 9	       803	deflate.c	FUNCTION_13	IF_4
0x400147f	            0xeb05	                           jmp 0x4001486	       803	deflate.c	FUNCTION_13	IF_4
0x4001481	      0xb900000000	                              mov ecx, 0	       803	deflate.c	FUNCTION_13	IF_4
0x4001486	            0x29c8	                            sub eax, ecx	       803	deflate.c	FUNCTION_13	IF_4
0x4001488	            0x39c2	                            cmp edx, eax	       803	deflate.c	FUNCTION_13	IF_4
0x400148a	            0x7f1f	                            jg 0x40014ab	       803	deflate.c	FUNCTION_13	IF_4
0x400148c	        0x837db404	               cmp dword [rbp - 0x4c], 4	       803	deflate.c	FUNCTION_13	IF_4
0x4001490	            0x7419	                            je 0x40014ab	       803	deflate.c	FUNCTION_13	IF_4
0x4001492	    0x488b15000000	            mov rdx, qword [0x04001499] 	       805	deflate.c	FUNCTION_13	IF_4
0x4001499	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       805	deflate.c	FUNCTION_13	IF_4
0x400149d	        0x48895030	             mov qword [rax + 0x30], rdx	       805	deflate.c	FUNCTION_13	IF_4
0x40014a1	      0xb8fbffffff	                     mov eax, 0xfffffffb	       805	deflate.c	FUNCTION_13	IF_4
0x40014a6	      0xe936110000	                           jmp 0x40025e1	       805	deflate.c	FUNCTION_13	IF_4
0x40014ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x40014af	          0x8b4008	                mov eax, dword [rax + 8]	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x40014b2	      0x3d9a020000	                          cmp eax, 0x29a	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x40014b7	            0x7524	                           jne 0x40014dd	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x40014b9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x40014bd	          0x8b4008	                mov eax, dword [rax + 8]	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x40014c0	            0x85c0	                           test eax, eax	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x40014c2	            0x7419	                            je 0x40014dd	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x40014c4	    0x488b15000000	            mov rdx, qword [0x040014cb] 	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40014cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40014cf	        0x48895030	             mov qword [rax + 0x30], rdx	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40014d3	      0xb8fbffffff	                     mov eax, 0xfffffffb	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40014d8	      0xe904110000	                           jmp 0x40025e1	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40014dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       814	deflate.c	FUNCTION_13	IF_7	CALL_6
0x40014e1	          0x8b4008	                mov eax, dword [rax + 8]	       814	deflate.c	FUNCTION_13	IF_7	CALL_6
0x40014e4	          0x83f82a	                           cmp eax, 0x2a	       814	deflate.c	FUNCTION_13	IF_7	CALL_6
0x40014e7	     0xf856a010000	                           jne 0x4001657	       814	deflate.c	FUNCTION_13	IF_7	CALL_6
0x40014ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       816	deflate.c	FUNCTION_13
0x40014f1	          0x8b4054	            mov eax, dword [rax + 0x54] 	       816	deflate.c	FUNCTION_13
0x40014f4	          0x83e808	                              sub eax, 8	       816	deflate.c	FUNCTION_13
0x40014f7	          0xc1e004	                              shl eax, 4	       816	deflate.c	FUNCTION_13
0x40014fa	          0x83c008	                              add eax, 8	       816	deflate.c	FUNCTION_13
0x40014fd	          0xc1e008	                              shl eax, 8	       816	deflate.c	FUNCTION_13
0x4001500	          0x8945c0	             mov dword [rbp - 0x40], eax	       816	deflate.c	FUNCTION_13
0x4001503	        0x488b45f8	                mov rax, qword [rbp - 8]	       819	deflate.c	FUNCTION_13	IF_8
0x4001507	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	       819	deflate.c	FUNCTION_13	IF_8
0x400150d	          0x83f801	                              cmp eax, 1	       819	deflate.c	FUNCTION_13	IF_8
0x4001510	            0x7f0f	                            jg 0x4001521	       819	deflate.c	FUNCTION_13	IF_8
0x4001512	        0x488b45f8	                mov rax, qword [rbp - 8]	       819	deflate.c	FUNCTION_13	IF_8
0x4001516	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       819	deflate.c	FUNCTION_13	IF_8
0x400151c	          0x83f801	                              cmp eax, 1	       819	deflate.c	FUNCTION_13	IF_8
0x400151f	            0x7f09	                            jg 0x400152a	       819	deflate.c	FUNCTION_13	IF_8
0x4001521	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       820	deflate.c	FUNCTION_13	IF_8
0x4001528	            0xeb37	                           jmp 0x4001561	       820	deflate.c	FUNCTION_13	IF_8
0x400152a	        0x488b45f8	                mov rax, qword [rbp - 8]	       821	deflate.c	FUNCTION_13	IF_8
0x400152e	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       821	deflate.c	FUNCTION_13	IF_8
0x4001534	          0x83f805	                              cmp eax, 5	       821	deflate.c	FUNCTION_13	IF_8
0x4001537	            0x7f09	                            jg 0x4001542	       821	deflate.c	FUNCTION_13	IF_8
0x4001539	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       822	deflate.c	FUNCTION_13	IF_8
0x4001540	            0xeb1f	                           jmp 0x4001561	       822	deflate.c	FUNCTION_13	IF_8
0x4001542	        0x488b45f8	                mov rax, qword [rbp - 8]	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4001546	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x400154c	          0x83f806	                              cmp eax, 6	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x400154f	            0x7509	                           jne 0x400155a	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4001551	    0xc745c4020000	               mov dword [rbp - 0x3c], 2	       824	deflate.c	FUNCTION_13	IF_8	IF_9
0x4001558	            0xeb07	                           jmp 0x4001561	       824	deflate.c	FUNCTION_13	IF_8	IF_9
0x400155a	    0xc745c4030000	               mov dword [rbp - 0x3c], 3	       826	deflate.c	FUNCTION_13	IF_8	ELSE_2	IF_10
0x4001561	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       827	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001564	          0xc1e006	                              shl eax, 6	       827	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001567	           0x945c0	              or dword [rbp - 0x40], eax	       827	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x400156a	        0x488b45f8	                mov rax, qword [rbp - 8]	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x400156e	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001574	            0x85c0	                           test eax, eax	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001576	            0x7404	                            je 0x400157c	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001578	        0x834dc020	             or dword [rbp - 0x40], 0x20	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x400157c	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400157f	      0xba85104208	                      mov edx, 0x8421085	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001584	            0x89c8	                            mov eax, ecx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001586	            0xf7e2	                                 mul edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001588	            0x89c8	                            mov eax, ecx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400158a	            0x29d0	                            sub eax, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400158c	            0xd1e8	                              shr eax, 1	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400158e	             0x1d0	                            add eax, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001590	          0xc1e804	                              shr eax, 4	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001593	            0x89c2	                            mov edx, eax	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001595	          0xc1e205	                              shl edx, 5	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001598	            0x29c2	                            sub edx, eax	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400159a	            0x89c8	                            mov eax, ecx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400159c	            0x29d0	                            sub eax, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400159e	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x40015a1	            0x29c2	                            sub edx, eax	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x40015a3	            0x89d0	                            mov eax, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x40015a5	          0x83c01f	                           add eax, 0x1f	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x40015a8	          0x8945c0	             mov dword [rbp - 0x40], eax	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x40015ab	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       831	deflate.c	FUNCTION_13	IF_8
0x40015ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       831	deflate.c	FUNCTION_13	IF_8
0x40015b2	            0x89d6	                            mov esi, edx	       831	deflate.c	FUNCTION_13	IF_8
0x40015b4	          0x4889c7	                            mov rdi, rax	       831	deflate.c	FUNCTION_13	IF_8
0x40015b7	      0xe837fcffff	                    call sym.putShortMSB	       831	deflate.c	FUNCTION_13	IF_8
0x40015bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       834	deflate.c	FUNCTION_13	IF_8
0x40015c0	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       834	deflate.c	FUNCTION_13	IF_8
0x40015c6	            0x85c0	                           test eax, eax	       834	deflate.c	FUNCTION_13	IF_8
0x40015c8	            0x7435	                            je 0x40015ff	       834	deflate.c	FUNCTION_13	IF_8
0x40015ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x40015ce	        0x488b4060	            mov rax, qword [rax + 0x60] 	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x40015d2	        0x48c1e810	                           shr rax, 0x10	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x40015d6	            0x89c2	                            mov edx, eax	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x40015d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x40015dc	            0x89d6	                            mov esi, edx	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x40015de	          0x4889c7	                            mov rdi, rax	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x40015e1	      0xe80dfcffff	                    call sym.putShortMSB	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x40015e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       836	deflate.c	FUNCTION_13	IF_8
0x40015ea	        0x488b4060	            mov rax, qword [rax + 0x60] 	       836	deflate.c	FUNCTION_13	IF_8
0x40015ee	           0xfb7d0	                           movzx edx, ax	       836	deflate.c	FUNCTION_13	IF_8
0x40015f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       836	deflate.c	FUNCTION_13	IF_8
0x40015f5	            0x89d6	                            mov esi, edx	       836	deflate.c	FUNCTION_13	IF_8
0x40015f7	          0x4889c7	                            mov rdi, rax	       836	deflate.c	FUNCTION_13	IF_8
0x40015fa	      0xe8f4fbffff	                    call sym.putShortMSB	       836	deflate.c	FUNCTION_13	IF_8
0x40015ff	      0xba00000000	                              mov edx, 0	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4001604	      0xbe00000000	                              mov esi, 0	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4001609	      0xbf00000000	                              mov edi, 0	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x400160e	      0xe800000000	                          call 0x4001613	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4001613	          0x4889c2	                            mov rdx, rax	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4001616	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x400161a	        0x48895060	             mov qword [rax + 0x60], rdx	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x400161e	        0x488b45f8	                mov rax, qword [rbp - 8]	       839	deflate.c	FUNCTION_13	IF_8	IF_13	CALL_8
0x4001622	    0xc74008710000	               mov dword [rax + 8], 0x71	       839	deflate.c	FUNCTION_13	IF_8	IF_13	CALL_8
0x4001629	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       842	deflate.c	FUNCTION_13	IF_8	CALL_10
0x400162d	          0x4889c7	                            mov rdi, rax	       842	deflate.c	FUNCTION_13	IF_8	CALL_10
0x4001630	      0xe817fcffff	                  call sym.flush_pending	       842	deflate.c	FUNCTION_13	IF_8	CALL_10
0x4001635	        0x488b45f8	                mov rax, qword [rbp - 8]	       843	deflate.c	FUNCTION_13	IF_8
0x4001639	        0x488b4028	            mov rax, qword [rax + 0x28] 	       843	deflate.c	FUNCTION_13	IF_8
0x400163d	          0x4885c0	                           test rax, rax	       843	deflate.c	FUNCTION_13	IF_8
0x4001640	            0x7415	                            je 0x4001657	       843	deflate.c	FUNCTION_13	IF_8
0x4001642	        0x488b45f8	                mov rax, qword [rbp - 8]	       844	deflate.c	FUNCTION_13	IF_8
0x4001646	    0xc7404cffffff	     mov dword [rax + 0x4c], 0xffffffff 	       844	deflate.c	FUNCTION_13	IF_8
0x400164d	      0xb800000000	                              mov eax, 0	       845	deflate.c	FUNCTION_13	IF_8
0x4001652	      0xe98a0f0000	                           jmp 0x40025e1	       845	deflate.c	FUNCTION_13	IF_8
0x4001657	        0x488b45f8	                mov rax, qword [rbp - 8]	       849	deflate.c	FUNCTION_13	IF_8	IF_14
0x400165b	          0x8b4008	                mov eax, dword [rax + 8]	       849	deflate.c	FUNCTION_13	IF_8	IF_14
0x400165e	          0x83f839	                           cmp eax, 0x39	       849	deflate.c	FUNCTION_13	IF_8	IF_14
0x4001661	     0xf85ce040000	                           jne 0x4001b35	       849	deflate.c	FUNCTION_13	IF_8	IF_14
0x4001667	      0xba00000000	                              mov edx, 0	       851	deflate.c	FUNCTION_13	IF_8
0x400166c	      0xbe00000000	                              mov esi, 0	       851	deflate.c	FUNCTION_13	IF_8
0x4001671	      0xbf00000000	                              mov edi, 0	       851	deflate.c	FUNCTION_13	IF_8
0x4001676	      0xe800000000	                          call 0x400167b	       851	deflate.c	FUNCTION_13	IF_8
0x400167b	          0x4889c2	                            mov rdx, rax	       851	deflate.c	FUNCTION_13	IF_8
0x400167e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       851	deflate.c	FUNCTION_13	IF_8
0x4001682	        0x48895060	             mov qword [rax + 0x60], rdx	       851	deflate.c	FUNCTION_13	IF_8
0x4001686	        0x488b45f8	                mov rax, qword [rbp - 8]	       852	deflate.c	FUNCTION_13
0x400168a	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       852	deflate.c	FUNCTION_13
0x400168e	        0x488b45f8	                mov rax, qword [rbp - 8]	       852	deflate.c	FUNCTION_13
0x4001692	        0x488b4028	            mov rax, qword [rax + 0x28] 	       852	deflate.c	FUNCTION_13
0x4001696	        0x488d4801	                      lea rcx, [rax + 1]	       852	deflate.c	FUNCTION_13
0x400169a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       852	deflate.c	FUNCTION_13
0x400169e	        0x48894a28	             mov qword [rdx + 0x28], rcx	       852	deflate.c	FUNCTION_13
0x40016a2	          0x4801f0	                            add rax, rsi	       852	deflate.c	FUNCTION_13
0x40016a5	          0xc6001f	                    mov byte [rax], 0x1f	       852	deflate.c	FUNCTION_13
0x40016a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       853	deflate.c	FUNCTION_13	IF_15
0x40016ac	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       853	deflate.c	FUNCTION_13	IF_15
0x40016b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       853	deflate.c	FUNCTION_13	IF_15
0x40016b4	        0x488b4028	            mov rax, qword [rax + 0x28] 	       853	deflate.c	FUNCTION_13	IF_15
0x40016b8	        0x488d4801	                      lea rcx, [rax + 1]	       853	deflate.c	FUNCTION_13	IF_15
0x40016bc	        0x488b55f8	                mov rdx, qword [rbp - 8]	       853	deflate.c	FUNCTION_13	IF_15
0x40016c0	        0x48894a28	             mov qword [rdx + 0x28], rcx	       853	deflate.c	FUNCTION_13	IF_15
0x40016c4	          0x4801f0	                            add rax, rsi	       853	deflate.c	FUNCTION_13	IF_15
0x40016c7	          0xc6008b	                    mov byte [rax], 0x8b	       853	deflate.c	FUNCTION_13	IF_15
0x40016ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       854	deflate.c	FUNCTION_13	IF_15
0x40016ce	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       854	deflate.c	FUNCTION_13	IF_15
0x40016d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       854	deflate.c	FUNCTION_13	IF_15
0x40016d6	        0x488b4028	            mov rax, qword [rax + 0x28] 	       854	deflate.c	FUNCTION_13	IF_15
0x40016da	        0x488d4801	                      lea rcx, [rax + 1]	       854	deflate.c	FUNCTION_13	IF_15
0x40016de	        0x488b55f8	                mov rdx, qword [rbp - 8]	       854	deflate.c	FUNCTION_13	IF_15
0x40016e2	        0x48894a28	             mov qword [rdx + 0x28], rcx	       854	deflate.c	FUNCTION_13	IF_15
0x40016e6	          0x4801f0	                            add rax, rsi	       854	deflate.c	FUNCTION_13	IF_15
0x40016e9	          0xc60008	                       mov byte [rax], 8	       854	deflate.c	FUNCTION_13	IF_15
0x40016ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x40016f0	        0x488b4038	            mov rax, qword [rax + 0x38] 	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x40016f4	          0x4885c0	                           test rax, rax	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x40016f7	     0xf856b010000	                           jne 0x4001868	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x40016fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4001701	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4001705	        0x488b45f8	                mov rax, qword [rbp - 8]	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4001709	        0x488b4028	            mov rax, qword [rax + 0x28] 	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x400170d	        0x488d4801	                      lea rcx, [rax + 1]	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4001711	        0x488b55f8	                mov rdx, qword [rbp - 8]	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4001715	        0x48894a28	             mov qword [rdx + 0x28], rcx	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4001719	          0x4801f0	                            add rax, rsi	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x400171c	          0xc60000	                       mov byte [rax], 0	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x400171f	        0x488b45f8	                mov rax, qword [rbp - 8]	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4001723	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4001727	        0x488b45f8	                mov rax, qword [rbp - 8]	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x400172b	        0x488b4028	            mov rax, qword [rax + 0x28] 	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x400172f	        0x488d4801	                      lea rcx, [rax + 1]	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4001733	        0x488b55f8	                mov rdx, qword [rbp - 8]	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4001737	        0x48894a28	             mov qword [rdx + 0x28], rcx	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x400173b	          0x4801f0	                            add rax, rsi	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x400173e	          0xc60000	                       mov byte [rax], 0	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4001741	        0x488b45f8	                mov rax, qword [rbp - 8]	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001745	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001749	        0x488b45f8	                mov rax, qword [rbp - 8]	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x400174d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001751	        0x488d4801	                      lea rcx, [rax + 1]	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001755	        0x488b55f8	                mov rdx, qword [rbp - 8]	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001759	        0x48894a28	             mov qword [rdx + 0x28], rcx	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x400175d	          0x4801f0	                            add rax, rsi	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001760	          0xc60000	                       mov byte [rax], 0	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001763	        0x488b45f8	                mov rax, qword [rbp - 8]	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001767	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x400176b	        0x488b45f8	                mov rax, qword [rbp - 8]	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x400176f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001773	        0x488d4801	                      lea rcx, [rax + 1]	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001777	        0x488b55f8	                mov rdx, qword [rbp - 8]	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x400177b	        0x48894a28	             mov qword [rdx + 0x28], rcx	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x400177f	          0x4801f0	                            add rax, rsi	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001782	          0xc60000	                       mov byte [rax], 0	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001785	        0x488b45f8	                mov rax, qword [rbp - 8]	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4001789	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x400178d	        0x488b45f8	                mov rax, qword [rbp - 8]	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4001791	        0x488b4028	            mov rax, qword [rax + 0x28] 	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4001795	        0x488d4801	                      lea rcx, [rax + 1]	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4001799	        0x488b55f8	                mov rdx, qword [rbp - 8]	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x400179d	        0x48894a28	             mov qword [rdx + 0x28], rcx	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x40017a1	          0x4801f0	                            add rax, rsi	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x40017a4	          0xc60000	                       mov byte [rax], 0	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x40017a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017ab	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017af	        0x488b45f8	                mov rax, qword [rbp - 8]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017b3	        0x488b4028	            mov rax, qword [rax + 0x28] 	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017b7	        0x488d4801	                      lea rcx, [rax + 1]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017bb	        0x488b55f8	                mov rdx, qword [rbp - 8]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017bf	        0x48894a28	             mov qword [rdx + 0x28], rcx	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017c3	        0x488d1406	                    lea rdx, [rsi + rax]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017cb	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017d1	          0x83f809	                              cmp eax, 9	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017d4	            0x742c	                            je 0x4001802	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017da	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017e0	          0x83f801	                              cmp eax, 1	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017e3	            0x7f0f	                            jg 0x40017f4	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017e9	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017ef	          0x83f801	                              cmp eax, 1	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017f2	            0x7f07	                            jg 0x40017fb	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017f4	      0xb804000000	                              mov eax, 4	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017f9	            0xeb0c	                           jmp 0x4001807	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x40017fb	      0xb800000000	                              mov eax, 0	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001800	            0xeb05	                           jmp 0x4001807	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001802	      0xb802000000	                              mov eax, 2	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001807	            0x8802	                      mov byte [rdx], al	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001809	        0x488b45f8	                mov rax, qword [rbp - 8]	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x400180d	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4001811	        0x488b45f8	                mov rax, qword [rbp - 8]	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4001815	        0x488b4028	            mov rax, qword [rax + 0x28] 	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4001819	        0x488d4801	                      lea rcx, [rax + 1]	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x400181d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4001821	        0x48894a28	             mov qword [rdx + 0x28], rcx	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4001825	          0x4801f0	                            add rax, rsi	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4001828	          0xc60003	                       mov byte [rax], 3	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x400182b	        0x488b45f8	                mov rax, qword [rbp - 8]	       865	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_21
0x400182f	    0xc74008710000	               mov dword [rax + 8], 0x71	       865	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_21
0x4001836	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       868	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_22
0x400183a	          0x4889c7	                            mov rdi, rax	       868	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_22
0x400183d	      0xe80afaffff	                  call sym.flush_pending	       868	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_22
0x4001842	        0x488b45f8	                mov rax, qword [rbp - 8]	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001846	        0x488b4028	            mov rax, qword [rax + 0x28] 	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x400184a	          0x4885c0	                           test rax, rax	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x400184d	     0xf84e2020000	                            je 0x4001b35	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001853	        0x488b45f8	                mov rax, qword [rbp - 8]	       870	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001857	    0xc7404cffffff	     mov dword [rax + 0x4c], 0xffffffff 	       870	deflate.c	FUNCTION_13	IF_15	IF_16
0x400185e	      0xb800000000	                              mov eax, 0	       871	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001863	      0xe9790d0000	                           jmp 0x40025e1	       871	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001868	        0x488b45f8	                mov rax, qword [rbp - 8]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400186c	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001870	        0x488b45f8	                mov rax, qword [rbp - 8]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001874	        0x488b4028	            mov rax, qword [rax + 0x28] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001878	        0x488d4801	                      lea rcx, [rax + 1]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400187c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001880	        0x48894a28	             mov qword [rdx + 0x28], rcx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001884	        0x488d1406	                    lea rdx, [rsi + rax]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001888	        0x488b45f8	                mov rax, qword [rbp - 8]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400188c	        0x488b4038	            mov rax, qword [rax + 0x38] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001890	            0x8b00	                    mov eax, dword [rax]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001892	            0x85c0	                           test eax, eax	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001894	            0x7407	                            je 0x400189d	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001896	      0xb901000000	                              mov ecx, 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400189b	            0xeb05	                           jmp 0x40018a2	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400189d	      0xb900000000	                              mov ecx, 0	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018a6	        0x488b4038	            mov rax, qword [rax + 0x38] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018aa	          0x8b4044	            mov eax, dword [rax + 0x44] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018ad	            0x85c0	                           test eax, eax	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018af	            0x7407	                            je 0x40018b8	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018b1	      0xb802000000	                              mov eax, 2	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018b6	            0xeb05	                           jmp 0x40018bd	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018b8	      0xb800000000	                              mov eax, 0	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018bd	             0x1c1	                            add ecx, eax	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018c3	        0x488b4038	            mov rax, qword [rax + 0x38] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018c7	        0x488b4018	            mov rax, qword [rax + 0x18] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018cb	          0x4885c0	                           test rax, rax	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018ce	            0x7507	                           jne 0x40018d7	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018d0	      0xb800000000	                              mov eax, 0	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018d5	            0xeb05	                           jmp 0x40018dc	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018d7	      0xb804000000	                              mov eax, 4	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018dc	             0x1c1	                            add ecx, eax	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018de	        0x488b45f8	                mov rax, qword [rbp - 8]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018e2	        0x488b4038	            mov rax, qword [rax + 0x38] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018e6	        0x488b4028	            mov rax, qword [rax + 0x28] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018ea	          0x4885c0	                           test rax, rax	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018ed	            0x7507	                           jne 0x40018f6	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018ef	      0xb800000000	                              mov eax, 0	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018f4	            0xeb05	                           jmp 0x40018fb	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018f6	      0xb808000000	                              mov eax, 8	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018fb	             0x1c1	                            add ecx, eax	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40018fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001901	        0x488b4038	            mov rax, qword [rax + 0x38] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001905	        0x488b4038	            mov rax, qword [rax + 0x38] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001909	          0x4885c0	                           test rax, rax	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400190c	            0x7507	                           jne 0x4001915	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400190e	      0xb800000000	                              mov eax, 0	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001913	            0xeb05	                           jmp 0x400191a	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001915	      0xb810000000	                           mov eax, 0x10	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400191a	             0x1c8	                            add eax, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400191c	            0x8802	                      mov byte [rdx], al	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400191e	        0x488b45f8	                mov rax, qword [rbp - 8]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001922	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001926	        0x488b45f8	                mov rax, qword [rbp - 8]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400192a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400192e	        0x488d4801	                      lea rcx, [rax + 1]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001932	        0x488b55f8	                mov rdx, qword [rbp - 8]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001936	        0x48894a28	             mov qword [rdx + 0x28], rcx	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400193a	        0x488d1406	                    lea rdx, [rsi + rax]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400193e	        0x488b45f8	                mov rax, qword [rbp - 8]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001942	        0x488b4038	            mov rax, qword [rax + 0x38] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001946	        0x488b4008	                mov rax, qword [rax + 8]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400194a	            0x8802	                      mov byte [rdx], al	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400194c	        0x488b45f8	                mov rax, qword [rbp - 8]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001950	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001954	        0x488b45f8	                mov rax, qword [rbp - 8]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001958	        0x488b4028	            mov rax, qword [rax + 0x28] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400195c	        0x488d4801	                      lea rcx, [rax + 1]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001960	        0x488b55f8	                mov rdx, qword [rbp - 8]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001964	        0x48894a28	             mov qword [rdx + 0x28], rcx	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001968	        0x488d1406	                    lea rdx, [rsi + rax]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400196c	        0x488b45f8	                mov rax, qword [rbp - 8]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001970	        0x488b4038	            mov rax, qword [rax + 0x38] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001974	        0x488b4008	                mov rax, qword [rax + 8]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001978	        0x48c1e808	                              shr rax, 8	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400197c	            0x8802	                      mov byte [rdx], al	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400197e	        0x488b45f8	                mov rax, qword [rbp - 8]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001982	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001986	        0x488b45f8	                mov rax, qword [rbp - 8]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400198a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400198e	        0x488d4801	                      lea rcx, [rax + 1]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001992	        0x488b55f8	                mov rdx, qword [rbp - 8]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001996	        0x48894a28	             mov qword [rdx + 0x28], rcx	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400199a	        0x488d1406	                    lea rdx, [rsi + rax]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400199e	        0x488b45f8	                mov rax, qword [rbp - 8]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019a2	        0x488b4038	            mov rax, qword [rax + 0x38] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019a6	        0x488b4008	                mov rax, qword [rax + 8]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019aa	        0x48c1e810	                           shr rax, 0x10	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019ae	            0x8802	                      mov byte [rdx], al	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019b4	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019bc	        0x488b4028	            mov rax, qword [rax + 0x28] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019c0	        0x488d4801	                      lea rcx, [rax + 1]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019c4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019c8	        0x48894a28	             mov qword [rdx + 0x28], rcx	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019cc	        0x488d1406	                    lea rdx, [rsi + rax]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019d4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019d8	        0x488b4008	                mov rax, qword [rax + 8]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019dc	        0x48c1e818	                           shr rax, 0x18	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019e0	            0x8802	                      mov byte [rdx], al	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40019e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40019e6	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40019ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40019ee	        0x488b4028	            mov rax, qword [rax + 0x28] 	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40019f2	        0x488d4801	                      lea rcx, [rax + 1]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40019f6	        0x488b55f8	                mov rdx, qword [rbp - 8]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40019fa	        0x48894a28	             mov qword [rdx + 0x28], rcx	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40019fe	        0x488d1406	                    lea rdx, [rsi + rax]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a02	        0x488b45f8	                mov rax, qword [rbp - 8]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a06	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a0c	          0x83f809	                              cmp eax, 9	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a0f	            0x742c	                            je 0x4001a3d	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a11	        0x488b45f8	                mov rax, qword [rbp - 8]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a15	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a1b	          0x83f801	                              cmp eax, 1	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a1e	            0x7f0f	                            jg 0x4001a2f	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a20	        0x488b45f8	                mov rax, qword [rbp - 8]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a24	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a2a	          0x83f801	                              cmp eax, 1	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a2d	            0x7f07	                            jg 0x4001a36	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a2f	      0xb804000000	                              mov eax, 4	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a34	            0xeb0c	                           jmp 0x4001a42	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a36	      0xb800000000	                              mov eax, 0	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a3b	            0xeb05	                           jmp 0x4001a42	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a3d	      0xb802000000	                              mov eax, 2	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a42	            0x8802	                      mov byte [rdx], al	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001a44	        0x488b45f8	                mov rax, qword [rbp - 8]	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a48	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a4c	        0x488b45f8	                mov rax, qword [rbp - 8]	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a50	        0x488b4028	            mov rax, qword [rax + 0x28] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a54	        0x488d4801	                      lea rcx, [rax + 1]	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a58	        0x488b55f8	                mov rdx, qword [rbp - 8]	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a5c	        0x48894a28	             mov qword [rdx + 0x28], rcx	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a60	        0x488d1406	                    lea rdx, [rsi + rax]	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a64	        0x488b45f8	                mov rax, qword [rbp - 8]	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a68	        0x488b4038	            mov rax, qword [rax + 0x38] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a6c	          0x8b4014	            mov eax, dword [rax + 0x14] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a6f	            0x8802	                      mov byte [rdx], al	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001a71	        0x488b45f8	                mov rax, qword [rbp - 8]	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x4001a75	        0x488b4038	            mov rax, qword [rax + 0x38] 	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x4001a79	        0x488b4018	            mov rax, qword [rax + 0x18] 	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x4001a7d	          0x4885c0	                           test rax, rax	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x4001a80	            0x745d	                            je 0x4001adf	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x4001a82	        0x488b45f8	                mov rax, qword [rbp - 8]	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001a86	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001a8a	        0x488b45f8	                mov rax, qword [rbp - 8]	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001a8e	        0x488b4028	            mov rax, qword [rax + 0x28] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001a92	        0x488d4801	                      lea rcx, [rax + 1]	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001a96	        0x488b55f8	                mov rdx, qword [rbp - 8]	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001a9a	        0x48894a28	             mov qword [rdx + 0x28], rcx	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001a9e	        0x488d1406	                    lea rdx, [rsi + rax]	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001aa2	        0x488b45f8	                mov rax, qword [rbp - 8]	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001aa6	        0x488b4038	            mov rax, qword [rax + 0x38] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001aaa	          0x8b4020	            mov eax, dword [rax + 0x20] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001aad	            0x8802	                      mov byte [rdx], al	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001aaf	        0x488b45f8	                mov rax, qword [rbp - 8]	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ab3	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ab7	        0x488b45f8	                mov rax, qword [rbp - 8]	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001abb	        0x488b4028	            mov rax, qword [rax + 0x28] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001abf	        0x488d4801	                      lea rcx, [rax + 1]	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ac3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ac7	        0x48894a28	             mov qword [rdx + 0x28], rcx	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001acb	        0x488d1406	                    lea rdx, [rsi + rax]	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001acf	        0x488b45f8	                mov rax, qword [rbp - 8]	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ad3	        0x488b4038	            mov rax, qword [rax + 0x38] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ad7	          0x8b4020	            mov eax, dword [rax + 0x20] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ada	          0xc1e808	                              shr eax, 8	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001add	            0x8802	                      mov byte [rdx], al	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001adf	        0x488b45f8	                mov rax, qword [rbp - 8]	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4001ae3	        0x488b4038	            mov rax, qword [rax + 0x38] 	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4001ae7	          0x8b4044	            mov eax, dword [rax + 0x44] 	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4001aea	            0x85c0	                           test eax, eax	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4001aec	            0x7430	                            je 0x4001b1e	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4001aee	        0x488b45f8	                mov rax, qword [rbp - 8]	       895	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_32
0x4001af2	        0x488b4028	            mov rax, qword [rax + 0x28] 	       895	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_32
0x4001af6	            0x89c2	                            mov edx, eax	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001af8	        0x488b45f8	                mov rax, qword [rbp - 8]	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001afc	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001b00	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001b04	        0x488b4060	            mov rax, qword [rax + 0x60] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001b08	          0x4889ce	                            mov rsi, rcx	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001b0b	          0x4889c7	                            mov rdi, rax	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001b0e	      0xe800000000	                          call 0x4001b13	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001b13	          0x4889c2	                            mov rdx, rax	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001b16	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001b1a	        0x48895060	             mov qword [rax + 0x60], rdx	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001b1e	        0x488b45f8	                mov rax, qword [rbp - 8]	       896	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4001b22	    0x48c740400000	               mov qword [rax + 0x40], 0	       896	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4001b2a	        0x488b45f8	                mov rax, qword [rbp - 8]	       897	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_19
0x4001b2e	    0xc74008450000	               mov dword [rax + 8], 0x45	       897	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_19
0x4001b35	        0x488b45f8	                mov rax, qword [rbp - 8]	       900	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b39	          0x8b4008	                mov eax, dword [rax + 8]	       900	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b3c	          0x83f845	                           cmp eax, 0x45	       900	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b3f	     0xf8530020000	                           jne 0x4001d75	       900	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b45	        0x488b45f8	                mov rax, qword [rbp - 8]	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b49	        0x488b4038	            mov rax, qword [rax + 0x38] 	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b4d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b51	          0x4885c0	                           test rax, rax	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b54	     0xf8410020000	                            je 0x4001d6a	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       902	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b5e	        0x488b4028	            mov rax, qword [rax + 0x28] 	       902	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b62	        0x488945e0	             mov qword [rbp - 0x20], rax	       902	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001b66	        0x488b45f8	                mov rax, qword [rbp - 8]	       903	deflate.c	FUNCTION_13	IF_15
0x4001b6a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       903	deflate.c	FUNCTION_13	IF_15
0x4001b6e	          0x8b4020	            mov eax, dword [rax + 0x20] 	       903	deflate.c	FUNCTION_13	IF_15
0x4001b71	           0xfb7d0	                           movzx edx, ax	       903	deflate.c	FUNCTION_13	IF_15
0x4001b74	        0x488b45f8	                mov rax, qword [rbp - 8]	       903	deflate.c	FUNCTION_13	IF_15
0x4001b78	        0x488b4040	            mov rax, qword [rax + 0x40] 	       903	deflate.c	FUNCTION_13	IF_15
0x4001b7c	            0x29c2	                            sub edx, eax	       903	deflate.c	FUNCTION_13	IF_15
0x4001b7e	            0x89d0	                            mov eax, edx	       903	deflate.c	FUNCTION_13	IF_15
0x4001b80	          0x8945c8	             mov dword [rbp - 0x38], eax	       903	deflate.c	FUNCTION_13	IF_15
0x4001b83	      0xe90e010000	                           jmp 0x4001c96	       904	deflate.c	FUNCTION_13	IF_20
0x4001b88	        0x488b45f8	                mov rax, qword [rbp - 8]	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001b8c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001b90	            0x89c2	                            mov edx, eax	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001b92	        0x488b45f8	                mov rax, qword [rbp - 8]	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001b96	        0x488b4028	            mov rax, qword [rax + 0x28] 	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001b9a	            0x29c2	                            sub edx, eax	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001b9c	            0x89d0	                            mov eax, edx	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001b9e	          0x8945d0	             mov dword [rbp - 0x30], eax	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001ba1	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001ba4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       907	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001ba8	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       907	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bac	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       907	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bb0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       907	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bb4	        0x488b5240	            mov rdx, qword [rdx + 0x40] 	       907	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bb8	        0x488d3411	                    lea rsi, [rcx + rdx]	       907	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bbc	        0x488b55f8	                mov rdx, qword [rbp - 8]	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bc0	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bc4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bc8	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bcc	          0x4801d1	                            add rcx, rdx	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bcf	          0x4889c2	                            mov rdx, rax	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bd2	          0x4889cf	                            mov rdi, rcx	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bd5	      0xe800000000	                          call 0x4001bda	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001bda	        0x488b45f8	                mov rax, qword [rbp - 8]	       908	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001bde	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       908	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001be2	        0x488b45f8	                mov rax, qword [rbp - 8]	       908	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001be6	        0x48895028	             mov qword [rax + 0x28], rdx	       908	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001bea	        0x488b45f8	                mov rax, qword [rbp - 8]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001bee	        0x488b4038	            mov rax, qword [rax + 0x38] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001bf2	          0x8b4044	            mov eax, dword [rax + 0x44] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001bf5	            0x85c0	                           test eax, eax	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001bf7	            0x744b	                            je 0x4001c44	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001bf9	        0x488b45f8	                mov rax, qword [rbp - 8]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001bfd	        0x488b4028	            mov rax, qword [rax + 0x28] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c01	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c05	            0x763d	                           jbe 0x4001c44	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c07	        0x488b45f8	                mov rax, qword [rbp - 8]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c0b	        0x488b4028	            mov rax, qword [rax + 0x28] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c0f	            0x89c2	                            mov edx, eax	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c11	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c15	            0x29c2	                            sub edx, eax	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c17	        0x488b45f8	                mov rax, qword [rbp - 8]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c1b	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c23	          0x4801c1	                            add rcx, rax	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c26	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c2a	        0x488b4060	            mov rax, qword [rax + 0x60] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c2e	          0x4889ce	                            mov rsi, rcx	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c31	          0x4889c7	                            mov rdi, rax	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c34	      0xe800000000	                          call 0x4001c39	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c39	          0x4889c2	                            mov rdx, rax	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c3c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c40	        0x48895060	             mov qword [rax + 0x60], rdx	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c44	        0x488b45f8	                mov rax, qword [rbp - 8]	       910	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	CALL_34
0x4001c48	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       910	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	CALL_34
0x4001c4c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       910	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	CALL_34
0x4001c4f	          0x4801c2	                            add rdx, rax	       910	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	CALL_34
0x4001c52	        0x488b45f8	                mov rax, qword [rbp - 8]	       910	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	CALL_34
0x4001c56	        0x48895040	             mov qword [rax + 0x40], rdx	       910	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	CALL_34
0x4001c5a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       911	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c5e	          0x4889c7	                            mov rdi, rax	       911	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c61	      0xe8e6f5ffff	                  call sym.flush_pending	       911	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c66	        0x488b45f8	                mov rax, qword [rbp - 8]	       912	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c6a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       912	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c6e	          0x4885c0	                           test rax, rax	       912	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c71	            0x7415	                            je 0x4001c88	       912	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c73	        0x488b45f8	                mov rax, qword [rbp - 8]	       913	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c77	    0xc7404cffffff	     mov dword [rax + 0x4c], 0xffffffff 	       913	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c7e	      0xb800000000	                              mov eax, 0	       914	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c83	      0xe959090000	                           jmp 0x40025e1	       914	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001c88	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       916	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001c90	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       917	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001c93	          0x2945c8	             sub dword [rbp - 0x38], eax	       917	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001c96	        0x488b45f8	                mov rax, qword [rbp - 8]	       904	deflate.c	FUNCTION_13	IF_20
0x4001c9a	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       904	deflate.c	FUNCTION_13	IF_20
0x4001c9e	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       904	deflate.c	FUNCTION_13	IF_20
0x4001ca1	          0x4801c2	                            add rdx, rax	       904	deflate.c	FUNCTION_13	IF_20
0x4001ca4	        0x488b45f8	                mov rax, qword [rbp - 8]	       904	deflate.c	FUNCTION_13	IF_20
0x4001ca8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       904	deflate.c	FUNCTION_13	IF_20
0x4001cac	          0x4839c2	                            cmp rdx, rax	       904	deflate.c	FUNCTION_13	IF_20
0x4001caf	     0xf87d3feffff	                            ja 0x4001b88	       904	deflate.c	FUNCTION_13	IF_20
0x4001cb5	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       919	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001cb8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       920	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001cbc	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       920	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001cc0	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       920	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001cc4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       920	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001cc8	        0x488b5240	            mov rdx, qword [rdx + 0x40] 	       920	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001ccc	        0x488d3411	                    lea rsi, [rcx + rdx]	       920	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001cd0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       919	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001cd4	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       919	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001cd8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       919	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001cdc	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       919	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001ce0	          0x4801d1	                            add rcx, rdx	       919	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001ce3	          0x4889c2	                            mov rdx, rax	       919	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001ce6	          0x4889cf	                            mov rdi, rcx	       919	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001ce9	      0xe800000000	                          call 0x4001cee	       919	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4001cee	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001cf2	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001cf6	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001cf9	          0x4801c2	                            add rdx, rax	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001cfc	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d00	        0x48895028	             mov qword [rax + 0x28], rdx	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d04	        0x488b45f8	                mov rax, qword [rbp - 8]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d08	        0x488b4038	            mov rax, qword [rax + 0x38] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d0c	          0x8b4044	            mov eax, dword [rax + 0x44] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d0f	            0x85c0	                           test eax, eax	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d11	            0x744b	                            je 0x4001d5e	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d13	        0x488b45f8	                mov rax, qword [rbp - 8]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d17	        0x488b4028	            mov rax, qword [rax + 0x28] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d1b	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d1f	            0x763d	                           jbe 0x4001d5e	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d21	        0x488b45f8	                mov rax, qword [rbp - 8]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d25	        0x488b4028	            mov rax, qword [rax + 0x28] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d29	            0x89c2	                            mov edx, eax	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d2b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d2f	            0x29c2	                            sub edx, eax	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d31	        0x488b45f8	                mov rax, qword [rbp - 8]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d35	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d39	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d3d	          0x4801c1	                            add rcx, rax	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d40	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d44	        0x488b4060	            mov rax, qword [rax + 0x60] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d48	          0x4889ce	                            mov rsi, rcx	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d4b	          0x4889c7	                            mov rdi, rax	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d4e	      0xe800000000	                          call 0x4001d53	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d53	          0x4889c2	                            mov rdx, rax	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d56	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d5a	        0x48895060	             mov qword [rax + 0x60], rdx	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4001d5e	        0x488b45f8	                mov rax, qword [rbp - 8]	       923	deflate.c	FUNCTION_13	IF_20	IF_21	CALL_36
0x4001d62	    0x48c740400000	               mov qword [rax + 0x40], 0	       923	deflate.c	FUNCTION_13	IF_20	IF_21	CALL_36
0x4001d6a	        0x488b45f8	                mov rax, qword [rbp - 8]	       925	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001d6e	    0xc74008490000	               mov dword [rax + 8], 0x49	       925	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001d75	        0x488b45f8	                mov rax, qword [rbp - 8]	       927	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001d79	          0x8b4008	                mov eax, dword [rax + 8]	       927	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001d7c	          0x83f849	                           cmp eax, 0x49	       927	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001d7f	     0xf8595010000	                           jne 0x4001f1a	       927	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001d85	        0x488b45f8	                mov rax, qword [rbp - 8]	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001d89	        0x488b4038	            mov rax, qword [rax + 0x38] 	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001d8d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001d91	          0x4885c0	                           test rax, rax	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001d94	     0xf8475010000	                            je 0x4001f0f	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001d9a	        0x488b45f8	                mov rax, qword [rbp - 8]	       929	deflate.c	FUNCTION_13	IF_20
0x4001d9e	        0x488b4028	            mov rax, qword [rax + 0x28] 	       929	deflate.c	FUNCTION_13	IF_20
0x4001da2	        0x488945e8	             mov qword [rbp - 0x18], rax	       929	deflate.c	FUNCTION_13	IF_20
0x4001da6	        0x488b45f8	                mov rax, qword [rbp - 8]	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001daa	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dae	        0x488b45f8	                mov rax, qword [rbp - 8]	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001db2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001db6	          0x4839c2	                            cmp rdx, rax	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001db9	     0xf8590000000	                           jne 0x4001e4f	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dbf	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dc3	        0x488b4038	            mov rax, qword [rax + 0x38] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dc7	          0x8b4044	            mov eax, dword [rax + 0x44] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dca	            0x85c0	                           test eax, eax	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dcc	            0x744b	                            je 0x4001e19	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dce	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dd2	        0x488b4028	            mov rax, qword [rax + 0x28] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dd6	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dda	            0x763d	                           jbe 0x4001e19	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001ddc	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001de0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001de4	            0x89c2	                            mov edx, eax	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001de6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dea	            0x29c2	                            sub edx, eax	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dec	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001df0	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001df4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001df8	          0x4801c1	                            add rcx, rax	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dfb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001dff	        0x488b4060	            mov rax, qword [rax + 0x60] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001e03	          0x4889ce	                            mov rsi, rcx	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001e06	          0x4889c7	                            mov rdi, rax	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001e09	      0xe800000000	                          call 0x4001e0e	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001e0e	          0x4889c2	                            mov rdx, rax	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001e11	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001e15	        0x48895060	             mov qword [rax + 0x60], rdx	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001e19	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       934	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001e1d	          0x4889c7	                            mov rdi, rax	       934	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001e20	      0xe827f4ffff	                  call sym.flush_pending	       934	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001e25	        0x488b45f8	                mov rax, qword [rbp - 8]	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4001e29	        0x488b4028	            mov rax, qword [rax + 0x28] 	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4001e2d	          0x4885c0	                           test rax, rax	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4001e30	            0x7415	                            je 0x4001e47	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4001e32	        0x488b45f8	                mov rax, qword [rbp - 8]	       936	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001e36	    0xc7404cffffff	     mov dword [rax + 0x4c], 0xffffffff 	       936	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001e3d	      0xb800000000	                              mov eax, 0	       937	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001e42	      0xe99a070000	                           jmp 0x40025e1	       937	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001e47	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       939	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e4f	        0x488b45f8	                mov rax, qword [rbp - 8]	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e53	        0x488b4038	            mov rax, qword [rax + 0x38] 	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e57	        0x488b7028	            mov rsi, qword [rax + 0x28] 	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e5b	        0x488b45f8	                mov rax, qword [rbp - 8]	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e5f	        0x488b4040	            mov rax, qword [rax + 0x40] 	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e63	        0x488d4801	                      lea rcx, [rax + 1]	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e67	        0x488b55f8	                mov rdx, qword [rbp - 8]	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e6b	        0x48894a40	             mov qword [rdx + 0x40], rcx	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e6f	          0x4801f0	                            add rax, rsi	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e72	           0xfb600	                   movzx eax, byte [rax]	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e75	           0xfb6c0	                           movzx eax, al	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e78	          0x8945d4	             mov dword [rbp - 0x2c], eax	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e7b	        0x488b45f8	                mov rax, qword [rbp - 8]	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e7f	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e83	        0x488b45f8	                mov rax, qword [rbp - 8]	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e87	        0x488b4028	            mov rax, qword [rax + 0x28] 	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e8b	        0x488d4801	                      lea rcx, [rax + 1]	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e8f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e93	        0x48894a28	             mov qword [rdx + 0x28], rcx	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e97	          0x4801f0	                            add rax, rsi	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e9a	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e9d	            0x8810	                      mov byte [rax], dl	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4001e9f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ea3	     0xf85fdfeffff	                           jne 0x4001da6	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ea9	        0x488b45f8	                mov rax, qword [rbp - 8]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ead	        0x488b4038	            mov rax, qword [rax + 0x38] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001eb1	          0x8b4044	            mov eax, dword [rax + 0x44] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001eb4	            0x85c0	                           test eax, eax	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001eb6	            0x744b	                            je 0x4001f03	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001eb8	        0x488b45f8	                mov rax, qword [rbp - 8]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ebc	        0x488b4028	            mov rax, qword [rax + 0x28] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ec0	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ec4	            0x763d	                           jbe 0x4001f03	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ec6	        0x488b45f8	                mov rax, qword [rbp - 8]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001eca	        0x488b4028	            mov rax, qword [rax + 0x28] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ece	            0x89c2	                            mov edx, eax	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ed0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ed4	            0x29c2	                            sub edx, eax	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ed6	        0x488b45f8	                mov rax, qword [rbp - 8]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001eda	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ede	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ee2	          0x4801c1	                            add rcx, rax	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ee5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ee9	        0x488b4060	            mov rax, qword [rax + 0x60] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001eed	          0x4889ce	                            mov rsi, rcx	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ef0	          0x4889c7	                            mov rdi, rax	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ef3	      0xe800000000	                          call 0x4001ef8	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001ef8	          0x4889c2	                            mov rdx, rax	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001efb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001eff	        0x48895060	             mov qword [rax + 0x60], rdx	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4001f03	        0x488b45f8	                mov rax, qword [rbp - 8]	       945	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4001f07	    0x48c740400000	               mov qword [rax + 0x40], 0	       945	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4001f0f	        0x488b45f8	                mov rax, qword [rbp - 8]	       947	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4001f13	    0xc740085b0000	               mov dword [rax + 8], 0x5b	       947	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4001f1a	        0x488b45f8	                mov rax, qword [rbp - 8]	       949	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001f1e	          0x8b4008	                mov eax, dword [rax + 8]	       949	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001f21	          0x83f85b	                           cmp eax, 0x5b	       949	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001f24	     0xf8589010000	                           jne 0x40020b3	       949	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001f2a	        0x488b45f8	                mov rax, qword [rbp - 8]	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001f2e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001f32	        0x488b4038	            mov rax, qword [rax + 0x38] 	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001f36	          0x4885c0	                           test rax, rax	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001f39	     0xf8469010000	                            je 0x40020a8	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001f3f	        0x488b45f8	                mov rax, qword [rbp - 8]	       951	deflate.c	FUNCTION_13	IF_23
0x4001f43	        0x488b4028	            mov rax, qword [rax + 0x28] 	       951	deflate.c	FUNCTION_13	IF_23
0x4001f47	        0x488945f0	             mov qword [rbp - 0x10], rax	       951	deflate.c	FUNCTION_13	IF_23
0x4001f4b	        0x488b45f8	                mov rax, qword [rbp - 8]	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f4f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f53	        0x488b45f8	                mov rax, qword [rbp - 8]	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f57	        0x488b4018	            mov rax, qword [rax + 0x18] 	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f5b	          0x4839c2	                            cmp rdx, rax	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f5e	     0xf8590000000	                           jne 0x4001ff4	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f64	        0x488b45f8	                mov rax, qword [rbp - 8]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f68	        0x488b4038	            mov rax, qword [rax + 0x38] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f6c	          0x8b4044	            mov eax, dword [rax + 0x44] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f6f	            0x85c0	                           test eax, eax	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f71	            0x744b	                            je 0x4001fbe	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f73	        0x488b45f8	                mov rax, qword [rbp - 8]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f77	        0x488b4028	            mov rax, qword [rax + 0x28] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f7b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f7f	            0x763d	                           jbe 0x4001fbe	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f81	        0x488b45f8	                mov rax, qword [rbp - 8]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f85	        0x488b4028	            mov rax, qword [rax + 0x28] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f89	            0x89c2	                            mov edx, eax	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f8b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f8f	            0x29c2	                            sub edx, eax	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f91	        0x488b45f8	                mov rax, qword [rbp - 8]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f95	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f99	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001f9d	          0x4801c1	                            add rcx, rax	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fa0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fa4	        0x488b4060	            mov rax, qword [rax + 0x60] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fa8	          0x4889ce	                            mov rsi, rcx	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fab	          0x4889c7	                            mov rdi, rax	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fae	      0xe800000000	                          call 0x4001fb3	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fb3	          0x4889c2	                            mov rdx, rax	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fb6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fba	        0x48895060	             mov qword [rax + 0x60], rdx	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fbe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       956	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fc2	          0x4889c7	                            mov rdi, rax	       956	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fc5	      0xe882f2ffff	                  call sym.flush_pending	       956	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001fca	        0x488b45f8	                mov rax, qword [rbp - 8]	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4001fce	        0x488b4028	            mov rax, qword [rax + 0x28] 	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4001fd2	          0x4885c0	                           test rax, rax	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4001fd5	            0x7415	                            je 0x4001fec	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4001fd7	        0x488b45f8	                mov rax, qword [rbp - 8]	       958	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4001fdb	    0xc7404cffffff	     mov dword [rax + 0x4c], 0xffffffff 	       958	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4001fe2	      0xb800000000	                              mov eax, 0	       959	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4001fe7	      0xe9f5050000	                           jmp 0x40025e1	       959	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4001fec	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       961	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4001ff4	        0x488b45f8	                mov rax, qword [rbp - 8]	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4001ff8	        0x488b4038	            mov rax, qword [rax + 0x38] 	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4001ffc	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002000	        0x488b45f8	                mov rax, qword [rbp - 8]	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002004	        0x488b4040	            mov rax, qword [rax + 0x40] 	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002008	        0x488d4801	                      lea rcx, [rax + 1]	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400200c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002010	        0x48894a40	             mov qword [rdx + 0x40], rcx	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002014	          0x4801f0	                            add rax, rsi	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002017	           0xfb600	                   movzx eax, byte [rax]	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400201a	           0xfb6c0	                           movzx eax, al	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400201d	          0x8945d8	             mov dword [rbp - 0x28], eax	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002020	        0x488b45f8	                mov rax, qword [rbp - 8]	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002024	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002028	        0x488b45f8	                mov rax, qword [rbp - 8]	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400202c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002030	        0x488d4801	                      lea rcx, [rax + 1]	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002034	        0x488b55f8	                mov rdx, qword [rbp - 8]	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002038	        0x48894a28	             mov qword [rdx + 0x28], rcx	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400203c	          0x4801f0	                            add rax, rsi	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400203f	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002042	            0x8810	                      mov byte [rax], dl	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002044	        0x837dd800	               cmp dword [rbp - 0x28], 0	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002048	     0xf85fdfeffff	                           jne 0x4001f4b	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400204e	        0x488b45f8	                mov rax, qword [rbp - 8]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002052	        0x488b4038	            mov rax, qword [rax + 0x38] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002056	          0x8b4044	            mov eax, dword [rax + 0x44] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002059	            0x85c0	                           test eax, eax	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400205b	            0x744b	                            je 0x40020a8	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400205d	        0x488b45f8	                mov rax, qword [rbp - 8]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002061	        0x488b4028	            mov rax, qword [rax + 0x28] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002065	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002069	            0x763d	                           jbe 0x40020a8	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400206b	        0x488b45f8	                mov rax, qword [rbp - 8]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400206f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002073	            0x89c2	                            mov edx, eax	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002075	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002079	            0x29c2	                            sub edx, eax	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400207b	        0x488b45f8	                mov rax, qword [rbp - 8]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400207f	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002083	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002087	          0x4801c1	                            add rcx, rax	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400208a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400208e	        0x488b4060	            mov rax, qword [rax + 0x60] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002092	          0x4889ce	                            mov rsi, rcx	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002095	          0x4889c7	                            mov rdi, rax	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002098	      0xe800000000	                          call 0x400209d	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400209d	          0x4889c2	                            mov rdx, rax	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x40020a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x40020a4	        0x48895060	             mov qword [rax + 0x60], rdx	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x40020a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       968	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	CALL_40
0x40020ac	    0xc74008670000	               mov dword [rax + 8], 0x67	       968	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	CALL_40
0x40020b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x40020b7	          0x8b4008	                mov eax, dword [rax + 8]	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x40020ba	          0x83f867	                           cmp eax, 0x67	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x40020bd	     0xf850a010000	                           jne 0x40021cd	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x40020c3	        0x488b45f8	                mov rax, qword [rbp - 8]	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x40020c7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x40020cb	          0x8b4044	            mov eax, dword [rax + 0x44] 	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x40020ce	            0x85c0	                           test eax, eax	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x40020d0	     0xf84be000000	                            je 0x4002194	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x40020d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       972	deflate.c	FUNCTION_13	IF_27
0x40020da	        0x488b4028	            mov rax, qword [rax + 0x28] 	       972	deflate.c	FUNCTION_13	IF_27
0x40020de	        0x488d5002	                      lea rdx, [rax + 2]	       972	deflate.c	FUNCTION_13	IF_27
0x40020e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       972	deflate.c	FUNCTION_13	IF_27
0x40020e6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       972	deflate.c	FUNCTION_13	IF_27
0x40020ea	          0x4839c2	                            cmp rdx, rax	       972	deflate.c	FUNCTION_13	IF_27
0x40020ed	            0x762e	                           jbe 0x400211d	       972	deflate.c	FUNCTION_13	IF_27
0x40020ef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       973	deflate.c	FUNCTION_13	IF_27
0x40020f3	          0x4889c7	                            mov rdi, rax	       973	deflate.c	FUNCTION_13	IF_27
0x40020f6	      0xe851f1ffff	                  call sym.flush_pending	       973	deflate.c	FUNCTION_13	IF_27
0x40020fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       974	deflate.c	FUNCTION_13	IF_31
0x40020ff	        0x488b4028	            mov rax, qword [rax + 0x28] 	       974	deflate.c	FUNCTION_13	IF_31
0x4002103	          0x4885c0	                           test rax, rax	       974	deflate.c	FUNCTION_13	IF_31
0x4002106	            0x7415	                            je 0x400211d	       974	deflate.c	FUNCTION_13	IF_31
0x4002108	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	deflate.c	FUNCTION_13	IF_31	IF_32
0x400210c	    0xc7404cffffff	     mov dword [rax + 0x4c], 0xffffffff 	       975	deflate.c	FUNCTION_13	IF_31	IF_32
0x4002113	      0xb800000000	                              mov eax, 0	       976	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33
0x4002118	      0xe9c4040000	                           jmp 0x40025e1	       976	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33
0x400211d	        0x488b45f8	                mov rax, qword [rbp - 8]	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002121	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002125	        0x488b45f8	                mov rax, qword [rbp - 8]	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002129	        0x488b4028	            mov rax, qword [rax + 0x28] 	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400212d	        0x488d4801	                      lea rcx, [rax + 1]	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002131	        0x488b55f8	                mov rdx, qword [rbp - 8]	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002135	        0x48894a28	             mov qword [rdx + 0x28], rcx	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002139	        0x488d1406	                    lea rdx, [rsi + rax]	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400213d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002141	        0x488b4060	            mov rax, qword [rax + 0x60] 	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002145	            0x8802	                      mov byte [rdx], al	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002147	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400214b	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400214f	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002153	        0x488b4028	            mov rax, qword [rax + 0x28] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002157	        0x488d4801	                      lea rcx, [rax + 1]	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400215b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400215f	        0x48894a28	             mov qword [rdx + 0x28], rcx	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002163	        0x488d1406	                    lea rdx, [rsi + rax]	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002167	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400216b	        0x488b4060	            mov rax, qword [rax + 0x60] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400216f	        0x48c1e808	                              shr rax, 8	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002173	            0x8802	                      mov byte [rdx], al	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002175	      0xba00000000	                              mov edx, 0	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400217a	      0xbe00000000	                              mov esi, 0	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400217f	      0xbf00000000	                              mov edi, 0	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002184	      0xe800000000	                          call 0x4002189	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002189	          0x4889c2	                            mov rdx, rax	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400218c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002190	        0x48895060	             mov qword [rax + 0x60], rdx	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002194	        0x488b45f8	                mov rax, qword [rbp - 8]	       983	deflate.c	FUNCTION_13	IF_31	IF_32	CALL_42
0x4002198	    0xc74008710000	               mov dword [rax + 8], 0x71	       983	deflate.c	FUNCTION_13	IF_31	IF_32	CALL_42
0x400219f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       986	deflate.c	FUNCTION_13	IF_31	IF_32
0x40021a3	          0x4889c7	                            mov rdi, rax	       986	deflate.c	FUNCTION_13	IF_31	IF_32
0x40021a6	      0xe8a1f0ffff	                  call sym.flush_pending	       986	deflate.c	FUNCTION_13	IF_31	IF_32
0x40021ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       987	deflate.c	FUNCTION_13	IF_31
0x40021af	        0x488b4028	            mov rax, qword [rax + 0x28] 	       987	deflate.c	FUNCTION_13	IF_31
0x40021b3	          0x4885c0	                           test rax, rax	       987	deflate.c	FUNCTION_13	IF_31
0x40021b6	            0x7415	                            je 0x40021cd	       987	deflate.c	FUNCTION_13	IF_31
0x40021b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       988	deflate.c	FUNCTION_13	IF_31
0x40021bc	    0xc7404cffffff	     mov dword [rax + 0x4c], 0xffffffff 	       988	deflate.c	FUNCTION_13	IF_31
0x40021c3	      0xb800000000	                              mov eax, 0	       989	deflate.c	FUNCTION_13	IF_31
0x40021c8	      0xe914040000	                           jmp 0x40025e1	       989	deflate.c	FUNCTION_13	IF_31
0x40021cd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       996	deflate.c	FUNCTION_13
0x40021d1	          0x8b4008	                mov eax, dword [rax + 8]	       996	deflate.c	FUNCTION_13
0x40021d4	            0x85c0	                           test eax, eax	       996	deflate.c	FUNCTION_13
0x40021d6	            0x752a	                           jne 0x4002202	       996	deflate.c	FUNCTION_13
0x40021d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       996	deflate.c	FUNCTION_13
0x40021dc	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       996	deflate.c	FUNCTION_13
0x40021e2	            0x85c0	                           test eax, eax	       996	deflate.c	FUNCTION_13
0x40021e4	            0x751c	                           jne 0x4002202	       996	deflate.c	FUNCTION_13
0x40021e6	        0x837db400	               cmp dword [rbp - 0x4c], 0	       996	deflate.c	FUNCTION_13
0x40021ea	     0xf84e3010000	                            je 0x40023d3	       996	deflate.c	FUNCTION_13
0x40021f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       997	deflate.c	FUNCTION_13
0x40021f4	          0x8b4008	                mov eax, dword [rax + 8]	       997	deflate.c	FUNCTION_13
0x40021f7	      0x3d9a020000	                          cmp eax, 0x29a	       997	deflate.c	FUNCTION_13
0x40021fc	     0xf84d1010000	                            je 0x40023d3	       997	deflate.c	FUNCTION_13
0x4002202	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	deflate.c	FUNCTION_13	IF_36
0x4002206	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	      1000	deflate.c	FUNCTION_13	IF_36
0x400220c	            0x85c0	                           test eax, eax	      1000	deflate.c	FUNCTION_13	IF_36
0x400220e	            0x7513	                           jne 0x4002223	      1000	deflate.c	FUNCTION_13	IF_36
0x4002210	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1000	deflate.c	FUNCTION_13	IF_36
0x4002213	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	deflate.c	FUNCTION_13	IF_36
0x4002217	            0x89d6	                            mov esi, edx	      1000	deflate.c	FUNCTION_13	IF_36
0x4002219	          0x4889c7	                            mov rdi, rax	      1000	deflate.c	FUNCTION_13	IF_36
0x400221c	      0xe826120000	                 call sym.deflate_stored	      1000	deflate.c	FUNCTION_13	IF_36
0x4002221	            0xeb6b	                           jmp 0x400228e	      1000	deflate.c	FUNCTION_13	IF_36
0x4002223	        0x488b45f8	                mov rax, qword [rbp - 8]	      1001	deflate.c	FUNCTION_13	IF_36
0x4002227	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      1001	deflate.c	FUNCTION_13	IF_36
0x400222d	          0x83f802	                              cmp eax, 2	      1000	deflate.c	FUNCTION_13	IF_36
0x4002230	            0x7513	                           jne 0x4002245	      1000	deflate.c	FUNCTION_13	IF_36
0x4002232	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1000	deflate.c	FUNCTION_13	IF_36
0x4002235	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	deflate.c	FUNCTION_13	IF_36
0x4002239	            0x89d6	                            mov esi, edx	      1000	deflate.c	FUNCTION_13	IF_36
0x400223b	          0x4889c7	                            mov rdi, rax	      1000	deflate.c	FUNCTION_13	IF_36
0x400223e	      0xe867330000	                   call sym.deflate_huff	      1000	deflate.c	FUNCTION_13	IF_36
0x4002243	            0xeb49	                           jmp 0x400228e	      1000	deflate.c	FUNCTION_13	IF_36
0x4002245	        0x488b45f8	                mov rax, qword [rbp - 8]	      1002	deflate.c	FUNCTION_13	IF_36
0x4002249	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      1002	deflate.c	FUNCTION_13	IF_36
0x400224f	          0x83f803	                              cmp eax, 3	      1000	deflate.c	FUNCTION_13	IF_36
0x4002252	            0x7513	                           jne 0x4002267	      1000	deflate.c	FUNCTION_13	IF_36
0x4002254	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1000	deflate.c	FUNCTION_13	IF_36
0x4002257	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	deflate.c	FUNCTION_13	IF_36
0x400225b	            0x89d6	                            mov esi, edx	      1000	deflate.c	FUNCTION_13	IF_36
0x400225d	          0x4889c7	                            mov rdi, rax	      1000	deflate.c	FUNCTION_13	IF_36
0x4002260	      0xe87e2c0000	                    call sym.deflate_rle	      1000	deflate.c	FUNCTION_13	IF_36
0x4002265	            0xeb27	                           jmp 0x400228e	      1000	deflate.c	FUNCTION_13	IF_36
0x4002267	        0x488b45f8	                mov rax, qword [rbp - 8]	      1003	deflate.c	FUNCTION_13	IF_36
0x400226b	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	      1003	deflate.c	FUNCTION_13	IF_36
0x4002271	            0x4898	                                    cdqe	      1003	deflate.c	FUNCTION_13	IF_36
0x4002273	        0x48c1e004	                              shl rax, 4	      1003	deflate.c	FUNCTION_13	IF_36
0x4002277	    0x480500000000	                              add rax, 0	      1003	deflate.c	FUNCTION_13	IF_36
0x400227d	          0x488b00	                    mov rax, qword [rax]	      1003	deflate.c	FUNCTION_13	IF_36
0x4002280	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1000	deflate.c	FUNCTION_13	IF_36
0x4002283	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1000	deflate.c	FUNCTION_13	IF_36
0x4002287	            0x89ce	                            mov esi, ecx	      1000	deflate.c	FUNCTION_13	IF_36
0x4002289	          0x4889d7	                            mov rdi, rdx	      1000	deflate.c	FUNCTION_13	IF_36
0x400228c	            0xffd0	                                call rax	      1000	deflate.c	FUNCTION_13	IF_36
0x400228e	          0x8945dc	             mov dword [rbp - 0x24], eax	      1000	deflate.c	FUNCTION_13	IF_36
0x4002291	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x4002295	            0x7406	                            je 0x400229d	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x4002297	        0x837ddc03	               cmp dword [rbp - 0x24], 3	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x400229b	            0x750b	                           jne 0x40022a8	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x400229d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1006	deflate.c	FUNCTION_13	IF_36	CALL_48
0x40022a1	    0xc740089a0200	              mov dword [rax + 8], 0x29a	      1006	deflate.c	FUNCTION_13	IF_36	CALL_48
0x40022a8	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1008	deflate.c	FUNCTION_13	IF_36
0x40022ac	            0x7406	                            je 0x40022b4	      1008	deflate.c	FUNCTION_13	IF_36
0x40022ae	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      1008	deflate.c	FUNCTION_13	IF_36
0x40022b2	            0x7520	                           jne 0x40022d4	      1008	deflate.c	FUNCTION_13	IF_36
0x40022b4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x40022b8	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x40022bb	            0x85c0	                           test eax, eax	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x40022bd	            0x750b	                           jne 0x40022ca	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x40022bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1010	deflate.c	FUNCTION_13	IF_36	IF_37
0x40022c3	    0xc7404cffffff	     mov dword [rax + 0x4c], 0xffffffff 	      1010	deflate.c	FUNCTION_13	IF_36	IF_37
0x40022ca	      0xb800000000	                              mov eax, 0	      1012	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022cf	      0xe90d030000	                           jmp 0x40025e1	      1012	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022d4	        0x837ddc01	               cmp dword [rbp - 0x24], 1	      1021	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022d8	     0xf85f5000000	                           jne 0x40023d3	      1021	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022de	        0x837db401	               cmp dword [rbp - 0x4c], 1	      1022	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022e2	            0x7511	                           jne 0x40022f5	      1022	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022e8	          0x4889c7	                            mov rdi, rax	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022eb	      0xe800000000	                          call 0x40022f0	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022f0	      0xe9b2000000	                           jmp 0x40023a7	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022f5	        0x837db405	               cmp dword [rbp - 0x4c], 5	      1024	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022f9	     0xf84a8000000	                            je 0x40023a7	      1024	deflate.c	FUNCTION_13	IF_36	IF_38
0x40022ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002303	      0xb900000000	                              mov ecx, 0	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002308	      0xba00000000	                              mov edx, 0	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x400230d	      0xbe00000000	                              mov esi, 0	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002312	          0x4889c7	                            mov rdi, rax	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002315	      0xe800000000	                          call 0x400231a	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x400231a	        0x837db403	               cmp dword [rbp - 0x4c], 3	      1029	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	CALL_50
0x400231e	     0xf8583000000	                           jne 0x40023a7	      1029	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	CALL_50
0x4002324	        0x488b45f8	                mov rax, qword [rbp - 8]	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002328	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400232c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002330	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002336	          0x83e801	                              sub eax, 1	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002339	            0x89c0	                            mov eax, eax	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400233b	          0x4801c0	                            add rax, rax	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400233e	          0x4801d0	                            add rax, rdx	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002341	      0x66c7000000	                       mov word [rax], 0	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002346	        0x488b45f8	                mov rax, qword [rbp - 8]	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400234a	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002350	          0x83e801	                              sub eax, 1	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002353	            0x89c0	                            mov eax, eax	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002355	        0x488d1400	                    lea rdx, [rax + rax]	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002359	        0x488b45f8	                mov rax, qword [rbp - 8]	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400235d	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002361	      0xbe00000000	                              mov esi, 0	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002366	          0x4889c7	                            mov rdi, rax	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002369	      0xe800000000	                          call 0x400236e	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400236e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002372	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002378	            0x85c0	                           test eax, eax	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400237a	            0x752b	                           jne 0x40023a7	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400237c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1032	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002380	    0xc780ac000000	               mov dword [rax + 0xac], 0	      1032	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400238a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1033	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x400238e	    0x48c780980000	               mov qword [rax + 0x98], 0	      1033	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4002399	        0x488b45f8	                mov rax, qword [rbp - 8]	      1034	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x400239d	    0xc7802c170000	            mov dword [rax + 0x172c], 0 	      1034	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x40023a7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1038	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x40023ab	          0x4889c7	                            mov rdi, rax	      1038	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x40023ae	      0xe899eeffff	                  call sym.flush_pending	      1038	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x40023b3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x40023b7	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x40023ba	            0x85c0	                           test eax, eax	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x40023bc	            0x7515	                           jne 0x40023d3	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x40023be	        0x488b45f8	                mov rax, qword [rbp - 8]	      1040	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x40023c2	    0xc7404cffffff	     mov dword [rax + 0x4c], 0xffffffff 	      1040	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x40023c9	      0xb800000000	                              mov eax, 0	      1041	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x40023ce	      0xe90e020000	                           jmp 0x40025e1	      1041	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x40023d3	        0x837db404	               cmp dword [rbp - 0x4c], 4	      1046	deflate.c	FUNCTION_13	IF_36	IF_40	IF_45
0x40023d7	            0x740a	                            je 0x40023e3	      1046	deflate.c	FUNCTION_13	IF_36	IF_40	IF_45
0x40023d9	      0xb800000000	                              mov eax, 0	      1046	deflate.c	FUNCTION_13	IF_36	IF_40	IF_45
0x40023de	      0xe9fe010000	                           jmp 0x40025e1	      1046	deflate.c	FUNCTION_13	IF_36	IF_40	IF_45
0x40023e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x40023e7	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x40023ea	            0x85c0	                           test eax, eax	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x40023ec	            0x7f0a	                            jg 0x40023f8	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x40023ee	      0xb801000000	                              mov eax, 1	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x40023f3	      0xe9e9010000	                           jmp 0x40025e1	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x40023f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1051	deflate.c	FUNCTION_13	IF_47
0x40023fc	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1051	deflate.c	FUNCTION_13	IF_47
0x40023ff	          0x83f802	                              cmp eax, 2	      1051	deflate.c	FUNCTION_13	IF_47
0x4002402	     0xf856a010000	                           jne 0x4002572	      1051	deflate.c	FUNCTION_13	IF_47
0x4002408	        0x488b45f8	                mov rax, qword [rbp - 8]	      1052	deflate.c	FUNCTION_13
0x400240c	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1052	deflate.c	FUNCTION_13
0x4002410	        0x488b45f8	                mov rax, qword [rbp - 8]	      1052	deflate.c	FUNCTION_13
0x4002414	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1052	deflate.c	FUNCTION_13
0x4002418	        0x488d4801	                      lea rcx, [rax + 1]	      1052	deflate.c	FUNCTION_13
0x400241c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1052	deflate.c	FUNCTION_13
0x4002420	        0x48894a28	             mov qword [rdx + 0x28], rcx	      1052	deflate.c	FUNCTION_13
0x4002424	        0x488d1406	                    lea rdx, [rsi + rax]	      1052	deflate.c	FUNCTION_13
0x4002428	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1052	deflate.c	FUNCTION_13
0x400242c	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1052	deflate.c	FUNCTION_13
0x4002430	            0x8802	                      mov byte [rdx], al	      1052	deflate.c	FUNCTION_13
0x4002432	        0x488b45f8	                mov rax, qword [rbp - 8]	      1053	deflate.c	FUNCTION_13
0x4002436	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1053	deflate.c	FUNCTION_13
0x400243a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1053	deflate.c	FUNCTION_13
0x400243e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1053	deflate.c	FUNCTION_13
0x4002442	        0x488d4801	                      lea rcx, [rax + 1]	      1053	deflate.c	FUNCTION_13
0x4002446	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1053	deflate.c	FUNCTION_13
0x400244a	        0x48894a28	             mov qword [rdx + 0x28], rcx	      1053	deflate.c	FUNCTION_13
0x400244e	        0x488d1406	                    lea rdx, [rsi + rax]	      1053	deflate.c	FUNCTION_13
0x4002452	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1053	deflate.c	FUNCTION_13
0x4002456	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1053	deflate.c	FUNCTION_13
0x400245a	        0x48c1e808	                              shr rax, 8	      1053	deflate.c	FUNCTION_13
0x400245e	            0x8802	                      mov byte [rdx], al	      1053	deflate.c	FUNCTION_13
0x4002460	        0x488b45f8	                mov rax, qword [rbp - 8]	      1054	deflate.c	FUNCTION_13
0x4002464	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1054	deflate.c	FUNCTION_13
0x4002468	        0x488b45f8	                mov rax, qword [rbp - 8]	      1054	deflate.c	FUNCTION_13
0x400246c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1054	deflate.c	FUNCTION_13
0x4002470	        0x488d4801	                      lea rcx, [rax + 1]	      1054	deflate.c	FUNCTION_13
0x4002474	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1054	deflate.c	FUNCTION_13
0x4002478	        0x48894a28	             mov qword [rdx + 0x28], rcx	      1054	deflate.c	FUNCTION_13
0x400247c	        0x488d1406	                    lea rdx, [rsi + rax]	      1054	deflate.c	FUNCTION_13
0x4002480	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1054	deflate.c	FUNCTION_13
0x4002484	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1054	deflate.c	FUNCTION_13
0x4002488	        0x48c1e810	                           shr rax, 0x10	      1054	deflate.c	FUNCTION_13
0x400248c	            0x8802	                      mov byte [rdx], al	      1054	deflate.c	FUNCTION_13
0x400248e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1055	deflate.c	FUNCTION_13	IF_48
0x4002492	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1055	deflate.c	FUNCTION_13	IF_48
0x4002496	        0x488b45f8	                mov rax, qword [rbp - 8]	      1055	deflate.c	FUNCTION_13	IF_48
0x400249a	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1055	deflate.c	FUNCTION_13	IF_48
0x400249e	        0x488d4801	                      lea rcx, [rax + 1]	      1055	deflate.c	FUNCTION_13	IF_48
0x40024a2	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1055	deflate.c	FUNCTION_13	IF_48
0x40024a6	        0x48894a28	             mov qword [rdx + 0x28], rcx	      1055	deflate.c	FUNCTION_13	IF_48
0x40024aa	        0x488d1406	                    lea rdx, [rsi + rax]	      1055	deflate.c	FUNCTION_13	IF_48
0x40024ae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1055	deflate.c	FUNCTION_13	IF_48
0x40024b2	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1055	deflate.c	FUNCTION_13	IF_48
0x40024b6	        0x48c1e818	                           shr rax, 0x18	      1055	deflate.c	FUNCTION_13	IF_48
0x40024ba	            0x8802	                      mov byte [rdx], al	      1055	deflate.c	FUNCTION_13	IF_48
0x40024bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x40024c0	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x40024c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x40024c8	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x40024cc	        0x488d4801	                      lea rcx, [rax + 1]	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x40024d0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x40024d4	        0x48894a28	             mov qword [rdx + 0x28], rcx	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x40024d8	        0x488d1406	                    lea rdx, [rsi + rax]	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x40024dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x40024e0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x40024e4	            0x8802	                      mov byte [rdx], al	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x40024e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x40024ea	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x40024ee	        0x488b45f8	                mov rax, qword [rbp - 8]	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x40024f2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x40024f6	        0x488d4801	                      lea rcx, [rax + 1]	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x40024fa	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x40024fe	        0x48894a28	             mov qword [rdx + 0x28], rcx	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002502	        0x488d1406	                    lea rdx, [rsi + rax]	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002506	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x400250a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x400250e	        0x48c1e808	                              shr rax, 8	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002512	            0x8802	                      mov byte [rdx], al	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002514	        0x488b45f8	                mov rax, qword [rbp - 8]	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002518	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x400251c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002520	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002524	        0x488d4801	                      lea rcx, [rax + 1]	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002528	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x400252c	        0x48894a28	             mov qword [rdx + 0x28], rcx	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002530	        0x488d1406	                    lea rdx, [rsi + rax]	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002534	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002538	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x400253c	        0x48c1e810	                           shr rax, 0x10	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002540	            0x8802	                      mov byte [rdx], al	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002542	        0x488b45f8	                mov rax, qword [rbp - 8]	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002546	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x400254a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x400254e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002552	        0x488d4801	                      lea rcx, [rax + 1]	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002556	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x400255a	        0x48894a28	             mov qword [rdx + 0x28], rcx	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x400255e	        0x488d1406	                    lea rdx, [rsi + rax]	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002562	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002566	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x400256a	        0x48c1e818	                           shr rax, 0x18	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x400256e	            0x8802	                      mov byte [rdx], al	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002570	            0xeb35	                           jmp 0x40025a7	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002572	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1064	deflate.c	FUNCTION_13	IF_48
0x4002576	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1064	deflate.c	FUNCTION_13	IF_48
0x400257a	        0x48c1e810	                           shr rax, 0x10	      1064	deflate.c	FUNCTION_13	IF_48
0x400257e	            0x89c2	                            mov edx, eax	      1064	deflate.c	FUNCTION_13	IF_48
0x4002580	        0x488b45f8	                mov rax, qword [rbp - 8]	      1064	deflate.c	FUNCTION_13	IF_48
0x4002584	            0x89d6	                            mov esi, edx	      1064	deflate.c	FUNCTION_13	IF_48
0x4002586	          0x4889c7	                            mov rdi, rax	      1064	deflate.c	FUNCTION_13	IF_48
0x4002589	      0xe865ecffff	                    call sym.putShortMSB	      1064	deflate.c	FUNCTION_13	IF_48
0x400258e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1065	deflate.c	FUNCTION_13	ELSE_7
0x4002592	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1065	deflate.c	FUNCTION_13	ELSE_7
0x4002596	           0xfb7d0	                           movzx edx, ax	      1065	deflate.c	FUNCTION_13	ELSE_7
0x4002599	        0x488b45f8	                mov rax, qword [rbp - 8]	      1065	deflate.c	FUNCTION_13	ELSE_7
0x400259d	            0x89d6	                            mov esi, edx	      1065	deflate.c	FUNCTION_13	ELSE_7
0x400259f	          0x4889c7	                            mov rdi, rax	      1065	deflate.c	FUNCTION_13	ELSE_7
0x40025a2	      0xe84cecffff	                    call sym.putShortMSB	      1065	deflate.c	FUNCTION_13	ELSE_7
0x40025a7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1067	deflate.c	FUNCTION_13	ELSE_7
0x40025ab	          0x4889c7	                            mov rdi, rax	      1067	deflate.c	FUNCTION_13	ELSE_7
0x40025ae	      0xe899ecffff	                  call sym.flush_pending	      1067	deflate.c	FUNCTION_13	ELSE_7
0x40025b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1071	deflate.c	FUNCTION_13	CALL_62
0x40025b7	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1071	deflate.c	FUNCTION_13	CALL_62
0x40025ba	            0x85c0	                           test eax, eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x40025bc	            0x7e12	                           jle 0x40025d0	      1071	deflate.c	FUNCTION_13	CALL_62
0x40025be	        0x488b45f8	                mov rax, qword [rbp - 8]	      1071	deflate.c	FUNCTION_13	CALL_62
0x40025c2	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1071	deflate.c	FUNCTION_13	CALL_62
0x40025c5	            0xf7d8	                                 neg eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x40025c7	            0x89c2	                            mov edx, eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x40025c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1071	deflate.c	FUNCTION_13	CALL_62
0x40025cd	          0x895030	             mov dword [rax + 0x30], edx	      1071	deflate.c	FUNCTION_13	CALL_62
0x40025d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1072	deflate.c	FUNCTION_13
0x40025d4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1072	deflate.c	FUNCTION_13
0x40025d8	          0x4885c0	                           test rax, rax	      1072	deflate.c	FUNCTION_13
0x40025db	           0xf94c0	                                 sete al	      1072	deflate.c	FUNCTION_13
0x40025de	           0xfb6c0	                           movzx eax, al	      1072	deflate.c	FUNCTION_13
0x40025e1	              0xc9	                                   leave	      1073	deflate.c	FUNCTION_13
0x40025e2	              0xc3	                                     ret	      1073	deflate.c	FUNCTION_13
deflateReset	ELSE,0:DO,0:FOR,0:functions,0:SWITCH,0:CALL,2:IF,1:WHILE,0	17
0x4000b88	              0x55	                                push rbp	       507	deflate.c	
0x4000b89	          0x4889e5	                            mov rbp, rsp	       507	deflate.c	
0x4000b8c	        0x4883ec20	                           sub rsp, 0x20	       507	deflate.c	
0x4000b90	        0x48897de8	             mov qword [rbp - 0x18], rdi	       507	deflate.c	
0x4000b94	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       510	deflate.c	
0x4000b98	          0x4889c7	                            mov rdi, rax	       510	deflate.c	
0x4000b9b	      0xe800000000	                          call 0x4000ba0	       510	deflate.c	
0x4000ba0	          0x8945fc	                mov dword [rbp - 4], eax	       510	deflate.c	
0x4000ba3	        0x837dfc00	                  cmp dword [rbp - 4], 0	       511	deflate.c	FUNCTION_5
0x4000ba7	            0x7510	                           jne 0x4000bb9	       511	deflate.c	FUNCTION_5
0x4000ba9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       512	deflate.c	FUNCTION_5
0x4000bad	        0x488b4038	            mov rax, qword [rax + 0x38] 	       512	deflate.c	FUNCTION_5
0x4000bb1	          0x4889c7	                            mov rdi, rax	       512	deflate.c	FUNCTION_5
0x4000bb4	      0xe8941f0000	                        call sym.lm_init	       512	deflate.c	FUNCTION_5
0x4000bb9	          0x8b45fc	                mov eax, dword [rbp - 4]	       513	deflate.c	FUNCTION_5
0x4000bbc	              0xc9	                                   leave	       514	deflate.c	FUNCTION_5	CALL_1
0x4000bbd	              0xc3	                                     ret	       514	deflate.c	FUNCTION_5	CALL_1
deflateSetHeader	ELSE,0:DO,0:FOR,0:functions,0:SWITCH,0:CALL,1:IF,1:WHILE,0	24
0x4000bbe	              0x55	                                push rbp	       520	deflate.c	
0x4000bbf	          0x4889e5	                            mov rbp, rsp	       520	deflate.c	
0x4000bc2	        0x4883ec10	                           sub rsp, 0x10	       520	deflate.c	
0x4000bc6	        0x48897df8	                mov qword [rbp - 8], rdi	       520	deflate.c	
0x4000bca	        0x488975f0	             mov qword [rbp - 0x10], rsi	       520	deflate.c	
0x4000bce	        0x488b45f8	                mov rax, qword [rbp - 8]	       521	deflate.c	
0x4000bd2	          0x4889c7	                            mov rdi, rax	       521	deflate.c	
0x4000bd5	      0xe899f9ffff	              call sym.deflateStateCheck	       521	deflate.c	
0x4000bda	            0x85c0	                           test eax, eax	       521	deflate.c	
0x4000bdc	            0x7510	                           jne 0x4000bee	       521	deflate.c	
0x4000bde	        0x488b45f8	                mov rax, qword [rbp - 8]	       521	deflate.c	
0x4000be2	        0x488b4038	            mov rax, qword [rax + 0x38] 	       521	deflate.c	
0x4000be6	          0x8b4030	            mov eax, dword [rax + 0x30] 	       521	deflate.c	
0x4000be9	          0x83f802	                              cmp eax, 2	       521	deflate.c	
0x4000bec	            0x7407	                            je 0x4000bf5	       521	deflate.c	
0x4000bee	      0xb8feffffff	                     mov eax, 0xfffffffe	       522	deflate.c	
0x4000bf3	            0xeb15	                           jmp 0x4000c0a	       522	deflate.c	
0x4000bf5	        0x488b45f8	                mov rax, qword [rbp - 8]	       523	deflate.c	
0x4000bf9	        0x488b4038	            mov rax, qword [rax + 0x38] 	       523	deflate.c	
0x4000bfd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       523	deflate.c	
0x4000c01	        0x48895038	             mov qword [rax + 0x38], rdx	       523	deflate.c	
0x4000c05	      0xb800000000	                              mov eax, 0	       524	deflate.c	FUNCTION_6
0x4000c0a	              0xc9	                                   leave	       525	deflate.c	FUNCTION_6	IF_1	CALL_1
0x4000c0b	              0xc3	                                     ret	       525	deflate.c	FUNCTION_6	IF_1	CALL_1
deflate_fast	ELSE,2:DO,1:FOR,1:functions,0:SWITCH,0:CALL,6:IF,10:WHILE,0	528
0x4003c66	              0x55	                                push rbp	      1827	deflate.c	
0x4003c67	          0x4889e5	                            mov rbp, rsp	      1827	deflate.c	
0x4003c6a	        0x4883ec20	                           sub rsp, 0x20	      1827	deflate.c	
0x4003c6e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1827	deflate.c	
0x4003c72	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1827	deflate.c	
0x4003c75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1837	deflate.c	FUNCTION_21	FOR_1
0x4003c79	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1837	deflate.c	FUNCTION_21	FOR_1
0x4003c7f	      0x3d05010000	                          cmp eax, 0x105	      1837	deflate.c	FUNCTION_21	FOR_1
0x4003c84	            0x773f	                            ja 0x4003cc5	      1837	deflate.c	FUNCTION_21	FOR_1
0x4003c86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1838	deflate.c	FUNCTION_21	FOR_1
0x4003c8a	          0x4889c7	                            mov rdi, rax	      1838	deflate.c	FUNCTION_21	FOR_1
0x4003c8d	      0xe828f3ffff	                    call sym.fill_window	      1838	deflate.c	FUNCTION_21	FOR_1
0x4003c92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1839	deflate.c	FUNCTION_21	FOR_1
0x4003c96	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1839	deflate.c	FUNCTION_21	FOR_1
0x4003c9c	      0x3d05010000	                          cmp eax, 0x105	      1839	deflate.c	FUNCTION_21	FOR_1
0x4003ca1	            0x7710	                            ja 0x4003cb3	      1839	deflate.c	FUNCTION_21	FOR_1
0x4003ca3	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1839	deflate.c	FUNCTION_21	FOR_1
0x4003ca7	            0x750a	                           jne 0x4003cb3	      1839	deflate.c	FUNCTION_21	FOR_1
0x4003ca9	      0xb800000000	                              mov eax, 0	      1840	deflate.c	FUNCTION_21	FOR_1
0x4003cae	      0xe9df070000	                           jmp 0x4004492	      1840	deflate.c	FUNCTION_21	FOR_1
0x4003cb3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1842	deflate.c	FUNCTION_21	FOR_1	IF_1	CALL_1
0x4003cb7	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1842	deflate.c	FUNCTION_21	FOR_1	IF_1	CALL_1
0x4003cbd	            0x85c0	                           test eax, eax	      1842	deflate.c	FUNCTION_21	FOR_1	IF_1	CALL_1
0x4003cbf	     0xf8441060000	                            je 0x4004306	      1842	deflate.c	FUNCTION_21	FOR_1	IF_1	CALL_1
0x4003cc5	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1848	deflate.c	FUNCTION_21	FOR_1
0x4003ccc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1849	deflate.c	FUNCTION_21	FOR_1
0x4003cd0	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1849	deflate.c	FUNCTION_21	FOR_1
0x4003cd6	          0x83f802	                              cmp eax, 2	      1849	deflate.c	FUNCTION_21	FOR_1
0x4003cd9	     0xf86c7000000	                           jbe 0x4003da6	      1849	deflate.c	FUNCTION_21	FOR_1
0x4003cdf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003ce3	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003ce9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003ced	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003cf3	            0x89c1	                            mov ecx, eax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003cf5	            0xd3e2	                             shl edx, cl	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003cf7	            0x89d1	                            mov ecx, edx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003cf9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003cfd	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d05	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d0b	          0x83c002	                              add eax, 2	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d0e	            0x89c0	                            mov eax, eax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d10	          0x4801d0	                            add rax, rdx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d13	           0xfb600	                   movzx eax, byte [rax]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d16	           0xfb6c0	                           movzx eax, al	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d19	            0x31c1	                            xor ecx, eax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d1b	            0x89ca	                            mov edx, ecx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d21	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d27	            0x21c2	                            and edx, eax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d2d	    0x899080000000	             mov dword [rax + 0x80], edx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d37	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d3f	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d45	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d49	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d4c	            0x21c8	                            and eax, ecx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d4e	            0x89c0	                            mov eax, eax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d50	          0x4801c0	                            add rax, rax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d53	          0x4801d0	                            add rax, rdx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d56	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d5a	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d5e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d62	    0x8b9280000000	            mov edx, dword [rdx + 0x80] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d68	            0x89d2	                            mov edx, edx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d6a	          0x4801d2	                            add rdx, rdx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d6d	          0x4801ca	                            add rdx, rcx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d70	           0xfb712	                   movzx edx, word [rdx]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d73	          0x668910	                      mov word [rax], dx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d76	           0xfb700	                   movzx eax, word [rax]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d79	           0xfb7c0	                           movzx eax, ax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d7c	          0x8945f8	                mov dword [rbp - 8], eax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d83	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d8b	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d91	            0x89c0	                            mov eax, eax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d93	          0x4801c0	                            add rax, rax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d96	          0x4801c2	                            add rdx, rax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003d9d	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003da3	          0x668902	                      mov word [rdx], ax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4003da6	        0x837df800	                  cmp dword [rbp - 8], 0	      1856	deflate.c	FUNCTION_21	FOR_1
0x4003daa	            0x743c	                            je 0x4003de8	      1856	deflate.c	FUNCTION_21	FOR_1
0x4003dac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1856	deflate.c	FUNCTION_21	FOR_1
0x4003db0	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1856	deflate.c	FUNCTION_21	FOR_1
0x4003db6	          0x2b45f8	                sub eax, dword [rbp - 8]	      1856	deflate.c	FUNCTION_21	FOR_1
0x4003db9	            0x89c2	                            mov edx, eax	      1856	deflate.c	FUNCTION_21	FOR_1
0x4003dbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1856	deflate.c	FUNCTION_21	FOR_1
0x4003dbf	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1856	deflate.c	FUNCTION_21	FOR_1
0x4003dc2	      0x2d06010000	                          sub eax, 0x106	      1856	deflate.c	FUNCTION_21	FOR_1
0x4003dc7	            0x39c2	                            cmp edx, eax	      1856	deflate.c	FUNCTION_21	FOR_1
0x4003dc9	            0x771d	                            ja 0x4003de8	      1856	deflate.c	FUNCTION_21	FOR_1
0x4003dcb	          0x8b55f8	                mov edx, dword [rbp - 8]	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003dce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003dd2	            0x89d6	                            mov esi, edx	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003dd4	          0x4889c7	                            mov rdi, rax	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003dd7	      0xe8eeeeffff	                  call sym.longest_match	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ddc	            0x89c2	                            mov edx, eax	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003dde	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003de2	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003de8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1864	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003dec	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1864	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003df2	          0x83f802	                              cmp eax, 2	      1864	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003df5	     0xf8678030000	                           jbe 0x4004173	      1864	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003dfb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003dff	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e05	          0x83e803	                              sub eax, 3	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e08	          0x8845f4	                mov byte [rbp - 0xc], al	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e0f	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e15	            0x89c2	                            mov edx, eax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e1b	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e21	            0x29c2	                            sub edx, eax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e23	            0x89d0	                            mov eax, edx	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e25	        0x668945f6	                mov word [rbp - 0xa], ax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e2d	    0x488b90101700	          mov rdx, qword [rax + 0x1710] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e34	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e38	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e3e	            0x89c0	                            mov eax, eax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e40	          0x4801c0	                            add rax, rax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e43	          0x4801c2	                            add rdx, rax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e46	         0xfb745f6	             movzx eax, word [rbp - 0xa]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e4a	          0x668902	                      mov word [rdx], ax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e51	    0x488bb0001700	          mov rsi, qword [rax + 0x1700] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e5c	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e62	          0x8d4801	                      lea ecx, [rax + 1]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e65	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e69	    0x898a0c170000	          mov dword [rdx + 0x170c], ecx 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e6f	            0x89c0	                            mov eax, eax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e71	        0x488d1406	                    lea rdx, [rsi + rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e75	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e79	            0x8802	                      mov byte [rdx], al	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e7b	         0xfb745f6	             movzx eax, word [rbp - 0xa]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e7f	          0x83e801	                              sub eax, 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e82	        0x668945f6	                mov word [rbp - 0xa], ax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e86	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e8a	            0x4898	                                    cdqe	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e8c	     0xfb680000000	                   movzx eax, byte [rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e93	           0xfb6c0	                           movzx eax, al	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e96	       0x501010000	                          add eax, 0x101	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e9b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003e9f	          0x4863c8	                         movsxd rcx, eax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ea2	        0x4883c134	                           add rcx, 0x34	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ea6	       0xfb7548a04	      movzx edx, word [rdx + rcx*4 + 4] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003eab	          0x8d4a01	                      lea ecx, [rdx + 1]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003eae	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003eb2	            0x4898	                                    cdqe	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003eb4	        0x4883c034	                           add rax, 0x34	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003eb8	      0x66894c8204	          mov word [rdx + rax*4 + 4], cx	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ebd	    0x66817df6ff00	              cmp word [rbp - 0xa], 0xff	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ec3	            0x7712	                            ja 0x4003ed7	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ec5	         0xfb745f6	             movzx eax, word [rbp - 0xa]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ec9	            0x4898	                                    cdqe	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ecb	     0xfb680000000	                   movzx eax, byte [rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ed2	           0xfb6c0	                           movzx eax, al	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ed5	            0xeb1c	                           jmp 0x4003ef3	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ed7	         0xfb745f6	             movzx eax, word [rbp - 0xa]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003edb	        0x66c1e807	                               shr ax, 7	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003edf	           0xfb7c0	                           movzx eax, ax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ee2	       0x500010000	                          add eax, 0x100	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ee7	            0x4898	                                    cdqe	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ee9	     0xfb680000000	                   movzx eax, byte [rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ef0	           0xfb6c0	                           movzx eax, al	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ef3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003ef7	          0x4863c8	                         movsxd rcx, eax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003efa	    0x4881c1700200	                          add rcx, 0x270	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f01	       0xfb7548a08	      movzx edx, word [rdx + rcx*4 + 8] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f06	          0x8d4a01	                      lea ecx, [rdx + 1]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f09	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f0d	            0x4898	                                    cdqe	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f0f	    0x480570020000	                          add rax, 0x270	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f15	      0x66894c8208	          mov word [rdx + rax*4 + 8], cx	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f1a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f1e	    0x8b900c170000	          mov edx, dword [rax + 0x170c] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f28	    0x8b8008170000	          mov eax, dword [rax + 0x1708] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f2e	          0x83e801	                              sub eax, 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f31	            0x39c2	                            cmp edx, eax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f33	           0xf94c0	                                 sete al	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f36	           0xfb6c0	                           movzx eax, al	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f39	          0x8945fc	                mov dword [rbp - 4], eax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4003f3c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f40	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f4a	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f50	            0x29c2	                            sub edx, eax	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f56	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f60	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f6a	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f70	            0x39c2	                            cmp edx, eax	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f72	     0xf874d010000	                            ja 0x40040c5	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f78	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1877	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f7c	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1877	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f82	          0x83f802	                              cmp eax, 2	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f85	     0xf863a010000	                           jbe 0x40040c5	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f8f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f95	          0x8d50ff	                      lea edx, [rax - 1]	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003f9c	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4003fa2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1880	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fa6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1880	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fac	          0x8d5001	                      lea edx, [rax + 1]	      1880	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003faf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1880	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fb3	    0x8990ac000000	             mov dword [rax + 0xac], edx	      1880	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fb9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fbd	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fc7	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fcd	            0x89c1	                            mov ecx, eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fcf	            0xd3e2	                             shl edx, cl	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fd1	            0x89d1	                            mov ecx, edx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fd3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fd7	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fdb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fdf	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fe5	          0x83c002	                              add eax, 2	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fe8	            0x89c0	                            mov eax, eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fea	          0x4801d0	                            add rax, rdx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003fed	           0xfb600	                   movzx eax, byte [rax]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003ff0	           0xfb6c0	                           movzx eax, al	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003ff3	            0x31c1	                            xor ecx, eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003ff5	            0x89ca	                            mov edx, ecx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003ff7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4003ffb	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004001	            0x21c2	                            and edx, eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004003	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004007	    0x899080000000	             mov dword [rax + 0x80], edx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400400d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004011	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004015	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004019	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400401f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004023	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004026	            0x21c8	                            and eax, ecx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004028	            0x89c0	                            mov eax, eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400402a	          0x4801c0	                            add rax, rax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400402d	          0x4801d0	                            add rax, rdx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004030	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004034	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004038	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400403c	    0x8b9280000000	            mov edx, dword [rdx + 0x80] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004042	            0x89d2	                            mov edx, edx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004044	          0x4801d2	                            add rdx, rdx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004047	          0x4801ca	                            add rdx, rcx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400404a	           0xfb712	                   movzx edx, word [rdx]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400404d	          0x668910	                      mov word [rax], dx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004050	           0xfb700	                   movzx eax, word [rax]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004053	           0xfb7c0	                           movzx eax, ax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004056	          0x8945f8	                mov dword [rbp - 8], eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004059	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400405d	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004061	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004065	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400406b	            0x89c0	                            mov eax, eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400406d	          0x4801c0	                            add rax, rax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004070	          0x4801c2	                            add rdx, rax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004073	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004077	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400407d	          0x668902	                      mov word [rdx], ax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4004080	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4004084	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x400408a	          0x8d50ff	                      lea edx, [rax - 1]	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x400408d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4004091	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4004097	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x400409b	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x40040a1	            0x85c0	                           test eax, eax	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x40040a3	     0xf85f9feffff	                           jne 0x4003fa2	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x40040a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x40040ad	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x40040b3	          0x8d5001	                      lea edx, [rax + 1]	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x40040b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x40040ba	    0x8990ac000000	             mov dword [rax + 0xac], edx	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x40040c0	      0xe991010000	                           jmp 0x4004256	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x40040c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40040c9	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40040cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40040d3	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40040d9	             0x1c2	                            add edx, eax	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40040db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40040df	    0x8990ac000000	             mov dword [rax + 0xac], edx	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40040e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1891	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40040e9	    0xc780a0000000	               mov dword [rax + 0xa0], 0	      1891	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40040f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40040f7	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40040fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40040ff	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004105	            0x89c0	                            mov eax, eax	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004107	          0x4801d0	                            add rax, rdx	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400410a	           0xfb600	                   movzx eax, byte [rax]	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400410d	           0xfb6d0	                           movzx edx, al	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004110	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004114	    0x899080000000	             mov dword [rax + 0x80], edx	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400411a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400411e	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004124	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004128	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400412e	            0x89c1	                            mov ecx, eax	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004130	            0xd3e2	                             shl edx, cl	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004132	            0x89d1	                            mov ecx, edx	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004134	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004138	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400413c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004140	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004146	          0x83c001	                              add eax, 1	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004149	            0x89c0	                            mov eax, eax	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400414b	          0x4801d0	                            add rax, rdx	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400414e	           0xfb600	                   movzx eax, byte [rax]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004151	           0xfb6c0	                           movzx eax, al	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004154	            0x31c1	                            xor ecx, eax	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004156	            0x89ca	                            mov edx, ecx	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004158	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400415c	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004162	            0x21c2	                            and edx, eax	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004164	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004168	    0x899080000000	             mov dword [rax + 0x80], edx	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400416e	      0xe9e3000000	                           jmp 0x4004256	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004173	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004177	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400417b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400417f	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004185	            0x89c0	                            mov eax, eax	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004187	          0x4801d0	                            add rax, rdx	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400418a	           0xfb600	                   movzx eax, byte [rax]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400418d	          0x8845f5	                mov byte [rbp - 0xb], al	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004190	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004194	    0x488b90101700	          mov rdx, qword [rax + 0x1710] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400419b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400419f	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041a5	            0x89c0	                            mov eax, eax	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041a7	          0x4801c0	                            add rax, rax	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041aa	          0x4801d0	                            add rax, rdx	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041ad	      0x66c7000000	                       mov word [rax], 0	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041b6	    0x488bb0001700	          mov rsi, qword [rax + 0x1700] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041c1	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041c7	          0x8d4801	                      lea ecx, [rax + 1]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041ca	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041ce	    0x898a0c170000	          mov dword [rdx + 0x170c], ecx 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041d4	            0x89c0	                            mov eax, eax	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041d6	        0x488d1406	                    lea rdx, [rsi + rax]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041da	         0xfb645f5	             movzx eax, byte [rbp - 0xb]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041de	            0x8802	                      mov byte [rdx], al	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041e0	         0xfb645f5	             movzx eax, byte [rbp - 0xb]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041e4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041e8	          0x4863c8	                         movsxd rcx, eax	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041eb	        0x4883c134	                           add rcx, 0x34	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041ef	       0xfb7548a04	      movzx edx, word [rdx + rcx*4 + 4] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041f4	          0x8d4a01	                      lea ecx, [rdx + 1]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041f7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041fb	            0x4898	                                    cdqe	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40041fd	        0x4883c034	                           add rax, 0x34	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004201	      0x66894c8204	          mov word [rdx + rax*4 + 4], cx	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004206	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400420a	    0x8b900c170000	          mov edx, dword [rax + 0x170c] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004210	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004214	    0x8b8008170000	          mov eax, dword [rax + 0x1708] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400421a	          0x83e801	                              sub eax, 1	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400421d	            0x39c2	                            cmp edx, eax	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400421f	           0xf94c0	                                 sete al	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004222	           0xfb6c0	                           movzx eax, al	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004225	          0x8945fc	                mov dword [rbp - 4], eax	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4004228	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1905	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400422c	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1905	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004232	          0x8d50ff	                      lea edx, [rax - 1]	      1905	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004235	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1905	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004239	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1905	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400423f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004243	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004249	          0x8d5001	                      lea edx, [rax + 1]	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400424c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004250	    0x8990ac000000	             mov dword [rax + 0xac], edx	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004256	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400425a	     0xf8415faffff	                            je 0x4003c75	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4004260	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4004264	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400426a	            0x89c2	                            mov edx, eax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400426c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4004270	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4004277	          0x4829c2	                            sub rdx, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400427a	          0x4889d0	                            mov rax, rdx	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400427d	          0x4889c7	                            mov rdi, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4004280	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4004284	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400428b	          0x4885c0	                           test rax, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400428e	            0x781b	                            js 0x40042ab	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4004290	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4004294	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4004298	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400429c	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042a3	            0x89c0	                            mov eax, eax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042a5	        0x488d3402	                    lea rsi, [rdx + rax]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042a9	            0xeb05	                           jmp 0x40042b0	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042ab	      0xbe00000000	                              mov esi, 0	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042b4	      0xb900000000	                              mov ecx, 0	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042b9	          0x4889fa	                            mov rdx, rdi	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042bc	          0x4889c7	                            mov rdi, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042bf	      0xe800000000	                          call 0x40042c4	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042c8	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042ce	            0x89c2	                            mov edx, eax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042d4	    0x488990980000	             mov qword [rax + 0x98], rdx	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042df	          0x488b00	                    mov rax, qword [rax]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042e2	          0x4889c7	                            mov rdi, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042e5	      0xe862cfffff	                  call sym.flush_pending	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042ee	          0x488b00	                    mov rax, qword [rax]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042f1	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042f4	            0x85c0	                           test eax, eax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042f6	     0xf8579f9ffff	                           jne 0x4003c75	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40042fc	      0xb800000000	                              mov eax, 0	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4004301	      0xe98c010000	                           jmp 0x4004492	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4004306	              0x90	                                     nop	      1842	deflate.c	FUNCTION_21	FOR_1	IF_1	CALL_1
0x4004307	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400430b	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004311	      0xba02000000	                              mov edx, 2	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004316	          0x83f802	                              cmp eax, 2	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004319	           0xf46d0	                         cmovbe edx, eax	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400431c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004320	    0x89902c170000	          mov dword [rax + 0x172c], edx 	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004326	        0x837de404	               cmp dword [rbp - 0x1c], 4	      1911	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400432a	     0xf85ac000000	                           jne 0x40043dc	      1911	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4004330	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004334	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x400433a	            0x89c2	                            mov edx, eax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x400433c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004340	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004347	          0x4829c2	                            sub rdx, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x400434a	          0x4889d0	                            mov rax, rdx	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x400434d	          0x4889c7	                            mov rdi, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004350	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004354	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x400435b	          0x4885c0	                           test rax, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x400435e	            0x781b	                            js 0x400437b	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004360	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004364	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004368	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x400436c	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004373	            0x89c0	                            mov eax, eax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004375	        0x488d3402	                    lea rsi, [rdx + rax]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004379	            0xeb05	                           jmp 0x4004380	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x400437b	      0xbe00000000	                              mov esi, 0	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004380	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004384	      0xb901000000	                              mov ecx, 1	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004389	          0x4889fa	                            mov rdx, rdi	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x400438c	          0x4889c7	                            mov rdi, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x400438f	      0xe800000000	                          call 0x4004394	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004394	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4004398	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x400439e	            0x89c2	                            mov edx, eax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043a4	    0x488990980000	             mov qword [rax + 0x98], rdx	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043af	          0x488b00	                    mov rax, qword [rax]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043b2	          0x4889c7	                            mov rdi, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043b5	      0xe892ceffff	                  call sym.flush_pending	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043be	          0x488b00	                    mov rax, qword [rax]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043c1	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043c4	            0x85c0	                           test eax, eax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043c6	            0x750a	                           jne 0x40043d2	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043c8	      0xb802000000	                              mov eax, 2	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043cd	      0xe9c0000000	                           jmp 0x4004492	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40043d2	      0xb803000000	                              mov eax, 3	      1913	deflate.c	FUNCTION_21	FOR_1
0x40043d7	      0xe9b6000000	                           jmp 0x4004492	      1913	deflate.c	FUNCTION_21	FOR_1
0x40043dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1915	deflate.c	FUNCTION_21	IF_9
0x40043e0	    0x8b800c170000	          mov eax, dword [rax + 0x170c] 	      1915	deflate.c	FUNCTION_21	IF_9
0x40043e6	            0x85c0	                           test eax, eax	      1915	deflate.c	FUNCTION_21	IF_9
0x40043e8	     0xf849f000000	                            je 0x400448d	      1915	deflate.c	FUNCTION_21	IF_9
0x40043ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1916	deflate.c	FUNCTION_21	IF_9
0x40043f2	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1916	deflate.c	FUNCTION_21	IF_9
0x40043f8	            0x89c2	                            mov edx, eax	      1916	deflate.c	FUNCTION_21	IF_9
0x40043fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1916	deflate.c	FUNCTION_21	IF_9
0x40043fe	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1916	deflate.c	FUNCTION_21	IF_9
0x4004405	          0x4829c2	                            sub rdx, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4004408	          0x4889d0	                            mov rax, rdx	      1916	deflate.c	FUNCTION_21	IF_9
0x400440b	          0x4889c7	                            mov rdi, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x400440e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1916	deflate.c	FUNCTION_21	IF_9
0x4004412	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1916	deflate.c	FUNCTION_21	IF_9
0x4004419	          0x4885c0	                           test rax, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x400441c	            0x781b	                            js 0x4004439	      1916	deflate.c	FUNCTION_21	IF_9
0x400441e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1916	deflate.c	FUNCTION_21	IF_9
0x4004422	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1916	deflate.c	FUNCTION_21	IF_9
0x4004426	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1916	deflate.c	FUNCTION_21	IF_9
0x400442a	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1916	deflate.c	FUNCTION_21	IF_9
0x4004431	            0x89c0	                            mov eax, eax	      1916	deflate.c	FUNCTION_21	IF_9
0x4004433	        0x488d3402	                    lea rsi, [rdx + rax]	      1916	deflate.c	FUNCTION_21	IF_9
0x4004437	            0xeb05	                           jmp 0x400443e	      1916	deflate.c	FUNCTION_21	IF_9
0x4004439	      0xbe00000000	                              mov esi, 0	      1916	deflate.c	FUNCTION_21	IF_9
0x400443e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1916	deflate.c	FUNCTION_21	IF_9
0x4004442	      0xb900000000	                              mov ecx, 0	      1916	deflate.c	FUNCTION_21	IF_9
0x4004447	          0x4889fa	                            mov rdx, rdi	      1916	deflate.c	FUNCTION_21	IF_9
0x400444a	          0x4889c7	                            mov rdi, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x400444d	      0xe800000000	                          call 0x4004452	      1916	deflate.c	FUNCTION_21	IF_9
0x4004452	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1916	deflate.c	FUNCTION_21	IF_9
0x4004456	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1916	deflate.c	FUNCTION_21	IF_9
0x400445c	            0x89c2	                            mov edx, eax	      1916	deflate.c	FUNCTION_21	IF_9
0x400445e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1916	deflate.c	FUNCTION_21	IF_9
0x4004462	    0x488990980000	             mov qword [rax + 0x98], rdx	      1916	deflate.c	FUNCTION_21	IF_9
0x4004469	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1916	deflate.c	FUNCTION_21	IF_9
0x400446d	          0x488b00	                    mov rax, qword [rax]	      1916	deflate.c	FUNCTION_21	IF_9
0x4004470	          0x4889c7	                            mov rdi, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4004473	      0xe8d4cdffff	                  call sym.flush_pending	      1916	deflate.c	FUNCTION_21	IF_9
0x4004478	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1916	deflate.c	FUNCTION_21	IF_9
0x400447c	          0x488b00	                    mov rax, qword [rax]	      1916	deflate.c	FUNCTION_21	IF_9
0x400447f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1916	deflate.c	FUNCTION_21	IF_9
0x4004482	            0x85c0	                           test eax, eax	      1916	deflate.c	FUNCTION_21	IF_9
0x4004484	            0x7507	                           jne 0x400448d	      1916	deflate.c	FUNCTION_21	IF_9
0x4004486	      0xb800000000	                              mov eax, 0	      1916	deflate.c	FUNCTION_21	IF_9
0x400448b	            0xeb05	                           jmp 0x4004492	      1916	deflate.c	FUNCTION_21	IF_9
0x400448d	      0xb801000000	                              mov eax, 1	      1917	deflate.c	FUNCTION_21	IF_9
0x4004492	              0xc9	                                   leave	      1918	deflate.c	FUNCTION_21	IF_9
0x4004493	              0xc3	                                     ret	      1918	deflate.c	FUNCTION_21	IF_9
