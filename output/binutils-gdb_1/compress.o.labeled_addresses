bfd_compress_section	SWITCH,0:WHILE,0:CALL,2:FOR,0:IF,1:functions,0:DO,0:ELSE,0	46
0x4000d17	              0x55	                                push rbp	       592	compress.c	FUNCTION_9
0x4000d18	          0x4889e5	                            mov rbp, rsp	       592	compress.c	FUNCTION_9
0x4000d1b	        0x4883ec30	                           sub rsp, 0x30	       592	compress.c	FUNCTION_9
0x4000d1f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       592	compress.c	FUNCTION_9
0x4000d23	        0x488975e0	             mov qword [rbp - 0x20], rsi	       592	compress.c	FUNCTION_9
0x4000d27	        0x488955d8	             mov qword [rbp - 0x28], rdx	       592	compress.c	FUNCTION_9
0x4000d2b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       593	compress.c	FUNCTION_9
0x4000d2f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       593	compress.c	FUNCTION_9
0x4000d33	        0x488945f8	                mov qword [rbp - 8], rax	       593	compress.c	FUNCTION_9
0x4000d37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       596	compress.c	FUNCTION_9	IF_1
0x4000d3b	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       596	compress.c	FUNCTION_9	IF_1
0x4000d3f	          0x83e018	                           and eax, 0x18	       596	compress.c	FUNCTION_9	IF_1
0x4000d42	            0x3c10	                            cmp al, 0x10	       596	compress.c	FUNCTION_9	IF_1
0x4000d44	            0x753a	                           jne 0x4000d80	       596	compress.c	FUNCTION_9	IF_1
0x4000d46	      0x48837df800	                  cmp qword [rbp - 8], 0	       597	compress.c	FUNCTION_9	IF_1
0x4000d4b	            0x7433	                            je 0x4000d80	       597	compress.c	FUNCTION_9	IF_1
0x4000d4d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       598	compress.c	FUNCTION_9	IF_1
0x4000d52	            0x742c	                            je 0x4000d80	       598	compress.c	FUNCTION_9	IF_1
0x4000d54	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       599	compress.c	FUNCTION_9	IF_1
0x4000d58	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       599	compress.c	FUNCTION_9	IF_1
0x4000d5f	          0x4885c0	                           test rax, rax	       599	compress.c	FUNCTION_9	IF_1
0x4000d62	            0x751c	                           jne 0x4000d80	       599	compress.c	FUNCTION_9	IF_1
0x4000d64	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       600	compress.c	FUNCTION_9	IF_1
0x4000d68	        0x488b4048	            mov rax, qword [rax + 0x48] 	       600	compress.c	FUNCTION_9	IF_1
0x4000d6c	          0x4885c0	                           test rax, rax	       600	compress.c	FUNCTION_9	IF_1
0x4000d6f	            0x750f	                           jne 0x4000d80	       600	compress.c	FUNCTION_9	IF_1
0x4000d71	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       601	compress.c	FUNCTION_9	IF_1
0x4000d75	         0xfb64024	           movzx eax, byte [rax + 0x24] 	       601	compress.c	FUNCTION_9	IF_1
0x4000d79	          0x83e030	                           and eax, 0x30	       601	compress.c	FUNCTION_9	IF_1
0x4000d7c	            0x84c0	                             test al, al	       601	compress.c	FUNCTION_9	IF_1
0x4000d7e	            0x7411	                            je 0x4000d91	       601	compress.c	FUNCTION_9	IF_1
0x4000d80	      0xbf05000000	                              mov edi, 5	       603	compress.c	FUNCTION_9	IF_1	CALL_1
0x4000d85	      0xe800000000	                          call 0x4000d8a	       603	compress.c	FUNCTION_9	IF_1	CALL_1
0x4000d8a	      0xb800000000	                              mov eax, 0	       604	compress.c	FUNCTION_9	IF_1
0x4000d8f	            0xeb21	                           jmp 0x4000db2	       604	compress.c	FUNCTION_9	IF_1
0x4000d91	        0x488b4df8	                mov rcx, qword [rbp - 8]	       608	compress.c	FUNCTION_9	CALL_2
0x4000d95	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       608	compress.c	FUNCTION_9	CALL_2
0x4000d99	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       608	compress.c	FUNCTION_9	CALL_2
0x4000d9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       608	compress.c	FUNCTION_9	CALL_2
0x4000da1	          0x4889c7	                            mov rdi, rax	       608	compress.c	FUNCTION_9	CALL_2
0x4000da4	      0xe8d3f3ffff	  call sym.bfd_compress_section_contents	       608	compress.c	FUNCTION_9	CALL_2
0x4000da9	          0x4885c0	                           test rax, rax	       609	compress.c	FUNCTION_9
0x4000dac	           0xf95c0	                                setne al	       609	compress.c	FUNCTION_9
0x4000daf	           0xfb6c0	                           movzx eax, al	       608	compress.c	FUNCTION_9	CALL_2
0x4000db2	              0xc9	                                   leave	       610	compress.c	FUNCTION_9
0x4000db3	              0xc3	                                     ret	       610	compress.c	FUNCTION_9
bfd_init_section_decompress_status	SWITCH,0:WHILE,0:CALL,9:FOR,0:IF,5:functions,0:DO,0:ELSE,1	104
0x4000aac	              0x55	                                push rbp	       478	compress.c	FUNCTION_7
0x4000aad	          0x4889e5	                            mov rbp, rsp	       478	compress.c	FUNCTION_7
0x4000ab0	        0x4883ec40	                           sub rsp, 0x40	       478	compress.c	FUNCTION_7
0x4000ab4	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       478	compress.c	FUNCTION_7
0x4000ab8	        0x488975c0	             mov qword [rbp - 0x40], rsi	       478	compress.c	FUNCTION_7
0x4000abc	    0x64488b042528	                mov rax, qword fs:[0x28]	       478	compress.c	FUNCTION_7
0x4000ac5	        0x488945f8	                mov qword [rbp - 8], rax	       478	compress.c	FUNCTION_7
0x4000ac9	            0x31c0	                            xor eax, eax	       478	compress.c	FUNCTION_7
0x4000acb	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       484	compress.c	FUNCTION_7	CALL_1
0x4000acf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       484	compress.c	FUNCTION_7	CALL_1
0x4000ad3	          0x4889d6	                            mov rsi, rdx	       484	compress.c	FUNCTION_7	CALL_1
0x4000ad6	          0x4889c7	                            mov rdi, rax	       484	compress.c	FUNCTION_7	CALL_1
0x4000ad9	      0xe800000000	                          call 0x4000ade	       484	compress.c	FUNCTION_7	CALL_1
0x4000ade	          0x8945d0	             mov dword [rbp - 0x30], eax	       484	compress.c	FUNCTION_7	CALL_1
0x4000ae1	        0x837dd018	           cmp dword [rbp - 0x30], 0x18 	       485	compress.c	FUNCTION_7	IF_1
0x4000ae5	            0x7e14	                           jle 0x4000afb	       485	compress.c	FUNCTION_7	IF_1
0x4000ae7	      0xba00000000	                              mov edx, 0	       486	compress.c	FUNCTION_7	CALL_2
0x4000aec	      0xbee6010000	                          mov esi, 0x1e6	       486	compress.c	FUNCTION_7	CALL_2
0x4000af1	      0xbf00000000	                              mov edi, 0	       486	compress.c	FUNCTION_7	CALL_2
0x4000af6	      0xe800000000	                          call 0x4000afb	       486	compress.c	FUNCTION_7	CALL_2
0x4000afb	        0x837dd000	               cmp dword [rbp - 0x30], 0	       487	compress.c	FUNCTION_7
0x4000aff	            0x7405	                            je 0x4000b06	       487	compress.c	FUNCTION_7
0x4000b01	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       487	compress.c	FUNCTION_7
0x4000b04	            0xeb05	                           jmp 0x4000b0b	       487	compress.c	FUNCTION_7
0x4000b06	      0xb80c000000	                            mov eax, 0xc	       487	compress.c	FUNCTION_7
0x4000b0b	          0x8945d4	             mov dword [rbp - 0x2c], eax	       487	compress.c	FUNCTION_7
0x4000b0e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       490	compress.c	FUNCTION_7	IF_2
0x4000b12	        0x488b4040	            mov rax, qword [rax + 0x40] 	       490	compress.c	FUNCTION_7	IF_2
0x4000b16	          0x4885c0	                           test rax, rax	       490	compress.c	FUNCTION_7	IF_2
0x4000b19	            0x7545	                           jne 0x4000b60	       490	compress.c	FUNCTION_7	IF_2
0x4000b1b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       491	compress.c	FUNCTION_7	IF_2
0x4000b1f	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       491	compress.c	FUNCTION_7	IF_2
0x4000b26	          0x4885c0	                           test rax, rax	       491	compress.c	FUNCTION_7	IF_2
0x4000b29	            0x7535	                           jne 0x4000b60	       491	compress.c	FUNCTION_7	IF_2
0x4000b2b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       492	compress.c	FUNCTION_7	IF_2
0x4000b2f	         0xfb64024	           movzx eax, byte [rax + 0x24] 	       492	compress.c	FUNCTION_7	IF_2
0x4000b33	          0x83e030	                           and eax, 0x30	       492	compress.c	FUNCTION_7	IF_2
0x4000b36	            0x84c0	                             test al, al	       492	compress.c	FUNCTION_7	IF_2
0x4000b38	            0x7526	                           jne 0x4000b60	       492	compress.c	FUNCTION_7	IF_2
0x4000b3a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000b3d	          0x4863c8	                         movsxd rcx, eax	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000b40	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000b44	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000b48	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000b4c	          0x4989c8	                             mov r8, rcx	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000b4f	      0xb900000000	                              mov ecx, 0	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000b54	          0x4889c7	                            mov rdi, rax	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000b57	      0xe800000000	                          call 0x4000b5c	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000b5c	            0x85c0	                           test eax, eax	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000b5e	            0x7514	                           jne 0x4000b74	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000b60	      0xbf05000000	                              mov edi, 5	       495	compress.c	FUNCTION_7	IF_2	CALL_4
0x4000b65	      0xe800000000	                          call 0x4000b6a	       495	compress.c	FUNCTION_7	IF_2	CALL_4
0x4000b6a	      0xb800000000	                              mov eax, 0	       496	compress.c	FUNCTION_7	IF_2
0x4000b6f	      0xe9a6000000	                           jmp 0x4000c1a	       496	compress.c	FUNCTION_7	IF_2
0x4000b74	        0x837dd000	               cmp dword [rbp - 0x30], 0	       499	compress.c	FUNCTION_7	IF_3
0x4000b78	            0x7541	                           jne 0x4000bbb	       499	compress.c	FUNCTION_7	IF_3
0x4000b7a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000b7e	      0xba04000000	                              mov edx, 4	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000b83	      0xbe00000000	                              mov esi, 0	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000b88	          0x4889c7	                            mov rdi, rax	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000b8b	      0xe800000000	                          call 0x4000b90	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000b90	            0x85c0	                           test eax, eax	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000b92	            0x7411	                            je 0x4000ba5	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000b94	      0xbf03000000	                              mov edi, 3	       505	compress.c	FUNCTION_7	IF_3	IF_4	CALL_6
0x4000b99	      0xe800000000	                          call 0x4000b9e	       505	compress.c	FUNCTION_7	IF_3	IF_4	CALL_6
0x4000b9e	      0xb800000000	                              mov eax, 0	       506	compress.c	FUNCTION_7	IF_3	IF_4
0x4000ba3	            0xeb75	                           jmp 0x4000c1a	       506	compress.c	FUNCTION_7	IF_3	IF_4
0x4000ba5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000ba9	        0x4883c004	                              add rax, 4	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000bad	          0x4889c7	                            mov rdi, rax	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000bb0	      0xe800000000	                          call 0x4000bb5	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000bb5	        0x488945d8	             mov qword [rbp - 0x28], rax	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000bb9	            0xeb2d	                           jmp 0x4000be8	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000bbb	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000bbf	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000bc3	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000bc7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000bcb	          0x4889c7	                            mov rdi, rax	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000bce	      0xe800000000	                          call 0x4000bd3	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000bd3	            0x85c0	                           test eax, eax	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000bd5	            0x7511	                           jne 0x4000be8	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000bd7	      0xbf03000000	                              mov edi, 3	       513	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_9
0x4000bdc	      0xe800000000	                          call 0x4000be1	       513	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_9
0x4000be1	      0xb800000000	                              mov eax, 0	       514	compress.c	FUNCTION_7	ELSE_1	IF_5
0x4000be6	            0xeb32	                           jmp 0x4000c1a	       514	compress.c	FUNCTION_7	ELSE_1	IF_5
0x4000be8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       517	compress.c	FUNCTION_7
0x4000bec	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       517	compress.c	FUNCTION_7
0x4000bf0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       517	compress.c	FUNCTION_7
0x4000bf4	        0x48895048	             mov qword [rax + 0x48], rdx	       517	compress.c	FUNCTION_7
0x4000bf8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       518	compress.c	FUNCTION_7
0x4000bfc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       518	compress.c	FUNCTION_7
0x4000c00	        0x48895038	             mov qword [rax + 0x38], rdx	       518	compress.c	FUNCTION_7
0x4000c04	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       519	compress.c	FUNCTION_7
0x4000c08	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       519	compress.c	FUNCTION_7
0x4000c0c	          0x83e2cf	                     and edx, 0xffffffcf	       519	compress.c	FUNCTION_7
0x4000c0f	          0x83ca20	                            or edx, 0x20	       519	compress.c	FUNCTION_7
0x4000c12	          0x885024	               mov byte [rax + 0x24], dl	       519	compress.c	FUNCTION_7
0x4000c15	      0xb801000000	                              mov eax, 1	       521	compress.c	FUNCTION_7
0x4000c1a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       522	compress.c	FUNCTION_7
0x4000c1e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       522	compress.c	FUNCTION_7
0x4000c27	            0x7405	                            je 0x4000c2e	       522	compress.c	FUNCTION_7
0x4000c29	      0xe800000000	                          call 0x4000c2e	       522	compress.c	FUNCTION_7
0x4000c2e	              0xc9	                                   leave	       522	compress.c	FUNCTION_7
0x4000c2f	              0xc3	                                     ret	       522	compress.c	FUNCTION_7
bfd_is_section_compressed	SWITCH,0:WHILE,0:CALL,1:FOR,0:IF,0:functions,0:DO,0:ELSE,0	31
0x4000a3f	              0x55	                                push rbp	       449	compress.c	FUNCTION_6
0x4000a40	          0x4889e5	                            mov rbp, rsp	       449	compress.c	FUNCTION_6
0x4000a43	        0x4883ec30	                           sub rsp, 0x30	       449	compress.c	FUNCTION_6
0x4000a47	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       449	compress.c	FUNCTION_6
0x4000a4b	        0x488975d0	             mov qword [rbp - 0x30], rsi	       449	compress.c	FUNCTION_6
0x4000a4f	    0x64488b042528	                mov rax, qword fs:[0x28]	       449	compress.c	FUNCTION_6
0x4000a58	        0x488945f8	                mov qword [rbp - 8], rax	       449	compress.c	FUNCTION_6
0x4000a5c	            0x31c0	                            xor eax, eax	       449	compress.c	FUNCTION_6
0x4000a5e	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       452	compress.c	FUNCTION_6	CALL_1
0x4000a62	        0x488d55ec	                   lea rdx, [rbp - 0x14]	       452	compress.c	FUNCTION_6	CALL_1
0x4000a66	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       452	compress.c	FUNCTION_6	CALL_1
0x4000a6a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       452	compress.c	FUNCTION_6	CALL_1
0x4000a6e	          0x4889c7	                            mov rdi, rax	       452	compress.c	FUNCTION_6	CALL_1
0x4000a71	      0xe800000000	                          call 0x4000a76	       452	compress.c	FUNCTION_6	CALL_1
0x4000a76	            0x85c0	                           test eax, eax	       456	compress.c	FUNCTION_6
0x4000a78	            0x7417	                            je 0x4000a91	       456	compress.c	FUNCTION_6
0x4000a7a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       455	compress.c	FUNCTION_6
0x4000a7d	            0x85c0	                           test eax, eax	       455	compress.c	FUNCTION_6
0x4000a7f	            0x7810	                            js 0x4000a91	       455	compress.c	FUNCTION_6
0x4000a81	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       456	compress.c	FUNCTION_6
0x4000a85	          0x4885c0	                           test rax, rax	       456	compress.c	FUNCTION_6
0x4000a88	            0x7407	                            je 0x4000a91	       456	compress.c	FUNCTION_6
0x4000a8a	      0xb801000000	                              mov eax, 1	       456	compress.c	FUNCTION_6
0x4000a8f	            0xeb05	                           jmp 0x4000a96	       456	compress.c	FUNCTION_6
0x4000a91	      0xb800000000	                              mov eax, 0	       456	compress.c	FUNCTION_6
0x4000a96	        0x488b7df8	                mov rdi, qword [rbp - 8]	       457	compress.c	FUNCTION_6
0x4000a9a	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       457	compress.c	FUNCTION_6
0x4000aa3	            0x7405	                            je 0x4000aaa	       457	compress.c	FUNCTION_6
0x4000aa5	      0xe800000000	                          call 0x4000aaa	       457	compress.c	FUNCTION_6
0x4000aaa	              0xc9	                                   leave	       457	compress.c	FUNCTION_6
0x4000aab	              0xc3	                                     ret	       457	compress.c	FUNCTION_6
decompress_contents	SWITCH,0:WHILE,1:CALL,6:FOR,0:IF,2:functions,0:DO,0:ELSE,0	77
0x4000040	              0x55	                                push rbp	        34	compress.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        34	compress.c	FUNCTION_1
0x4000044	    0x4881ecb00000	                           sub rsp, 0xb0	        34	compress.c	FUNCTION_1
0x400004b	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	        34	compress.c	FUNCTION_1
0x4000052	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	        34	compress.c	FUNCTION_1
0x4000059	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	        34	compress.c	FUNCTION_1
0x4000060	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	        34	compress.c	FUNCTION_1
0x4000067	    0x64488b042528	                mov rax, qword fs:[0x28]	        34	compress.c	FUNCTION_1
0x4000070	        0x488945f8	                mov qword [rbp - 8], rax	        34	compress.c	FUNCTION_1
0x4000074	            0x31c0	                            xor eax, eax	        34	compress.c	FUNCTION_1
0x4000076	        0x488d4580	                   lea rax, [rbp - 0x80]	        45	compress.c	FUNCTION_1	CALL_1
0x400007a	      0xba70000000	                           mov edx, 0x70	        45	compress.c	FUNCTION_1	CALL_1
0x400007f	      0xbe00000000	                              mov esi, 0	        45	compress.c	FUNCTION_1	CALL_1
0x4000084	          0x4889c7	                            mov rdi, rax	        45	compress.c	FUNCTION_1	CALL_1
0x4000087	      0xe800000000	                          call 0x400008c	        45	compress.c	FUNCTION_1	CALL_1
0x400008c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	        46	compress.c	FUNCTION_1
0x4000093	          0x894588	             mov dword [rbp - 0x78], eax	        46	compress.c	FUNCTION_1
0x4000096	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	        47	compress.c	FUNCTION_1
0x400009d	        0x48894580	             mov qword [rbp - 0x80], rax	        47	compress.c	FUNCTION_1
0x40000a1	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	        48	compress.c	FUNCTION_1
0x40000a8	          0x8945a0	             mov dword [rbp - 0x60], eax	        48	compress.c	FUNCTION_1
0x40000ab	        0x488d4580	                   lea rax, [rbp - 0x80]	        51	compress.c	FUNCTION_1	CALL_3
0x40000af	      0xba70000000	                           mov edx, 0x70	        51	compress.c	FUNCTION_1	CALL_3
0x40000b4	      0xbe00000000	                              mov esi, 0	        51	compress.c	FUNCTION_1	CALL_3
0x40000b9	          0x4889c7	                            mov rdi, rax	        51	compress.c	FUNCTION_1	CALL_3
0x40000bc	      0xe800000000	                          call 0x40000c1	        51	compress.c	FUNCTION_1	CALL_3
0x40000c1	    0x89857cffffff	             mov dword [rbp - 0x84], eax	        51	compress.c	FUNCTION_1	CALL_3
0x40000c7	            0xeb5b	                           jmp 0x4000124	        52	compress.c	FUNCTION_1	WHILE_1
0x40000c9	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000d0	            0x7562	                           jne 0x4000134	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000d2	          0x8b45a0	             mov eax, dword [rbp - 0x60]	        57	compress.c	FUNCTION_1	WHILE_1
0x40000d5	            0x89c2	                            mov edx, eax	        57	compress.c	FUNCTION_1	WHILE_1
0x40000d7	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	        57	compress.c	FUNCTION_1	WHILE_1
0x40000de	          0x4829d0	                            sub rax, rdx	        57	compress.c	FUNCTION_1	WHILE_1
0x40000e1	          0x4889c2	                            mov rdx, rax	        57	compress.c	FUNCTION_1	WHILE_1
0x40000e4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        57	compress.c	FUNCTION_1	WHILE_1
0x40000eb	          0x4801d0	                            add rax, rdx	        57	compress.c	FUNCTION_1	WHILE_1
0x40000ee	        0x48894598	             mov qword [rbp - 0x68], rax	        56	compress.c	FUNCTION_1	WHILE_1
0x40000f2	        0x488d4580	                   lea rax, [rbp - 0x80]	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40000f6	      0xbe04000000	                              mov esi, 4	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40000fb	          0x4889c7	                            mov rdi, rax	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40000fe	      0xe800000000	                          call 0x4000103	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x4000103	    0x89857cffffff	             mov dword [rbp - 0x84], eax	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x4000109	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 1	        59	compress.c	FUNCTION_1	WHILE_1	IF_2
0x4000110	            0x7525	                           jne 0x4000137	        59	compress.c	FUNCTION_1	WHILE_1	IF_2
0x4000112	        0x488d4580	                   lea rax, [rbp - 0x80]	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x4000116	          0x4889c7	                            mov rdi, rax	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x4000119	      0xe800000000	                          call 0x400011e	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x400011e	    0x89857cffffff	             mov dword [rbp - 0x84], eax	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x4000124	          0x8b4588	             mov eax, dword [rbp - 0x78]	        52	compress.c	FUNCTION_1	WHILE_1
0x4000127	            0x85c0	                           test eax, eax	        52	compress.c	FUNCTION_1	WHILE_1
0x4000129	            0x740d	                            je 0x4000138	        52	compress.c	FUNCTION_1	WHILE_1
0x400012b	          0x8b45a0	             mov eax, dword [rbp - 0x60]	        52	compress.c	FUNCTION_1	WHILE_1
0x400012e	            0x85c0	                           test eax, eax	        52	compress.c	FUNCTION_1	WHILE_1
0x4000130	            0x7597	                           jne 0x40000c9	        52	compress.c	FUNCTION_1	WHILE_1
0x4000132	            0xeb04	                           jmp 0x4000138	        52	compress.c	FUNCTION_1	WHILE_1
0x4000134	              0x90	                                     nop	        55	compress.c	FUNCTION_1	WHILE_1	IF_1
0x4000135	            0xeb01	                           jmp 0x4000138	        55	compress.c	FUNCTION_1	WHILE_1	IF_1
0x4000137	              0x90	                                     nop	        60	compress.c	FUNCTION_1	WHILE_1	IF_2
0x4000138	        0x488d4580	                   lea rax, [rbp - 0x80]	        63	compress.c	FUNCTION_1	CALL_6
0x400013c	          0x4889c7	                            mov rdi, rax	        63	compress.c	FUNCTION_1	CALL_6
0x400013f	      0xe800000000	                          call 0x4000144	        63	compress.c	FUNCTION_1	CALL_6
0x4000144	     0x9857cffffff	              or dword [rbp - 0x84], eax	        63	compress.c	FUNCTION_1	CALL_6
0x400014a	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	        64	compress.c	FUNCTION_1
0x4000151	            0x750e	                           jne 0x4000161	        64	compress.c	FUNCTION_1
0x4000153	          0x8b45a0	             mov eax, dword [rbp - 0x60]	        64	compress.c	FUNCTION_1
0x4000156	            0x85c0	                           test eax, eax	        64	compress.c	FUNCTION_1
0x4000158	            0x7507	                           jne 0x4000161	        64	compress.c	FUNCTION_1
0x400015a	      0xb801000000	                              mov eax, 1	        64	compress.c	FUNCTION_1
0x400015f	            0xeb05	                           jmp 0x4000166	        64	compress.c	FUNCTION_1
0x4000161	      0xb800000000	                              mov eax, 0	        64	compress.c	FUNCTION_1
0x4000166	        0x488b4df8	                mov rcx, qword [rbp - 8]	        65	compress.c	FUNCTION_1
0x400016a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        65	compress.c	FUNCTION_1
0x4000173	            0x7405	                            je 0x400017a	        65	compress.c	FUNCTION_1
0x4000175	      0xe800000000	                          call 0x400017a	        65	compress.c	FUNCTION_1
0x400017a	              0xc9	                                   leave	        65	compress.c	FUNCTION_1
0x400017b	              0xc3	                                     ret	        65	compress.c	FUNCTION_1
bfd_cache_section_contents	SWITCH,0:WHILE,0:CALL,0:FOR,0:IF,1:functions,0:DO,0:ELSE,0	26
0x4000827	              0x55	                                push rbp	       352	compress.c	FUNCTION_4
0x4000828	          0x4889e5	                            mov rbp, rsp	       352	compress.c	FUNCTION_4
0x400082b	        0x48897df8	                mov qword [rbp - 8], rdi	       352	compress.c	FUNCTION_4
0x400082f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       352	compress.c	FUNCTION_4
0x4000833	        0x488b45f8	                mov rax, qword [rbp - 8]	       353	compress.c	FUNCTION_4	IF_1
0x4000837	         0xfb64024	           movzx eax, byte [rax + 0x24] 	       353	compress.c	FUNCTION_4	IF_1
0x400083b	          0x83e030	                           and eax, 0x30	       353	compress.c	FUNCTION_4	IF_1
0x400083e	            0x3c20	                            cmp al, 0x20	       353	compress.c	FUNCTION_4	IF_1
0x4000840	            0x7511	                           jne 0x4000853	       353	compress.c	FUNCTION_4	IF_1
0x4000842	        0x488b45f8	                mov rax, qword [rbp - 8]	       354	compress.c	FUNCTION_4	IF_1
0x4000846	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       354	compress.c	FUNCTION_4	IF_1
0x400084a	          0x83e2cf	                     and edx, 0xffffffcf	       354	compress.c	FUNCTION_4	IF_1
0x400084d	          0x83ca10	                            or edx, 0x10	       354	compress.c	FUNCTION_4	IF_1
0x4000850	          0x885024	               mov byte [rax + 0x24], dl	       354	compress.c	FUNCTION_4	IF_1
0x4000853	        0x488b45f8	                mov rax, qword [rbp - 8]	       355	compress.c	FUNCTION_4
0x4000857	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       355	compress.c	FUNCTION_4
0x400085b	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       355	compress.c	FUNCTION_4
0x4000862	        0x488b45f8	                mov rax, qword [rbp - 8]	       356	compress.c	FUNCTION_4
0x4000866	          0x8b4020	            mov eax, dword [rax + 0x20] 	       356	compress.c	FUNCTION_4
0x4000869	          0x80cc40	                             or ah, 0x40	       356	compress.c	FUNCTION_4
0x400086c	            0x89c2	                            mov edx, eax	       356	compress.c	FUNCTION_4
0x400086e	        0x488b45f8	                mov rax, qword [rbp - 8]	       356	compress.c	FUNCTION_4
0x4000872	          0x895020	             mov dword [rax + 0x20], edx	       356	compress.c	FUNCTION_4
0x4000875	              0x90	                                     nop	       357	compress.c	FUNCTION_4
0x4000876	              0x5d	                                 pop rbp	       357	compress.c	FUNCTION_4
0x4000877	              0xc3	                                     ret	       357	compress.c	FUNCTION_4
bfd_init_section_compress_status	SWITCH,0:WHILE,0:CALL,4:FOR,0:IF,3:functions,0:DO,0:ELSE,0	66
0x4000c30	              0x55	                                push rbp	       542	compress.c	FUNCTION_8
0x4000c31	          0x4889e5	                            mov rbp, rsp	       542	compress.c	FUNCTION_8
0x4000c34	        0x4883ec20	                           sub rsp, 0x20	       542	compress.c	FUNCTION_8
0x4000c38	        0x48897de8	             mov qword [rbp - 0x18], rdi	       542	compress.c	FUNCTION_8
0x4000c3c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       542	compress.c	FUNCTION_8
0x4000c40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       547	compress.c	FUNCTION_8	IF_1
0x4000c44	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       547	compress.c	FUNCTION_8	IF_1
0x4000c48	          0x83e018	                           and eax, 0x18	       547	compress.c	FUNCTION_8	IF_1
0x4000c4b	            0x3c08	                               cmp al, 8	       547	compress.c	FUNCTION_8	IF_1
0x4000c4d	            0x7539	                           jne 0x4000c88	       547	compress.c	FUNCTION_8	IF_1
0x4000c4f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       548	compress.c	FUNCTION_8	IF_1
0x4000c53	        0x488b4038	            mov rax, qword [rax + 0x38] 	       548	compress.c	FUNCTION_8	IF_1
0x4000c57	          0x4885c0	                           test rax, rax	       548	compress.c	FUNCTION_8	IF_1
0x4000c5a	            0x742c	                            je 0x4000c88	       548	compress.c	FUNCTION_8	IF_1
0x4000c5c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       549	compress.c	FUNCTION_8	IF_1
0x4000c60	        0x488b4040	            mov rax, qword [rax + 0x40] 	       549	compress.c	FUNCTION_8	IF_1
0x4000c64	          0x4885c0	                           test rax, rax	       549	compress.c	FUNCTION_8	IF_1
0x4000c67	            0x751f	                           jne 0x4000c88	       549	compress.c	FUNCTION_8	IF_1
0x4000c69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       550	compress.c	FUNCTION_8	IF_1
0x4000c6d	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       550	compress.c	FUNCTION_8	IF_1
0x4000c74	          0x4885c0	                           test rax, rax	       550	compress.c	FUNCTION_8	IF_1
0x4000c77	            0x750f	                           jne 0x4000c88	       550	compress.c	FUNCTION_8	IF_1
0x4000c79	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       551	compress.c	FUNCTION_8	IF_1
0x4000c7d	         0xfb64024	           movzx eax, byte [rax + 0x24] 	       551	compress.c	FUNCTION_8	IF_1
0x4000c81	          0x83e030	                           and eax, 0x30	       551	compress.c	FUNCTION_8	IF_1
0x4000c84	            0x84c0	                             test al, al	       551	compress.c	FUNCTION_8	IF_1
0x4000c86	            0x7411	                            je 0x4000c99	       551	compress.c	FUNCTION_8	IF_1
0x4000c88	      0xbf05000000	                              mov edi, 5	       553	compress.c	FUNCTION_8	IF_1	CALL_1
0x4000c8d	      0xe800000000	                          call 0x4000c92	       553	compress.c	FUNCTION_8	IF_1	CALL_1
0x4000c92	      0xb800000000	                              mov eax, 0	       554	compress.c	FUNCTION_8	IF_1
0x4000c97	            0xeb7c	                           jmp 0x4000d15	       554	compress.c	FUNCTION_8	IF_1
0x4000c99	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       558	compress.c	FUNCTION_8
0x4000c9d	        0x488b4038	            mov rax, qword [rax + 0x38] 	       558	compress.c	FUNCTION_8
0x4000ca1	        0x488945f0	             mov qword [rbp - 0x10], rax	       558	compress.c	FUNCTION_8
0x4000ca5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       559	compress.c	FUNCTION_8	CALL_2
0x4000ca9	          0x4889c7	                            mov rdi, rax	       559	compress.c	FUNCTION_8	CALL_2
0x4000cac	      0xe800000000	                          call 0x4000cb1	       559	compress.c	FUNCTION_8	CALL_2
0x4000cb1	        0x488945f8	                mov qword [rbp - 8], rax	       559	compress.c	FUNCTION_8	CALL_2
0x4000cb5	      0x48837df800	                  cmp qword [rbp - 8], 0	       561	compress.c	FUNCTION_8	IF_2
0x4000cba	            0x7507	                           jne 0x4000cc3	       561	compress.c	FUNCTION_8	IF_2
0x4000cbc	      0xb800000000	                              mov eax, 0	       562	compress.c	FUNCTION_8	IF_2
0x4000cc1	            0xeb52	                           jmp 0x4000d15	       562	compress.c	FUNCTION_8	IF_2
0x4000cc3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000cc7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000ccb	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000ccf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000cd3	          0x4989c8	                             mov r8, rcx	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000cd6	      0xb900000000	                              mov ecx, 0	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000cdb	          0x4889c7	                            mov rdi, rax	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000cde	      0xe800000000	                          call 0x4000ce3	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000ce3	            0x85c0	                           test eax, eax	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000ce5	            0x7507	                           jne 0x4000cee	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000ce7	      0xb800000000	                              mov eax, 0	       566	compress.c	FUNCTION_8	IF_3
0x4000cec	            0xeb27	                           jmp 0x4000d15	       566	compress.c	FUNCTION_8	IF_3
0x4000cee	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       568	compress.c	FUNCTION_8	CALL_4
0x4000cf2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       568	compress.c	FUNCTION_8	CALL_4
0x4000cf6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       568	compress.c	FUNCTION_8	CALL_4
0x4000cfa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       568	compress.c	FUNCTION_8	CALL_4
0x4000cfe	          0x4889c7	                            mov rdi, rax	       568	compress.c	FUNCTION_8	CALL_4
0x4000d01	      0xe876f4ffff	  call sym.bfd_compress_section_contents	       568	compress.c	FUNCTION_8	CALL_4
0x4000d06	        0x488945f0	             mov qword [rbp - 0x10], rax	       568	compress.c	FUNCTION_8	CALL_4
0x4000d0a	      0x48837df000	               cmp qword [rbp - 0x10], 0	       571	compress.c	FUNCTION_8
0x4000d0f	           0xf95c0	                                setne al	       571	compress.c	FUNCTION_8
0x4000d12	           0xfb6c0	                           movzx eax, al	       571	compress.c	FUNCTION_8
0x4000d15	              0xc9	                                   leave	       572	compress.c	FUNCTION_8
0x4000d16	              0xc3	                                     ret	       572	compress.c	FUNCTION_8
bfd_is_section_compressed_with_header	SWITCH,0:WHILE,0:CALL,8:FOR,0:IF,7:functions,0:DO,0:ELSE,4	127
0x4000878	              0x55	                                push rbp	       381	compress.c	FUNCTION_5
0x4000879	          0x4889e5	                            mov rbp, rsp	       381	compress.c	FUNCTION_5
0x400087c	        0x4883ec50	                           sub rsp, 0x50	       381	compress.c	FUNCTION_5
0x4000880	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       381	compress.c	FUNCTION_5
0x4000884	        0x488975c0	             mov qword [rbp - 0x40], rsi	       381	compress.c	FUNCTION_5
0x4000888	        0x488955b8	             mov qword [rbp - 0x48], rdx	       381	compress.c	FUNCTION_5
0x400088c	        0x48894db0	             mov qword [rbp - 0x50], rcx	       381	compress.c	FUNCTION_5
0x4000890	    0x64488b042528	                mov rax, qword fs:[0x28]	       381	compress.c	FUNCTION_5
0x4000899	        0x488945f8	                mov qword [rbp - 8], rax	       381	compress.c	FUNCTION_5
0x400089d	            0x31c0	                            xor eax, eax	       381	compress.c	FUNCTION_5
0x400089f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       385	compress.c	FUNCTION_5
0x40008a3	         0xfb64024	           movzx eax, byte [rax + 0x24] 	       385	compress.c	FUNCTION_5
0x40008a7	          0xc0e804	                               shr al, 4	       385	compress.c	FUNCTION_5
0x40008aa	          0x83e003	                              and eax, 3	       385	compress.c	FUNCTION_5
0x40008ad	           0xfb6c0	                           movzx eax, al	       385	compress.c	FUNCTION_5
0x40008b0	          0x8945d8	             mov dword [rbp - 0x28], eax	       385	compress.c	FUNCTION_5
0x40008b3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       388	compress.c	FUNCTION_5	CALL_1
0x40008b7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       388	compress.c	FUNCTION_5	CALL_1
0x40008bb	          0x4889d6	                            mov rsi, rdx	       388	compress.c	FUNCTION_5	CALL_1
0x40008be	          0x4889c7	                            mov rdi, rax	       388	compress.c	FUNCTION_5	CALL_1
0x40008c1	      0xe800000000	                          call 0x40008c6	       388	compress.c	FUNCTION_5	CALL_1
0x40008c6	          0x8945d0	             mov dword [rbp - 0x30], eax	       388	compress.c	FUNCTION_5	CALL_1
0x40008c9	        0x837dd018	           cmp dword [rbp - 0x30], 0x18 	       389	compress.c	FUNCTION_5	IF_1
0x40008cd	            0x7e14	                           jle 0x40008e3	       389	compress.c	FUNCTION_5	IF_1
0x40008cf	      0xba00000000	                              mov edx, 0	       390	compress.c	FUNCTION_5	CALL_2
0x40008d4	      0xbe86010000	                          mov esi, 0x186	       390	compress.c	FUNCTION_5	CALL_2
0x40008d9	      0xbf00000000	                              mov edi, 0	       390	compress.c	FUNCTION_5	CALL_2
0x40008de	      0xe800000000	                          call 0x40008e3	       390	compress.c	FUNCTION_5	CALL_2
0x40008e3	        0x837dd000	               cmp dword [rbp - 0x30], 0	       391	compress.c	FUNCTION_5
0x40008e7	            0x7405	                            je 0x40008ee	       391	compress.c	FUNCTION_5
0x40008e9	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       391	compress.c	FUNCTION_5
0x40008ec	            0xeb05	                           jmp 0x40008f3	       391	compress.c	FUNCTION_5
0x40008ee	      0xb80c000000	                            mov eax, 0xc	       391	compress.c	FUNCTION_5
0x40008f3	          0x8945dc	             mov dword [rbp - 0x24], eax	       391	compress.c	FUNCTION_5
0x40008f6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       394	compress.c	FUNCTION_5
0x40008fa	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       394	compress.c	FUNCTION_5
0x40008fe	          0x83e2cf	                     and edx, 0xffffffcf	       394	compress.c	FUNCTION_5
0x4000901	          0x885024	               mov byte [rax + 0x24], dl	       394	compress.c	FUNCTION_5
0x4000904	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000907	          0x4863c8	                         movsxd rcx, eax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400090a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400090e	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000912	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000916	          0x4989c8	                             mov r8, rcx	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000919	      0xb900000000	                              mov ecx, 0	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400091e	          0x4889c7	                            mov rdi, rax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000921	      0xe800000000	                          call 0x4000926	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000926	            0x85c0	                           test eax, eax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000928	            0x7432	                            je 0x400095c	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400092a	        0x837dd000	               cmp dword [rbp - 0x30], 0	       399	compress.c	FUNCTION_5	IF_2	IF_3
0x400092e	            0x7523	                           jne 0x4000953	       399	compress.c	FUNCTION_5	IF_2	IF_3
0x4000930	        0x488d45e0	                   lea rax, [rbp - 0x20]	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000934	      0xba04000000	                              mov edx, 4	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000939	      0xbe00000000	                              mov esi, 0	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400093e	          0x4889c7	                            mov rdi, rax	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000941	      0xe800000000	                          call 0x4000946	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000946	            0x85c0	                           test eax, eax	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000948	           0xf94c0	                                 sete al	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400094b	           0xfb6c0	                           movzx eax, al	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400094e	          0x8945d4	             mov dword [rbp - 0x2c], eax	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000951	            0xeb10	                           jmp 0x4000963	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000953	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       404	compress.c	FUNCTION_5	IF_2	ELSE_1
0x400095a	            0xeb07	                           jmp 0x4000963	       404	compress.c	FUNCTION_5	IF_2	ELSE_1
0x400095c	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       407	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000963	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000967	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x400096b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x400096f	          0x488910	                    mov qword [rax], rdx	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000972	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       410	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x4000976	     0xf8481000000	                            je 0x40009fd	       410	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x400097c	        0x837dd000	               cmp dword [rbp - 0x30], 0	       412	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5
0x4000980	            0x7425	                            je 0x40009a7	       412	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5
0x4000982	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000986	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400098a	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400098e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000992	          0x4889c7	                            mov rdi, rax	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000995	      0xe800000000	                          call 0x400099a	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400099a	            0x85c0	                           test eax, eax	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400099c	            0x755f	                           jne 0x40009fd	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400099e	    0xc745d0ffffff	     mov dword [rbp - 0x30], 0xffffffff 	       416	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6
0x40009a5	            0xeb56	                           jmp 0x40009fd	       416	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6
0x40009a7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x40009ab	          0x488b00	                    mov rax, qword [rax]	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x40009ae	      0xbe00000000	                              mov esi, 0	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x40009b3	          0x4889c7	                            mov rdi, rax	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x40009b6	      0xe800000000	                          call 0x40009bb	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x40009bb	            0x85c0	                           test eax, eax	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x40009bd	            0x7524	                           jne 0x40009e3	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x40009bf	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x40009c3	           0xfb6c0	                           movzx eax, al	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x40009c6	            0x4898	                                    cdqe	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x40009c8	     0xfb784000000	             movzx eax, word [rax + rax]	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x40009d0	           0xfb7c0	                           movzx eax, ax	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x40009d3	          0x83e010	                           and eax, 0x10	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x40009d6	            0x85c0	                           test eax, eax	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x40009d8	            0x7409	                            je 0x40009e3	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x40009da	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       424	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7
0x40009e1	            0xeb1a	                           jmp 0x40009fd	       424	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7
0x40009e3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x40009e7	        0x4883c004	                              add rax, 4	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x40009eb	          0x4889c7	                            mov rdi, rax	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x40009ee	      0xe800000000	                          call 0x40009f3	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x40009f3	          0x4889c2	                            mov rdx, rax	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x40009f6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x40009fa	          0x488910	                    mov qword [rax], rdx	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x40009fd	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       430	compress.c	FUNCTION_5
0x4000a00	          0x83e003	                              and eax, 3	       430	compress.c	FUNCTION_5
0x4000a03	            0x89c2	                            mov edx, eax	       430	compress.c	FUNCTION_5
0x4000a05	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       430	compress.c	FUNCTION_5
0x4000a09	          0x83e203	                              and edx, 3	       430	compress.c	FUNCTION_5
0x4000a0c	            0x89d1	                            mov ecx, edx	       430	compress.c	FUNCTION_5
0x4000a0e	          0xc1e104	                              shl ecx, 4	       430	compress.c	FUNCTION_5
0x4000a11	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       430	compress.c	FUNCTION_5
0x4000a15	          0x83e2cf	                     and edx, 0xffffffcf	       430	compress.c	FUNCTION_5
0x4000a18	             0x9ca	                             or edx, ecx	       430	compress.c	FUNCTION_5
0x4000a1a	          0x885024	               mov byte [rax + 0x24], dl	       430	compress.c	FUNCTION_5
0x4000a1d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       431	compress.c	FUNCTION_5
0x4000a21	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       431	compress.c	FUNCTION_5
0x4000a24	            0x8910	                    mov dword [rax], edx	       431	compress.c	FUNCTION_5
0x4000a26	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       432	compress.c	FUNCTION_5
0x4000a29	        0x488b7df8	                mov rdi, qword [rbp - 8]	       433	compress.c	FUNCTION_5
0x4000a2d	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       433	compress.c	FUNCTION_5
0x4000a36	            0x7405	                            je 0x4000a3d	       433	compress.c	FUNCTION_5
0x4000a38	      0xe800000000	                          call 0x4000a3d	       433	compress.c	FUNCTION_5
0x4000a3d	              0xc9	                                   leave	       433	compress.c	FUNCTION_5
0x4000a3e	              0xc3	                                     ret	       433	compress.c	FUNCTION_5
bfd_compress_section_contents	SWITCH,0:WHILE,0:CALL,17:FOR,0:IF,11:functions,0:DO,0:ELSE,6	217
0x400017c	              0x55	                                push rbp	        79	compress.c	FUNCTION_2
0x400017d	          0x4889e5	                            mov rbp, rsp	        79	compress.c	FUNCTION_2
0x4000180	        0x4883ec60	                           sub rsp, 0x60	        79	compress.c	FUNCTION_2
0x4000184	        0x48897db8	             mov qword [rbp - 0x48], rdi	        79	compress.c	FUNCTION_2
0x4000188	        0x488975b0	             mov qword [rbp - 0x50], rsi	        79	compress.c	FUNCTION_2
0x400018c	        0x488955a8	             mov qword [rbp - 0x58], rdx	        79	compress.c	FUNCTION_2
0x4000190	        0x48894da0	             mov qword [rbp - 0x60], rcx	        79	compress.c	FUNCTION_2
0x4000194	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	compress.c	FUNCTION_2
0x400019d	        0x488945f8	                mov qword [rbp - 8], rax	        79	compress.c	FUNCTION_2
0x40001a1	            0x31c0	                            xor eax, eax	        79	compress.c	FUNCTION_2
0x40001a3	    0xc745cc000000	               mov dword [rbp - 0x34], 0	        84	compress.c	FUNCTION_2
0x40001aa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        87	compress.c	FUNCTION_2	CALL_1
0x40001ae	      0xbe00000000	                              mov esi, 0	        87	compress.c	FUNCTION_2	CALL_1
0x40001b3	          0x4889c7	                            mov rdi, rax	        87	compress.c	FUNCTION_2	CALL_1
0x40001b6	      0xe800000000	                          call 0x40001bb	        87	compress.c	FUNCTION_2	CALL_1
0x40001bb	          0x8945d0	             mov dword [rbp - 0x30], eax	        87	compress.c	FUNCTION_2	CALL_1
0x40001be	        0x488d4de0	                   lea rcx, [rbp - 0x20]	        88	compress.c	FUNCTION_2
0x40001c2	        0x488d55c4	                   lea rdx, [rbp - 0x3c]	        88	compress.c	FUNCTION_2
0x40001c6	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	        88	compress.c	FUNCTION_2
0x40001ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        88	compress.c	FUNCTION_2
0x40001ce	          0x4889c7	                            mov rdi, rax	        88	compress.c	FUNCTION_2
0x40001d1	      0xe800000000	                          call 0x40001d6	        88	compress.c	FUNCTION_2
0x40001d6	          0x8945d4	             mov dword [rbp - 0x2c], eax	        88	compress.c	FUNCTION_2
0x40001d9	        0x837dd000	               cmp dword [rbp - 0x30], 0	        95	compress.c	FUNCTION_2	IF_1
0x40001dd	            0x7507	                           jne 0x40001e6	        95	compress.c	FUNCTION_2	IF_1
0x40001df	    0xc745d00c0000	            mov dword [rbp - 0x30], 0xc 	        96	compress.c	FUNCTION_2	IF_1
0x40001e6	        0x837dd400	               cmp dword [rbp - 0x2c], 0	        98	compress.c	FUNCTION_2	IF_2
0x40001ea	            0x7455	                            je 0x4000241	        98	compress.c	FUNCTION_2	IF_2
0x40001ec	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40001ef	            0x85c0	                           test eax, eax	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40001f1	            0x7914	                           jns 0x4000207	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40001f3	      0xba00000000	                              mov edx, 0	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x40001f8	      0xbe66000000	                           mov esi, 0x66	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x40001fd	      0xbf00000000	                              mov edi, 0	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x4000202	      0xe800000000	                          call 0x4000207	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x4000207	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       106	compress.c	FUNCTION_2	IF_2	IF_4
0x400020a	            0x85c0	                           test eax, eax	       106	compress.c	FUNCTION_2	IF_2	IF_4
0x400020c	            0x7513	                           jne 0x4000221	       106	compress.c	FUNCTION_2	IF_2	IF_4
0x400020e	    0xc745c40c0000	            mov dword [rbp - 0x3c], 0xc 	       112	compress.c	FUNCTION_2	IF_2	IF_4
0x4000215	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       113	compress.c	FUNCTION_2	IF_2	IF_4
0x4000219	          0x83e80c	                            sub eax, 0xc	       113	compress.c	FUNCTION_2	IF_2	IF_4
0x400021c	          0x8945cc	             mov dword [rbp - 0x34], eax	       113	compress.c	FUNCTION_2	IF_2	IF_4
0x400021f	            0xeb10	                           jmp 0x4000231	       113	compress.c	FUNCTION_2	IF_2	IF_4
0x4000221	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x4000225	            0x89c2	                            mov edx, eax	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x4000227	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x400022a	            0x29c2	                            sub edx, eax	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x400022c	            0x89d0	                            mov eax, edx	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x400022e	          0x8945cc	             mov dword [rbp - 0x34], eax	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x4000231	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       122	compress.c	FUNCTION_2	IF_2
0x4000234	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       122	compress.c	FUNCTION_2	IF_2
0x4000237	             0x1d0	                            add eax, edx	       122	compress.c	FUNCTION_2	IF_2
0x4000239	            0x4898	                                    cdqe	       122	compress.c	FUNCTION_2	IF_2
0x400023b	        0x488945d8	             mov qword [rbp - 0x28], rax	       122	compress.c	FUNCTION_2	IF_2
0x400023f	            0xeb1b	                           jmp 0x400025c	       122	compress.c	FUNCTION_2	IF_2
0x4000241	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       125	compress.c	FUNCTION_2	CALL_4
0x4000245	          0x4889c7	                            mov rdi, rax	       125	compress.c	FUNCTION_2	CALL_4
0x4000248	      0xe800000000	                          call 0x400024d	       125	compress.c	FUNCTION_2	CALL_4
0x400024d	          0x4889c2	                            mov rdx, rax	       125	compress.c	FUNCTION_2	CALL_4
0x4000250	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       125	compress.c	FUNCTION_2	CALL_4
0x4000253	            0x4898	                                    cdqe	       125	compress.c	FUNCTION_2	CALL_4
0x4000255	          0x4801d0	                            add rax, rdx	       125	compress.c	FUNCTION_2	CALL_4
0x4000258	        0x488945d8	             mov qword [rbp - 0x28], rax	       125	compress.c	FUNCTION_2	CALL_4
0x400025c	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       128	compress.c	FUNCTION_2	IF_5
0x4000260	            0x741e	                            je 0x4000280	       128	compress.c	FUNCTION_2	IF_5
0x4000262	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       128	compress.c	FUNCTION_2	IF_5
0x4000266	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       128	compress.c	FUNCTION_2	IF_5
0x400026a	          0x4839c2	                            cmp rdx, rax	       128	compress.c	FUNCTION_2	IF_5
0x400026d	            0x7611	                           jbe 0x4000280	       128	compress.c	FUNCTION_2	IF_5
0x400026f	    0xc745c8010000	               mov dword [rbp - 0x38], 1	       130	compress.c	FUNCTION_2	IF_5
0x4000276	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       131	compress.c	FUNCTION_2	IF_5
0x400027a	        0x488945e8	             mov qword [rbp - 0x18], rax	       131	compress.c	FUNCTION_2	IF_5
0x400027e	            0xeb0f	                           jmp 0x400028f	       131	compress.c	FUNCTION_2	IF_5
0x4000280	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       135	compress.c	FUNCTION_2	ELSE_3
0x4000287	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       136	compress.c	FUNCTION_2	ELSE_3
0x400028b	        0x488945e8	             mov qword [rbp - 0x18], rax	       136	compress.c	FUNCTION_2	ELSE_3
0x400028f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       138	compress.c	FUNCTION_2	CALL_5
0x4000293	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       138	compress.c	FUNCTION_2	CALL_5
0x4000297	          0x4889d6	                            mov rsi, rdx	       138	compress.c	FUNCTION_2	CALL_5
0x400029a	          0x4889c7	                            mov rdi, rax	       138	compress.c	FUNCTION_2	CALL_5
0x400029d	      0xe800000000	                          call 0x40002a2	       138	compress.c	FUNCTION_2	CALL_5
0x40002a2	        0x488945f0	             mov qword [rbp - 0x10], rax	       138	compress.c	FUNCTION_2	CALL_5
0x40002a6	      0x48837df000	               cmp qword [rbp - 0x10], 0	       139	compress.c	FUNCTION_2	IF_6
0x40002ab	            0x750a	                           jne 0x40002b7	       139	compress.c	FUNCTION_2	IF_6
0x40002ad	      0xb800000000	                              mov eax, 0	       140	compress.c	FUNCTION_2	IF_6
0x40002b2	      0xe9dd010000	                           jmp 0x4000494	       140	compress.c	FUNCTION_2	IF_6
0x40002b7	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       142	compress.c	FUNCTION_2	IF_7
0x40002bb	     0xf84e0000000	                            je 0x40003a1	       142	compress.c	FUNCTION_2	IF_7
0x40002c1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       144	compress.c	FUNCTION_2	IF_7
0x40002c5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       144	compress.c	FUNCTION_2	IF_7
0x40002c9	        0x48895038	             mov qword [rax + 0x38], rdx	       144	compress.c	FUNCTION_2	IF_7
0x40002cd	        0x837dc800	               cmp dword [rbp - 0x38], 0	       145	compress.c	FUNCTION_2	IF_7	IF_8
0x40002d1	     0xf8483000000	                            je 0x400035a	       145	compress.c	FUNCTION_2	IF_7	IF_8
0x40002d7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002da	            0x4898	                                    cdqe	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002dc	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002df	          0x4863ca	                         movsxd rcx, edx	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002e2	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002e6	        0x488d3c11	                    lea rdi, [rcx + rdx]	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002ea	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002ee	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002f2	          0x4889c6	                            mov rsi, rax	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002f5	      0xe846fdffff	            call sym.decompress_contents	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002fa	            0x85c0	                           test eax, eax	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002fc	            0x7527	                           jne 0x4000325	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40002fe	      0xbf11000000	                           mov edi, 0x11	       151	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_7
0x4000303	      0xe800000000	                          call 0x4000308	       151	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_7
0x4000308	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x400030c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x4000310	          0x4889d6	                            mov rsi, rdx	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x4000313	          0x4889c7	                            mov rdi, rax	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x4000316	      0xe800000000	                          call 0x400031b	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x400031b	      0xb800000000	                              mov eax, 0	       153	compress.c	FUNCTION_2	IF_7	IF_8	IF_9
0x4000320	      0xe96f010000	                           jmp 0x4000494	       153	compress.c	FUNCTION_2	IF_7	IF_8	IF_9
0x4000325	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       155	compress.c	FUNCTION_2	IF_7	IF_8	CALL_9
0x4000329	          0x4889c7	                            mov rdi, rax	       155	compress.c	FUNCTION_2	IF_7	IF_8	CALL_9
0x400032c	      0xe800000000	                          call 0x4000331	       155	compress.c	FUNCTION_2	IF_7	IF_8	CALL_9
0x4000331	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       156	compress.c	FUNCTION_2	IF_7	IF_8
0x4000335	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       156	compress.c	FUNCTION_2	IF_7	IF_8
0x4000339	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       156	compress.c	FUNCTION_2	IF_7	IF_8
0x4000340	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x4000344	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x4000348	          0x83e2cf	                     and edx, 0xffffffcf	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x400034b	          0x83ca10	                            or edx, 0x10	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x400034e	          0x885024	               mov byte [rax + 0x24], dl	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x4000351	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       158	compress.c	FUNCTION_2	IF_7	IF_8
0x4000355	      0xe93a010000	                           jmp 0x4000494	       158	compress.c	FUNCTION_2	IF_7	IF_8
0x400035a	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x400035e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x4000362	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x4000366	          0x4889ce	                            mov rsi, rcx	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x4000369	          0x4889c7	                            mov rdi, rax	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x400036c	      0xe800000000	                          call 0x4000371	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x4000371	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x4000374	            0x4898	                                    cdqe	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x4000376	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x4000379	          0x4863ca	                         movsxd rcx, edx	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x400037c	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x4000380	        0x488d3411	                    lea rsi, [rcx + rdx]	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x4000384	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x4000387	          0x4863ca	                         movsxd rcx, edx	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x400038a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x400038e	          0x4801d1	                            add rcx, rdx	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x4000391	          0x4889c2	                            mov rdx, rax	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x4000394	          0x4889cf	                            mov rdi, rcx	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x4000397	      0xe800000000	                          call 0x400039c	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x400039c	      0xe9b7000000	                           jmp 0x4000458	       163	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_11
0x40003a1	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40003a4	          0x4863d0	                         movsxd rdx, eax	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40003a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40003ab	        0x488d3c02	                    lea rdi, [rdx + rax]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40003af	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40003b3	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40003b7	        0x488d45d8	                   lea rax, [rbp - 0x28]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40003bb	          0x4889c6	                            mov rsi, rax	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40003be	      0xe800000000	                          call 0x40003c3	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40003c3	            0x85c0	                           test eax, eax	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40003c5	            0x7427	                            je 0x40003ee	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40003c7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x40003cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x40003cf	          0x4889d6	                            mov rsi, rdx	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x40003d2	          0x4889c7	                            mov rdi, rax	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x40003d5	      0xe800000000	                          call 0x40003da	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x40003da	      0xbf11000000	                           mov edi, 0x11	       176	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_14
0x40003df	      0xe800000000	                          call 0x40003e4	       176	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_14
0x40003e4	      0xb800000000	                              mov eax, 0	       177	compress.c	FUNCTION_2	ELSE_5	IF_10
0x40003e9	      0xe9a6000000	                           jmp 0x4000494	       177	compress.c	FUNCTION_2	ELSE_5	IF_10
0x40003ee	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       180	compress.c	FUNCTION_2	ELSE_5
0x40003f1	          0x4863d0	                         movsxd rdx, eax	       180	compress.c	FUNCTION_2	ELSE_5
0x40003f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       180	compress.c	FUNCTION_2	ELSE_5
0x40003f8	          0x4801d0	                            add rax, rdx	       180	compress.c	FUNCTION_2	ELSE_5
0x40003fb	        0x488945d8	             mov qword [rbp - 0x28], rax	       180	compress.c	FUNCTION_2	ELSE_5
0x40003ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       183	compress.c	FUNCTION_2	ELSE_5	IF_11
0x4000403	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       183	compress.c	FUNCTION_2	ELSE_5	IF_11
0x4000407	            0x7319	                           jae 0x4000422	       183	compress.c	FUNCTION_2	ELSE_5	IF_11
0x4000409	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x400040d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000411	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000415	          0x4889ce	                            mov rsi, rcx	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000418	          0x4889c7	                            mov rdi, rax	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x400041b	      0xe800000000	                          call 0x4000420	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000420	            0xeb36	                           jmp 0x4000458	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000422	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x4000426	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x400042a	          0x4889d6	                            mov rsi, rdx	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x400042d	          0x4889c7	                            mov rdi, rax	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x4000430	      0xe800000000	                          call 0x4000435	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x4000435	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       190	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000439	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       190	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x400043d	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       190	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000444	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       191	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000448	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       191	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x400044c	          0x83e2cf	                     and edx, 0xffffffcf	       191	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x400044f	          0x885024	               mov byte [rax + 0x24], dl	       191	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000452	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       192	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000456	            0xeb3c	                           jmp 0x4000494	       192	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000458	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       196	compress.c	FUNCTION_2	CALL_17
0x400045c	          0x4889c7	                            mov rdi, rax	       196	compress.c	FUNCTION_2	CALL_17
0x400045f	      0xe800000000	                          call 0x4000464	       196	compress.c	FUNCTION_2	CALL_17
0x4000464	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       197	compress.c	FUNCTION_2
0x4000468	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       197	compress.c	FUNCTION_2
0x400046c	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       197	compress.c	FUNCTION_2
0x4000473	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       198	compress.c	FUNCTION_2
0x4000477	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       198	compress.c	FUNCTION_2
0x400047b	        0x48895038	             mov qword [rax + 0x38], rdx	       198	compress.c	FUNCTION_2
0x400047f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       199	compress.c	FUNCTION_2
0x4000483	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       199	compress.c	FUNCTION_2
0x4000487	          0x83e2cf	                     and edx, 0xffffffcf	       199	compress.c	FUNCTION_2
0x400048a	          0x83ca10	                            or edx, 0x10	       199	compress.c	FUNCTION_2
0x400048d	          0x885024	               mov byte [rax + 0x24], dl	       199	compress.c	FUNCTION_2
0x4000490	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       201	compress.c	FUNCTION_2
0x4000494	        0x488b75f8	                mov rsi, qword [rbp - 8]	       202	compress.c	FUNCTION_2
0x4000498	    0x644833342528	                xor rsi, qword fs:[0x28]	       202	compress.c	FUNCTION_2
0x40004a1	            0x7405	                            je 0x40004a8	       202	compress.c	FUNCTION_2
0x40004a3	      0xe800000000	                          call 0x40004a8	       202	compress.c	FUNCTION_2
0x40004a8	              0xc9	                                   leave	       202	compress.c	FUNCTION_2
0x40004a9	              0xc3	                                     ret	       202	compress.c	FUNCTION_2
bfd_get_full_section_contents	SWITCH,1:WHILE,0:CALL,18:FOR,0:IF,18:functions,0:DO,0:ELSE,1	233
0x40004aa	              0x55	                                push rbp	       224	compress.c	FUNCTION_3
0x40004ab	          0x4889e5	                            mov rbp, rsp	       224	compress.c	FUNCTION_3
0x40004ae	        0x4883ec50	                           sub rsp, 0x50	       224	compress.c	FUNCTION_3
0x40004b2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       224	compress.c	FUNCTION_3
0x40004b6	        0x488975c0	             mov qword [rbp - 0x40], rsi	       224	compress.c	FUNCTION_3
0x40004ba	        0x488955b8	             mov qword [rbp - 0x48], rdx	       224	compress.c	FUNCTION_3
0x40004be	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       226	compress.c	FUNCTION_3
0x40004c2	          0x488b00	                    mov rax, qword [rax]	       226	compress.c	FUNCTION_3
0x40004c5	        0x488945e0	             mov qword [rbp - 0x20], rax	       226	compress.c	FUNCTION_3
0x40004c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       233	compress.c	FUNCTION_3	IF_1
0x40004cd	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       233	compress.c	FUNCTION_3	IF_1
0x40004d1	          0x83e018	                           and eax, 0x18	       233	compress.c	FUNCTION_3	IF_1
0x40004d4	            0x3c10	                            cmp al, 0x10	       233	compress.c	FUNCTION_3	IF_1
0x40004d6	            0x741b	                            je 0x40004f3	       233	compress.c	FUNCTION_3	IF_1
0x40004d8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       233	compress.c	FUNCTION_3	IF_1
0x40004dc	        0x488b4040	            mov rax, qword [rax + 0x40] 	       233	compress.c	FUNCTION_3	IF_1
0x40004e0	          0x4885c0	                           test rax, rax	       233	compress.c	FUNCTION_3	IF_1
0x40004e3	            0x740e	                            je 0x40004f3	       233	compress.c	FUNCTION_3	IF_1
0x40004e5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       234	compress.c	FUNCTION_3	IF_1
0x40004e9	        0x488b4040	            mov rax, qword [rax + 0x40] 	       234	compress.c	FUNCTION_3	IF_1
0x40004ed	        0x488945d8	             mov qword [rbp - 0x28], rax	       234	compress.c	FUNCTION_3	IF_1
0x40004f1	            0xeb0c	                           jmp 0x40004ff	       234	compress.c	FUNCTION_3	IF_1
0x40004f3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       236	compress.c	FUNCTION_3	ELSE_1
0x40004f7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       236	compress.c	FUNCTION_3	ELSE_1
0x40004fb	        0x488945d8	             mov qword [rbp - 0x28], rax	       236	compress.c	FUNCTION_3	ELSE_1
0x40004ff	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       237	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000504	            0x7515	                           jne 0x400051b	       237	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000506	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       239	compress.c	FUNCTION_3	ELSE_1	IF_2
0x400050a	    0x48c700000000	                      mov qword [rax], 0	       239	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000511	      0xb801000000	                              mov eax, 1	       240	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000516	      0xe90a030000	                           jmp 0x4000825	       240	compress.c	FUNCTION_3	ELSE_1	IF_2
0x400051b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       243	compress.c	FUNCTION_3	SWITCH_1
0x400051f	         0xfb64024	           movzx eax, byte [rax + 0x24] 	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000523	          0xc0e804	                               shr al, 4	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000526	          0x83e003	                              and eax, 3	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000529	           0xfb6c0	                           movzx eax, al	       243	compress.c	FUNCTION_3	SWITCH_1
0x400052c	          0x83f801	                              cmp eax, 1	       243	compress.c	FUNCTION_3	SWITCH_1
0x400052f	     0xf845f020000	                            je 0x4000794	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000535	          0x83f802	                              cmp eax, 2	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000538	     0xf84c1000000	                            je 0x40005ff	       243	compress.c	FUNCTION_3	SWITCH_1
0x400053e	            0x85c0	                           test eax, eax	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000540	     0xf85cb020000	                           jne 0x4000811	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000546	      0x48837de000	               cmp qword [rbp - 0x20], 0	       246	compress.c	FUNCTION_3	SWITCH_1	IF_3
0x400054b	            0x7556	                           jne 0x40005a3	       246	compress.c	FUNCTION_3	SWITCH_1	IF_3
0x400054d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x4000551	          0x4889c7	                            mov rdi, rax	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x4000554	      0xe800000000	                          call 0x4000559	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x4000559	        0x488945e0	             mov qword [rbp - 0x20], rax	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x400055d	      0x48837de000	               cmp qword [rbp - 0x20], 0	       249	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x4000562	            0x753f	                           jne 0x40005a3	       249	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x4000564	      0xe800000000	                          call 0x4000569	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x4000569	          0x83f806	                              cmp eax, 6	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x400056c	            0x752b	                           jne 0x4000599	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x400056e	      0xbe00000000	                              mov esi, 0	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x4000573	      0xbf00000000	                              mov edi, 0	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x4000578	      0xe800000000	                          call 0x400057d	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x400057d	          0x4889c7	                            mov rdi, rax	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x4000580	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000584	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000588	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x400058c	          0x4889c6	                            mov rsi, rax	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x400058f	      0xb800000000	                              mov eax, 0	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000594	      0xe800000000	                          call 0x4000599	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000599	      0xb800000000	                              mov eax, 0	       257	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x400059e	      0xe982020000	                           jmp 0x4000825	       257	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x40005a3	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40005a7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40005ab	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40005af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40005b3	          0x4989c8	                             mov r8, rcx	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40005b6	      0xb900000000	                              mov ecx, 0	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40005bb	          0x4889c7	                            mov rdi, rax	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40005be	      0xe800000000	                          call 0x40005c3	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40005c3	            0x85c0	                           test eax, eax	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40005c5	            0x7523	                           jne 0x40005ea	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40005c7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       263	compress.c	FUNCTION_3	SWITCH_1	IF_6	IF_7
0x40005cb	          0x488b00	                    mov rax, qword [rax]	       263	compress.c	FUNCTION_3	SWITCH_1	IF_6	IF_7
0x40005ce	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       263	compress.c	FUNCTION_3	SWITCH_1	IF_6	IF_7
0x40005d2	            0x740c	                            je 0x40005e0	       263	compress.c	FUNCTION_3	SWITCH_1	IF_6	IF_7
0x40005d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x40005d8	          0x4889c7	                            mov rdi, rax	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x40005db	      0xe800000000	                          call 0x40005e0	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x40005e0	      0xb800000000	                              mov eax, 0	       265	compress.c	FUNCTION_3	SWITCH_1	IF_6
0x40005e5	      0xe93b020000	                           jmp 0x4000825	       265	compress.c	FUNCTION_3	SWITCH_1	IF_6
0x40005ea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       267	compress.c	FUNCTION_3	SWITCH_1
0x40005ee	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       267	compress.c	FUNCTION_3	SWITCH_1
0x40005f2	          0x488910	                    mov qword [rax], rdx	       267	compress.c	FUNCTION_3	SWITCH_1
0x40005f5	      0xb801000000	                              mov eax, 1	       268	compress.c	FUNCTION_3	SWITCH_1
0x40005fa	      0xe926020000	                           jmp 0x4000825	       268	compress.c	FUNCTION_3	SWITCH_1
0x40005ff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x4000603	        0x488b4048	            mov rax, qword [rax + 0x48] 	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x4000607	          0x4889c7	                            mov rdi, rax	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x400060a	      0xe800000000	                          call 0x400060f	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x400060f	        0x488945e8	             mov qword [rbp - 0x18], rax	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x4000613	      0x48837de800	               cmp qword [rbp - 0x18], 0	       273	compress.c	FUNCTION_3	SWITCH_1	IF_8
0x4000618	            0x750a	                           jne 0x4000624	       273	compress.c	FUNCTION_3	SWITCH_1	IF_8
0x400061a	      0xb800000000	                              mov eax, 0	       274	compress.c	FUNCTION_3	SWITCH_1	IF_8
0x400061f	      0xe901020000	                           jmp 0x4000825	       274	compress.c	FUNCTION_3	SWITCH_1	IF_8
0x4000624	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       275	compress.c	FUNCTION_3	SWITCH_1
0x4000628	        0x488b4040	            mov rax, qword [rax + 0x40] 	       275	compress.c	FUNCTION_3	SWITCH_1
0x400062c	        0x488945f0	             mov qword [rbp - 0x10], rax	       275	compress.c	FUNCTION_3	SWITCH_1
0x4000630	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       276	compress.c	FUNCTION_3	SWITCH_1
0x4000634	        0x488b4038	            mov rax, qword [rax + 0x38] 	       276	compress.c	FUNCTION_3	SWITCH_1
0x4000638	        0x488945f8	                mov qword [rbp - 8], rax	       276	compress.c	FUNCTION_3	SWITCH_1
0x400063c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       280	compress.c	FUNCTION_3	SWITCH_1
0x4000640	    0x48c740400000	               mov qword [rax + 0x40], 0	       280	compress.c	FUNCTION_3	SWITCH_1
0x4000648	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	compress.c	FUNCTION_3	SWITCH_1
0x400064c	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       281	compress.c	FUNCTION_3	SWITCH_1
0x4000650	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	compress.c	FUNCTION_3	SWITCH_1
0x4000654	        0x48895038	             mov qword [rax + 0x38], rdx	       281	compress.c	FUNCTION_3	SWITCH_1
0x4000658	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       282	compress.c	FUNCTION_3	SWITCH_1
0x400065c	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       282	compress.c	FUNCTION_3	SWITCH_1
0x4000660	          0x83e2cf	                     and edx, 0xffffffcf	       282	compress.c	FUNCTION_3	SWITCH_1
0x4000663	          0x885024	               mov byte [rax + 0x24], dl	       282	compress.c	FUNCTION_3	SWITCH_1
0x4000666	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x400066a	        0x488b4848	            mov rcx, qword [rax + 0x48] 	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x400066e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x4000672	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x4000676	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x400067a	          0x4989c8	                             mov r8, rcx	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x400067d	      0xb900000000	                              mov ecx, 0	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x4000682	          0x4889c7	                            mov rdi, rax	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x4000685	      0xe800000000	                          call 0x400068a	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x400068a	          0x8945d4	             mov dword [rbp - 0x2c], eax	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x400068d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       286	compress.c	FUNCTION_3	SWITCH_1
0x4000691	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       286	compress.c	FUNCTION_3	SWITCH_1
0x4000695	        0x48895040	             mov qword [rax + 0x40], rdx	       286	compress.c	FUNCTION_3	SWITCH_1
0x4000699	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       287	compress.c	FUNCTION_3	SWITCH_1
0x400069d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       287	compress.c	FUNCTION_3	SWITCH_1
0x40006a1	        0x48895038	             mov qword [rax + 0x38], rdx	       287	compress.c	FUNCTION_3	SWITCH_1
0x40006a5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       288	compress.c	FUNCTION_3	SWITCH_1
0x40006a9	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       288	compress.c	FUNCTION_3	SWITCH_1
0x40006ad	          0x83e2cf	                     and edx, 0xffffffcf	       288	compress.c	FUNCTION_3	SWITCH_1
0x40006b0	          0x83ca20	                            or edx, 0x20	       288	compress.c	FUNCTION_3	SWITCH_1
0x40006b3	          0x885024	               mov byte [rax + 0x24], dl	       288	compress.c	FUNCTION_3	SWITCH_1
0x40006b6	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       289	compress.c	FUNCTION_3	SWITCH_1	IF_9
0x40006ba	     0xf8499000000	                            je 0x4000759	       289	compress.c	FUNCTION_3	SWITCH_1	IF_9
0x40006c0	      0x48837de000	               cmp qword [rbp - 0x20], 0	       292	compress.c	FUNCTION_3	SWITCH_1	IF_10
0x40006c5	            0x7510	                           jne 0x40006d7	       292	compress.c	FUNCTION_3	SWITCH_1	IF_10
0x40006c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x40006cb	          0x4889c7	                            mov rdi, rax	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x40006ce	      0xe800000000	                          call 0x40006d3	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x40006d3	        0x488945e0	             mov qword [rbp - 0x20], rax	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x40006d7	      0x48837de000	               cmp qword [rbp - 0x20], 0	       294	compress.c	FUNCTION_3	SWITCH_1	IF_11
0x40006dc	            0x747e	                            je 0x400075c	       294	compress.c	FUNCTION_3	SWITCH_1	IF_11
0x40006de	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x40006e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x40006e6	          0x4889d6	                            mov rsi, rdx	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x40006e9	          0x4889c7	                            mov rdi, rax	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x40006ec	      0xe800000000	                          call 0x40006f1	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x40006f1	          0x8945d0	             mov dword [rbp - 0x30], eax	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x40006f4	        0x837dd000	               cmp dword [rbp - 0x30], 0	       298	compress.c	FUNCTION_3	SWITCH_1	IF_12
0x40006f8	            0x7507	                           jne 0x4000701	       298	compress.c	FUNCTION_3	SWITCH_1	IF_12
0x40006fa	    0xc745d00c0000	            mov dword [rbp - 0x30], 0xc 	       301	compress.c	FUNCTION_3	SWITCH_1	IF_12
0x4000701	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       303	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x4000705	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       303	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x4000709	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x400070c	          0x4889d6	                            mov rsi, rdx	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x400070f	          0x4829c6	                            sub rsi, rax	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000712	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000715	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000719	        0x488d3c02	                    lea rdi, [rdx + rax]	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x400071d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000721	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000725	          0x4889d1	                            mov rcx, rdx	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000728	          0x4889c2	                            mov rdx, rax	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x400072b	      0xe810f9ffff	            call sym.decompress_contents	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000730	            0x85c0	                           test eax, eax	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000732	            0x753f	                           jne 0x4000773	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000734	      0xbf11000000	                           mov edi, 0x11	       305	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_12
0x4000739	      0xe800000000	                          call 0x400073e	       305	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_12
0x400073e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       306	compress.c	FUNCTION_3	SWITCH_1	IF_13	IF_14
0x4000742	          0x488b00	                    mov rax, qword [rax]	       306	compress.c	FUNCTION_3	SWITCH_1	IF_13	IF_14
0x4000745	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       306	compress.c	FUNCTION_3	SWITCH_1	IF_13	IF_14
0x4000749	            0x7412	                            je 0x400075d	       306	compress.c	FUNCTION_3	SWITCH_1	IF_13	IF_14
0x400074b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       307	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_13
0x400074f	          0x4889c7	                            mov rdi, rax	       307	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_13
0x4000752	      0xe800000000	                          call 0x4000757	       307	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_13
0x4000757	            0xeb04	                           jmp 0x400075d	       307	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_13
0x4000759	              0x90	                                     nop	       290	compress.c	FUNCTION_3	SWITCH_1	IF_9
0x400075a	            0xeb01	                           jmp 0x400075d	       290	compress.c	FUNCTION_3	SWITCH_1	IF_9
0x400075c	              0x90	                                     nop	       295	compress.c	FUNCTION_3	SWITCH_1	IF_11
0x400075d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       309	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_14
0x4000761	          0x4889c7	                            mov rdi, rax	       309	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_14
0x4000764	      0xe800000000	                          call 0x4000769	       309	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_14
0x4000769	      0xb800000000	                              mov eax, 0	       310	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x400076e	      0xe9b2000000	                           jmp 0x4000825	       310	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x4000773	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       313	compress.c	FUNCTION_3	SWITCH_1	CALL_15
0x4000777	          0x4889c7	                            mov rdi, rax	       313	compress.c	FUNCTION_3	SWITCH_1	CALL_15
0x400077a	      0xe800000000	                          call 0x400077f	       313	compress.c	FUNCTION_3	SWITCH_1	CALL_15
0x400077f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       314	compress.c	FUNCTION_3	SWITCH_1
0x4000783	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       314	compress.c	FUNCTION_3	SWITCH_1
0x4000787	          0x488910	                    mov qword [rax], rdx	       314	compress.c	FUNCTION_3	SWITCH_1
0x400078a	      0xb801000000	                              mov eax, 1	       315	compress.c	FUNCTION_3	SWITCH_1
0x400078f	      0xe991000000	                           jmp 0x4000825	       315	compress.c	FUNCTION_3	SWITCH_1
0x4000794	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x4000798	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x400079f	          0x4885c0	                           test rax, rax	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x40007a2	            0x7507	                           jne 0x40007ab	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x40007a4	      0xb800000000	                              mov eax, 0	       319	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x40007a9	            0xeb7a	                           jmp 0x4000825	       319	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x40007ab	      0x48837de000	               cmp qword [rbp - 0x20], 0	       320	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x40007b0	            0x7529	                           jne 0x40007db	       320	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x40007b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x40007b6	          0x4889c7	                            mov rdi, rax	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x40007b9	      0xe800000000	                          call 0x40007be	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x40007be	        0x488945e0	             mov qword [rbp - 0x20], rax	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x40007c2	      0x48837de000	               cmp qword [rbp - 0x20], 0	       323	compress.c	FUNCTION_3	SWITCH_1	IF_16	IF_17
0x40007c7	            0x7507	                           jne 0x40007d0	       323	compress.c	FUNCTION_3	SWITCH_1	IF_16	IF_17
0x40007c9	      0xb800000000	                              mov eax, 0	       324	compress.c	FUNCTION_3	SWITCH_1	IF_16	IF_17
0x40007ce	            0xeb55	                           jmp 0x4000825	       324	compress.c	FUNCTION_3	SWITCH_1	IF_16	IF_17
0x40007d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       325	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x40007d4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       325	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x40007d8	          0x488910	                    mov qword [rax], rdx	       325	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x40007db	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       328	compress.c	FUNCTION_3	SWITCH_1	IF_18
0x40007df	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       328	compress.c	FUNCTION_3	SWITCH_1	IF_18
0x40007e6	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       328	compress.c	FUNCTION_3	SWITCH_1	IF_18
0x40007ea	            0x741e	                            je 0x400080a	       328	compress.c	FUNCTION_3	SWITCH_1	IF_18
0x40007ec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       329	compress.c	FUNCTION_3	SWITCH_1	CALL_17
0x40007f0	    0x488b88b00000	            mov rcx, qword [rax + 0xb0] 	       329	compress.c	FUNCTION_3	SWITCH_1	CALL_17
0x40007f7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       329	compress.c	FUNCTION_3	SWITCH_1	CALL_17
0x40007fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       329	compress.c	FUNCTION_3	SWITCH_1	CALL_17
0x40007ff	          0x4889ce	                            mov rsi, rcx	       329	compress.c	FUNCTION_3	SWITCH_1	CALL_17
0x4000802	          0x4889c7	                            mov rdi, rax	       329	compress.c	FUNCTION_3	SWITCH_1	CALL_17
0x4000805	      0xe800000000	                          call 0x400080a	       329	compress.c	FUNCTION_3	SWITCH_1	CALL_17
0x400080a	      0xb801000000	                              mov eax, 1	       330	compress.c	FUNCTION_3	SWITCH_1
0x400080f	            0xeb14	                           jmp 0x4000825	       330	compress.c	FUNCTION_3	SWITCH_1
0x4000811	      0xba00000000	                              mov edx, 0	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x4000816	      0xbe4d010000	                          mov esi, 0x14d	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x400081b	      0xbf00000000	                              mov edi, 0	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x4000820	      0xe800000000	                          call 0x4000825	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x4000825	              0xc9	                                   leave	       335	compress.c	FUNCTION_3
0x4000826	              0xc3	                                     ret	       335	compress.c	FUNCTION_3
