OP_Skip_MODRM	CALL,0:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	15
0x4003098	              0x55	                                push rbp	     13906	i386-dis.c	FUNCTION_12
0x4003099	          0x4889e5	                            mov rbp, rsp	     13906	i386-dis.c	FUNCTION_12
0x400309c	        0x4883ec10	                           sub rsp, 0x10	     13906	i386-dis.c	FUNCTION_12
0x40030a0	          0x897dfc	                mov dword [rbp - 4], edi	     13906	i386-dis.c	FUNCTION_12
0x40030a3	          0x8975f8	                mov dword [rbp - 8], esi	     13906	i386-dis.c	FUNCTION_12
0x40030a6	     0xfb605000000	           movzx eax, byte [0x040030ad] 	     13908	i386-dis.c	FUNCTION_12
0x40030ad	            0x84c0	                             test al, al	     13908	i386-dis.c	FUNCTION_12
0x40030af	            0x7505	                           jne 0x40030b6	     13908	i386-dis.c	FUNCTION_12
0x40030b1	      0xe800000000	                          call 0x40030b6	     13908	i386-dis.c	FUNCTION_12
0x40030b6	    0x488b05000000	            mov rax, qword [0x040030bd] 	     13909	i386-dis.c	FUNCTION_12
0x40030bd	        0x4883c001	                              add rax, 1	     13909	i386-dis.c	FUNCTION_12
0x40030c1	    0x488905000000	            mov qword [0x040030c8], rax 	     13909	i386-dis.c	FUNCTION_12
0x40030c8	              0x90	                                     nop	     13910	i386-dis.c	FUNCTION_12
0x40030c9	              0xc9	                                   leave	     13910	i386-dis.c	FUNCTION_12
0x40030ca	              0xc3	                                     ret	     13910	i386-dis.c	FUNCTION_12
FXSAVE_Fixup	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0	38
0x40094bf	              0x55	                                push rbp	     17145	i386-dis.c	FUNCTION_77
0x40094c0	          0x4889e5	                            mov rbp, rsp	     17145	i386-dis.c	FUNCTION_77
0x40094c3	        0x4883ec20	                           sub rsp, 0x20	     17145	i386-dis.c	FUNCTION_77
0x40094c7	          0x897dec	             mov dword [rbp - 0x14], edi	     17145	i386-dis.c	FUNCTION_77
0x40094ca	          0x8975e8	             mov dword [rbp - 0x18], esi	     17145	i386-dis.c	FUNCTION_77
0x40094cd	    0x8b0500000000	            mov eax, dword [0x040094d3] 	     17147	i386-dis.c	FUNCTION_77
0x40094d3	          0x83e008	                              and eax, 8	     17147	i386-dis.c	FUNCTION_77
0x40094d6	            0x85c0	                           test eax, eax	     17147	i386-dis.c	FUNCTION_77
0x40094d8	            0x740f	                            je 0x40094e9	     17147	i386-dis.c	FUNCTION_77
0x40094da	    0x8b0500000000	            mov eax, dword [0x040094e0] 	     17147	i386-dis.c	FUNCTION_77
0x40094e0	          0x83c848	                            or eax, 0x48	     17147	i386-dis.c	FUNCTION_77
0x40094e3	    0x890500000000	            mov dword [0x040094e9], eax 	     17147	i386-dis.c	FUNCTION_77
0x40094e9	    0x8b0500000000	            mov eax, dword [0x040094ef] 	     17148	i386-dis.c	FUNCTION_77	IF_1
0x40094ef	          0x83e008	                              and eax, 8	     17148	i386-dis.c	FUNCTION_77	IF_1
0x40094f2	            0x85c0	                           test eax, eax	     17148	i386-dis.c	FUNCTION_77	IF_1
0x40094f4	            0x743b	                            je 0x4009531	     17148	i386-dis.c	FUNCTION_77	IF_1
0x40094f6	    0x488b05000000	            mov rax, qword [0x040094fd] 	     17150	i386-dis.c	FUNCTION_77	IF_1
0x40094fd	        0x488945f8	                mov qword [rbp - 8], rax	     17150	i386-dis.c	FUNCTION_77	IF_1
0x4009501	        0x488b45f8	                mov rax, qword [rbp - 8]	     17151	i386-dis.c	FUNCTION_77	IF_1
0x4009505	        0x488d5001	                      lea rdx, [rax + 1]	     17151	i386-dis.c	FUNCTION_77	IF_1
0x4009509	        0x488955f8	                mov qword [rbp - 8], rdx	     17151	i386-dis.c	FUNCTION_77	IF_1
0x400950d	          0xc60036	                    mov byte [rax], 0x36	     17151	i386-dis.c	FUNCTION_77	IF_1
0x4009510	        0x488b45f8	                mov rax, qword [rbp - 8]	     17152	i386-dis.c	FUNCTION_77	IF_1
0x4009514	        0x488d5001	                      lea rdx, [rax + 1]	     17152	i386-dis.c	FUNCTION_77	IF_1
0x4009518	        0x488955f8	                mov qword [rbp - 8], rdx	     17152	i386-dis.c	FUNCTION_77	IF_1
0x400951c	          0xc60034	                    mov byte [rax], 0x34	     17152	i386-dis.c	FUNCTION_77	IF_1
0x400951f	        0x488b45f8	                mov rax, qword [rbp - 8]	     17153	i386-dis.c	FUNCTION_77	IF_1
0x4009523	          0xc60000	                       mov byte [rax], 0	     17153	i386-dis.c	FUNCTION_77	IF_1
0x4009526	        0x488b45f8	                mov rax, qword [rbp - 8]	     17154	i386-dis.c	FUNCTION_77	IF_1
0x400952a	    0x488905000000	            mov qword [0x04009531], rax 	     17154	i386-dis.c	FUNCTION_77	IF_1
0x4009531	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     17156	i386-dis.c	FUNCTION_77	CALL_1
0x4009534	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17156	i386-dis.c	FUNCTION_77	CALL_1
0x4009537	            0x89d6	                            mov esi, edx	     17156	i386-dis.c	FUNCTION_77	CALL_1
0x4009539	            0x89c7	                            mov edi, eax	     17156	i386-dis.c	FUNCTION_77	CALL_1
0x400953b	      0xe8d3f3ffff	                           call sym.OP_M	     17156	i386-dis.c	FUNCTION_77	CALL_1
0x4009540	              0x90	                                     nop	     17157	i386-dis.c	FUNCTION_77
0x4009541	              0xc9	                                   leave	     17157	i386-dis.c	FUNCTION_77
0x4009542	              0xc3	                                     ret	     17157	i386-dis.c	FUNCTION_77
VPCOM_Fixup	CALL,4:WHILE,0:functions,0:DO,0:ELSE,2:IF,2:SWITCH,0:FOR,0	85
0x400a255	              0x55	                                push rbp	     17734	i386-dis.c	FUNCTION_94
0x400a256	          0x4889e5	                            mov rbp, rsp	     17734	i386-dis.c	FUNCTION_94
0x400a259	        0x4883ec30	                           sub rsp, 0x30	     17734	i386-dis.c	FUNCTION_94
0x400a25d	          0x897ddc	             mov dword [rbp - 0x24], edi	     17734	i386-dis.c	FUNCTION_94
0x400a260	          0x8975d8	             mov dword [rbp - 0x28], esi	     17734	i386-dis.c	FUNCTION_94
0x400a263	    0x64488b042528	                mov rax, qword fs:[0x28]	     17734	i386-dis.c	FUNCTION_94
0x400a26c	        0x488945f8	                mov qword [rbp - 8], rax	     17734	i386-dis.c	FUNCTION_94
0x400a270	            0x31c0	                            xor eax, eax	     17734	i386-dis.c	FUNCTION_94
0x400a272	    0x488b05000000	            mov rax, qword [0x0400a279] 	     17737	i386-dis.c	FUNCTION_94
0x400a279	        0x488d5001	                      lea rdx, [rax + 1]	     17737	i386-dis.c	FUNCTION_94
0x400a27d	    0x488b05000000	            mov rax, qword [0x0400a284] 	     17737	i386-dis.c	FUNCTION_94
0x400a284	        0x488b4068	            mov rax, qword [rax + 0x68] 	     17737	i386-dis.c	FUNCTION_94
0x400a288	          0x488b00	                    mov rax, qword [rax]	     17737	i386-dis.c	FUNCTION_94
0x400a28b	          0x4839c2	                            cmp rdx, rax	     17737	i386-dis.c	FUNCTION_94
0x400a28e	            0x761d	                           jbe 0x400a2ad	     17737	i386-dis.c	FUNCTION_94
0x400a290	    0x488b05000000	            mov rax, qword [0x0400a297] 	     17737	i386-dis.c	FUNCTION_94
0x400a297	        0x488d5001	                      lea rdx, [rax + 1]	     17737	i386-dis.c	FUNCTION_94
0x400a29b	    0x488b05000000	            mov rax, qword [0x0400a2a2] 	     17737	i386-dis.c	FUNCTION_94
0x400a2a2	          0x4889d6	                            mov rsi, rdx	     17737	i386-dis.c	FUNCTION_94
0x400a2a5	          0x4889c7	                            mov rdi, rax	     17737	i386-dis.c	FUNCTION_94
0x400a2a8	      0xe8935dffff	                     call sym.fetch_data	     17737	i386-dis.c	FUNCTION_94
0x400a2ad	    0x488b05000000	            mov rax, qword [0x0400a2b4] 	     17738	i386-dis.c	FUNCTION_94
0x400a2b4	        0x488d5001	                      lea rdx, [rax + 1]	     17738	i386-dis.c	FUNCTION_94
0x400a2b8	    0x488915000000	            mov qword [0x0400a2bf], rdx 	     17738	i386-dis.c	FUNCTION_94
0x400a2bf	           0xfb600	                   movzx eax, byte [rax]	     17738	i386-dis.c	FUNCTION_94
0x400a2c2	           0xfb6c0	                           movzx eax, al	     17738	i386-dis.c	FUNCTION_94
0x400a2c5	          0x8945e4	             mov dword [rbp - 0x1c], eax	     17738	i386-dis.c	FUNCTION_94
0x400a2c8	        0x837de407	               cmp dword [rbp - 0x1c], 7	     17739	i386-dis.c	FUNCTION_94	IF_1	CALL_1
0x400a2cc	     0xf8797000000	                            ja 0x400a369	     17739	i386-dis.c	FUNCTION_94	IF_1	CALL_1
0x400a2d2	    0x488b05000000	            mov rax, qword [0x0400a2d9] 	     17742	i386-dis.c	FUNCTION_94	IF_1
0x400a2d9	        0x4883e802	                              sub rax, 2	     17742	i386-dis.c	FUNCTION_94	IF_1
0x400a2dd	        0x488945e8	             mov qword [rbp - 0x18], rax	     17742	i386-dis.c	FUNCTION_94	IF_1
0x400a2e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400a2e5	           0xfb600	                   movzx eax, byte [rax]	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400a2e8	            0x3c6d	                            cmp al, 0x6d	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400a2ea	            0x7515	                           jne 0x400a301	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400a2ec	      0x488345e801	               add qword [rbp - 0x18], 1	     17747	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400a2f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400a2f5	           0xfb600	                   movzx eax, byte [rax]	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400a2f8	          0x8845f0	               mov byte [rbp - 0x10], al	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400a2fb	        0xc645f100	                 mov byte [rbp - 0xf], 0	     17749	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400a2ff	            0xeb19	                           jmp 0x400a31a	     17749	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400a301	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17753	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x400a305	           0xfb600	                   movzx eax, byte [rax]	     17753	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x400a308	          0x8845f0	               mov byte [rbp - 0x10], al	     17753	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x400a30b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17754	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x400a30f	         0xfb64001	               movzx eax, byte [rax + 1]	     17754	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x400a313	          0x8845f1	                mov byte [rbp - 0xf], al	     17754	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x400a316	        0xc645f200	                 mov byte [rbp - 0xe], 0	     17755	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x400a31a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     17758	i386-dis.c	FUNCTION_94	IF_1	CALL_2
0x400a31d	        0x48c1e004	                              shl rax, 4	     17758	i386-dis.c	FUNCTION_94	IF_1	CALL_2
0x400a321	    0x480500000000	                              add rax, 0	     17758	i386-dis.c	FUNCTION_94	IF_1	CALL_2
0x400a327	          0x488b10	                    mov rdx, qword [rax]	     17758	i386-dis.c	FUNCTION_94	IF_1	CALL_2
0x400a32a	        0x488d4df0	                   lea rcx, [rbp - 0x10]	     17758	i386-dis.c	FUNCTION_94	IF_1	CALL_2
0x400a32e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17758	i386-dis.c	FUNCTION_94	IF_1	CALL_2
0x400a332	      0xbe00000000	                              mov esi, 0	     17758	i386-dis.c	FUNCTION_94	IF_1	CALL_2
0x400a337	          0x4889c7	                            mov rdi, rax	     17758	i386-dis.c	FUNCTION_94	IF_1	CALL_2
0x400a33a	      0xb800000000	                              mov eax, 0	     17758	i386-dis.c	FUNCTION_94	IF_1	CALL_2
0x400a33f	      0xe800000000	                          call 0x400a344	     17758	i386-dis.c	FUNCTION_94	IF_1	CALL_2
0x400a344	    0x488b05000000	            mov rax, qword [0x0400a34b] 	     17759	i386-dis.c	FUNCTION_94	IF_1
0x400a34b	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	     17759	i386-dis.c	FUNCTION_94	IF_1
0x400a34e	        0x48c1e204	                              shl rdx, 4	     17759	i386-dis.c	FUNCTION_94	IF_1
0x400a352	    0x4881c2000000	                              add rdx, 0	     17759	i386-dis.c	FUNCTION_94	IF_1
0x400a359	            0x8b12	                    mov edx, dword [rdx]	     17759	i386-dis.c	FUNCTION_94	IF_1
0x400a35b	            0x89d2	                            mov edx, edx	     17759	i386-dis.c	FUNCTION_94	IF_1
0x400a35d	          0x4801d0	                            add rax, rdx	     17759	i386-dis.c	FUNCTION_94	IF_1
0x400a360	    0x488905000000	            mov qword [0x0400a367], rax 	     17759	i386-dis.c	FUNCTION_94	IF_1
0x400a367	            0xeb30	                           jmp 0x400a399	     17769	i386-dis.c	FUNCTION_94
0x400a369	    0xc60500000000	            mov byte [0x0400a370], 0x24 	     17764	i386-dis.c	FUNCTION_94	ELSE_2
0x400a370	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_3
0x400a373	      0xb900000000	                              mov ecx, 0	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_3
0x400a378	          0x4889c2	                            mov rdx, rax	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_3
0x400a37b	      0xbe01000000	                              mov esi, 1	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_3
0x400a380	          0x4889cf	                            mov rdi, rcx	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_3
0x400a383	      0xe844a8ffff	            call sym.print_operand_value	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_3
0x400a388	      0xbf00000000	                              mov edi, 0	     17766	i386-dis.c	FUNCTION_94	ELSE_2	CALL_4
0x400a38d	      0xe82b8fffff	            call sym.oappend_maybe_intel	     17766	i386-dis.c	FUNCTION_94	ELSE_2	CALL_4
0x400a392	    0xc60500000000	                mov byte [0x0400a399], 0	     17767	i386-dis.c	FUNCTION_94	ELSE_2
0x400a399	              0x90	                                     nop	     17769	i386-dis.c	FUNCTION_94
0x400a39a	        0x488b45f8	                mov rax, qword [rbp - 8]	     17769	i386-dis.c	FUNCTION_94
0x400a39e	    0x644833042528	                xor rax, qword fs:[0x28]	     17769	i386-dis.c	FUNCTION_94
0x400a3a7	            0x7405	                            je 0x400a3ae	     17769	i386-dis.c	FUNCTION_94
0x400a3a9	      0xe800000000	                          call 0x400a3ae	     17769	i386-dis.c	FUNCTION_94
0x400a3ae	              0xc9	                                   leave	     17769	i386-dis.c	FUNCTION_94
0x400a3af	              0xc3	                                     ret	     17769	i386-dis.c	FUNCTION_94
OP_LWPCB_E	CALL,1:WHILE,0:functions,0:DO,0:ELSE,1:IF,2:SWITCH,0:FOR,0	46
0x400a616	              0x55	                                push rbp	     17859	i386-dis.c	FUNCTION_97
0x400a617	          0x4889e5	                            mov rbp, rsp	     17859	i386-dis.c	FUNCTION_97
0x400a61a	        0x4883ec20	                           sub rsp, 0x20	     17859	i386-dis.c	FUNCTION_97
0x400a61e	          0x897dec	             mov dword [rbp - 0x14], edi	     17859	i386-dis.c	FUNCTION_97
0x400a621	          0x8975e8	             mov dword [rbp - 0x18], esi	     17859	i386-dis.c	FUNCTION_97
0x400a624	     0xfb605000000	           movzx eax, byte [0x0400a62b] 	     17864	i386-dis.c	FUNCTION_97
0x400a62b	            0x84c0	                             test al, al	     17864	i386-dis.c	FUNCTION_97
0x400a62d	            0x7505	                           jne 0x400a634	     17864	i386-dis.c	FUNCTION_97
0x400a62f	      0xe800000000	                          call 0x400a634	     17864	i386-dis.c	FUNCTION_97
0x400a634	    0x488b05000000	            mov rax, qword [0x0400a63b] 	     17865	i386-dis.c	FUNCTION_97
0x400a63b	        0x4883c001	                              add rax, 1	     17865	i386-dis.c	FUNCTION_97
0x400a63f	    0x488905000000	            mov qword [0x0400a646], rax 	     17865	i386-dis.c	FUNCTION_97
0x400a646	    0x8b0500000000	            mov eax, dword [0x0400a64c] 	     17867	i386-dis.c	FUNCTION_97	IF_1
0x400a64c	          0x83e008	                              and eax, 8	     17867	i386-dis.c	FUNCTION_97	IF_1
0x400a64f	            0x85c0	                           test eax, eax	     17867	i386-dis.c	FUNCTION_97	IF_1
0x400a651	            0x740d	                            je 0x400a660	     17867	i386-dis.c	FUNCTION_97	IF_1
0x400a653	    0x488b05000000	            mov rax, qword [0x0400a65a] 	     17868	i386-dis.c	FUNCTION_97	IF_1
0x400a65a	        0x488945f8	                mov qword [rbp - 8], rax	     17868	i386-dis.c	FUNCTION_97	IF_1
0x400a65e	            0xeb0b	                           jmp 0x400a66b	     17868	i386-dis.c	FUNCTION_97	IF_1
0x400a660	    0x488b05000000	            mov rax, qword [0x0400a667] 	     17870	i386-dis.c	FUNCTION_97	ELSE_1
0x400a667	        0x488945f8	                mov qword [rbp - 8], rax	     17870	i386-dis.c	FUNCTION_97	ELSE_1
0x400a66b	    0x8b0500000000	            mov eax, dword [0x0400a671] 	     17872	i386-dis.c	FUNCTION_97
0x400a671	          0x8945f4	              mov dword [rbp - 0xc], eax	     17872	i386-dis.c	FUNCTION_97
0x400a674	    0x8b0500000000	            mov eax, dword [0x0400a67a] 	     17873	i386-dis.c	FUNCTION_97
0x400a67a	          0x83e001	                              and eax, 1	     17873	i386-dis.c	FUNCTION_97
0x400a67d	            0x85c0	                           test eax, eax	     17873	i386-dis.c	FUNCTION_97
0x400a67f	            0x740f	                            je 0x400a690	     17873	i386-dis.c	FUNCTION_97
0x400a681	    0x8b0500000000	            mov eax, dword [0x0400a687] 	     17873	i386-dis.c	FUNCTION_97
0x400a687	          0x83c841	                            or eax, 0x41	     17873	i386-dis.c	FUNCTION_97
0x400a68a	    0x890500000000	            mov dword [0x0400a690], eax 	     17873	i386-dis.c	FUNCTION_97
0x400a690	    0x8b0500000000	            mov eax, dword [0x0400a696] 	     17874	i386-dis.c	FUNCTION_97	IF_2
0x400a696	          0x83e001	                              and eax, 1	     17874	i386-dis.c	FUNCTION_97	IF_2
0x400a699	            0x85c0	                           test eax, eax	     17874	i386-dis.c	FUNCTION_97	IF_2
0x400a69b	            0x7404	                            je 0x400a6a1	     17874	i386-dis.c	FUNCTION_97	IF_2
0x400a69d	        0x8345f408	                add dword [rbp - 0xc], 8	     17875	i386-dis.c	FUNCTION_97	IF_2
0x400a6a1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x400a6a4	            0x4898	                                    cdqe	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x400a6a6	    0x488d14c50000	                        lea rdx, [rax*8]	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x400a6ae	        0x488b45f8	                mov rax, qword [rbp - 8]	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x400a6b2	          0x4801d0	                            add rax, rdx	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x400a6b5	          0x488b00	                    mov rax, qword [rax]	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x400a6b8	          0x4889c7	                            mov rdi, rax	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x400a6bb	      0xe809a4ffff	                        call sym.oappend	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x400a6c0	              0x90	                                     nop	     17878	i386-dis.c	FUNCTION_97
0x400a6c1	              0xc9	                                   leave	     17878	i386-dis.c	FUNCTION_97
0x400a6c2	              0xc3	                                     ret	     17878	i386-dis.c	FUNCTION_97
OP_R	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	20
0x4008194	              0x55	                                push rbp	     16397	i386-dis.c	FUNCTION_49
0x4008195	          0x4889e5	                            mov rbp, rsp	     16397	i386-dis.c	FUNCTION_49
0x4008198	        0x4883ec10	                           sub rsp, 0x10	     16397	i386-dis.c	FUNCTION_49
0x400819c	          0x897dfc	                mov dword [rbp - 4], edi	     16397	i386-dis.c	FUNCTION_49
0x400819f	          0x8975f8	                mov dword [rbp - 8], esi	     16397	i386-dis.c	FUNCTION_49
0x40081a2	     0xfb605000000	           movzx eax, byte [0x040081a9] 	     16399	i386-dis.c	FUNCTION_49
0x40081a9	            0x84c0	                             test al, al	     16399	i386-dis.c	FUNCTION_49
0x40081ab	            0x7505	                           jne 0x40081b2	     16399	i386-dis.c	FUNCTION_49
0x40081ad	      0xe800000000	                          call 0x40081b2	     16399	i386-dis.c	FUNCTION_49
0x40081b2	    0x488b05000000	            mov rax, qword [0x040081b9] 	     16400	i386-dis.c	FUNCTION_49
0x40081b9	        0x4883c001	                              add rax, 1	     16400	i386-dis.c	FUNCTION_49
0x40081bd	    0x488905000000	            mov qword [0x040081c4], rax 	     16400	i386-dis.c	FUNCTION_49
0x40081c4	          0x8b55f8	                mov edx, dword [rbp - 8]	     16401	i386-dis.c	FUNCTION_49	CALL_1
0x40081c7	          0x8b45fc	                mov eax, dword [rbp - 4]	     16401	i386-dis.c	FUNCTION_49	CALL_1
0x40081ca	            0x89d6	                            mov esi, edx	     16401	i386-dis.c	FUNCTION_49	CALL_1
0x40081cc	            0x89c7	                            mov edi, eax	     16401	i386-dis.c	FUNCTION_49	CALL_1
0x40081ce	      0xe83cd5ffff	                  call sym.OP_E_register	     16401	i386-dis.c	FUNCTION_49	CALL_1
0x40081d3	              0x90	                                     nop	     16402	i386-dis.c	FUNCTION_49
0x40081d4	              0xc9	                                   leave	     16402	i386-dis.c	FUNCTION_49
0x40081d5	              0xc3	                                     ret	     16402	i386-dis.c	FUNCTION_49
BadOp	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	10
0x4008e72	              0x55	                                push rbp	     16915	i386-dis.c	FUNCTION_67
0x4008e73	          0x4889e5	                            mov rbp, rsp	     16915	i386-dis.c	FUNCTION_67
0x4008e76	    0x488b05000000	            mov rax, qword [0x04008e7d] 	     16917	i386-dis.c	FUNCTION_67
0x4008e7d	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x4008e81	    0x488905000000	            mov qword [0x04008e88], rax 	     16917	i386-dis.c	FUNCTION_67
0x4008e88	      0xbf00000000	                              mov edi, 0	     16918	i386-dis.c	FUNCTION_67	CALL_1
0x4008e8d	      0xe837bcffff	                        call sym.oappend	     16918	i386-dis.c	FUNCTION_67	CALL_1
0x4008e92	              0x90	                                     nop	     16919	i386-dis.c	FUNCTION_67
0x4008e93	              0x5d	                                 pop rbp	     16919	i386-dis.c	FUNCTION_67
0x4008e94	              0xc3	                                     ret	     16919	i386-dis.c	FUNCTION_67
OP_Monitor	CALL,3:WHILE,0:functions,0:DO,0:ELSE,1:IF,2:SWITCH,0:FOR,0	68
0x4008d56	              0x55	                                push rbp	     16884	i386-dis.c	FUNCTION_66
0x4008d57	          0x4889e5	                            mov rbp, rsp	     16884	i386-dis.c	FUNCTION_66
0x4008d5a	        0x4883ec20	                           sub rsp, 0x20	     16884	i386-dis.c	FUNCTION_66
0x4008d5e	          0x897dec	             mov dword [rbp - 0x14], edi	     16884	i386-dis.c	FUNCTION_66
0x4008d61	          0x8975e8	             mov dword [rbp - 0x18], esi	     16884	i386-dis.c	FUNCTION_66
0x4008d64	     0xfb605000000	           movzx eax, byte [0x04008d6b] 	     16886	i386-dis.c	FUNCTION_66	IF_1
0x4008d6b	            0x84c0	                             test al, al	     16886	i386-dis.c	FUNCTION_66	IF_1
0x4008d6d	     0xf85da000000	                           jne 0x4008e4d	     16886	i386-dis.c	FUNCTION_66	IF_1
0x4008d73	    0x8b0500000000	            mov eax, dword [0x04008d79] 	     16889	i386-dis.c	FUNCTION_66	IF_1
0x4008d79	          0x83f802	                              cmp eax, 2	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4008d7c	            0x7509	                           jne 0x4008d87	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4008d7e	    0x488b05000000	            mov rax, qword [0x04008d85] 	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4008d85	            0xeb07	                           jmp 0x4008d8e	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4008d87	    0x488b05000000	            mov rax, qword [0x04008d8e] 	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4008d8e	        0x488945f8	                mov qword [rbp - 8], rax	     16889	i386-dis.c	FUNCTION_66	IF_1
0x4008d92	    0x8b0500000000	            mov eax, dword [0x04008d98] 	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008d98	      0x2500040000	                          and eax, 0x400	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008d9d	            0x85c0	                           test eax, eax	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008d9f	            0x751d	                           jne 0x4008dbe	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008da1	    0x8b0500000000	            mov eax, dword [0x04008da7] 	     16893	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008da7	            0x85c0	                           test eax, eax	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008da9	            0x7509	                           jne 0x4008db4	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008dab	    0x488b05000000	            mov rax, qword [0x04008db2] 	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008db2	            0xeb04	                           jmp 0x4008db8	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008db4	        0x488b45f8	                mov rax, qword [rbp - 8]	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008db8	        0x488945f0	             mov qword [rbp - 0x10], rax	     16893	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008dbc	            0xeb41	                           jmp 0x4008dff	     16893	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4008dbe	    0x8b0500000000	            mov eax, dword [0x04008dc4] 	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008dc4	            0x4898	                                    cdqe	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008dc6	    0xc70485000000	                    mov dword [rax*4], 0	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008dd1	    0x8b0500000000	            mov eax, dword [0x04008dd7] 	     16899	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008dd7	          0x83f801	                              cmp eax, 1	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008dda	            0x7409	                            je 0x4008de5	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008ddc	    0x488b05000000	            mov rax, qword [0x04008de3] 	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008de3	            0xeb07	                           jmp 0x4008dec	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008de5	    0x488b05000000	            mov rax, qword [0x04008dec] 	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008dec	        0x488945f0	             mov qword [rbp - 0x10], rax	     16899	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008df0	    0x8b0500000000	            mov eax, dword [0x04008df6] 	     16901	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008df6	          0x80cc04	                                or ah, 4	     16901	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008df9	    0x890500000000	            mov dword [0x04008dff], eax 	     16901	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4008dff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     16903	i386-dis.c	FUNCTION_66	IF_1	CALL_1
0x4008e03	          0x488b00	                    mov rax, qword [rax]	     16903	i386-dis.c	FUNCTION_66	IF_1	CALL_1
0x4008e06	          0x4889c6	                            mov rsi, rax	     16903	i386-dis.c	FUNCTION_66	IF_1	CALL_1
0x4008e09	      0xbf00000000	                              mov edi, 0	     16903	i386-dis.c	FUNCTION_66	IF_1	CALL_1
0x4008e0e	      0xe800000000	                          call 0x4008e13	     16903	i386-dis.c	FUNCTION_66	IF_1	CALL_1
0x4008e13	        0x488b45f8	                mov rax, qword [rbp - 8]	     16904	i386-dis.c	FUNCTION_66	IF_1	CALL_2
0x4008e17	        0x4883c008	                              add rax, 8	     16904	i386-dis.c	FUNCTION_66	IF_1	CALL_2
0x4008e1b	          0x488b00	                    mov rax, qword [rax]	     16904	i386-dis.c	FUNCTION_66	IF_1	CALL_2
0x4008e1e	          0x4889c6	                            mov rsi, rax	     16904	i386-dis.c	FUNCTION_66	IF_1	CALL_2
0x4008e21	      0xbf00000000	                              mov edi, 0	     16904	i386-dis.c	FUNCTION_66	IF_1	CALL_2
0x4008e26	      0xe800000000	                          call 0x4008e2b	     16904	i386-dis.c	FUNCTION_66	IF_1	CALL_2
0x4008e2b	        0x488b45f8	                mov rax, qword [rbp - 8]	     16905	i386-dis.c	FUNCTION_66	IF_1	CALL_3
0x4008e2f	        0x4883c010	                           add rax, 0x10	     16905	i386-dis.c	FUNCTION_66	IF_1	CALL_3
0x4008e33	          0x488b00	                    mov rax, qword [rax]	     16905	i386-dis.c	FUNCTION_66	IF_1	CALL_3
0x4008e36	          0x4889c6	                            mov rsi, rax	     16905	i386-dis.c	FUNCTION_66	IF_1	CALL_3
0x4008e39	      0xbf00000000	                              mov edi, 0	     16905	i386-dis.c	FUNCTION_66	IF_1	CALL_3
0x4008e3e	      0xe800000000	                          call 0x4008e43	     16905	i386-dis.c	FUNCTION_66	IF_1	CALL_3
0x4008e43	    0xc70500000000	               mov dword [0x04008e4d], 1	     16906	i386-dis.c	FUNCTION_66	IF_1
0x4008e4d	     0xfb605000000	           movzx eax, byte [0x04008e54] 	     16909	i386-dis.c	FUNCTION_66
0x4008e54	            0x84c0	                             test al, al	     16909	i386-dis.c	FUNCTION_66
0x4008e56	            0x7505	                           jne 0x4008e5d	     16909	i386-dis.c	FUNCTION_66
0x4008e58	      0xe800000000	                          call 0x4008e5d	     16909	i386-dis.c	FUNCTION_66
0x4008e5d	    0x488b05000000	            mov rax, qword [0x04008e64] 	     16910	i386-dis.c	FUNCTION_66
0x4008e64	        0x4883c001	                              add rax, 1	     16910	i386-dis.c	FUNCTION_66
0x4008e68	    0x488905000000	            mov qword [0x04008e6f], rax 	     16910	i386-dis.c	FUNCTION_66
0x4008e6f	              0x90	                                     nop	     16911	i386-dis.c	FUNCTION_66
0x4008e70	              0xc9	                                   leave	     16911	i386-dis.c	FUNCTION_66
0x4008e71	              0xc3	                                     ret	     16911	i386-dis.c	FUNCTION_66
OP_EX_Vex	CALL,2:WHILE,0:functions,0:DO,0:ELSE,0:IF,2:SWITCH,0:FOR,0	21
0x4009e9d	              0x55	                                push rbp	     17571	i386-dis.c	FUNCTION_89
0x4009e9e	          0x4889e5	                            mov rbp, rsp	     17571	i386-dis.c	FUNCTION_89
0x4009ea1	        0x4883ec10	                           sub rsp, 0x10	     17571	i386-dis.c	FUNCTION_89
0x4009ea5	          0x897dfc	                mov dword [rbp - 4], edi	     17571	i386-dis.c	FUNCTION_89
0x4009ea8	          0x8975f8	                mov dword [rbp - 8], esi	     17571	i386-dis.c	FUNCTION_89
0x4009eab	    0x8b0500000000	            mov eax, dword [0x04009eb1] 	     17572	i386-dis.c	FUNCTION_89	IF_1
0x4009eb1	          0x83f803	                              cmp eax, 3	     17572	i386-dis.c	FUNCTION_89	IF_1
0x4009eb4	            0x7416	                            je 0x4009ecc	     17572	i386-dis.c	FUNCTION_89	IF_1
0x4009eb6	    0x8b0500000000	            mov eax, dword [0x04009ebc] 	     17574	i386-dis.c	FUNCTION_89	IF_1	IF_2
0x4009ebc	            0x85c0	                           test eax, eax	     17574	i386-dis.c	FUNCTION_89	IF_1	IF_2
0x4009ebe	            0x7405	                            je 0x4009ec5	     17574	i386-dis.c	FUNCTION_89	IF_1	IF_2
0x4009ec0	      0xe8adefffff	                          call sym.BadOp	     17575	i386-dis.c	FUNCTION_89	IF_1	CALL_1
0x4009ec5	    0xc60500000000	                mov byte [0x04009ecc], 0	     17576	i386-dis.c	FUNCTION_89	IF_1
0x4009ecc	          0x8b55f8	                mov edx, dword [rbp - 8]	     17578	i386-dis.c	FUNCTION_89	CALL_2
0x4009ecf	          0x8b45fc	                mov eax, dword [rbp - 4]	     17578	i386-dis.c	FUNCTION_89	CALL_2
0x4009ed2	            0x89d6	                            mov esi, edx	     17578	i386-dis.c	FUNCTION_89	CALL_2
0x4009ed4	            0x89c7	                            mov edi, eax	     17578	i386-dis.c	FUNCTION_89	CALL_2
0x4009ed6	      0xe894e7ffff	                          call sym.OP_EX	     17578	i386-dis.c	FUNCTION_89	CALL_2
0x4009edb	              0x90	                                     nop	     17579	i386-dis.c	FUNCTION_89
0x4009edc	              0xc9	                                   leave	     17579	i386-dis.c	FUNCTION_89
0x4009edd	              0xc3	                                     ret	     17579	i386-dis.c	FUNCTION_89
OP_MS	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,0:FOR,0	18
0x40088af	              0x55	                                push rbp	     16652	i386-dis.c	FUNCTION_56
0x40088b0	          0x4889e5	                            mov rbp, rsp	     16652	i386-dis.c	FUNCTION_56
0x40088b3	        0x4883ec10	                           sub rsp, 0x10	     16652	i386-dis.c	FUNCTION_56
0x40088b7	          0x897dfc	                mov dword [rbp - 4], edi	     16652	i386-dis.c	FUNCTION_56
0x40088ba	          0x8975f8	                mov dword [rbp - 8], esi	     16652	i386-dis.c	FUNCTION_56
0x40088bd	    0x8b0500000000	            mov eax, dword [0x040088c3] 	     16653	i386-dis.c	FUNCTION_56	IF_1
0x40088c3	          0x83f803	                              cmp eax, 3	     16653	i386-dis.c	FUNCTION_56	IF_1
0x40088c6	            0x7511	                           jne 0x40088d9	     16653	i386-dis.c	FUNCTION_56	IF_1
0x40088c8	          0x8b55f8	                mov edx, dword [rbp - 8]	     16654	i386-dis.c	FUNCTION_56	CALL_1
0x40088cb	          0x8b45fc	                mov eax, dword [rbp - 4]	     16654	i386-dis.c	FUNCTION_56	CALL_1
0x40088ce	            0x89d6	                            mov esi, edx	     16654	i386-dis.c	FUNCTION_56	CALL_1
0x40088d0	            0x89c7	                            mov edi, eax	     16654	i386-dis.c	FUNCTION_56	CALL_1
0x40088d2	      0xe828fbffff	                          call sym.OP_EM	     16654	i386-dis.c	FUNCTION_56	CALL_1
0x40088d7	            0xeb05	                           jmp 0x40088de	     16657	i386-dis.c	FUNCTION_56
0x40088d9	      0xe894050000	                          call sym.BadOp	     16656	i386-dis.c	FUNCTION_56	CALL_2
0x40088de	              0x90	                                     nop	     16657	i386-dis.c	FUNCTION_56
0x40088df	              0xc9	                                   leave	     16657	i386-dis.c	FUNCTION_56
0x40088e0	              0xc3	                                     ret	     16657	i386-dis.c	FUNCTION_56
OP_MMX	CALL,1:WHILE,0:functions,0:DO,0:ELSE,1:IF,2:SWITCH,0:FOR,0	45
0x40081d6	              0x55	                                push rbp	     16406	i386-dis.c	FUNCTION_50
0x40081d7	          0x4889e5	                            mov rbp, rsp	     16406	i386-dis.c	FUNCTION_50
0x40081da	        0x4883ec20	                           sub rsp, 0x20	     16406	i386-dis.c	FUNCTION_50
0x40081de	          0x897dec	             mov dword [rbp - 0x14], edi	     16406	i386-dis.c	FUNCTION_50
0x40081e1	          0x8975e8	             mov dword [rbp - 0x18], esi	     16406	i386-dis.c	FUNCTION_50
0x40081e4	    0x8b0500000000	            mov eax, dword [0x040081ea] 	     16407	i386-dis.c	FUNCTION_50
0x40081ea	          0x8945f4	              mov dword [rbp - 0xc], eax	     16407	i386-dis.c	FUNCTION_50
0x40081ed	    0x8b0500000000	            mov eax, dword [0x040081f3] 	     16410	i386-dis.c	FUNCTION_50
0x40081f3	      0x2500020000	                          and eax, 0x200	     16410	i386-dis.c	FUNCTION_50
0x40081f8	            0x89c2	                            mov edx, eax	     16410	i386-dis.c	FUNCTION_50
0x40081fa	    0x8b0500000000	            mov eax, dword [0x04008200] 	     16410	i386-dis.c	FUNCTION_50
0x4008200	             0x9d0	                             or eax, edx	     16410	i386-dis.c	FUNCTION_50
0x4008202	    0x890500000000	            mov dword [0x04008208], eax 	     16410	i386-dis.c	FUNCTION_50
0x4008208	    0x8b0500000000	            mov eax, dword [0x0400820e] 	     16411	i386-dis.c	FUNCTION_50	IF_1
0x400820e	      0x2500020000	                          and eax, 0x200	     16411	i386-dis.c	FUNCTION_50	IF_1
0x4008213	            0x85c0	                           test eax, eax	     16411	i386-dis.c	FUNCTION_50	IF_1
0x4008215	            0x743a	                            je 0x4008251	     16411	i386-dis.c	FUNCTION_50	IF_1
0x4008217	    0x488b05000000	            mov rax, qword [0x0400821e] 	     16413	i386-dis.c	FUNCTION_50	IF_1
0x400821e	        0x488945f8	                mov qword [rbp - 8], rax	     16413	i386-dis.c	FUNCTION_50	IF_1
0x4008222	    0x8b0500000000	            mov eax, dword [0x04008228] 	     16414	i386-dis.c	FUNCTION_50	IF_1
0x4008228	          0x83e004	                              and eax, 4	     16414	i386-dis.c	FUNCTION_50	IF_1
0x400822b	            0x85c0	                           test eax, eax	     16414	i386-dis.c	FUNCTION_50	IF_1
0x400822d	            0x740f	                            je 0x400823e	     16414	i386-dis.c	FUNCTION_50	IF_1
0x400822f	    0x8b0500000000	            mov eax, dword [0x04008235] 	     16414	i386-dis.c	FUNCTION_50	IF_1
0x4008235	          0x83c844	                            or eax, 0x44	     16414	i386-dis.c	FUNCTION_50	IF_1
0x4008238	    0x890500000000	            mov dword [0x0400823e], eax 	     16414	i386-dis.c	FUNCTION_50	IF_1
0x400823e	    0x8b0500000000	            mov eax, dword [0x04008244] 	     16415	i386-dis.c	FUNCTION_50	IF_1	IF_2
0x4008244	          0x83e004	                              and eax, 4	     16415	i386-dis.c	FUNCTION_50	IF_1	IF_2
0x4008247	            0x85c0	                           test eax, eax	     16415	i386-dis.c	FUNCTION_50	IF_1	IF_2
0x4008249	            0x7411	                            je 0x400825c	     16415	i386-dis.c	FUNCTION_50	IF_1	IF_2
0x400824b	        0x8345f408	                add dword [rbp - 0xc], 8	     16416	i386-dis.c	FUNCTION_50	IF_1	IF_2
0x400824f	            0xeb0b	                           jmp 0x400825c	     16416	i386-dis.c	FUNCTION_50	IF_1	IF_2
0x4008251	    0x488b05000000	            mov rax, qword [0x04008258] 	     16419	i386-dis.c	FUNCTION_50	ELSE_1
0x4008258	        0x488945f8	                mov qword [rbp - 8], rax	     16419	i386-dis.c	FUNCTION_50	ELSE_1
0x400825c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x400825f	            0x4898	                                    cdqe	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x4008261	    0x488d14c50000	                        lea rdx, [rax*8]	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x4008269	        0x488b45f8	                mov rax, qword [rbp - 8]	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x400826d	          0x4801d0	                            add rax, rdx	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x4008270	          0x488b00	                    mov rax, qword [rax]	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x4008273	          0x4889c7	                            mov rdi, rax	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x4008276	      0xe84ec8ffff	                        call sym.oappend	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x400827b	              0x90	                                     nop	     16421	i386-dis.c	FUNCTION_50
0x400827c	              0xc9	                                   leave	     16421	i386-dis.c	FUNCTION_50
0x400827d	              0xc3	                                     ret	     16421	i386-dis.c	FUNCTION_50
OP_3DNowSuffix	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,0:FOR,0	42
0x4008a2b	              0x55	                                push rbp	     16781	i386-dis.c	FUNCTION_62
0x4008a2c	          0x4889e5	                            mov rbp, rsp	     16781	i386-dis.c	FUNCTION_62
0x4008a2f	        0x4883ec20	                           sub rsp, 0x20	     16781	i386-dis.c	FUNCTION_62
0x4008a33	          0x897dec	             mov dword [rbp - 0x14], edi	     16781	i386-dis.c	FUNCTION_62
0x4008a36	          0x8975e8	             mov dword [rbp - 0x18], esi	     16781	i386-dis.c	FUNCTION_62
0x4008a39	    0x488b05000000	            mov rax, qword [0x04008a40] 	     16784	i386-dis.c	FUNCTION_62
0x4008a40	        0x488d5001	                      lea rdx, [rax + 1]	     16784	i386-dis.c	FUNCTION_62
0x4008a44	    0x488b05000000	            mov rax, qword [0x04008a4b] 	     16784	i386-dis.c	FUNCTION_62
0x4008a4b	        0x488b4068	            mov rax, qword [rax + 0x68] 	     16784	i386-dis.c	FUNCTION_62
0x4008a4f	          0x488b00	                    mov rax, qword [rax]	     16784	i386-dis.c	FUNCTION_62
0x4008a52	          0x4839c2	                            cmp rdx, rax	     16784	i386-dis.c	FUNCTION_62
0x4008a55	            0x761d	                           jbe 0x4008a74	     16784	i386-dis.c	FUNCTION_62
0x4008a57	    0x488b05000000	            mov rax, qword [0x04008a5e] 	     16784	i386-dis.c	FUNCTION_62
0x4008a5e	        0x488d5001	                      lea rdx, [rax + 1]	     16784	i386-dis.c	FUNCTION_62
0x4008a62	    0x488b05000000	            mov rax, qword [0x04008a69] 	     16784	i386-dis.c	FUNCTION_62
0x4008a69	          0x4889d6	                            mov rsi, rdx	     16784	i386-dis.c	FUNCTION_62
0x4008a6c	          0x4889c7	                            mov rdi, rax	     16784	i386-dis.c	FUNCTION_62
0x4008a6f	      0xe8cc75ffff	                     call sym.fetch_data	     16784	i386-dis.c	FUNCTION_62
0x4008a74	    0x488b05000000	            mov rax, qword [0x04008a7b] 	     16788	i386-dis.c	FUNCTION_62
0x4008a7b	    0x488905000000	            mov qword [0x04008a82], rax 	     16788	i386-dis.c	FUNCTION_62
0x4008a82	    0x488b05000000	            mov rax, qword [0x04008a89] 	     16789	i386-dis.c	FUNCTION_62
0x4008a89	        0x488d5001	                      lea rdx, [rax + 1]	     16789	i386-dis.c	FUNCTION_62
0x4008a8d	    0x488915000000	            mov qword [0x04008a94], rdx 	     16789	i386-dis.c	FUNCTION_62
0x4008a94	           0xfb600	                   movzx eax, byte [rax]	     16789	i386-dis.c	FUNCTION_62
0x4008a97	           0xfb6c0	                           movzx eax, al	     16789	i386-dis.c	FUNCTION_62
0x4008a9a	            0x4898	                                    cdqe	     16789	i386-dis.c	FUNCTION_62
0x4008a9c	    0x488b04c50000	                  mov rax, qword [rax*8]	     16789	i386-dis.c	FUNCTION_62
0x4008aa4	        0x488945f8	                mov qword [rbp - 8], rax	     16789	i386-dis.c	FUNCTION_62
0x4008aa8	      0x48837df800	                  cmp qword [rbp - 8], 0	     16790	i386-dis.c	FUNCTION_62	IF_1
0x4008aad	            0x740e	                            je 0x4008abd	     16790	i386-dis.c	FUNCTION_62	IF_1
0x4008aaf	        0x488b45f8	                mov rax, qword [rbp - 8]	     16791	i386-dis.c	FUNCTION_62	CALL_1
0x4008ab3	          0x4889c7	                            mov rdi, rax	     16791	i386-dis.c	FUNCTION_62	CALL_1
0x4008ab6	      0xe80ec0ffff	                        call sym.oappend	     16791	i386-dis.c	FUNCTION_62	CALL_1
0x4008abb	            0xeb13	                           jmp 0x4008ad0	     16791	i386-dis.c	FUNCTION_62	CALL_1
0x4008abd	    0xc60500000000	                mov byte [0x04008ac4], 0	     16798	i386-dis.c	FUNCTION_62	ELSE_1
0x4008ac4	    0xc60500000000	                mov byte [0x04008acb], 0	     16799	i386-dis.c	FUNCTION_62	ELSE_1
0x4008acb	      0xe8a2030000	                          call sym.BadOp	     16800	i386-dis.c	FUNCTION_62	ELSE_1	CALL_2
0x4008ad0	    0x488b05000000	            mov rax, qword [0x04008ad7] 	     16802	i386-dis.c	FUNCTION_62
0x4008ad7	    0x488905000000	            mov qword [0x04008ade], rax 	     16802	i386-dis.c	FUNCTION_62
0x4008ade	              0x90	                                     nop	     16803	i386-dis.c	FUNCTION_62
0x4008adf	              0xc9	                                   leave	     16803	i386-dis.c	FUNCTION_62
0x4008ae0	              0xc3	                                     ret	     16803	i386-dis.c	FUNCTION_62
dofloat	CALL,5:WHILE,0:functions,0:DO,0:ELSE,1:IF,5:SWITCH,0:FOR,0	124
0x40030cb	              0x55	                                push rbp	     13914	i386-dis.c	FUNCTION_13
0x40030cc	          0x4889e5	                            mov rbp, rsp	     13914	i386-dis.c	FUNCTION_13
0x40030cf	        0x4883ec20	                           sub rsp, 0x20	     13914	i386-dis.c	FUNCTION_13
0x40030d3	          0x897dec	             mov dword [rbp - 0x14], edi	     13914	i386-dis.c	FUNCTION_13
0x40030d6	    0x488b05000000	            mov rax, qword [0x040030dd] 	     13918	i386-dis.c	FUNCTION_13
0x40030dd	         0xfb640ff	               movzx eax, byte [rax - 1]	     13918	i386-dis.c	FUNCTION_13
0x40030e1	          0x8845f3	                mov byte [rbp - 0xd], al	     13918	i386-dis.c	FUNCTION_13
0x40030e4	    0x8b0500000000	            mov eax, dword [0x040030ea] 	     13920	i386-dis.c	FUNCTION_13	IF_1
0x40030ea	          0x83f803	                              cmp eax, 3	     13920	i386-dis.c	FUNCTION_13	IF_1
0x40030ed	            0x746a	                            je 0x4003159	     13920	i386-dis.c	FUNCTION_13	IF_1
0x40030ef	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	     13922	i386-dis.c	FUNCTION_13	IF_1
0x40030f3	      0x2dd8000000	                           sub eax, 0xd8	     13922	i386-dis.c	FUNCTION_13	IF_1
0x40030f8	    0x8d14c5000000	                        lea edx, [rax*8]	     13922	i386-dis.c	FUNCTION_13	IF_1
0x40030ff	    0x8b0500000000	            mov eax, dword [0x04003105] 	     13922	i386-dis.c	FUNCTION_13	IF_1
0x4003105	             0x1d0	                            add eax, edx	     13922	i386-dis.c	FUNCTION_13	IF_1
0x4003107	          0x8945f4	              mov dword [rbp - 0xc], eax	     13922	i386-dis.c	FUNCTION_13	IF_1
0x400310a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x400310d	            0x4898	                                    cdqe	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x400310f	    0x488b04c50000	                  mov rax, qword [rax*8]	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x4003117	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x400311a	            0x89d6	                            mov esi, edx	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x400311c	          0x4889c7	                            mov rdi, rax	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x400311f	      0xe814020000	                          call sym.putop	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x4003124	    0x48c705000000	               mov qword [0x0400312f], 0	     13925	i386-dis.c	FUNCTION_13	IF_1
0x400312f	    0xc70500000000	               mov dword [0x04003139], 2	     13926	i386-dis.c	FUNCTION_13	IF_1
0x4003139	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x400313c	            0x4898	                                    cdqe	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x400313e	     0xfb680000000	                   movzx eax, byte [rax]	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x4003145	           0xfb6c0	                           movzx eax, al	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x4003148	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x400314b	            0x89d6	                            mov esi, edx	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x400314d	            0x89c7	                            mov edi, eax	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x400314f	      0xe8d9350000	                           call sym.OP_E	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x4003154	      0xe962010000	                           jmp 0x40032bb	     13928	i386-dis.c	FUNCTION_13	IF_1
0x4003159	     0xfb605000000	           movzx eax, byte [0x04003160] 	     13931	i386-dis.c	FUNCTION_13
0x4003160	            0x84c0	                             test al, al	     13931	i386-dis.c	FUNCTION_13
0x4003162	            0x7505	                           jne 0x4003169	     13931	i386-dis.c	FUNCTION_13
0x4003164	      0xe800000000	                          call 0x4003169	     13931	i386-dis.c	FUNCTION_13
0x4003169	    0x488b05000000	            mov rax, qword [0x04003170] 	     13932	i386-dis.c	FUNCTION_13
0x4003170	        0x4883c001	                              add rax, 1	     13932	i386-dis.c	FUNCTION_13
0x4003174	    0x488905000000	            mov qword [0x0400317b], rax 	     13932	i386-dis.c	FUNCTION_13
0x400317b	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	     13934	i386-dis.c	FUNCTION_13
0x400317f	    0x8d8828ffffff	                   lea ecx, [rax - 0xd8]	     13934	i386-dis.c	FUNCTION_13
0x4003185	    0x8b0500000000	            mov eax, dword [0x0400318b] 	     13934	i386-dis.c	FUNCTION_13
0x400318b	            0x4898	                                    cdqe	     13934	i386-dis.c	FUNCTION_13
0x400318d	          0x4889c2	                            mov rdx, rax	     13934	i386-dis.c	FUNCTION_13
0x4003190	          0x4801d2	                            add rdx, rdx	     13934	i386-dis.c	FUNCTION_13
0x4003193	          0x4801c2	                            add rdx, rax	     13934	i386-dis.c	FUNCTION_13
0x4003196	          0x4889d0	                            mov rax, rdx	     13934	i386-dis.c	FUNCTION_13
0x4003199	        0x48c1e005	                              shl rax, 5	     13934	i386-dis.c	FUNCTION_13
0x400319d	          0x4889c2	                            mov rdx, rax	     13934	i386-dis.c	FUNCTION_13
0x40031a0	          0x4863c9	                         movsxd rcx, ecx	     13934	i386-dis.c	FUNCTION_13
0x40031a3	          0x4889c8	                            mov rax, rcx	     13934	i386-dis.c	FUNCTION_13
0x40031a6	          0x4801c0	                            add rax, rax	     13934	i386-dis.c	FUNCTION_13
0x40031a9	          0x4801c8	                            add rax, rcx	     13934	i386-dis.c	FUNCTION_13
0x40031ac	        0x48c1e008	                              shl rax, 8	     13934	i386-dis.c	FUNCTION_13
0x40031b0	          0x4801d0	                            add rax, rdx	     13934	i386-dis.c	FUNCTION_13
0x40031b3	    0x480500000000	                              add rax, 0	     13934	i386-dis.c	FUNCTION_13
0x40031b9	        0x488945f8	                mov qword [rbp - 8], rax	     13934	i386-dis.c	FUNCTION_13
0x40031bd	        0x488b45f8	                mov rax, qword [rbp - 8]	     13935	i386-dis.c	FUNCTION_13	IF_2
0x40031c1	          0x488b00	                    mov rax, qword [rax]	     13935	i386-dis.c	FUNCTION_13	IF_2
0x40031c4	          0x4885c0	                           test rax, rax	     13935	i386-dis.c	FUNCTION_13	IF_2
0x40031c7	            0x756a	                           jne 0x4003233	     13935	i386-dis.c	FUNCTION_13	IF_2
0x40031c9	        0x488b45f8	                mov rax, qword [rbp - 8]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031cd	          0x8b5010	            mov edx, dword [rax + 0x10] 	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031d0	    0x8b0500000000	            mov eax, dword [0x040031d6] 	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031d6	            0x4898	                                    cdqe	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031d8	          0x4863d2	                         movsxd rdx, edx	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031db	        0x48c1e203	                              shl rdx, 3	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031df	          0x4801d0	                            add rax, rdx	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031e2	    0x488b04c50000	                  mov rax, qword [rax*8]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031ea	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031ed	            0x89d6	                            mov esi, edx	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031ef	          0x4889c7	                            mov rdi, rax	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031f2	      0xe841010000	                          call sym.putop	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40031f7	        0x807df3df	              cmp byte [rbp - 0xd], 0xdf	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x40031fb	     0xf85ba000000	                           jne 0x40032bb	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4003201	    0x488b05000000	            mov rax, qword [0x04003208] 	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4003208	        0x4883e801	                              sub rax, 1	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x400320c	           0xfb600	                   movzx eax, byte [rax]	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x400320f	            0x3ce0	                            cmp al, 0xe0	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4003211	     0xf85a4000000	                           jne 0x40032bb	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4003217	    0x488b05000000	            mov rax, qword [0x0400321e] 	     13941	i386-dis.c	FUNCTION_13	IF_2	CALL_4
0x400321e	          0x488b00	                    mov rax, qword [rax]	     13941	i386-dis.c	FUNCTION_13	IF_2	CALL_4
0x4003221	          0x4889c6	                            mov rsi, rax	     13941	i386-dis.c	FUNCTION_13	IF_2	CALL_4
0x4003224	      0xbf00000000	                              mov edi, 0	     13941	i386-dis.c	FUNCTION_13	IF_2	CALL_4
0x4003229	      0xe800000000	                          call 0x400322e	     13941	i386-dis.c	FUNCTION_13	IF_2	CALL_4
0x400322e	      0xe988000000	                           jmp 0x40032bb	     13941	i386-dis.c	FUNCTION_13	IF_2	CALL_4
0x4003233	        0x488b45f8	                mov rax, qword [rbp - 8]	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x4003237	          0x488b00	                    mov rax, qword [rax]	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x400323a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x400323d	            0x89d6	                            mov esi, edx	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x400323f	          0x4889c7	                            mov rdi, rax	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x4003242	      0xe8f1000000	                          call sym.putop	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x4003247	    0x48c705000000	               mov qword [0x04003252], 0	     13947	i386-dis.c	FUNCTION_13	ELSE_1
0x4003252	    0xc70500000000	               mov dword [0x0400325c], 2	     13948	i386-dis.c	FUNCTION_13	ELSE_1
0x400325c	        0x488b45f8	                mov rax, qword [rbp - 8]	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x4003260	        0x488b4008	                mov rax, qword [rax + 8]	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x4003264	          0x4885c0	                           test rax, rax	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x4003267	            0x7418	                            je 0x4003281	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x4003269	        0x488b45f8	                mov rax, qword [rbp - 8]	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400326d	        0x488b4008	                mov rax, qword [rax + 8]	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x4003271	        0x488b55f8	                mov rdx, qword [rbp - 8]	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x4003275	          0x8b5210	            mov edx, dword [rdx + 0x10] 	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x4003278	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400327b	            0x89ce	                            mov esi, ecx	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400327d	            0x89d7	                            mov edi, edx	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400327f	            0xffd0	                                call rax	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x4003281	    0x48c705000000	               mov qword [0x0400328c], 0	     13952	i386-dis.c	FUNCTION_13	ELSE_1
0x400328c	    0xc70500000000	               mov dword [0x04003296], 1	     13953	i386-dis.c	FUNCTION_13	ELSE_1
0x4003296	        0x488b45f8	                mov rax, qword [rbp - 8]	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400329a	        0x488b4018	            mov rax, qword [rax + 0x18] 	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400329e	          0x4885c0	                           test rax, rax	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40032a1	            0x7418	                            je 0x40032bb	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40032a3	        0x488b45f8	                mov rax, qword [rbp - 8]	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40032a7	        0x488b4018	            mov rax, qword [rax + 0x18] 	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40032ab	        0x488b55f8	                mov rdx, qword [rbp - 8]	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40032af	          0x8b5220	            mov edx, dword [rdx + 0x20] 	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40032b2	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40032b5	            0x89ce	                            mov esi, ecx	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40032b7	            0x89d7	                            mov edi, edx	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40032b9	            0xffd0	                                call rax	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40032bb	              0xc9	                                   leave	     13957	i386-dis.c	FUNCTION_13
0x40032bc	              0xc3	                                     ret	     13957	i386-dis.c	FUNCTION_13
OP_EX_VexReg	CALL,3:WHILE,0:functions,0:DO,0:ELSE,1:IF,4:SWITCH,1:FOR,0	60
0x4009920	              0x55	                                push rbp	     17367	i386-dis.c	FUNCTION_81
0x4009921	          0x4889e5	                            mov rbp, rsp	     17367	i386-dis.c	FUNCTION_81
0x4009924	        0x4883ec20	                           sub rsp, 0x20	     17367	i386-dis.c	FUNCTION_81
0x4009928	          0x897dec	             mov dword [rbp - 0x14], edi	     17367	i386-dis.c	FUNCTION_81
0x400992b	          0x8975e8	             mov dword [rbp - 0x18], esi	     17367	i386-dis.c	FUNCTION_81
0x400992e	          0x8955e4	             mov dword [rbp - 0x1c], edx	     17367	i386-dis.c	FUNCTION_81
0x4009931	        0x837de4ff	cmp dword [rbp - 0x1c], 0xffffffffffffffff	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4009935	            0x751f	                           jne 0x4009956	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4009937	    0x8b0500000000	            mov eax, dword [0x0400993d] 	     17370	i386-dis.c	FUNCTION_81	IF_1
0x400993d	          0x83f803	                              cmp eax, 3	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4009940	            0x7414	                            je 0x4009956	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4009942	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     17372	i386-dis.c	FUNCTION_81	IF_1	CALL_1
0x4009945	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17372	i386-dis.c	FUNCTION_81	IF_1	CALL_1
0x4009948	            0x89d6	                            mov esi, edx	     17372	i386-dis.c	FUNCTION_81	IF_1	CALL_1
0x400994a	            0x89c7	                            mov edi, eax	     17372	i386-dis.c	FUNCTION_81	IF_1	CALL_1
0x400994c	      0xe8bcc0ffff	                    call sym.OP_E_memory	     17372	i386-dis.c	FUNCTION_81	IF_1	CALL_1
0x4009951	      0xe99f000000	                           jmp 0x40099f5	     17373	i386-dis.c	FUNCTION_81	IF_1
0x4009956	        0x837de4ff	cmp dword [rbp - 0x1c], 0xffffffffffffffff	     17377	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x400995a	            0x7536	                           jne 0x4009992	     17377	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x400995c	    0x8b0500000000	            mov eax, dword [0x04009962] 	     17379	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4009962	          0x8945e4	             mov dword [rbp - 0x1c], eax	     17379	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4009965	    0x8b0500000000	            mov eax, dword [0x0400996b] 	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x400996b	          0x83e001	                              and eax, 1	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x400996e	            0x85c0	                           test eax, eax	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4009970	            0x740f	                            je 0x4009981	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4009972	    0x8b0500000000	            mov eax, dword [0x04009978] 	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4009978	          0x83c841	                            or eax, 0x41	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x400997b	    0x890500000000	            mov dword [0x04009981], eax 	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4009981	    0x8b0500000000	            mov eax, dword [0x04009987] 	     17381	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x4009987	          0x83e001	                              and eax, 1	     17381	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x400998a	            0x85c0	                           test eax, eax	     17381	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x400998c	            0x7404	                            je 0x4009992	     17381	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x400998e	        0x8345e408	               add dword [rbp - 0x1c], 8	     17382	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x4009992	    0x8b0500000000	            mov eax, dword [0x04009998] 	     17384	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4009998	          0x83f802	                              cmp eax, 2	     17384	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x400999b	            0x7404	                            je 0x40099a1	     17384	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x400999d	        0x8365e407	               and dword [rbp - 0x1c], 7	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x40099a1	    0x8b0500000000	            mov eax, dword [0x040099a7] 	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099a7	      0x3d80000000	                           cmp eax, 0x80	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099ac	            0x7409	                            je 0x40099b7	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099ae	      0x3d00010000	                          cmp eax, 0x100	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099b3	            0x740f	                            je 0x40099c4	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099b5	            0xeb1a	                           jmp 0x40099d1	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099b7	    0x488b05000000	            mov rax, qword [0x040099be] 	     17391	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099be	        0x488945f8	                mov qword [rbp - 8], rax	     17391	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099c2	            0xeb12	                           jmp 0x40099d6	     17392	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099c4	    0x488b05000000	            mov rax, qword [0x040099cb] 	     17394	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099cb	        0x488945f8	                mov qword [rbp - 8], rax	     17394	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099cf	            0xeb05	                           jmp 0x40099d6	     17395	i386-dis.c	FUNCTION_81	SWITCH_1
0x40099d1	      0xe800000000	                          call 0x40099d6	     17397	i386-dis.c	FUNCTION_81	SWITCH_1	CALL_2
0x40099d6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x40099d9	            0x4898	                                    cdqe	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x40099db	    0x488d14c50000	                        lea rdx, [rax*8]	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x40099e3	        0x488b45f8	                mov rax, qword [rbp - 8]	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x40099e7	          0x4801d0	                            add rax, rdx	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x40099ea	          0x488b00	                    mov rax, qword [rax]	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x40099ed	          0x4889c7	                            mov rdi, rax	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x40099f0	      0xe8d4b0ffff	                        call sym.oappend	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x40099f5	              0xc9	                                   leave	     17400	i386-dis.c	FUNCTION_81
0x40099f6	              0xc3	                                     ret	     17400	i386-dis.c	FUNCTION_81
OP_I64	CALL,8:WHILE,0:functions,0:DO,0:ELSE,2:IF,3:SWITCH,1:FOR,0	102
0x40075ac	              0x55	                                push rbp	     16034	i386-dis.c	FUNCTION_36
0x40075ad	          0x4889e5	                            mov rbp, rsp	     16034	i386-dis.c	FUNCTION_36
0x40075b0	        0x4883ec20	                           sub rsp, 0x20	     16034	i386-dis.c	FUNCTION_36
0x40075b4	          0x897dec	             mov dword [rbp - 0x14], edi	     16034	i386-dis.c	FUNCTION_36
0x40075b7	          0x8975e8	             mov dword [rbp - 0x18], esi	     16034	i386-dis.c	FUNCTION_36
0x40075ba	    0x48c745f8ffff	 mov qword [rbp - 8], 0xffffffffffffffff	     16036	i386-dis.c	FUNCTION_36
0x40075c2	    0x8b0500000000	            mov eax, dword [0x040075c8] 	     16038	i386-dis.c	FUNCTION_36	IF_1
0x40075c8	          0x83f802	                              cmp eax, 2	     16038	i386-dis.c	FUNCTION_36	IF_1
0x40075cb	            0x7414	                            je 0x40075e1	     16038	i386-dis.c	FUNCTION_36	IF_1
0x40075cd	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     16040	i386-dis.c	FUNCTION_36	IF_1	CALL_1
0x40075d0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     16040	i386-dis.c	FUNCTION_36	IF_1	CALL_1
0x40075d3	            0x89d6	                            mov esi, edx	     16040	i386-dis.c	FUNCTION_36	IF_1	CALL_1
0x40075d5	            0x89c7	                            mov edi, eax	     16040	i386-dis.c	FUNCTION_36	IF_1	CALL_1
0x40075d7	      0xe81efeffff	                           call sym.OP_I	     16040	i386-dis.c	FUNCTION_36	IF_1	CALL_1
0x40075dc	      0xe967010000	                           jmp 0x4007748	     16041	i386-dis.c	FUNCTION_36	IF_1
0x40075e1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x40075e4	          0x83f804	                              cmp eax, 4	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x40075e7	            0x7476	                            je 0x400765f	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x40075e9	          0x83f807	                              cmp eax, 7	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x40075ec	     0xf84ef000000	                            je 0x40076e1	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x40075f2	          0x83f801	                              cmp eax, 1	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x40075f5	     0xf85fb000000	                           jne 0x40076f6	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x40075fb	    0x488b05000000	            mov rax, qword [0x04007602] 	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007602	        0x488d5001	                      lea rdx, [rax + 1]	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007606	    0x488b05000000	            mov rax, qword [0x0400760d] 	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x400760d	        0x488b4068	            mov rax, qword [rax + 0x68] 	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007611	          0x488b00	                    mov rax, qword [rax]	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007614	          0x4839c2	                            cmp rdx, rax	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007617	            0x761d	                           jbe 0x4007636	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007619	    0x488b05000000	            mov rax, qword [0x04007620] 	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007620	        0x488d5001	                      lea rdx, [rax + 1]	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007624	    0x488b05000000	            mov rax, qword [0x0400762b] 	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x400762b	          0x4889d6	                            mov rsi, rdx	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x400762e	          0x4889c7	                            mov rdi, rax	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007631	      0xe80a8affff	                     call sym.fetch_data	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007636	    0x488b05000000	            mov rax, qword [0x0400763d] 	     16048	i386-dis.c	FUNCTION_36	SWITCH_1
0x400763d	        0x488d5001	                      lea rdx, [rax + 1]	     16048	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007641	    0x488915000000	            mov qword [0x04007648], rdx 	     16048	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007648	           0xfb600	                   movzx eax, byte [rax]	     16048	i386-dis.c	FUNCTION_36	SWITCH_1
0x400764b	           0xfb6c0	                           movzx eax, al	     16048	i386-dis.c	FUNCTION_36	SWITCH_1
0x400764e	        0x488945f0	             mov qword [rbp - 0x10], rax	     16048	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007652	    0x48c745f8ff00	               mov qword [rbp - 8], 0xff	     16049	i386-dis.c	FUNCTION_36	SWITCH_1
0x400765a	      0xe9b0000000	                           jmp 0x400770f	     16050	i386-dis.c	FUNCTION_36	SWITCH_1
0x400765f	    0x8b0500000000	            mov eax, dword [0x04007665] 	     16052	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007665	          0x83e008	                              and eax, 8	     16052	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007668	            0x85c0	                           test eax, eax	     16052	i386-dis.c	FUNCTION_36	SWITCH_1
0x400766a	            0x740f	                            je 0x400767b	     16052	i386-dis.c	FUNCTION_36	SWITCH_1
0x400766c	    0x8b0500000000	            mov eax, dword [0x04007672] 	     16052	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007672	          0x83c848	                            or eax, 0x48	     16052	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007675	    0x890500000000	            mov dword [0x0400767b], eax 	     16052	i386-dis.c	FUNCTION_36	SWITCH_1
0x400767b	    0x8b0500000000	            mov eax, dword [0x04007681] 	     16053	i386-dis.c	FUNCTION_36	SWITCH_1	IF_2
0x4007681	          0x83e008	                              and eax, 8	     16053	i386-dis.c	FUNCTION_36	SWITCH_1	IF_2
0x4007684	            0x85c0	                           test eax, eax	     16053	i386-dis.c	FUNCTION_36	SWITCH_1	IF_2
0x4007686	            0x740b	                            je 0x4007693	     16053	i386-dis.c	FUNCTION_36	SWITCH_1	IF_2
0x4007688	      0xe8d3f4ffff	                          call sym.get64	     16054	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_2
0x400768d	        0x488945f0	             mov qword [rbp - 0x10], rax	     16054	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_2
0x4007691	            0xeb7c	                           jmp 0x400770f	     16069	i386-dis.c	FUNCTION_36	SWITCH_1
0x4007693	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16057	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x4007696	          0x83e001	                              and eax, 1	     16057	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x4007699	            0x85c0	                           test eax, eax	     16057	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x400769b	            0x7414	                            je 0x40076b1	     16057	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x400769d	      0xe802f6ffff	                          call sym.get32	     16059	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3	CALL_3
0x40076a2	        0x488945f0	             mov qword [rbp - 0x10], rax	     16059	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3	CALL_3
0x40076a6	      0xb8ffffffff	                     mov eax, 0xffffffff	     16060	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x40076ab	        0x488945f8	                mov qword [rbp - 8], rax	     16060	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x40076af	            0xeb13	                           jmp 0x40076c4	     16060	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x40076b1	      0xe89bf7ffff	                          call sym.get16	     16064	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x40076b6	            0x4898	                                    cdqe	     16064	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x40076b8	        0x488945f0	             mov qword [rbp - 0x10], rax	     16064	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x40076bc	    0x48c745f8ffff	            mov qword [rbp - 8], 0xfffff	     16065	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	ELSE_2
0x40076c4	    0x8b0500000000	            mov eax, dword [0x040076ca] 	     16067	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1
0x40076ca	      0x2500020000	                          and eax, 0x200	     16067	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1
0x40076cf	            0x89c2	                            mov edx, eax	     16067	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1
0x40076d1	    0x8b0500000000	            mov eax, dword [0x040076d7] 	     16067	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1
0x40076d7	             0x9d0	                             or eax, edx	     16067	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1
0x40076d9	    0x890500000000	            mov dword [0x040076df], eax 	     16067	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1
0x40076df	            0xeb2e	                           jmp 0x400770f	     16069	i386-dis.c	FUNCTION_36	SWITCH_1
0x40076e1	    0x48c745f8ffff	            mov qword [rbp - 8], 0xfffff	     16071	i386-dis.c	FUNCTION_36	SWITCH_1
0x40076e9	      0xe863f7ffff	                          call sym.get16	     16072	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_5
0x40076ee	            0x4898	                                    cdqe	     16072	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_5
0x40076f0	        0x488945f0	             mov qword [rbp - 0x10], rax	     16072	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_5
0x40076f4	            0xeb19	                           jmp 0x400770f	     16073	i386-dis.c	FUNCTION_36	SWITCH_1
0x40076f6	      0xbe00000000	                              mov esi, 0	     16075	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_6
0x40076fb	      0xbf00000000	                              mov edi, 0	     16075	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_6
0x4007700	      0xe800000000	                          call 0x4007705	     16075	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_6
0x4007705	          0x4889c7	                            mov rdi, rax	     16075	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_6
0x4007708	      0xe8bcd3ffff	                        call sym.oappend	     16075	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_6
0x400770d	            0xeb39	                           jmp 0x4007748	     16076	i386-dis.c	FUNCTION_36	SWITCH_1
0x400770f	        0x488b45f8	                mov rax, qword [rbp - 8]	     16079	i386-dis.c	FUNCTION_36
0x4007713	        0x482145f0	             and qword [rbp - 0x10], rax	     16079	i386-dis.c	FUNCTION_36
0x4007717	    0xc60500000000	            mov byte [0x0400771e], 0x24 	     16080	i386-dis.c	FUNCTION_36
0x400771e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     16081	i386-dis.c	FUNCTION_36	CALL_7
0x4007722	      0xb900000000	                              mov ecx, 0	     16081	i386-dis.c	FUNCTION_36	CALL_7
0x4007727	          0x4889c2	                            mov rdx, rax	     16081	i386-dis.c	FUNCTION_36	CALL_7
0x400772a	      0xbe01000000	                              mov esi, 1	     16081	i386-dis.c	FUNCTION_36	CALL_7
0x400772f	          0x4889cf	                            mov rdi, rcx	     16081	i386-dis.c	FUNCTION_36	CALL_7
0x4007732	      0xe895d4ffff	            call sym.print_operand_value	     16081	i386-dis.c	FUNCTION_36	CALL_7
0x4007737	      0xbf00000000	                              mov edi, 0	     16082	i386-dis.c	FUNCTION_36	CALL_8
0x400773c	      0xe87cbbffff	            call sym.oappend_maybe_intel	     16082	i386-dis.c	FUNCTION_36	CALL_8
0x4007741	    0xc60500000000	                mov byte [0x04007748], 0	     16083	i386-dis.c	FUNCTION_36
0x4007748	              0xc9	                                   leave	     16084	i386-dis.c	FUNCTION_36
0x4007749	              0xc3	                                     ret	     16084	i386-dis.c	FUNCTION_36
OP_Vex_2src_1	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,3:SWITCH,0:FOR,0	40
0x4009be7	              0x55	                                push rbp	     17468	i386-dis.c	FUNCTION_84
0x4009be8	          0x4889e5	                            mov rbp, rsp	     17468	i386-dis.c	FUNCTION_84
0x4009beb	        0x4883ec20	                           sub rsp, 0x20	     17468	i386-dis.c	FUNCTION_84
0x4009bef	          0x897dec	             mov dword [rbp - 0x14], edi	     17468	i386-dis.c	FUNCTION_84
0x4009bf2	          0x8975e8	             mov dword [rbp - 0x18], esi	     17468	i386-dis.c	FUNCTION_84
0x4009bf5	    0x8b0500000000	            mov eax, dword [0x04009bfb] 	     17469	i386-dis.c	FUNCTION_84	IF_1
0x4009bfb	          0x83f803	                              cmp eax, 3	     17469	i386-dis.c	FUNCTION_84	IF_1
0x4009bfe	            0x7522	                           jne 0x4009c22	     17469	i386-dis.c	FUNCTION_84	IF_1
0x4009c00	     0xfb605000000	           movzx eax, byte [0x04009c07] 	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4009c07	            0x84c0	                             test al, al	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4009c09	            0x7505	                           jne 0x4009c10	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4009c0b	      0xe800000000	                          call 0x4009c10	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4009c10	    0x488b05000000	            mov rax, qword [0x04009c17] 	     17473	i386-dis.c	FUNCTION_84	IF_1
0x4009c17	        0x4883c001	                              add rax, 1	     17473	i386-dis.c	FUNCTION_84	IF_1
0x4009c1b	    0x488905000000	            mov qword [0x04009c22], rax 	     17473	i386-dis.c	FUNCTION_84	IF_1
0x4009c22	    0x8b0500000000	            mov eax, dword [0x04009c28] 	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4009c28	            0x85c0	                           test eax, eax	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4009c2a	            0x7436	                            je 0x4009c62	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4009c2c	    0x8b0500000000	            mov eax, dword [0x04009c32] 	     17478	i386-dis.c	FUNCTION_84	IF_2
0x4009c32	          0x8945fc	                mov dword [rbp - 4], eax	     17478	i386-dis.c	FUNCTION_84	IF_2
0x4009c35	    0x8b0500000000	            mov eax, dword [0x04009c3b] 	     17480	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4009c3b	          0x83f802	                              cmp eax, 2	     17480	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4009c3e	            0x7404	                            je 0x4009c44	     17480	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4009c40	        0x8365fc07	                  and dword [rbp - 4], 7	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4009c44	    0x488b05000000	            mov rax, qword [0x04009c4b] 	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4009c4b	          0x8b55fc	                mov edx, dword [rbp - 4]	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4009c4e	        0x48c1e203	                              shl rdx, 3	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4009c52	          0x4801d0	                            add rax, rdx	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4009c55	          0x488b00	                    mov rax, qword [rax]	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4009c58	          0x4889c7	                            mov rdi, rax	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4009c5b	      0xe869aeffff	                        call sym.oappend	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4009c60	            0xeb0f	                           jmp 0x4009c71	     17486	i386-dis.c	FUNCTION_84
0x4009c62	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     17485	i386-dis.c	FUNCTION_84	CALL_2
0x4009c65	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17485	i386-dis.c	FUNCTION_84	CALL_2
0x4009c68	            0x89d6	                            mov esi, edx	     17485	i386-dis.c	FUNCTION_84	CALL_2
0x4009c6a	            0x89c7	                            mov edi, eax	     17485	i386-dis.c	FUNCTION_84	CALL_2
0x4009c6c	      0xe8a4feffff	                    call sym.OP_Vex_2src	     17485	i386-dis.c	FUNCTION_84	CALL_2
0x4009c71	              0x90	                                     nop	     17486	i386-dis.c	FUNCTION_84
0x4009c72	              0xc9	                                   leave	     17486	i386-dis.c	FUNCTION_84
0x4009c73	              0xc3	                                     ret	     17486	i386-dis.c	FUNCTION_84
print_operand_value	CALL,7:WHILE,1:functions,0:DO,0:ELSE,3:IF,6:SWITCH,0:FOR,1	147
0x4004bcc	              0x55	                                push rbp	     14623	i386-dis.c	FUNCTION_21
0x4004bcd	          0x4889e5	                            mov rbp, rsp	     14623	i386-dis.c	FUNCTION_21
0x4004bd0	        0x4883ec60	                           sub rsp, 0x60	     14623	i386-dis.c	FUNCTION_21
0x4004bd4	        0x48897db8	             mov qword [rbp - 0x48], rdi	     14623	i386-dis.c	FUNCTION_21
0x4004bd8	          0x8975b4	             mov dword [rbp - 0x4c], esi	     14623	i386-dis.c	FUNCTION_21
0x4004bdb	        0x488955a8	             mov qword [rbp - 0x58], rdx	     14623	i386-dis.c	FUNCTION_21
0x4004bdf	    0x64488b042528	                mov rax, qword fs:[0x28]	     14623	i386-dis.c	FUNCTION_21
0x4004be8	        0x488945f8	                mov qword [rbp - 8], rax	     14623	i386-dis.c	FUNCTION_21
0x4004bec	            0x31c0	                            xor eax, eax	     14623	i386-dis.c	FUNCTION_21
0x4004bee	    0x8b0500000000	            mov eax, dword [0x04004bf4] 	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004bf4	          0x83f802	                              cmp eax, 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004bf7	     0xf85aa010000	                           jne 0x4004da7	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004bfd	        0x837db400	               cmp dword [rbp - 0x4c], 0	     14626	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004c01	            0x747c	                            je 0x4004c7f	     14626	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004c03	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004c07	          0xc60030	                    mov byte [rax], 0x30	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004c0a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004c0e	        0x4883c001	                              add rax, 1	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004c12	          0xc60078	                    mov byte [rax], 0x78	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004c15	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	     14632	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4004c19	        0x488d45d0	                   lea rax, [rbp - 0x30]	     14632	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4004c1d	      0xbe00000000	                              mov esi, 0	     14632	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4004c22	          0x4889c7	                            mov rdi, rax	     14632	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4004c25	      0xb800000000	                              mov eax, 0	     14632	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4004c2a	      0xe800000000	                          call 0x4004c2f	     14632	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4004c2f	    0xc745c0000000	               mov dword [rbp - 0x40], 0	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c36	            0xeb04	                           jmp 0x4004c3c	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c38	        0x8345c001	               add dword [rbp - 0x40], 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c3c	          0x8b45c0	             mov eax, dword [rbp - 0x40]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c3f	            0x4898	                                    cdqe	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c41	       0xfb64405d0	      movzx eax, byte [rbp + rax - 0x30]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c46	            0x3c30	                            cmp al, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c48	            0x7511	                           jne 0x4004c5b	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c4a	          0x8b45c0	             mov eax, dword [rbp - 0x40]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c4d	          0x83c001	                              add eax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c50	            0x4898	                                    cdqe	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c52	       0xfb64405d0	      movzx eax, byte [rbp + rax - 0x30]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c57	            0x84c0	                             test al, al	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c59	            0x75dd	                           jne 0x4004c38	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004c5b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	     14634	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4004c5e	            0x4898	                                    cdqe	     14634	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4004c60	        0x488d55d0	                   lea rdx, [rbp - 0x30]	     14634	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4004c64	          0x4801c2	                            add rdx, rax	     14634	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4004c67	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14634	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4004c6b	        0x4883c002	                              add rax, 2	     14634	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4004c6f	          0x4889d6	                            mov rsi, rdx	     14634	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4004c72	          0x4889c7	                            mov rdi, rax	     14634	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4004c75	      0xe800000000	                          call 0x4004c7a	     14634	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4004c7a	      0xe968010000	                           jmp 0x4004de7	     14634	i386-dis.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4004c7f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     14638	i386-dis.c	FUNCTION_21	IF_1	ELSE_1
0x4004c83	        0x488945c8	             mov qword [rbp - 0x38], rax	     14638	i386-dis.c	FUNCTION_21	IF_1	ELSE_1
0x4004c87	      0x48837dc800	               cmp qword [rbp - 0x38], 0	     14641	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4004c8c	            0x794c	                           jns 0x4004cda	     14641	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4004c8e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14643	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4004c92	        0x488d5001	                      lea rdx, [rax + 1]	     14643	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4004c96	        0x488955b8	             mov qword [rbp - 0x48], rdx	     14643	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4004c9a	          0xc6002d	                    mov byte [rax], 0x2d	     14643	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4004c9d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     14644	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4004ca1	          0x48f7d8	                                 neg rax	     14644	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4004ca4	        0x488945c8	             mov qword [rbp - 0x38], rax	     14644	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4004ca8	      0x48837dc800	               cmp qword [rbp - 0x38], 0	     14646	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3	IF_4
0x4004cad	            0x792b	                           jns 0x4004cda	     14646	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3	IF_4
0x4004caf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14648	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3	IF_4	CALL_3
0x4004cb3	    0x48bf39323233	          movabs rdi, 0x3032373333323239	     14648	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3	IF_4	CALL_3
0x4004cbd	          0x488938	                    mov qword [rax], rdi	     14648	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3	IF_4	CALL_3
0x4004cc0	    0x48be33363835	          movabs rsi, 0x3537373435383633	     14648	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3	IF_4	CALL_3
0x4004cca	        0x48897008	                mov qword [rax + 8], rsi	     14648	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3	IF_4	CALL_3
0x4004cce	    0xc74010383038	       mov dword [rax + 0x10], 0x383038 	     14648	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3	IF_4	CALL_3
0x4004cd5	      0xe90d010000	                           jmp 0x4004de7	     14649	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3	IF_4
0x4004cda	      0x48837dc800	               cmp qword [rbp - 0x38], 0	     14652	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_5
0x4004cdf	            0x750f	                           jne 0x4004cf0	     14652	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_5
0x4004ce1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14654	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_5	CALL_4
0x4004ce5	      0x66c7003000	                    mov word [rax], 0x30	     14654	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_5	CALL_4
0x4004cea	              0x90	                                     nop	     14655	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_5
0x4004ceb	      0xe9f7000000	                           jmp 0x4004de7	     14655	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_5
0x4004cf0	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	     14658	i386-dis.c	FUNCTION_21	IF_1	ELSE_1
0x4004cf7	        0xc645ed00	                mov byte [rbp - 0x13], 0	     14659	i386-dis.c	FUNCTION_21	IF_1	ELSE_1
0x4004cfb	            0xeb7a	                           jmp 0x4004d77	     14660	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004cfd	      0xb81c000000	                           mov eax, 0x1c	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d02	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d05	            0x89c6	                            mov esi, eax	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d07	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d0b	    0x48ba67666666	          movabs rdx, 0x6666666666666667	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d15	          0x4889c8	                            mov rax, rcx	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d18	          0x48f7ea	                                imul rdx	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d1b	        0x48c1fa02	                              sar rdx, 2	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d1f	          0x4889c8	                            mov rax, rcx	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d22	        0x48c1f83f	                           sar rax, 0x3f	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d26	          0x4829c2	                            sub rdx, rax	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d29	          0x4889d0	                            mov rax, rdx	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d2c	        0x48c1e002	                              shl rax, 2	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d30	          0x4801d0	                            add rax, rdx	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d33	          0x4801c0	                            add rax, rax	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d36	          0x4829c1	                            sub rcx, rax	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d39	          0x4889ca	                            mov rdx, rcx	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d3c	            0x89d0	                            mov eax, edx	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d3e	          0x83c030	                           add eax, 0x30	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d41	            0x89c2	                            mov edx, eax	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d43	          0x4863c6	                         movsxd rax, esi	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d46	        0x885405d0	         mov byte [rbp + rax - 0x30], dl	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d4a	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	     14663	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d4e	    0x48ba67666666	          movabs rdx, 0x6666666666666667	     14663	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d58	          0x4889c8	                            mov rax, rcx	     14663	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d5b	          0x48f7ea	                                imul rdx	     14663	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d5e	        0x48c1fa02	                              sar rdx, 2	     14663	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d62	          0x4889c8	                            mov rax, rcx	     14663	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d65	        0x48c1f83f	                           sar rax, 0x3f	     14663	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d69	          0x4829c2	                            sub rdx, rax	     14663	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d6c	          0x4889d0	                            mov rax, rdx	     14663	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d6f	        0x488945c8	             mov qword [rbp - 0x38], rax	     14663	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d73	        0x8345c401	               add dword [rbp - 0x3c], 1	     14664	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d77	      0x48837dc800	               cmp qword [rbp - 0x38], 0	     14660	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d7c	     0xf857bffffff	                           jne 0x4004cfd	     14660	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4004d82	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14666	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	CALL_5
0x4004d85	            0x4898	                                    cdqe	     14666	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	CALL_5
0x4004d87	      0xba1d000000	                           mov edx, 0x1d	     14666	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	CALL_5
0x4004d8c	          0x4829c2	                            sub rdx, rax	     14666	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	CALL_5
0x4004d8f	        0x488d45d0	                   lea rax, [rbp - 0x30]	     14666	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	CALL_5
0x4004d93	          0x4801c2	                            add rdx, rax	     14666	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	CALL_5
0x4004d96	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14666	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	CALL_5
0x4004d9a	          0x4889d6	                            mov rsi, rdx	     14666	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	CALL_5
0x4004d9d	          0x4889c7	                            mov rdi, rax	     14666	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	CALL_5
0x4004da0	      0xe800000000	                          call 0x4004da5	     14666	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	CALL_5
0x4004da5	            0xeb40	                           jmp 0x4004de7	     14666	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	CALL_5
0x4004da7	        0x837db400	               cmp dword [rbp - 0x4c], 0	     14671	i386-dis.c	FUNCTION_21	ELSE_2	IF_6
0x4004dab	            0x741e	                            je 0x4004dcb	     14671	i386-dis.c	FUNCTION_21	ELSE_2	IF_6
0x4004dad	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     14672	i386-dis.c	FUNCTION_21	ELSE_2	CALL_6
0x4004db1	            0x89c2	                            mov edx, eax	     14672	i386-dis.c	FUNCTION_21	ELSE_2	CALL_6
0x4004db3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14672	i386-dis.c	FUNCTION_21	ELSE_2	CALL_6
0x4004db7	      0xbe00000000	                              mov esi, 0	     14672	i386-dis.c	FUNCTION_21	ELSE_2	CALL_6
0x4004dbc	          0x4889c7	                            mov rdi, rax	     14672	i386-dis.c	FUNCTION_21	ELSE_2	CALL_6
0x4004dbf	      0xb800000000	                              mov eax, 0	     14672	i386-dis.c	FUNCTION_21	ELSE_2	CALL_6
0x4004dc4	      0xe800000000	                          call 0x4004dc9	     14672	i386-dis.c	FUNCTION_21	ELSE_2	CALL_6
0x4004dc9	            0xeb1c	                           jmp 0x4004de7	     14672	i386-dis.c	FUNCTION_21	ELSE_2	CALL_6
0x4004dcb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     14674	i386-dis.c	FUNCTION_21	ELSE_2	CALL_7
0x4004dcf	            0x89c2	                            mov edx, eax	     14674	i386-dis.c	FUNCTION_21	ELSE_2	CALL_7
0x4004dd1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14674	i386-dis.c	FUNCTION_21	ELSE_2	CALL_7
0x4004dd5	      0xbe00000000	                              mov esi, 0	     14674	i386-dis.c	FUNCTION_21	ELSE_2	CALL_7
0x4004dda	          0x4889c7	                            mov rdi, rax	     14674	i386-dis.c	FUNCTION_21	ELSE_2	CALL_7
0x4004ddd	      0xb800000000	                              mov eax, 0	     14674	i386-dis.c	FUNCTION_21	ELSE_2	CALL_7
0x4004de2	      0xe800000000	                          call 0x4004de7	     14674	i386-dis.c	FUNCTION_21	ELSE_2	CALL_7
0x4004de7	        0x488b45f8	                mov rax, qword [rbp - 8]	     14676	i386-dis.c	FUNCTION_21
0x4004deb	    0x644833042528	                xor rax, qword fs:[0x28]	     14676	i386-dis.c	FUNCTION_21
0x4004df4	            0x7405	                            je 0x4004dfb	     14676	i386-dis.c	FUNCTION_21
0x4004df6	      0xe800000000	                          call 0x4004dfb	     14676	i386-dis.c	FUNCTION_21
0x4004dfb	              0xc9	                                   leave	     14676	i386-dis.c	FUNCTION_21
0x4004dfc	              0xc3	                                     ret	     14676	i386-dis.c	FUNCTION_21
OP_E_memory	CALL,47:WHILE,0:functions,0:DO,0:ELSE,15:IF,54:SWITCH,8:FOR,0	842
0x4005a0d	              0x55	                                push rbp	     15211	i386-dis.c	FUNCTION_25
0x4005a0e	          0x4889e5	                            mov rbp, rsp	     15211	i386-dis.c	FUNCTION_25
0x4005a11	        0x4883ec60	                           sub rsp, 0x60	     15211	i386-dis.c	FUNCTION_25
0x4005a15	          0x897dac	             mov dword [rbp - 0x54], edi	     15211	i386-dis.c	FUNCTION_25
0x4005a18	          0x8975a8	             mov dword [rbp - 0x58], esi	     15211	i386-dis.c	FUNCTION_25
0x4005a1b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     15212	i386-dis.c	FUNCTION_25
0x4005a23	    0x8b0500000000	            mov eax, dword [0x04005a29] 	     15213	i386-dis.c	FUNCTION_25
0x4005a29	          0x83e001	                              and eax, 1	     15213	i386-dis.c	FUNCTION_25
0x4005a2c	            0x85c0	                           test eax, eax	     15213	i386-dis.c	FUNCTION_25
0x4005a2e	            0x7407	                            je 0x4005a37	     15213	i386-dis.c	FUNCTION_25
0x4005a30	      0xb808000000	                              mov eax, 8	     15213	i386-dis.c	FUNCTION_25
0x4005a35	            0xeb05	                           jmp 0x4005a3c	     15213	i386-dis.c	FUNCTION_25
0x4005a37	      0xb800000000	                              mov eax, 0	     15213	i386-dis.c	FUNCTION_25
0x4005a3c	          0x8945d4	             mov dword [rbp - 0x2c], eax	     15213	i386-dis.c	FUNCTION_25
0x4005a3f	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	     15214	i386-dis.c	FUNCTION_25
0x4005a46	    0x8b0500000000	            mov eax, dword [0x04005a4c] 	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4005a4c	            0x85c0	                           test eax, eax	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4005a4e	     0xf8461010000	                            je 0x4005bb5	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4005a54	    0x8b0500000000	            mov eax, dword [0x04005a5a] 	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005a5a	            0x85c0	                           test eax, eax	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005a5c	            0x741c	                            je 0x4005a7a	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005a5e	        0x837dac0d	            cmp dword [rbp - 0x54], 0xd 	     15221	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005a62	            0x7416	                            je 0x4005a7a	     15221	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005a64	        0x837dac12	           cmp dword [rbp - 0x54], 0x12 	     15222	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005a68	            0x7410	                            je 0x4005a7a	     15222	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005a6a	        0x837dac13	           cmp dword [rbp - 0x54], 0x13 	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005a6e	            0x740a	                            je 0x4005a7a	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005a70	      0xe8fd330000	                          call sym.BadOp	     15225	i386-dis.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4005a75	      0xe9b10c0000	                           jmp 0x400672b	     15226	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005a7a	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005a7d	          0x83e808	                              sub eax, 8	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005a80	          0x83f837	                           cmp eax, 0x37	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005a83	     0xf87da000000	                            ja 0x4005b63	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005a89	            0x89c0	                            mov eax, eax	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005a8b	    0x488b04c50000	                  mov rax, qword [rax*8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005a93	            0xffe0	                                 jmp rax	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005a95	    0xc745b8010000	               mov dword [rbp - 0x48], 1	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005a9c	      0xe9c7000000	                           jmp 0x4005b68	     15233	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005aa1	    0xc745b8000000	               mov dword [rbp - 0x48], 0	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005aa8	      0xe9bb000000	                           jmp 0x4005b68	     15237	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005aad	    0x8b0500000000	            mov eax, dword [0x04005ab3] 	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005ab3	            0x85c0	                           test eax, eax	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005ab5	            0x7407	                            je 0x4005abe	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005ab7	      0xb803000000	                              mov eax, 3	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005abc	            0xeb05	                           jmp 0x4005ac3	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005abe	      0xb802000000	                              mov eax, 2	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005ac3	          0x8945b8	             mov dword [rbp - 0x48], eax	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005ac6	      0xe99d000000	                           jmp 0x4005b68	     15245	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005acb	    0x8b0500000000	            mov eax, dword [0x04005ad1] 	     15249	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005ad1	            0x85c0	                           test eax, eax	     15249	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005ad3	            0x741b	                            je 0x4005af0	     15249	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005ad5	    0x8b0500000000	            mov eax, dword [0x04005adb] 	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005adb	            0x85c0	                           test eax, eax	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005add	            0x7407	                            je 0x4005ae6	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005adf	      0xb803000000	                              mov eax, 3	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005ae4	            0xeb05	                           jmp 0x4005aeb	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005ae6	      0xb802000000	                              mov eax, 2	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005aeb	          0x8945b8	             mov dword [rbp - 0x48], eax	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005aee	            0xeb78	                           jmp 0x4005b68	     15252	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005af0	    0x8b0500000000	            mov eax, dword [0x04005af6] 	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005af6	      0x3d00010000	                          cmp eax, 0x100	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005afb	            0x7417	                            je 0x4005b14	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005afd	      0x3d00020000	                          cmp eax, 0x200	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b02	            0x7419	                            je 0x4005b1d	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b04	      0x3d80000000	                           cmp eax, 0x80	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b09	            0x751b	                           jne 0x4005b26	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b0b	    0xc745b8040000	               mov dword [rbp - 0x48], 4	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b12	            0xeb17	                           jmp 0x4005b2b	     15264	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b14	    0xc745b8050000	               mov dword [rbp - 0x48], 5	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b1b	            0xeb0e	                           jmp 0x4005b2b	     15267	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b1d	    0xc745b8060000	               mov dword [rbp - 0x48], 6	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b24	            0xeb05	                           jmp 0x4005b2b	     15270	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b26	      0xe800000000	                          call 0x4005b2b	     15272	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2	CALL_2
0x4005b2b	            0xeb3b	                           jmp 0x4005b68	     15274	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b2d	    0xc745b8050000	               mov dword [rbp - 0x48], 5	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b34	            0xeb32	                           jmp 0x4005b68	     15277	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b36	    0xc745b8040000	               mov dword [rbp - 0x48], 4	     15279	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b3d	            0xeb29	                           jmp 0x4005b68	     15280	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b3f	    0xc745b8030000	               mov dword [rbp - 0x48], 3	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b46	            0xeb20	                           jmp 0x4005b68	     15287	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b48	    0xc745b8020000	               mov dword [rbp - 0x48], 2	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b4f	            0xeb17	                           jmp 0x4005b68	     15295	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b51	    0xc745b8010000	               mov dword [rbp - 0x48], 1	     15298	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b58	            0xeb0e	                           jmp 0x4005b68	     15299	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b5a	    0xc745b8000000	               mov dword [rbp - 0x48], 0	     15302	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b61	            0xeb05	                           jmp 0x4005b68	     15303	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b63	      0xe800000000	                          call 0x4005b68	     15305	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	CALL_3
0x4005b68	    0x8b0500000000	            mov eax, dword [0x04005b6e] 	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b6e	            0x85c0	                           test eax, eax	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b70	            0x7512	                           jne 0x4005b84	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b72	        0x837dac12	           cmp dword [rbp - 0x54], 0x12 	     15314	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b76	            0x7406	                            je 0x4005b7e	     15314	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b78	        0x837dac13	           cmp dword [rbp - 0x54], 0x13 	     15315	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b7c	            0x7506	                           jne 0x4005b84	     15315	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b7e	        0x836db801	               sub dword [rbp - 0x48], 1	     15316	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b82	            0xeb38	                           jmp 0x4005bbc	     15316	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b84	        0x837dac1a	           cmp dword [rbp - 0x54], 0x1a 	     15317	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x4005b88	            0x7506	                           jne 0x4005b90	     15317	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x4005b8a	        0x836db802	               sub dword [rbp - 0x48], 2	     15318	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x4005b8e	            0xeb2c	                           jmp 0x4005bbc	     15318	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x4005b90	        0x837dac19	           cmp dword [rbp - 0x54], 0x19 	     15319	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4005b94	            0x7506	                           jne 0x4005b9c	     15319	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4005b96	        0x836db803	               sub dword [rbp - 0x48], 3	     15320	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4005b9a	            0xeb20	                           jmp 0x4005bbc	     15320	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4005b9c	        0x837dac1c	           cmp dword [rbp - 0x54], 0x1c 	     15321	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005ba0	            0x751a	                           jne 0x4005bbc	     15321	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005ba2	    0x8b0500000000	            mov eax, dword [0x04005ba8] 	     15321	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005ba8	      0x3d80000000	                           cmp eax, 0x80	     15321	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005bad	            0x750d	                           jne 0x4005bbc	     15321	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005baf	        0x836db801	               sub dword [rbp - 0x48], 1	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005bb3	            0xeb07	                           jmp 0x4005bbc	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005bb5	    0xc745b8000000	               mov dword [rbp - 0x48], 0	     15325	i386-dis.c	FUNCTION_25	ELSE_4
0x4005bbc	    0x8b0500000000	            mov eax, dword [0x04005bc2] 	     15327	i386-dis.c	FUNCTION_25
0x4005bc2	          0x83e001	                              and eax, 1	     15327	i386-dis.c	FUNCTION_25
0x4005bc5	            0x85c0	                           test eax, eax	     15327	i386-dis.c	FUNCTION_25
0x4005bc7	            0x740f	                            je 0x4005bd8	     15327	i386-dis.c	FUNCTION_25
0x4005bc9	    0x8b0500000000	            mov eax, dword [0x04005bcf] 	     15327	i386-dis.c	FUNCTION_25
0x4005bcf	          0x83c841	                            or eax, 0x41	     15327	i386-dis.c	FUNCTION_25
0x4005bd2	    0x890500000000	            mov dword [0x04005bd8], eax 	     15327	i386-dis.c	FUNCTION_25
0x4005bd8	     0xfb605000000	           movzx eax, byte [0x04005bdf] 	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4005bdf	            0x84c0	                             test al, al	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4005be1	            0x740f	                            je 0x4005bf2	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4005be3	          0x8b55a8	             mov edx, dword [rbp - 0x58]	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4005be6	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4005be9	            0x89d6	                            mov esi, edx	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4005beb	            0x89c7	                            mov edi, eax	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4005bed	      0xe8baf3ffff	             call sym.intel_operand_size	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4005bf2	      0xe8feeeffff	                     call sym.append_seg	     15330	i386-dis.c	FUNCTION_25	CALL_5
0x4005bf7	          0x8b45a8	             mov eax, dword [rbp - 0x58]	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4005bfa	          0x83e002	                              and eax, 2	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4005bfd	            0x85c0	                           test eax, eax	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4005bff	            0x750f	                           jne 0x4005c10	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4005c01	    0x8b0500000000	            mov eax, dword [0x04005c07] 	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4005c07	          0x83f802	                              cmp eax, 2	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4005c0a	     0xf8565070000	                           jne 0x4006375	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4005c10	    0xc745cc000000	               mov dword [rbp - 0x34], 0	     15341	i386-dis.c	FUNCTION_25	IF_9
0x4005c17	    0xc745d0000000	               mov dword [rbp - 0x30], 0	     15342	i386-dis.c	FUNCTION_25	IF_9
0x4005c1e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005c21	          0x83e002	                              and eax, 2	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005c24	            0x85c0	                           test eax, eax	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005c26	            0x7519	                           jne 0x4005c41	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005c28	        0x837dac22	           cmp dword [rbp - 0x54], 0x22 	     15344	i386-dis.c	FUNCTION_25	IF_9
0x4005c2c	            0x7413	                            je 0x4005c41	     15344	i386-dis.c	FUNCTION_25	IF_9
0x4005c2e	        0x837dac25	           cmp dword [rbp - 0x54], 0x25 	     15345	i386-dis.c	FUNCTION_25	IF_9
0x4005c32	            0x740d	                            je 0x4005c41	     15345	i386-dis.c	FUNCTION_25	IF_9
0x4005c34	        0x837dac26	           cmp dword [rbp - 0x54], 0x26 	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005c38	            0x7407	                            je 0x4005c41	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005c3a	      0xb801000000	                              mov eax, 1	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005c3f	            0xeb05	                           jmp 0x4005c46	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005c41	      0xb800000000	                              mov eax, 0	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005c46	          0x8945d8	             mov dword [rbp - 0x28], eax	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005c49	    0x488b05000000	            mov rax, qword [0x04005c50] 	     15347	i386-dis.c	FUNCTION_25	IF_9
0x4005c50	        0x488945f0	             mov qword [rbp - 0x10], rax	     15347	i386-dis.c	FUNCTION_25	IF_9
0x4005c54	    0x488b05000000	            mov rax, qword [0x04005c5b] 	     15348	i386-dis.c	FUNCTION_25	IF_9
0x4005c5b	        0x488945f8	                mov qword [rbp - 8], rax	     15348	i386-dis.c	FUNCTION_25	IF_9
0x4005c5f	    0xc745bc000000	               mov dword [rbp - 0x44], 0	     15350	i386-dis.c	FUNCTION_25	IF_9
0x4005c66	    0xc745c0010000	               mov dword [rbp - 0x40], 1	     15351	i386-dis.c	FUNCTION_25	IF_9
0x4005c6d	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	     15352	i386-dis.c	FUNCTION_25	IF_9
0x4005c74	    0x8b0500000000	            mov eax, dword [0x04005c7a] 	     15353	i386-dis.c	FUNCTION_25	IF_9
0x4005c7a	          0x8945c8	             mov dword [rbp - 0x38], eax	     15353	i386-dis.c	FUNCTION_25	IF_9
0x4005c7d	        0x837dc804	               cmp dword [rbp - 0x38], 4	     15355	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005c81	     0xf856b010000	                           jne 0x4005df2	     15355	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005c87	    0xc745bc010000	               mov dword [rbp - 0x44], 1	     15357	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005c8e	    0x8b0500000000	            mov eax, dword [0x04005c94] 	     15358	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005c94	          0x8945cc	             mov dword [rbp - 0x34], eax	     15358	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005c97	    0x8b0500000000	            mov eax, dword [0x04005c9d] 	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005c9d	          0x83e002	                              and eax, 2	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005ca0	            0x85c0	                           test eax, eax	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005ca2	            0x740f	                            je 0x4005cb3	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005ca4	    0x8b0500000000	            mov eax, dword [0x04005caa] 	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005caa	          0x83c842	                            or eax, 0x42	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005cad	    0x890500000000	            mov dword [0x04005cb3], eax 	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005cb3	    0x8b0500000000	            mov eax, dword [0x04005cb9] 	     15360	i386-dis.c	FUNCTION_25	IF_9	IF_10	IF_11
0x4005cb9	          0x83e002	                              and eax, 2	     15360	i386-dis.c	FUNCTION_25	IF_9	IF_10	IF_11
0x4005cbc	            0x85c0	                           test eax, eax	     15360	i386-dis.c	FUNCTION_25	IF_9	IF_10	IF_11
0x4005cbe	            0x7404	                            je 0x4005cc4	     15360	i386-dis.c	FUNCTION_25	IF_9	IF_10	IF_11
0x4005cc0	        0x8345cc08	               add dword [rbp - 0x34], 8	     15361	i386-dis.c	FUNCTION_25	IF_9	IF_10	IF_11
0x4005cc4	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005cc7	          0x83e835	                           sub eax, 0x35	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005cca	          0x83f803	                              cmp eax, 3	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005ccd	     0xf87ed000000	                            ja 0x4005dc0	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005cd3	     0xfb605000000	           movzx eax, byte [0x04005cda] 	     15368	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_12
0x4005cda	            0x84c0	                             test al, al	     15368	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_12
0x4005cdc	            0x7505	                           jne 0x4005ce3	     15368	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_12
0x4005cde	      0xe800000000	                          call 0x4005ce3	     15369	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	CALL_6
0x4005ce3	    0x8b0500000000	            mov eax, dword [0x04005ce9] 	     15370	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13
0x4005ce9	            0x85c0	                           test eax, eax	     15370	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13
0x4005ceb	            0x740e	                            je 0x4005cfb	     15370	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13
0x4005ced	    0x8b0500000000	            mov eax, dword [0x04005cf3] 	     15372	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005cf3	            0x85c0	                           test eax, eax	     15372	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005cf5	            0x7504	                           jne 0x4005cfb	     15372	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005cf7	        0x8345cc10	            add dword [rbp - 0x34], 0x10	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005cfb	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005d02	    0x8b0500000000	            mov eax, dword [0x04005d08] 	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d08	      0x3d00010000	                          cmp eax, 0x100	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d0d	            0x742a	                            je 0x4005d39	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d0f	      0x3d00020000	                          cmp eax, 0x200	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d14	            0x7463	                            je 0x4005d79	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d16	      0x3d80000000	                           cmp eax, 0x80	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d1b	     0xf8598000000	                           jne 0x4005db9	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d21	    0x488b05000000	            mov rax, qword [0x04005d28] 	     15380	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d28	        0x488945f8	                mov qword [rbp - 8], rax	     15380	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d2c	        0x488b45f8	                mov rax, qword [rbp - 8]	     15380	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d30	        0x488945f0	             mov qword [rbp - 0x10], rax	     15380	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d34	      0xe985000000	                           jmp 0x4005dbe	     15381	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d39	    0x8b0500000000	            mov eax, dword [0x04005d3f] 	     15383	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005d3f	            0x85c0	                           test eax, eax	     15383	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005d41	            0x740c	                            je 0x4005d4f	     15383	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005d43	        0x837dac37	           cmp dword [rbp - 0x54], 0x37 	     15384	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005d47	            0x7406	                            je 0x4005d4f	     15384	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005d49	        0x837dac38	           cmp dword [rbp - 0x54], 0x38 	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005d4d	            0x7515	                           jne 0x4005d64	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005d4f	    0x488b05000000	            mov rax, qword [0x04005d56] 	     15386	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005d56	        0x488945f8	                mov qword [rbp - 8], rax	     15386	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005d5a	        0x488b45f8	                mov rax, qword [rbp - 8]	     15386	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005d5e	        0x488945f0	             mov qword [rbp - 0x10], rax	     15386	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005d62	            0xeb5a	                           jmp 0x4005dbe	     15389	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d64	    0x488b05000000	            mov rax, qword [0x04005d6b] 	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4005d6b	        0x488945f8	                mov qword [rbp - 8], rax	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4005d6f	        0x488b45f8	                mov rax, qword [rbp - 8]	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4005d73	        0x488945f0	             mov qword [rbp - 0x10], rax	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4005d77	            0xeb45	                           jmp 0x4005dbe	     15389	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005d79	    0x8b0500000000	            mov eax, dword [0x04005d7f] 	     15391	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005d7f	            0x85c0	                           test eax, eax	     15391	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005d81	            0x740c	                            je 0x4005d8f	     15391	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005d83	        0x837dac37	           cmp dword [rbp - 0x54], 0x37 	     15392	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005d87	            0x7406	                            je 0x4005d8f	     15392	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005d89	        0x837dac38	           cmp dword [rbp - 0x54], 0x38 	     15393	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005d8d	            0x7515	                           jne 0x4005da4	     15393	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005d8f	    0x488b05000000	            mov rax, qword [0x04005d96] 	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005d96	        0x488945f8	                mov qword [rbp - 8], rax	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005d9a	        0x488b45f8	                mov rax, qword [rbp - 8]	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005d9e	        0x488945f0	             mov qword [rbp - 0x10], rax	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005da2	            0xeb1a	                           jmp 0x4005dbe	     15397	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005da4	    0x488b05000000	            mov rax, qword [0x04005dab] 	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4005dab	        0x488945f8	                mov qword [rbp - 8], rax	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4005daf	        0x488b45f8	                mov rax, qword [rbp - 8]	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4005db3	        0x488945f0	             mov qword [rbp - 0x10], rax	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4005db7	            0xeb05	                           jmp 0x4005dbe	     15397	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005db9	      0xe800000000	                          call 0x4005dbe	     15399	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	CALL_7
0x4005dbe	            0xeb0e	                           jmp 0x4005dce	     15401	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005dc0	        0x837dcc04	               cmp dword [rbp - 0x34], 4	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005dc4	           0xf95c0	                                setne al	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005dc7	           0xfb6c0	                           movzx eax, al	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005dca	          0x8945c4	             mov dword [rbp - 0x3c], eax	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005dcd	              0x90	                                     nop	     15404	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005dce	    0x8b0500000000	            mov eax, dword [0x04005dd4] 	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005dd4	          0x8945d0	             mov dword [rbp - 0x30], eax	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005dd7	    0x8b0500000000	            mov eax, dword [0x04005ddd] 	     15407	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005ddd	          0x8945c8	             mov dword [rbp - 0x38], eax	     15407	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005de0	    0x488b05000000	            mov rax, qword [0x04005de7] 	     15408	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005de7	        0x4883c001	                              add rax, 1	     15408	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005deb	    0x488905000000	            mov qword [0x04005df2], rax 	     15408	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005df2	          0x8b55c8	             mov edx, dword [rbp - 0x38]	     15410	i386-dis.c	FUNCTION_25	IF_9
0x4005df5	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     15410	i386-dis.c	FUNCTION_25	IF_9
0x4005df8	             0x1d0	                            add eax, edx	     15410	i386-dis.c	FUNCTION_25	IF_9
0x4005dfa	          0x8945dc	             mov dword [rbp - 0x24], eax	     15410	i386-dis.c	FUNCTION_25	IF_9
0x4005dfd	    0x8b0500000000	            mov eax, dword [0x04005e03] 	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e03	          0x83f801	                              cmp eax, 1	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e06	            0x7448	                            je 0x4005e50	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e08	          0x83f802	                              cmp eax, 2	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e0b	     0xf84c7000000	                            je 0x4005ed8	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e11	            0x85c0	                           test eax, eax	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e13	     0xf85ce000000	                           jne 0x4005ee7	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e19	        0x837dc805	               cmp dword [rbp - 0x38], 5	     15415	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4005e1d	     0xf85c0000000	                           jne 0x4005ee3	     15415	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4005e23	    0xc745c0000000	               mov dword [rbp - 0x40], 0	     15417	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4005e2a	    0x8b0500000000	            mov eax, dword [0x04005e30] 	     15418	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4005e30	          0x83f802	                              cmp eax, 2	     15418	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4005e33	            0x750d	                           jne 0x4005e42	     15418	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4005e35	        0x837dbc00	               cmp dword [rbp - 0x44], 0	     15418	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4005e39	            0x7507	                           jne 0x4005e42	     15418	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4005e3b	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4005e42	      0xe82a0f0000	                         call sym.get32s	     15420	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	CALL_8
0x4005e47	        0x488945e8	             mov qword [rbp - 0x18], rax	     15420	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	CALL_8
0x4005e4b	      0xe993000000	                           jmp 0x4005ee3	     15422	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e50	    0x488b05000000	            mov rax, qword [0x04005e57] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e57	        0x488d5001	                      lea rdx, [rax + 1]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e5b	    0x488b05000000	            mov rax, qword [0x04005e62] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e62	        0x488b4068	            mov rax, qword [rax + 0x68] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e66	          0x488b00	                    mov rax, qword [rax]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e69	          0x4839c2	                            cmp rdx, rax	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e6c	            0x761d	                           jbe 0x4005e8b	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e6e	    0x488b05000000	            mov rax, qword [0x04005e75] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e75	        0x488d5001	                      lea rdx, [rax + 1]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e79	    0x488b05000000	            mov rax, qword [0x04005e80] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e80	          0x4889d6	                            mov rsi, rdx	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e83	          0x4889c7	                            mov rdi, rax	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e86	      0xe8b5a1ffff	                     call sym.fetch_data	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e8b	    0x488b05000000	            mov rax, qword [0x04005e92] 	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e92	        0x488d5001	                      lea rdx, [rax + 1]	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e96	    0x488915000000	            mov qword [0x04005e9d], rdx 	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005e9d	           0xfb600	                   movzx eax, byte [rax]	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005ea0	           0xfb6c0	                           movzx eax, al	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005ea3	        0x488945e8	             mov qword [rbp - 0x18], rax	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005ea7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15426	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x4005eab	      0x2580000000	                           and eax, 0x80	     15426	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x4005eb0	          0x4885c0	                           test rax, rax	     15426	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x4005eb3	            0x7408	                            je 0x4005ebd	     15426	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x4005eb5	    0x48816de80001	           sub qword [rbp - 0x18], 0x100	     15427	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x4005ebd	    0x8b0500000000	            mov eax, dword [0x04005ec3] 	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4005ec3	            0x85c0	                           test eax, eax	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4005ec5	            0x741f	                            je 0x4005ee6	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4005ec7	        0x837db800	               cmp dword [rbp - 0x48], 0	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4005ecb	            0x7e19	                           jle 0x4005ee6	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4005ecd	          0x8b45b8	             mov eax, dword [rbp - 0x48]	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4005ed0	            0x89c1	                            mov ecx, eax	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4005ed2	        0x48d365e8	              shl qword [rbp - 0x18], cl	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4005ed6	            0xeb0e	                           jmp 0x4005ee6	     15430	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005ed8	      0xe8940e0000	                         call sym.get32s	     15432	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	CALL_9
0x4005edd	        0x488945e8	             mov qword [rbp - 0x18], rax	     15432	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	CALL_9
0x4005ee1	            0xeb04	                           jmp 0x4005ee7	     15433	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005ee3	              0x90	                                     nop	     15422	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005ee4	            0xeb01	                           jmp 0x4005ee7	     15422	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005ee6	              0x90	                                     nop	     15430	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005ee7	        0x837dbc00	               cmp dword [rbp - 0x44], 0	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005eeb	            0x741e	                            je 0x4005f0b	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005eed	        0x837dc000	               cmp dword [rbp - 0x40], 0	     15439	i386-dis.c	FUNCTION_25	IF_9
0x4005ef1	            0x7518	                           jne 0x4005f0b	     15439	i386-dis.c	FUNCTION_25	IF_9
0x4005ef3	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     15440	i386-dis.c	FUNCTION_25	IF_9
0x4005ef7	            0x7512	                           jne 0x4005f0b	     15440	i386-dis.c	FUNCTION_25	IF_9
0x4005ef9	    0x8b0500000000	            mov eax, dword [0x04005eff] 	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005eff	          0x83f801	                              cmp eax, 1	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005f02	            0x7507	                           jne 0x4005f0b	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005f04	      0xb801000000	                              mov eax, 1	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005f09	            0xeb05	                           jmp 0x4005f10	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005f0b	      0xb800000000	                              mov eax, 0	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005f10	          0x8945e0	             mov dword [rbp - 0x20], eax	     15438	i386-dis.c	FUNCTION_25	IF_9
0x4005f13	        0x837dc000	               cmp dword [rbp - 0x40], 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005f17	            0x7518	                           jne 0x4005f31	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005f19	        0x837de000	               cmp dword [rbp - 0x20], 0	     15443	i386-dis.c	FUNCTION_25	IF_9
0x4005f1d	            0x7512	                           jne 0x4005f31	     15443	i386-dis.c	FUNCTION_25	IF_9
0x4005f1f	        0x837dbc00	               cmp dword [rbp - 0x44], 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005f23	            0x7413	                            je 0x4005f38	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005f25	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005f29	            0x7506	                           jne 0x4005f31	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005f2b	        0x837dd000	               cmp dword [rbp - 0x30], 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005f2f	            0x7407	                            je 0x4005f38	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005f31	      0xb801000000	                              mov eax, 1	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005f36	            0xeb05	                           jmp 0x4005f3d	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005f38	      0xb800000000	                              mov eax, 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005f3d	          0x8945e4	             mov dword [rbp - 0x1c], eax	     15442	i386-dis.c	FUNCTION_25	IF_9
0x4005f40	     0xfb605000000	           movzx eax, byte [0x04005f47] 	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4005f47	            0x84c0	                             test al, al	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4005f49	     0xf8580000000	                           jne 0x4005fcf	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4005f4f	    0x8b0500000000	            mov eax, dword [0x04005f55] 	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4005f55	            0x85c0	                           test eax, eax	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4005f57	            0x7506	                           jne 0x4005f5f	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4005f59	        0x837dc805	               cmp dword [rbp - 0x38], 5	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4005f5d	            0x7570	                           jne 0x4005fcf	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4005f5f	        0x837de400	               cmp dword [rbp - 0x1c], 0	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4005f63	            0x7506	                           jne 0x4005f6b	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4005f65	        0x837db400	               cmp dword [rbp - 0x4c], 0	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4005f69	            0x7413	                            je 0x4005f7e	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4005f6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4005f6f	          0x4889c6	                            mov rsi, rax	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4005f72	      0xbf00000000	                              mov edi, 0	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4005f77	      0xe881eeffff	             call sym.print_displacement	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4005f7c	            0xeb16	                           jmp 0x4005f94	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4005f7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4005f82	          0x4889c2	                            mov rdx, rax	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4005f85	      0xbe01000000	                              mov esi, 1	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4005f8a	      0xbf00000000	                              mov edi, 0	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4005f8f	      0xe838ecffff	            call sym.print_operand_value	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4005f94	      0xbf00000000	                              mov edi, 0	     15453	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_12
0x4005f99	      0xe82bebffff	                        call sym.oappend	     15453	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_12
0x4005f9e	        0x837db400	               cmp dword [rbp - 0x4c], 0	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4005fa2	            0x742b	                            je 0x4005fcf	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4005fa4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15456	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_13
0x4005fa8	      0xbe01000000	                              mov esi, 1	     15456	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_13
0x4005fad	          0x4889c7	                            mov rdi, rax	     15456	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_13
0x4005fb0	      0xe8240f0000	                         call sym.set_op	     15456	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_13
0x4005fb5	        0x837dd800	               cmp dword [rbp - 0x28], 0	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005fb9	            0x7507	                           jne 0x4005fc2	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005fbb	      0xb800000000	                              mov eax, 0	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005fc0	            0xeb05	                           jmp 0x4005fc7	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005fc2	      0xb800000000	                              mov eax, 0	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005fc7	          0x4889c7	                            mov rdi, rax	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005fca	      0xe8faeaffff	                        call sym.oappend	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005fcf	        0x837dc000	               cmp dword [rbp - 0x40], 0	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005fd3	            0x750c	                           jne 0x4005fe1	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005fd5	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005fd9	            0x7506	                           jne 0x4005fe1	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005fdb	        0x837db400	               cmp dword [rbp - 0x4c], 0	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005fdf	            0x7421	                            je 0x4006002	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005fe1	        0x837dac22	           cmp dword [rbp - 0x54], 0x22 	     15462	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005fe5	            0x741b	                            je 0x4006002	     15462	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005fe7	        0x837dac25	           cmp dword [rbp - 0x54], 0x25 	     15463	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005feb	            0x7415	                            je 0x4006002	     15463	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005fed	        0x837dac26	           cmp dword [rbp - 0x54], 0x26 	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005ff1	            0x740f	                            je 0x4006002	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005ff3	    0x8b0500000000	            mov eax, dword [0x04005ff9] 	     15465	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005ff9	          0x80cc04	                                or ah, 4	     15465	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005ffc	    0x890500000000	            mov dword [0x04006002], eax 	     15465	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4006002	        0x837de400	               cmp dword [rbp - 0x1c], 0	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4006006	            0x7519	                           jne 0x4006021	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4006008	     0xfb605000000	           movzx eax, byte [0x0400600f] 	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400600f	            0x84c0	                             test al, al	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4006011	     0xf84ec020000	                            je 0x4006303	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4006017	        0x837db400	               cmp dword [rbp - 0x4c], 0	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400601b	     0xf84e2020000	                            je 0x4006303	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4006021	    0x488b05000000	            mov rax, qword [0x04006028] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4006028	        0x488d5001	                      lea rdx, [rax + 1]	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400602c	    0x488915000000	            mov qword [0x04006033], rdx 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4006033	     0xfb615000000	           movzx edx, byte [0x0400603a] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400603a	            0x8810	                      mov byte [rax], dl	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400603c	     0xfb605000000	           movzx eax, byte [0x04006043] 	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x4006043	            0x84c0	                             test al, al	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x4006045	            0x7431	                            je 0x4006078	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x4006047	        0x837db400	               cmp dword [rbp - 0x4c], 0	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x400604b	            0x742b	                            je 0x4006078	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x400604d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15472	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_15
0x4006051	      0xbe01000000	                              mov esi, 1	     15472	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_15
0x4006056	          0x4889c7	                            mov rdi, rax	     15472	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_15
0x4006059	      0xe87b0e0000	                         call sym.set_op	     15472	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_15
0x400605e	        0x837dd800	               cmp dword [rbp - 0x28], 0	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4006062	            0x7507	                           jne 0x400606b	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4006064	      0xb800000000	                              mov eax, 0	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4006069	            0xeb05	                           jmp 0x4006070	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x400606b	      0xb800000000	                              mov eax, 0	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4006070	          0x4889c7	                            mov rdi, rax	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4006073	      0xe851eaffff	                        call sym.oappend	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4006078	    0x488b05000000	            mov rax, qword [0x0400607f] 	     15475	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400607f	          0xc60000	                       mov byte [rax], 0	     15475	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4006082	        0x837dc000	               cmp dword [rbp - 0x40], 0	     15476	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x4006086	            0x7449	                            je 0x40060d1	     15476	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x4006088	    0x8b0500000000	            mov eax, dword [0x0400608e] 	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x400608e	          0x83f802	                              cmp eax, 2	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4006091	            0x751f	                           jne 0x40060b2	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4006093	        0x837dd800	               cmp dword [rbp - 0x28], 0	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4006097	            0x7519	                           jne 0x40060b2	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4006099	    0x488b05000000	            mov rax, qword [0x040060a0] 	     15478	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40060a0	          0x8b55dc	             mov edx, dword [rbp - 0x24]	     15478	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40060a3	          0x4863d2	                         movsxd rdx, edx	     15478	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40060a6	        0x48c1e203	                              shl rdx, 3	     15478	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40060aa	          0x4801d0	                            add rax, rdx	     15478	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40060ad	          0x488b00	                    mov rax, qword [rax]	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x40060b0	            0xeb17	                           jmp 0x40060c9	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x40060b2	    0x488b05000000	            mov rax, qword [0x040060b9] 	     15478	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40060b9	          0x8b55dc	             mov edx, dword [rbp - 0x24]	     15478	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40060bc	          0x4863d2	                         movsxd rdx, edx	     15478	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40060bf	        0x48c1e203	                              shl rdx, 3	     15478	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40060c3	          0x4801d0	                            add rax, rdx	     15478	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40060c6	          0x488b00	                    mov rax, qword [rax]	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x40060c9	          0x4889c7	                            mov rdi, rax	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x40060cc	      0xe8f8e9ffff	                        call sym.oappend	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x40060d1	        0x837dbc00	               cmp dword [rbp - 0x44], 0	     15479	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29
0x40060d5	     0xf8429010000	                            je 0x4006204	     15479	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29
0x40060db	        0x837dd000	               cmp dword [rbp - 0x30], 0	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40060df	            0x7520	                           jne 0x4006101	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40060e1	        0x837de000	               cmp dword [rbp - 0x20], 0	     15484	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40060e5	            0x751a	                           jne 0x4006101	     15484	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40060e7	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     15485	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40060eb	            0x7514	                           jne 0x4006101	     15485	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40060ed	        0x837dc000	               cmp dword [rbp - 0x40], 0	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40060f1	     0xf840d010000	                            je 0x4006204	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40060f7	        0x837dc804	               cmp dword [rbp - 0x38], 4	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40060fb	     0xf8403010000	                            je 0x4006204	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4006101	     0xfb605000000	           movzx eax, byte [0x04006108] 	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4006108	            0x84c0	                             test al, al	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x400610a	            0x7406	                            je 0x4006112	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x400610c	        0x837dc000	               cmp dword [rbp - 0x40], 0	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4006110	            0x7425	                            je 0x4006137	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4006112	    0x488b05000000	            mov rax, qword [0x04006119] 	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4006119	        0x488d5001	                      lea rdx, [rax + 1]	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x400611d	    0x488915000000	            mov qword [0x04006124], rdx 	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4006124	     0xfb615000000	           movzx edx, byte [0x0400612b] 	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x400612b	            0x8810	                      mov byte [rax], dl	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x400612d	    0x488b05000000	            mov rax, qword [0x04006134] 	     15491	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4006134	          0xc60000	                       mov byte [rax], 0	     15491	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4006137	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     15493	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x400613b	            0x744b	                            je 0x4006188	     15493	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x400613d	    0x8b0500000000	            mov eax, dword [0x04006143] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4006143	          0x83f802	                              cmp eax, 2	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4006146	            0x751f	                           jne 0x4006167	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4006148	        0x837dd800	               cmp dword [rbp - 0x28], 0	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x400614c	            0x7519	                           jne 0x4006167	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x400614e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     15495	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x4006151	            0x4898	                                    cdqe	     15495	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x4006153	    0x488d14c50000	                        lea rdx, [rax*8]	     15495	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x400615b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     15495	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x400615f	          0x4801d0	                            add rax, rdx	     15495	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x4006162	          0x488b00	                    mov rax, qword [rax]	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4006165	            0xeb17	                           jmp 0x400617e	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4006167	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     15495	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x400616a	            0x4898	                                    cdqe	     15495	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x400616c	    0x488d14c50000	                        lea rdx, [rax*8]	     15495	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x4006174	        0x488b45f8	                mov rax, qword [rbp - 8]	     15495	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x4006178	          0x4801d0	                            add rax, rdx	     15495	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x400617b	          0x488b00	                    mov rax, qword [rax]	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x400617e	          0x4889c7	                            mov rdi, rax	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4006181	      0xe843e9ffff	                        call sym.oappend	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4006186	            0xeb29	                           jmp 0x40061b1	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4006188	    0x8b0500000000	            mov eax, dword [0x0400618e] 	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x400618e	          0x83f802	                              cmp eax, 2	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4006191	            0x750f	                           jne 0x40061a2	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4006193	        0x837dd800	               cmp dword [rbp - 0x28], 0	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4006197	            0x7509	                           jne 0x40061a2	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4006199	    0x488b05000000	            mov rax, qword [0x040061a0] 	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40061a0	            0xeb07	                           jmp 0x40061a9	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40061a2	    0x488b05000000	            mov rax, qword [0x040061a9] 	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40061a9	          0x4889c7	                            mov rdi, rax	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40061ac	      0xe818e9ffff	                        call sym.oappend	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40061b1	    0x488b05000000	            mov rax, qword [0x040061b8] 	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40061b8	        0x488d5001	                      lea rdx, [rax + 1]	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40061bc	    0x488915000000	            mov qword [0x040061c3], rdx 	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40061c3	     0xfb615000000	           movzx edx, byte [0x040061ca] 	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40061ca	            0x8810	                      mov byte [rax], dl	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40061cc	    0x488b05000000	            mov rax, qword [0x040061d3] 	     15501	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40061d3	          0xc60000	                       mov byte [rax], 0	     15501	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40061d6	          0x8b45d0	             mov eax, dword [rbp - 0x30]	     15502	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x40061d9	      0xba01000000	                              mov edx, 1	     15502	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x40061de	            0x89c1	                            mov ecx, eax	     15502	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x40061e0	            0xd3e2	                             shl edx, cl	     15502	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x40061e2	            0x89d0	                            mov eax, edx	     15502	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x40061e4	            0x89c2	                            mov edx, eax	     15502	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x40061e6	      0xbe00000000	                              mov esi, 0	     15502	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x40061eb	      0xbf00000000	                              mov edi, 0	     15502	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x40061f0	      0xb800000000	                              mov eax, 0	     15502	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x40061f5	      0xe800000000	                          call 0x40061fa	     15502	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x40061fa	      0xbf00000000	                              mov edi, 0	     15503	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_21
0x40061ff	      0xe8c5e8ffff	                        call sym.oappend	     15503	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_21
0x4006204	     0xfb605000000	           movzx eax, byte [0x0400620b] 	     15506	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400620b	            0x84c0	                             test al, al	     15506	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400620d	     0xf84c6000000	                            je 0x40062d9	     15506	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4006213	      0x48837de800	               cmp qword [rbp - 0x18], 0	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4006218	            0x7514	                           jne 0x400622e	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400621a	    0x8b0500000000	            mov eax, dword [0x04006220] 	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4006220	            0x85c0	                           test eax, eax	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4006222	            0x750a	                           jne 0x400622e	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4006224	        0x837dc805	               cmp dword [rbp - 0x38], 5	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4006228	     0xf85ab000000	                           jne 0x40062d9	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400622e	        0x837de400	               cmp dword [rbp - 0x1c], 0	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4006232	            0x7409	                            je 0x400623d	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4006234	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4006238	          0x4885c0	                           test rax, rax	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400623b	            0x7821	                            js 0x400625e	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400623d	    0x488b05000000	            mov rax, qword [0x04006244] 	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4006244	        0x488d5001	                      lea rdx, [rax + 1]	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4006248	    0x488915000000	            mov qword [0x0400624f], rdx 	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400624f	          0xc6002b	                    mov byte [rax], 0x2b	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4006252	    0x488b05000000	            mov rax, qword [0x04006259] 	     15512	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4006259	          0xc60000	                       mov byte [rax], 0	     15512	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400625c	            0xeb42	                           jmp 0x40062a0	     15512	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400625e	    0x8b0500000000	            mov eax, dword [0x04006264] 	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4006264	          0x83f801	                              cmp eax, 1	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4006267	            0x7437	                            je 0x40062a0	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4006269	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400626d	          0x48f7d8	                                 neg rax	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4006270	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4006274	            0x742a	                            je 0x40062a0	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4006276	    0x488b05000000	            mov rax, qword [0x0400627d] 	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400627d	        0x488d5001	                      lea rdx, [rax + 1]	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4006281	    0x488915000000	            mov qword [0x04006288], rdx 	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4006288	          0xc6002d	                    mov byte [rax], 0x2d	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400628b	    0x488b05000000	            mov rax, qword [0x04006292] 	     15517	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4006292	          0xc60000	                       mov byte [rax], 0	     15517	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4006295	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15518	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4006299	          0x48f7d8	                                 neg rax	     15518	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400629c	        0x488945e8	             mov qword [rbp - 0x18], rax	     15518	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x40062a0	        0x837de400	               cmp dword [rbp - 0x1c], 0	     15521	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_36
0x40062a4	            0x7413	                            je 0x40062b9	     15521	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_36
0x40062a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x40062aa	          0x4889c6	                            mov rsi, rax	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x40062ad	      0xbf00000000	                              mov edi, 0	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x40062b2	      0xe846ebffff	             call sym.print_displacement	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x40062b7	            0xeb16	                           jmp 0x40062cf	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x40062b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_23
0x40062bd	          0x4889c2	                            mov rdx, rax	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_23
0x40062c0	      0xbe01000000	                              mov esi, 1	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_23
0x40062c5	      0xbf00000000	                              mov edi, 0	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_23
0x40062ca	      0xe8fde8ffff	            call sym.print_operand_value	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_23
0x40062cf	      0xbf00000000	                              mov edi, 0	     15525	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_24
0x40062d4	      0xe8f0e7ffff	                        call sym.oappend	     15525	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_24
0x40062d9	    0x488b05000000	            mov rax, qword [0x040062e0] 	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40062e0	        0x488d5001	                      lea rdx, [rax + 1]	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40062e4	    0x488915000000	            mov qword [0x040062eb], rdx 	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40062eb	     0xfb615000000	           movzx edx, byte [0x040062f2] 	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40062f2	            0x8810	                      mov byte [rax], dl	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40062f4	    0x488b05000000	            mov rax, qword [0x040062fb] 	     15529	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40062fb	          0xc60000	                       mov byte [rax], 0	     15529	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40062fe	      0xe955030000	                           jmp 0x4006658	     15333	i386-dis.c	FUNCTION_25	IF_9
0x4006303	     0xfb605000000	           movzx eax, byte [0x0400630a] 	     15531	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37
0x400630a	            0x84c0	                             test al, al	     15531	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37
0x400630c	     0xf8446030000	                            je 0x4006658	     15531	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37
0x4006312	    0x8b0500000000	            mov eax, dword [0x04006318] 	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4006318	            0x85c0	                           test eax, eax	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x400631a	            0x750a	                           jne 0x4006326	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x400631c	        0x837dc805	               cmp dword [rbp - 0x38], 5	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4006320	     0xf8532030000	                           jne 0x4006658	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4006326	    0x8b0500000000	            mov eax, dword [0x0400632c] 	     15535	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39
0x400632c	            0x85c0	                           test eax, eax	     15535	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39
0x400632e	            0x7520	                           jne 0x4006350	     15535	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39
0x4006330	    0x488b05000000	            mov rax, qword [0x04006337] 	     15537	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_25
0x4006337	        0x4883c018	                           add rax, 0x18	     15537	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_25
0x400633b	          0x488b00	                    mov rax, qword [rax]	     15537	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_25
0x400633e	          0x4889c7	                            mov rdi, rax	     15537	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_25
0x4006341	      0xe883e7ffff	                        call sym.oappend	     15537	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_25
0x4006346	      0xbf00000000	                              mov edi, 0	     15538	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_26
0x400634b	      0xe879e7ffff	                        call sym.oappend	     15538	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_26
0x4006350	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15540	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_27
0x4006354	          0x4889c2	                            mov rdx, rax	     15540	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_27
0x4006357	      0xbe01000000	                              mov esi, 1	     15540	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_27
0x400635c	      0xbf00000000	                              mov edi, 0	     15540	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_27
0x4006361	      0xe866e8ffff	            call sym.print_operand_value	     15540	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_27
0x4006366	      0xbf00000000	                              mov edi, 0	     15541	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_28
0x400636b	      0xe859e7ffff	                        call sym.oappend	     15541	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_28
0x4006370	      0xe9e3020000	                           jmp 0x4006658	     15333	i386-dis.c	FUNCTION_25	IF_9
0x4006375	    0x8b0500000000	            mov eax, dword [0x0400637b] 	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x400637b	      0x2500040000	                          and eax, 0x400	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x4006380	            0x89c2	                            mov edx, eax	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x4006382	    0x8b0500000000	            mov eax, dword [0x04006388] 	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x4006388	             0x9d0	                             or eax, edx	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x400638a	    0x890500000000	            mov dword [0x04006390], eax 	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x4006390	    0x8b0500000000	            mov eax, dword [0x04006396] 	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006396	          0x83f801	                              cmp eax, 1	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006399	            0x744a	                            je 0x40063e5	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x400639b	          0x83f802	                              cmp eax, 2	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x400639e	     0xf84c9000000	                            je 0x400646d	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40063a4	            0x85c0	                           test eax, eax	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40063a6	     0xf85eb000000	                           jne 0x4006497	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40063ac	    0x8b0500000000	            mov eax, dword [0x040063b2] 	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x40063b2	          0x83f806	                              cmp eax, 6	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x40063b5	     0xf85d5000000	                           jne 0x4006490	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x40063bb	      0xe8910a0000	                          call sym.get16	     15554	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	CALL_29
0x40063c0	            0x4898	                                    cdqe	     15554	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	CALL_29
0x40063c2	        0x488945e8	             mov qword [rbp - 0x18], rax	     15554	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	CALL_29
0x40063c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15555	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	IF_41
0x40063ca	      0x2500800000	                         and eax, 0x8000	     15555	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	IF_41
0x40063cf	          0x4885c0	                           test rax, rax	     15555	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	IF_41
0x40063d2	     0xf84b8000000	                            je 0x4006490	     15555	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	IF_41
0x40063d8	    0x48816de80000	         sub qword [rbp - 0x18], 0x10000	     15556	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	IF_41
0x40063e0	      0xe9ab000000	                           jmp 0x4006490	     15558	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40063e5	    0x488b05000000	            mov rax, qword [0x040063ec] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40063ec	        0x488d5001	                      lea rdx, [rax + 1]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40063f0	    0x488b05000000	            mov rax, qword [0x040063f7] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40063f7	        0x488b4068	            mov rax, qword [rax + 0x68] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40063fb	          0x488b00	                    mov rax, qword [rax]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40063fe	          0x4839c2	                            cmp rdx, rax	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006401	            0x761d	                           jbe 0x4006420	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006403	    0x488b05000000	            mov rax, qword [0x0400640a] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x400640a	        0x488d5001	                      lea rdx, [rax + 1]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x400640e	    0x488b05000000	            mov rax, qword [0x04006415] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006415	          0x4889d6	                            mov rsi, rdx	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006418	          0x4889c7	                            mov rdi, rax	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x400641b	      0xe8209cffff	                     call sym.fetch_data	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006420	    0x488b05000000	            mov rax, qword [0x04006427] 	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006427	        0x488d5001	                      lea rdx, [rax + 1]	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x400642b	    0x488915000000	            mov qword [0x04006432], rdx 	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006432	           0xfb600	                   movzx eax, byte [rax]	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006435	           0xfb6c0	                           movzx eax, al	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006438	        0x488945e8	             mov qword [rbp - 0x18], rax	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x400643c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15562	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x4006440	      0x2580000000	                           and eax, 0x80	     15562	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x4006445	          0x4885c0	                           test rax, rax	     15562	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x4006448	            0x7408	                            je 0x4006452	     15562	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x400644a	    0x48816de80001	           sub qword [rbp - 0x18], 0x100	     15563	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x4006452	    0x8b0500000000	            mov eax, dword [0x04006458] 	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4006458	            0x85c0	                           test eax, eax	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x400645a	            0x7437	                            je 0x4006493	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x400645c	        0x837db800	               cmp dword [rbp - 0x48], 0	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4006460	            0x7e31	                           jle 0x4006493	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4006462	          0x8b45b8	             mov eax, dword [rbp - 0x48]	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4006465	            0x89c1	                            mov ecx, eax	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4006467	        0x48d365e8	              shl qword [rbp - 0x18], cl	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x400646b	            0xeb26	                           jmp 0x4006493	     15566	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x400646d	      0xe8df090000	                          call sym.get16	     15568	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	CALL_30
0x4006472	            0x4898	                                    cdqe	     15568	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	CALL_30
0x4006474	        0x488945e8	             mov qword [rbp - 0x18], rax	     15568	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	CALL_30
0x4006478	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15569	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x400647c	      0x2500800000	                         and eax, 0x8000	     15569	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4006481	          0x4885c0	                           test rax, rax	     15569	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4006484	            0x7410	                            je 0x4006496	     15569	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4006486	    0x48816de80000	         sub qword [rbp - 0x18], 0x10000	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x400648e	            0xeb06	                           jmp 0x4006496	     15571	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006490	              0x90	                                     nop	     15558	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006491	            0xeb04	                           jmp 0x4006497	     15558	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006493	              0x90	                                     nop	     15566	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006494	            0xeb01	                           jmp 0x4006497	     15566	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006496	              0x90	                                     nop	     15571	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006497	     0xfb605000000	           movzx eax, byte [0x0400649e] 	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x400649e	            0x84c0	                             test al, al	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x40064a0	            0x7530	                           jne 0x40064d2	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x40064a2	    0x8b0500000000	            mov eax, dword [0x040064a8] 	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40064a8	            0x85c0	                           test eax, eax	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40064aa	            0x750b	                           jne 0x40064b7	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40064ac	    0x8b0500000000	            mov eax, dword [0x040064b2] 	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40064b2	          0x83f806	                              cmp eax, 6	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40064b5	            0x751b	                           jne 0x40064d2	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40064b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15577	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_31
0x40064bb	          0x4889c6	                            mov rsi, rax	     15577	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_31
0x40064be	      0xbf00000000	                              mov edi, 0	     15577	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_31
0x40064c3	      0xe835e9ffff	             call sym.print_displacement	     15577	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_31
0x40064c8	      0xbf00000000	                              mov edi, 0	     15578	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_32
0x40064cd	      0xe8f7e5ffff	                        call sym.oappend	     15578	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_32
0x40064d2	    0x8b0500000000	            mov eax, dword [0x040064d8] 	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40064d8	            0x85c0	                           test eax, eax	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40064da	            0x750f	                           jne 0x40064eb	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40064dc	    0x8b0500000000	            mov eax, dword [0x040064e2] 	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40064e2	          0x83f806	                              cmp eax, 6	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40064e5	     0xf8413010000	                            je 0x40065fe	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40064eb	    0x488b05000000	            mov rax, qword [0x040064f2] 	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40064f2	        0x488d5001	                      lea rdx, [rax + 1]	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40064f6	    0x488915000000	            mov qword [0x040064fd], rdx 	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40064fd	     0xfb615000000	           movzx edx, byte [0x04006504] 	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006504	            0x8810	                      mov byte [rax], dl	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006506	    0x488b05000000	            mov rax, qword [0x0400650d] 	     15584	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x400650d	          0xc60000	                       mov byte [rax], 0	     15584	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006510	    0x488b05000000	            mov rax, qword [0x04006517] 	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_33
0x4006517	    0x8b1500000000	            mov edx, dword [0x0400651d] 	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_33
0x400651d	          0x4863d2	                         movsxd rdx, edx	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_33
0x4006520	        0x48c1e203	                              shl rdx, 3	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_33
0x4006524	          0x4801d0	                            add rax, rdx	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_33
0x4006527	          0x488b00	                    mov rax, qword [rax]	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_33
0x400652a	          0x4889c7	                            mov rdi, rax	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_33
0x400652d	      0xe897e5ffff	                        call sym.oappend	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_33
0x4006532	     0xfb605000000	           movzx eax, byte [0x04006539] 	     15586	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006539	            0x84c0	                             test al, al	     15586	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x400653b	     0xf8496000000	                            je 0x40065d7	     15586	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006541	      0x48837de800	               cmp qword [rbp - 0x18], 0	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006546	            0x7515	                           jne 0x400655d	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006548	    0x8b0500000000	            mov eax, dword [0x0400654e] 	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x400654e	            0x85c0	                           test eax, eax	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006550	            0x750b	                           jne 0x400655d	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006552	    0x8b0500000000	            mov eax, dword [0x04006558] 	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006558	          0x83f806	                              cmp eax, 6	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x400655b	            0x757a	                           jne 0x40065d7	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x400655d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15589	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4006561	          0x4885c0	                           test rax, rax	     15589	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4006564	            0x7821	                            js 0x4006587	     15589	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4006566	    0x488b05000000	            mov rax, qword [0x0400656d] 	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x400656d	        0x488d5001	                      lea rdx, [rax + 1]	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4006571	    0x488915000000	            mov qword [0x04006578], rdx 	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4006578	          0xc6002b	                    mov byte [rax], 0x2b	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x400657b	    0x488b05000000	            mov rax, qword [0x04006582] 	     15592	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4006582	          0xc60000	                       mov byte [rax], 0	     15592	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4006585	            0xeb35	                           jmp 0x40065bc	     15592	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4006587	    0x8b0500000000	            mov eax, dword [0x0400658d] 	     15594	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x400658d	          0x83f801	                              cmp eax, 1	     15594	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4006590	            0x742a	                            je 0x40065bc	     15594	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4006592	    0x488b05000000	            mov rax, qword [0x04006599] 	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4006599	        0x488d5001	                      lea rdx, [rax + 1]	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x400659d	    0x488915000000	            mov qword [0x040065a4], rdx 	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x40065a4	          0xc6002d	                    mov byte [rax], 0x2d	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x40065a7	    0x488b05000000	            mov rax, qword [0x040065ae] 	     15597	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x40065ae	          0xc60000	                       mov byte [rax], 0	     15597	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x40065b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15598	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x40065b5	          0x48f7d8	                                 neg rax	     15598	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x40065b8	        0x488945e8	             mov qword [rbp - 0x18], rax	     15598	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x40065bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15601	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_34
0x40065c0	          0x4889c6	                            mov rsi, rax	     15601	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_34
0x40065c3	      0xbf00000000	                              mov edi, 0	     15601	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_34
0x40065c8	      0xe830e8ffff	             call sym.print_displacement	     15601	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_34
0x40065cd	      0xbf00000000	                              mov edi, 0	     15602	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_35
0x40065d2	      0xe8f2e4ffff	                        call sym.oappend	     15602	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_35
0x40065d7	    0x488b05000000	            mov rax, qword [0x040065de] 	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40065de	        0x488d5001	                      lea rdx, [rax + 1]	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40065e2	    0x488915000000	            mov qword [0x040065e9], rdx 	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40065e9	     0xfb615000000	           movzx edx, byte [0x040065f0] 	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40065f0	            0x8810	                      mov byte [rax], dl	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40065f2	    0x488b05000000	            mov rax, qword [0x040065f9] 	     15606	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40065f9	          0xc60000	                       mov byte [rax], 0	     15606	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40065fc	            0xeb5b	                           jmp 0x4006659	     15606	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40065fe	     0xfb605000000	           movzx eax, byte [0x04006605] 	     15608	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51
0x4006605	            0x84c0	                             test al, al	     15608	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51
0x4006607	            0x7450	                            je 0x4006659	     15608	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51
0x4006609	    0x8b0500000000	            mov eax, dword [0x0400660f] 	     15610	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52
0x400660f	            0x85c0	                           test eax, eax	     15610	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52
0x4006611	            0x7520	                           jne 0x4006633	     15610	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52
0x4006613	    0x488b05000000	            mov rax, qword [0x0400661a] 	     15612	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_36
0x400661a	        0x4883c018	                           add rax, 0x18	     15612	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_36
0x400661e	          0x488b00	                    mov rax, qword [rax]	     15612	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_36
0x4006621	          0x4889c7	                            mov rdi, rax	     15612	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_36
0x4006624	      0xe8a0e4ffff	                        call sym.oappend	     15612	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_36
0x4006629	      0xbf00000000	                              mov edi, 0	     15613	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_37
0x400662e	      0xe896e4ffff	                        call sym.oappend	     15613	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_37
0x4006633	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_38
0x4006637	           0xfb7c0	                           movzx eax, ax	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_38
0x400663a	          0x4889c2	                            mov rdx, rax	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_38
0x400663d	      0xbe01000000	                              mov esi, 1	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_38
0x4006642	      0xbf00000000	                              mov edi, 0	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_38
0x4006647	      0xe880e5ffff	            call sym.print_operand_value	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_38
0x400664c	      0xbf00000000	                              mov edi, 0	     15616	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_39
0x4006651	      0xe873e4ffff	                        call sym.oappend	     15616	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_39
0x4006656	            0xeb01	                           jmp 0x4006659	     15616	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_39
0x4006658	              0x90	                                     nop	     15333	i386-dis.c	FUNCTION_25	IF_9
0x4006659	    0x8b0500000000	            mov eax, dword [0x0400665f] 	     15619	i386-dis.c	FUNCTION_25	IF_53
0x400665f	            0x85c0	                           test eax, eax	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4006661	     0xf84c4000000	                            je 0x400672b	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4006667	    0x8b0500000000	            mov eax, dword [0x0400666d] 	     15619	i386-dis.c	FUNCTION_25	IF_53
0x400666d	            0x85c0	                           test eax, eax	     15619	i386-dis.c	FUNCTION_25	IF_53
0x400666f	     0xf84b6000000	                            je 0x400672b	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4006675	        0x837dac0d	            cmp dword [rbp - 0x54], 0xd 	     15620	i386-dis.c	FUNCTION_25	IF_53
0x4006679	            0x7410	                            je 0x400668b	     15620	i386-dis.c	FUNCTION_25	IF_53
0x400667b	        0x837dac12	           cmp dword [rbp - 0x54], 0x12 	     15621	i386-dis.c	FUNCTION_25	IF_53
0x400667f	            0x740a	                            je 0x400668b	     15621	i386-dis.c	FUNCTION_25	IF_53
0x4006681	        0x837dac13	           cmp dword [rbp - 0x54], 0x13 	     15622	i386-dis.c	FUNCTION_25	IF_53
0x4006685	     0xf85a0000000	                           jne 0x400672b	     15622	i386-dis.c	FUNCTION_25	IF_53
0x400668b	    0x8b0500000000	            mov eax, dword [0x04006691] 	     15624	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x4006691	            0x85c0	                           test eax, eax	     15624	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x4006693	            0x750c	                           jne 0x40066a1	     15624	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x4006695	        0x837dac12	           cmp dword [rbp - 0x54], 0x12 	     15625	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x4006699	            0x7406	                            je 0x40066a1	     15625	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x400669b	        0x837dac13	           cmp dword [rbp - 0x54], 0x13 	     15626	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x400669f	            0x7546	                           jne 0x40066e7	     15626	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x40066a1	    0x8b0500000000	            mov eax, dword [0x040066a7] 	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40066a7	      0x3d00010000	                          cmp eax, 0x100	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40066ac	            0x741a	                            je 0x40066c8	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40066ae	      0x3d00020000	                          cmp eax, 0x200	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40066b3	            0x741f	                            je 0x40066d4	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40066b5	      0x3d80000000	                           cmp eax, 0x80	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40066ba	            0x7524	                           jne 0x40066e0	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40066bc	      0xbf00000000	                              mov edi, 0	     15631	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_40
0x40066c1	      0xe803e4ffff	                        call sym.oappend	     15631	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_40
0x40066c6	            0xeb1d	                           jmp 0x40066e5	     15632	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40066c8	      0xbf00000000	                              mov edi, 0	     15634	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_41
0x40066cd	      0xe8f7e3ffff	                        call sym.oappend	     15634	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_41
0x40066d2	            0xeb11	                           jmp 0x40066e5	     15635	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40066d4	      0xbf00000000	                              mov edi, 0	     15637	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_42
0x40066d9	      0xe8ebe3ffff	                        call sym.oappend	     15637	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_42
0x40066de	            0xeb05	                           jmp 0x40066e5	     15638	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40066e0	      0xe800000000	                          call 0x40066e5	     15640	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_43
0x40066e5	            0xeb44	                           jmp 0x400672b	     15642	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x40066e7	    0x8b0500000000	            mov eax, dword [0x040066ed] 	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40066ed	      0x3d00010000	                          cmp eax, 0x100	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40066f2	            0x741a	                            je 0x400670e	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40066f4	      0x3d00020000	                          cmp eax, 0x200	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40066f9	            0x741f	                            je 0x400671a	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40066fb	      0x3d80000000	                           cmp eax, 0x80	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4006700	            0x7524	                           jne 0x4006726	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4006702	      0xbf00000000	                              mov edi, 0	     15648	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_44
0x4006707	      0xe8bde3ffff	                        call sym.oappend	     15648	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_44
0x400670c	            0xeb1d	                           jmp 0x400672b	     15649	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x400670e	      0xbf00000000	                              mov edi, 0	     15651	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_45
0x4006713	      0xe8b1e3ffff	                        call sym.oappend	     15651	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_45
0x4006718	            0xeb11	                           jmp 0x400672b	     15652	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x400671a	      0xbf00000000	                              mov edi, 0	     15654	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_46
0x400671f	      0xe8a5e3ffff	                        call sym.oappend	     15654	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_46
0x4006724	            0xeb05	                           jmp 0x400672b	     15655	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4006726	      0xe800000000	                          call 0x400672b	     15657	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_47
0x400672b	              0xc9	                                   leave	     15661	i386-dis.c	FUNCTION_25
0x400672c	              0xc3	                                     ret	     15661	i386-dis.c	FUNCTION_25
ckprefix	CALL,1:WHILE,1:functions,0:DO,0:ELSE,1:IF,4:SWITCH,1:FOR,1	220
0x400012c	              0x55	                                push rbp	     12417	i386-dis.c	FUNCTION_2
0x400012d	          0x4889e5	                            mov rbp, rsp	     12417	i386-dis.c	FUNCTION_2
0x4000130	        0x4883ec10	                           sub rsp, 0x10	     12417	i386-dis.c	FUNCTION_2
0x4000134	    0xc70500000000	               mov dword [0x0400013e], 0	     12419	i386-dis.c	FUNCTION_2
0x400013e	    0xc70500000000	               mov dword [0x04000148], 0	     12420	i386-dis.c	FUNCTION_2
0x4000148	    0xc70500000000	               mov dword [0x04000152], 0	     12421	i386-dis.c	FUNCTION_2
0x4000152	    0xc70500000000	               mov dword [0x0400015c], 0	     12422	i386-dis.c	FUNCTION_2
0x400015c	    0xc70500000000	               mov dword [0x04000166], 0	     12423	i386-dis.c	FUNCTION_2
0x4000166	    0xc70500000000	     mov dword [0x04000170], 0xffffffff 	     12424	i386-dis.c	FUNCTION_2
0x4000170	    0xc70500000000	     mov dword [0x0400017a], 0xffffffff 	     12425	i386-dis.c	FUNCTION_2
0x400017a	    0xc70500000000	     mov dword [0x04000184], 0xffffffff 	     12426	i386-dis.c	FUNCTION_2
0x4000184	    0xc70500000000	     mov dword [0x0400018e], 0xffffffff 	     12427	i386-dis.c	FUNCTION_2
0x400018e	    0xc70500000000	     mov dword [0x04000198], 0xffffffff 	     12428	i386-dis.c	FUNCTION_2
0x4000198	    0xc70500000000	     mov dword [0x040001a2], 0xffffffff 	     12429	i386-dis.c	FUNCTION_2
0x40001a2	    0xc70500000000	     mov dword [0x040001ac], 0xffffffff 	     12430	i386-dis.c	FUNCTION_2
0x40001ac	    0xc70500000000	     mov dword [0x040001b6], 0xffffffff 	     12431	i386-dis.c	FUNCTION_2
0x40001b6	    0xc70500000000	               mov dword [0x040001c0], 0	     12432	i386-dis.c	FUNCTION_2
0x40001c0	    0xc745f8000000	                  mov dword [rbp - 8], 0	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x40001c7	            0xeb14	                           jmp 0x40001dd	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x40001c9	          0x8b45f8	                mov eax, dword [rbp - 8]	     12434	i386-dis.c	FUNCTION_2	FOR_1
0x40001cc	            0x4898	                                    cdqe	     12434	i386-dis.c	FUNCTION_2	FOR_1
0x40001ce	    0xc70485000000	                    mov dword [rax*4], 0	     12434	i386-dis.c	FUNCTION_2	FOR_1
0x40001d9	        0x8345f801	                  add dword [rbp - 8], 1	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x40001dd	        0x837df80d	                cmp dword [rbp - 8], 0xd	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x40001e1	            0x7ee6	                           jle 0x40001c9	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x40001e3	    0xc745f8000000	                  mov dword [rbp - 8], 0	     12435	i386-dis.c	FUNCTION_2
0x40001ea	    0xc745fc000000	                  mov dword [rbp - 4], 0	     12436	i386-dis.c	FUNCTION_2
0x40001f1	      0xe968030000	                           jmp 0x400055e	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x40001f6	    0x488b05000000	            mov rax, qword [0x040001fd] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x40001fd	        0x488d5001	                      lea rdx, [rax + 1]	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4000201	    0x488b05000000	            mov rax, qword [0x04000208] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4000208	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400020c	          0x488b00	                    mov rax, qword [rax]	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400020f	          0x4839c2	                            cmp rdx, rax	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4000212	            0x761d	                           jbe 0x4000231	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4000214	    0x488b05000000	            mov rax, qword [0x0400021b] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400021b	        0x488d5001	                      lea rdx, [rax + 1]	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400021f	    0x488b05000000	            mov rax, qword [0x04000226] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4000226	          0x4889d6	                            mov rsi, rdx	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4000229	          0x4889c7	                            mov rdi, rax	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400022c	      0xe80ffeffff	                     call sym.fetch_data	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4000231	    0xc745f4000000	                mov dword [rbp - 0xc], 0	     12441	i386-dis.c	FUNCTION_2	WHILE_1
0x4000238	    0x488b05000000	            mov rax, qword [0x0400023f] 	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400023f	           0xfb600	                   movzx eax, byte [rax]	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000242	           0xfb6c0	                           movzx eax, al	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000245	          0x83f864	                           cmp eax, 0x64	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000248	     0xf84bc010000	                            je 0x400040a	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400024e	          0x83f864	                           cmp eax, 0x64	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000251	            0x7f45	                            jg 0x4000298	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000253	          0x83f836	                           cmp eax, 0x36	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000256	     0xf8439010000	                            je 0x4000395	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400025c	          0x83f836	                           cmp eax, 0x36	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400025f	            0x7f17	                            jg 0x4000278	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000261	          0x83f826	                           cmp eax, 0x26	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000264	     0xf8479010000	                            je 0x40003e3	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400026a	          0x83f82e	                           cmp eax, 0x2e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400026d	     0xf84fb000000	                            je 0x400036e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000273	      0xe976020000	                           jmp 0x40004ee	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000278	          0x83f83e	                           cmp eax, 0x3e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400027b	     0xf843b010000	                            je 0x40003bc	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000281	          0x83f83e	                           cmp eax, 0x3e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000284	     0xf8c64020000	                            jl 0x40004ee	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400028a	          0x83e840	                           sub eax, 0x40	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400028d	          0x83f80f	                            cmp eax, 0xf	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000290	     0xf8758020000	                            ja 0x40004ee	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000296	            0xeb4c	                           jmp 0x40002e4	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4000298	      0x3d9b000000	                           cmp eax, 0x9b	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400029d	     0xf84eb010000	                            je 0x400048e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002a3	      0x3d9b000000	                           cmp eax, 0x9b	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002a8	            0x7f20	                            jg 0x40002ca	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002aa	          0x83f866	                           cmp eax, 0x66	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002ad	     0xf84a4010000	                            je 0x4000457	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002b3	          0x83f866	                           cmp eax, 0x66	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002b6	     0xf8c74010000	                            jl 0x4000430	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002bc	          0x83f867	                           cmp eax, 0x67	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002bf	     0xf84af010000	                            je 0x4000474	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002c5	      0xe924020000	                           jmp 0x40004ee	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002ca	      0x3df2000000	                           cmp eax, 0xf2	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002cf	            0x7463	                            je 0x4000334	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002d1	      0x3df3000000	                           cmp eax, 0xf3	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002d6	            0x743f	                            je 0x4000317	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002d8	      0x3df0000000	                           cmp eax, 0xf0	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002dd	            0x7472	                            je 0x4000351	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002df	      0xe90a020000	                           jmp 0x40004ee	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40002e4	    0x8b0500000000	            mov eax, dword [0x040002ea] 	     12461	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x40002ea	          0x83f802	                              cmp eax, 2	     12461	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x40002ed	            0x751e	                           jne 0x400030d	     12461	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x40002ef	    0x488b05000000	            mov rax, qword [0x040002f6] 	     12462	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x40002f6	           0xfb600	                   movzx eax, byte [rax]	     12462	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x40002f9	           0xfb6c0	                           movzx eax, al	     12462	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x40002fc	          0x8945f4	              mov dword [rbp - 0xc], eax	     12462	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x40002ff	          0x8b45f8	                mov eax, dword [rbp - 8]	     12465	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000302	    0x890500000000	            mov dword [0x04000308], eax 	     12465	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000308	      0xe9e8010000	                           jmp 0x40004f5	     12466	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400030d	      0xb801000000	                              mov eax, 1	     12464	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000312	      0xe956020000	                           jmp 0x400056d	     12464	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000317	    0x8b0500000000	            mov eax, dword [0x0400031d] 	     12468	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400031d	          0x83c801	                               or eax, 1	     12468	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000320	    0x890500000000	            mov dword [0x04000326], eax 	     12468	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000326	          0x8b45f8	                mov eax, dword [rbp - 8]	     12469	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000329	    0x890500000000	            mov dword [0x0400032f], eax 	     12469	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400032f	      0xe9c1010000	                           jmp 0x40004f5	     12470	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000334	    0x8b0500000000	            mov eax, dword [0x0400033a] 	     12472	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400033a	          0x83c802	                               or eax, 2	     12472	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400033d	    0x890500000000	            mov dword [0x04000343], eax 	     12472	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000343	          0x8b45f8	                mov eax, dword [rbp - 8]	     12473	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000346	    0x890500000000	            mov dword [0x0400034c], eax 	     12473	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400034c	      0xe9a4010000	                           jmp 0x40004f5	     12474	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000351	    0x8b0500000000	            mov eax, dword [0x04000357] 	     12476	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000357	          0x83c804	                               or eax, 4	     12476	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400035a	    0x890500000000	            mov dword [0x04000360], eax 	     12476	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000360	          0x8b45f8	                mov eax, dword [rbp - 8]	     12477	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000363	    0x890500000000	            mov dword [0x04000369], eax 	     12477	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000369	      0xe987010000	                           jmp 0x40004f5	     12478	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400036e	    0x8b0500000000	            mov eax, dword [0x04000374] 	     12480	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000374	          0x83c808	                               or eax, 8	     12480	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000377	    0x890500000000	            mov dword [0x0400037d], eax 	     12480	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400037d	          0x8b45f8	                mov eax, dword [rbp - 8]	     12481	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000380	    0x890500000000	            mov dword [0x04000386], eax 	     12481	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000386	    0xc70500000000	               mov dword [0x04000390], 8	     12482	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000390	      0xe960010000	                           jmp 0x40004f5	     12483	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000395	    0x8b0500000000	            mov eax, dword [0x0400039b] 	     12485	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400039b	          0x83c810	                            or eax, 0x10	     12485	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400039e	    0x890500000000	            mov dword [0x040003a4], eax 	     12485	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003a4	          0x8b45f8	                mov eax, dword [rbp - 8]	     12486	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003a7	    0x890500000000	            mov dword [0x040003ad], eax 	     12486	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003ad	    0xc70500000000	           mov dword [0x040003b7], 0x10 	     12487	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003b7	      0xe939010000	                           jmp 0x40004f5	     12488	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003bc	    0x8b0500000000	            mov eax, dword [0x040003c2] 	     12490	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003c2	          0x83c820	                            or eax, 0x20	     12490	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003c5	    0x890500000000	            mov dword [0x040003cb], eax 	     12490	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003cb	          0x8b45f8	                mov eax, dword [rbp - 8]	     12491	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003ce	    0x890500000000	            mov dword [0x040003d4], eax 	     12491	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003d4	    0xc70500000000	           mov dword [0x040003de], 0x20 	     12492	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003de	      0xe912010000	                           jmp 0x40004f5	     12493	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003e3	    0x8b0500000000	            mov eax, dword [0x040003e9] 	     12495	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003e9	          0x83c840	                            or eax, 0x40	     12495	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003ec	    0x890500000000	            mov dword [0x040003f2], eax 	     12495	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003f2	          0x8b45f8	                mov eax, dword [rbp - 8]	     12496	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003f5	    0x890500000000	            mov dword [0x040003fb], eax 	     12496	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40003fb	    0xc70500000000	           mov dword [0x04000405], 0x40 	     12497	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000405	      0xe9eb000000	                           jmp 0x40004f5	     12498	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400040a	    0x8b0500000000	            mov eax, dword [0x04000410] 	     12500	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000410	             0xc80	                             or al, 0x80	     12500	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000412	    0x890500000000	            mov dword [0x04000418], eax 	     12500	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000418	          0x8b45f8	                mov eax, dword [rbp - 8]	     12501	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400041b	    0x890500000000	            mov dword [0x04000421], eax 	     12501	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000421	    0xc70500000000	           mov dword [0x0400042b], 0x80 	     12502	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400042b	      0xe9c5000000	                           jmp 0x40004f5	     12503	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000430	    0x8b0500000000	            mov eax, dword [0x04000436] 	     12505	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000436	          0x80cc01	                                or ah, 1	     12505	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000439	    0x890500000000	            mov dword [0x0400043f], eax 	     12505	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400043f	          0x8b45f8	                mov eax, dword [rbp - 8]	     12506	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000442	    0x890500000000	            mov dword [0x04000448], eax 	     12506	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000448	    0xc70500000000	          mov dword [0x04000452], 0x100 	     12507	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000452	      0xe99e000000	                           jmp 0x40004f5	     12508	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000457	    0x8b0500000000	            mov eax, dword [0x0400045d] 	     12510	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400045d	          0x80cc02	                                or ah, 2	     12510	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000460	    0x890500000000	            mov dword [0x04000466], eax 	     12510	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000466	          0x8b45f8	                mov eax, dword [rbp - 8]	     12511	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000469	    0x890500000000	            mov dword [0x0400046f], eax 	     12511	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400046f	      0xe981000000	                           jmp 0x40004f5	     12512	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000474	    0x8b0500000000	            mov eax, dword [0x0400047a] 	     12514	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400047a	          0x80cc04	                                or ah, 4	     12514	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400047d	    0x890500000000	            mov dword [0x04000483], eax 	     12514	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000483	          0x8b45f8	                mov eax, dword [rbp - 8]	     12515	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000486	    0x890500000000	            mov dword [0x0400048c], eax 	     12515	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400048c	            0xeb67	                           jmp 0x40004f5	     12516	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400048e	          0x8b45f8	                mov eax, dword [rbp - 8]	     12521	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000491	    0x890500000000	            mov dword [0x04000497], eax 	     12521	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4000497	    0x8b0500000000	            mov eax, dword [0x0400049d] 	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400049d	            0x85c0	                           test eax, eax	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400049f	            0x750a	                           jne 0x40004ab	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004a1	    0x8b0500000000	            mov eax, dword [0x040004a7] 	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004a7	            0x85c0	                           test eax, eax	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004a9	            0x7437	                            je 0x40004e2	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004ab	    0x8b0500000000	            mov eax, dword [0x040004b1] 	     12524	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004b1	          0x80cc08	                                or ah, 8	     12524	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004b4	    0x890500000000	            mov dword [0x040004ba], eax 	     12524	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004ba	    0x488b05000000	            mov rax, qword [0x040004c1] 	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004c1	        0x4883c001	                              add rax, 1	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004c5	    0x488905000000	            mov qword [0x040004cc], rax 	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004cc	    0x8b0500000000	            mov eax, dword [0x040004d2] 	     12528	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004d2	    0x890500000000	            mov dword [0x040004d8], eax 	     12528	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004d8	      0xb801000000	                              mov eax, 1	     12529	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004dd	      0xe98b000000	                           jmp 0x400056d	     12529	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40004e2	    0xc70500000000	          mov dword [0x040004ec], 0x800 	     12531	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40004ec	            0xeb07	                           jmp 0x40004f5	     12532	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40004ee	      0xb801000000	                              mov eax, 1	     12534	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40004f3	            0xeb78	                           jmp 0x400056d	     12534	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40004f5	    0x8b0500000000	            mov eax, dword [0x040004fb] 	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40004fb	            0x85c0	                           test eax, eax	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40004fd	            0x7413	                            je 0x4000512	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40004ff	    0x8b0500000000	            mov eax, dword [0x04000505] 	     12539	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4000505	    0x890500000000	            mov dword [0x0400050b], eax 	     12539	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400050b	      0xb801000000	                              mov eax, 1	     12540	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4000510	            0xeb5b	                           jmp 0x400056d	     12540	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4000512	    0x488b05000000	            mov rax, qword [0x04000519] 	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4000519	           0xfb600	                   movzx eax, byte [rax]	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x400051c	            0x3c9b	                            cmp al, 0x9b	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x400051e	            0x741f	                            je 0x400053f	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4000520	          0x8b45f8	                mov eax, dword [rbp - 8]	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4000523	          0x8d5001	                      lea edx, [rax + 1]	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4000526	          0x8955f8	                mov dword [rbp - 8], edx	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4000529	    0x488b15000000	            mov rdx, qword [0x04000530] 	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4000530	           0xfb612	                   movzx edx, byte [rdx]	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4000533	           0xfb6d2	                           movzx edx, dl	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4000536	            0x4898	                                    cdqe	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4000538	    0x891485000000	                  mov dword [rax*4], edx	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x400053f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12544	i386-dis.c	FUNCTION_2	WHILE_1
0x4000542	    0x890500000000	            mov dword [0x04000548], eax 	     12544	i386-dis.c	FUNCTION_2	WHILE_1
0x4000548	    0x488b05000000	            mov rax, qword [0x0400054f] 	     12545	i386-dis.c	FUNCTION_2	WHILE_1
0x400054f	        0x4883c001	                              add rax, 1	     12545	i386-dis.c	FUNCTION_2	WHILE_1
0x4000553	    0x488905000000	            mov qword [0x0400055a], rax 	     12545	i386-dis.c	FUNCTION_2	WHILE_1
0x400055a	        0x8345fc01	                  add dword [rbp - 4], 1	     12546	i386-dis.c	FUNCTION_2	WHILE_1
0x400055e	        0x837dfc0d	                cmp dword [rbp - 4], 0xd	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x4000562	     0xf8e8efcffff	                           jle 0x40001f6	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x4000568	      0xb800000000	                              mov eax, 0	     12548	i386-dis.c	FUNCTION_2
0x400056d	              0xc9	                                   leave	     12549	i386-dis.c	FUNCTION_2
0x400056e	              0xc3	                                     ret	     12549	i386-dis.c	FUNCTION_2
OP_VEX	CALL,8:WHILE,0:functions,0:DO,0:ELSE,2:IF,8:SWITCH,3:FOR,0	120
0x40095de	              0x55	                                push rbp	     17185	i386-dis.c	FUNCTION_79
0x40095df	          0x4889e5	                            mov rbp, rsp	     17185	i386-dis.c	FUNCTION_79
0x40095e2	        0x4883ec20	                           sub rsp, 0x20	     17185	i386-dis.c	FUNCTION_79
0x40095e6	          0x897dec	             mov dword [rbp - 0x14], edi	     17185	i386-dis.c	FUNCTION_79
0x40095e9	          0x8975e8	             mov dword [rbp - 0x18], esi	     17185	i386-dis.c	FUNCTION_79
0x40095ec	     0xfb605000000	           movzx eax, byte [0x040095f3] 	     17189	i386-dis.c	FUNCTION_79	IF_1
0x40095f3	            0x84c0	                             test al, al	     17189	i386-dis.c	FUNCTION_79	IF_1
0x40095f5	            0x7505	                           jne 0x40095fc	     17189	i386-dis.c	FUNCTION_79	IF_1
0x40095f7	      0xe800000000	                          call 0x40095fc	     17190	i386-dis.c	FUNCTION_79	CALL_1
0x40095fc	     0xfb605000000	           movzx eax, byte [0x04009603] 	     17192	i386-dis.c	FUNCTION_79	IF_2
0x4009603	            0x84c0	                             test al, al	     17192	i386-dis.c	FUNCTION_79	IF_2
0x4009605	     0xf849e010000	                            je 0x40097a9	     17192	i386-dis.c	FUNCTION_79	IF_2
0x400960b	    0x8b0500000000	            mov eax, dword [0x04009611] 	     17195	i386-dis.c	FUNCTION_79
0x4009611	          0x8945f4	              mov dword [rbp - 0xc], eax	     17195	i386-dis.c	FUNCTION_79
0x4009614	    0x8b0500000000	            mov eax, dword [0x0400961a] 	     17196	i386-dis.c	FUNCTION_79	IF_3
0x400961a	          0x83f802	                              cmp eax, 2	     17196	i386-dis.c	FUNCTION_79	IF_3
0x400961d	            0x7406	                            je 0x4009625	     17196	i386-dis.c	FUNCTION_79	IF_3
0x400961f	        0x8365f407	                and dword [rbp - 0xc], 7	     17197	i386-dis.c	FUNCTION_79	IF_3
0x4009623	            0xeb18	                           jmp 0x400963d	     17197	i386-dis.c	FUNCTION_79	IF_3
0x4009625	    0x8b0500000000	            mov eax, dword [0x0400962b] 	     17198	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x400962b	            0x85c0	                           test eax, eax	     17198	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x400962d	            0x740e	                            je 0x400963d	     17198	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x400962f	    0x8b0500000000	            mov eax, dword [0x04009635] 	     17198	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x4009635	            0x85c0	                           test eax, eax	     17198	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x4009637	            0x7504	                           jne 0x400963d	     17198	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x4009639	        0x8345f410	             add dword [rbp - 0xc], 0x10	     17199	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x400963d	        0x837dec40	           cmp dword [rbp - 0x14], 0x40 	     17201	i386-dis.c	FUNCTION_79	IF_5
0x4009641	            0x7524	                           jne 0x4009667	     17201	i386-dis.c	FUNCTION_79	IF_5
0x4009643	    0x488b05000000	            mov rax, qword [0x0400964a] 	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x400964a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x400964d	          0x4863d2	                         movsxd rdx, edx	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x4009650	        0x48c1e203	                              shl rdx, 3	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x4009654	          0x4801d0	                            add rax, rdx	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x4009657	          0x488b00	                    mov rax, qword [rax]	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x400965a	          0x4889c7	                            mov rdi, rax	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x400965d	      0xe867b4ffff	                        call sym.oappend	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x4009662	      0xe943010000	                           jmp 0x40097aa	     17204	i386-dis.c	FUNCTION_79	IF_5
0x4009667	    0x8b0500000000	            mov eax, dword [0x0400966d] 	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x400966d	      0x3d00010000	                          cmp eax, 0x100	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x4009672	     0xf848d000000	                            je 0x4009705	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x4009678	      0x3d00020000	                          cmp eax, 0x200	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x400967d	     0xf84f3000000	                            je 0x4009776	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x4009683	      0x3d80000000	                           cmp eax, 0x80	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x4009688	     0xf85f5000000	                           jne 0x4009783	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x400968e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x4009691	          0x83e823	                           sub eax, 0x23	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x4009694	          0x83f822	                           cmp eax, 0x22	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x4009697	            0x7762	                            ja 0x40096fb	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x4009699	            0x89c0	                            mov eax, eax	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x400969b	    0x488b04c50000	                  mov rax, qword [rax*8]	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x40096a3	            0xffe0	                                 jmp rax	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x40096a5	    0x488b05000000	            mov rax, qword [0x040096ac] 	     17216	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x40096ac	        0x488945f8	                mov qword [rbp - 8], rax	     17216	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x40096b0	            0xeb4e	                           jmp 0x4009700	     17217	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x40096b2	    0x8b0500000000	            mov eax, dword [0x040096b8] 	     17219	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	IF_6
0x40096b8	          0x83e008	                              and eax, 8	     17219	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	IF_6
0x40096bb	            0x85c0	                           test eax, eax	     17219	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	IF_6
0x40096bd	            0x740d	                            je 0x40096cc	     17219	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	IF_6
0x40096bf	    0x488b05000000	            mov rax, qword [0x040096c6] 	     17220	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	IF_6
0x40096c6	        0x488945f8	                mov qword [rbp - 8], rax	     17220	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	IF_6
0x40096ca	            0xeb34	                           jmp 0x4009700	     17223	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2
0x40096cc	    0x488b05000000	            mov rax, qword [0x040096d3] 	     17222	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2
0x40096d3	        0x488945f8	                mov qword [rbp - 8], rax	     17222	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2
0x40096d7	            0xeb27	                           jmp 0x4009700	     17223	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2
0x40096d9	        0x837df407	                cmp dword [rbp - 0xc], 7	     17226	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2	IF_7
0x40096dd	            0x7e0f	                           jle 0x40096ee	     17226	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2	IF_7
0x40096df	      0xbf00000000	                              mov edi, 0	     17228	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2	IF_7	CALL_3
0x40096e4	      0xe8e0b3ffff	                        call sym.oappend	     17228	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2	IF_7	CALL_3
0x40096e9	      0xe9bc000000	                           jmp 0x40097aa	     17229	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2	IF_7
0x40096ee	    0x488b05000000	            mov rax, qword [0x040096f5] 	     17231	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x40096f5	        0x488945f8	                mov qword [rbp - 8], rax	     17231	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x40096f9	            0xeb05	                           jmp 0x4009700	     17232	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x40096fb	      0xe800000000	                          call 0x4009700	     17234	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	CALL_4
0x4009700	      0xe983000000	                           jmp 0x4009788	     17237	i386-dis.c	FUNCTION_79	SWITCH_1
0x4009705	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009708	          0x83e831	                           sub eax, 0x31	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x400970b	          0x83f814	                           cmp eax, 0x14	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x400970e	            0x7758	                            ja 0x4009768	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009710	            0x89c0	                            mov eax, eax	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009712	    0x488b04c50000	                  mov rax, qword [rax*8]	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x400971a	            0xffe0	                                 jmp rax	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x400971c	    0x488b05000000	            mov rax, qword [0x04009723] 	     17243	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009723	        0x488945f8	                mov qword [rbp - 8], rax	     17243	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009727	            0xeb4b	                           jmp 0x4009774	     17244	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009729	    0x8b0500000000	            mov eax, dword [0x0400972f] 	     17247	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x400972f	            0x85c0	                           test eax, eax	     17247	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009731	            0x7409	                            je 0x400973c	     17247	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009733	    0x488b05000000	            mov rax, qword [0x0400973a] 	     17247	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x400973a	            0xeb07	                           jmp 0x4009743	     17247	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x400973c	    0x488b05000000	            mov rax, qword [0x04009743] 	     17247	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009743	        0x488945f8	                mov qword [rbp - 8], rax	     17247	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009747	            0xeb2b	                           jmp 0x4009774	     17248	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009749	        0x837df407	                cmp dword [rbp - 0xc], 7	     17251	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	IF_8
0x400974d	            0x7e0c	                           jle 0x400975b	     17251	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	IF_8
0x400974f	      0xbf00000000	                              mov edi, 0	     17253	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	IF_8	CALL_5
0x4009754	      0xe870b3ffff	                        call sym.oappend	     17253	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	IF_8	CALL_5
0x4009759	            0xeb4f	                           jmp 0x40097aa	     17254	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	IF_8
0x400975b	    0x488b05000000	            mov rax, qword [0x04009762] 	     17256	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009762	        0x488945f8	                mov qword [rbp - 8], rax	     17256	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009766	            0xeb0c	                           jmp 0x4009774	     17257	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009768	      0xbf00000000	                              mov edi, 0	     17260	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	CALL_6
0x400976d	      0xe857b3ffff	                        call sym.oappend	     17260	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	CALL_6
0x4009772	            0xeb36	                           jmp 0x40097aa	     17261	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4009774	            0xeb12	                           jmp 0x4009788	     17263	i386-dis.c	FUNCTION_79	SWITCH_1
0x4009776	    0x488b05000000	            mov rax, qword [0x0400977d] 	     17265	i386-dis.c	FUNCTION_79	SWITCH_1
0x400977d	        0x488945f8	                mov qword [rbp - 8], rax	     17265	i386-dis.c	FUNCTION_79	SWITCH_1
0x4009781	            0xeb05	                           jmp 0x4009788	     17266	i386-dis.c	FUNCTION_79	SWITCH_1
0x4009783	      0xe800000000	                          call 0x4009788	     17268	i386-dis.c	FUNCTION_79	SWITCH_1	CALL_7
0x4009788	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x400978b	            0x4898	                                    cdqe	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x400978d	    0x488d14c50000	                        lea rdx, [rax*8]	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x4009795	        0x488b45f8	                mov rax, qword [rbp - 8]	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x4009799	          0x4801d0	                            add rax, rdx	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x400979c	          0x488b00	                    mov rax, qword [rax]	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x400979f	          0x4889c7	                            mov rdi, rax	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x40097a2	      0xe822b3ffff	                        call sym.oappend	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x40097a7	            0xeb01	                           jmp 0x40097aa	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x40097a9	              0x90	                                     nop	     17193	i386-dis.c	FUNCTION_79	IF_2
0x40097aa	              0xc9	                                   leave	     17272	i386-dis.c	FUNCTION_79
0x40097ab	              0xc3	                                     ret	     17272	i386-dis.c	FUNCTION_79
OP_EM	CALL,3:WHILE,0:functions,0:DO,0:ELSE,1:IF,5:SWITCH,0:FOR,0	88
0x40083ff	              0x55	                                push rbp	     16490	i386-dis.c	FUNCTION_52
0x4008400	          0x4889e5	                            mov rbp, rsp	     16490	i386-dis.c	FUNCTION_52
0x4008403	        0x4883ec20	                           sub rsp, 0x20	     16490	i386-dis.c	FUNCTION_52
0x4008407	          0x897dec	             mov dword [rbp - 0x14], edi	     16490	i386-dis.c	FUNCTION_52
0x400840a	          0x8975e8	             mov dword [rbp - 0x18], esi	     16490	i386-dis.c	FUNCTION_52
0x400840d	    0x8b0500000000	            mov eax, dword [0x04008413] 	     16494	i386-dis.c	FUNCTION_52	IF_1
0x4008413	          0x83f803	                              cmp eax, 3	     16494	i386-dis.c	FUNCTION_52	IF_1
0x4008416	            0x7464	                            je 0x400847c	     16494	i386-dis.c	FUNCTION_52	IF_1
0x4008418	     0xfb605000000	           movzx eax, byte [0x0400841f] 	     16496	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x400841f	            0x84c0	                             test al, al	     16496	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008421	            0x7445	                            je 0x4008468	     16496	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008423	        0x837dec04	               cmp dword [rbp - 0x14], 4	     16497	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008427	            0x7406	                            je 0x400842f	     16497	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008429	        0x837dec05	               cmp dword [rbp - 0x14], 5	     16497	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x400842d	            0x7539	                           jne 0x4008468	     16497	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x400842f	    0x8b0500000000	            mov eax, dword [0x04008435] 	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008435	      0x2500020000	                          and eax, 0x200	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x400843a	            0x85c0	                           test eax, eax	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x400843c	            0x7407	                            je 0x4008445	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x400843e	      0xb80d000000	                            mov eax, 0xd	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008443	            0xeb05	                           jmp 0x400844a	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008445	      0xb80a000000	                            mov eax, 0xa	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x400844a	          0x8945ec	             mov dword [rbp - 0x14], eax	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x400844d	    0x8b0500000000	            mov eax, dword [0x04008453] 	     16500	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008453	      0x2500020000	                          and eax, 0x200	     16500	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008458	            0x89c2	                            mov edx, eax	     16500	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x400845a	    0x8b0500000000	            mov eax, dword [0x04008460] 	     16500	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008460	             0x9d0	                             or eax, edx	     16500	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008462	    0x890500000000	            mov dword [0x04008468], eax 	     16500	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x4008468	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     16502	i386-dis.c	FUNCTION_52	IF_1	CALL_1
0x400846b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     16502	i386-dis.c	FUNCTION_52	IF_1	CALL_1
0x400846e	            0x89d6	                            mov esi, edx	     16502	i386-dis.c	FUNCTION_52	IF_1	CALL_1
0x4008470	            0x89c7	                            mov edi, eax	     16502	i386-dis.c	FUNCTION_52	IF_1	CALL_1
0x4008472	      0xe8b6e2ffff	                           call sym.OP_E	     16502	i386-dis.c	FUNCTION_52	IF_1	CALL_1
0x4008477	      0xe9ce000000	                           jmp 0x400854a	     16503	i386-dis.c	FUNCTION_52	IF_1
0x400847c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16506	i386-dis.c	FUNCTION_52	IF_3
0x400847f	          0x83e004	                              and eax, 4	     16506	i386-dis.c	FUNCTION_52	IF_3
0x4008482	            0x85c0	                           test eax, eax	     16506	i386-dis.c	FUNCTION_52	IF_3
0x4008484	            0x740b	                            je 0x4008491	     16506	i386-dis.c	FUNCTION_52	IF_3
0x4008486	        0x837dec05	               cmp dword [rbp - 0x14], 5	     16506	i386-dis.c	FUNCTION_52	IF_3
0x400848a	            0x7505	                           jne 0x4008491	     16506	i386-dis.c	FUNCTION_52	IF_3
0x400848c	      0xe8d6abffff	                   call sym.swap_operand	     16507	i386-dis.c	FUNCTION_52	CALL_2
0x4008491	     0xfb605000000	           movzx eax, byte [0x04008498] 	     16510	i386-dis.c	FUNCTION_52
0x4008498	            0x84c0	                             test al, al	     16510	i386-dis.c	FUNCTION_52
0x400849a	            0x7505	                           jne 0x40084a1	     16510	i386-dis.c	FUNCTION_52
0x400849c	      0xe800000000	                          call 0x40084a1	     16510	i386-dis.c	FUNCTION_52
0x40084a1	    0x488b05000000	            mov rax, qword [0x040084a8] 	     16511	i386-dis.c	FUNCTION_52
0x40084a8	        0x4883c001	                              add rax, 1	     16511	i386-dis.c	FUNCTION_52
0x40084ac	    0x488905000000	            mov qword [0x040084b3], rax 	     16511	i386-dis.c	FUNCTION_52
0x40084b3	    0x8b0500000000	            mov eax, dword [0x040084b9] 	     16512	i386-dis.c	FUNCTION_52
0x40084b9	      0x2500020000	                          and eax, 0x200	     16512	i386-dis.c	FUNCTION_52
0x40084be	            0x89c2	                            mov edx, eax	     16512	i386-dis.c	FUNCTION_52
0x40084c0	    0x8b0500000000	            mov eax, dword [0x040084c6] 	     16512	i386-dis.c	FUNCTION_52
0x40084c6	             0x9d0	                             or eax, edx	     16512	i386-dis.c	FUNCTION_52
0x40084c8	    0x890500000000	            mov dword [0x040084ce], eax 	     16512	i386-dis.c	FUNCTION_52
0x40084ce	    0x8b0500000000	            mov eax, dword [0x040084d4] 	     16513	i386-dis.c	FUNCTION_52
0x40084d4	          0x8945f4	              mov dword [rbp - 0xc], eax	     16513	i386-dis.c	FUNCTION_52
0x40084d7	    0x8b0500000000	            mov eax, dword [0x040084dd] 	     16514	i386-dis.c	FUNCTION_52	IF_4
0x40084dd	      0x2500020000	                          and eax, 0x200	     16514	i386-dis.c	FUNCTION_52	IF_4
0x40084e2	            0x85c0	                           test eax, eax	     16514	i386-dis.c	FUNCTION_52	IF_4
0x40084e4	            0x743a	                            je 0x4008520	     16514	i386-dis.c	FUNCTION_52	IF_4
0x40084e6	    0x488b05000000	            mov rax, qword [0x040084ed] 	     16516	i386-dis.c	FUNCTION_52	IF_4
0x40084ed	        0x488945f8	                mov qword [rbp - 8], rax	     16516	i386-dis.c	FUNCTION_52	IF_4
0x40084f1	    0x8b0500000000	            mov eax, dword [0x040084f7] 	     16517	i386-dis.c	FUNCTION_52	IF_4
0x40084f7	          0x83e001	                              and eax, 1	     16517	i386-dis.c	FUNCTION_52	IF_4
0x40084fa	            0x85c0	                           test eax, eax	     16517	i386-dis.c	FUNCTION_52	IF_4
0x40084fc	            0x740f	                            je 0x400850d	     16517	i386-dis.c	FUNCTION_52	IF_4
0x40084fe	    0x8b0500000000	            mov eax, dword [0x04008504] 	     16517	i386-dis.c	FUNCTION_52	IF_4
0x4008504	          0x83c841	                            or eax, 0x41	     16517	i386-dis.c	FUNCTION_52	IF_4
0x4008507	    0x890500000000	            mov dword [0x0400850d], eax 	     16517	i386-dis.c	FUNCTION_52	IF_4
0x400850d	    0x8b0500000000	            mov eax, dword [0x04008513] 	     16518	i386-dis.c	FUNCTION_52	IF_4	IF_5
0x4008513	          0x83e001	                              and eax, 1	     16518	i386-dis.c	FUNCTION_52	IF_4	IF_5
0x4008516	            0x85c0	                           test eax, eax	     16518	i386-dis.c	FUNCTION_52	IF_4	IF_5
0x4008518	            0x7411	                            je 0x400852b	     16518	i386-dis.c	FUNCTION_52	IF_4	IF_5
0x400851a	        0x8345f408	                add dword [rbp - 0xc], 8	     16519	i386-dis.c	FUNCTION_52	IF_4	IF_5
0x400851e	            0xeb0b	                           jmp 0x400852b	     16519	i386-dis.c	FUNCTION_52	IF_4	IF_5
0x4008520	    0x488b05000000	            mov rax, qword [0x04008527] 	     16522	i386-dis.c	FUNCTION_52	ELSE_1
0x4008527	        0x488945f8	                mov qword [rbp - 8], rax	     16522	i386-dis.c	FUNCTION_52	ELSE_1
0x400852b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     16523	i386-dis.c	FUNCTION_52	CALL_3
0x400852e	            0x4898	                                    cdqe	     16523	i386-dis.c	FUNCTION_52	CALL_3
0x4008530	    0x488d14c50000	                        lea rdx, [rax*8]	     16523	i386-dis.c	FUNCTION_52	CALL_3
0x4008538	        0x488b45f8	                mov rax, qword [rbp - 8]	     16523	i386-dis.c	FUNCTION_52	CALL_3
0x400853c	          0x4801d0	                            add rax, rdx	     16523	i386-dis.c	FUNCTION_52	CALL_3
0x400853f	          0x488b00	                    mov rax, qword [rax]	     16523	i386-dis.c	FUNCTION_52	CALL_3
0x4008542	          0x4889c7	                            mov rdi, rax	     16523	i386-dis.c	FUNCTION_52	CALL_3
0x4008545	      0xe87fc5ffff	                        call sym.oappend	     16523	i386-dis.c	FUNCTION_52	CALL_3
0x400854a	              0xc9	                                   leave	     16524	i386-dis.c	FUNCTION_52
0x400854b	              0xc3	                                     ret	     16524	i386-dis.c	FUNCTION_52
HLE_Fixup3	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0	27
0x400906f	              0x55	                                push rbp	     17017	i386-dis.c	FUNCTION_73
0x4009070	          0x4889e5	                            mov rbp, rsp	     17017	i386-dis.c	FUNCTION_73
0x4009073	        0x4883ec10	                           sub rsp, 0x10	     17017	i386-dis.c	FUNCTION_73
0x4009077	          0x897dfc	                mov dword [rbp - 4], edi	     17017	i386-dis.c	FUNCTION_73
0x400907a	          0x8975f8	                mov dword [rbp - 8], esi	     17017	i386-dis.c	FUNCTION_73
0x400907d	    0x8b0500000000	            mov eax, dword [0x04009083] 	     17018	i386-dis.c	FUNCTION_73	IF_1
0x4009083	          0x83f803	                              cmp eax, 3	     17018	i386-dis.c	FUNCTION_73	IF_1
0x4009086	            0x7430	                            je 0x40090b8	     17018	i386-dis.c	FUNCTION_73	IF_1
0x4009088	    0x8b1500000000	            mov edx, dword [0x0400908e] 	     17019	i386-dis.c	FUNCTION_73	IF_1
0x400908e	    0x8b0500000000	            mov eax, dword [0x04009094] 	     17019	i386-dis.c	FUNCTION_73	IF_1
0x4009094	            0x39c2	                            cmp edx, eax	     17019	i386-dis.c	FUNCTION_73	IF_1
0x4009096	            0x7e20	                           jle 0x40090b8	     17019	i386-dis.c	FUNCTION_73	IF_1
0x4009098	    0x8b0500000000	            mov eax, dword [0x0400909e] 	     17020	i386-dis.c	FUNCTION_73	IF_1
0x400909e	          0x83e001	                              and eax, 1	     17020	i386-dis.c	FUNCTION_73	IF_1
0x40090a1	            0x85c0	                           test eax, eax	     17020	i386-dis.c	FUNCTION_73	IF_1
0x40090a3	            0x7413	                            je 0x40090b8	     17020	i386-dis.c	FUNCTION_73	IF_1
0x40090a5	    0x8b0500000000	            mov eax, dword [0x040090ab] 	     17021	i386-dis.c	FUNCTION_73	IF_1
0x40090ab	            0x4898	                                    cdqe	     17021	i386-dis.c	FUNCTION_73	IF_1
0x40090ad	    0xc70485000000	                mov dword [rax*4], 0x4f3	     17021	i386-dis.c	FUNCTION_73	IF_1
0x40090b8	          0x8b55f8	                mov edx, dword [rbp - 8]	     17023	i386-dis.c	FUNCTION_73	CALL_1
0x40090bb	          0x8b45fc	                mov eax, dword [rbp - 4]	     17023	i386-dis.c	FUNCTION_73	CALL_1
0x40090be	            0x89d6	                            mov esi, edx	     17023	i386-dis.c	FUNCTION_73	CALL_1
0x40090c0	            0x89c7	                            mov edi, eax	     17023	i386-dis.c	FUNCTION_73	CALL_1
0x40090c2	      0xe866d6ffff	                           call sym.OP_E	     17023	i386-dis.c	FUNCTION_73	CALL_1
0x40090c7	              0x90	                                     nop	     17024	i386-dis.c	FUNCTION_73
0x40090c8	              0xc9	                                   leave	     17024	i386-dis.c	FUNCTION_73
0x40090c9	              0xc3	                                     ret	     17024	i386-dis.c	FUNCTION_73
OP_IMREG	CALL,1:WHILE,0:functions,0:DO,0:ELSE,5:IF,6:SWITCH,1:FOR,0	147
0x40071b6	              0x55	                                push rbp	     15917	i386-dis.c	FUNCTION_34
0x40071b7	          0x4889e5	                            mov rbp, rsp	     15917	i386-dis.c	FUNCTION_34
0x40071ba	        0x4883ec20	                           sub rsp, 0x20	     15917	i386-dis.c	FUNCTION_34
0x40071be	          0x897dec	             mov dword [rbp - 0x14], edi	     15917	i386-dis.c	FUNCTION_34
0x40071c1	          0x8975e8	             mov dword [rbp - 0x18], esi	     15917	i386-dis.c	FUNCTION_34
0x40071c4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40071c7	          0x83e846	                           sub eax, 0x46	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40071ca	          0x83f827	                           cmp eax, 0x27	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40071cd	     0xf8702020000	                            ja 0x40073d5	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40071d3	            0x89c0	                            mov eax, eax	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40071d5	    0x488b04c50000	                  mov rax, qword [rax*8]	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40071dd	            0xffe0	                                 jmp rax	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40071df	     0xfb605000000	           movzx eax, byte [0x040071e6] 	     15923	i386-dis.c	FUNCTION_34	SWITCH_1	IF_1
0x40071e6	            0x84c0	                             test al, al	     15923	i386-dis.c	FUNCTION_34	SWITCH_1	IF_1
0x40071e8	            0x740d	                            je 0x40071f7	     15923	i386-dis.c	FUNCTION_34	SWITCH_1	IF_1
0x40071ea	    0x48c745f80000	                  mov qword [rbp - 8], 0	     15924	i386-dis.c	FUNCTION_34	SWITCH_1	IF_1
0x40071f2	      0xe9f4010000	                           jmp 0x40073eb	     15927	i386-dis.c	FUNCTION_34	SWITCH_1
0x40071f7	    0x48c745f80000	                  mov qword [rbp - 8], 0	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x40071ff	      0xe9e7010000	                           jmp 0x40073eb	     15927	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007204	    0x488b05000000	            mov rax, qword [0x0400720b] 	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x400720b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x400720e	          0x4863d2	                         movsxd rdx, edx	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007211	        0x48c1e203	                              shl rdx, 3	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007215	    0x4881eae00200	                          sub rdx, 0x2e0	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x400721c	          0x4801d0	                            add rax, rdx	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x400721f	          0x488b00	                    mov rax, qword [rax]	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007222	        0x488945f8	                mov qword [rbp - 8], rax	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007226	      0xe9c0010000	                           jmp 0x40073eb	     15931	i386-dis.c	FUNCTION_34	SWITCH_1
0x400722b	    0x488b05000000	            mov rax, qword [0x04007232] 	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007232	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007235	          0x4863d2	                         movsxd rdx, edx	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007238	        0x48c1e203	                              shl rdx, 3	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x400723c	    0x4881ea300200	                          sub rdx, 0x230	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007243	          0x4801d0	                            add rax, rdx	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007246	          0x488b00	                    mov rax, qword [rax]	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007249	        0x488945f8	                mov qword [rbp - 8], rax	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x400724d	      0xe999010000	                           jmp 0x40073eb	     15935	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007252	    0x8b0500000000	            mov eax, dword [0x04007258] 	     15938	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007258	          0x83c840	                            or eax, 0x40	     15938	i386-dis.c	FUNCTION_34	SWITCH_1
0x400725b	    0x890500000000	            mov dword [0x04007261], eax 	     15938	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007261	    0x8b0500000000	            mov eax, dword [0x04007267] 	     15939	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4007267	            0x85c0	                           test eax, eax	     15939	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4007269	            0x7427	                            je 0x4007292	     15939	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x400726b	    0x488b05000000	            mov rax, qword [0x04007272] 	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4007272	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4007275	          0x4863d2	                         movsxd rdx, edx	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4007278	        0x48c1e203	                              shl rdx, 3	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x400727c	    0x4881eaa00200	                          sub rdx, 0x2a0	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4007283	          0x4801d0	                            add rax, rdx	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4007286	          0x488b00	                    mov rax, qword [rax]	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4007289	        0x488945f8	                mov qword [rbp - 8], rax	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x400728d	      0xe959010000	                           jmp 0x40073eb	     15943	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007292	    0x488b05000000	            mov rax, qword [0x04007299] 	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4007299	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x400729c	          0x4863d2	                         movsxd rdx, edx	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x400729f	        0x48c1e203	                              shl rdx, 3	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x40072a3	    0x4881eaa00200	                          sub rdx, 0x2a0	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x40072aa	          0x4801d0	                            add rax, rdx	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x40072ad	          0x488b00	                    mov rax, qword [rax]	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x40072b0	        0x488945f8	                mov qword [rbp - 8], rax	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x40072b4	      0xe932010000	                           jmp 0x40073eb	     15943	i386-dis.c	FUNCTION_34	SWITCH_1
0x40072b9	    0x8b0500000000	            mov eax, dword [0x040072bf] 	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x40072bf	          0x83e008	                              and eax, 8	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x40072c2	            0x85c0	                           test eax, eax	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x40072c4	            0x740f	                            je 0x40072d5	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x40072c6	    0x8b0500000000	            mov eax, dword [0x040072cc] 	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x40072cc	          0x83c848	                            or eax, 0x48	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x40072cf	    0x890500000000	            mov dword [0x040072d5], eax 	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x40072d5	    0x8b0500000000	            mov eax, dword [0x040072db] 	     15947	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x40072db	          0x83e008	                              and eax, 8	     15947	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x40072de	            0x85c0	                           test eax, eax	     15947	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x40072e0	            0x7427	                            je 0x4007309	     15947	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x40072e2	    0x488b05000000	            mov rax, qword [0x040072e9] 	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x40072e9	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x40072ec	          0x4863d2	                         movsxd rdx, edx	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x40072ef	        0x48c1e203	                              shl rdx, 3	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x40072f3	    0x4881ea600200	                          sub rdx, 0x260	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x40072fa	          0x4801d0	                            add rax, rdx	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x40072fd	          0x488b00	                    mov rax, qword [rax]	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x4007300	        0x488945f8	                mov qword [rbp - 8], rax	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x4007304	      0xe9e2000000	                           jmp 0x40073eb	     15957	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007309	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     15951	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x400730c	          0x83e001	                              and eax, 1	     15951	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x400730f	            0x85c0	                           test eax, eax	     15951	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4007311	            0x7424	                            je 0x4007337	     15951	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4007313	    0x488b05000000	            mov rax, qword [0x0400731a] 	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x400731a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x400731d	          0x4863d2	                         movsxd rdx, edx	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4007320	        0x48c1e203	                              shl rdx, 3	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4007324	    0x4881ea600200	                          sub rdx, 0x260	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x400732b	          0x4801d0	                            add rax, rdx	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x400732e	          0x488b00	                    mov rax, qword [rax]	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4007331	        0x488945f8	                mov qword [rbp - 8], rax	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4007335	            0xeb22	                           jmp 0x4007359	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4007337	    0x488b05000000	            mov rax, qword [0x0400733e] 	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x400733e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4007341	          0x4863d2	                         movsxd rdx, edx	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4007344	        0x48c1e203	                              shl rdx, 3	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4007348	    0x4881ea600200	                          sub rdx, 0x260	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x400734f	          0x4801d0	                            add rax, rdx	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4007352	          0x488b00	                    mov rax, qword [rax]	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4007355	        0x488945f8	                mov qword [rbp - 8], rax	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4007359	    0x8b0500000000	            mov eax, dword [0x0400735f] 	     15955	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3
0x400735f	      0x2500020000	                          and eax, 0x200	     15955	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3
0x4007364	            0x89c2	                            mov edx, eax	     15955	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3
0x4007366	    0x8b0500000000	            mov eax, dword [0x0400736c] 	     15955	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3
0x400736c	             0x9d0	                             or eax, edx	     15955	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3
0x400736e	    0x890500000000	            mov dword [0x04007374], eax 	     15955	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3
0x4007374	            0xeb75	                           jmp 0x40073eb	     15957	i386-dis.c	FUNCTION_34	SWITCH_1
0x4007376	    0x8b0500000000	            mov eax, dword [0x0400737c] 	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x400737c	          0x83e008	                              and eax, 8	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x400737f	            0x85c0	                           test eax, eax	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4007381	            0x750a	                           jne 0x400738d	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4007383	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4007386	          0x83e001	                              and eax, 1	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4007389	            0x85c0	                           test eax, eax	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x400738b	            0x7410	                            je 0x400739d	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x400738d	    0x488b05000000	            mov rax, qword [0x04007394] 	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4007394	          0x488b00	                    mov rax, qword [rax]	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4007397	        0x488945f8	                mov qword [rbp - 8], rax	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x400739b	            0xeb0e	                           jmp 0x40073ab	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x400739d	    0x488b05000000	            mov rax, qword [0x040073a4] 	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
0x40073a4	          0x488b00	                    mov rax, qword [rax]	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
0x40073a7	        0x488945f8	                mov qword [rbp - 8], rax	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
0x40073ab	    0x8b0500000000	            mov eax, dword [0x040073b1] 	     15963	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40073b1	          0x83e008	                              and eax, 8	     15963	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40073b4	            0x85c0	                           test eax, eax	     15963	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40073b6	            0x7532	                           jne 0x40073ea	     15963	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40073b8	    0x8b0500000000	            mov eax, dword [0x040073be] 	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40073be	      0x2500020000	                          and eax, 0x200	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40073c3	            0x89c2	                            mov edx, eax	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40073c5	    0x8b0500000000	            mov eax, dword [0x040073cb] 	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40073cb	             0x9d0	                             or eax, edx	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40073cd	    0x890500000000	            mov dword [0x040073d3], eax 	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40073d3	            0xeb15	                           jmp 0x40073ea	     15965	i386-dis.c	FUNCTION_34	SWITCH_1
0x40073d5	      0xbe00000000	                              mov esi, 0	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40073da	      0xbf00000000	                              mov edi, 0	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40073df	      0xe800000000	                          call 0x40073e4	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40073e4	        0x488945f8	                mov qword [rbp - 8], rax	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40073e8	            0xeb01	                           jmp 0x40073eb	     15968	i386-dis.c	FUNCTION_34	SWITCH_1
0x40073ea	              0x90	                                     nop	     15965	i386-dis.c	FUNCTION_34	SWITCH_1
0x40073eb	        0x488b45f8	                mov rax, qword [rbp - 8]	     15970	i386-dis.c	FUNCTION_34	CALL_1
0x40073ef	          0x4889c7	                            mov rdi, rax	     15970	i386-dis.c	FUNCTION_34	CALL_1
0x40073f2	      0xe8d2d6ffff	                        call sym.oappend	     15970	i386-dis.c	FUNCTION_34	CALL_1
0x40073f7	              0x90	                                     nop	     15971	i386-dis.c	FUNCTION_34
0x40073f8	              0xc9	                                   leave	     15971	i386-dis.c	FUNCTION_34
0x40073f9	              0xc3	                                     ret	     15971	i386-dis.c	FUNCTION_34
print_displacement	CALL,5:WHILE,0:functions,0:DO,0:ELSE,0:IF,3:SWITCH,1:FOR,1	113
0x4004dfd	              0x55	                                push rbp	     14682	i386-dis.c	FUNCTION_22
0x4004dfe	          0x4889e5	                            mov rbp, rsp	     14682	i386-dis.c	FUNCTION_22
0x4004e01	        0x4883ec50	                           sub rsp, 0x50	     14682	i386-dis.c	FUNCTION_22
0x4004e05	        0x48897db8	             mov qword [rbp - 0x48], rdi	     14682	i386-dis.c	FUNCTION_22
0x4004e09	        0x488975b0	             mov qword [rbp - 0x50], rsi	     14682	i386-dis.c	FUNCTION_22
0x4004e0d	    0x64488b042528	                mov rax, qword fs:[0x28]	     14682	i386-dis.c	FUNCTION_22
0x4004e16	        0x488945f8	                mov qword [rbp - 8], rax	     14682	i386-dis.c	FUNCTION_22
0x4004e1a	            0x31c0	                            xor eax, eax	     14682	i386-dis.c	FUNCTION_22
0x4004e1c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	     14683	i386-dis.c	FUNCTION_22
0x4004e20	        0x488945c8	             mov qword [rbp - 0x38], rax	     14683	i386-dis.c	FUNCTION_22
0x4004e24	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	     14685	i386-dis.c	FUNCTION_22
0x4004e2b	      0x48837dc800	               cmp qword [rbp - 0x38], 0	     14687	i386-dis.c	FUNCTION_22	IF_1
0x4004e30	     0xf89c9000000	                           jns 0x4004eff	     14687	i386-dis.c	FUNCTION_22	IF_1
0x4004e36	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14689	i386-dis.c	FUNCTION_22	IF_1
0x4004e39	          0x8d5001	                      lea edx, [rax + 1]	     14689	i386-dis.c	FUNCTION_22	IF_1
0x4004e3c	          0x8955c4	             mov dword [rbp - 0x3c], edx	     14689	i386-dis.c	FUNCTION_22	IF_1
0x4004e3f	          0x4863d0	                         movsxd rdx, eax	     14689	i386-dis.c	FUNCTION_22	IF_1
0x4004e42	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14689	i386-dis.c	FUNCTION_22	IF_1
0x4004e46	          0x4801d0	                            add rax, rdx	     14689	i386-dis.c	FUNCTION_22	IF_1
0x4004e49	          0xc6002d	                    mov byte [rax], 0x2d	     14689	i386-dis.c	FUNCTION_22	IF_1
0x4004e4c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	     14690	i386-dis.c	FUNCTION_22	IF_1
0x4004e50	          0x48f7d8	                                 neg rax	     14690	i386-dis.c	FUNCTION_22	IF_1
0x4004e53	        0x488945c8	             mov qword [rbp - 0x38], rax	     14690	i386-dis.c	FUNCTION_22	IF_1
0x4004e57	      0x48837dc800	               cmp qword [rbp - 0x38], 0	     14693	i386-dis.c	FUNCTION_22	IF_1	IF_2
0x4004e5c	     0xf899d000000	                           jns 0x4004eff	     14693	i386-dis.c	FUNCTION_22	IF_1	IF_2
0x4004e62	    0x8b0500000000	            mov eax, dword [0x04004e68] 	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4004e68	          0x83f801	                              cmp eax, 1	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4004e6b	            0x7446	                            je 0x4004eb3	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4004e6d	          0x83f801	                              cmp eax, 1	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4004e70	            0x726a	                            jb 0x4004edc	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4004e72	          0x83f802	                              cmp eax, 2	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4004e75	            0x7405	                            je 0x4004e7c	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4004e77	      0xe91a010000	                           jmp 0x4004f96	     14707	i386-dis.c	FUNCTION_22	IF_1	IF_2
0x4004e7c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14698	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_1
0x4004e7f	          0x4863d0	                         movsxd rdx, eax	     14698	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_1
0x4004e82	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14698	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_1
0x4004e86	          0x4801d0	                            add rax, rdx	     14698	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_1
0x4004e89	    0x48b930783830	          movabs rcx, 0x3030303030387830	     14698	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_1
0x4004e93	          0x488908	                    mov qword [rax], rcx	     14698	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_1
0x4004e96	    0x48be30303030	          movabs rsi, 0x3030303030303030	     14698	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_1
0x4004ea0	        0x48897008	                mov qword [rax + 8], rsi	     14698	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_1
0x4004ea4	    0x66c740103030	          mov word [rax + 0x10], 0x3030 	     14698	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_1
0x4004eaa	        0xc6401200	                mov byte [rax + 0x12], 0	     14698	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_1
0x4004eae	      0xe9e3000000	                           jmp 0x4004f96	     14699	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4004eb3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14701	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_2
0x4004eb6	          0x4863d0	                         movsxd rdx, eax	     14701	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_2
0x4004eb9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14701	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_2
0x4004ebd	          0x4801d0	                            add rax, rdx	     14701	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_2
0x4004ec0	    0x48bf30783830	          movabs rdi, 0x3030303030387830	     14701	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_2
0x4004eca	          0x488938	                    mov qword [rax], rdi	     14701	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_2
0x4004ecd	    0x66c740083030	              mov word [rax + 8], 0x3030	     14701	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_2
0x4004ed3	        0xc6400a00	                 mov byte [rax + 0xa], 0	     14701	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_2
0x4004ed7	      0xe9ba000000	                           jmp 0x4004f96	     14702	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4004edc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14704	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_3
0x4004edf	          0x4863d0	                         movsxd rdx, eax	     14704	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_3
0x4004ee2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14704	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_3
0x4004ee6	          0x4801d0	                            add rax, rdx	     14704	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_3
0x4004ee9	    0xc70030783830	            mov dword [rax], 0x30387830 	     14704	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_3
0x4004eef	    0x66c740043030	              mov word [rax + 4], 0x3030	     14704	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_3
0x4004ef5	        0xc6400600	                   mov byte [rax + 6], 0	     14704	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1	CALL_3
0x4004ef9	              0x90	                                     nop	     14705	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4004efa	      0xe997000000	                           jmp 0x4004f96	     14705	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4004eff	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14711	i386-dis.c	FUNCTION_22
0x4004f02	          0x8d5001	                      lea edx, [rax + 1]	     14711	i386-dis.c	FUNCTION_22
0x4004f05	          0x8955c4	             mov dword [rbp - 0x3c], edx	     14711	i386-dis.c	FUNCTION_22
0x4004f08	          0x4863d0	                         movsxd rdx, eax	     14711	i386-dis.c	FUNCTION_22
0x4004f0b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14711	i386-dis.c	FUNCTION_22
0x4004f0f	          0x4801d0	                            add rax, rdx	     14711	i386-dis.c	FUNCTION_22
0x4004f12	          0xc60030	                    mov byte [rax], 0x30	     14711	i386-dis.c	FUNCTION_22
0x4004f15	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14712	i386-dis.c	FUNCTION_22
0x4004f18	          0x8d5001	                      lea edx, [rax + 1]	     14712	i386-dis.c	FUNCTION_22
0x4004f1b	          0x8955c4	             mov dword [rbp - 0x3c], edx	     14712	i386-dis.c	FUNCTION_22
0x4004f1e	          0x4863d0	                         movsxd rdx, eax	     14712	i386-dis.c	FUNCTION_22
0x4004f21	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14712	i386-dis.c	FUNCTION_22
0x4004f25	          0x4801d0	                            add rax, rdx	     14712	i386-dis.c	FUNCTION_22
0x4004f28	          0xc60078	                    mov byte [rax], 0x78	     14712	i386-dis.c	FUNCTION_22
0x4004f2b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	     14714	i386-dis.c	FUNCTION_22	CALL_4
0x4004f2f	        0x488d45d0	                   lea rax, [rbp - 0x30]	     14714	i386-dis.c	FUNCTION_22	CALL_4
0x4004f33	      0xbe00000000	                              mov esi, 0	     14714	i386-dis.c	FUNCTION_22	CALL_4
0x4004f38	          0x4889c7	                            mov rdi, rax	     14714	i386-dis.c	FUNCTION_22	CALL_4
0x4004f3b	      0xb800000000	                              mov eax, 0	     14714	i386-dis.c	FUNCTION_22	CALL_4
0x4004f40	      0xe800000000	                          call 0x4004f45	     14714	i386-dis.c	FUNCTION_22	CALL_4
0x4004f45	    0xc745c0000000	               mov dword [rbp - 0x40], 0	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4004f4c	            0xeb04	                           jmp 0x4004f52	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4004f4e	        0x8345c001	               add dword [rbp - 0x40], 1	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4004f52	          0x8b45c0	             mov eax, dword [rbp - 0x40]	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4004f55	            0x4898	                                    cdqe	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4004f57	       0xfb64405d0	      movzx eax, byte [rbp + rax - 0x30]	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4004f5c	            0x3c30	                            cmp al, 0x30	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4004f5e	            0x74ee	                            je 0x4004f4e	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4004f60	          0x8b45c0	             mov eax, dword [rbp - 0x40]	     14717	i386-dis.c	FUNCTION_22	IF_3
0x4004f63	            0x4898	                                    cdqe	     14717	i386-dis.c	FUNCTION_22	IF_3
0x4004f65	       0xfb64405d0	      movzx eax, byte [rbp + rax - 0x30]	     14717	i386-dis.c	FUNCTION_22	IF_3
0x4004f6a	            0x84c0	                             test al, al	     14717	i386-dis.c	FUNCTION_22	IF_3
0x4004f6c	            0x7504	                           jne 0x4004f72	     14717	i386-dis.c	FUNCTION_22	IF_3
0x4004f6e	        0x836dc001	               sub dword [rbp - 0x40], 1	     14718	i386-dis.c	FUNCTION_22	IF_3
0x4004f72	          0x8b45c0	             mov eax, dword [rbp - 0x40]	     14719	i386-dis.c	FUNCTION_22	CALL_5
0x4004f75	            0x4898	                                    cdqe	     14719	i386-dis.c	FUNCTION_22	CALL_5
0x4004f77	        0x488d55d0	                   lea rdx, [rbp - 0x30]	     14719	i386-dis.c	FUNCTION_22	CALL_5
0x4004f7b	          0x4801c2	                            add rdx, rax	     14719	i386-dis.c	FUNCTION_22	CALL_5
0x4004f7e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14719	i386-dis.c	FUNCTION_22	CALL_5
0x4004f81	          0x4863c8	                         movsxd rcx, eax	     14719	i386-dis.c	FUNCTION_22	CALL_5
0x4004f84	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     14719	i386-dis.c	FUNCTION_22	CALL_5
0x4004f88	          0x4801c8	                            add rax, rcx	     14719	i386-dis.c	FUNCTION_22	CALL_5
0x4004f8b	          0x4889d6	                            mov rsi, rdx	     14719	i386-dis.c	FUNCTION_22	CALL_5
0x4004f8e	          0x4889c7	                            mov rdi, rax	     14719	i386-dis.c	FUNCTION_22	CALL_5
0x4004f91	      0xe800000000	                          call 0x4004f96	     14719	i386-dis.c	FUNCTION_22	CALL_5
0x4004f96	        0x488b45f8	                mov rax, qword [rbp - 8]	     14720	i386-dis.c	FUNCTION_22
0x4004f9a	    0x644833042528	                xor rax, qword fs:[0x28]	     14720	i386-dis.c	FUNCTION_22
0x4004fa3	            0x7405	                            je 0x4004faa	     14720	i386-dis.c	FUNCTION_22
0x4004fa5	      0xe800000000	                          call 0x4004faa	     14720	i386-dis.c	FUNCTION_22
0x4004faa	              0xc9	                                   leave	     14720	i386-dis.c	FUNCTION_22
0x4004fab	              0xc3	                                     ret	     14720	i386-dis.c	FUNCTION_22
OP_E	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,0:FOR,0	29
0x400672d	              0x55	                                push rbp	     15665	i386-dis.c	FUNCTION_26
0x400672e	          0x4889e5	                            mov rbp, rsp	     15665	i386-dis.c	FUNCTION_26
0x4006731	        0x4883ec10	                           sub rsp, 0x10	     15665	i386-dis.c	FUNCTION_26
0x4006735	          0x897dfc	                mov dword [rbp - 4], edi	     15665	i386-dis.c	FUNCTION_26
0x4006738	          0x8975f8	                mov dword [rbp - 8], esi	     15665	i386-dis.c	FUNCTION_26
0x400673b	     0xfb605000000	           movzx eax, byte [0x04006742] 	     15667	i386-dis.c	FUNCTION_26
0x4006742	            0x84c0	                             test al, al	     15667	i386-dis.c	FUNCTION_26
0x4006744	            0x7505	                           jne 0x400674b	     15667	i386-dis.c	FUNCTION_26
0x4006746	      0xe800000000	                          call 0x400674b	     15667	i386-dis.c	FUNCTION_26
0x400674b	    0x488b05000000	            mov rax, qword [0x04006752] 	     15668	i386-dis.c	FUNCTION_26
0x4006752	        0x4883c001	                              add rax, 1	     15668	i386-dis.c	FUNCTION_26
0x4006756	    0x488905000000	            mov qword [0x0400675d], rax 	     15668	i386-dis.c	FUNCTION_26
0x400675d	    0x8b0500000000	            mov eax, dword [0x04006763] 	     15670	i386-dis.c	FUNCTION_26	IF_1
0x4006763	          0x83f803	                              cmp eax, 3	     15670	i386-dis.c	FUNCTION_26	IF_1
0x4006766	            0x7511	                           jne 0x4006779	     15670	i386-dis.c	FUNCTION_26	IF_1
0x4006768	          0x8b55f8	                mov edx, dword [rbp - 8]	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x400676b	          0x8b45fc	                mov eax, dword [rbp - 4]	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x400676e	            0x89d6	                            mov esi, edx	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x4006770	            0x89c7	                            mov edi, eax	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x4006772	      0xe898efffff	                  call sym.OP_E_register	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x4006777	            0xeb0f	                           jmp 0x4006788	     15674	i386-dis.c	FUNCTION_26
0x4006779	          0x8b55f8	                mov edx, dword [rbp - 8]	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x400677c	          0x8b45fc	                mov eax, dword [rbp - 4]	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x400677f	            0x89d6	                            mov esi, edx	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4006781	            0x89c7	                            mov edi, eax	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4006783	      0xe885f2ffff	                    call sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4006788	              0x90	                                     nop	     15674	i386-dis.c	FUNCTION_26
0x4006789	              0xc9	                                   leave	     15674	i386-dis.c	FUNCTION_26
0x400678a	              0xc3	                                     ret	     15674	i386-dis.c	FUNCTION_26
OP_M	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,0:FOR,0	18
0x4008913	              0x55	                                push rbp	     16670	i386-dis.c	FUNCTION_58
0x4008914	          0x4889e5	                            mov rbp, rsp	     16670	i386-dis.c	FUNCTION_58
0x4008917	        0x4883ec10	                           sub rsp, 0x10	     16670	i386-dis.c	FUNCTION_58
0x400891b	          0x897dfc	                mov dword [rbp - 4], edi	     16670	i386-dis.c	FUNCTION_58
0x400891e	          0x8975f8	                mov dword [rbp - 8], esi	     16670	i386-dis.c	FUNCTION_58
0x4008921	    0x8b0500000000	            mov eax, dword [0x04008927] 	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4008927	          0x83f803	                              cmp eax, 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x400892a	            0x7507	                           jne 0x4008933	     16671	i386-dis.c	FUNCTION_58	IF_1
0x400892c	      0xe841050000	                          call sym.BadOp	     16673	i386-dis.c	FUNCTION_58	CALL_1
0x4008931	            0xeb0f	                           jmp 0x4008942	     16676	i386-dis.c	FUNCTION_58
0x4008933	          0x8b55f8	                mov edx, dword [rbp - 8]	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x4008936	          0x8b45fc	                mov eax, dword [rbp - 4]	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x4008939	            0x89d6	                            mov esi, edx	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x400893b	            0x89c7	                            mov edi, eax	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x400893d	      0xe8ebddffff	                           call sym.OP_E	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x4008942	              0x90	                                     nop	     16676	i386-dis.c	FUNCTION_58
0x4008943	              0xc9	                                   leave	     16676	i386-dis.c	FUNCTION_58
0x4008944	              0xc3	                                     ret	     16676	i386-dis.c	FUNCTION_58
print_insn_i386_att	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	13
0x4000762	              0x55	                                push rbp	     12675	i386-dis.c	FUNCTION_4
0x4000763	          0x4889e5	                            mov rbp, rsp	     12675	i386-dis.c	FUNCTION_4
0x4000766	        0x4883ec10	                           sub rsp, 0x10	     12675	i386-dis.c	FUNCTION_4
0x400076a	        0x48897df8	                mov qword [rbp - 8], rdi	     12675	i386-dis.c	FUNCTION_4
0x400076e	        0x488975f0	             mov qword [rbp - 0x10], rsi	     12675	i386-dis.c	FUNCTION_4
0x4000772	    0xc60500000000	                mov byte [0x04000779], 0	     12676	i386-dis.c	FUNCTION_4
0x4000779	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     12678	i386-dis.c	FUNCTION_4	CALL_1
0x400077d	        0x488b45f8	                mov rax, qword [rbp - 8]	     12678	i386-dis.c	FUNCTION_4	CALL_1
0x4000781	          0x4889d6	                            mov rsi, rdx	     12678	i386-dis.c	FUNCTION_4	CALL_1
0x4000784	          0x4889c7	                            mov rdi, rax	     12678	i386-dis.c	FUNCTION_4	CALL_1
0x4000787	      0xe8be130000	                     call sym.print_insn	     12678	i386-dis.c	FUNCTION_4	CALL_1
0x400078c	              0xc9	                                   leave	     12679	i386-dis.c	FUNCTION_4
0x400078d	              0xc3	                                     ret	     12679	i386-dis.c	FUNCTION_4
OP_I	CALL,9:WHILE,0:functions,0:DO,0:ELSE,2:IF,4:SWITCH,1:FOR,0	105
0x40073fa	              0x55	                                push rbp	     15975	i386-dis.c	FUNCTION_35
0x40073fb	          0x4889e5	                            mov rbp, rsp	     15975	i386-dis.c	FUNCTION_35
0x40073fe	        0x4883ec20	                           sub rsp, 0x20	     15975	i386-dis.c	FUNCTION_35
0x4007402	          0x897dec	             mov dword [rbp - 0x14], edi	     15975	i386-dis.c	FUNCTION_35
0x4007405	          0x8975e8	             mov dword [rbp - 0x18], esi	     15975	i386-dis.c	FUNCTION_35
0x4007408	    0x48c745f8ffff	 mov qword [rbp - 8], 0xffffffffffffffff	     15977	i386-dis.c	FUNCTION_35
0x4007410	        0x837dec28	           cmp dword [rbp - 0x14], 0x28 	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007414	     0xf873b010000	                            ja 0x4007555	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x400741a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x400741d	    0x488b04c50000	                  mov rax, qword [rax*8]	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007425	            0xffe0	                                 jmp rax	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007427	    0x488b05000000	            mov rax, qword [0x0400742e] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400742e	        0x488d5001	                      lea rdx, [rax + 1]	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007432	    0x488b05000000	            mov rax, qword [0x04007439] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007439	        0x488b4068	            mov rax, qword [rax + 0x68] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400743d	          0x488b00	                    mov rax, qword [rax]	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007440	          0x4839c2	                            cmp rdx, rax	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007443	            0x761d	                           jbe 0x4007462	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007445	    0x488b05000000	            mov rax, qword [0x0400744c] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400744c	        0x488d5001	                      lea rdx, [rax + 1]	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007450	    0x488b05000000	            mov rax, qword [0x04007457] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007457	          0x4889d6	                            mov rsi, rdx	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400745a	          0x4889c7	                            mov rdi, rax	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400745d	      0xe8de8bffff	                     call sym.fetch_data	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007462	    0x488b05000000	            mov rax, qword [0x04007469] 	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007469	        0x488d5001	                      lea rdx, [rax + 1]	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x400746d	    0x488915000000	            mov qword [0x04007474], rdx 	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007474	           0xfb600	                   movzx eax, byte [rax]	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007477	           0xfb6c0	                           movzx eax, al	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x400747a	        0x488945f0	             mov qword [rbp - 0x10], rax	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x400747e	    0x48c745f8ff00	               mov qword [rbp - 8], 0xff	     15984	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007486	      0xe9e3000000	                           jmp 0x400756e	     15985	i386-dis.c	FUNCTION_35	SWITCH_1
0x400748b	    0x8b0500000000	            mov eax, dword [0x04007491] 	     15987	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1
0x4007491	          0x83f802	                              cmp eax, 2	     15987	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1
0x4007494	            0x750e	                           jne 0x40074a4	     15987	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1
0x4007496	      0xe8d6f8ffff	                         call sym.get32s	     15989	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1	CALL_1
0x400749b	        0x488945f0	             mov qword [rbp - 0x10], rax	     15989	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1	CALL_1
0x400749f	      0xe9ca000000	                           jmp 0x400756e	     15990	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1
0x40074a4	    0x8b0500000000	            mov eax, dword [0x040074aa] 	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x40074aa	          0x83e008	                              and eax, 8	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x40074ad	            0x85c0	                           test eax, eax	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x40074af	            0x740f	                            je 0x40074c0	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x40074b1	    0x8b0500000000	            mov eax, dword [0x040074b7] 	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x40074b7	          0x83c848	                            or eax, 0x48	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x40074ba	    0x890500000000	            mov dword [0x040074c0], eax 	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x40074c0	    0x8b0500000000	            mov eax, dword [0x040074c6] 	     15995	i386-dis.c	FUNCTION_35	SWITCH_1	IF_2
0x40074c6	          0x83e008	                              and eax, 8	     15995	i386-dis.c	FUNCTION_35	SWITCH_1	IF_2
0x40074c9	            0x85c0	                           test eax, eax	     15995	i386-dis.c	FUNCTION_35	SWITCH_1	IF_2
0x40074cb	            0x740e	                            je 0x40074db	     15995	i386-dis.c	FUNCTION_35	SWITCH_1	IF_2
0x40074cd	      0xe89ff8ffff	                         call sym.get32s	     15996	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_2
0x40074d2	        0x488945f0	             mov qword [rbp - 0x10], rax	     15996	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_2
0x40074d6	      0xe993000000	                           jmp 0x400756e	     16011	i386-dis.c	FUNCTION_35	SWITCH_1
0x40074db	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     15999	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x40074de	          0x83e001	                              and eax, 1	     15999	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x40074e1	            0x85c0	                           test eax, eax	     15999	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x40074e3	            0x7414	                            je 0x40074f9	     15999	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x40074e5	      0xe8baf7ffff	                          call sym.get32	     16001	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3	CALL_3
0x40074ea	        0x488945f0	             mov qword [rbp - 0x10], rax	     16001	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3	CALL_3
0x40074ee	      0xb8ffffffff	                     mov eax, 0xffffffff	     16002	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x40074f3	        0x488945f8	                mov qword [rbp - 8], rax	     16002	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x40074f7	            0xeb13	                           jmp 0x400750c	     16002	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x40074f9	      0xe853f9ffff	                          call sym.get16	     16006	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x40074fe	            0x4898	                                    cdqe	     16006	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x4007500	        0x488945f0	             mov qword [rbp - 0x10], rax	     16006	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x4007504	    0x48c745f8ffff	            mov qword [rbp - 8], 0xfffff	     16007	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2
0x400750c	    0x8b0500000000	            mov eax, dword [0x04007512] 	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4007512	      0x2500020000	                          and eax, 0x200	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4007517	            0x89c2	                            mov edx, eax	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4007519	    0x8b0500000000	            mov eax, dword [0x0400751f] 	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x400751f	             0x9d0	                             or eax, edx	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4007521	    0x890500000000	            mov dword [0x04007527], eax 	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4007527	            0xeb45	                           jmp 0x400756e	     16011	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007529	    0x48c745f8ffff	            mov qword [rbp - 8], 0xfffff	     16013	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007531	      0xe81bf9ffff	                          call sym.get16	     16014	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_5
0x4007536	            0x4898	                                    cdqe	     16014	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_5
0x4007538	        0x488945f0	             mov qword [rbp - 0x10], rax	     16014	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_5
0x400753c	            0xeb30	                           jmp 0x400756e	     16015	i386-dis.c	FUNCTION_35	SWITCH_1
0x400753e	     0xfb605000000	           movzx eax, byte [0x04007545] 	     16017	i386-dis.c	FUNCTION_35	SWITCH_1	IF_4
0x4007545	            0x84c0	                             test al, al	     16017	i386-dis.c	FUNCTION_35	SWITCH_1	IF_4
0x4007547	            0x7460	                            je 0x40075a9	     16017	i386-dis.c	FUNCTION_35	SWITCH_1	IF_4
0x4007549	      0xbf00000000	                              mov edi, 0	     16018	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_6
0x400754e	      0xe876d5ffff	                        call sym.oappend	     16018	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_6
0x4007553	            0xeb54	                           jmp 0x40075a9	     16019	i386-dis.c	FUNCTION_35	SWITCH_1
0x4007555	      0xbe00000000	                              mov esi, 0	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x400755a	      0xbf00000000	                              mov edi, 0	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x400755f	      0xe800000000	                          call 0x4007564	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x4007564	          0x4889c7	                            mov rdi, rax	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x4007567	      0xe85dd5ffff	                        call sym.oappend	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x400756c	            0xeb3c	                           jmp 0x40075aa	     16022	i386-dis.c	FUNCTION_35	SWITCH_1
0x400756e	        0x488b45f8	                mov rax, qword [rbp - 8]	     16025	i386-dis.c	FUNCTION_35
0x4007572	        0x482145f0	             and qword [rbp - 0x10], rax	     16025	i386-dis.c	FUNCTION_35
0x4007576	    0xc60500000000	            mov byte [0x0400757d], 0x24 	     16026	i386-dis.c	FUNCTION_35
0x400757d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x4007581	      0xb900000000	                              mov ecx, 0	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x4007586	          0x4889c2	                            mov rdx, rax	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x4007589	      0xbe01000000	                              mov esi, 1	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x400758e	          0x4889cf	                            mov rdi, rcx	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x4007591	      0xe836d6ffff	            call sym.print_operand_value	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x4007596	      0xbf00000000	                              mov edi, 0	     16028	i386-dis.c	FUNCTION_35	CALL_9
0x400759b	      0xe81dbdffff	            call sym.oappend_maybe_intel	     16028	i386-dis.c	FUNCTION_35	CALL_9
0x40075a0	    0xc60500000000	                mov byte [0x040075a7], 0	     16029	i386-dis.c	FUNCTION_35
0x40075a7	            0xeb01	                           jmp 0x40075aa	     16029	i386-dis.c	FUNCTION_35
0x40075a9	              0x90	                                     nop	     16019	i386-dis.c	FUNCTION_35	SWITCH_1
0x40075aa	              0xc9	                                   leave	     16030	i386-dis.c	FUNCTION_35
0x40075ab	              0xc3	                                     ret	     16030	i386-dis.c	FUNCTION_35
print_insn_i386	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	13
0x40007ba	              0x55	                                push rbp	     12691	i386-dis.c	FUNCTION_6
0x40007bb	          0x4889e5	                            mov rbp, rsp	     12691	i386-dis.c	FUNCTION_6
0x40007be	        0x4883ec10	                           sub rsp, 0x10	     12691	i386-dis.c	FUNCTION_6
0x40007c2	        0x48897df8	                mov qword [rbp - 8], rdi	     12691	i386-dis.c	FUNCTION_6
0x40007c6	        0x488975f0	             mov qword [rbp - 0x10], rsi	     12691	i386-dis.c	FUNCTION_6
0x40007ca	    0xc60500000000	            mov byte [0x040007d1], 0xff 	     12692	i386-dis.c	FUNCTION_6
0x40007d1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     12694	i386-dis.c	FUNCTION_6	CALL_1
0x40007d5	        0x488b45f8	                mov rax, qword [rbp - 8]	     12694	i386-dis.c	FUNCTION_6	CALL_1
0x40007d9	          0x4889d6	                            mov rsi, rdx	     12694	i386-dis.c	FUNCTION_6	CALL_1
0x40007dc	          0x4889c7	                            mov rdi, rax	     12694	i386-dis.c	FUNCTION_6	CALL_1
0x40007df	      0xe866130000	                     call sym.print_insn	     12694	i386-dis.c	FUNCTION_6	CALL_1
0x40007e4	              0xc9	                                   leave	     12695	i386-dis.c	FUNCTION_6
0x40007e5	              0xc3	                                     ret	     12695	i386-dis.c	FUNCTION_6
OP_ESreg	CALL,5:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,1:FOR,0	50
0x4007eb4	              0x55	                                push rbp	     16302	i386-dis.c	FUNCTION_44
0x4007eb5	          0x4889e5	                            mov rbp, rsp	     16302	i386-dis.c	FUNCTION_44
0x4007eb8	        0x4883ec10	                           sub rsp, 0x10	     16302	i386-dis.c	FUNCTION_44
0x4007ebc	          0x897dfc	                mov dword [rbp - 4], edi	     16302	i386-dis.c	FUNCTION_44
0x4007ebf	          0x8975f8	                mov dword [rbp - 8], esi	     16302	i386-dis.c	FUNCTION_44
0x4007ec2	     0xfb605000000	           movzx eax, byte [0x04007ec9] 	     16303	i386-dis.c	FUNCTION_44	IF_1
0x4007ec9	            0x84c0	                             test al, al	     16303	i386-dis.c	FUNCTION_44	IF_1
0x4007ecb	            0x746e	                            je 0x4007f3b	     16303	i386-dis.c	FUNCTION_44	IF_1
0x4007ecd	    0x488b05000000	            mov rax, qword [0x04007ed4] 	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007ed4	        0x4883e801	                              sub rax, 1	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007ed8	           0xfb600	                   movzx eax, byte [rax]	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007edb	           0xfb6c0	                           movzx eax, al	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007ede	      0x3da7000000	                           cmp eax, 0xa7	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007ee3	            0x7436	                            je 0x4007f1b	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007ee5	      0x3da7000000	                           cmp eax, 0xa7	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007eea	            0x7f0e	                            jg 0x4007efa	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007eec	          0x83f86d	                           cmp eax, 0x6d	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007eef	            0x7419	                            je 0x4007f0a	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007ef1	      0x3da5000000	                           cmp eax, 0xa5	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007ef6	            0x7423	                            je 0x4007f1b	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007ef8	            0xeb32	                           jmp 0x4007f2c	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007efa	      0x3dab000000	                           cmp eax, 0xab	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007eff	            0x741a	                            je 0x4007f1b	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007f01	      0x3daf000000	                           cmp eax, 0xaf	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007f06	            0x7413	                            je 0x4007f1b	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007f08	            0xeb22	                           jmp 0x4007f2c	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007f0a	          0x8b45f8	                mov eax, dword [rbp - 8]	     16308	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_1
0x4007f0d	            0x89c6	                            mov esi, eax	     16308	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_1
0x4007f0f	      0xbf2b000000	                           mov edi, 0x2b	     16308	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_1
0x4007f14	      0xe893d0ffff	             call sym.intel_operand_size	     16308	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_1
0x4007f19	            0xeb20	                           jmp 0x4007f3b	     16309	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007f1b	          0x8b45f8	                mov eax, dword [rbp - 8]	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x4007f1e	            0x89c6	                            mov esi, eax	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x4007f20	      0xbf04000000	                              mov edi, 4	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x4007f25	      0xe882d0ffff	             call sym.intel_operand_size	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x4007f2a	            0xeb0f	                           jmp 0x4007f3b	     16315	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4007f2c	          0x8b45f8	                mov eax, dword [rbp - 8]	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4007f2f	            0x89c6	                            mov esi, eax	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4007f31	      0xbf01000000	                              mov edi, 1	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4007f36	      0xe871d0ffff	             call sym.intel_operand_size	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4007f3b	      0xbf00000000	                              mov edi, 0	     16320	i386-dis.c	FUNCTION_44	CALL_4
0x4007f40	      0xe878b3ffff	            call sym.oappend_maybe_intel	     16320	i386-dis.c	FUNCTION_44	CALL_4
0x4007f45	          0x8b55f8	                mov edx, dword [rbp - 8]	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4007f48	          0x8b45fc	                mov eax, dword [rbp - 4]	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4007f4b	            0x89d6	                            mov esi, edx	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4007f4d	            0x89c7	                            mov edi, eax	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4007f4f	      0xe83bfeffff	                        call sym.ptr_reg	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4007f54	              0x90	                                     nop	     16322	i386-dis.c	FUNCTION_44
0x4007f55	              0xc9	                                   leave	     16322	i386-dis.c	FUNCTION_44
0x4007f56	              0xc3	                                     ret	     16322	i386-dis.c	FUNCTION_44
PCMPESTR_Fixup	CALL,1:WHILE,0:functions,0:DO,0:ELSE,1:IF,3:SWITCH,0:FOR,0	46
0x4009543	              0x55	                                push rbp	     17161	i386-dis.c	FUNCTION_78
0x4009544	          0x4889e5	                            mov rbp, rsp	     17161	i386-dis.c	FUNCTION_78
0x4009547	        0x4883ec20	                           sub rsp, 0x20	     17161	i386-dis.c	FUNCTION_78
0x400954b	          0x897dec	             mov dword [rbp - 0x14], edi	     17161	i386-dis.c	FUNCTION_78
0x400954e	          0x8975e8	             mov dword [rbp - 0x18], esi	     17161	i386-dis.c	FUNCTION_78
0x4009551	     0xfb605000000	           movzx eax, byte [0x04009558] 	     17163	i386-dis.c	FUNCTION_78	IF_1
0x4009558	            0x84c0	                             test al, al	     17163	i386-dis.c	FUNCTION_78	IF_1
0x400955a	            0x7570	                           jne 0x40095cc	     17163	i386-dis.c	FUNCTION_78	IF_1
0x400955c	    0x488b05000000	            mov rax, qword [0x04009563] 	     17165	i386-dis.c	FUNCTION_78	IF_1
0x4009563	        0x488945f8	                mov qword [rbp - 8], rax	     17165	i386-dis.c	FUNCTION_78	IF_1
0x4009567	    0x8b0500000000	            mov eax, dword [0x0400956d] 	     17167	i386-dis.c	FUNCTION_78	IF_1
0x400956d	          0x83e008	                              and eax, 8	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4009570	            0x85c0	                           test eax, eax	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4009572	            0x740f	                            je 0x4009583	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4009574	    0x8b0500000000	            mov eax, dword [0x0400957a] 	     17167	i386-dis.c	FUNCTION_78	IF_1
0x400957a	          0x83c848	                            or eax, 0x48	     17167	i386-dis.c	FUNCTION_78	IF_1
0x400957d	    0x890500000000	            mov dword [0x04009583], eax 	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4009583	    0x8b0500000000	            mov eax, dword [0x04009589] 	     17168	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x4009589	          0x83e008	                              and eax, 8	     17168	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x400958c	            0x85c0	                           test eax, eax	     17168	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x400958e	            0x7411	                            je 0x40095a1	     17168	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x4009590	        0x488b45f8	                mov rax, qword [rbp - 8]	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x4009594	        0x488d5001	                      lea rdx, [rax + 1]	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x4009598	        0x488955f8	                mov qword [rbp - 8], rdx	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x400959c	          0xc60071	                    mov byte [rax], 0x71	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x400959f	            0xeb19	                           jmp 0x40095ba	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x40095a1	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     17170	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x40095a4	          0x83e004	                              and eax, 4	     17170	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x40095a7	            0x85c0	                           test eax, eax	     17170	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x40095a9	            0x740f	                            je 0x40095ba	     17170	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x40095ab	        0x488b45f8	                mov rax, qword [rbp - 8]	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x40095af	        0x488d5001	                      lea rdx, [rax + 1]	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x40095b3	        0x488955f8	                mov qword [rbp - 8], rdx	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x40095b7	          0xc6006c	                    mov byte [rax], 0x6c	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x40095ba	        0x488b45f8	                mov rax, qword [rbp - 8]	     17173	i386-dis.c	FUNCTION_78	IF_1
0x40095be	          0xc60000	                       mov byte [rax], 0	     17173	i386-dis.c	FUNCTION_78	IF_1
0x40095c1	        0x488b45f8	                mov rax, qword [rbp - 8]	     17174	i386-dis.c	FUNCTION_78	IF_1
0x40095c5	    0x488905000000	            mov qword [0x040095cc], rax 	     17174	i386-dis.c	FUNCTION_78	IF_1
0x40095cc	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     17177	i386-dis.c	FUNCTION_78	CALL_1
0x40095cf	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17177	i386-dis.c	FUNCTION_78	CALL_1
0x40095d2	            0x89d6	                            mov esi, edx	     17177	i386-dis.c	FUNCTION_78	CALL_1
0x40095d4	            0x89c7	                            mov edi, eax	     17177	i386-dis.c	FUNCTION_78	CALL_1
0x40095d6	      0xe894f0ffff	                          call sym.OP_EX	     17177	i386-dis.c	FUNCTION_78	CALL_1
0x40095db	              0x90	                                     nop	     17178	i386-dis.c	FUNCTION_78
0x40095dc	              0xc9	                                   leave	     17178	i386-dis.c	FUNCTION_78
0x40095dd	              0xc3	                                     ret	     17178	i386-dis.c	FUNCTION_78
VZERO_Fixup	CALL,3:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,1:FOR,0	28
0x4009f1f	              0x55	                                push rbp	     17595	i386-dis.c	FUNCTION_91
0x4009f20	          0x4889e5	                            mov rbp, rsp	     17595	i386-dis.c	FUNCTION_91
0x4009f23	        0x4883ec10	                           sub rsp, 0x10	     17595	i386-dis.c	FUNCTION_91
0x4009f27	          0x897dfc	                mov dword [rbp - 4], edi	     17595	i386-dis.c	FUNCTION_91
0x4009f2a	          0x8975f8	                mov dword [rbp - 8], esi	     17595	i386-dis.c	FUNCTION_91
0x4009f2d	    0x8b0500000000	            mov eax, dword [0x04009f33] 	     17596	i386-dis.c	FUNCTION_91	SWITCH_1
0x4009f33	      0x3d80000000	                           cmp eax, 0x80	     17596	i386-dis.c	FUNCTION_91	SWITCH_1
0x4009f38	            0x7409	                            je 0x4009f43	     17596	i386-dis.c	FUNCTION_91	SWITCH_1
0x4009f3a	      0x3d00010000	                          cmp eax, 0x100	     17596	i386-dis.c	FUNCTION_91	SWITCH_1
0x4009f3f	            0x7431	                            je 0x4009f72	     17596	i386-dis.c	FUNCTION_91	SWITCH_1
0x4009f41	            0xeb55	                           jmp 0x4009f98	     17596	i386-dis.c	FUNCTION_91	SWITCH_1
0x4009f43	    0x48b8767a6572	          movabs rax, 0x7070756f72657a76	     17599	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_1
0x4009f4d	    0x488905000000	            mov qword [0x04009f54], rax 	     17599	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_1
0x4009f54	    0x66c705000000	          mov word [0x04009f5d], 0x7265 	     17599	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_1
0x4009f5d	    0xc60500000000	                mov byte [0x04009f64], 0	     17599	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_1
0x4009f64	      0xb800000000	                              mov eax, 0	     17599	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_1
0x4009f69	    0x488905000000	            mov qword [0x04009f70], rax 	     17599	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_1
0x4009f70	            0xeb2b	                           jmp 0x4009f9d	     17600	i386-dis.c	FUNCTION_91	SWITCH_1
0x4009f72	    0x48b8767a6572	          movabs rax, 0x6c6c616f72657a76	     17602	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_2
0x4009f7c	    0x488905000000	            mov qword [0x04009f83], rax 	     17602	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_2
0x4009f83	    0xc60500000000	                mov byte [0x04009f8a], 0	     17602	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_2
0x4009f8a	      0xb800000000	                              mov eax, 0	     17602	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_2
0x4009f8f	    0x488905000000	            mov qword [0x04009f96], rax 	     17602	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_2
0x4009f96	            0xeb05	                           jmp 0x4009f9d	     17603	i386-dis.c	FUNCTION_91	SWITCH_1
0x4009f98	      0xe800000000	                          call 0x4009f9d	     17605	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_3
0x4009f9d	              0x90	                                     nop	     17607	i386-dis.c	FUNCTION_91
0x4009f9e	              0xc9	                                   leave	     17607	i386-dis.c	FUNCTION_91
0x4009f9f	              0xc3	                                     ret	     17607	i386-dis.c	FUNCTION_91
OP_REG_VexI4	CALL,3:WHILE,0:functions,0:DO,0:ELSE,0:IF,2:SWITCH,1:FOR,0	56
0x4009d95	              0x55	                                push rbp	     17532	i386-dis.c	FUNCTION_87
0x4009d96	          0x4889e5	                            mov rbp, rsp	     17532	i386-dis.c	FUNCTION_87
0x4009d99	        0x4883ec20	                           sub rsp, 0x20	     17532	i386-dis.c	FUNCTION_87
0x4009d9d	          0x897dec	             mov dword [rbp - 0x14], edi	     17532	i386-dis.c	FUNCTION_87
0x4009da0	          0x8975e8	             mov dword [rbp - 0x18], esi	     17532	i386-dis.c	FUNCTION_87
0x4009da3	    0x488b05000000	            mov rax, qword [0x04009daa] 	     17536	i386-dis.c	FUNCTION_87
0x4009daa	        0x488d5001	                      lea rdx, [rax + 1]	     17536	i386-dis.c	FUNCTION_87
0x4009dae	    0x488b05000000	            mov rax, qword [0x04009db5] 	     17536	i386-dis.c	FUNCTION_87
0x4009db5	        0x488b4068	            mov rax, qword [rax + 0x68] 	     17536	i386-dis.c	FUNCTION_87
0x4009db9	          0x488b00	                    mov rax, qword [rax]	     17536	i386-dis.c	FUNCTION_87
0x4009dbc	          0x4839c2	                            cmp rdx, rax	     17536	i386-dis.c	FUNCTION_87
0x4009dbf	            0x761d	                           jbe 0x4009dde	     17536	i386-dis.c	FUNCTION_87
0x4009dc1	    0x488b05000000	            mov rax, qword [0x04009dc8] 	     17536	i386-dis.c	FUNCTION_87
0x4009dc8	        0x488d5001	                      lea rdx, [rax + 1]	     17536	i386-dis.c	FUNCTION_87
0x4009dcc	    0x488b05000000	            mov rax, qword [0x04009dd3] 	     17536	i386-dis.c	FUNCTION_87
0x4009dd3	          0x4889d6	                            mov rsi, rdx	     17536	i386-dis.c	FUNCTION_87
0x4009dd6	          0x4889c7	                            mov rdi, rax	     17536	i386-dis.c	FUNCTION_87
0x4009dd9	      0xe86262ffff	                     call sym.fetch_data	     17536	i386-dis.c	FUNCTION_87
0x4009dde	    0x488b05000000	            mov rax, qword [0x04009de5] 	     17537	i386-dis.c	FUNCTION_87
0x4009de5	        0x488d5001	                      lea rdx, [rax + 1]	     17537	i386-dis.c	FUNCTION_87
0x4009de9	    0x488915000000	            mov qword [0x04009df0], rdx 	     17537	i386-dis.c	FUNCTION_87
0x4009df0	           0xfb600	                   movzx eax, byte [rax]	     17537	i386-dis.c	FUNCTION_87
0x4009df3	           0xfb6c0	                           movzx eax, al	     17537	i386-dis.c	FUNCTION_87
0x4009df6	          0x8945f4	              mov dword [rbp - 0xc], eax	     17537	i386-dis.c	FUNCTION_87
0x4009df9	        0x837dec0d	            cmp dword [rbp - 0x14], 0xd 	     17539	i386-dis.c	FUNCTION_87	IF_1
0x4009dfd	            0x7405	                            je 0x4009e04	     17539	i386-dis.c	FUNCTION_87	IF_1
0x4009dff	      0xe800000000	                          call 0x4009e04	     17540	i386-dis.c	FUNCTION_87	CALL_1
0x4009e04	        0xc17df404	                sar dword [rbp - 0xc], 4	     17542	i386-dis.c	FUNCTION_87
0x4009e08	    0x8b0500000000	            mov eax, dword [0x04009e0e] 	     17543	i386-dis.c	FUNCTION_87	IF_2
0x4009e0e	          0x83f802	                              cmp eax, 2	     17543	i386-dis.c	FUNCTION_87	IF_2
0x4009e11	            0x7404	                            je 0x4009e17	     17543	i386-dis.c	FUNCTION_87	IF_2
0x4009e13	        0x8365f407	                and dword [rbp - 0xc], 7	     17544	i386-dis.c	FUNCTION_87	IF_2
0x4009e17	    0x8b0500000000	            mov eax, dword [0x04009e1d] 	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e1d	      0x3d80000000	                           cmp eax, 0x80	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e22	            0x7409	                            je 0x4009e2d	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e24	      0x3d00010000	                          cmp eax, 0x100	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e29	            0x740f	                            je 0x4009e3a	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e2b	            0xeb1a	                           jmp 0x4009e47	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e2d	    0x488b05000000	            mov rax, qword [0x04009e34] 	     17549	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e34	        0x488945f8	                mov qword [rbp - 8], rax	     17549	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e38	            0xeb12	                           jmp 0x4009e4c	     17550	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e3a	    0x488b05000000	            mov rax, qword [0x04009e41] 	     17552	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e41	        0x488945f8	                mov qword [rbp - 8], rax	     17552	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e45	            0xeb05	                           jmp 0x4009e4c	     17553	i386-dis.c	FUNCTION_87	SWITCH_1
0x4009e47	      0xe800000000	                          call 0x4009e4c	     17555	i386-dis.c	FUNCTION_87	SWITCH_1	CALL_2
0x4009e4c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x4009e4f	            0x4898	                                    cdqe	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x4009e51	    0x488d14c50000	                        lea rdx, [rax*8]	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x4009e59	        0x488b45f8	                mov rax, qword [rbp - 8]	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x4009e5d	          0x4801d0	                            add rax, rdx	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x4009e60	          0x488b00	                    mov rax, qword [rax]	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x4009e63	          0x4889c7	                            mov rdi, rax	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x4009e66	      0xe85eacffff	                        call sym.oappend	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x4009e6b	              0x90	                                     nop	     17558	i386-dis.c	FUNCTION_87
0x4009e6c	              0xc9	                                   leave	     17558	i386-dis.c	FUNCTION_87
0x4009e6d	              0xc3	                                     ret	     17558	i386-dis.c	FUNCTION_87
OP_Mwait	CALL,2:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0	37
0x4008cc3	              0x55	                                push rbp	     16866	i386-dis.c	FUNCTION_65
0x4008cc4	          0x4889e5	                            mov rbp, rsp	     16866	i386-dis.c	FUNCTION_65
0x4008cc7	        0x4883ec20	                           sub rsp, 0x20	     16866	i386-dis.c	FUNCTION_65
0x4008ccb	          0x897dec	             mov dword [rbp - 0x14], edi	     16866	i386-dis.c	FUNCTION_65
0x4008cce	          0x8975e8	             mov dword [rbp - 0x18], esi	     16866	i386-dis.c	FUNCTION_65
0x4008cd1	     0xfb605000000	           movzx eax, byte [0x04008cd8] 	     16868	i386-dis.c	FUNCTION_65	IF_1
0x4008cd8	            0x84c0	                             test al, al	     16868	i386-dis.c	FUNCTION_65	IF_1
0x4008cda	            0x7555	                           jne 0x4008d31	     16868	i386-dis.c	FUNCTION_65	IF_1
0x4008cdc	    0x8b0500000000	            mov eax, dword [0x04008ce2] 	     16870	i386-dis.c	FUNCTION_65	IF_1
0x4008ce2	          0x83f802	                              cmp eax, 2	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4008ce5	            0x7509	                           jne 0x4008cf0	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4008ce7	    0x488b05000000	            mov rax, qword [0x04008cee] 	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4008cee	            0xeb07	                           jmp 0x4008cf7	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4008cf0	    0x488b05000000	            mov rax, qword [0x04008cf7] 	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4008cf7	        0x488945f8	                mov qword [rbp - 8], rax	     16870	i386-dis.c	FUNCTION_65	IF_1
0x4008cfb	        0x488b45f8	                mov rax, qword [rbp - 8]	     16872	i386-dis.c	FUNCTION_65	IF_1	CALL_1
0x4008cff	          0x488b00	                    mov rax, qword [rax]	     16872	i386-dis.c	FUNCTION_65	IF_1	CALL_1
0x4008d02	          0x4889c6	                            mov rsi, rax	     16872	i386-dis.c	FUNCTION_65	IF_1	CALL_1
0x4008d05	      0xbf00000000	                              mov edi, 0	     16872	i386-dis.c	FUNCTION_65	IF_1	CALL_1
0x4008d0a	      0xe800000000	                          call 0x4008d0f	     16872	i386-dis.c	FUNCTION_65	IF_1	CALL_1
0x4008d0f	        0x488b45f8	                mov rax, qword [rbp - 8]	     16873	i386-dis.c	FUNCTION_65	IF_1	CALL_2
0x4008d13	        0x4883c008	                              add rax, 8	     16873	i386-dis.c	FUNCTION_65	IF_1	CALL_2
0x4008d17	          0x488b00	                    mov rax, qword [rax]	     16873	i386-dis.c	FUNCTION_65	IF_1	CALL_2
0x4008d1a	          0x4889c6	                            mov rsi, rax	     16873	i386-dis.c	FUNCTION_65	IF_1	CALL_2
0x4008d1d	      0xbf00000000	                              mov edi, 0	     16873	i386-dis.c	FUNCTION_65	IF_1	CALL_2
0x4008d22	      0xe800000000	                          call 0x4008d27	     16873	i386-dis.c	FUNCTION_65	IF_1	CALL_2
0x4008d27	    0xc70500000000	               mov dword [0x04008d31], 1	     16874	i386-dis.c	FUNCTION_65	IF_1
0x4008d31	     0xfb605000000	           movzx eax, byte [0x04008d38] 	     16877	i386-dis.c	FUNCTION_65
0x4008d38	            0x84c0	                             test al, al	     16877	i386-dis.c	FUNCTION_65
0x4008d3a	            0x7505	                           jne 0x4008d41	     16877	i386-dis.c	FUNCTION_65
0x4008d3c	      0xe800000000	                          call 0x4008d41	     16877	i386-dis.c	FUNCTION_65
0x4008d41	    0x488b05000000	            mov rax, qword [0x04008d48] 	     16878	i386-dis.c	FUNCTION_65
0x4008d48	        0x4883c001	                              add rax, 1	     16878	i386-dis.c	FUNCTION_65
0x4008d4c	    0x488905000000	            mov qword [0x04008d53], rax 	     16878	i386-dis.c	FUNCTION_65
0x4008d53	              0x90	                                     nop	     16879	i386-dis.c	FUNCTION_65
0x4008d54	              0xc9	                                   leave	     16879	i386-dis.c	FUNCTION_65
0x4008d55	              0xc3	                                     ret	     16879	i386-dis.c	FUNCTION_65
VPCMP_Fixup	CALL,5:WHILE,0:functions,0:DO,0:ELSE,2:IF,3:SWITCH,0:FOR,0	93
0x400a0d7	              0x55	                                push rbp	     17675	i386-dis.c	FUNCTION_93
0x400a0d8	          0x4889e5	                            mov rbp, rsp	     17675	i386-dis.c	FUNCTION_93
0x400a0db	        0x4883ec30	                           sub rsp, 0x30	     17675	i386-dis.c	FUNCTION_93
0x400a0df	          0x897ddc	             mov dword [rbp - 0x24], edi	     17675	i386-dis.c	FUNCTION_93
0x400a0e2	          0x8975d8	             mov dword [rbp - 0x28], esi	     17675	i386-dis.c	FUNCTION_93
0x400a0e5	    0x64488b042528	                mov rax, qword fs:[0x28]	     17675	i386-dis.c	FUNCTION_93
0x400a0ee	        0x488945f8	                mov qword [rbp - 8], rax	     17675	i386-dis.c	FUNCTION_93
0x400a0f2	            0x31c0	                            xor eax, eax	     17675	i386-dis.c	FUNCTION_93
0x400a0f4	    0x8b0500000000	            mov eax, dword [0x0400a0fa] 	     17678	i386-dis.c	FUNCTION_93	IF_1
0x400a0fa	            0x85c0	                           test eax, eax	     17678	i386-dis.c	FUNCTION_93	IF_1
0x400a0fc	            0x7505	                           jne 0x400a103	     17678	i386-dis.c	FUNCTION_93	IF_1
0x400a0fe	      0xe800000000	                          call 0x400a103	     17679	i386-dis.c	FUNCTION_93	CALL_1
0x400a103	    0x488b05000000	            mov rax, qword [0x0400a10a] 	     17681	i386-dis.c	FUNCTION_93
0x400a10a	        0x488d5001	                      lea rdx, [rax + 1]	     17681	i386-dis.c	FUNCTION_93
0x400a10e	    0x488b05000000	            mov rax, qword [0x0400a115] 	     17681	i386-dis.c	FUNCTION_93
0x400a115	        0x488b4068	            mov rax, qword [rax + 0x68] 	     17681	i386-dis.c	FUNCTION_93
0x400a119	          0x488b00	                    mov rax, qword [rax]	     17681	i386-dis.c	FUNCTION_93
0x400a11c	          0x4839c2	                            cmp rdx, rax	     17681	i386-dis.c	FUNCTION_93
0x400a11f	            0x761d	                           jbe 0x400a13e	     17681	i386-dis.c	FUNCTION_93
0x400a121	    0x488b05000000	            mov rax, qword [0x0400a128] 	     17681	i386-dis.c	FUNCTION_93
0x400a128	        0x488d5001	                      lea rdx, [rax + 1]	     17681	i386-dis.c	FUNCTION_93
0x400a12c	    0x488b05000000	            mov rax, qword [0x0400a133] 	     17681	i386-dis.c	FUNCTION_93
0x400a133	          0x4889d6	                            mov rsi, rdx	     17681	i386-dis.c	FUNCTION_93
0x400a136	          0x4889c7	                            mov rdi, rax	     17681	i386-dis.c	FUNCTION_93
0x400a139	      0xe8025fffff	                     call sym.fetch_data	     17681	i386-dis.c	FUNCTION_93
0x400a13e	    0x488b05000000	            mov rax, qword [0x0400a145] 	     17682	i386-dis.c	FUNCTION_93
0x400a145	        0x488d5001	                      lea rdx, [rax + 1]	     17682	i386-dis.c	FUNCTION_93
0x400a149	    0x488915000000	            mov qword [0x0400a150], rdx 	     17682	i386-dis.c	FUNCTION_93
0x400a150	           0xfb600	                   movzx eax, byte [rax]	     17682	i386-dis.c	FUNCTION_93
0x400a153	           0xfb6c0	                           movzx eax, al	     17682	i386-dis.c	FUNCTION_93
0x400a156	          0x8945e4	             mov dword [rbp - 0x1c], eax	     17682	i386-dis.c	FUNCTION_93
0x400a159	        0x837de407	               cmp dword [rbp - 0x1c], 7	     17685	i386-dis.c	FUNCTION_93	IF_2	CALL_2
0x400a15d	     0xf87ab000000	                            ja 0x400a20e	     17685	i386-dis.c	FUNCTION_93	IF_2	CALL_2
0x400a163	        0x837de403	               cmp dword [rbp - 0x1c], 3	     17686	i386-dis.c	FUNCTION_93	IF_2
0x400a167	     0xf84a1000000	                            je 0x400a20e	     17686	i386-dis.c	FUNCTION_93	IF_2
0x400a16d	        0x837de407	               cmp dword [rbp - 0x1c], 7	     17687	i386-dis.c	FUNCTION_93	IF_2
0x400a171	     0xf8497000000	                            je 0x400a20e	     17687	i386-dis.c	FUNCTION_93	IF_2
0x400a177	    0x488b05000000	            mov rax, qword [0x0400a17e] 	     17690	i386-dis.c	FUNCTION_93	IF_2
0x400a17e	        0x4883e802	                              sub rax, 2	     17690	i386-dis.c	FUNCTION_93	IF_2
0x400a182	        0x488945e8	             mov qword [rbp - 0x18], rax	     17690	i386-dis.c	FUNCTION_93	IF_2
0x400a186	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x400a18a	           0xfb600	                   movzx eax, byte [rax]	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x400a18d	            0x3c70	                            cmp al, 0x70	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x400a18f	            0x7515	                           jne 0x400a1a6	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x400a191	      0x488345e801	               add qword [rbp - 0x18], 1	     17695	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x400a196	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x400a19a	           0xfb600	                   movzx eax, byte [rax]	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x400a19d	          0x8845f0	               mov byte [rbp - 0x10], al	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x400a1a0	        0xc645f100	                 mov byte [rbp - 0xf], 0	     17697	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x400a1a4	            0xeb19	                           jmp 0x400a1bf	     17697	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x400a1a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17701	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x400a1aa	           0xfb600	                   movzx eax, byte [rax]	     17701	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x400a1ad	          0x8845f0	               mov byte [rbp - 0x10], al	     17701	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x400a1b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17702	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x400a1b4	         0xfb64001	               movzx eax, byte [rax + 1]	     17702	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x400a1b8	          0x8845f1	                mov byte [rbp - 0xf], al	     17702	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x400a1bb	        0xc645f200	                 mov byte [rbp - 0xe], 0	     17703	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x400a1bf	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     17706	i386-dis.c	FUNCTION_93	IF_2	CALL_3
0x400a1c2	        0x48c1e004	                              shl rax, 4	     17706	i386-dis.c	FUNCTION_93	IF_2	CALL_3
0x400a1c6	    0x480500000000	                              add rax, 0	     17706	i386-dis.c	FUNCTION_93	IF_2	CALL_3
0x400a1cc	          0x488b10	                    mov rdx, qword [rax]	     17706	i386-dis.c	FUNCTION_93	IF_2	CALL_3
0x400a1cf	        0x488d4df0	                   lea rcx, [rbp - 0x10]	     17706	i386-dis.c	FUNCTION_93	IF_2	CALL_3
0x400a1d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17706	i386-dis.c	FUNCTION_93	IF_2	CALL_3
0x400a1d7	      0xbe00000000	                              mov esi, 0	     17706	i386-dis.c	FUNCTION_93	IF_2	CALL_3
0x400a1dc	          0x4889c7	                            mov rdi, rax	     17706	i386-dis.c	FUNCTION_93	IF_2	CALL_3
0x400a1df	      0xb800000000	                              mov eax, 0	     17706	i386-dis.c	FUNCTION_93	IF_2	CALL_3
0x400a1e4	      0xe800000000	                          call 0x400a1e9	     17706	i386-dis.c	FUNCTION_93	IF_2	CALL_3
0x400a1e9	    0x488b05000000	            mov rax, qword [0x0400a1f0] 	     17707	i386-dis.c	FUNCTION_93	IF_2
0x400a1f0	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	     17707	i386-dis.c	FUNCTION_93	IF_2
0x400a1f3	        0x48c1e204	                              shl rdx, 4	     17707	i386-dis.c	FUNCTION_93	IF_2
0x400a1f7	    0x4881c2000000	                              add rdx, 0	     17707	i386-dis.c	FUNCTION_93	IF_2
0x400a1fe	            0x8b12	                    mov edx, dword [rdx]	     17707	i386-dis.c	FUNCTION_93	IF_2
0x400a200	            0x89d2	                            mov edx, edx	     17707	i386-dis.c	FUNCTION_93	IF_2
0x400a202	          0x4801d0	                            add rax, rdx	     17707	i386-dis.c	FUNCTION_93	IF_2
0x400a205	    0x488905000000	            mov qword [0x0400a20c], rax 	     17707	i386-dis.c	FUNCTION_93	IF_2
0x400a20c	            0xeb30	                           jmp 0x400a23e	     17688	i386-dis.c	FUNCTION_93	IF_2
0x400a20e	    0xc60500000000	            mov byte [0x0400a215], 0x24 	     17712	i386-dis.c	FUNCTION_93	ELSE_2
0x400a215	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_4
0x400a218	      0xb900000000	                              mov ecx, 0	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_4
0x400a21d	          0x4889c2	                            mov rdx, rax	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_4
0x400a220	      0xbe01000000	                              mov esi, 1	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_4
0x400a225	          0x4889cf	                            mov rdi, rcx	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_4
0x400a228	      0xe89fa9ffff	            call sym.print_operand_value	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_4
0x400a22d	      0xbf00000000	                              mov edi, 0	     17714	i386-dis.c	FUNCTION_93	ELSE_2	CALL_5
0x400a232	      0xe88690ffff	            call sym.oappend_maybe_intel	     17714	i386-dis.c	FUNCTION_93	ELSE_2	CALL_5
0x400a237	    0xc60500000000	                mov byte [0x0400a23e], 0	     17715	i386-dis.c	FUNCTION_93	ELSE_2
0x400a23e	              0x90	                                     nop	     17717	i386-dis.c	FUNCTION_93
0x400a23f	        0x488b45f8	                mov rax, qword [rbp - 8]	     17717	i386-dis.c	FUNCTION_93
0x400a243	    0x644833042528	                xor rax, qword fs:[0x28]	     17717	i386-dis.c	FUNCTION_93
0x400a24c	            0x7405	                            je 0x400a253	     17717	i386-dis.c	FUNCTION_93
0x400a24e	      0xe800000000	                          call 0x400a253	     17717	i386-dis.c	FUNCTION_93
0x400a253	              0xc9	                                   leave	     17717	i386-dis.c	FUNCTION_93
0x400a254	              0xc3	                                     ret	     17717	i386-dis.c	FUNCTION_93
OP_REG	CALL,2:WHILE,0:functions,0:DO,0:ELSE,4:IF,5:SWITCH,2:FOR,0	164
0x4006f5e	              0x55	                                push rbp	     15852	i386-dis.c	FUNCTION_33
0x4006f5f	          0x4889e5	                            mov rbp, rsp	     15852	i386-dis.c	FUNCTION_33
0x4006f62	        0x4883ec20	                           sub rsp, 0x20	     15852	i386-dis.c	FUNCTION_33
0x4006f66	          0x897dec	             mov dword [rbp - 0x14], edi	     15852	i386-dis.c	FUNCTION_33
0x4006f69	          0x8975e8	             mov dword [rbp - 0x18], esi	     15852	i386-dis.c	FUNCTION_33
0x4006f6c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     15856	i386-dis.c	FUNCTION_33	SWITCH_1
0x4006f6f	          0x83e846	                           sub eax, 0x46	     15856	i386-dis.c	FUNCTION_33	SWITCH_1
0x4006f72	          0x83f805	                              cmp eax, 5	     15856	i386-dis.c	FUNCTION_33	SWITCH_1
0x4006f75	            0x772b	                            ja 0x4006fa2	     15856	i386-dis.c	FUNCTION_33	SWITCH_1
0x4006f77	    0x488b05000000	            mov rax, qword [0x04006f7e] 	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f7e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f81	          0x4863d2	                         movsxd rdx, edx	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f84	        0x48c1e203	                              shl rdx, 3	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f88	    0x4881ea300200	                          sub rdx, 0x230	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f8f	          0x4801d0	                            add rax, rdx	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f92	          0x488b00	                    mov rax, qword [rax]	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f95	          0x4889c7	                            mov rdi, rax	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f98	      0xe82cdbffff	                        call sym.oappend	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f9d	      0xe912020000	                           jmp 0x40071b4	     15861	i386-dis.c	FUNCTION_33	SWITCH_1
0x4006fa2	    0x8b0500000000	            mov eax, dword [0x04006fa8] 	     15864	i386-dis.c	FUNCTION_33
0x4006fa8	          0x83e001	                              and eax, 1	     15864	i386-dis.c	FUNCTION_33
0x4006fab	            0x85c0	                           test eax, eax	     15864	i386-dis.c	FUNCTION_33
0x4006fad	            0x740f	                            je 0x4006fbe	     15864	i386-dis.c	FUNCTION_33
0x4006faf	    0x8b0500000000	            mov eax, dword [0x04006fb5] 	     15864	i386-dis.c	FUNCTION_33
0x4006fb5	          0x83c841	                            or eax, 0x41	     15864	i386-dis.c	FUNCTION_33
0x4006fb8	    0x890500000000	            mov dword [0x04006fbe], eax 	     15864	i386-dis.c	FUNCTION_33
0x4006fbe	    0x8b0500000000	            mov eax, dword [0x04006fc4] 	     15865	i386-dis.c	FUNCTION_33	IF_1
0x4006fc4	          0x83e001	                              and eax, 1	     15865	i386-dis.c	FUNCTION_33	IF_1
0x4006fc7	            0x85c0	                           test eax, eax	     15865	i386-dis.c	FUNCTION_33	IF_1
0x4006fc9	            0x7409	                            je 0x4006fd4	     15865	i386-dis.c	FUNCTION_33	IF_1
0x4006fcb	    0xc745f4080000	                mov dword [rbp - 0xc], 8	     15866	i386-dis.c	FUNCTION_33	IF_1
0x4006fd2	            0xeb07	                           jmp 0x4006fdb	     15866	i386-dis.c	FUNCTION_33	IF_1
0x4006fd4	    0xc745f4000000	                mov dword [rbp - 0xc], 0	     15868	i386-dis.c	FUNCTION_33	ELSE_1
0x4006fdb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4006fde	          0x83e84c	                           sub eax, 0x4c	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4006fe1	          0x83f81f	                           cmp eax, 0x1f	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4006fe4	     0xf87aa010000	                            ja 0x4007194	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4006fea	            0x89c0	                            mov eax, eax	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4006fec	    0x488b04c50000	                  mov rax, qword [rax*8]	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4006ff4	            0xffe0	                                 jmp rax	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4006ff6	    0x488b05000000	            mov rax, qword [0x04006ffd] 	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4006ffd	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007000	          0x8d4aa4	                   lea ecx, [rdx - 0x5c]	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007003	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007006	             0x1ca	                            add edx, ecx	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007008	          0x4863d2	                         movsxd rdx, edx	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400700b	        0x48c1e203	                              shl rdx, 3	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400700f	          0x4801d0	                            add rax, rdx	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007012	          0x488b00	                    mov rax, qword [rax]	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007015	        0x488945f8	                mov qword [rbp - 8], rax	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007019	      0xe98a010000	                           jmp 0x40071a8	     15875	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400701e	    0x8b0500000000	            mov eax, dword [0x04007024] 	     15878	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007024	          0x83c840	                            or eax, 0x40	     15878	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007027	    0x890500000000	            mov dword [0x0400702d], eax 	     15878	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400702d	    0x8b0500000000	            mov eax, dword [0x04007033] 	     15879	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4007033	            0x85c0	                           test eax, eax	     15879	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4007035	            0x7428	                            je 0x400705f	     15879	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4007037	    0x488b05000000	            mov rax, qword [0x0400703e] 	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x400703e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4007041	          0x8d4aac	                   lea ecx, [rdx - 0x54]	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4007044	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4007047	             0x1ca	                            add edx, ecx	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4007049	          0x4863d2	                         movsxd rdx, edx	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x400704c	        0x48c1e203	                              shl rdx, 3	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4007050	          0x4801d0	                            add rax, rdx	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4007053	          0x488b00	                    mov rax, qword [rax]	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4007056	        0x488945f8	                mov qword [rbp - 8], rax	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x400705a	      0xe949010000	                           jmp 0x40071a8	     15883	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x400705f	    0x488b05000000	            mov rax, qword [0x04007066] 	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x4007066	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x4007069	          0x4863d2	                         movsxd rdx, edx	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x400706c	        0x48c1e203	                              shl rdx, 3	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x4007070	    0x4881eaa00200	                          sub rdx, 0x2a0	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x4007077	          0x4801d0	                            add rax, rdx	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x400707a	          0x488b00	                    mov rax, qword [rax]	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x400707d	        0x488945f8	                mov qword [rbp - 8], rax	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x4007081	      0xe922010000	                           jmp 0x40071a8	     15883	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x4007086	    0x8b0500000000	            mov eax, dword [0x0400708c] 	     15886	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x400708c	          0x83f802	                              cmp eax, 2	     15886	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x400708f	            0x753f	                           jne 0x40070d0	     15886	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4007091	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4007094	          0x83e001	                              and eax, 1	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4007097	            0x85c0	                           test eax, eax	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4007099	            0x750d	                           jne 0x40070a8	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x400709b	    0x8b0500000000	            mov eax, dword [0x040070a1] 	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070a1	          0x83e008	                              and eax, 8	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070a4	            0x85c0	                           test eax, eax	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070a6	            0x7428	                            je 0x40070d0	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070a8	    0x488b05000000	            mov rax, qword [0x040070af] 	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070af	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070b2	          0x8d4a9c	                   lea ecx, [rdx - 0x64]	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070b5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070b8	             0x1ca	                            add edx, ecx	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070ba	          0x4863d2	                         movsxd rdx, edx	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070bd	        0x48c1e203	                              shl rdx, 3	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070c1	          0x4801d0	                            add rax, rdx	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070c4	          0x488b00	                    mov rax, qword [rax]	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070c7	        0x488945f8	                mov qword [rbp - 8], rax	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070cb	      0xe9d8000000	                           jmp 0x40071a8	     15890	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40070d0	        0x836dec18	            sub dword [rbp - 0x14], 0x18	     15892	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40070d4	    0x8b0500000000	            mov eax, dword [0x040070da] 	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40070da	          0x83e008	                              and eax, 8	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40070dd	            0x85c0	                           test eax, eax	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40070df	            0x740f	                            je 0x40070f0	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40070e1	    0x8b0500000000	            mov eax, dword [0x040070e7] 	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40070e7	          0x83c848	                            or eax, 0x48	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40070ea	    0x890500000000	            mov dword [0x040070f0], eax 	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40070f0	    0x8b0500000000	            mov eax, dword [0x040070f6] 	     15897	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x40070f6	          0x83e008	                              and eax, 8	     15897	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x40070f9	            0x85c0	                           test eax, eax	     15897	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x40070fb	            0x7428	                            je 0x4007125	     15897	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x40070fd	    0x488b05000000	            mov rax, qword [0x04007104] 	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4007104	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4007107	          0x8d4ab4	                   lea ecx, [rdx - 0x4c]	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x400710a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x400710d	             0x1ca	                            add edx, ecx	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x400710f	          0x4863d2	                         movsxd rdx, edx	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4007112	        0x48c1e203	                              shl rdx, 3	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4007116	          0x4801d0	                            add rax, rdx	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4007119	          0x488b00	                    mov rax, qword [rax]	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x400711c	        0x488945f8	                mov qword [rbp - 8], rax	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4007120	      0xe983000000	                           jmp 0x40071a8	     15907	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007125	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     15901	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4007128	          0x83e001	                              and eax, 1	     15901	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400712b	            0x85c0	                           test eax, eax	     15901	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400712d	            0x7425	                            je 0x4007154	     15901	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400712f	    0x488b05000000	            mov rax, qword [0x04007136] 	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4007136	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4007139	          0x8d4ab4	                   lea ecx, [rdx - 0x4c]	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400713c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400713f	             0x1ca	                            add edx, ecx	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4007141	          0x4863d2	                         movsxd rdx, edx	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4007144	        0x48c1e203	                              shl rdx, 3	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4007148	          0x4801d0	                            add rax, rdx	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400714b	          0x488b00	                    mov rax, qword [rax]	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400714e	        0x488945f8	                mov qword [rbp - 8], rax	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4007152	            0xeb23	                           jmp 0x4007177	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4007154	    0x488b05000000	            mov rax, qword [0x0400715b] 	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x400715b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x400715e	          0x8d4ab4	                   lea ecx, [rdx - 0x4c]	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4007161	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4007164	             0x1ca	                            add edx, ecx	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4007166	          0x4863d2	                         movsxd rdx, edx	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4007169	        0x48c1e203	                              shl rdx, 3	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x400716d	          0x4801d0	                            add rax, rdx	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4007170	          0x488b00	                    mov rax, qword [rax]	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4007173	        0x488945f8	                mov qword [rbp - 8], rax	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4007177	    0x8b0500000000	            mov eax, dword [0x0400717d] 	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x400717d	      0x2500020000	                          and eax, 0x200	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x4007182	            0x89c2	                            mov edx, eax	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x4007184	    0x8b0500000000	            mov eax, dword [0x0400718a] 	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x400718a	             0x9d0	                             or eax, edx	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x400718c	    0x890500000000	            mov dword [0x04007192], eax 	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x4007192	            0xeb14	                           jmp 0x40071a8	     15907	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007194	      0xbe00000000	                              mov esi, 0	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4007199	      0xbf00000000	                              mov edi, 0	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400719e	      0xe800000000	                          call 0x40071a3	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40071a3	        0x488945f8	                mov qword [rbp - 8], rax	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40071a7	              0x90	                                     nop	     15910	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40071a8	        0x488b45f8	                mov rax, qword [rbp - 8]	     15912	i386-dis.c	FUNCTION_33	CALL_2
0x40071ac	          0x4889c7	                            mov rdi, rax	     15912	i386-dis.c	FUNCTION_33	CALL_2
0x40071af	      0xe815d9ffff	                        call sym.oappend	     15912	i386-dis.c	FUNCTION_33	CALL_2
0x40071b4	              0xc9	                                   leave	     15913	i386-dis.c	FUNCTION_33
0x40071b5	              0xc3	                                     ret	     15913	i386-dis.c	FUNCTION_33
get_valid_dis386	CALL,6:WHILE,0:functions,0:DO,0:ELSE,5:IF,20:SWITCH,11:FOR,0	1023
0x4000a55	              0x55	                                push rbp	     12730	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a56	          0x4889e5	                            mov rbp, rsp	     12730	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a59	        0x4883ec20	                           sub rsp, 0x20	     12730	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a5d	        0x48897de8	             mov qword [rbp - 0x18], rdi	     12730	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a61	        0x488975e0	             mov qword [rbp - 0x20], rsi	     12730	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12733	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8	IF_1
0x4000a69	          0x488b00	                    mov rax, qword [rax]	     12733	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8	IF_1
0x4000a6c	          0x4885c0	                           test rax, rax	     12733	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8	IF_1
0x4000a6f	            0x7409	                            je 0x4000a7a	     12733	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8	IF_1
0x4000a71	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12734	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8	IF_1
0x4000a75	      0xe9ed0f0000	                           jmp 0x4001a67	     12734	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8	IF_1
0x4000a7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a7e	          0x8b4010	            mov eax, dword [rax + 0x10] 	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a81	          0x83f80d	                            cmp eax, 0xd	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a84	     0xf87af0f0000	                            ja 0x4001a39	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a8a	            0x89c0	                            mov eax, eax	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a8c	    0x488b04c50000	                  mov rax, qword [rax*8]	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a94	            0xffe0	                                 jmp rax	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x4000a96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000a9a	          0x8b4820	            mov ecx, dword [rax + 0x20] 	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000a9d	    0x8b0500000000	            mov eax, dword [0x04000aa3] 	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000aa3	            0x4898	                                    cdqe	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000aa5	          0x4889c2	                            mov rdx, rax	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000aa8	          0x4801d2	                            add rdx, rdx	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000aab	          0x4801c2	                            add rdx, rax	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000aae	          0x4889d0	                            mov rax, rdx	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000ab1	        0x48c1e005	                              shl rax, 5	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000ab5	          0x4889c2	                            mov rdx, rax	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000ab8	          0x4863c9	                         movsxd rcx, ecx	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000abb	          0x4889c8	                            mov rax, rcx	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000abe	          0x4801c0	                            add rax, rax	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000ac1	          0x4801c8	                            add rax, rcx	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000ac4	        0x48c1e008	                              shl rax, 8	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000ac8	          0x4801d0	                            add rax, rdx	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000acb	    0x480500000000	                              add rax, 0	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000ad1	        0x488945e8	             mov qword [rbp - 0x18], rax	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4000ad5	      0xe9680f0000	                           jmp 0x4001a42	     12740	i386-dis.c	FOR_1	FUNCTION_8
0x4000ada	    0x8b0500000000	            mov eax, dword [0x04000ae0] 	     12743	i386-dis.c	FOR_1	FUNCTION_8
0x4000ae0	          0x83f803	                              cmp eax, 3	     12743	i386-dis.c	FOR_1	FUNCTION_8
0x4000ae3	           0xf94c0	                                 sete al	     12743	i386-dis.c	FOR_1	FUNCTION_8
0x4000ae6	           0xfb6c0	                           movzx eax, al	     12743	i386-dis.c	FOR_1	FUNCTION_8
0x4000ae9	          0x8945f0	             mov dword [rbp - 0x10], eax	     12743	i386-dis.c	FOR_1	FUNCTION_8
0x4000aec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000af0	          0x8b4820	            mov ecx, dword [rax + 0x20] 	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000af3	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000af6	            0x4898	                                    cdqe	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000af8	          0x4889c2	                            mov rdx, rax	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000afb	          0x4801d2	                            add rdx, rdx	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000afe	          0x4801c2	                            add rdx, rax	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b01	          0x4889d0	                            mov rax, rdx	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b04	        0x48c1e005	                              shl rax, 5	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b08	          0x4889c2	                            mov rdx, rax	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b0b	          0x4863c9	                         movsxd rcx, ecx	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b0e	          0x4889c8	                            mov rax, rcx	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b11	          0x4801c0	                            add rax, rax	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b14	          0x4801c8	                            add rax, rcx	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b17	        0x48c1e006	                              shl rax, 6	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b1b	          0x4801d0	                            add rax, rdx	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b1e	    0x480500000000	                              add rax, 0	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b24	        0x488945e8	             mov qword [rbp - 0x18], rax	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4000b28	      0xe9150f0000	                           jmp 0x4001a42	     12745	i386-dis.c	FOR_1	FUNCTION_8
0x4000b2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b31	          0x8b4820	            mov ecx, dword [rax + 0x20] 	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b34	    0x8b0500000000	            mov eax, dword [0x04000b3a] 	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b3a	            0x4898	                                    cdqe	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b3c	          0x4889c2	                            mov rdx, rax	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b3f	          0x4801d2	                            add rdx, rdx	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b42	          0x4801c2	                            add rdx, rax	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b45	          0x4889d0	                            mov rax, rdx	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b48	        0x48c1e005	                              shl rax, 5	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b4c	          0x4889c2	                            mov rdx, rax	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b4f	          0x4863c9	                         movsxd rcx, ecx	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b52	          0x4889c8	                            mov rax, rcx	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b55	          0x4801c0	                            add rax, rax	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b58	          0x4801c8	                            add rax, rcx	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b5b	        0x48c1e008	                              shl rax, 8	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b5f	          0x4801d0	                            add rax, rdx	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b62	    0x480500000000	                              add rax, 0	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b68	        0x488945e8	             mov qword [rbp - 0x18], rax	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4000b6c	      0xe9d10e0000	                           jmp 0x4001a42	     12749	i386-dis.c	FOR_1	FUNCTION_8
0x4000b71	     0xfb605000000	           movzx eax, byte [0x04000b78] 	     12752	i386-dis.c	FOR_1	FUNCTION_8	IF_2
0x4000b78	            0x84c0	                             test al, al	     12752	i386-dis.c	FOR_1	FUNCTION_8	IF_2
0x4000b7a	            0x745b	                            je 0x4000bd7	     12752	i386-dis.c	FOR_1	FUNCTION_8	IF_2
0x4000b7c	    0x8b0500000000	            mov eax, dword [0x04000b82] 	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000b82	          0x83f866	                           cmp eax, 0x66	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000b85	            0x7433	                            je 0x4000bba	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000b87	          0x83f866	                           cmp eax, 0x66	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000b8a	            0x7f06	                            jg 0x4000b92	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000b8c	            0x85c0	                           test eax, eax	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000b8e	            0x7412	                            je 0x4000ba2	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000b90	            0xeb40	                           jmp 0x4000bd2	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000b92	      0x3df2000000	                           cmp eax, 0xf2	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000b97	            0x742d	                            je 0x4000bc6	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000b99	      0x3df3000000	                           cmp eax, 0xf3	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000b9e	            0x740e	                            je 0x4000bae	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000ba0	            0xeb30	                           jmp 0x4000bd2	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000ba2	    0xc745f0000000	               mov dword [rbp - 0x10], 0	     12758	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000ba9	      0xe934010000	                           jmp 0x4000ce2	     12759	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000bae	    0xc745f0010000	               mov dword [rbp - 0x10], 1	     12761	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000bb5	      0xe928010000	                           jmp 0x4000ce2	     12762	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000bba	    0xc745f0020000	               mov dword [rbp - 0x10], 2	     12764	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000bc1	      0xe91c010000	                           jmp 0x4000ce2	     12765	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000bc6	    0xc745f0030000	               mov dword [rbp - 0x10], 3	     12767	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000bcd	      0xe910010000	                           jmp 0x4000ce2	     12768	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4000bd2	      0xe800000000	                          call 0x4000bd7	     12770	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2	CALL_1
0x4000bd7	    0xc745f8ffffff	        mov dword [rbp - 8], 0xffffffff 	     12776	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1
0x4000bde	    0xc745fc000000	                  mov dword [rbp - 4], 0	     12777	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1
0x4000be5	    0xc745f0000000	               mov dword [rbp - 0x10], 0	     12778	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1
0x4000bec	    0x8b0500000000	            mov eax, dword [0x04000bf2] 	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x4000bf2	          0x83e003	                              and eax, 3	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x4000bf5	            0x85c0	                           test eax, eax	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x4000bf7	     0xf8494000000	                            je 0x4000c91	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x4000bfd	    0x8b1500000000	            mov edx, dword [0x04000c03] 	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4000c03	    0x8b0500000000	            mov eax, dword [0x04000c09] 	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4000c09	            0x39c2	                            cmp edx, eax	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4000c0b	            0x7e19	                           jle 0x4000c26	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4000c0d	    0xc745f0010000	               mov dword [rbp - 0x10], 1	     12786	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4000c14	    0xc745fc010000	                  mov dword [rbp - 4], 1	     12787	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4000c1b	    0x8b0500000000	            mov eax, dword [0x04000c21] 	     12788	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4000c21	          0x8945f8	                mov dword [rbp - 8], eax	     12788	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4000c24	            0xeb17	                           jmp 0x4000c3d	     12788	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4000c26	    0xc745f0030000	               mov dword [rbp - 0x10], 3	     12792	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x4000c2d	    0xc745fc020000	                  mov dword [rbp - 4], 2	     12793	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x4000c34	    0x8b0500000000	            mov eax, dword [0x04000c3a] 	     12794	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x4000c3a	          0x8945f8	                mov dword [rbp - 8], eax	     12794	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x4000c3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c41	          0x8b5020	            mov edx, dword [rax + 0x20] 	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c44	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c47	            0x4898	                                    cdqe	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c49	          0x4863ca	                         movsxd rcx, edx	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c4c	          0x4889c2	                            mov rdx, rax	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c4f	          0x4801d2	                            add rdx, rdx	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c52	          0x4801c2	                            add rdx, rax	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c55	          0x4889d0	                            mov rax, rdx	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c58	        0x48c1e005	                              shl rax, 5	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c5c	          0x4889c2	                            mov rdx, rax	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c5f	          0x4889c8	                            mov rax, rcx	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c62	          0x4801c0	                            add rax, rax	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c65	          0x4801c8	                            add rax, rcx	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c68	        0x48c1e007	                              shl rax, 7	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c6c	          0x4801d0	                            add rax, rdx	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c6f	    0x480500000000	                              add rax, 0	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c75	            0x8b00	                    mov eax, dword [rax]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c77	      0x2500000302	                      and eax, 0x2030000	     12799	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c7c	          0xc1e810	                           shr eax, 0x10	     12799	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c7f	            0x89c2	                            mov edx, eax	     12799	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c81	          0x8b45fc	                mov eax, dword [rbp - 4]	     12800	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c84	            0x21d0	                            and eax, edx	     12800	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c86	            0x85c0	                           test eax, eax	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c88	            0x7407	                            je 0x4000c91	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c8a	    0xc745f0000000	               mov dword [rbp - 0x10], 0	     12801	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4000c91	        0x837df000	               cmp dword [rbp - 0x10], 0	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4000c95	            0x7526	                           jne 0x4000cbd	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4000c97	    0x8b0500000000	            mov eax, dword [0x04000c9d] 	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4000c9d	      0x2500020000	                          and eax, 0x200	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4000ca2	            0x85c0	                           test eax, eax	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4000ca4	            0x7417	                            je 0x4000cbd	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4000ca6	    0xc745f0020000	               mov dword [rbp - 0x10], 2	     12806	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4000cad	    0xc745fc000200	              mov dword [rbp - 4], 0x200	     12807	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4000cb4	    0x8b0500000000	            mov eax, dword [0x04000cba] 	     12808	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4000cba	          0x8945f8	                mov dword [rbp - 8], eax	     12808	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4000cbd	        0x837df000	               cmp dword [rbp - 0x10], 0	     12811	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4000cc1	            0x741f	                            je 0x4000ce2	     12811	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4000cc3	    0x8b0500000000	            mov eax, dword [0x04000cc9] 	     12813	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4000cc9	           0xb45fc	                 or eax, dword [rbp - 4]	     12813	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4000ccc	    0x890500000000	            mov dword [0x04000cd2], eax 	     12813	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4000cd2	          0x8b45f8	                mov eax, dword [rbp - 8]	     12814	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4000cd5	            0x4898	                                    cdqe	     12814	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4000cd7	    0xc70485000000	                    mov dword [rax*4], 0	     12814	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4000ce2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000ce6	          0x8b4820	            mov ecx, dword [rax + 0x20] 	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000ce9	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000cec	            0x4898	                                    cdqe	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000cee	          0x4889c2	                            mov rdx, rax	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000cf1	          0x4801d2	                            add rdx, rdx	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000cf4	          0x4801c2	                            add rdx, rax	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000cf7	          0x4889d0	                            mov rax, rdx	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000cfa	        0x48c1e005	                              shl rax, 5	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000cfe	          0x4889c2	                            mov rdx, rax	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000d01	          0x4863c9	                         movsxd rcx, ecx	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000d04	          0x4889c8	                            mov rax, rcx	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000d07	          0x4801c0	                            add rax, rax	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000d0a	          0x4801c8	                            add rax, rcx	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000d0d	        0x48c1e007	                              shl rax, 7	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000d11	          0x4801d0	                            add rax, rdx	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000d14	    0x480500000000	                              add rax, 0	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000d1a	        0x488945e8	             mov qword [rbp - 0x18], rax	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4000d1e	      0xe91f0d0000	                           jmp 0x4001a42	     12818	i386-dis.c	FOR_1	FUNCTION_8
0x4000d23	    0x8b0500000000	            mov eax, dword [0x04000d29] 	     12821	i386-dis.c	FOR_1	FUNCTION_8
0x4000d29	          0x83f802	                              cmp eax, 2	     12821	i386-dis.c	FOR_1	FUNCTION_8
0x4000d2c	           0xf94c0	                                 sete al	     12821	i386-dis.c	FOR_1	FUNCTION_8
0x4000d2f	           0xfb6c0	                           movzx eax, al	     12821	i386-dis.c	FOR_1	FUNCTION_8
0x4000d32	          0x8945f0	             mov dword [rbp - 0x10], eax	     12821	i386-dis.c	FOR_1	FUNCTION_8
0x4000d35	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d39	          0x8b4820	            mov ecx, dword [rax + 0x20] 	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d3c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d3f	            0x4898	                                    cdqe	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d41	          0x4889c2	                            mov rdx, rax	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d44	          0x4801d2	                            add rdx, rdx	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d47	          0x4801c2	                            add rdx, rax	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d4a	          0x4889d0	                            mov rax, rdx	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d4d	        0x48c1e005	                              shl rax, 5	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d51	          0x4889c2	                            mov rdx, rax	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d54	          0x4863c9	                         movsxd rcx, ecx	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d57	          0x4889c8	                            mov rax, rcx	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d5a	          0x4801c0	                            add rax, rax	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d5d	          0x4801c8	                            add rax, rcx	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d60	        0x48c1e006	                              shl rax, 6	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d64	          0x4801d0	                            add rax, rdx	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d67	    0x480500000000	                              add rax, 0	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d6d	        0x488945e8	             mov qword [rbp - 0x18], rax	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4000d71	      0xe9cc0c0000	                           jmp 0x4001a42	     12823	i386-dis.c	FOR_1	FUNCTION_8
0x4000d76	    0x488b05000000	            mov rax, qword [0x04000d7d] 	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000d7d	        0x488d5002	                      lea rdx, [rax + 2]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000d81	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000d85	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000d89	          0x488b00	                    mov rax, qword [rax]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000d8c	          0x4839c2	                            cmp rdx, rax	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000d8f	            0x761a	                           jbe 0x4000dab	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000d91	    0x488b05000000	            mov rax, qword [0x04000d98] 	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000d98	        0x488d5002	                      lea rdx, [rax + 2]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000d9c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000da0	          0x4889d6	                            mov rsi, rdx	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000da3	          0x4889c7	                            mov rdi, rax	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000da6	      0xe895f2ffff	                     call sym.fetch_data	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4000dab	    0x488b05000000	            mov rax, qword [0x04000db2] 	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x4000db2	        0x488d5001	                      lea rdx, [rax + 1]	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x4000db6	    0x488915000000	            mov qword [0x04000dbd], rdx 	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x4000dbd	           0xfb600	                   movzx eax, byte [rax]	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x4000dc0	           0xfb6c0	                           movzx eax, al	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x4000dc3	          0x8945f0	             mov dword [rbp - 0x10], eax	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x4000dc6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000dca	          0x8b4820	            mov ecx, dword [rax + 0x20] 	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000dcd	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000dd0	            0x4898	                                    cdqe	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000dd2	          0x4889c2	                            mov rdx, rax	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000dd5	          0x4801d2	                            add rdx, rdx	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000dd8	          0x4801c2	                            add rdx, rax	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000ddb	          0x4889d0	                            mov rax, rdx	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000dde	        0x48c1e005	                              shl rax, 5	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000de2	          0x4889c2	                            mov rdx, rax	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000de5	          0x4863c9	                         movsxd rcx, ecx	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000de8	          0x4889c8	                            mov rax, rcx	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000deb	          0x4801c0	                            add rax, rax	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000dee	          0x4801c8	                            add rax, rcx	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000df1	        0x48c1e00d	                            shl rax, 0xd	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000df5	          0x4801d0	                            add rax, rdx	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000df8	    0x480500000000	                              add rax, 0	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000dfe	        0x488945e8	             mov qword [rbp - 0x18], rax	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x4000e02	    0x488b05000000	            mov rax, qword [0x04000e09] 	     12829	i386-dis.c	FOR_1	FUNCTION_8
0x4000e09	    0x488905000000	            mov qword [0x04000e10], rax 	     12829	i386-dis.c	FOR_1	FUNCTION_8
0x4000e10	    0x488b05000000	            mov rax, qword [0x04000e17] 	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x4000e17	           0xfb600	                   movzx eax, byte [rax]	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x4000e1a	          0xc0e806	                               shr al, 6	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x4000e1d	           0xfb6c0	                           movzx eax, al	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x4000e20	          0x83e003	                              and eax, 3	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x4000e23	    0x890500000000	            mov dword [0x04000e29], eax 	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x4000e29	    0x488b05000000	            mov rax, qword [0x04000e30] 	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x4000e30	           0xfb600	                   movzx eax, byte [rax]	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x4000e33	          0xc0e803	                               shr al, 3	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x4000e36	           0xfb6c0	                           movzx eax, al	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x4000e39	          0x83e007	                              and eax, 7	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x4000e3c	    0x890500000000	            mov dword [0x04000e42], eax 	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x4000e42	    0x488b05000000	            mov rax, qword [0x04000e49] 	     12832	i386-dis.c	FOR_1	FUNCTION_8
0x4000e49	           0xfb600	                   movzx eax, byte [rax]	     12832	i386-dis.c	FOR_1	FUNCTION_8
0x4000e4c	           0xfb6c0	                           movzx eax, al	     12832	i386-dis.c	FOR_1	FUNCTION_8
0x4000e4f	          0x83e007	                              and eax, 7	     12832	i386-dis.c	FOR_1	FUNCTION_8
0x4000e52	    0x890500000000	            mov dword [0x04000e58], eax 	     12832	i386-dis.c	FOR_1	FUNCTION_8
0x4000e58	      0xe9e50b0000	                           jmp 0x4001a42	     12833	i386-dis.c	FOR_1	FUNCTION_8
0x4000e5d	     0xfb605000000	           movzx eax, byte [0x04000e64] 	     12836	i386-dis.c	FOR_1	FUNCTION_8	IF_8
0x4000e64	            0x84c0	                             test al, al	     12836	i386-dis.c	FOR_1	FUNCTION_8	IF_8
0x4000e66	            0x7505	                           jne 0x4000e6d	     12836	i386-dis.c	FOR_1	FUNCTION_8	IF_8
0x4000e68	      0xe800000000	                          call 0x4000e6d	     12837	i386-dis.c	FOR_1	FUNCTION_8	CALL_2
0x4000e6d	    0x8b0500000000	            mov eax, dword [0x04000e73] 	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4000e73	      0x3d80000000	                           cmp eax, 0x80	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4000e78	            0x7409	                            je 0x4000e83	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4000e7a	      0x3d00010000	                          cmp eax, 0x100	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4000e7f	            0x740b	                            je 0x4000e8c	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4000e81	            0xeb12	                           jmp 0x4000e95	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4000e83	    0xc745f0000000	               mov dword [rbp - 0x10], 0	     12842	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4000e8a	            0xeb0e	                           jmp 0x4000e9a	     12843	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4000e8c	    0xc745f0010000	               mov dword [rbp - 0x10], 1	     12845	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4000e93	            0xeb05	                           jmp 0x4000e9a	     12846	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4000e95	      0xe800000000	                          call 0x4000e9a	     12848	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3	CALL_3
0x4000e9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000e9e	          0x8b4820	            mov ecx, dword [rax + 0x20] 	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ea1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ea4	            0x4898	                                    cdqe	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ea6	          0x4889c2	                            mov rdx, rax	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ea9	          0x4801d2	                            add rdx, rdx	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000eac	          0x4801c2	                            add rdx, rax	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000eaf	          0x4889d0	                            mov rax, rdx	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000eb2	        0x48c1e005	                              shl rax, 5	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000eb6	          0x4889c2	                            mov rdx, rax	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000eb9	          0x4863c9	                         movsxd rcx, ecx	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ebc	          0x4889c8	                            mov rax, rcx	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ebf	          0x4801c0	                            add rax, rax	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ec2	          0x4801c8	                            add rax, rcx	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ec5	        0x48c1e006	                              shl rax, 6	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ec9	          0x4801d0	                            add rax, rdx	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ecc	    0x480500000000	                              add rax, 0	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ed2	        0x488945e8	             mov qword [rbp - 0x18], rax	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4000ed6	      0xe9670b0000	                           jmp 0x4001a42	     12853	i386-dis.c	FOR_1	FUNCTION_8
0x4000edb	    0x488b05000000	            mov rax, qword [0x04000ee2] 	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000ee2	        0x488d5003	                      lea rdx, [rax + 3]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000ee6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000eea	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000eee	          0x488b00	                    mov rax, qword [rax]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000ef1	          0x4839c2	                            cmp rdx, rax	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000ef4	            0x761a	                           jbe 0x4000f10	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000ef6	    0x488b05000000	            mov rax, qword [0x04000efd] 	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000efd	        0x488d5003	                      lea rdx, [rax + 3]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000f01	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000f05	          0x4889d6	                            mov rsi, rdx	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000f08	          0x4889c7	                            mov rdi, rax	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000f0b	      0xe830f1ffff	                     call sym.fetch_data	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4000f10	    0x8b0500000000	            mov eax, dword [0x04000f16] 	     12858	i386-dis.c	FOR_1	FUNCTION_8
0x4000f16	    0x890500000000	            mov dword [0x04000f1c], eax 	     12858	i386-dis.c	FOR_1	FUNCTION_8
0x4000f1c	    0x488b05000000	            mov rax, qword [0x04000f23] 	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x4000f23	           0xfb600	                   movzx eax, byte [rax]	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x4000f26	          0xc0e805	                               shr al, 5	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x4000f29	           0xfb6c0	                           movzx eax, al	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x4000f2c	            0xf7d0	                                 not eax	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x4000f2e	          0x83e007	                              and eax, 7	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x4000f31	    0x890500000000	            mov dword [0x04000f37], eax 	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x4000f37	    0x488b05000000	            mov rax, qword [0x04000f3e] 	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f3e	           0xfb600	                   movzx eax, byte [rax]	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f41	           0xfb6c0	                           movzx eax, al	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f44	          0x83e01f	                           and eax, 0x1f	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f47	          0x83f809	                              cmp eax, 9	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f4a	            0x7424	                            je 0x4000f70	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f4c	          0x83f80a	                            cmp eax, 0xa	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f4f	            0x7428	                            je 0x4000f79	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f51	          0x83f808	                              cmp eax, 8	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f54	            0x7411	                            je 0x4000f67	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f56	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     12865	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12866	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f62	      0xe9000b0000	                           jmp 0x4001a67	     12866	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f67	    0xc745f4000000	                mov dword [rbp - 0xc], 0	     12868	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f6e	            0xeb11	                           jmp 0x4000f81	     12869	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f70	    0xc745f4010000	                mov dword [rbp - 0xc], 1	     12871	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f77	            0xeb08	                           jmp 0x4000f81	     12872	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f79	    0xc745f4020000	                mov dword [rbp - 0xc], 2	     12874	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f80	              0x90	                                     nop	     12875	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4000f81	    0x488b05000000	            mov rax, qword [0x04000f88] 	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x4000f88	        0x4883c001	                              add rax, 1	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x4000f8c	    0x488905000000	            mov qword [0x04000f93], rax 	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x4000f93	    0x488b05000000	            mov rax, qword [0x04000f9a] 	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x4000f9a	           0xfb600	                   movzx eax, byte [rax]	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x4000f9d	           0xfb6c0	                           movzx eax, al	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x4000fa0	      0x2580000000	                           and eax, 0x80	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x4000fa5	    0x890500000000	            mov dword [0x04000fab], eax 	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x4000fab	    0x8b0500000000	            mov eax, dword [0x04000fb1] 	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4000fb1	            0x85c0	                           test eax, eax	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4000fb3	            0x741a	                            je 0x4000fcf	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4000fb5	    0x8b0500000000	            mov eax, dword [0x04000fbb] 	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4000fbb	          0x83f802	                              cmp eax, 2	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4000fbe	            0x750f	                           jne 0x4000fcf	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4000fc0	    0x8b0500000000	            mov eax, dword [0x04000fc6] 	     12880	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4000fc6	          0x83c808	                               or eax, 8	     12880	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4000fc9	    0x890500000000	            mov dword [0x04000fcf], eax 	     12880	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4000fcf	    0x488b05000000	            mov rax, qword [0x04000fd6] 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4000fd6	           0xfb600	                   movzx eax, byte [rax]	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4000fd9	          0xc0e803	                               shr al, 3	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4000fdc	           0xfb6c0	                           movzx eax, al	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4000fdf	            0xf7d0	                                 not eax	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4000fe1	          0x83e00f	                            and eax, 0xf	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4000fe4	    0x890500000000	            mov dword [0x04000fea], eax 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4000fea	    0x8b0500000000	            mov eax, dword [0x04000ff0] 	     12883	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4000ff0	          0x83f802	                              cmp eax, 2	     12883	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4000ff3	            0x740f	                            je 0x4001004	     12883	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4000ff5	    0x8b0500000000	            mov eax, dword [0x04000ffb] 	     12886	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4000ffb	          0x83e0fe	                     and eax, 0xfffffffe	     12886	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4000ffe	    0x890500000000	            mov dword [0x04001004], eax 	     12886	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4001004	    0x488b05000000	            mov rax, qword [0x0400100b] 	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400100b	           0xfb600	                   movzx eax, byte [rax]	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400100e	           0xfb6c0	                           movzx eax, al	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4001011	          0x83e004	                              and eax, 4	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4001014	            0x85c0	                           test eax, eax	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4001016	            0x7407	                            je 0x400101f	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4001018	      0xb800010000	                          mov eax, 0x100	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400101d	            0xeb05	                           jmp 0x4001024	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400101f	      0xb880000000	                           mov eax, 0x80	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4001024	    0x890500000000	            mov dword [0x0400102a], eax 	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400102a	    0x488b05000000	            mov rax, qword [0x04001031] 	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001031	           0xfb600	                   movzx eax, byte [rax]	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001034	           0xfb6c0	                           movzx eax, al	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001037	          0x83e003	                              and eax, 3	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400103a	          0x83f801	                              cmp eax, 1	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400103d	            0x7415	                            je 0x4001054	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400103f	          0x83f801	                              cmp eax, 1	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001042	            0x7f04	                            jg 0x4001048	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001044	            0x85c0	                           test eax, eax	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001046	            0xeb2f	                           jmp 0x4001077	     12893	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001048	          0x83f802	                              cmp eax, 2	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400104b	            0x7413	                            je 0x4001060	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400104d	          0x83f803	                              cmp eax, 3	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001050	            0x741a	                            je 0x400106c	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001052	            0xeb23	                           jmp 0x4001077	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001054	    0xc70500000000	           mov dword [0x0400105e], 0x66 	     12895	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400105e	            0xeb17	                           jmp 0x4001077	     12896	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001060	    0xc70500000000	           mov dword [0x0400106a], 0xf3 	     12898	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400106a	            0xeb0b	                           jmp 0x4001077	     12899	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400106c	    0xc70500000000	           mov dword [0x04001076], 0xf2 	     12901	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001076	              0x90	                                     nop	     12902	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4001077	    0xc60500000000	                mov byte [0x0400107e], 1	     12904	i386-dis.c	FOR_1	FUNCTION_8
0x400107e	    0xc60500000000	                mov byte [0x04001085], 1	     12905	i386-dis.c	FOR_1	FUNCTION_8
0x4001085	    0x488b05000000	            mov rax, qword [0x0400108c] 	     12906	i386-dis.c	FOR_1	FUNCTION_8
0x400108c	        0x4883c001	                              add rax, 1	     12906	i386-dis.c	FOR_1	FUNCTION_8
0x4001090	    0x488905000000	            mov qword [0x04001097], rax 	     12906	i386-dis.c	FOR_1	FUNCTION_8
0x4001097	    0x488b05000000	            mov rax, qword [0x0400109e] 	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x400109e	        0x488d5001	                      lea rdx, [rax + 1]	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x40010a2	    0x488915000000	            mov qword [0x040010a9], rdx 	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x40010a9	           0xfb600	                   movzx eax, byte [rax]	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x40010ac	           0xfb6c0	                           movzx eax, al	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x40010af	          0x8945f0	             mov dword [rbp - 0x10], eax	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x40010b2	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010b5	            0x4898	                                    cdqe	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010b7	          0x4889c2	                            mov rdx, rax	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010ba	          0x4801d2	                            add rdx, rdx	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010bd	          0x4801c2	                            add rdx, rax	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010c0	          0x4889d0	                            mov rax, rdx	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010c3	        0x48c1e005	                              shl rax, 5	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010c7	          0x4889c2	                            mov rdx, rax	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010ca	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010cd	          0x4863c8	                         movsxd rcx, eax	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010d0	          0x4889c8	                            mov rax, rcx	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010d3	          0x4801c0	                            add rax, rax	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010d6	          0x4801c8	                            add rax, rcx	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010d9	        0x48c1e00d	                            shl rax, 0xd	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010dd	          0x4801d0	                            add rax, rdx	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010e0	    0x480500000000	                              add rax, 0	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010e6	        0x488945e8	             mov qword [rbp - 0x18], rax	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40010ea	    0x488b05000000	            mov rax, qword [0x040010f1] 	     12910	i386-dis.c	FOR_1	FUNCTION_8
0x40010f1	    0x488905000000	            mov qword [0x040010f8], rax 	     12910	i386-dis.c	FOR_1	FUNCTION_8
0x40010f8	    0x488b05000000	            mov rax, qword [0x040010ff] 	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40010ff	        0x488d5001	                      lea rdx, [rax + 1]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4001103	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4001107	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x400110b	          0x488b00	                    mov rax, qword [rax]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x400110e	          0x4839c2	                            cmp rdx, rax	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4001111	            0x761a	                           jbe 0x400112d	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4001113	    0x488b05000000	            mov rax, qword [0x0400111a] 	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x400111a	        0x488d5001	                      lea rdx, [rax + 1]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x400111e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4001122	          0x4889d6	                            mov rsi, rdx	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4001125	          0x4889c7	                            mov rdi, rax	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4001128	      0xe813efffff	                     call sym.fetch_data	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x400112d	    0x488b05000000	            mov rax, qword [0x04001134] 	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x4001134	           0xfb600	                   movzx eax, byte [rax]	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x4001137	          0xc0e806	                               shr al, 6	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x400113a	           0xfb6c0	                           movzx eax, al	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x400113d	          0x83e003	                              and eax, 3	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x4001140	    0x890500000000	            mov dword [0x04001146], eax 	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x4001146	    0x488b05000000	            mov rax, qword [0x0400114d] 	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400114d	           0xfb600	                   movzx eax, byte [rax]	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x4001150	          0xc0e803	                               shr al, 3	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x4001153	           0xfb6c0	                           movzx eax, al	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x4001156	          0x83e007	                              and eax, 7	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x4001159	    0x890500000000	            mov dword [0x0400115f], eax 	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400115f	    0x488b05000000	            mov rax, qword [0x04001166] 	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x4001166	           0xfb600	                   movzx eax, byte [rax]	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x4001169	           0xfb6c0	                           movzx eax, al	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x400116c	          0x83e007	                              and eax, 7	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x400116f	    0x890500000000	            mov dword [0x04001175], eax 	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x4001175	      0xe9c8080000	                           jmp 0x4001a42	     12915	i386-dis.c	FOR_1	FUNCTION_8
0x400117a	    0x488b05000000	            mov rax, qword [0x04001181] 	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4001181	        0x488d5003	                      lea rdx, [rax + 3]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4001185	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4001189	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400118d	          0x488b00	                    mov rax, qword [rax]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4001190	          0x4839c2	                            cmp rdx, rax	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4001193	            0x761a	                           jbe 0x40011af	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4001195	    0x488b05000000	            mov rax, qword [0x0400119c] 	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400119c	        0x488d5003	                      lea rdx, [rax + 3]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x40011a0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x40011a4	          0x4889d6	                            mov rsi, rdx	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x40011a7	          0x4889c7	                            mov rdi, rax	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x40011aa	      0xe891eeffff	                     call sym.fetch_data	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x40011af	    0x8b0500000000	            mov eax, dword [0x040011b5] 	     12921	i386-dis.c	FOR_1	FUNCTION_8
0x40011b5	    0x890500000000	            mov dword [0x040011bb], eax 	     12921	i386-dis.c	FOR_1	FUNCTION_8
0x40011bb	    0x488b05000000	            mov rax, qword [0x040011c2] 	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x40011c2	           0xfb600	                   movzx eax, byte [rax]	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x40011c5	          0xc0e805	                               shr al, 5	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x40011c8	           0xfb6c0	                           movzx eax, al	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x40011cb	            0xf7d0	                                 not eax	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x40011cd	          0x83e007	                              and eax, 7	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x40011d0	    0x890500000000	            mov dword [0x040011d6], eax 	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x40011d6	    0x488b05000000	            mov rax, qword [0x040011dd] 	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x40011dd	           0xfb600	                   movzx eax, byte [rax]	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x40011e0	           0xfb6c0	                           movzx eax, al	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x40011e3	          0x83e01f	                           and eax, 0x1f	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x40011e6	          0x83f802	                              cmp eax, 2	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x40011e9	            0x7424	                            je 0x400120f	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x40011eb	          0x83f803	                              cmp eax, 3	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x40011ee	            0x7428	                            je 0x4001218	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x40011f0	          0x83f801	                              cmp eax, 1	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x40011f3	            0x7411	                            je 0x4001206	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x40011f5	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     12926	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x40011fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12927	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4001201	      0xe961080000	                           jmp 0x4001a67	     12927	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4001206	    0xc745f4000000	                mov dword [rbp - 0xc], 0	     12929	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400120d	            0xeb11	                           jmp 0x4001220	     12930	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400120f	    0xc745f4010000	                mov dword [rbp - 0xc], 1	     12932	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4001216	            0xeb08	                           jmp 0x4001220	     12933	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4001218	    0xc745f4020000	                mov dword [rbp - 0xc], 2	     12935	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400121f	              0x90	                                     nop	     12936	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4001220	    0x488b05000000	            mov rax, qword [0x04001227] 	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x4001227	        0x4883c001	                              add rax, 1	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x400122b	    0x488905000000	            mov qword [0x04001232], rax 	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x4001232	    0x488b05000000	            mov rax, qword [0x04001239] 	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x4001239	           0xfb600	                   movzx eax, byte [rax]	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x400123c	           0xfb6c0	                           movzx eax, al	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x400123f	      0x2580000000	                           and eax, 0x80	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x4001244	    0x890500000000	            mov dword [0x0400124a], eax 	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x400124a	    0x8b0500000000	            mov eax, dword [0x04001250] 	     12940	i386-dis.c	FOR_1	FUNCTION_8	IF_11
0x4001250	          0x83f802	                              cmp eax, 2	     12940	i386-dis.c	FOR_1	FUNCTION_8	IF_11
0x4001253	            0x751b	                           jne 0x4001270	     12940	i386-dis.c	FOR_1	FUNCTION_8	IF_11
0x4001255	    0x8b0500000000	            mov eax, dword [0x0400125b] 	     12942	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x400125b	            0x85c0	                           test eax, eax	     12942	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x400125d	            0x741b	                            je 0x400127a	     12942	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x400125f	    0x8b0500000000	            mov eax, dword [0x04001265] 	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x4001265	          0x83c808	                               or eax, 8	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x4001268	    0x890500000000	            mov dword [0x0400126e], eax 	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x400126e	            0xeb0a	                           jmp 0x400127a	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x4001270	    0xc70500000000	               mov dword [0x0400127a], 0	     12950	i386-dis.c	FOR_1	FUNCTION_8	ELSE_3
0x400127a	    0x488b05000000	            mov rax, qword [0x04001281] 	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x4001281	           0xfb600	                   movzx eax, byte [rax]	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x4001284	          0xc0e803	                               shr al, 3	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x4001287	           0xfb6c0	                           movzx eax, al	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x400128a	            0xf7d0	                                 not eax	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x400128c	          0x83e00f	                            and eax, 0xf	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x400128f	    0x890500000000	            mov dword [0x04001295], eax 	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x4001295	    0x488b05000000	            mov rax, qword [0x0400129c] 	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x400129c	           0xfb600	                   movzx eax, byte [rax]	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x400129f	           0xfb6c0	                           movzx eax, al	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40012a2	          0x83e004	                              and eax, 4	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40012a5	            0x85c0	                           test eax, eax	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40012a7	            0x7407	                            je 0x40012b0	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40012a9	      0xb800010000	                          mov eax, 0x100	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40012ae	            0xeb05	                           jmp 0x40012b5	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40012b0	      0xb880000000	                           mov eax, 0x80	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40012b5	    0x890500000000	            mov dword [0x040012bb], eax 	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40012bb	    0x488b05000000	            mov rax, qword [0x040012c2] 	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012c2	           0xfb600	                   movzx eax, byte [rax]	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012c5	           0xfb6c0	                           movzx eax, al	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012c8	          0x83e003	                              and eax, 3	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012cb	          0x83f801	                              cmp eax, 1	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012ce	            0x7415	                            je 0x40012e5	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012d0	          0x83f801	                              cmp eax, 1	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012d3	            0x7f04	                            jg 0x40012d9	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012d5	            0x85c0	                           test eax, eax	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012d7	            0xeb2f	                           jmp 0x4001308	     12957	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012d9	          0x83f802	                              cmp eax, 2	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012dc	            0x7413	                            je 0x40012f1	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012de	          0x83f803	                              cmp eax, 3	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012e1	            0x741a	                            je 0x40012fd	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012e3	            0xeb23	                           jmp 0x4001308	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012e5	    0xc70500000000	           mov dword [0x040012ef], 0x66 	     12959	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012ef	            0xeb17	                           jmp 0x4001308	     12960	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012f1	    0xc70500000000	           mov dword [0x040012fb], 0xf3 	     12962	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012fb	            0xeb0b	                           jmp 0x4001308	     12963	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40012fd	    0xc70500000000	           mov dword [0x04001307], 0xf2 	     12965	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4001307	              0x90	                                     nop	     12966	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4001308	    0xc60500000000	                mov byte [0x0400130f], 1	     12968	i386-dis.c	FOR_1	FUNCTION_8
0x400130f	    0xc60500000000	                mov byte [0x04001316], 1	     12969	i386-dis.c	FOR_1	FUNCTION_8
0x4001316	    0x488b05000000	            mov rax, qword [0x0400131d] 	     12970	i386-dis.c	FOR_1	FUNCTION_8
0x400131d	        0x4883c001	                              add rax, 1	     12970	i386-dis.c	FOR_1	FUNCTION_8
0x4001321	    0x488905000000	            mov qword [0x04001328], rax 	     12970	i386-dis.c	FOR_1	FUNCTION_8
0x4001328	    0x488b05000000	            mov rax, qword [0x0400132f] 	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x400132f	        0x488d5001	                      lea rdx, [rax + 1]	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x4001333	    0x488915000000	            mov qword [0x0400133a], rdx 	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x400133a	           0xfb600	                   movzx eax, byte [rax]	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x400133d	           0xfb6c0	                           movzx eax, al	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x4001340	          0x8945f0	             mov dword [rbp - 0x10], eax	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x4001343	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4001346	            0x4898	                                    cdqe	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4001348	          0x4889c2	                            mov rdx, rax	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400134b	          0x4801d2	                            add rdx, rdx	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400134e	          0x4801c2	                            add rdx, rax	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4001351	          0x4889d0	                            mov rax, rdx	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4001354	        0x48c1e005	                              shl rax, 5	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4001358	          0x4889c2	                            mov rdx, rax	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400135b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400135e	          0x4863c8	                         movsxd rcx, eax	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4001361	          0x4889c8	                            mov rax, rcx	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4001364	          0x4801c0	                            add rax, rax	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4001367	          0x4801c8	                            add rax, rcx	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400136a	        0x48c1e00d	                            shl rax, 0xd	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400136e	          0x4801d0	                            add rax, rdx	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4001371	    0x480500000000	                              add rax, 0	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4001377	        0x488945e8	             mov qword [rbp - 0x18], rax	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400137b	    0x488b05000000	            mov rax, qword [0x04001382] 	     12973	i386-dis.c	FOR_1	FUNCTION_8
0x4001382	    0x488905000000	            mov qword [0x04001389], rax 	     12973	i386-dis.c	FOR_1	FUNCTION_8
0x4001389	        0x837df400	                cmp dword [rbp - 0xc], 0	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400138d	            0x750a	                           jne 0x4001399	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400138f	        0x837df077	           cmp dword [rbp - 0x10], 0x77 	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4001393	     0xf84a5060000	                            je 0x4001a3e	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4001399	    0x488b05000000	            mov rax, qword [0x040013a0] 	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013a0	        0x488d5001	                      lea rdx, [rax + 1]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013a4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013a8	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013ac	          0x488b00	                    mov rax, qword [rax]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013af	          0x4839c2	                            cmp rdx, rax	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013b2	            0x761a	                           jbe 0x40013ce	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013b4	    0x488b05000000	            mov rax, qword [0x040013bb] 	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013bb	        0x488d5001	                      lea rdx, [rax + 1]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013bf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013c3	          0x4889d6	                            mov rsi, rdx	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013c6	          0x4889c7	                            mov rdi, rax	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013c9	      0xe872ecffff	                     call sym.fetch_data	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013ce	    0x488b05000000	            mov rax, qword [0x040013d5] 	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013d5	           0xfb600	                   movzx eax, byte [rax]	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013d8	          0xc0e806	                               shr al, 6	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013db	           0xfb6c0	                           movzx eax, al	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013de	          0x83e003	                              and eax, 3	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013e1	    0x890500000000	            mov dword [0x040013e7], eax 	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013e7	    0x488b05000000	            mov rax, qword [0x040013ee] 	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013ee	           0xfb600	                   movzx eax, byte [rax]	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013f1	          0xc0e803	                               shr al, 3	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013f4	           0xfb6c0	                           movzx eax, al	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013f7	          0x83e007	                              and eax, 7	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40013fa	    0x890500000000	            mov dword [0x04001400], eax 	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4001400	    0x488b05000000	            mov rax, qword [0x04001407] 	     12980	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4001407	           0xfb600	                   movzx eax, byte [rax]	     12980	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400140a	           0xfb6c0	                           movzx eax, al	     12980	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400140d	          0x83e007	                              and eax, 7	     12980	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4001410	    0x890500000000	            mov dword [0x04001416], eax 	     12980	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4001416	      0xe923060000	                           jmp 0x4001a3e	     12982	i386-dis.c	FOR_1	FUNCTION_8
0x400141b	    0x488b05000000	            mov rax, qword [0x04001422] 	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4001422	        0x488d5002	                      lea rdx, [rax + 2]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4001426	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x400142a	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x400142e	          0x488b00	                    mov rax, qword [rax]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4001431	          0x4839c2	                            cmp rdx, rax	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4001434	            0x761a	                           jbe 0x4001450	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4001436	    0x488b05000000	            mov rax, qword [0x0400143d] 	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x400143d	        0x488d5002	                      lea rdx, [rax + 2]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4001441	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4001445	          0x4889d6	                            mov rsi, rdx	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4001448	          0x4889c7	                            mov rdi, rax	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x400144b	      0xe8f0ebffff	                     call sym.fetch_data	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4001450	    0x8b0500000000	            mov eax, dword [0x04001456] 	     12988	i386-dis.c	FOR_1	FUNCTION_8
0x4001456	    0x890500000000	            mov dword [0x0400145c], eax 	     12988	i386-dis.c	FOR_1	FUNCTION_8
0x400145c	    0x488b05000000	            mov rax, qword [0x04001463] 	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4001463	           0xfb600	                   movzx eax, byte [rax]	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4001466	            0x84c0	                             test al, al	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4001468	            0x7907	                           jns 0x4001471	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400146a	      0xb800000000	                              mov eax, 0	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400146f	            0xeb05	                           jmp 0x4001476	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4001471	      0xb804000000	                              mov eax, 4	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4001476	    0x890500000000	            mov dword [0x0400147c], eax 	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400147c	    0x488b05000000	            mov rax, qword [0x04001483] 	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x4001483	           0xfb600	                   movzx eax, byte [rax]	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x4001486	          0xc0e803	                               shr al, 3	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x4001489	           0xfb6c0	                           movzx eax, al	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x400148c	            0xf7d0	                                 not eax	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x400148e	          0x83e00f	                            and eax, 0xf	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x4001491	    0x890500000000	            mov dword [0x04001497], eax 	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x4001497	    0x488b05000000	            mov rax, qword [0x0400149e] 	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400149e	           0xfb600	                   movzx eax, byte [rax]	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x40014a1	           0xfb6c0	                           movzx eax, al	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x40014a4	          0x83e004	                              and eax, 4	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x40014a7	            0x85c0	                           test eax, eax	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x40014a9	            0x7407	                            je 0x40014b2	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x40014ab	      0xb800010000	                          mov eax, 0x100	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x40014b0	            0xeb05	                           jmp 0x40014b7	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x40014b2	      0xb880000000	                           mov eax, 0x80	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x40014b7	    0x890500000000	            mov dword [0x040014bd], eax 	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x40014bd	    0x488b05000000	            mov rax, qword [0x040014c4] 	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014c4	           0xfb600	                   movzx eax, byte [rax]	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014c7	           0xfb6c0	                           movzx eax, al	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014ca	          0x83e003	                              and eax, 3	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014cd	          0x83f801	                              cmp eax, 1	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014d0	            0x7415	                            je 0x40014e7	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014d2	          0x83f801	                              cmp eax, 1	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014d5	            0x7f04	                            jg 0x40014db	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014d7	            0x85c0	                           test eax, eax	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014d9	            0xeb2f	                           jmp 0x400150a	     12998	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014db	          0x83f802	                              cmp eax, 2	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014de	            0x7413	                            je 0x40014f3	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014e0	          0x83f803	                              cmp eax, 3	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014e3	            0x741a	                            je 0x40014ff	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014e5	            0xeb23	                           jmp 0x400150a	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014e7	    0xc70500000000	           mov dword [0x040014f1], 0x66 	     13000	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014f1	            0xeb17	                           jmp 0x400150a	     13001	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014f3	    0xc70500000000	           mov dword [0x040014fd], 0xf3 	     13003	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014fd	            0xeb0b	                           jmp 0x400150a	     13004	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x40014ff	    0xc70500000000	           mov dword [0x04001509], 0xf2 	     13006	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4001509	              0x90	                                     nop	     13007	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400150a	    0xc60500000000	                mov byte [0x04001511], 1	     13009	i386-dis.c	FOR_1	FUNCTION_8
0x4001511	    0xc60500000000	                mov byte [0x04001518], 1	     13010	i386-dis.c	FOR_1	FUNCTION_8
0x4001518	    0x488b05000000	            mov rax, qword [0x0400151f] 	     13011	i386-dis.c	FOR_1	FUNCTION_8
0x400151f	        0x4883c001	                              add rax, 1	     13011	i386-dis.c	FOR_1	FUNCTION_8
0x4001523	    0x488905000000	            mov qword [0x0400152a], rax 	     13011	i386-dis.c	FOR_1	FUNCTION_8
0x400152a	    0x488b05000000	            mov rax, qword [0x04001531] 	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x4001531	        0x488d5001	                      lea rdx, [rax + 1]	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x4001535	    0x488915000000	            mov qword [0x0400153c], rdx 	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x400153c	           0xfb600	                   movzx eax, byte [rax]	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x400153f	           0xfb6c0	                           movzx eax, al	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x4001542	          0x8945f0	             mov dword [rbp - 0x10], eax	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x4001545	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4001549	          0x8b4820	            mov ecx, dword [rax + 0x20] 	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400154c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400154f	            0x4898	                                    cdqe	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4001551	          0x4889c2	                            mov rdx, rax	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4001554	          0x4801d2	                            add rdx, rdx	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4001557	          0x4801c2	                            add rdx, rax	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400155a	          0x4889d0	                            mov rax, rdx	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400155d	        0x48c1e005	                              shl rax, 5	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4001561	          0x4889c2	                            mov rdx, rax	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4001564	          0x4863c9	                         movsxd rcx, ecx	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4001567	          0x4889c8	                            mov rax, rcx	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400156a	          0x4801c0	                            add rax, rax	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400156d	          0x4801c8	                            add rax, rcx	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4001570	        0x48c1e00d	                            shl rax, 0xd	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4001574	          0x4801d0	                            add rax, rdx	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4001577	    0x480500000000	                              add rax, 0	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400157d	        0x488945e8	             mov qword [rbp - 0x18], rax	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4001581	    0x488b05000000	            mov rax, qword [0x04001588] 	     13014	i386-dis.c	FOR_1	FUNCTION_8
0x4001588	    0x488905000000	            mov qword [0x0400158f], rax 	     13014	i386-dis.c	FOR_1	FUNCTION_8
0x400158f	        0x837df077	           cmp dword [rbp - 0x10], 0x77 	     13016	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4001593	     0xf84a8040000	                            je 0x4001a41	     13016	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4001599	    0x488b05000000	            mov rax, qword [0x040015a0] 	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015a0	        0x488d5001	                      lea rdx, [rax + 1]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015a4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015a8	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015ac	          0x488b00	                    mov rax, qword [rax]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015af	          0x4839c2	                            cmp rdx, rax	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015b2	            0x761a	                           jbe 0x40015ce	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015b4	    0x488b05000000	            mov rax, qword [0x040015bb] 	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015bb	        0x488d5001	                      lea rdx, [rax + 1]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015bf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015c3	          0x4889d6	                            mov rsi, rdx	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015c6	          0x4889c7	                            mov rdi, rax	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015c9	      0xe872eaffff	                     call sym.fetch_data	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015ce	    0x488b05000000	            mov rax, qword [0x040015d5] 	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015d5	           0xfb600	                   movzx eax, byte [rax]	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015d8	          0xc0e806	                               shr al, 6	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015db	           0xfb6c0	                           movzx eax, al	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015de	          0x83e003	                              and eax, 3	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015e1	    0x890500000000	            mov dword [0x040015e7], eax 	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015e7	    0x488b05000000	            mov rax, qword [0x040015ee] 	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015ee	           0xfb600	                   movzx eax, byte [rax]	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015f1	          0xc0e803	                               shr al, 3	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015f4	           0xfb6c0	                           movzx eax, al	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015f7	          0x83e007	                              and eax, 7	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40015fa	    0x890500000000	            mov dword [0x04001600], eax 	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4001600	    0x488b05000000	            mov rax, qword [0x04001607] 	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4001607	           0xfb600	                   movzx eax, byte [rax]	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400160a	           0xfb6c0	                           movzx eax, al	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400160d	          0x83e007	                              and eax, 7	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4001610	    0x890500000000	            mov dword [0x04001616], eax 	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4001616	      0xe926040000	                           jmp 0x4001a41	     13023	i386-dis.c	FOR_1	FUNCTION_8
0x400161b	     0xfb605000000	           movzx eax, byte [0x04001622] 	     13026	i386-dis.c	FOR_1	FUNCTION_8	IF_15
0x4001622	            0x84c0	                             test al, al	     13026	i386-dis.c	FOR_1	FUNCTION_8	IF_15
0x4001624	            0x7505	                           jne 0x400162b	     13026	i386-dis.c	FOR_1	FUNCTION_8	IF_15
0x4001626	      0xe800000000	                          call 0x400162b	     13027	i386-dis.c	FOR_1	FUNCTION_8	CALL_4
0x400162b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400162f	          0x8b4820	            mov ecx, dword [rax + 0x20] 	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001632	    0x8b0500000000	            mov eax, dword [0x04001638] 	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001638	            0x85c0	                           test eax, eax	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400163a	           0xf95c0	                                setne al	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400163d	           0xfb6c0	                           movzx eax, al	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001640	            0x4898	                                    cdqe	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001642	          0x4889c2	                            mov rdx, rax	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001645	          0x4801d2	                            add rdx, rdx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001648	          0x4801c2	                            add rdx, rax	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400164b	          0x4889d0	                            mov rax, rdx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400164e	        0x48c1e005	                              shl rax, 5	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001652	          0x4889c2	                            mov rdx, rax	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001655	          0x4863c9	                         movsxd rcx, ecx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001658	          0x4889c8	                            mov rax, rcx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400165b	          0x4801c0	                            add rax, rax	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400165e	          0x4801c8	                            add rax, rcx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001661	        0x48c1e006	                              shl rax, 6	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001665	          0x4801d0	                            add rax, rdx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001668	    0x480500000000	                              add rax, 0	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400166e	        0x488945e8	             mov qword [rbp - 0x18], rax	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4001672	      0xe9cb030000	                           jmp 0x4001a42	     13030	i386-dis.c	FOR_1	FUNCTION_8
0x4001677	    0xc70500000000	               mov dword [0x04001681], 0	     13033	i386-dis.c	FOR_1	FUNCTION_8
0x4001681	    0xc70500000000	               mov dword [0x0400168b], 1	     13035	i386-dis.c	FOR_1	FUNCTION_8
0x400168b	    0x488b05000000	            mov rax, qword [0x04001692] 	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4001692	        0x488d5004	                      lea rdx, [rax + 4]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4001696	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400169a	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400169e	          0x488b00	                    mov rax, qword [rax]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x40016a1	          0x4839c2	                            cmp rdx, rax	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x40016a4	            0x761a	                           jbe 0x40016c0	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x40016a6	    0x488b05000000	            mov rax, qword [0x040016ad] 	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x40016ad	        0x488d5004	                      lea rdx, [rax + 4]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x40016b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x40016b5	          0x4889d6	                            mov rsi, rdx	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x40016b8	          0x4889c7	                            mov rdi, rax	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x40016bb	      0xe880e9ffff	                     call sym.fetch_data	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x40016c0	    0x8b0500000000	            mov eax, dword [0x040016c6] 	     13038	i386-dis.c	FOR_1	FUNCTION_8
0x40016c6	    0x890500000000	            mov dword [0x040016cc], eax 	     13038	i386-dis.c	FOR_1	FUNCTION_8
0x40016cc	    0x488b05000000	            mov rax, qword [0x040016d3] 	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x40016d3	           0xfb600	                   movzx eax, byte [rax]	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x40016d6	          0xc0e805	                               shr al, 5	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x40016d9	           0xfb6c0	                           movzx eax, al	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x40016dc	            0xf7d0	                                 not eax	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x40016de	          0x83e007	                              and eax, 7	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x40016e1	    0x890500000000	            mov dword [0x040016e7], eax 	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x40016e7	    0x488b05000000	            mov rax, qword [0x040016ee] 	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x40016ee	           0xfb600	                   movzx eax, byte [rax]	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x40016f1	           0xfb6c0	                           movzx eax, al	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x40016f4	          0x83e010	                           and eax, 0x10	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x40016f7	    0x890500000000	            mov dword [0x040016fd], eax 	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x40016fd	    0x488b05000000	            mov rax, qword [0x04001704] 	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4001704	           0xfb600	                   movzx eax, byte [rax]	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4001707	           0xfb6c0	                           movzx eax, al	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400170a	          0x83e00f	                            and eax, 0xf	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400170d	          0x83f802	                              cmp eax, 2	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4001710	            0x741d	                            je 0x400172f	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4001712	          0x83f803	                              cmp eax, 3	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4001715	            0x7421	                            je 0x4001738	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4001717	          0x83f801	                              cmp eax, 1	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400171a	            0x740a	                            je 0x4001726	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400171c	      0xb800000000	                              mov eax, 0	     13045	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4001721	      0xe941030000	                           jmp 0x4001a67	     13045	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4001726	    0xc745f4000000	                mov dword [rbp - 0xc], 0	     13047	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400172d	            0xeb11	                           jmp 0x4001740	     13048	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400172f	    0xc745f4010000	                mov dword [rbp - 0xc], 1	     13050	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4001736	            0xeb08	                           jmp 0x4001740	     13051	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4001738	    0xc745f4020000	                mov dword [rbp - 0xc], 2	     13053	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400173f	              0x90	                                     nop	     13054	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4001740	    0x488b05000000	            mov rax, qword [0x04001747] 	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x4001747	        0x4883c001	                              add rax, 1	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x400174b	    0x488905000000	            mov qword [0x04001752], rax 	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x4001752	    0x488b05000000	            mov rax, qword [0x04001759] 	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x4001759	           0xfb600	                   movzx eax, byte [rax]	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x400175c	           0xfb6c0	                           movzx eax, al	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x400175f	      0x2580000000	                           and eax, 0x80	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x4001764	    0x890500000000	            mov dword [0x0400176a], eax 	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x400176a	    0x8b0500000000	            mov eax, dword [0x04001770] 	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x4001770	            0x85c0	                           test eax, eax	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x4001772	            0x741a	                            je 0x400178e	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x4001774	    0x8b0500000000	            mov eax, dword [0x0400177a] 	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400177a	          0x83f802	                              cmp eax, 2	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400177d	            0x750f	                           jne 0x400178e	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400177f	    0x8b0500000000	            mov eax, dword [0x04001785] 	     13061	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x4001785	          0x83c808	                               or eax, 8	     13061	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x4001788	    0x890500000000	            mov dword [0x0400178e], eax 	     13061	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400178e	    0x488b05000000	            mov rax, qword [0x04001795] 	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x4001795	           0xfb600	                   movzx eax, byte [rax]	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x4001798	          0xc0e803	                               shr al, 3	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400179b	           0xfb6c0	                           movzx eax, al	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400179e	            0xf7d0	                                 not eax	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x40017a0	          0x83e00f	                            and eax, 0xf	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x40017a3	    0x890500000000	            mov dword [0x040017a9], eax 	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x40017a9	    0x488b05000000	            mov rax, qword [0x040017b0] 	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x40017b0	           0xfb600	                   movzx eax, byte [rax]	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x40017b3	           0xfb6c0	                           movzx eax, al	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x40017b6	          0x83e004	                              and eax, 4	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x40017b9	            0x85c0	                           test eax, eax	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x40017bb	            0x750a	                           jne 0x40017c7	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x40017bd	      0xb800000000	                              mov eax, 0	     13067	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x40017c2	      0xe9a0020000	                           jmp 0x4001a67	     13067	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x40017c7	    0x488b05000000	            mov rax, qword [0x040017ce] 	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017ce	           0xfb600	                   movzx eax, byte [rax]	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017d1	           0xfb6c0	                           movzx eax, al	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017d4	          0x83e003	                              and eax, 3	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017d7	          0x83f801	                              cmp eax, 1	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017da	            0x7415	                            je 0x40017f1	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017dc	          0x83f801	                              cmp eax, 1	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017df	            0x7f04	                            jg 0x40017e5	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017e1	            0x85c0	                           test eax, eax	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017e3	            0xeb2f	                           jmp 0x4001814	     13072	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017e5	          0x83f802	                              cmp eax, 2	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017e8	            0x7413	                            je 0x40017fd	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017ea	          0x83f803	                              cmp eax, 3	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017ed	            0x741a	                            je 0x4001809	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017ef	            0xeb23	                           jmp 0x4001814	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017f1	    0xc70500000000	           mov dword [0x040017fb], 0x66 	     13074	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017fb	            0xeb17	                           jmp 0x4001814	     13075	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40017fd	    0xc70500000000	           mov dword [0x04001807], 0xf3 	     13077	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4001807	            0xeb0b	                           jmp 0x4001814	     13078	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4001809	    0xc70500000000	           mov dword [0x04001813], 0xf2 	     13080	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4001813	              0x90	                                     nop	     13081	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4001814	    0x488b05000000	            mov rax, qword [0x0400181b] 	     13085	i386-dis.c	FOR_1	FUNCTION_8
0x400181b	        0x4883c001	                              add rax, 1	     13085	i386-dis.c	FOR_1	FUNCTION_8
0x400181f	    0x488905000000	            mov qword [0x04001826], rax 	     13085	i386-dis.c	FOR_1	FUNCTION_8
0x4001826	    0x488b05000000	            mov rax, qword [0x0400182d] 	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x400182d	           0xfb600	                   movzx eax, byte [rax]	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x4001830	          0xc0e805	                               shr al, 5	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x4001833	           0xfb6c0	                           movzx eax, al	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x4001836	          0x83e003	                              and eax, 3	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x4001839	    0x890500000000	            mov dword [0x0400183f], eax 	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x400183f	    0x488b05000000	            mov rax, qword [0x04001846] 	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x4001846	           0xfb600	                   movzx eax, byte [rax]	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x4001849	           0xfb6c0	                           movzx eax, al	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x400184c	          0x83e010	                           and eax, 0x10	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x400184f	            0x85c0	                           test eax, eax	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x4001851	           0xf95c0	                                setne al	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x4001854	           0xfb6c0	                           movzx eax, al	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x4001857	    0x890500000000	            mov dword [0x0400185d], eax 	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x400185d	    0x488b05000000	            mov rax, qword [0x04001864] 	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x4001864	           0xfb600	                   movzx eax, byte [rax]	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x4001867	           0xfb6c0	                           movzx eax, al	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x400186a	          0x83e008	                              and eax, 8	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x400186d	    0x890500000000	            mov dword [0x04001873], eax 	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x4001873	    0x488b05000000	            mov rax, qword [0x0400187a] 	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x400187a	           0xfb600	                   movzx eax, byte [rax]	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x400187d	           0xfb6c0	                           movzx eax, al	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x4001880	          0x83e007	                              and eax, 7	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x4001883	    0x890500000000	            mov dword [0x04001889], eax 	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x4001889	    0x488b05000000	            mov rax, qword [0x04001890] 	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x4001890	           0xfb600	                   movzx eax, byte [rax]	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x4001893	           0xfb6c0	                           movzx eax, al	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x4001896	      0x2580000000	                           and eax, 0x80	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x400189b	    0x890500000000	            mov dword [0x040018a1], eax 	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x40018a1	    0x8b0500000000	            mov eax, dword [0x040018a7] 	     13095	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40018a7	          0x83f802	                              cmp eax, 2	     13095	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40018aa	            0x7423	                            je 0x40018cf	     13095	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40018ac	    0x8b0500000000	            mov eax, dword [0x040018b2] 	     13098	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40018b2	          0x83e0fe	                     and eax, 0xfffffffe	     13098	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40018b5	    0x890500000000	            mov dword [0x040018bb], eax 	     13098	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40018bb	    0xc70500000000	               mov dword [0x040018c5], 1	     13099	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40018c5	    0xc70500000000	               mov dword [0x040018cf], 1	     13100	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40018cf	    0xc60500000000	                mov byte [0x040018d6], 1	     13103	i386-dis.c	FOR_1	FUNCTION_8
0x40018d6	    0xc60500000000	                mov byte [0x040018dd], 1	     13104	i386-dis.c	FOR_1	FUNCTION_8
0x40018dd	    0x488b05000000	            mov rax, qword [0x040018e4] 	     13105	i386-dis.c	FOR_1	FUNCTION_8
0x40018e4	        0x4883c001	                              add rax, 1	     13105	i386-dis.c	FOR_1	FUNCTION_8
0x40018e8	    0x488905000000	            mov qword [0x040018ef], rax 	     13105	i386-dis.c	FOR_1	FUNCTION_8
0x40018ef	    0x488b05000000	            mov rax, qword [0x040018f6] 	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x40018f6	        0x488d5001	                      lea rdx, [rax + 1]	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x40018fa	    0x488915000000	            mov qword [0x04001901], rdx 	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x4001901	           0xfb600	                   movzx eax, byte [rax]	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x4001904	           0xfb6c0	                           movzx eax, al	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x4001907	          0x8945f0	             mov dword [rbp - 0x10], eax	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x400190a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400190d	            0x4898	                                    cdqe	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400190f	          0x4889c2	                            mov rdx, rax	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4001912	          0x4801d2	                            add rdx, rdx	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4001915	          0x4801c2	                            add rdx, rax	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4001918	          0x4889d0	                            mov rax, rdx	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400191b	        0x48c1e005	                              shl rax, 5	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400191f	          0x4889c2	                            mov rdx, rax	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4001922	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4001925	          0x4863c8	                         movsxd rcx, eax	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4001928	          0x4889c8	                            mov rax, rcx	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400192b	          0x4801c0	                            add rax, rax	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400192e	          0x4801c8	                            add rax, rcx	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4001931	        0x48c1e00d	                            shl rax, 0xd	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4001935	          0x4801d0	                            add rax, rdx	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4001938	    0x480500000000	                              add rax, 0	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400193e	        0x488945e8	             mov qword [rbp - 0x18], rax	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4001942	    0x488b05000000	            mov rax, qword [0x04001949] 	     13108	i386-dis.c	FOR_1	FUNCTION_8
0x4001949	    0x488905000000	            mov qword [0x04001950], rax 	     13108	i386-dis.c	FOR_1	FUNCTION_8
0x4001950	    0x488b05000000	            mov rax, qword [0x04001957] 	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4001957	        0x488d5001	                      lea rdx, [rax + 1]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x400195b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x400195f	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4001963	          0x488b00	                    mov rax, qword [rax]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4001966	          0x4839c2	                            cmp rdx, rax	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4001969	            0x761a	                           jbe 0x4001985	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x400196b	    0x488b05000000	            mov rax, qword [0x04001972] 	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4001972	        0x488d5001	                      lea rdx, [rax + 1]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4001976	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x400197a	          0x4889d6	                            mov rsi, rdx	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x400197d	          0x4889c7	                            mov rdi, rax	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4001980	      0xe8bbe6ffff	                     call sym.fetch_data	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4001985	    0x488b05000000	            mov rax, qword [0x0400198c] 	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x400198c	           0xfb600	                   movzx eax, byte [rax]	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x400198f	          0xc0e806	                               shr al, 6	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x4001992	           0xfb6c0	                           movzx eax, al	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x4001995	          0x83e003	                              and eax, 3	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x4001998	    0x890500000000	            mov dword [0x0400199e], eax 	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x400199e	    0x488b05000000	            mov rax, qword [0x040019a5] 	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x40019a5	           0xfb600	                   movzx eax, byte [rax]	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x40019a8	          0xc0e803	                               shr al, 3	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x40019ab	           0xfb6c0	                           movzx eax, al	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x40019ae	          0x83e007	                              and eax, 7	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x40019b1	    0x890500000000	            mov dword [0x040019b7], eax 	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x40019b7	    0x488b05000000	            mov rax, qword [0x040019be] 	     13112	i386-dis.c	FOR_1	FUNCTION_8
0x40019be	           0xfb600	                   movzx eax, byte [rax]	     13112	i386-dis.c	FOR_1	FUNCTION_8
0x40019c1	           0xfb6c0	                           movzx eax, al	     13112	i386-dis.c	FOR_1	FUNCTION_8
0x40019c4	          0x83e007	                              and eax, 7	     13112	i386-dis.c	FOR_1	FUNCTION_8
0x40019c7	    0x890500000000	            mov dword [0x040019cd], eax 	     13112	i386-dis.c	FOR_1	FUNCTION_8
0x40019cd	    0x8b0500000000	            mov eax, dword [0x040019d3] 	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x40019d3	          0x83f803	                              cmp eax, 3	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x40019d6	            0x7516	                           jne 0x40019ee	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x40019d8	    0x8b0500000000	            mov eax, dword [0x040019de] 	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x40019de	            0x85c0	                           test eax, eax	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x40019e0	            0x740c	                            je 0x40019ee	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x40019e2	    0xc70500000000	          mov dword [0x040019ec], 0x200 	     13116	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x40019ec	            0xeb3f	                           jmp 0x4001a2d	     13116	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x40019ee	    0x8b0500000000	            mov eax, dword [0x040019f4] 	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40019f4	          0x83f801	                              cmp eax, 1	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40019f7	            0x7415	                            je 0x4001a0e	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40019f9	          0x83f802	                              cmp eax, 2	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40019fc	            0x741c	                            je 0x4001a1a	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40019fe	            0x85c0	                           test eax, eax	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4001a00	            0x7524	                           jne 0x4001a26	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4001a02	    0xc70500000000	           mov dword [0x04001a0c], 0x80 	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4001a0c	            0xeb1f	                           jmp 0x4001a2d	     13123	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4001a0e	    0xc70500000000	          mov dword [0x04001a18], 0x100 	     13125	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4001a18	            0xeb13	                           jmp 0x4001a2d	     13126	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4001a1a	    0xc70500000000	          mov dword [0x04001a24], 0x200 	     13128	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4001a24	            0xeb07	                           jmp 0x4001a2d	     13129	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4001a26	      0xb800000000	                              mov eax, 0	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4001a2b	            0xeb3a	                           jmp 0x4001a67	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4001a2d	            0xeb13	                           jmp 0x4001a42	     13134	i386-dis.c	FOR_1	FUNCTION_8
0x4001a2f	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     13137	i386-dis.c	FOR_1	FUNCTION_8
0x4001a37	            0xeb09	                           jmp 0x4001a42	     13138	i386-dis.c	FOR_1	FUNCTION_8
0x4001a39	      0xe800000000	                          call 0x4001a3e	     13141	i386-dis.c	FOR_1	FUNCTION_8	CALL_5
0x4001a3e	              0x90	                                     nop	     12982	i386-dis.c	FOR_1	FUNCTION_8
0x4001a3f	            0xeb01	                           jmp 0x4001a42	     12982	i386-dis.c	FOR_1	FUNCTION_8
0x4001a41	              0x90	                                     nop	     13023	i386-dis.c	FOR_1	FUNCTION_8
0x4001a42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4001a46	          0x488b00	                    mov rax, qword [rax]	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4001a49	          0x4885c0	                           test rax, rax	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4001a4c	            0x7406	                            je 0x4001a54	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4001a4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     13145	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4001a52	            0xeb13	                           jmp 0x4001a67	     13145	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4001a54	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     13147	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	CALL_6
0x4001a58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     13147	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	CALL_6
0x4001a5c	          0x4889d6	                            mov rsi, rdx	     13147	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	CALL_6
0x4001a5f	          0x4889c7	                            mov rdi, rax	     13147	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	CALL_6
0x4001a62	      0xe8eeefffff	               call sym.get_valid_dis386	     13147	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	CALL_6
0x4001a67	              0xc9	                                   leave	     13148	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1
0x4001a68	              0xc3	                                     ret	     13148	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1
VCMP_Fixup	CALL,4:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,0:FOR,0	75
0x4009fa0	              0x55	                                push rbp	     17647	i386-dis.c	FUNCTION_92
0x4009fa1	          0x4889e5	                            mov rbp, rsp	     17647	i386-dis.c	FUNCTION_92
0x4009fa4	        0x4883ec30	                           sub rsp, 0x30	     17647	i386-dis.c	FUNCTION_92
0x4009fa8	          0x897ddc	             mov dword [rbp - 0x24], edi	     17647	i386-dis.c	FUNCTION_92
0x4009fab	          0x8975d8	             mov dword [rbp - 0x28], esi	     17647	i386-dis.c	FUNCTION_92
0x4009fae	    0x64488b042528	                mov rax, qword fs:[0x28]	     17647	i386-dis.c	FUNCTION_92
0x4009fb7	        0x488945f8	                mov qword [rbp - 8], rax	     17647	i386-dis.c	FUNCTION_92
0x4009fbb	            0x31c0	                            xor eax, eax	     17647	i386-dis.c	FUNCTION_92
0x4009fbd	    0x488b05000000	            mov rax, qword [0x04009fc4] 	     17650	i386-dis.c	FUNCTION_92
0x4009fc4	        0x488d5001	                      lea rdx, [rax + 1]	     17650	i386-dis.c	FUNCTION_92
0x4009fc8	    0x488b05000000	            mov rax, qword [0x04009fcf] 	     17650	i386-dis.c	FUNCTION_92
0x4009fcf	        0x488b4068	            mov rax, qword [rax + 0x68] 	     17650	i386-dis.c	FUNCTION_92
0x4009fd3	          0x488b00	                    mov rax, qword [rax]	     17650	i386-dis.c	FUNCTION_92
0x4009fd6	          0x4839c2	                            cmp rdx, rax	     17650	i386-dis.c	FUNCTION_92
0x4009fd9	            0x761d	                           jbe 0x4009ff8	     17650	i386-dis.c	FUNCTION_92
0x4009fdb	    0x488b05000000	            mov rax, qword [0x04009fe2] 	     17650	i386-dis.c	FUNCTION_92
0x4009fe2	        0x488d5001	                      lea rdx, [rax + 1]	     17650	i386-dis.c	FUNCTION_92
0x4009fe6	    0x488b05000000	            mov rax, qword [0x04009fed] 	     17650	i386-dis.c	FUNCTION_92
0x4009fed	          0x4889d6	                            mov rsi, rdx	     17650	i386-dis.c	FUNCTION_92
0x4009ff0	          0x4889c7	                            mov rdi, rax	     17650	i386-dis.c	FUNCTION_92
0x4009ff3	      0xe84860ffff	                     call sym.fetch_data	     17650	i386-dis.c	FUNCTION_92
0x4009ff8	    0x488b05000000	            mov rax, qword [0x04009fff] 	     17651	i386-dis.c	FUNCTION_92
0x4009fff	        0x488d5001	                      lea rdx, [rax + 1]	     17651	i386-dis.c	FUNCTION_92
0x400a003	    0x488915000000	            mov qword [0x0400a00a], rdx 	     17651	i386-dis.c	FUNCTION_92
0x400a00a	           0xfb600	                   movzx eax, byte [rax]	     17651	i386-dis.c	FUNCTION_92
0x400a00d	           0xfb6c0	                           movzx eax, al	     17651	i386-dis.c	FUNCTION_92
0x400a010	          0x8945e4	             mov dword [rbp - 0x1c], eax	     17651	i386-dis.c	FUNCTION_92
0x400a013	        0x837de41f	           cmp dword [rbp - 0x1c], 0x1f 	     17652	i386-dis.c	FUNCTION_92	IF_1	CALL_1
0x400a017	            0x7777	                            ja 0x400a090	     17652	i386-dis.c	FUNCTION_92	IF_1	CALL_1
0x400a019	    0x488b05000000	            mov rax, qword [0x0400a020] 	     17655	i386-dis.c	FUNCTION_92	IF_1
0x400a020	        0x4883e802	                              sub rax, 2	     17655	i386-dis.c	FUNCTION_92	IF_1
0x400a024	        0x488945e8	             mov qword [rbp - 0x18], rax	     17655	i386-dis.c	FUNCTION_92	IF_1
0x400a028	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17656	i386-dis.c	FUNCTION_92	IF_1
0x400a02c	           0xfb600	                   movzx eax, byte [rax]	     17656	i386-dis.c	FUNCTION_92	IF_1
0x400a02f	          0x8845f0	               mov byte [rbp - 0x10], al	     17656	i386-dis.c	FUNCTION_92	IF_1
0x400a032	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17657	i386-dis.c	FUNCTION_92	IF_1
0x400a036	         0xfb64001	               movzx eax, byte [rax + 1]	     17657	i386-dis.c	FUNCTION_92	IF_1
0x400a03a	          0x8845f1	                mov byte [rbp - 0xf], al	     17657	i386-dis.c	FUNCTION_92	IF_1
0x400a03d	        0xc645f200	                 mov byte [rbp - 0xe], 0	     17658	i386-dis.c	FUNCTION_92	IF_1
0x400a041	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     17659	i386-dis.c	FUNCTION_92	IF_1	CALL_2
0x400a044	        0x48c1e004	                              shl rax, 4	     17659	i386-dis.c	FUNCTION_92	IF_1	CALL_2
0x400a048	    0x480500000000	                              add rax, 0	     17659	i386-dis.c	FUNCTION_92	IF_1	CALL_2
0x400a04e	          0x488b10	                    mov rdx, qword [rax]	     17659	i386-dis.c	FUNCTION_92	IF_1	CALL_2
0x400a051	        0x488d4df0	                   lea rcx, [rbp - 0x10]	     17659	i386-dis.c	FUNCTION_92	IF_1	CALL_2
0x400a055	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17659	i386-dis.c	FUNCTION_92	IF_1	CALL_2
0x400a059	      0xbe00000000	                              mov esi, 0	     17659	i386-dis.c	FUNCTION_92	IF_1	CALL_2
0x400a05e	          0x4889c7	                            mov rdi, rax	     17659	i386-dis.c	FUNCTION_92	IF_1	CALL_2
0x400a061	      0xb800000000	                              mov eax, 0	     17659	i386-dis.c	FUNCTION_92	IF_1	CALL_2
0x400a066	      0xe800000000	                          call 0x400a06b	     17659	i386-dis.c	FUNCTION_92	IF_1	CALL_2
0x400a06b	    0x488b05000000	            mov rax, qword [0x0400a072] 	     17660	i386-dis.c	FUNCTION_92	IF_1
0x400a072	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	     17660	i386-dis.c	FUNCTION_92	IF_1
0x400a075	        0x48c1e204	                              shl rdx, 4	     17660	i386-dis.c	FUNCTION_92	IF_1
0x400a079	    0x4881c2000000	                              add rdx, 0	     17660	i386-dis.c	FUNCTION_92	IF_1
0x400a080	            0x8b12	                    mov edx, dword [rdx]	     17660	i386-dis.c	FUNCTION_92	IF_1
0x400a082	            0x89d2	                            mov edx, edx	     17660	i386-dis.c	FUNCTION_92	IF_1
0x400a084	          0x4801d0	                            add rax, rdx	     17660	i386-dis.c	FUNCTION_92	IF_1
0x400a087	    0x488905000000	            mov qword [0x0400a08e], rax 	     17660	i386-dis.c	FUNCTION_92	IF_1
0x400a08e	            0xeb30	                           jmp 0x400a0c0	     17670	i386-dis.c	FUNCTION_92
0x400a090	    0xc60500000000	            mov byte [0x0400a097], 0x24 	     17665	i386-dis.c	FUNCTION_92	ELSE_1
0x400a097	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_3
0x400a09a	      0xb900000000	                              mov ecx, 0	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_3
0x400a09f	          0x4889c2	                            mov rdx, rax	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_3
0x400a0a2	      0xbe01000000	                              mov esi, 1	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_3
0x400a0a7	          0x4889cf	                            mov rdi, rcx	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_3
0x400a0aa	      0xe81dabffff	            call sym.print_operand_value	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_3
0x400a0af	      0xbf00000000	                              mov edi, 0	     17667	i386-dis.c	FUNCTION_92	ELSE_1	CALL_4
0x400a0b4	      0xe80492ffff	            call sym.oappend_maybe_intel	     17667	i386-dis.c	FUNCTION_92	ELSE_1	CALL_4
0x400a0b9	    0xc60500000000	                mov byte [0x0400a0c0], 0	     17668	i386-dis.c	FUNCTION_92	ELSE_1
0x400a0c0	              0x90	                                     nop	     17670	i386-dis.c	FUNCTION_92
0x400a0c1	        0x488b45f8	                mov rax, qword [rbp - 8]	     17670	i386-dis.c	FUNCTION_92
0x400a0c5	    0x644833042528	                xor rax, qword fs:[0x28]	     17670	i386-dis.c	FUNCTION_92
0x400a0ce	            0x7405	                            je 0x400a0d5	     17670	i386-dis.c	FUNCTION_92
0x400a0d0	      0xe800000000	                          call 0x400a0d5	     17670	i386-dis.c	FUNCTION_92
0x400a0d5	              0xc9	                                   leave	     17670	i386-dis.c	FUNCTION_92
0x400a0d6	              0xc3	                                     ret	     17670	i386-dis.c	FUNCTION_92
NOP_Fixup2	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0	26
0x40089dc	              0x55	                                push rbp	     16704	i386-dis.c	FUNCTION_61
0x40089dd	          0x4889e5	                            mov rbp, rsp	     16704	i386-dis.c	FUNCTION_61
0x40089e0	        0x4883ec10	                           sub rsp, 0x10	     16704	i386-dis.c	FUNCTION_61
0x40089e4	          0x897dfc	                mov dword [rbp - 4], edi	     16704	i386-dis.c	FUNCTION_61
0x40089e7	          0x8975f8	                mov dword [rbp - 8], esi	     16704	i386-dis.c	FUNCTION_61
0x40089ea	    0x8b0500000000	            mov eax, dword [0x040089f0] 	     16705	i386-dis.c	FUNCTION_61	IF_1
0x40089f0	      0x2500020000	                          and eax, 0x200	     16705	i386-dis.c	FUNCTION_61	IF_1
0x40089f5	            0x85c0	                           test eax, eax	     16705	i386-dis.c	FUNCTION_61	IF_1
0x40089f7	            0x7520	                           jne 0x4008a19	     16705	i386-dis.c	FUNCTION_61	IF_1
0x40089f9	    0x8b0500000000	            mov eax, dword [0x040089ff] 	     16706	i386-dis.c	FUNCTION_61	IF_1
0x40089ff	            0x85c0	                           test eax, eax	     16706	i386-dis.c	FUNCTION_61	IF_1
0x4008a01	            0x7425	                            je 0x4008a28	     16706	i386-dis.c	FUNCTION_61	IF_1
0x4008a03	    0x8b0500000000	            mov eax, dword [0x04008a09] 	     16707	i386-dis.c	FUNCTION_61	IF_1
0x4008a09	          0x83f848	                           cmp eax, 0x48	     16707	i386-dis.c	FUNCTION_61	IF_1
0x4008a0c	            0x741a	                            je 0x4008a28	     16707	i386-dis.c	FUNCTION_61	IF_1
0x4008a0e	    0x8b0500000000	            mov eax, dword [0x04008a14] 	     16708	i386-dis.c	FUNCTION_61	IF_1
0x4008a14	          0x83f802	                              cmp eax, 2	     16708	i386-dis.c	FUNCTION_61	IF_1
0x4008a17	            0x750f	                           jne 0x4008a28	     16708	i386-dis.c	FUNCTION_61	IF_1
0x4008a19	          0x8b55f8	                mov edx, dword [rbp - 8]	     16709	i386-dis.c	FUNCTION_61	CALL_1
0x4008a1c	          0x8b45fc	                mov eax, dword [rbp - 4]	     16709	i386-dis.c	FUNCTION_61	CALL_1
0x4008a1f	            0x89d6	                            mov esi, edx	     16709	i386-dis.c	FUNCTION_61	CALL_1
0x4008a21	            0x89c7	                            mov edi, eax	     16709	i386-dis.c	FUNCTION_61	CALL_1
0x4008a23	      0xe88ee7ffff	                       call sym.OP_IMREG	     16709	i386-dis.c	FUNCTION_61	CALL_1
0x4008a28	              0x90	                                     nop	     16710	i386-dis.c	FUNCTION_61
0x4008a29	              0xc9	                                   leave	     16710	i386-dis.c	FUNCTION_61
0x4008a2a	              0xc3	                                     ret	     16710	i386-dis.c	FUNCTION_61
print_i386_disassembler_options	CALL,32:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,1:FOR,1	151
0x40007e6	              0x55	                                push rbp	     12699	i386-dis.c	FUNCTION_7
0x40007e7	          0x4889e5	                            mov rbp, rsp	     12699	i386-dis.c	FUNCTION_7
0x40007ea	        0x4883ec10	                           sub rsp, 0x10	     12699	i386-dis.c	FUNCTION_7
0x40007ee	        0x48897df8	                mov qword [rbp - 8], rdi	     12699	i386-dis.c	FUNCTION_7
0x40007f2	      0xbe00000000	                              mov esi, 0	     12700	i386-dis.c	FUNCTION_7	CALL_2
0x40007f7	      0xbf00000000	                              mov edi, 0	     12700	i386-dis.c	FUNCTION_7	CALL_2
0x40007fc	      0xe800000000	                          call 0x4000801	     12700	i386-dis.c	FUNCTION_7	CALL_2
0x4000801	          0x4889c2	                            mov rdx, rax	     12700	i386-dis.c	FUNCTION_7	CALL_2
0x4000804	        0x488b45f8	                mov rax, qword [rbp - 8]	     12700	i386-dis.c	FUNCTION_7	CALL_2
0x4000808	          0x4889d6	                            mov rsi, rdx	     12700	i386-dis.c	FUNCTION_7	CALL_2
0x400080b	          0x4889c7	                            mov rdi, rax	     12700	i386-dis.c	FUNCTION_7	CALL_2
0x400080e	      0xb800000000	                              mov eax, 0	     12700	i386-dis.c	FUNCTION_7	CALL_2
0x4000813	      0xe800000000	                          call 0x4000818	     12700	i386-dis.c	FUNCTION_7	CALL_2
0x4000818	      0xbe00000000	                              mov esi, 0	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x400081d	      0xbf00000000	                              mov edi, 0	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x4000822	      0xe800000000	                          call 0x4000827	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x4000827	          0x4889c2	                            mov rdx, rax	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x400082a	        0x488b45f8	                mov rax, qword [rbp - 8]	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x400082e	          0x4889d6	                            mov rsi, rdx	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x4000831	          0x4889c7	                            mov rdi, rax	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x4000834	      0xb800000000	                              mov eax, 0	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x4000839	      0xe800000000	                          call 0x400083e	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x400083e	      0xbe00000000	                              mov esi, 0	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4000843	      0xbf00000000	                              mov edi, 0	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4000848	      0xe800000000	                          call 0x400084d	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x400084d	          0x4889c2	                            mov rdx, rax	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4000850	        0x488b45f8	                mov rax, qword [rbp - 8]	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4000854	          0x4889d6	                            mov rsi, rdx	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4000857	          0x4889c7	                            mov rdi, rax	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x400085a	      0xb800000000	                              mov eax, 0	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x400085f	      0xe800000000	                          call 0x4000864	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4000864	      0xbe00000000	                              mov esi, 0	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x4000869	      0xbf00000000	                              mov edi, 0	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x400086e	      0xe800000000	                          call 0x4000873	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x4000873	          0x4889c2	                            mov rdx, rax	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x4000876	        0x488b45f8	                mov rax, qword [rbp - 8]	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x400087a	          0x4889d6	                            mov rsi, rdx	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x400087d	          0x4889c7	                            mov rdi, rax	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x4000880	      0xb800000000	                              mov eax, 0	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x4000885	      0xe800000000	                          call 0x400088a	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x400088a	      0xbe00000000	                              mov esi, 0	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x400088f	      0xbf00000000	                              mov edi, 0	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x4000894	      0xe800000000	                          call 0x4000899	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x4000899	          0x4889c2	                            mov rdx, rax	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x400089c	        0x488b45f8	                mov rax, qword [rbp - 8]	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x40008a0	          0x4889d6	                            mov rsi, rdx	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x40008a3	          0x4889c7	                            mov rdi, rax	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x40008a6	      0xb800000000	                              mov eax, 0	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x40008ab	      0xe800000000	                          call 0x40008b0	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x40008b0	      0xbe00000000	                              mov esi, 0	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x40008b5	      0xbf00000000	                              mov edi, 0	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x40008ba	      0xe800000000	                          call 0x40008bf	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x40008bf	          0x4889c2	                            mov rdx, rax	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x40008c2	        0x488b45f8	                mov rax, qword [rbp - 8]	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x40008c6	          0x4889d6	                            mov rsi, rdx	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x40008c9	          0x4889c7	                            mov rdi, rax	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x40008cc	      0xb800000000	                              mov eax, 0	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x40008d1	      0xe800000000	                          call 0x40008d6	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x40008d6	      0xbe00000000	                              mov esi, 0	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40008db	      0xbf00000000	                              mov edi, 0	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40008e0	      0xe800000000	                          call 0x40008e5	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40008e5	          0x4889c2	                            mov rdx, rax	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40008e8	        0x488b45f8	                mov rax, qword [rbp - 8]	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40008ec	          0x4889d6	                            mov rsi, rdx	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40008ef	          0x4889c7	                            mov rdi, rax	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40008f2	      0xb800000000	                              mov eax, 0	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40008f7	      0xe800000000	                          call 0x40008fc	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40008fc	      0xbe00000000	                              mov esi, 0	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x4000901	      0xbf00000000	                              mov edi, 0	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x4000906	      0xe800000000	                          call 0x400090b	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x400090b	          0x4889c2	                            mov rdx, rax	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x400090e	        0x488b45f8	                mov rax, qword [rbp - 8]	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x4000912	          0x4889d6	                            mov rsi, rdx	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x4000915	          0x4889c7	                            mov rdi, rax	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x4000918	      0xb800000000	                              mov eax, 0	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x400091d	      0xe800000000	                          call 0x4000922	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x4000922	      0xbe00000000	                              mov esi, 0	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_18
0x4000927	      0xbf00000000	                              mov edi, 0	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_18
0x400092c	      0xe800000000	                          call 0x4000931	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_18
0x4000931	          0x4889c2	                            mov rdx, rax	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_18
0x4000934	        0x488b45f8	                mov rax, qword [rbp - 8]	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_18
0x4000938	          0x4889d6	                            mov rsi, rdx	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_18
0x400093b	          0x4889c7	                            mov rdi, rax	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_18
0x400093e	      0xb800000000	                              mov eax, 0	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_18
0x4000943	      0xe800000000	                          call 0x4000948	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_18
0x4000948	      0xbe00000000	                              mov esi, 0	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_20
0x400094d	      0xbf00000000	                              mov edi, 0	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_20
0x4000952	      0xe800000000	                          call 0x4000957	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_20
0x4000957	          0x4889c2	                            mov rdx, rax	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_20
0x400095a	        0x488b45f8	                mov rax, qword [rbp - 8]	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_20
0x400095e	          0x4889d6	                            mov rsi, rdx	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_20
0x4000961	          0x4889c7	                            mov rdi, rax	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_20
0x4000964	      0xb800000000	                              mov eax, 0	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_20
0x4000969	      0xe800000000	                          call 0x400096e	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_20
0x400096e	      0xbe00000000	                              mov esi, 0	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_22
0x4000973	      0xbf00000000	                              mov edi, 0	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_22
0x4000978	      0xe800000000	                          call 0x400097d	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_22
0x400097d	          0x4889c2	                            mov rdx, rax	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_22
0x4000980	        0x488b45f8	                mov rax, qword [rbp - 8]	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_22
0x4000984	          0x4889d6	                            mov rsi, rdx	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_22
0x4000987	          0x4889c7	                            mov rdi, rax	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_22
0x400098a	      0xb800000000	                              mov eax, 0	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_22
0x400098f	      0xe800000000	                          call 0x4000994	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_22
0x4000994	      0xbe00000000	                              mov esi, 0	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_24
0x4000999	      0xbf00000000	                              mov edi, 0	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_24
0x400099e	      0xe800000000	                          call 0x40009a3	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_24
0x40009a3	          0x4889c2	                            mov rdx, rax	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_24
0x40009a6	        0x488b45f8	                mov rax, qword [rbp - 8]	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_24
0x40009aa	          0x4889d6	                            mov rsi, rdx	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_24
0x40009ad	          0x4889c7	                            mov rdi, rax	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_24
0x40009b0	      0xb800000000	                              mov eax, 0	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_24
0x40009b5	      0xe800000000	                          call 0x40009ba	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_24
0x40009ba	      0xbe00000000	                              mov esi, 0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_26
0x40009bf	      0xbf00000000	                              mov edi, 0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_26
0x40009c4	      0xe800000000	                          call 0x40009c9	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_26
0x40009c9	          0x4889c2	                            mov rdx, rax	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_26
0x40009cc	        0x488b45f8	                mov rax, qword [rbp - 8]	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_26
0x40009d0	          0x4889d6	                            mov rsi, rdx	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_26
0x40009d3	          0x4889c7	                            mov rdi, rax	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_26
0x40009d6	      0xb800000000	                              mov eax, 0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_26
0x40009db	      0xe800000000	                          call 0x40009e0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_26
0x40009e0	      0xbe00000000	                              mov esi, 0	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_28
0x40009e5	      0xbf00000000	                              mov edi, 0	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_28
0x40009ea	      0xe800000000	                          call 0x40009ef	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_28
0x40009ef	          0x4889c2	                            mov rdx, rax	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_28
0x40009f2	        0x488b45f8	                mov rax, qword [rbp - 8]	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_28
0x40009f6	          0x4889d6	                            mov rsi, rdx	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_28
0x40009f9	          0x4889c7	                            mov rdi, rax	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_28
0x40009fc	      0xb800000000	                              mov eax, 0	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_28
0x4000a01	      0xe800000000	                          call 0x4000a06	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_28
0x4000a06	      0xbe00000000	                              mov esi, 0	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_30
0x4000a0b	      0xbf00000000	                              mov edi, 0	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_30
0x4000a10	      0xe800000000	                          call 0x4000a15	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_30
0x4000a15	          0x4889c2	                            mov rdx, rax	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_30
0x4000a18	        0x488b45f8	                mov rax, qword [rbp - 8]	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_30
0x4000a1c	          0x4889d6	                            mov rsi, rdx	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_30
0x4000a1f	          0x4889c7	                            mov rdi, rax	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_30
0x4000a22	      0xb800000000	                              mov eax, 0	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_30
0x4000a27	      0xe800000000	                          call 0x4000a2c	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_30
0x4000a2c	      0xbe00000000	                              mov esi, 0	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_32
0x4000a31	      0xbf00000000	                              mov edi, 0	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_32
0x4000a36	      0xe800000000	                          call 0x4000a3b	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_32
0x4000a3b	          0x4889c2	                            mov rdx, rax	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_32
0x4000a3e	        0x488b45f8	                mov rax, qword [rbp - 8]	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_32
0x4000a42	          0x4889d6	                            mov rsi, rdx	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_32
0x4000a45	          0x4889c7	                            mov rdi, rax	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_32
0x4000a48	      0xb800000000	                              mov eax, 0	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_32
0x4000a4d	      0xe800000000	                          call 0x4000a52	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_32
0x4000a52	              0x90	                                     nop	     12721	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000a53	              0xc9	                                   leave	     12721	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000a54	              0xc3	                                     ret	     12721	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1
get_vex_imm8	CALL,0:WHILE,0:functions,0:DO,0:ELSE,1:IF,9:SWITCH,2:FOR,0	108
0x40097ac	              0x55	                                push rbp	     17278	i386-dis.c	FUNCTION_80
0x40097ad	          0x4889e5	                            mov rbp, rsp	     17278	i386-dis.c	FUNCTION_80
0x40097b0	        0x4883ec20	                           sub rsp, 0x20	     17278	i386-dis.c	FUNCTION_80
0x40097b4	          0x897dec	             mov dword [rbp - 0x14], edi	     17278	i386-dis.c	FUNCTION_80
0x40097b7	          0x8975e8	             mov dword [rbp - 0x18], esi	     17278	i386-dis.c	FUNCTION_80
0x40097ba	    0xc745f8000000	                  mov dword [rbp - 8], 0	     17279	i386-dis.c	FUNCTION_80
0x40097c1	    0x8b0500000000	            mov eax, dword [0x040097c7] 	     17281	i386-dis.c	FUNCTION_80	IF_1
0x40097c7	          0x83f803	                              cmp eax, 3	     17281	i386-dis.c	FUNCTION_80	IF_1
0x40097ca	     0xf84ef000000	                            je 0x40098bf	     17281	i386-dis.c	FUNCTION_80	IF_1
0x40097d0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x40097d3	          0x83e002	                              and eax, 2	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x40097d6	            0x85c0	                           test eax, eax	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x40097d8	            0x750f	                           jne 0x40097e9	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x40097da	    0x8b0500000000	            mov eax, dword [0x040097e0] 	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x40097e0	          0x83f802	                              cmp eax, 2	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x40097e3	     0xf8598000000	                           jne 0x4009881	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x40097e9	    0x8b0500000000	            mov eax, dword [0x040097ef] 	     17287	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x40097ef	          0x8945fc	                mov dword [rbp - 4], eax	     17287	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x40097f2	        0x837dfc04	                  cmp dword [rbp - 4], 4	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x40097f6	            0x7558	                           jne 0x4009850	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x40097f8	    0x488b05000000	            mov rax, qword [0x040097ff] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x40097ff	        0x488d5001	                      lea rdx, [rax + 1]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4009803	    0x488b05000000	            mov rax, qword [0x0400980a] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x400980a	        0x488b4068	            mov rax, qword [rax + 0x68] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x400980e	          0x488b00	                    mov rax, qword [rax]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4009811	          0x4839c2	                            cmp rdx, rax	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4009814	            0x761d	                           jbe 0x4009833	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4009816	    0x488b05000000	            mov rax, qword [0x0400981d] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x400981d	        0x488d5001	                      lea rdx, [rax + 1]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4009821	    0x488b05000000	            mov rax, qword [0x04009828] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4009828	          0x4889d6	                            mov rsi, rdx	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x400982b	          0x4889c7	                            mov rdi, rax	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x400982e	      0xe80d68ffff	                     call sym.fetch_data	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4009833	    0x488b05000000	            mov rax, qword [0x0400983a] 	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x400983a	           0xfb600	                   movzx eax, byte [rax]	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x400983d	           0xfb6c0	                           movzx eax, al	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4009840	          0x83e007	                              and eax, 7	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4009843	          0x8945fc	                mov dword [rbp - 4], eax	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4009846	        0x837de800	               cmp dword [rbp - 0x18], 0	     17298	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3	IF_4
0x400984a	            0x7504	                           jne 0x4009850	     17298	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3	IF_4
0x400984c	        0x8345f801	                  add dword [rbp - 8], 1	     17299	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3	IF_4
0x4009850	        0x837de800	               cmp dword [rbp - 0x18], 0	     17305	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5
0x4009854	            0x7562	                           jne 0x40098b8	     17305	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5
0x4009856	    0x8b0500000000	            mov eax, dword [0x0400985c] 	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x400985c	          0x83f801	                              cmp eax, 1	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x400985f	            0x7417	                            je 0x4009878	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4009861	          0x83f802	                              cmp eax, 2	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4009864	            0x740c	                            je 0x4009872	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4009866	            0x85c0	                           test eax, eax	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4009868	            0x7402	                            je 0x400986c	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x400986a	            0xeb4c	                           jmp 0x40098b8	     17285	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x400986c	        0x837dfc05	                  cmp dword [rbp - 4], 5	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4009870	            0x750c	                           jne 0x400987e	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4009872	        0x8345f804	                  add dword [rbp - 8], 4	     17318	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4009876	            0xeb07	                           jmp 0x400987f	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4009878	        0x8345f801	                  add dword [rbp - 8], 1	     17322	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x400987c	            0xeb01	                           jmp 0x400987f	     17323	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x400987e	              0x90	                                     nop	     17314	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x400987f	            0xeb37	                           jmp 0x40098b8	     17285	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4009881	        0x837de800	               cmp dword [rbp - 0x18], 0	     17333	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7
0x4009885	            0x7538	                           jne 0x40098bf	     17333	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7
0x4009887	    0x8b0500000000	            mov eax, dword [0x0400988d] 	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x400988d	          0x83f801	                              cmp eax, 1	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4009890	            0x741a	                            je 0x40098ac	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4009892	          0x83f802	                              cmp eax, 2	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4009895	            0x740f	                            je 0x40098a6	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4009897	            0x85c0	                           test eax, eax	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4009899	            0x7524	                           jne 0x40098bf	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x400989b	    0x8b0500000000	            mov eax, dword [0x040098a1] 	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x40098a1	          0x83f806	                              cmp eax, 6	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x40098a4	            0x7515	                           jne 0x40098bb	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x40098a6	        0x8345f802	                  add dword [rbp - 8], 2	     17345	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x40098aa	            0xeb13	                           jmp 0x40098bf	     17346	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x40098ac	        0x837de800	               cmp dword [rbp - 0x18], 0	     17352	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_9
0x40098b0	            0x750c	                           jne 0x40098be	     17352	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_9
0x40098b2	        0x8345f801	                  add dword [rbp - 8], 1	     17353	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_9
0x40098b6	            0xeb06	                           jmp 0x40098be	     17355	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x40098b8	              0x90	                                     nop	     17285	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x40098b9	            0xeb04	                           jmp 0x40098bf	     17285	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x40098bb	              0x90	                                     nop	     17341	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x40098bc	            0xeb01	                           jmp 0x40098bf	     17341	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x40098be	              0x90	                                     nop	     17355	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x40098bf	    0x488b05000000	            mov rax, qword [0x040098c6] 	     17361	i386-dis.c	FUNCTION_80
0x40098c6	          0x8b55f8	                mov edx, dword [rbp - 8]	     17361	i386-dis.c	FUNCTION_80
0x40098c9	          0x4863d2	                         movsxd rdx, edx	     17361	i386-dis.c	FUNCTION_80
0x40098cc	        0x4883c201	                              add rdx, 1	     17361	i386-dis.c	FUNCTION_80
0x40098d0	          0x4801c2	                            add rdx, rax	     17361	i386-dis.c	FUNCTION_80
0x40098d3	    0x488b05000000	            mov rax, qword [0x040098da] 	     17361	i386-dis.c	FUNCTION_80
0x40098da	        0x488b4068	            mov rax, qword [rax + 0x68] 	     17361	i386-dis.c	FUNCTION_80
0x40098de	          0x488b00	                    mov rax, qword [rax]	     17361	i386-dis.c	FUNCTION_80
0x40098e1	          0x4839c2	                            cmp rdx, rax	     17361	i386-dis.c	FUNCTION_80
0x40098e4	            0x7626	                           jbe 0x400990c	     17361	i386-dis.c	FUNCTION_80
0x40098e6	    0x488b05000000	            mov rax, qword [0x040098ed] 	     17361	i386-dis.c	FUNCTION_80
0x40098ed	          0x8b55f8	                mov edx, dword [rbp - 8]	     17361	i386-dis.c	FUNCTION_80
0x40098f0	          0x4863d2	                         movsxd rdx, edx	     17361	i386-dis.c	FUNCTION_80
0x40098f3	        0x4883c201	                              add rdx, 1	     17361	i386-dis.c	FUNCTION_80
0x40098f7	          0x4801c2	                            add rdx, rax	     17361	i386-dis.c	FUNCTION_80
0x40098fa	    0x488b05000000	            mov rax, qword [0x04009901] 	     17361	i386-dis.c	FUNCTION_80
0x4009901	          0x4889d6	                            mov rsi, rdx	     17361	i386-dis.c	FUNCTION_80
0x4009904	          0x4889c7	                            mov rdi, rax	     17361	i386-dis.c	FUNCTION_80
0x4009907	      0xe83467ffff	                     call sym.fetch_data	     17361	i386-dis.c	FUNCTION_80
0x400990c	    0x488b15000000	            mov rdx, qword [0x04009913] 	     17362	i386-dis.c	FUNCTION_80
0x4009913	          0x8b45f8	                mov eax, dword [rbp - 8]	     17362	i386-dis.c	FUNCTION_80
0x4009916	            0x4898	                                    cdqe	     17362	i386-dis.c	FUNCTION_80
0x4009918	          0x4801d0	                            add rax, rdx	     17362	i386-dis.c	FUNCTION_80
0x400991b	           0xfb600	                   movzx eax, byte [rax]	     17362	i386-dis.c	FUNCTION_80
0x400991e	              0xc9	                                   leave	     17363	i386-dis.c	FUNCTION_80
0x400991f	              0xc3	                                     ret	     17363	i386-dis.c	FUNCTION_80
OP_0f07	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,0:FOR,0	21
0x4008945	              0x55	                                push rbp	     16680	i386-dis.c	FUNCTION_59
0x4008946	          0x4889e5	                            mov rbp, rsp	     16680	i386-dis.c	FUNCTION_59
0x4008949	        0x4883ec10	                           sub rsp, 0x10	     16680	i386-dis.c	FUNCTION_59
0x400894d	          0x897dfc	                mov dword [rbp - 4], edi	     16680	i386-dis.c	FUNCTION_59
0x4008950	          0x8975f8	                mov dword [rbp - 8], esi	     16680	i386-dis.c	FUNCTION_59
0x4008953	    0x8b0500000000	            mov eax, dword [0x04008959] 	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4008959	          0x83f803	                              cmp eax, 3	     16681	i386-dis.c	FUNCTION_59	IF_1
0x400895c	            0x750a	                           jne 0x4008968	     16681	i386-dis.c	FUNCTION_59	IF_1
0x400895e	    0x8b0500000000	            mov eax, dword [0x04008964] 	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4008964	            0x85c0	                           test eax, eax	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4008966	            0x7407	                            je 0x400896f	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4008968	      0xe805050000	                          call sym.BadOp	     16682	i386-dis.c	FUNCTION_59	CALL_1
0x400896d	            0xeb0f	                           jmp 0x400897e	     16682	i386-dis.c	FUNCTION_59	CALL_1
0x400896f	          0x8b55f8	                mov edx, dword [rbp - 8]	     16684	i386-dis.c	FUNCTION_59	CALL_2
0x4008972	          0x8b45fc	                mov eax, dword [rbp - 4]	     16684	i386-dis.c	FUNCTION_59	CALL_2
0x4008975	            0x89d6	                            mov esi, edx	     16684	i386-dis.c	FUNCTION_59	CALL_2
0x4008977	            0x89c7	                            mov edi, eax	     16684	i386-dis.c	FUNCTION_59	CALL_2
0x4008979	      0xe8afddffff	                           call sym.OP_E	     16684	i386-dis.c	FUNCTION_59	CALL_2
0x400897e	              0x90	                                     nop	     16685	i386-dis.c	FUNCTION_59
0x400897f	              0xc9	                                   leave	     16685	i386-dis.c	FUNCTION_59
0x4008980	              0xc3	                                     ret	     16685	i386-dis.c	FUNCTION_59
prefix_name	CALL,0:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,1:FOR,0	125
0x400056f	              0x55	                                push rbp	     12556	i386-dis.c	FUNCTION_3
0x4000570	          0x4889e5	                            mov rbp, rsp	     12556	i386-dis.c	FUNCTION_3
0x4000573	          0x897dfc	                mov dword [rbp - 4], edi	     12556	i386-dis.c	FUNCTION_3
0x4000576	          0x8975f8	                mov dword [rbp - 8], esi	     12556	i386-dis.c	FUNCTION_3
0x4000579	          0x8b45fc	                mov eax, dword [rbp - 4]	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400057c	          0x83f867	                           cmp eax, 0x67	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400057f	     0xf8471010000	                            je 0x40006f6	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000585	          0x83f867	                           cmp eax, 0x67	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000588	            0x7f61	                            jg 0x40005eb	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400058a	          0x83f84f	                           cmp eax, 0x4f	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400058d	            0x7f3c	                            jg 0x40005cb	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400058f	          0x83f840	                           cmp eax, 0x40	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000592	     0xf8dd7000000	                           jge 0x400066f	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000598	          0x83f82e	                           cmp eax, 0x2e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400059b	     0xf8401010000	                            je 0x40006a2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005a1	          0x83f82e	                           cmp eax, 0x2e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005a4	            0x7f0e	                            jg 0x40005b4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005a6	          0x83f826	                           cmp eax, 0x26	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005a9	     0xf8411010000	                            je 0x40006c0	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005af	      0xe9a7010000	                           jmp 0x400075b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005b4	          0x83f836	                           cmp eax, 0x36	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005b7	     0xf84ef000000	                            je 0x40006ac	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005bd	          0x83f83e	                           cmp eax, 0x3e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005c0	     0xf84f0000000	                            je 0x40006b6	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005c6	      0xe990010000	                           jmp 0x400075b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005cb	          0x83f865	                           cmp eax, 0x65	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005ce	     0xf8400010000	                            je 0x40006d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005d4	          0x83f865	                           cmp eax, 0x65	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005d7	     0xf8f01010000	                            jg 0x40006de	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005dd	          0x83f864	                           cmp eax, 0x64	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005e0	     0xf84e4000000	                            je 0x40006ca	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005e6	      0xe970010000	                           jmp 0x400075b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005eb	      0x3d3e010000	                          cmp eax, 0x13e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005f0	     0xf845e010000	                            je 0x4000754	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005f6	      0x3d3e010000	                          cmp eax, 0x13e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005fb	            0x7f35	                            jg 0x4000632	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40005fd	      0x3df0000000	                           cmp eax, 0xf0	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000602	     0xf8490000000	                            je 0x4000698	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000608	      0x3df0000000	                           cmp eax, 0xf0	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400060d	            0x7f10	                            jg 0x400061f	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400060f	      0x3d9b000000	                           cmp eax, 0x9b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000614	     0xf8417010000	                            je 0x4000731	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400061a	      0xe93c010000	                           jmp 0x400075b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400061f	      0x3df2000000	                           cmp eax, 0xf2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000624	            0x7468	                            je 0x400068e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000626	      0x3df3000000	                           cmp eax, 0xf3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400062b	            0x7457	                            je 0x4000684	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400062d	      0xe929010000	                           jmp 0x400075b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000632	      0x3df2020000	                          cmp eax, 0x2f2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000637	     0xf8402010000	                            je 0x400073f	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400063d	      0x3df2020000	                          cmp eax, 0x2f2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000642	            0x7f10	                            jg 0x4000654	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000644	      0x3df3010000	                          cmp eax, 0x1f3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000649	     0xf84e9000000	                            je 0x4000738	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400064f	      0xe907010000	                           jmp 0x400075b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000654	      0x3df2040000	                          cmp eax, 0x4f2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000659	     0xf84ee000000	                            je 0x400074d	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400065f	      0x3df3040000	                          cmp eax, 0x4f3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000664	     0xf84dc000000	                            je 0x4000746	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400066a	      0xe9ec000000	                           jmp 0x400075b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400066f	          0x8b45fc	                mov eax, dword [rbp - 4]	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000672	          0x83e840	                           sub eax, 0x40	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000675	            0x4898	                                    cdqe	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000677	    0x488b04c50000	                  mov rax, qword [rax*8]	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x400067f	      0xe9dc000000	                           jmp 0x4000760	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000684	      0xb800000000	                              mov eax, 0	     12598	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000689	      0xe9d2000000	                           jmp 0x4000760	     12598	i386-dis.c	FUNCTION_3	SWITCH_1
0x400068e	      0xb800000000	                              mov eax, 0	     12600	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000693	      0xe9c8000000	                           jmp 0x4000760	     12600	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000698	      0xb800000000	                              mov eax, 0	     12602	i386-dis.c	FUNCTION_3	SWITCH_1
0x400069d	      0xe9be000000	                           jmp 0x4000760	     12602	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006a2	      0xb800000000	                              mov eax, 0	     12604	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006a7	      0xe9b4000000	                           jmp 0x4000760	     12604	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006ac	      0xb800000000	                              mov eax, 0	     12606	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006b1	      0xe9aa000000	                           jmp 0x4000760	     12606	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006b6	      0xb800000000	                              mov eax, 0	     12608	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006bb	      0xe9a0000000	                           jmp 0x4000760	     12608	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006c0	      0xb800000000	                              mov eax, 0	     12610	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006c5	      0xe996000000	                           jmp 0x4000760	     12610	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006ca	      0xb800000000	                              mov eax, 0	     12612	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006cf	      0xe98c000000	                           jmp 0x4000760	     12612	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006d4	      0xb800000000	                              mov eax, 0	     12614	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006d9	      0xe982000000	                           jmp 0x4000760	     12614	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006de	          0x8b45f8	                mov eax, dword [rbp - 8]	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006e1	          0x83e001	                              and eax, 1	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006e4	            0x85c0	                           test eax, eax	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006e6	            0x7407	                            je 0x40006ef	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006e8	      0xb800000000	                              mov eax, 0	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006ed	            0xeb71	                           jmp 0x4000760	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006ef	      0xb800000000	                              mov eax, 0	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006f4	            0xeb6a	                           jmp 0x4000760	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x40006f6	    0x8b0500000000	            mov eax, dword [0x040006fc] 	     12618	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40006fc	          0x83f802	                              cmp eax, 2	     12618	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40006ff	            0x7518	                           jne 0x4000719	     12618	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000701	          0x8b45f8	                mov eax, dword [rbp - 8]	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000704	          0x83e002	                              and eax, 2	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000707	            0x85c0	                           test eax, eax	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000709	            0x7407	                            je 0x4000712	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x400070b	      0xb800000000	                              mov eax, 0	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000710	            0xeb4e	                           jmp 0x4000760	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000712	      0xb800000000	                              mov eax, 0	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000717	            0xeb47	                           jmp 0x4000760	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000719	          0x8b45f8	                mov eax, dword [rbp - 8]	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x400071c	          0x83e002	                              and eax, 2	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x400071f	            0x85c0	                           test eax, eax	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x4000721	            0x7407	                            je 0x400072a	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x4000723	      0xb800000000	                              mov eax, 0	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x4000728	            0xeb36	                           jmp 0x4000760	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x400072a	      0xb800000000	                              mov eax, 0	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x400072f	            0xeb2f	                           jmp 0x4000760	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x4000731	      0xb800000000	                              mov eax, 0	     12623	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000736	            0xeb28	                           jmp 0x4000760	     12623	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000738	      0xb800000000	                              mov eax, 0	     12625	i386-dis.c	FUNCTION_3	SWITCH_1
0x400073d	            0xeb21	                           jmp 0x4000760	     12625	i386-dis.c	FUNCTION_3	SWITCH_1
0x400073f	      0xb800000000	                              mov eax, 0	     12627	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000744	            0xeb1a	                           jmp 0x4000760	     12627	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000746	      0xb800000000	                              mov eax, 0	     12629	i386-dis.c	FUNCTION_3	SWITCH_1
0x400074b	            0xeb13	                           jmp 0x4000760	     12629	i386-dis.c	FUNCTION_3	SWITCH_1
0x400074d	      0xb800000000	                              mov eax, 0	     12631	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000752	            0xeb0c	                           jmp 0x4000760	     12631	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000754	      0xb800000000	                              mov eax, 0	     12633	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000759	            0xeb05	                           jmp 0x4000760	     12633	i386-dis.c	FUNCTION_3	SWITCH_1
0x400075b	      0xb800000000	                              mov eax, 0	     12635	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000760	              0x5d	                                 pop rbp	     12637	i386-dis.c	FUNCTION_3
0x4000761	              0xc3	                                     ret	     12637	i386-dis.c	FUNCTION_3
HLE_Fixup1	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,3:SWITCH,0:FOR,0	34
0x4008f8c	              0x55	                                push rbp	     16981	i386-dis.c	FUNCTION_71
0x4008f8d	          0x4889e5	                            mov rbp, rsp	     16981	i386-dis.c	FUNCTION_71
0x4008f90	        0x4883ec10	                           sub rsp, 0x10	     16981	i386-dis.c	FUNCTION_71
0x4008f94	          0x897dfc	                mov dword [rbp - 4], edi	     16981	i386-dis.c	FUNCTION_71
0x4008f97	          0x8975f8	                mov dword [rbp - 8], esi	     16981	i386-dis.c	FUNCTION_71
0x4008f9a	    0x8b0500000000	            mov eax, dword [0x04008fa0] 	     16982	i386-dis.c	FUNCTION_71	IF_1
0x4008fa0	          0x83f803	                              cmp eax, 3	     16982	i386-dis.c	FUNCTION_71	IF_1
0x4008fa3	            0x744d	                            je 0x4008ff2	     16982	i386-dis.c	FUNCTION_71	IF_1
0x4008fa5	    0x8b0500000000	            mov eax, dword [0x04008fab] 	     16983	i386-dis.c	FUNCTION_71	IF_1
0x4008fab	          0x83e004	                              and eax, 4	     16983	i386-dis.c	FUNCTION_71	IF_1
0x4008fae	            0x85c0	                           test eax, eax	     16983	i386-dis.c	FUNCTION_71	IF_1
0x4008fb0	            0x7440	                            je 0x4008ff2	     16983	i386-dis.c	FUNCTION_71	IF_1
0x4008fb2	    0x8b0500000000	            mov eax, dword [0x04008fb8] 	     16985	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4008fb8	          0x83e001	                              and eax, 1	     16985	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4008fbb	            0x85c0	                           test eax, eax	     16985	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4008fbd	            0x7413	                            je 0x4008fd2	     16985	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4008fbf	    0x8b0500000000	            mov eax, dword [0x04008fc5] 	     16986	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4008fc5	            0x4898	                                    cdqe	     16986	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4008fc7	    0xc70485000000	                mov dword [rax*4], 0x4f3	     16986	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4008fd2	    0x8b0500000000	            mov eax, dword [0x04008fd8] 	     16987	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4008fd8	          0x83e002	                              and eax, 2	     16987	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4008fdb	            0x85c0	                           test eax, eax	     16987	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4008fdd	            0x7413	                            je 0x4008ff2	     16987	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4008fdf	    0x8b0500000000	            mov eax, dword [0x04008fe5] 	     16988	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4008fe5	            0x4898	                                    cdqe	     16988	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4008fe7	    0xc70485000000	                mov dword [rax*4], 0x2f2	     16988	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4008ff2	          0x8b55f8	                mov edx, dword [rbp - 8]	     16991	i386-dis.c	FUNCTION_71	CALL_1
0x4008ff5	          0x8b45fc	                mov eax, dword [rbp - 4]	     16991	i386-dis.c	FUNCTION_71	CALL_1
0x4008ff8	            0x89d6	                            mov esi, edx	     16991	i386-dis.c	FUNCTION_71	CALL_1
0x4008ffa	            0x89c7	                            mov edi, eax	     16991	i386-dis.c	FUNCTION_71	CALL_1
0x4008ffc	      0xe82cd7ffff	                           call sym.OP_E	     16991	i386-dis.c	FUNCTION_71	CALL_1
0x4009001	              0x90	                                     nop	     16992	i386-dis.c	FUNCTION_71
0x4009002	              0xc9	                                   leave	     16992	i386-dis.c	FUNCTION_71
0x4009003	              0xc3	                                     ret	     16992	i386-dis.c	FUNCTION_71
CRC32_Fixup	CALL,7:WHILE,0:functions,0:DO,0:ELSE,7:IF,9:SWITCH,1:FOR,0	185
0x400920c	              0x55	                                push rbp	     17074	i386-dis.c	FUNCTION_76
0x400920d	          0x4889e5	                            mov rbp, rsp	     17074	i386-dis.c	FUNCTION_76
0x4009210	        0x4883ec20	                           sub rsp, 0x20	     17074	i386-dis.c	FUNCTION_76
0x4009214	          0x897dec	             mov dword [rbp - 0x14], edi	     17074	i386-dis.c	FUNCTION_76
0x4009217	          0x8975e8	             mov dword [rbp - 0x18], esi	     17074	i386-dis.c	FUNCTION_76
0x400921a	    0x488b05000000	            mov rax, qword [0x04009221] 	     17076	i386-dis.c	FUNCTION_76
0x4009221	        0x488945f8	                mov qword [rbp - 8], rax	     17076	i386-dis.c	FUNCTION_76
0x4009225	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009228	          0x83f801	                              cmp eax, 1	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x400922b	            0x740a	                            je 0x4009237	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x400922d	          0x83f804	                              cmp eax, 4	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009230	            0x7428	                            je 0x400925a	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009232	      0xe9b3000000	                           jmp 0x40092ea	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009237	     0xfb605000000	           movzx eax, byte [0x0400923e] 	     17081	i386-dis.c	FUNCTION_76	SWITCH_1	IF_1
0x400923e	            0x84c0	                             test al, al	     17081	i386-dis.c	FUNCTION_76	SWITCH_1	IF_1
0x4009240	     0xf85d0000000	                           jne 0x4009316	     17081	i386-dis.c	FUNCTION_76	SWITCH_1	IF_1
0x4009246	        0x488b45f8	                mov rax, qword [rbp - 8]	     17084	i386-dis.c	FUNCTION_76	SWITCH_1
0x400924a	        0x488d5001	                      lea rdx, [rax + 1]	     17084	i386-dis.c	FUNCTION_76	SWITCH_1
0x400924e	        0x488955f8	                mov qword [rbp - 8], rdx	     17084	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009252	          0xc60062	                    mov byte [rax], 0x62	     17084	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009255	      0xe9a8000000	                           jmp 0x4009302	     17085	i386-dis.c	FUNCTION_76	SWITCH_1
0x400925a	     0xfb605000000	           movzx eax, byte [0x04009261] 	     17087	i386-dis.c	FUNCTION_76	SWITCH_1	IF_2
0x4009261	            0x84c0	                             test al, al	     17087	i386-dis.c	FUNCTION_76	SWITCH_1	IF_2
0x4009263	     0xf85b0000000	                           jne 0x4009319	     17087	i386-dis.c	FUNCTION_76	SWITCH_1	IF_2
0x4009269	    0x8b0500000000	            mov eax, dword [0x0400926f] 	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x400926f	          0x83e008	                              and eax, 8	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009272	            0x85c0	                           test eax, eax	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009274	            0x740f	                            je 0x4009285	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009276	    0x8b0500000000	            mov eax, dword [0x0400927c] 	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x400927c	          0x83c848	                            or eax, 0x48	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x400927f	    0x890500000000	            mov dword [0x04009285], eax 	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009285	    0x8b0500000000	            mov eax, dword [0x0400928b] 	     17091	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x400928b	          0x83e008	                              and eax, 8	     17091	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x400928e	            0x85c0	                           test eax, eax	     17091	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x4009290	            0x7411	                            je 0x40092a3	     17091	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x4009292	        0x488b45f8	                mov rax, qword [rbp - 8]	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x4009296	        0x488d5001	                      lea rdx, [rax + 1]	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x400929a	        0x488955f8	                mov qword [rbp - 8], rdx	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x400929e	          0xc60071	                    mov byte [rax], 0x71	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x40092a1	            0xeb5f	                           jmp 0x4009302	     17101	i386-dis.c	FUNCTION_76	SWITCH_1
0x40092a3	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     17095	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40092a6	          0x83e001	                              and eax, 1	     17095	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40092a9	            0x85c0	                           test eax, eax	     17095	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40092ab	            0x7411	                            je 0x40092be	     17095	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40092ad	        0x488b45f8	                mov rax, qword [rbp - 8]	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40092b1	        0x488d5001	                      lea rdx, [rax + 1]	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40092b5	        0x488955f8	                mov qword [rbp - 8], rdx	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40092b9	          0xc6006c	                    mov byte [rax], 0x6c	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40092bc	            0xeb0f	                           jmp 0x40092cd	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40092be	        0x488b45f8	                mov rax, qword [rbp - 8]	     17098	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	ELSE_2
0x40092c2	        0x488d5001	                      lea rdx, [rax + 1]	     17098	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	ELSE_2
0x40092c6	        0x488955f8	                mov qword [rbp - 8], rdx	     17098	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	ELSE_2
0x40092ca	          0xc60077	                    mov byte [rax], 0x77	     17098	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	ELSE_2
0x40092cd	    0x8b0500000000	            mov eax, dword [0x040092d3] 	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x40092d3	      0x2500020000	                          and eax, 0x200	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x40092d8	            0x89c2	                            mov edx, eax	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x40092da	    0x8b0500000000	            mov eax, dword [0x040092e0] 	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x40092e0	             0x9d0	                             or eax, edx	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x40092e2	    0x890500000000	            mov dword [0x040092e8], eax 	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x40092e8	            0xeb18	                           jmp 0x4009302	     17101	i386-dis.c	FUNCTION_76	SWITCH_1
0x40092ea	      0xbe00000000	                              mov esi, 0	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x40092ef	      0xbf00000000	                              mov edi, 0	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x40092f4	      0xe800000000	                          call 0x40092f9	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x40092f9	          0x4889c7	                            mov rdi, rax	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x40092fc	      0xe8c8b7ffff	                        call sym.oappend	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x4009301	              0x90	                                     nop	     17104	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009302	        0x488b45f8	                mov rax, qword [rbp - 8]	     17106	i386-dis.c	FUNCTION_76
0x4009306	    0x488905000000	            mov qword [0x0400930d], rax 	     17106	i386-dis.c	FUNCTION_76
0x400930d	        0x488b45f8	                mov rax, qword [rbp - 8]	     17107	i386-dis.c	FUNCTION_76
0x4009311	          0xc60000	                       mov byte [rax], 0	     17107	i386-dis.c	FUNCTION_76
0x4009314	            0xeb04	                           jmp 0x400931a	     17107	i386-dis.c	FUNCTION_76
0x4009316	              0x90	                                     nop	     17082	i386-dis.c	FUNCTION_76	SWITCH_1	IF_1
0x4009317	            0xeb01	                           jmp 0x400931a	     17082	i386-dis.c	FUNCTION_76	SWITCH_1	IF_1
0x4009319	              0x90	                                     nop	     17088	i386-dis.c	FUNCTION_76	SWITCH_1	IF_2
0x400931a	    0x8b0500000000	            mov eax, dword [0x04009320] 	     17110	i386-dis.c	FUNCTION_76	IF_5
0x4009320	          0x83f803	                              cmp eax, 3	     17110	i386-dis.c	FUNCTION_76	IF_5
0x4009323	     0xf8584010000	                           jne 0x40094ad	     17110	i386-dis.c	FUNCTION_76	IF_5
0x4009329	     0xfb605000000	           movzx eax, byte [0x04009330] 	     17115	i386-dis.c	FUNCTION_76	IF_5
0x4009330	            0x84c0	                             test al, al	     17115	i386-dis.c	FUNCTION_76	IF_5
0x4009332	            0x7505	                           jne 0x4009339	     17115	i386-dis.c	FUNCTION_76	IF_5
0x4009334	      0xe800000000	                          call 0x4009339	     17115	i386-dis.c	FUNCTION_76	IF_5
0x4009339	    0x488b05000000	            mov rax, qword [0x04009340] 	     17116	i386-dis.c	FUNCTION_76	IF_5
0x4009340	        0x4883c001	                              add rax, 1	     17116	i386-dis.c	FUNCTION_76	IF_5
0x4009344	    0x488905000000	            mov qword [0x0400934b], rax 	     17116	i386-dis.c	FUNCTION_76	IF_5
0x400934b	    0x8b0500000000	            mov eax, dword [0x04009351] 	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4009351	          0x83e001	                              and eax, 1	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4009354	            0x85c0	                           test eax, eax	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4009356	            0x740f	                            je 0x4009367	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4009358	    0x8b0500000000	            mov eax, dword [0x0400935e] 	     17118	i386-dis.c	FUNCTION_76	IF_5
0x400935e	          0x83c841	                            or eax, 0x41	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4009361	    0x890500000000	            mov dword [0x04009367], eax 	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4009367	    0x8b0500000000	            mov eax, dword [0x0400936d] 	     17119	i386-dis.c	FUNCTION_76	IF_5
0x400936d	          0x83e001	                              and eax, 1	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4009370	            0x85c0	                           test eax, eax	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4009372	            0x7407	                            je 0x400937b	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4009374	      0xb808000000	                              mov eax, 8	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4009379	            0xeb05	                           jmp 0x4009380	     17119	i386-dis.c	FUNCTION_76	IF_5
0x400937b	      0xb800000000	                              mov eax, 0	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4009380	          0x8945f4	              mov dword [rbp - 0xc], eax	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4009383	        0x837dec01	               cmp dword [rbp - 0x14], 1	     17120	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x4009387	            0x7571	                           jne 0x40093fa	     17120	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x4009389	    0x8b0500000000	            mov eax, dword [0x0400938f] 	     17122	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x400938f	          0x83c840	                            or eax, 0x40	     17122	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x4009392	    0x890500000000	            mov dword [0x04009398], eax 	     17122	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x4009398	    0x8b0500000000	            mov eax, dword [0x0400939e] 	     17123	i386-dis.c	FUNCTION_76	IF_5	IF_6	IF_7
0x400939e	            0x85c0	                           test eax, eax	     17123	i386-dis.c	FUNCTION_76	IF_5	IF_6	IF_7
0x40093a0	            0x742c	                            je 0x40093ce	     17123	i386-dis.c	FUNCTION_76	IF_5	IF_6	IF_7
0x40093a2	    0x488b05000000	            mov rax, qword [0x040093a9] 	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x40093a9	    0x8b0d00000000	            mov ecx, dword [0x040093af] 	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x40093af	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x40093b2	             0x1ca	                            add edx, ecx	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x40093b4	          0x4863d2	                         movsxd rdx, edx	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x40093b7	        0x48c1e203	                              shl rdx, 3	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x40093bb	          0x4801d0	                            add rax, rdx	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x40093be	          0x488b00	                    mov rax, qword [rax]	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x40093c1	          0x4889c7	                            mov rdi, rax	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x40093c4	      0xe800b7ffff	                        call sym.oappend	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x40093c9	      0xe9ee000000	                           jmp 0x40094bc	     17141	i386-dis.c	FUNCTION_76
0x40093ce	    0x488b05000000	            mov rax, qword [0x040093d5] 	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x40093d5	    0x8b0d00000000	            mov ecx, dword [0x040093db] 	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x40093db	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x40093de	             0x1ca	                            add edx, ecx	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x40093e0	          0x4863d2	                         movsxd rdx, edx	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x40093e3	        0x48c1e203	                              shl rdx, 3	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x40093e7	          0x4801d0	                            add rax, rdx	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x40093ea	          0x488b00	                    mov rax, qword [rax]	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x40093ed	          0x4889c7	                            mov rdi, rax	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x40093f0	      0xe8d4b6ffff	                        call sym.oappend	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x40093f5	      0xe9c2000000	                           jmp 0x40094bc	     17141	i386-dis.c	FUNCTION_76
0x40093fa	    0x8b0500000000	            mov eax, dword [0x04009400] 	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4009400	          0x83e008	                              and eax, 8	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4009403	            0x85c0	                           test eax, eax	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4009405	            0x740f	                            je 0x4009416	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4009407	    0x8b0500000000	            mov eax, dword [0x0400940d] 	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x400940d	          0x83c848	                            or eax, 0x48	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4009410	    0x890500000000	            mov dword [0x04009416], eax 	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4009416	    0x8b0500000000	            mov eax, dword [0x0400941c] 	     17131	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	IF_8
0x400941c	          0x83e008	                              and eax, 8	     17131	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	IF_8
0x400941f	            0x85c0	                           test eax, eax	     17131	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	IF_8
0x4009421	            0x7429	                            je 0x400944c	     17131	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	IF_8
0x4009423	    0x488b05000000	            mov rax, qword [0x0400942a] 	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x400942a	    0x8b0d00000000	            mov ecx, dword [0x04009430] 	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4009430	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4009433	             0x1ca	                            add edx, ecx	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4009435	          0x4863d2	                         movsxd rdx, edx	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4009438	        0x48c1e203	                              shl rdx, 3	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x400943c	          0x4801d0	                            add rax, rdx	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x400943f	          0x488b00	                    mov rax, qword [rax]	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4009442	          0x4889c7	                            mov rdi, rax	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4009445	      0xe87fb6ffff	                        call sym.oappend	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x400944a	            0xeb70	                           jmp 0x40094bc	     17141	i386-dis.c	FUNCTION_76
0x400944c	    0x8b0500000000	            mov eax, dword [0x04009452] 	     17133	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009452	      0x2500020000	                          and eax, 0x200	     17133	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009457	            0x85c0	                           test eax, eax	     17133	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009459	            0x7429	                            je 0x4009484	     17133	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x400945b	    0x488b05000000	            mov rax, qword [0x04009462] 	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009462	    0x8b0d00000000	            mov ecx, dword [0x04009468] 	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009468	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x400946b	             0x1ca	                            add edx, ecx	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x400946d	          0x4863d2	                         movsxd rdx, edx	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009470	        0x48c1e203	                              shl rdx, 3	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009474	          0x4801d0	                            add rax, rdx	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009477	          0x488b00	                    mov rax, qword [rax]	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x400947a	          0x4889c7	                            mov rdi, rax	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x400947d	      0xe847b6ffff	                        call sym.oappend	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009482	            0xeb38	                           jmp 0x40094bc	     17141	i386-dis.c	FUNCTION_76
0x4009484	    0x488b05000000	            mov rax, qword [0x0400948b] 	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x400948b	    0x8b0d00000000	            mov ecx, dword [0x04009491] 	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4009491	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4009494	             0x1ca	                            add edx, ecx	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4009496	          0x4863d2	                         movsxd rdx, edx	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4009499	        0x48c1e203	                              shl rdx, 3	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x400949d	          0x4801d0	                            add rax, rdx	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x40094a0	          0x488b00	                    mov rax, qword [rax]	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x40094a3	          0x4889c7	                            mov rdi, rax	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x40094a6	      0xe81eb6ffff	                        call sym.oappend	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x40094ab	            0xeb0f	                           jmp 0x40094bc	     17141	i386-dis.c	FUNCTION_76
0x40094ad	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x40094b0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x40094b3	            0x89d6	                            mov esi, edx	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x40094b5	            0x89c7	                            mov edi, eax	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x40094b7	      0xe871d2ffff	                           call sym.OP_E	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x40094bc	              0x90	                                     nop	     17141	i386-dis.c	FUNCTION_76
0x40094bd	              0xc9	                                   leave	     17141	i386-dis.c	FUNCTION_76
0x40094be	              0xc3	                                     ret	     17141	i386-dis.c	FUNCTION_76
OP_DIR	CALL,7:WHILE,0:functions,0:DO,0:ELSE,2:IF,2:SWITCH,0:FOR,0	49
0x4007b65	              0x55	                                push rbp	     16200	i386-dis.c	FUNCTION_40
0x4007b66	          0x4889e5	                            mov rbp, rsp	     16200	i386-dis.c	FUNCTION_40
0x4007b69	        0x4883ec20	                           sub rsp, 0x20	     16200	i386-dis.c	FUNCTION_40
0x4007b6d	          0x897dec	             mov dword [rbp - 0x14], edi	     16200	i386-dis.c	FUNCTION_40
0x4007b70	          0x8975e8	             mov dword [rbp - 0x18], esi	     16200	i386-dis.c	FUNCTION_40
0x4007b73	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16203	i386-dis.c	FUNCTION_40	IF_1
0x4007b76	          0x83e001	                              and eax, 1	     16203	i386-dis.c	FUNCTION_40	IF_1
0x4007b79	            0x85c0	                           test eax, eax	     16203	i386-dis.c	FUNCTION_40	IF_1
0x4007b7b	            0x7412	                            je 0x4007b8f	     16203	i386-dis.c	FUNCTION_40	IF_1
0x4007b7d	      0xe822f1ffff	                          call sym.get32	     16205	i386-dis.c	FUNCTION_40	IF_1	CALL_1
0x4007b82	          0x8945fc	                mov dword [rbp - 4], eax	     16205	i386-dis.c	FUNCTION_40	IF_1	CALL_1
0x4007b85	      0xe8c7f2ffff	                          call sym.get16	     16206	i386-dis.c	FUNCTION_40	IF_1	CALL_2
0x4007b8a	          0x8945f8	                mov dword [rbp - 8], eax	     16206	i386-dis.c	FUNCTION_40	IF_1	CALL_2
0x4007b8d	            0xeb10	                           jmp 0x4007b9f	     16206	i386-dis.c	FUNCTION_40	IF_1	CALL_2
0x4007b8f	      0xe8bdf2ffff	                          call sym.get16	     16210	i386-dis.c	FUNCTION_40	ELSE_1	CALL_3
0x4007b94	          0x8945fc	                mov dword [rbp - 4], eax	     16210	i386-dis.c	FUNCTION_40	ELSE_1	CALL_3
0x4007b97	      0xe8b5f2ffff	                          call sym.get16	     16211	i386-dis.c	FUNCTION_40	ELSE_1	CALL_4
0x4007b9c	          0x8945f8	                mov dword [rbp - 8], eax	     16211	i386-dis.c	FUNCTION_40	ELSE_1	CALL_4
0x4007b9f	    0x8b0500000000	            mov eax, dword [0x04007ba5] 	     16213	i386-dis.c	FUNCTION_40
0x4007ba5	      0x2500020000	                          and eax, 0x200	     16213	i386-dis.c	FUNCTION_40
0x4007baa	            0x89c2	                            mov edx, eax	     16213	i386-dis.c	FUNCTION_40
0x4007bac	    0x8b0500000000	            mov eax, dword [0x04007bb2] 	     16213	i386-dis.c	FUNCTION_40
0x4007bb2	             0x9d0	                             or eax, edx	     16213	i386-dis.c	FUNCTION_40
0x4007bb4	    0x890500000000	            mov dword [0x04007bba], eax 	     16213	i386-dis.c	FUNCTION_40
0x4007bba	     0xfb605000000	           movzx eax, byte [0x04007bc1] 	     16214	i386-dis.c	FUNCTION_40	IF_2
0x4007bc1	            0x84c0	                             test al, al	     16214	i386-dis.c	FUNCTION_40	IF_2
0x4007bc3	            0x7420	                            je 0x4007be5	     16214	i386-dis.c	FUNCTION_40	IF_2
0x4007bc5	          0x8b55fc	                mov edx, dword [rbp - 4]	     16215	i386-dis.c	FUNCTION_40	CALL_5
0x4007bc8	          0x8b45f8	                mov eax, dword [rbp - 8]	     16215	i386-dis.c	FUNCTION_40	CALL_5
0x4007bcb	            0x89d1	                            mov ecx, edx	     16215	i386-dis.c	FUNCTION_40	CALL_5
0x4007bcd	            0x89c2	                            mov edx, eax	     16215	i386-dis.c	FUNCTION_40	CALL_5
0x4007bcf	      0xbe00000000	                              mov esi, 0	     16215	i386-dis.c	FUNCTION_40	CALL_5
0x4007bd4	      0xbf00000000	                              mov edi, 0	     16215	i386-dis.c	FUNCTION_40	CALL_5
0x4007bd9	      0xb800000000	                              mov eax, 0	     16215	i386-dis.c	FUNCTION_40	CALL_5
0x4007bde	      0xe800000000	                          call 0x4007be3	     16215	i386-dis.c	FUNCTION_40	CALL_5
0x4007be3	            0xeb1e	                           jmp 0x4007c03	     16215	i386-dis.c	FUNCTION_40	CALL_5
0x4007be5	          0x8b55fc	                mov edx, dword [rbp - 4]	     16217	i386-dis.c	FUNCTION_40	CALL_6
0x4007be8	          0x8b45f8	                mov eax, dword [rbp - 8]	     16217	i386-dis.c	FUNCTION_40	CALL_6
0x4007beb	            0x89d1	                            mov ecx, edx	     16217	i386-dis.c	FUNCTION_40	CALL_6
0x4007bed	            0x89c2	                            mov edx, eax	     16217	i386-dis.c	FUNCTION_40	CALL_6
0x4007bef	      0xbe00000000	                              mov esi, 0	     16217	i386-dis.c	FUNCTION_40	CALL_6
0x4007bf4	      0xbf00000000	                              mov edi, 0	     16217	i386-dis.c	FUNCTION_40	CALL_6
0x4007bf9	      0xb800000000	                              mov eax, 0	     16217	i386-dis.c	FUNCTION_40	CALL_6
0x4007bfe	      0xe800000000	                          call 0x4007c03	     16217	i386-dis.c	FUNCTION_40	CALL_6
0x4007c03	      0xbf00000000	                              mov edi, 0	     16218	i386-dis.c	FUNCTION_40	CALL_7
0x4007c08	      0xe8bcceffff	                        call sym.oappend	     16218	i386-dis.c	FUNCTION_40	CALL_7
0x4007c0d	              0x90	                                     nop	     16219	i386-dis.c	FUNCTION_40
0x4007c0e	              0xc9	                                   leave	     16219	i386-dis.c	FUNCTION_40
0x4007c0f	              0xc3	                                     ret	     16219	i386-dis.c	FUNCTION_40
HLE_Fixup2	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,3:SWITCH,0:FOR,0	30
0x4009004	              0x55	                                push rbp	     17000	i386-dis.c	FUNCTION_72
0x4009005	          0x4889e5	                            mov rbp, rsp	     17000	i386-dis.c	FUNCTION_72
0x4009008	        0x4883ec10	                           sub rsp, 0x10	     17000	i386-dis.c	FUNCTION_72
0x400900c	          0x897dfc	                mov dword [rbp - 4], edi	     17000	i386-dis.c	FUNCTION_72
0x400900f	          0x8975f8	                mov dword [rbp - 8], esi	     17000	i386-dis.c	FUNCTION_72
0x4009012	    0x8b0500000000	            mov eax, dword [0x04009018] 	     17001	i386-dis.c	FUNCTION_72	IF_1
0x4009018	          0x83f803	                              cmp eax, 3	     17001	i386-dis.c	FUNCTION_72	IF_1
0x400901b	            0x7440	                            je 0x400905d	     17001	i386-dis.c	FUNCTION_72	IF_1
0x400901d	    0x8b0500000000	            mov eax, dword [0x04009023] 	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4009023	          0x83e001	                              and eax, 1	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4009026	            0x85c0	                           test eax, eax	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4009028	            0x7413	                            je 0x400903d	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x400902a	    0x8b0500000000	            mov eax, dword [0x04009030] 	     17004	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4009030	            0x4898	                                    cdqe	     17004	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4009032	    0xc70485000000	                mov dword [rax*4], 0x4f3	     17004	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x400903d	    0x8b0500000000	            mov eax, dword [0x04009043] 	     17005	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4009043	          0x83e002	                              and eax, 2	     17005	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4009046	            0x85c0	                           test eax, eax	     17005	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4009048	            0x7413	                            je 0x400905d	     17005	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x400904a	    0x8b0500000000	            mov eax, dword [0x04009050] 	     17006	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4009050	            0x4898	                                    cdqe	     17006	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4009052	    0xc70485000000	                mov dword [rax*4], 0x2f2	     17006	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x400905d	          0x8b55f8	                mov edx, dword [rbp - 8]	     17009	i386-dis.c	FUNCTION_72	CALL_1
0x4009060	          0x8b45fc	                mov eax, dword [rbp - 4]	     17009	i386-dis.c	FUNCTION_72	CALL_1
0x4009063	            0x89d6	                            mov esi, edx	     17009	i386-dis.c	FUNCTION_72	CALL_1
0x4009065	            0x89c7	                            mov edi, eax	     17009	i386-dis.c	FUNCTION_72	CALL_1
0x4009067	      0xe8c1d6ffff	                           call sym.OP_E	     17009	i386-dis.c	FUNCTION_72	CALL_1
0x400906c	              0x90	                                     nop	     17010	i386-dis.c	FUNCTION_72
0x400906d	              0xc9	                                   leave	     17010	i386-dis.c	FUNCTION_72
0x400906e	              0xc3	                                     ret	     17010	i386-dis.c	FUNCTION_72
OP_LWP_E	CALL,1:WHILE,0:functions,0:DO,0:ELSE,1:IF,2:SWITCH,0:FOR,0	30
0x400a6c3	              0x55	                                push rbp	     17882	i386-dis.c	FUNCTION_98
0x400a6c4	          0x4889e5	                            mov rbp, rsp	     17882	i386-dis.c	FUNCTION_98
0x400a6c7	        0x4883ec20	                           sub rsp, 0x20	     17882	i386-dis.c	FUNCTION_98
0x400a6cb	          0x897dec	             mov dword [rbp - 0x14], edi	     17882	i386-dis.c	FUNCTION_98
0x400a6ce	          0x8975e8	             mov dword [rbp - 0x18], esi	     17882	i386-dis.c	FUNCTION_98
0x400a6d1	    0x8b0500000000	            mov eax, dword [0x0400a6d7] 	     17884	i386-dis.c	FUNCTION_98
0x400a6d7	          0x8945f4	              mov dword [rbp - 0xc], eax	     17884	i386-dis.c	FUNCTION_98
0x400a6da	    0x8b0500000000	            mov eax, dword [0x0400a6e0] 	     17886	i386-dis.c	FUNCTION_98	IF_1
0x400a6e0	          0x83e008	                              and eax, 8	     17886	i386-dis.c	FUNCTION_98	IF_1
0x400a6e3	            0x85c0	                           test eax, eax	     17886	i386-dis.c	FUNCTION_98	IF_1
0x400a6e5	            0x740d	                            je 0x400a6f4	     17886	i386-dis.c	FUNCTION_98	IF_1
0x400a6e7	    0x488b05000000	            mov rax, qword [0x0400a6ee] 	     17887	i386-dis.c	FUNCTION_98	IF_1
0x400a6ee	        0x488945f8	                mov qword [rbp - 8], rax	     17887	i386-dis.c	FUNCTION_98	IF_1
0x400a6f2	            0xeb0b	                           jmp 0x400a6ff	     17887	i386-dis.c	FUNCTION_98	IF_1
0x400a6f4	    0x488b05000000	            mov rax, qword [0x0400a6fb] 	     17889	i386-dis.c	FUNCTION_98	ELSE_1
0x400a6fb	        0x488945f8	                mov qword [rbp - 8], rax	     17889	i386-dis.c	FUNCTION_98	ELSE_1
0x400a6ff	    0x8b0500000000	            mov eax, dword [0x0400a705] 	     17891	i386-dis.c	FUNCTION_98	IF_2
0x400a705	          0x83f802	                              cmp eax, 2	     17891	i386-dis.c	FUNCTION_98	IF_2
0x400a708	            0x7404	                            je 0x400a70e	     17891	i386-dis.c	FUNCTION_98	IF_2
0x400a70a	        0x8365f407	                and dword [rbp - 0xc], 7	     17892	i386-dis.c	FUNCTION_98	IF_2
0x400a70e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     17893	i386-dis.c	FUNCTION_98	CALL_1
0x400a711	    0x488d14c50000	                        lea rdx, [rax*8]	     17893	i386-dis.c	FUNCTION_98	CALL_1
0x400a719	        0x488b45f8	                mov rax, qword [rbp - 8]	     17893	i386-dis.c	FUNCTION_98	CALL_1
0x400a71d	          0x4801d0	                            add rax, rdx	     17893	i386-dis.c	FUNCTION_98	CALL_1
0x400a720	          0x488b00	                    mov rax, qword [rax]	     17893	i386-dis.c	FUNCTION_98	CALL_1
0x400a723	          0x4889c7	                            mov rdi, rax	     17893	i386-dis.c	FUNCTION_98	CALL_1
0x400a726	      0xe89ea3ffff	                        call sym.oappend	     17893	i386-dis.c	FUNCTION_98	CALL_1
0x400a72b	              0x90	                                     nop	     17894	i386-dis.c	FUNCTION_98
0x400a72c	              0xc9	                                   leave	     17894	i386-dis.c	FUNCTION_98
0x400a72d	              0xc3	                                     ret	     17894	i386-dis.c	FUNCTION_98
OP_Mask	CALL,3:WHILE,0:functions,0:DO,0:ELSE,0:IF,2:SWITCH,0:FOR,0	39
0x400a72e	              0x55	                                push rbp	     17898	i386-dis.c	FUNCTION_99
0x400a72f	          0x4889e5	                            mov rbp, rsp	     17898	i386-dis.c	FUNCTION_99
0x400a732	        0x4883ec10	                           sub rsp, 0x10	     17898	i386-dis.c	FUNCTION_99
0x400a736	          0x897dfc	                mov dword [rbp - 4], edi	     17898	i386-dis.c	FUNCTION_99
0x400a739	          0x8975f8	                mov dword [rbp - 8], esi	     17898	i386-dis.c	FUNCTION_99
0x400a73c	    0x8b0500000000	            mov eax, dword [0x0400a742] 	     17899	i386-dis.c	FUNCTION_99	IF_1
0x400a742	            0x85c0	                           test eax, eax	     17899	i386-dis.c	FUNCTION_99	IF_1
0x400a744	            0x740c	                            je 0x400a752	     17899	i386-dis.c	FUNCTION_99	IF_1
0x400a746	        0x837dfc44	               cmp dword [rbp - 4], 0x44	     17900	i386-dis.c	FUNCTION_99	IF_1
0x400a74a	            0x740b	                            je 0x400a757	     17900	i386-dis.c	FUNCTION_99	IF_1
0x400a74c	        0x837dfc45	               cmp dword [rbp - 4], 0x45	     17900	i386-dis.c	FUNCTION_99	IF_1
0x400a750	            0x7405	                            je 0x400a757	     17900	i386-dis.c	FUNCTION_99	IF_1
0x400a752	      0xe800000000	                          call 0x400a757	     17901	i386-dis.c	FUNCTION_99	CALL_1
0x400a757	    0x8b0500000000	            mov eax, dword [0x0400a75d] 	     17903	i386-dis.c	FUNCTION_99
0x400a75d	          0x83e004	                              and eax, 4	     17903	i386-dis.c	FUNCTION_99
0x400a760	            0x85c0	                           test eax, eax	     17903	i386-dis.c	FUNCTION_99
0x400a762	            0x740f	                            je 0x400a773	     17903	i386-dis.c	FUNCTION_99
0x400a764	    0x8b0500000000	            mov eax, dword [0x0400a76a] 	     17903	i386-dis.c	FUNCTION_99
0x400a76a	          0x83c844	                            or eax, 0x44	     17903	i386-dis.c	FUNCTION_99
0x400a76d	    0x890500000000	            mov dword [0x0400a773], eax 	     17903	i386-dis.c	FUNCTION_99
0x400a773	    0x8b0500000000	            mov eax, dword [0x0400a779] 	     17904	i386-dis.c	FUNCTION_99	IF_2
0x400a779	          0x83e004	                              and eax, 4	     17904	i386-dis.c	FUNCTION_99	IF_2
0x400a77c	            0x85c0	                           test eax, eax	     17904	i386-dis.c	FUNCTION_99	IF_2
0x400a77e	            0x750a	                           jne 0x400a78a	     17904	i386-dis.c	FUNCTION_99	IF_2
0x400a780	    0x8b0500000000	            mov eax, dword [0x0400a786] 	     17904	i386-dis.c	FUNCTION_99	IF_2
0x400a786	            0x85c0	                           test eax, eax	     17904	i386-dis.c	FUNCTION_99	IF_2
0x400a788	            0x7507	                           jne 0x400a791	     17904	i386-dis.c	FUNCTION_99	IF_2
0x400a78a	      0xe8e3e6ffff	                          call sym.BadOp	     17906	i386-dis.c	FUNCTION_99	IF_2	CALL_2
0x400a78f	            0xeb22	                           jmp 0x400a7b3	     17907	i386-dis.c	FUNCTION_99	IF_2
0x400a791	    0x488b05000000	            mov rax, qword [0x0400a798] 	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x400a798	    0x8b1500000000	            mov edx, dword [0x0400a79e] 	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x400a79e	          0x4863d2	                         movsxd rdx, edx	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x400a7a1	        0x48c1e203	                              shl rdx, 3	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x400a7a5	          0x4801d0	                            add rax, rdx	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x400a7a8	          0x488b00	                    mov rax, qword [rax]	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x400a7ab	          0x4889c7	                            mov rdi, rax	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x400a7ae	      0xe816a3ffff	                        call sym.oappend	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x400a7b3	              0xc9	                                   leave	     17911	i386-dis.c	FUNCTION_99
0x400a7b4	              0xc3	                                     ret	     17911	i386-dis.c	FUNCTION_99
putop	CALL,8:WHILE,2:functions,0:DO,0:ELSE,41:IF,111:SWITCH,3:FOR,1	1536
0x4003338	              0x55	                                push rbp	     13983	i386-dis.c	FUNCTION_17
0x4003339	          0x4889e5	                            mov rbp, rsp	     13983	i386-dis.c	FUNCTION_17
0x400333c	        0x4883ec40	                           sub rsp, 0x40	     13983	i386-dis.c	FUNCTION_17
0x4003340	        0x48897dc8	             mov qword [rbp - 0x38], rdi	     13983	i386-dis.c	FUNCTION_17
0x4003344	          0x8975c4	             mov dword [rbp - 0x3c], esi	     13983	i386-dis.c	FUNCTION_17
0x4003347	    0x64488b042528	                mov rax, qword fs:[0x28]	     13983	i386-dis.c	FUNCTION_17
0x4003350	        0x488945f8	                mov qword [rbp - 8], rax	     13983	i386-dis.c	FUNCTION_17
0x4003354	            0x31c0	                            xor eax, eax	     13983	i386-dis.c	FUNCTION_17
0x4003356	    0xc745d8000000	               mov dword [rbp - 0x28], 0	     13985	i386-dis.c	FUNCTION_17
0x400335d	    0xc745dc010000	               mov dword [rbp - 0x24], 1	     13986	i386-dis.c	FUNCTION_17
0x4003364	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     13987	i386-dis.c	FUNCTION_17
0x400336b	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	     13987	i386-dis.c	FUNCTION_17
0x4003372	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4003376	        0x488945e8	             mov qword [rbp - 0x18], rax	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400337a	      0xe908170000	                           jmp 0x4004a87	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400337f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003383	           0xfb600	                   movzx eax, byte [rax]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003386	           0xfbec0	                           movsx eax, al	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003389	          0x83e821	                           sub eax, 0x21	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400338c	          0x83f85c	                           cmp eax, 0x5c	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400338f	            0x770c	                            ja 0x400339d	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003391	            0x89c0	                            mov eax, eax	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003393	    0x488b04c50000	                  mov rax, qword [rax*8]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400339b	            0xffe0	                                 jmp rax	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400339d	    0x488b05000000	            mov rax, qword [0x040033a4] 	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40033a4	        0x488d5001	                      lea rdx, [rax + 1]	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40033a8	    0x488915000000	            mov qword [0x040033af], rdx 	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40033af	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40033b3	           0xfb612	                   movzx edx, byte [rdx]	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40033b6	            0x8810	                      mov byte [rax], dl	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40033b8	      0xe9be160000	                           jmp 0x4004a7b	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40033bd	        0x8345e401	               add dword [rbp - 0x1c], 1	     14004	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40033c1	      0xe9b5160000	                           jmp 0x4004a7b	     14005	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40033c6	    0xc745dc000000	               mov dword [rbp - 0x24], 0	     14007	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40033cd	      0xe9a9160000	                           jmp 0x4004a7b	     14008	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40033d2	     0xfb605000000	           movzx eax, byte [0x040033d9] 	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x40033d9	            0x84c0	                             test al, al	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x40033db	            0x742d	                            je 0x400340a	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x40033dd	            0xeb1b	                           jmp 0x40033fa	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x40033df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x40033e3	           0xfb600	                   movzx eax, byte [rax]	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x40033e6	            0x3c7d	                            cmp al, 0x7d	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x40033e8	            0x740b	                            je 0x40033f5	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x40033ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x40033ee	           0xfb600	                   movzx eax, byte [rax]	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x40033f1	            0x84c0	                             test al, al	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x40033f3	            0x7505	                           jne 0x40033fa	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x40033f5	      0xe800000000	                          call 0x40033fa	     14014	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x40033fa	      0x488345e801	               add qword [rbp - 0x18], 1	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x40033ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4003403	           0xfb600	                   movzx eax, byte [rax]	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4003406	            0x3c7c	                            cmp al, 0x7c	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4003408	            0x75d5	                           jne 0x40033df	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x400340a	    0xc745d8010000	               mov dword [rbp - 0x28], 1	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003411	      0xe96c160000	                           jmp 0x4004a82	     14019	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003416	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x400341a	           0xfb600	                   movzx eax, byte [rax]	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x400341d	            0x84c0	                             test al, al	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x400341f	            0x7505	                           jne 0x4003426	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x4003421	      0xe800000000	                          call 0x4003426	     14024	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	CALL_2
0x4003426	      0x488345e801	               add qword [rbp - 0x18], 1	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x400342b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x400342f	           0xfb600	                   movzx eax, byte [rax]	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x4003432	            0x3c7d	                            cmp al, 0x7d	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x4003434	            0x75e0	                           jne 0x4003416	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x4003436	      0xe940160000	                           jmp 0x4004a7b	     14026	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400343b	     0xfb605000000	           movzx eax, byte [0x04003442] 	     14030	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x4003442	            0x84c0	                             test al, al	     14030	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x4003444	     0xf85d9150000	                           jne 0x4004a23	     14030	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x400344a	    0x8b0500000000	            mov eax, dword [0x04003450] 	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4003450	          0x83f803	                              cmp eax, 3	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4003453	            0x750e	                           jne 0x4003463	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4003455	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4003458	          0x83e004	                              and eax, 4	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x400345b	            0x85c0	                           test eax, eax	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x400345d	     0xf84c3150000	                            je 0x4004a26	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4003463	    0x488b05000000	            mov rax, qword [0x0400346a] 	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x400346a	        0x488d5001	                      lea rdx, [rax + 1]	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x400346e	    0x488915000000	            mov qword [0x04003475], rdx 	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4003475	          0xc60062	                    mov byte [rax], 0x62	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4003478	      0xe9a9150000	                           jmp 0x4004a26	     14034	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400347d	        0x837de000	               cmp dword [rbp - 0x20], 0	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x4003481	            0x7540	                           jne 0x40034c3	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x4003483	        0x837de401	               cmp dword [rbp - 0x1c], 1	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x4003487	            0x753a	                           jne 0x40034c3	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x4003489	            0xeb01	                           jmp 0x400348c	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x400348b	              0x90	                                     nop	     14062	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1
0x400348c	     0xfb605000000	           movzx eax, byte [0x04003493] 	     14039	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_7
0x4003493	            0x84c0	                             test al, al	     14039	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_7
0x4003495	     0xf858e150000	                           jne 0x4004a29	     14039	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_7
0x400349b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x400349e	          0x83e004	                              and eax, 4	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40034a1	            0x85c0	                           test eax, eax	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40034a3	     0xf84c2000000	                            je 0x400356b	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40034a9	    0x488b05000000	            mov rax, qword [0x040034b0] 	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40034b0	        0x488d5001	                      lea rdx, [rax + 1]	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40034b4	    0x488915000000	            mov qword [0x040034bb], rdx 	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40034bb	          0xc60062	                    mov byte [rax], 0x62	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40034be	      0xe9a8000000	                           jmp 0x400356b	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40034c3	        0x837de001	               cmp dword [rbp - 0x20], 1	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034c7	            0x750e	                           jne 0x40034d7	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034c9	        0x837de402	               cmp dword [rbp - 0x1c], 2	     14047	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034cd	            0x7508	                           jne 0x40034d7	     14047	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034cf	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	     14048	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034d3	            0x3c4c	                            cmp al, 0x4c	     14048	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034d5	            0x742e	                            je 0x4003505	     14048	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034d7	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034da	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034dd	            0x7321	                           jae 0x4003500	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034df	        0x837de003	               cmp dword [rbp - 0x20], 3	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034e3	            0x771b	                            ja 0x4003500	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034e5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034e8	          0x8d5001	                      lea edx, [rax + 1]	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034eb	          0x8955e0	             mov dword [rbp - 0x20], edx	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034ee	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034f2	           0xfb612	                   movzx edx, byte [rdx]	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034f5	            0x89c0	                            mov eax, eax	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034f7	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40034fb	      0xe97b150000	                           jmp 0x4004a7b	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4003500	      0xe800000000	                          call 0x4003505	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4003505	    0x8b0500000000	            mov eax, dword [0x0400350b] 	     14054	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400350b	          0x83f802	                              cmp eax, 2	     14054	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400350e	     0xf8577ffffff	                           jne 0x400348b	     14054	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4003514	    0x8b0500000000	            mov eax, dword [0x0400351a] 	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400351a	      0x2500040000	                          and eax, 0x400	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400351f	            0x85c0	                           test eax, eax	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4003521	     0xf8564ffffff	                           jne 0x400348b	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4003527	    0x488b05000000	            mov rax, qword [0x0400352e] 	     14057	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400352e	        0x488d5001	                      lea rdx, [rax + 1]	     14057	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4003532	    0x488915000000	            mov qword [0x04003539], rdx 	     14057	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4003539	          0xc60061	                    mov byte [rax], 0x61	     14057	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400353c	    0x488b05000000	            mov rax, qword [0x04003543] 	     14058	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4003543	        0x488d5001	                      lea rdx, [rax + 1]	     14058	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4003547	    0x488915000000	            mov qword [0x0400354e], rdx 	     14058	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400354e	          0xc60062	                    mov byte [rax], 0x62	     14058	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4003551	    0x488b05000000	            mov rax, qword [0x04003558] 	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4003558	        0x488d5001	                      lea rdx, [rax + 1]	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400355c	    0x488915000000	            mov qword [0x04003563], rdx 	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4003563	          0xc60073	                    mov byte [rax], 0x73	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4003566	      0xe920ffffff	                           jmp 0x400348b	     14062	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1
0x400356b	      0xe90b150000	                           jmp 0x4004a7b	     14064	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003570	     0xfb605000000	           movzx eax, byte [0x04003577] 	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4003577	            0x84c0	                             test al, al	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4003579	            0x740a	                            je 0x4003585	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x400357b	        0x837dd800	               cmp dword [rbp - 0x28], 0	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x400357f	     0xf84a7140000	                            je 0x4004a2c	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4003585	    0x8b0500000000	            mov eax, dword [0x0400358b] 	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x400358b	      0x2500020000	                          and eax, 0x200	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4003590	            0x85c0	                           test eax, eax	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4003592	            0x750e	                           jne 0x40035a2	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4003594	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4003597	          0x83e004	                              and eax, 4	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x400359a	            0x85c0	                           test eax, eax	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x400359c	     0xf848d140000	                            je 0x4004a2f	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40035a2	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14070	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035a5	          0x83e001	                              and eax, 1	     14070	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035a8	            0x85c0	                           test eax, eax	     14070	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035aa	            0x742d	                            je 0x40035d9	     14070	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035ac	    0x488b05000000	            mov rax, qword [0x040035b3] 	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035b3	        0x488d5001	                      lea rdx, [rax + 1]	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035b7	    0x488915000000	            mov qword [0x040035be], rdx 	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035be	     0xfb615000000	           movzx edx, byte [0x040035c5] 	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035c5	            0x84d2	                             test dl, dl	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035c7	            0x7407	                            je 0x40035d0	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035c9	      0xba64000000	                           mov edx, 0x64	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035ce	            0xeb05	                           jmp 0x40035d5	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035d0	      0xba6c000000	                           mov edx, 0x6c	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035d5	            0x8810	                      mov byte [rax], dl	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035d7	            0xeb2b	                           jmp 0x4003604	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40035d9	    0x488b05000000	            mov rax, qword [0x040035e0] 	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40035e0	        0x488d5001	                      lea rdx, [rax + 1]	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40035e4	    0x488915000000	            mov qword [0x040035eb], rdx 	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40035eb	     0xfb615000000	           movzx edx, byte [0x040035f2] 	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40035f2	            0x84d2	                             test dl, dl	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40035f4	            0x7407	                            je 0x40035fd	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40035f6	      0xba77000000	                           mov edx, 0x77	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40035fb	            0xeb05	                           jmp 0x4003602	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40035fd	      0xba73000000	                           mov edx, 0x73	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x4003602	            0x8810	                      mov byte [rax], dl	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x4003604	    0x8b0500000000	            mov eax, dword [0x0400360a] 	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x400360a	      0x2500020000	                          and eax, 0x200	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x400360f	            0x89c2	                            mov edx, eax	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4003611	    0x8b0500000000	            mov eax, dword [0x04003617] 	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4003617	             0x9d0	                             or eax, edx	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4003619	    0x890500000000	            mov dword [0x0400361f], eax 	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x400361f	      0xe90b140000	                           jmp 0x4004a2f	     14076	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003624	     0xfb605000000	           movzx eax, byte [0x0400362b] 	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x400362b	            0x84c0	                             test al, al	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x400362d	     0xf8548140000	                           jne 0x4004a7b	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4003633	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4003636	          0x83e004	                              and eax, 4	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4003639	            0x85c0	                           test eax, eax	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x400363b	     0xf843a140000	                            je 0x4004a7b	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4003641	    0x8b0500000000	            mov eax, dword [0x04003647] 	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003647	          0x83e008	                              and eax, 8	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400364a	            0x85c0	                           test eax, eax	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400364c	            0x740f	                            je 0x400365d	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400364e	    0x8b0500000000	            mov eax, dword [0x04003654] 	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003654	          0x83c848	                            or eax, 0x48	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003657	    0x890500000000	            mov dword [0x0400365d], eax 	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400365d	    0x8b0500000000	            mov eax, dword [0x04003663] 	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x4003663	          0x83f803	                              cmp eax, 3	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x4003666	     0xf8593000000	                           jne 0x40036ff	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x400366c	    0x8b0500000000	            mov eax, dword [0x04003672] 	     14083	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x4003672	          0x83e008	                              and eax, 8	     14083	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x4003675	            0x85c0	                           test eax, eax	     14083	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x4003677	            0x741a	                            je 0x4003693	     14083	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x4003679	    0x488b05000000	            mov rax, qword [0x04003680] 	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x4003680	        0x488d5001	                      lea rdx, [rax + 1]	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x4003684	    0x488915000000	            mov qword [0x0400368b], rdx 	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x400368b	          0xc60071	                    mov byte [rax], 0x71	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x400368e	      0xe9e8130000	                           jmp 0x4004a7b	     14096	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x4003693	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14087	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x4003696	          0x83e001	                              and eax, 1	     14087	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x4003699	            0x85c0	                           test eax, eax	     14087	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x400369b	            0x742d	                            je 0x40036ca	     14087	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x400369d	    0x488b05000000	            mov rax, qword [0x040036a4] 	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40036a4	        0x488d5001	                      lea rdx, [rax + 1]	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40036a8	    0x488915000000	            mov qword [0x040036af], rdx 	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40036af	     0xfb615000000	           movzx edx, byte [0x040036b6] 	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40036b6	            0x84d2	                             test dl, dl	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40036b8	            0x7407	                            je 0x40036c1	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40036ba	      0xba64000000	                           mov edx, 0x64	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40036bf	            0xeb05	                           jmp 0x40036c6	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40036c1	      0xba6c000000	                           mov edx, 0x6c	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40036c6	            0x8810	                      mov byte [rax], dl	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40036c8	            0xeb15	                           jmp 0x40036df	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40036ca	    0x488b05000000	            mov rax, qword [0x040036d1] 	     14090	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	ELSE_4
0x40036d1	        0x488d5001	                      lea rdx, [rax + 1]	     14090	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	ELSE_4
0x40036d5	    0x488915000000	            mov qword [0x040036dc], rdx 	     14090	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	ELSE_4
0x40036dc	          0xc60077	                    mov byte [rax], 0x77	     14090	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	ELSE_4
0x40036df	    0x8b0500000000	            mov eax, dword [0x040036e5] 	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x40036e5	      0x2500020000	                          and eax, 0x200	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x40036ea	            0x89c2	                            mov edx, eax	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x40036ec	    0x8b0500000000	            mov eax, dword [0x040036f2] 	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x40036f2	             0x9d0	                             or eax, edx	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x40036f4	    0x890500000000	            mov dword [0x040036fa], eax 	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x40036fa	      0xe97c130000	                           jmp 0x4004a7b	     14096	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x40036ff	    0x488b05000000	            mov rax, qword [0x04003706] 	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x4003706	        0x488d5001	                      lea rdx, [rax + 1]	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x400370a	    0x488915000000	            mov qword [0x04003711], rdx 	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x4003711	          0xc60077	                    mov byte [rax], 0x77	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x4003714	      0xe962130000	                           jmp 0x4004a7b	     14096	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x4003719	    0x8b0500000000	            mov eax, dword [0x0400371f] 	     14098	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18
0x400371f	          0x83f802	                              cmp eax, 2	     14098	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18
0x4003722	            0x7538	                           jne 0x400375c	     14098	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18
0x4003724	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x4003727	          0x83e002	                              and eax, 2	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x400372a	            0x85c0	                           test eax, eax	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x400372c	            0x7417	                            je 0x4003745	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x400372e	    0x488b05000000	            mov rax, qword [0x04003735] 	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x4003735	        0x488d5001	                      lea rdx, [rax + 1]	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x4003739	    0x488915000000	            mov qword [0x04003740], rdx 	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x4003740	          0xc60072	                    mov byte [rax], 0x72	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x4003743	            0xeb36	                           jmp 0x400377b	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x4003745	    0x488b05000000	            mov rax, qword [0x0400374c] 	     14103	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	ELSE_6
0x400374c	        0x488d5001	                      lea rdx, [rax + 1]	     14103	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	ELSE_6
0x4003750	    0x488915000000	            mov qword [0x04003757], rdx 	     14103	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	ELSE_6
0x4003757	          0xc60065	                    mov byte [rax], 0x65	     14103	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	ELSE_6
0x400375a	            0xeb1f	                           jmp 0x400377b	     14103	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	ELSE_6
0x400375c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x400375f	          0x83e002	                              and eax, 2	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4003762	            0x85c0	                           test eax, eax	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4003764	            0x7415	                            je 0x400377b	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4003766	    0x488b05000000	            mov rax, qword [0x0400376d] 	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x400376d	        0x488d5001	                      lea rdx, [rax + 1]	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4003771	    0x488915000000	            mov qword [0x04003778], rdx 	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4003778	          0xc60065	                    mov byte [rax], 0x65	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x400377b	    0x8b0500000000	            mov eax, dword [0x04003781] 	     14108	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003781	      0x2500040000	                          and eax, 0x400	     14108	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003786	            0x89c2	                            mov edx, eax	     14108	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003788	    0x8b0500000000	            mov eax, dword [0x0400378e] 	     14108	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400378e	             0x9d0	                             or eax, edx	     14108	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003790	    0x890500000000	            mov dword [0x04003796], eax 	     14108	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003796	      0xe9e0120000	                           jmp 0x4004a7b	     14109	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400379b	     0xfb605000000	           movzx eax, byte [0x040037a2] 	     14111	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x40037a2	            0x84c0	                             test al, al	     14111	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x40037a4	     0xf8588120000	                           jne 0x4004a32	     14111	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x40037aa	    0x8b0500000000	            mov eax, dword [0x040037b0] 	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40037b0	      0x2500040000	                          and eax, 0x400	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40037b5	            0x85c0	                           test eax, eax	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40037b7	            0x750e	                           jne 0x40037c7	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40037b9	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40037bc	          0x83e004	                              and eax, 4	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40037bf	            0x85c0	                           test eax, eax	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40037c1	     0xf846e120000	                            je 0x4004a35	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40037c7	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037ca	          0x83e002	                              and eax, 2	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037cd	            0x85c0	                           test eax, eax	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037cf	            0x742d	                            je 0x40037fe	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037d1	    0x488b05000000	            mov rax, qword [0x040037d8] 	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037d8	        0x488d5001	                      lea rdx, [rax + 1]	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037dc	    0x488915000000	            mov qword [0x040037e3], rdx 	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037e3	    0x8b1500000000	            mov edx, dword [0x040037e9] 	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037e9	          0x83fa02	                              cmp edx, 2	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037ec	            0x7507	                           jne 0x40037f5	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037ee	      0xba71000000	                           mov edx, 0x71	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037f3	            0xeb05	                           jmp 0x40037fa	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037f5	      0xba6c000000	                           mov edx, 0x6c	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037fa	            0x8810	                      mov byte [rax], dl	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037fc	            0xeb2b	                           jmp 0x4003829	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40037fe	    0x488b05000000	            mov rax, qword [0x04003805] 	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4003805	        0x488d5001	                      lea rdx, [rax + 1]	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4003809	    0x488915000000	            mov qword [0x04003810], rdx 	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4003810	    0x8b1500000000	            mov edx, dword [0x04003816] 	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4003816	          0x83fa02	                              cmp edx, 2	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4003819	            0x7507	                           jne 0x4003822	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x400381b	      0xba6c000000	                           mov edx, 0x6c	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4003820	            0xeb05	                           jmp 0x4003827	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4003822	      0xba77000000	                           mov edx, 0x77	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4003827	            0x8810	                      mov byte [rax], dl	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4003829	    0x8b0500000000	            mov eax, dword [0x0400382f] 	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x400382f	      0x2500040000	                          and eax, 0x400	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4003834	            0x89c2	                            mov edx, eax	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4003836	    0x8b0500000000	            mov eax, dword [0x0400383c] 	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x400383c	             0x9d0	                             or eax, edx	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x400383e	    0x890500000000	            mov dword [0x04003844], eax 	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4003844	      0xe9ec110000	                           jmp 0x4004a35	     14121	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003849	     0xfb605000000	           movzx eax, byte [0x04003850] 	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4003850	            0x84c0	                             test al, al	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4003852	     0xf8523120000	                           jne 0x4004a7b	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4003858	    0x488b05000000	            mov rax, qword [0x0400385f] 	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x400385f	        0x4883e801	                              sub rax, 1	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4003863	           0xfb600	                   movzx eax, byte [rax]	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4003866	            0x3c73	                            cmp al, 0x73	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4003868	            0x740e	                            je 0x4003878	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x400386a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x400386d	          0x83e004	                              and eax, 4	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4003870	            0x85c0	                           test eax, eax	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4003872	     0xf8403120000	                            je 0x4004a7b	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4003878	    0x8b0500000000	            mov eax, dword [0x0400387e] 	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x400387e	          0x83e008	                              and eax, 8	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4003881	            0x85c0	                           test eax, eax	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4003883	            0x750a	                           jne 0x400388f	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4003885	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4003888	          0x83e001	                              and eax, 1	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x400388b	            0x85c0	                           test eax, eax	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x400388d	            0x7417	                            je 0x40038a6	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x400388f	    0x488b05000000	            mov rax, qword [0x04003896] 	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4003896	        0x488d5001	                      lea rdx, [rax + 1]	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x400389a	    0x488915000000	            mov qword [0x040038a1], rdx 	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x40038a1	          0xc6006c	                    mov byte [rax], 0x6c	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x40038a4	            0xeb15	                           jmp 0x40038bb	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x40038a6	    0x488b05000000	            mov rax, qword [0x040038ad] 	     14128	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_9
0x40038ad	        0x488d5001	                      lea rdx, [rax + 1]	     14128	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_9
0x40038b1	    0x488915000000	            mov qword [0x040038b8], rdx 	     14128	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_9
0x40038b8	          0xc60077	                    mov byte [rax], 0x77	     14128	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_9
0x40038bb	    0x8b0500000000	            mov eax, dword [0x040038c1] 	     14129	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40038c1	          0x83e008	                              and eax, 8	     14129	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40038c4	            0x85c0	                           test eax, eax	     14129	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40038c6	     0xf856c110000	                           jne 0x4004a38	     14129	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40038cc	    0x8b0500000000	            mov eax, dword [0x040038d2] 	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40038d2	      0x2500020000	                          and eax, 0x200	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40038d7	            0x89c2	                            mov edx, eax	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40038d9	    0x8b0500000000	            mov eax, dword [0x040038df] 	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40038df	             0x9d0	                             or eax, edx	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40038e1	    0x890500000000	            mov dword [0x040038e7], eax 	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40038e7	      0xe94c110000	                           jmp 0x4004a38	     14131	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40038ec	     0xfb605000000	           movzx eax, byte [0x040038f3] 	     14133	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x40038f3	            0x84c0	                             test al, al	     14133	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x40038f5	     0xf8540110000	                           jne 0x4004a3b	     14133	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x40038fb	    0x8b0500000000	            mov eax, dword [0x04003901] 	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003901	          0x83e028	                           and eax, 0x28	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003904	          0x83f808	                              cmp eax, 8	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003907	            0x7412	                            je 0x400391b	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003909	    0x8b0500000000	            mov eax, dword [0x0400390f] 	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400390f	          0x83e028	                           and eax, 0x28	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003912	          0x83f820	                           cmp eax, 0x20	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003915	     0xf8523110000	                           jne 0x4004a3e	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400391b	    0x8b0500000000	            mov eax, dword [0x04003921] 	     14138	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003921	          0x83e028	                           and eax, 0x28	     14138	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003924	            0x89c2	                            mov edx, eax	     14138	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003926	    0x8b0500000000	            mov eax, dword [0x0400392c] 	     14138	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400392c	             0x9d0	                             or eax, edx	     14138	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400392e	    0x890500000000	            mov dword [0x04003934], eax 	     14138	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003934	    0x488b05000000	            mov rax, qword [0x0400393b] 	     14139	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400393b	        0x488d5001	                      lea rdx, [rax + 1]	     14139	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400393f	    0x488915000000	            mov qword [0x04003946], rdx 	     14139	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003946	          0xc6002c	                    mov byte [rax], 0x2c	     14139	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003949	    0x488b05000000	            mov rax, qword [0x04003950] 	     14140	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003950	        0x488d5001	                      lea rdx, [rax + 1]	     14140	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4003954	    0x488915000000	            mov qword [0x0400395b], rdx 	     14140	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400395b	          0xc60070	                    mov byte [rax], 0x70	     14140	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400395e	    0x8b0500000000	            mov eax, dword [0x04003964] 	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4003964	          0x83e020	                           and eax, 0x20	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4003967	            0x85c0	                           test eax, eax	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4003969	            0x741a	                            je 0x4003985	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x400396b	    0x488b05000000	            mov rax, qword [0x04003972] 	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4003972	        0x488d5001	                      lea rdx, [rax + 1]	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4003976	    0x488915000000	            mov qword [0x0400397d], rdx 	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x400397d	          0xc60074	                    mov byte [rax], 0x74	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4003980	      0xe9b9100000	                           jmp 0x4004a3e	     14146	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003985	    0x488b05000000	            mov rax, qword [0x0400398c] 	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x400398c	        0x488d5001	                      lea rdx, [rax + 1]	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x4003990	    0x488915000000	            mov qword [0x04003997], rdx 	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x4003997	          0xc6006e	                    mov byte [rax], 0x6e	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x400399a	      0xe99f100000	                           jmp 0x4004a3e	     14146	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400399f	     0xfb605000000	           movzx eax, byte [0x040039a6] 	     14148	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x40039a6	            0x84c0	                             test al, al	     14148	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x40039a8	     0xf8593100000	                           jne 0x4004a41	     14148	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x40039ae	    0x488b05000000	            mov rax, qword [0x040039b5] 	     14150	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039b5	        0x488d5001	                      lea rdx, [rax + 1]	     14150	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039b9	    0x488915000000	            mov qword [0x040039c0], rdx 	     14150	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039c0	          0xc6006c	                    mov byte [rax], 0x6c	     14150	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039c3	      0xe9b3100000	                           jmp 0x4004a7b	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039c8	    0x8b0500000000	            mov eax, dword [0x040039ce] 	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039ce	          0x83e008	                              and eax, 8	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039d1	            0x85c0	                           test eax, eax	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039d3	            0x740f	                            je 0x40039e4	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039d5	    0x8b0500000000	            mov eax, dword [0x040039db] 	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039db	          0x83c848	                            or eax, 0x48	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039de	    0x890500000000	            mov dword [0x040039e4], eax 	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40039e4	    0x8b0500000000	            mov eax, dword [0x040039ea] 	     14154	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x40039ea	          0x83e008	                              and eax, 8	     14154	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x40039ed	            0x85c0	                           test eax, eax	     14154	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x40039ef	            0x741a	                            je 0x4003a0b	     14154	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x40039f1	    0x488b05000000	            mov rax, qword [0x040039f8] 	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x40039f8	        0x488d5001	                      lea rdx, [rax + 1]	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x40039fc	    0x488915000000	            mov qword [0x04003a03], rdx 	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x4003a03	          0xc60071	                    mov byte [rax], 0x71	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x4003a06	      0xe970100000	                           jmp 0x4004a7b	     14158	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4003a0b	    0x488b05000000	            mov rax, qword [0x04003a12] 	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4003a12	        0x488d5001	                      lea rdx, [rax + 1]	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4003a16	    0x488915000000	            mov qword [0x04003a1d], rdx 	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4003a1d	          0xc60064	                    mov byte [rax], 0x64	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4003a20	      0xe956100000	                           jmp 0x4004a7b	     14158	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4003a25	        0x837de000	               cmp dword [rbp - 0x20], 0	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4003a29	            0x750a	                           jne 0x4003a35	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4003a2b	        0x837de401	               cmp dword [rbp - 0x1c], 1	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4003a2f	     0xf84f8000000	                            je 0x4003b2d	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4003a35	        0x837de001	               cmp dword [rbp - 0x20], 1	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a39	            0x750e	                           jne 0x4003a49	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a3b	        0x837de402	               cmp dword [rbp - 0x1c], 2	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a3f	            0x7508	                           jne 0x4003a49	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a41	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a45	            0x3c58	                            cmp al, 0x58	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a47	            0x742e	                            je 0x4003a77	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a49	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a4c	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a4f	            0x7321	                           jae 0x4003a72	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a51	        0x837de003	               cmp dword [rbp - 0x20], 3	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a55	            0x771b	                            ja 0x4003a72	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a57	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a5a	          0x8d5001	                      lea edx, [rax + 1]	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a5d	          0x8955e0	             mov dword [rbp - 0x20], edx	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a60	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a64	           0xfb612	                   movzx edx, byte [rdx]	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a67	            0x89c0	                            mov eax, eax	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a69	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a6d	      0xe909100000	                           jmp 0x4004a7b	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a72	      0xe800000000	                          call 0x4003a77	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4003a77	     0xfb605000000	           movzx eax, byte [0x04003a7e] 	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4003a7e	            0x84c0	                             test al, al	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4003a80	            0x740a	                            je 0x4003a8c	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4003a82	    0x8b0500000000	            mov eax, dword [0x04003a88] 	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4003a88	            0x85c0	                           test eax, eax	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4003a8a	            0x7505	                           jne 0x4003a91	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4003a8c	      0xe800000000	                          call 0x4003a91	     14168	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	CALL_3
0x4003a91	     0xfb605000000	           movzx eax, byte [0x04003a98] 	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003a98	            0x84c0	                             test al, al	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003a9a	     0xf85db0f0000	                           jne 0x4004a7b	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003aa0	    0x8b0500000000	            mov eax, dword [0x04003aa6] 	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003aa6	          0x83f803	                              cmp eax, 3	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003aa9	            0x740a	                            je 0x4003ab5	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003aab	    0x8b0500000000	            mov eax, dword [0x04003ab1] 	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003ab1	            0x85c0	                           test eax, eax	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003ab3	            0x740e	                            je 0x4003ac3	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003ab5	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003ab8	          0x83e004	                              and eax, 4	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003abb	            0x85c0	                           test eax, eax	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003abd	     0xf84b80f0000	                            je 0x4004a7b	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4003ac3	    0x8b0500000000	            mov eax, dword [0x04003ac9] 	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003ac9	      0x3d00010000	                          cmp eax, 0x100	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003ace	            0x7425	                            je 0x4003af5	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003ad0	      0x3d00020000	                          cmp eax, 0x200	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003ad5	            0x7435	                            je 0x4003b0c	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003ad7	      0x3d80000000	                           cmp eax, 0x80	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003adc	            0x7545	                           jne 0x4003b23	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003ade	    0x488b05000000	            mov rax, qword [0x04003ae5] 	     14175	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003ae5	        0x488d5001	                      lea rdx, [rax + 1]	     14175	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003ae9	    0x488915000000	            mov qword [0x04003af0], rdx 	     14175	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003af0	          0xc60078	                    mov byte [rax], 0x78	     14175	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003af3	            0xeb33	                           jmp 0x4003b28	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003af5	    0x488b05000000	            mov rax, qword [0x04003afc] 	     14178	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003afc	        0x488d5001	                      lea rdx, [rax + 1]	     14178	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003b00	    0x488915000000	            mov qword [0x04003b07], rdx 	     14178	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003b07	          0xc60079	                    mov byte [rax], 0x79	     14178	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003b0a	            0xeb1c	                           jmp 0x4003b28	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003b0c	    0x488b05000000	            mov rax, qword [0x04003b13] 	     14181	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003b13	        0x488d5001	                      lea rdx, [rax + 1]	     14181	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003b17	    0x488915000000	            mov qword [0x04003b1e], rdx 	     14181	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003b1e	          0xc6007a	                    mov byte [rax], 0x7a	     14181	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003b21	            0xeb05	                           jmp 0x4003b28	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4003b23	      0xe800000000	                          call 0x4003b28	     14184	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2	CALL_4
0x4003b28	      0xe94e0f0000	                           jmp 0x4004a7b	     14186	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4003b2d	     0xfb605000000	           movzx eax, byte [0x04003b34] 	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4003b34	            0x84c0	                             test al, al	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4003b36	     0xf85080f0000	                           jne 0x4004a44	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4003b3c	    0x8b0500000000	            mov eax, dword [0x04003b42] 	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b42	          0x83f802	                              cmp eax, 2	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b45	            0x755e	                           jne 0x4003ba5	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b47	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b4a	          0x83e004	                              and eax, 4	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b4d	            0x85c0	                           test eax, eax	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b4f	            0x7454	                            je 0x4003ba5	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b51	    0x488b05000000	            mov rax, qword [0x04003b58] 	     14192	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b58	        0x488d5001	                      lea rdx, [rax + 1]	     14192	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b5c	    0x488915000000	            mov qword [0x04003b63], rdx 	     14192	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b63	          0xc60071	                    mov byte [rax], 0x71	     14192	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b66	      0xe9100f0000	                           jmp 0x4004a7b	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4003b6b	        0x837de000	               cmp dword [rbp - 0x20], 0	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b6f	            0x7506	                           jne 0x4003b77	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b71	        0x837de401	               cmp dword [rbp - 0x1c], 1	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b75	            0x742f	                            je 0x4003ba6	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b77	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b7a	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b7d	            0x7321	                           jae 0x4003ba0	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b7f	        0x837de003	               cmp dword [rbp - 0x20], 3	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b83	            0x771b	                            ja 0x4003ba0	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b85	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b88	          0x8d5001	                      lea edx, [rax + 1]	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b8b	          0x8955e0	             mov dword [rbp - 0x20], edx	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b8e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b92	           0xfb612	                   movzx edx, byte [rdx]	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b95	            0x89c0	                            mov eax, eax	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b97	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003b9b	      0xe9db0e0000	                           jmp 0x4004a7b	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003ba0	      0xe800000000	                          call 0x4003ba5	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4003ba5	              0x90	                                     nop	     14196	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003ba6	     0xfb605000000	           movzx eax, byte [0x04003bad] 	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x4003bad	            0x84c0	                             test al, al	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x4003baf	     0xf85920e0000	                           jne 0x4004a47	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x4003bb5	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4003bb8	          0x83e004	                              and eax, 4	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4003bbb	            0x85c0	                           test eax, eax	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4003bbd	     0xf84870e0000	                            je 0x4004a4a	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4003bc3	    0x488b05000000	            mov rax, qword [0x04003bca] 	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4003bca	        0x488d5001	                      lea rdx, [rax + 1]	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4003bce	    0x488915000000	            mov qword [0x04003bd5], rdx 	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4003bd5	          0xc6006c	                    mov byte [rax], 0x6c	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4003bd8	      0xe96d0e0000	                           jmp 0x4004a4a	     14208	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003bdd	     0xfb605000000	           movzx eax, byte [0x04003be4] 	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4003be4	           0xfbec0	                           movsx eax, al	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4003be7	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4003bea	     0xf845d0e0000	                            je 0x4004a4d	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4003bf0	    0x488b05000000	            mov rax, qword [0x04003bf7] 	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4003bf7	        0x488d5001	                      lea rdx, [rax + 1]	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4003bfb	    0x488915000000	            mov qword [0x04003c02], rdx 	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4003c02	          0xc60072	                    mov byte [rax], 0x72	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4003c05	      0xe9430e0000	                           jmp 0x4004a4d	     14212	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003c0a	    0x8b0500000000	            mov eax, dword [0x04003c10] 	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4003c10	      0x2500080000	                          and eax, 0x800	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4003c15	            0x85c0	                           test eax, eax	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4003c17	            0x751a	                           jne 0x4003c33	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4003c19	    0x488b05000000	            mov rax, qword [0x04003c20] 	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4003c20	        0x488d5001	                      lea rdx, [rax + 1]	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4003c24	    0x488915000000	            mov qword [0x04003c2b], rdx 	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4003c2b	          0xc6006e	                    mov byte [rax], 0x6e	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4003c2e	      0xe9480e0000	                           jmp 0x4004a7b	     14218	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003c33	    0x8b0500000000	            mov eax, dword [0x04003c39] 	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4003c39	          0x80cc08	                                or ah, 8	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4003c3c	    0x890500000000	            mov dword [0x04003c42], eax 	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4003c42	      0xe9340e0000	                           jmp 0x4004a7b	     14218	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003c47	    0x8b0500000000	            mov eax, dword [0x04003c4d] 	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003c4d	          0x83e008	                              and eax, 8	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003c50	            0x85c0	                           test eax, eax	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003c52	            0x740f	                            je 0x4003c63	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003c54	    0x8b0500000000	            mov eax, dword [0x04003c5a] 	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003c5a	          0x83c848	                            or eax, 0x48	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003c5d	    0x890500000000	            mov dword [0x04003c63], eax 	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003c63	    0x8b0500000000	            mov eax, dword [0x04003c69] 	     14221	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4003c69	          0x83e008	                              and eax, 8	     14221	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4003c6c	            0x85c0	                           test eax, eax	     14221	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4003c6e	            0x7417	                            je 0x4003c87	     14221	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4003c70	    0x488b05000000	            mov rax, qword [0x04003c77] 	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4003c77	        0x488d5001	                      lea rdx, [rax + 1]	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4003c7b	    0x488915000000	            mov qword [0x04003c82], rdx 	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4003c82	          0xc6006f	                    mov byte [rax], 0x6f	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4003c85	            0xeb41	                           jmp 0x4003cc8	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4003c87	     0xfb605000000	           movzx eax, byte [0x04003c8e] 	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003c8e	            0x84c0	                             test al, al	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003c90	            0x7421	                            je 0x4003cb3	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003c92	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003c95	          0x83e001	                              and eax, 1	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003c98	            0x85c0	                           test eax, eax	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003c9a	            0x7417	                            je 0x4003cb3	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003c9c	    0x488b05000000	            mov rax, qword [0x04003ca3] 	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003ca3	        0x488d5001	                      lea rdx, [rax + 1]	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003ca7	    0x488915000000	            mov qword [0x04003cae], rdx 	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003cae	          0xc60071	                    mov byte [rax], 0x71	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003cb1	            0xeb15	                           jmp 0x4003cc8	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4003cb3	    0x488b05000000	            mov rax, qword [0x04003cba] 	     14226	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_14
0x4003cba	        0x488d5001	                      lea rdx, [rax + 1]	     14226	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_14
0x4003cbe	    0x488915000000	            mov qword [0x04003cc5], rdx 	     14226	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_14
0x4003cc5	          0xc60064	                    mov byte [rax], 0x64	     14226	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_14
0x4003cc8	    0x8b0500000000	            mov eax, dword [0x04003cce] 	     14227	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4003cce	          0x83e008	                              and eax, 8	     14227	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4003cd1	            0x85c0	                           test eax, eax	     14227	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4003cd3	     0xf85770d0000	                           jne 0x4004a50	     14227	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4003cd9	    0x8b0500000000	            mov eax, dword [0x04003cdf] 	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4003cdf	      0x2500020000	                          and eax, 0x200	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4003ce4	            0x89c2	                            mov edx, eax	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4003ce6	    0x8b0500000000	            mov eax, dword [0x04003cec] 	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4003cec	             0x9d0	                             or eax, edx	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4003cee	    0x890500000000	            mov dword [0x04003cf4], eax 	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4003cf4	      0xe9570d0000	                           jmp 0x4004a50	     14229	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003cf9	     0xfb605000000	           movzx eax, byte [0x04003d00] 	     14231	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d00	            0x84c0	                             test al, al	     14231	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d02	            0x7530	                           jne 0x4003d34	     14231	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d04	    0x8b0500000000	            mov eax, dword [0x04003d0a] 	     14232	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d0a	          0x83f802	                              cmp eax, 2	     14232	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d0d	            0x7525	                           jne 0x4003d34	     14232	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d0f	    0x8b0500000000	            mov eax, dword [0x04003d15] 	     14233	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d15	          0x83f801	                              cmp eax, 1	     14233	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d18	            0x751a	                           jne 0x4003d34	     14233	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d1a	    0x488b05000000	            mov rax, qword [0x04003d21] 	     14235	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d21	        0x488d5001	                      lea rdx, [rax + 1]	     14235	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d25	    0x488915000000	            mov qword [0x04003d2c], rdx 	     14235	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d2c	          0xc60071	                    mov byte [rax], 0x71	     14235	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d2f	      0xe9470d0000	                           jmp 0x4004a7b	     14236	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4003d34	     0xfb605000000	           movzx eax, byte [0x04003d3b] 	     14240	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d3b	            0x84c0	                             test al, al	     14240	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d3d	            0x7552	                           jne 0x4003d91	     14240	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d3f	    0x8b0500000000	            mov eax, dword [0x04003d45] 	     14241	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d45	          0x83f802	                              cmp eax, 2	     14241	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d48	            0x7547	                           jne 0x4003d91	     14241	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d4a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d4d	          0x83e001	                              and eax, 1	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d50	            0x85c0	                           test eax, eax	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d52	            0x750d	                           jne 0x4003d61	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d54	    0x8b0500000000	            mov eax, dword [0x04003d5a] 	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d5a	          0x83e008	                              and eax, 8	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d5d	            0x85c0	                           test eax, eax	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d5f	            0x7430	                            je 0x4003d91	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d61	    0x488b05000000	            mov rax, qword [0x04003d68] 	     14244	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d68	        0x488d5001	                      lea rdx, [rax + 1]	     14244	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d6c	    0x488915000000	            mov qword [0x04003d73], rdx 	     14244	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d73	          0xc60071	                    mov byte [rax], 0x71	     14244	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d76	      0xe9000d0000	                           jmp 0x4004a7b	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4003d7b	        0x837de000	               cmp dword [rbp - 0x20], 0	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x4003d7f	     0xf853e010000	                           jne 0x4003ec3	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x4003d85	        0x837de401	               cmp dword [rbp - 0x1c], 1	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x4003d89	     0xf8534010000	                           jne 0x4003ec3	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x4003d8f	            0xeb01	                           jmp 0x4003d92	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x4003d91	              0x90	                                     nop	     14248	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003d92	     0xfb605000000	           movzx eax, byte [0x04003d99] 	     14253	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x4003d99	            0x84c0	                             test al, al	     14253	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x4003d9b	            0x7463	                            je 0x4003e00	     14253	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x4003d9d	    0x8b0500000000	            mov eax, dword [0x04003da3] 	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003da3	          0x83e008	                              and eax, 8	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003da6	            0x85c0	                           test eax, eax	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003da8	     0xf85a50c0000	                           jne 0x4004a53	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003dae	    0x8b0500000000	            mov eax, dword [0x04003db4] 	     14256	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003db4	      0x2500020000	                          and eax, 0x200	     14256	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003db9	            0x85c0	                           test eax, eax	     14256	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003dbb	     0xf84920c0000	                            je 0x4004a53	     14256	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003dc1	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14258	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4003dc4	          0x83e001	                              and eax, 1	     14258	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4003dc7	            0x85c0	                           test eax, eax	     14258	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4003dc9	            0x7515	                           jne 0x4003de0	     14258	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4003dcb	    0x488b05000000	            mov rax, qword [0x04003dd2] 	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4003dd2	        0x488d5001	                      lea rdx, [rax + 1]	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4003dd6	    0x488915000000	            mov qword [0x04003ddd], rdx 	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4003ddd	          0xc60077	                    mov byte [rax], 0x77	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4003de0	    0x8b0500000000	            mov eax, dword [0x04003de6] 	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003de6	      0x2500020000	                          and eax, 0x200	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003deb	            0x89c2	                            mov edx, eax	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003ded	    0x8b0500000000	            mov eax, dword [0x04003df3] 	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003df3	             0x9d0	                             or eax, edx	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003df5	    0x890500000000	            mov dword [0x04003dfb], eax 	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4003dfb	      0xe9530c0000	                           jmp 0x4004a53	     14262	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x4003e00	    0x8b0500000000	            mov eax, dword [0x04003e06] 	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e06	      0x2500020000	                          and eax, 0x200	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e0b	            0x85c0	                           test eax, eax	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e0d	            0x751b	                           jne 0x4003e2a	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e0f	    0x8b0500000000	            mov eax, dword [0x04003e15] 	     14265	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e15	          0x83e008	                              and eax, 8	     14265	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e18	            0x85c0	                           test eax, eax	     14265	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e1a	            0x750e	                           jne 0x4003e2a	     14265	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e1c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e1f	          0x83e004	                              and eax, 4	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e22	            0x85c0	                           test eax, eax	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e24	     0xf84b4010000	                            je 0x4003fde	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e2a	    0x8b0500000000	            mov eax, dword [0x04003e30] 	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e30	          0x83e008	                              and eax, 8	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e33	            0x85c0	                           test eax, eax	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e35	            0x740f	                            je 0x4003e46	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e37	    0x8b0500000000	            mov eax, dword [0x04003e3d] 	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e3d	          0x83c848	                            or eax, 0x48	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e40	    0x890500000000	            mov dword [0x04003e46], eax 	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e46	    0x8b0500000000	            mov eax, dword [0x04003e4c] 	     14269	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4003e4c	          0x83e008	                              and eax, 8	     14269	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4003e4f	            0x85c0	                           test eax, eax	     14269	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4003e51	            0x741a	                            je 0x4003e6d	     14269	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4003e53	    0x488b05000000	            mov rax, qword [0x04003e5a] 	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4003e5a	        0x488d5001	                      lea rdx, [rax + 1]	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4003e5e	    0x488915000000	            mov qword [0x04003e65], rdx 	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4003e65	          0xc60071	                    mov byte [rax], 0x71	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4003e68	      0xe971010000	                           jmp 0x4003fde	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003e6d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14273	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4003e70	          0x83e001	                              and eax, 1	     14273	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4003e73	            0x85c0	                           test eax, eax	     14273	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4003e75	            0x7417	                            je 0x4003e8e	     14273	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4003e77	    0x488b05000000	            mov rax, qword [0x04003e7e] 	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4003e7e	        0x488d5001	                      lea rdx, [rax + 1]	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4003e82	    0x488915000000	            mov qword [0x04003e89], rdx 	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4003e89	          0xc6006c	                    mov byte [rax], 0x6c	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4003e8c	            0xeb15	                           jmp 0x4003ea3	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4003e8e	    0x488b05000000	            mov rax, qword [0x04003e95] 	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x4003e95	        0x488d5001	                      lea rdx, [rax + 1]	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x4003e99	    0x488915000000	            mov qword [0x04003ea0], rdx 	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x4003ea0	          0xc60077	                    mov byte [rax], 0x77	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x4003ea3	    0x8b0500000000	            mov eax, dword [0x04003ea9] 	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4003ea9	      0x2500020000	                          and eax, 0x200	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4003eae	            0x89c2	                            mov edx, eax	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4003eb0	    0x8b0500000000	            mov eax, dword [0x04003eb6] 	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4003eb6	             0x9d0	                             or eax, edx	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4003eb8	    0x890500000000	            mov dword [0x04003ebe], eax 	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4003ebe	      0xe91b010000	                           jmp 0x4003fde	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003ec3	        0x837de001	               cmp dword [rbp - 0x20], 1	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ec7	            0x750e	                           jne 0x4003ed7	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ec9	        0x837de402	               cmp dword [rbp - 0x1c], 2	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ecd	            0x7508	                           jne 0x4003ed7	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ecf	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ed3	            0x3c4c	                            cmp al, 0x4c	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ed5	            0x742e	                            je 0x4003f05	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ed7	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003eda	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003edd	            0x7321	                           jae 0x4003f00	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003edf	        0x837de003	               cmp dword [rbp - 0x20], 3	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ee3	            0x771b	                            ja 0x4003f00	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ee5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ee8	          0x8d5001	                      lea edx, [rax + 1]	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003eeb	          0x8955e0	             mov dword [rbp - 0x20], edx	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003eee	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ef2	           0xfb612	                   movzx edx, byte [rdx]	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ef5	            0x89c0	                            mov eax, eax	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003ef7	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003efb	      0xe97b0b0000	                           jmp 0x4004a7b	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003f00	      0xe800000000	                          call 0x4003f05	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4003f05	    0x8b0500000000	            mov eax, dword [0x04003f0b] 	     14289	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f0b	      0x2500020000	                          and eax, 0x200	     14289	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f10	            0x85c0	                           test eax, eax	     14289	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f12	            0x751b	                           jne 0x4003f2f	     14289	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f14	    0x8b0500000000	            mov eax, dword [0x04003f1a] 	     14290	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f1a	          0x83e008	                              and eax, 8	     14290	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f1d	            0x85c0	                           test eax, eax	     14290	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f1f	            0x750e	                           jne 0x4003f2f	     14290	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f21	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f24	          0x83e004	                              and eax, 4	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f27	            0x85c0	                           test eax, eax	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f29	     0xf84270b0000	                            je 0x4004a56	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f2f	    0x8b0500000000	            mov eax, dword [0x04003f35] 	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f35	          0x83e008	                              and eax, 8	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f38	            0x85c0	                           test eax, eax	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f3a	            0x740f	                            je 0x4003f4b	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f3c	    0x8b0500000000	            mov eax, dword [0x04003f42] 	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f42	          0x83c848	                            or eax, 0x48	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f45	    0x890500000000	            mov dword [0x04003f4b], eax 	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4003f4b	    0x8b0500000000	            mov eax, dword [0x04003f51] 	     14294	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4003f51	          0x83e008	                              and eax, 8	     14294	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4003f54	            0x85c0	                           test eax, eax	     14294	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4003f56	            0x741a	                            je 0x4003f72	     14294	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4003f58	    0x488b05000000	            mov rax, qword [0x04003f5f] 	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4003f5f	        0x488d5001	                      lea rdx, [rax + 1]	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4003f63	    0x488915000000	            mov qword [0x04003f6a], rdx 	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4003f6a	          0xc60071	                    mov byte [rax], 0x71	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4003f6d	      0xe9e40a0000	                           jmp 0x4004a56	     14306	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003f72	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14298	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003f75	          0x83e001	                              and eax, 1	     14298	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003f78	            0x85c0	                           test eax, eax	     14298	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003f7a	            0x742d	                            je 0x4003fa9	     14298	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003f7c	    0x488b05000000	            mov rax, qword [0x04003f83] 	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003f83	        0x488d5001	                      lea rdx, [rax + 1]	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003f87	    0x488915000000	            mov qword [0x04003f8e], rdx 	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003f8e	     0xfb615000000	           movzx edx, byte [0x04003f95] 	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003f95	            0x84d2	                             test dl, dl	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003f97	            0x7407	                            je 0x4003fa0	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003f99	      0xba64000000	                           mov edx, 0x64	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003f9e	            0xeb05	                           jmp 0x4003fa5	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003fa0	      0xba6c000000	                           mov edx, 0x6c	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003fa5	            0x8810	                      mov byte [rax], dl	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003fa7	            0xeb15	                           jmp 0x4003fbe	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4003fa9	    0x488b05000000	            mov rax, qword [0x04003fb0] 	     14301	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	ELSE_19
0x4003fb0	        0x488d5001	                      lea rdx, [rax + 1]	     14301	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	ELSE_19
0x4003fb4	    0x488915000000	            mov qword [0x04003fbb], rdx 	     14301	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	ELSE_19
0x4003fbb	          0xc60077	                    mov byte [rax], 0x77	     14301	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	ELSE_19
0x4003fbe	    0x8b0500000000	            mov eax, dword [0x04003fc4] 	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4003fc4	      0x2500020000	                          and eax, 0x200	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4003fc9	            0x89c2	                            mov edx, eax	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4003fcb	    0x8b0500000000	            mov eax, dword [0x04003fd1] 	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4003fd1	             0x9d0	                             or eax, edx	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4003fd3	    0x890500000000	            mov dword [0x04003fd9], eax 	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4003fd9	      0xe9780a0000	                           jmp 0x4004a56	     14306	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003fde	              0x90	                                     nop	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4003fdf	      0xe9720a0000	                           jmp 0x4004a56	     14306	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4003fe4	     0xfb605000000	           movzx eax, byte [0x04003feb] 	     14308	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x4003feb	            0x84c0	                             test al, al	     14308	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x4003fed	     0xf85660a0000	                           jne 0x4004a59	     14308	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x4003ff3	    0x8b0500000000	            mov eax, dword [0x04003ff9] 	     14310	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4003ff9	          0x83f802	                              cmp eax, 2	     14310	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4003ffc	            0x7560	                           jne 0x400405e	     14310	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4003ffe	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4004001	          0x83e001	                              and eax, 1	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4004004	            0x85c0	                           test eax, eax	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4004006	            0x750d	                           jne 0x4004015	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4004008	    0x8b0500000000	            mov eax, dword [0x0400400e] 	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x400400e	          0x83e008	                              and eax, 8	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4004011	            0x85c0	                           test eax, eax	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4004013	            0x7449	                            je 0x400405e	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4004015	    0x8b0500000000	            mov eax, dword [0x0400401b] 	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x400401b	          0x83f803	                              cmp eax, 3	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x400401e	            0x750e	                           jne 0x400402e	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4004020	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4004023	          0x83e004	                              and eax, 4	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4004026	            0x85c0	                           test eax, eax	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4004028	     0xf842e0a0000	                            je 0x4004a5c	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x400402e	    0x488b05000000	            mov rax, qword [0x04004035] 	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4004035	        0x488d5001	                      lea rdx, [rax + 1]	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4004039	    0x488915000000	            mov qword [0x04004040], rdx 	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4004040	          0xc60071	                    mov byte [rax], 0x71	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4004043	      0xe9140a0000	                           jmp 0x4004a5c	     14315	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4004048	        0x837de000	               cmp dword [rbp - 0x20], 0	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x400404c	     0xf85ea000000	                           jne 0x400413c	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4004052	        0x837de401	               cmp dword [rbp - 0x1c], 1	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4004056	     0xf85e0000000	                           jne 0x400413c	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x400405c	            0xeb01	                           jmp 0x400405f	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x400405e	              0x90	                                     nop	     14318	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400405f	     0xfb605000000	           movzx eax, byte [0x04004066] 	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4004066	            0x84c0	                             test al, al	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4004068	            0x740a	                            je 0x4004074	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x400406a	        0x837dd800	               cmp dword [rbp - 0x28], 0	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x400406e	     0xf84eb090000	                            je 0x4004a5f	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4004074	    0x8b0500000000	            mov eax, dword [0x0400407a] 	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x400407a	          0x83e008	                              and eax, 8	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x400407d	            0x85c0	                           test eax, eax	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x400407f	            0x740f	                            je 0x4004090	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4004081	    0x8b0500000000	            mov eax, dword [0x04004087] 	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4004087	          0x83c848	                            or eax, 0x48	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x400408a	    0x890500000000	            mov dword [0x04004090], eax 	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4004090	    0x8b0500000000	            mov eax, dword [0x04004096] 	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4004096	          0x83f803	                              cmp eax, 3	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4004099	            0x750e	                           jne 0x40040a9	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400409b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400409e	          0x83e004	                              and eax, 4	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40040a1	            0x85c0	                           test eax, eax	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40040a3	     0xf845a010000	                            je 0x4004203	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40040a9	    0x8b0500000000	            mov eax, dword [0x040040af] 	     14328	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x40040af	          0x83e008	                              and eax, 8	     14328	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x40040b2	            0x85c0	                           test eax, eax	     14328	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x40040b4	            0x741a	                            je 0x40040d0	     14328	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x40040b6	    0x488b05000000	            mov rax, qword [0x040040bd] 	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x40040bd	        0x488d5001	                      lea rdx, [rax + 1]	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x40040c1	    0x488915000000	            mov qword [0x040040c8], rdx 	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x40040c8	          0xc60071	                    mov byte [rax], 0x71	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x40040cb	      0xe933010000	                           jmp 0x4004203	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40040d0	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040d3	          0x83e001	                              and eax, 1	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040d6	            0x85c0	                           test eax, eax	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040d8	            0x742d	                            je 0x4004107	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040da	    0x488b05000000	            mov rax, qword [0x040040e1] 	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040e1	        0x488d5001	                      lea rdx, [rax + 1]	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040e5	    0x488915000000	            mov qword [0x040040ec], rdx 	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040ec	     0xfb615000000	           movzx edx, byte [0x040040f3] 	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040f3	            0x84d2	                             test dl, dl	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040f5	            0x7407	                            je 0x40040fe	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040f7	      0xba64000000	                           mov edx, 0x64	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040fc	            0xeb05	                           jmp 0x4004103	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40040fe	      0xba6c000000	                           mov edx, 0x6c	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4004103	            0x8810	                      mov byte [rax], dl	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4004105	            0xeb15	                           jmp 0x400411c	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4004107	    0x488b05000000	            mov rax, qword [0x0400410e] 	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x400410e	        0x488d5001	                      lea rdx, [rax + 1]	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x4004112	    0x488915000000	            mov qword [0x04004119], rdx 	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x4004119	          0xc60077	                    mov byte [rax], 0x77	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x400411c	    0x8b0500000000	            mov eax, dword [0x04004122] 	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4004122	      0x2500020000	                          and eax, 0x200	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4004127	            0x89c2	                            mov edx, eax	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4004129	    0x8b0500000000	            mov eax, dword [0x0400412f] 	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x400412f	             0x9d0	                             or eax, edx	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4004131	    0x890500000000	            mov dword [0x04004137], eax 	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4004137	      0xe9c7000000	                           jmp 0x4004203	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400413c	        0x837de001	               cmp dword [rbp - 0x20], 1	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004140	            0x750e	                           jne 0x4004150	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004142	        0x837de402	               cmp dword [rbp - 0x1c], 2	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004146	            0x7508	                           jne 0x4004150	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004148	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x400414c	            0x3c4c	                            cmp al, 0x4c	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x400414e	            0x742e	                            je 0x400417e	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004150	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004153	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004156	            0x7321	                           jae 0x4004179	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004158	        0x837de003	               cmp dword [rbp - 0x20], 3	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x400415c	            0x771b	                            ja 0x4004179	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x400415e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004161	          0x8d5001	                      lea edx, [rax + 1]	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004164	          0x8955e0	             mov dword [rbp - 0x20], edx	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004167	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x400416b	           0xfb612	                   movzx edx, byte [rdx]	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x400416e	            0x89c0	                            mov eax, eax	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004170	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004174	      0xe902090000	                           jmp 0x4004a7b	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4004179	      0xe800000000	                          call 0x400417e	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x400417e	     0xfb605000000	           movzx eax, byte [0x04004185] 	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4004185	            0x84c0	                             test al, al	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4004187	     0xf85ee080000	                           jne 0x4004a7b	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x400418d	    0x8b0500000000	            mov eax, dword [0x04004193] 	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4004193	          0x83f803	                              cmp eax, 3	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4004196	            0x750e	                           jne 0x40041a6	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4004198	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x400419b	          0x83e004	                              and eax, 4	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x400419e	            0x85c0	                           test eax, eax	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x40041a0	     0xf84d5080000	                            je 0x4004a7b	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x40041a6	    0x8b0500000000	            mov eax, dword [0x040041ac] 	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041ac	          0x83e008	                              and eax, 8	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041af	            0x85c0	                           test eax, eax	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041b1	            0x7436	                            je 0x40041e9	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041b3	    0x8b0500000000	            mov eax, dword [0x040041b9] 	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041b9	          0x83e008	                              and eax, 8	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041bc	            0x85c0	                           test eax, eax	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041be	            0x740f	                            je 0x40041cf	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041c0	    0x8b0500000000	            mov eax, dword [0x040041c6] 	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041c6	          0x83c848	                            or eax, 0x48	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041c9	    0x890500000000	            mov dword [0x040041cf], eax 	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041cf	    0x488b05000000	            mov rax, qword [0x040041d6] 	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041d6	        0x488d5001	                      lea rdx, [rax + 1]	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041da	    0x488915000000	            mov qword [0x040041e1], rdx 	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041e1	          0xc60071	                    mov byte [rax], 0x71	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40041e4	      0xe992080000	                           jmp 0x4004a7b	     14358	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40041e9	    0x488b05000000	            mov rax, qword [0x040041f0] 	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x40041f0	        0x488d5001	                      lea rdx, [rax + 1]	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x40041f4	    0x488915000000	            mov qword [0x040041fb], rdx 	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x40041fb	          0xc6006c	                    mov byte [rax], 0x6c	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x40041fe	      0xe978080000	                           jmp 0x4004a7b	     14358	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004203	              0x90	                                     nop	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4004204	      0xe972080000	                           jmp 0x4004a7b	     14358	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004209	    0x8b0500000000	            mov eax, dword [0x0400420f] 	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400420f	          0x83e008	                              and eax, 8	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004212	            0x85c0	                           test eax, eax	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004214	            0x740f	                            je 0x4004225	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004216	    0x8b0500000000	            mov eax, dword [0x0400421c] 	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400421c	          0x83c848	                            or eax, 0x48	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400421f	    0x890500000000	            mov dword [0x04004225], eax 	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004225	    0x8b0500000000	            mov eax, dword [0x0400422b] 	     14361	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x400422b	          0x83e008	                              and eax, 8	     14361	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x400422e	            0x85c0	                           test eax, eax	     14361	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4004230	            0x7417	                            je 0x4004249	     14361	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4004232	    0x488b05000000	            mov rax, qword [0x04004239] 	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4004239	        0x488d5001	                      lea rdx, [rax + 1]	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x400423d	    0x488915000000	            mov qword [0x04004244], rdx 	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4004244	          0xc60071	                    mov byte [rax], 0x71	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4004247	            0xeb58	                           jmp 0x40042a1	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4004249	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14363	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71
0x400424c	          0x83e001	                              and eax, 1	     14363	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71
0x400424f	            0x85c0	                           test eax, eax	     14363	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71
0x4004251	            0x7439	                            je 0x400428c	     14363	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71
0x4004253	     0xfb605000000	           movzx eax, byte [0x0400425a] 	     14365	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x400425a	            0x84c0	                             test al, al	     14365	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x400425c	            0x7417	                            je 0x4004275	     14365	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x400425e	    0x488b05000000	            mov rax, qword [0x04004265] 	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4004265	        0x488d5001	                      lea rdx, [rax + 1]	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4004269	    0x488915000000	            mov qword [0x04004270], rdx 	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4004270	          0xc60064	                    mov byte [rax], 0x64	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4004273	            0xeb2c	                           jmp 0x40042a1	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4004275	    0x488b05000000	            mov rax, qword [0x0400427c] 	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x400427c	        0x488d5001	                      lea rdx, [rax + 1]	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x4004280	    0x488915000000	            mov qword [0x04004287], rdx 	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x4004287	          0xc6006c	                    mov byte [rax], 0x6c	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x400428a	            0xeb15	                           jmp 0x40042a1	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x400428c	    0x488b05000000	            mov rax, qword [0x04004293] 	     14371	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_26
0x4004293	        0x488d5001	                      lea rdx, [rax + 1]	     14371	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_26
0x4004297	    0x488915000000	            mov qword [0x0400429e], rdx 	     14371	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_26
0x400429e	          0xc60077	                    mov byte [rax], 0x77	     14371	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_26
0x40042a1	     0xfb605000000	           movzx eax, byte [0x040042a8] 	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042a8	            0x84c0	                             test al, al	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042aa	            0x743b	                            je 0x40042e7	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042b0	        0x4883c001	                              add rax, 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042b4	           0xfb600	                   movzx eax, byte [rax]	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042b7	            0x84c0	                             test al, al	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042b9	            0x752c	                           jne 0x40042e7	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042bb	    0x8b0500000000	            mov eax, dword [0x040042c1] 	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042c1	          0x83e008	                              and eax, 8	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042c4	            0x85c0	                           test eax, eax	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042c6	            0x750a	                           jne 0x40042d2	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042c8	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042cb	          0x83e001	                              and eax, 1	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042ce	            0x85c0	                           test eax, eax	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042d0	            0x7415	                            je 0x40042e7	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042d2	    0x488b05000000	            mov rax, qword [0x040042d9] 	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042d9	        0x488d5001	                      lea rdx, [rax + 1]	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042dd	    0x488915000000	            mov qword [0x040042e4], rdx 	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042e4	          0xc60065	                    mov byte [rax], 0x65	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40042e7	    0x8b0500000000	            mov eax, dword [0x040042ed] 	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x40042ed	          0x83e008	                              and eax, 8	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x40042f0	            0x85c0	                           test eax, eax	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x40042f2	     0xf856a070000	                           jne 0x4004a62	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x40042f8	    0x8b0500000000	            mov eax, dword [0x040042fe] 	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x40042fe	      0x2500020000	                          and eax, 0x200	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4004303	            0x89c2	                            mov edx, eax	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4004305	    0x8b0500000000	            mov eax, dword [0x0400430b] 	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x400430b	             0x9d0	                             or eax, edx	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x400430d	    0x890500000000	            mov dword [0x04004313], eax 	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4004313	      0xe94a070000	                           jmp 0x4004a62	     14377	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004318	        0x837de000	               cmp dword [rbp - 0x20], 0	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x400431c	            0x7567	                           jne 0x4004385	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x400431e	        0x837de401	               cmp dword [rbp - 0x1c], 1	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4004322	            0x7561	                           jne 0x4004385	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4004324	     0xfb605000000	           movzx eax, byte [0x0400432b] 	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x400432b	            0x84c0	                             test al, al	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x400432d	     0xf8532070000	                           jne 0x4004a65	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4004333	    0x8b0500000000	            mov eax, dword [0x04004339] 	     14383	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4004339	          0x83f802	                              cmp eax, 2	     14383	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x400433c	     0xf85d3000000	                           jne 0x4004415	     14383	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4004342	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4004345	          0x83e001	                              and eax, 1	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4004348	            0x85c0	                           test eax, eax	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x400434a	            0x7511	                           jne 0x400435d	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x400434c	    0x8b0500000000	            mov eax, dword [0x04004352] 	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4004352	          0x83e008	                              and eax, 8	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4004355	            0x85c0	                           test eax, eax	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4004357	     0xf84b8000000	                            je 0x4004415	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x400435d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4004360	          0x83e004	                              and eax, 4	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4004363	            0x85c0	                           test eax, eax	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4004365	     0xf84fd060000	                            je 0x4004a68	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x400436b	    0x488b05000000	            mov rax, qword [0x04004372] 	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4004372	        0x488d5001	                      lea rdx, [rax + 1]	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4004376	    0x488915000000	            mov qword [0x0400437d], rdx 	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x400437d	          0xc60071	                    mov byte [rax], 0x71	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4004380	      0xe9e3060000	                           jmp 0x4004a68	     14388	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4004385	        0x837de001	               cmp dword [rbp - 0x20], 1	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4004389	            0x750e	                           jne 0x4004399	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400438b	        0x837de402	               cmp dword [rbp - 0x1c], 2	     14394	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400438f	            0x7508	                           jne 0x4004399	     14394	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4004391	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	     14395	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4004395	            0x3c4c	                            cmp al, 0x4c	     14395	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4004397	            0x742e	                            je 0x40043c7	     14395	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4004399	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400439c	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400439f	            0x7321	                           jae 0x40043c2	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043a1	        0x837de003	               cmp dword [rbp - 0x20], 3	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043a5	            0x771b	                            ja 0x40043c2	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043a7	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043aa	          0x8d5001	                      lea edx, [rax + 1]	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043ad	          0x8955e0	             mov dword [rbp - 0x20], edx	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043b0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043b4	           0xfb612	                   movzx edx, byte [rdx]	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043b7	            0x89c0	                            mov eax, eax	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043b9	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043bd	      0xe9b9060000	                           jmp 0x4004a7b	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043c2	      0xe800000000	                          call 0x40043c7	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x40043c7	    0x8b0500000000	            mov eax, dword [0x040043cd] 	     14401	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043cd	          0x83e008	                              and eax, 8	     14401	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043d0	            0x85c0	                           test eax, eax	     14401	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043d2	            0x745a	                            je 0x400442e	     14401	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043d4	    0x488b05000000	            mov rax, qword [0x040043db] 	     14403	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043db	        0x488d5001	                      lea rdx, [rax + 1]	     14403	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043df	    0x488915000000	            mov qword [0x040043e6], rdx 	     14403	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043e6	          0xc60061	                    mov byte [rax], 0x61	     14403	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043e9	    0x488b05000000	            mov rax, qword [0x040043f0] 	     14404	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043f0	        0x488d5001	                      lea rdx, [rax + 1]	     14404	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043f4	    0x488915000000	            mov qword [0x040043fb], rdx 	     14404	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043fb	          0xc60062	                    mov byte [rax], 0x62	     14404	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40043fe	    0x488b05000000	            mov rax, qword [0x04004405] 	     14405	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x4004405	        0x488d5001	                      lea rdx, [rax + 1]	     14405	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x4004409	    0x488915000000	            mov qword [0x04004410], rdx 	     14405	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x4004410	          0xc60073	                    mov byte [rax], 0x73	     14405	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x4004413	            0xeb19	                           jmp 0x400442e	     14409	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004415	              0x90	                                     nop	     14383	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4004416	            0xeb16	                           jmp 0x400442e	     14409	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004418	        0x837de000	               cmp dword [rbp - 0x20], 0	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x400441c	     0xf85aa000000	                           jne 0x40044cc	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x4004422	        0x837de401	               cmp dword [rbp - 0x1c], 1	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x4004426	     0xf85a0000000	                           jne 0x40044cc	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x400442c	            0xeb04	                           jmp 0x4004432	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x400442e	              0x90	                                     nop	     14409	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400442f	            0xeb01	                           jmp 0x4004432	     14409	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004431	              0x90	                                     nop	     14448	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30
0x4004432	     0xfb605000000	           movzx eax, byte [0x04004439] 	     14414	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x4004439	            0x84c0	                             test al, al	     14414	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x400443b	     0xf852a060000	                           jne 0x4004a6b	     14414	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x4004441	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4004444	          0x83e004	                              and eax, 4	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4004447	            0x85c0	                           test eax, eax	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4004449	     0xf8425010000	                            je 0x4004574	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x400444f	    0x8b0500000000	            mov eax, dword [0x04004455] 	     14418	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4004455	          0x83e008	                              and eax, 8	     14418	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4004458	            0x85c0	                           test eax, eax	     14418	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x400445a	            0x741a	                            je 0x4004476	     14418	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x400445c	    0x488b05000000	            mov rax, qword [0x04004463] 	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4004463	        0x488d5001	                      lea rdx, [rax + 1]	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4004467	    0x488915000000	            mov qword [0x0400446e], rdx 	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x400446e	          0xc60071	                    mov byte [rax], 0x71	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4004471	      0xe9fe000000	                           jmp 0x4004574	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4004476	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14422	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x4004479	          0x83e001	                              and eax, 1	     14422	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x400447c	            0x85c0	                           test eax, eax	     14422	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x400447e	            0x7417	                            je 0x4004497	     14422	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x4004480	    0x488b05000000	            mov rax, qword [0x04004487] 	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x4004487	        0x488d5001	                      lea rdx, [rax + 1]	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x400448b	    0x488915000000	            mov qword [0x04004492], rdx 	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x4004492	          0xc6006c	                    mov byte [rax], 0x6c	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x4004495	            0xeb15	                           jmp 0x40044ac	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x4004497	    0x488b05000000	            mov rax, qword [0x0400449e] 	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x400449e	        0x488d5001	                      lea rdx, [rax + 1]	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x40044a2	    0x488915000000	            mov qword [0x040044a9], rdx 	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x40044a9	          0xc60077	                    mov byte [rax], 0x77	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x40044ac	    0x8b0500000000	            mov eax, dword [0x040044b2] 	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40044b2	      0x2500020000	                          and eax, 0x200	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40044b7	            0x89c2	                            mov edx, eax	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40044b9	    0x8b0500000000	            mov eax, dword [0x040044bf] 	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40044bf	             0x9d0	                             or eax, edx	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40044c1	    0x890500000000	            mov dword [0x040044c7], eax 	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40044c7	      0xe9a8000000	                           jmp 0x4004574	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x40044cc	        0x837de001	               cmp dword [rbp - 0x20], 1	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044d0	            0x750e	                           jne 0x40044e0	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044d2	        0x837de402	               cmp dword [rbp - 0x1c], 2	     14433	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044d6	            0x7508	                           jne 0x40044e0	     14433	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044d8	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	     14434	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044dc	            0x3c4c	                            cmp al, 0x4c	     14434	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044de	            0x742e	                            je 0x400450e	     14434	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044e0	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044e3	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044e6	            0x7321	                           jae 0x4004509	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044e8	        0x837de003	               cmp dword [rbp - 0x20], 3	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044ec	            0x771b	                            ja 0x4004509	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044ee	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044f1	          0x8d5001	                      lea edx, [rax + 1]	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044f4	          0x8955e0	             mov dword [rbp - 0x20], edx	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044f7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044fb	           0xfb612	                   movzx edx, byte [rdx]	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x40044fe	            0x89c0	                            mov eax, eax	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4004500	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4004504	      0xe972050000	                           jmp 0x4004a7b	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4004509	      0xe800000000	                          call 0x400450e	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x400450e	    0x8b0500000000	            mov eax, dword [0x04004514] 	     14440	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004514	          0x83f802	                              cmp eax, 2	     14440	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004517	     0xf8514ffffff	                           jne 0x4004431	     14440	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400451d	    0x8b0500000000	            mov eax, dword [0x04004523] 	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004523	      0x2500040000	                          and eax, 0x400	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004528	            0x85c0	                           test eax, eax	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400452a	     0xf8501ffffff	                           jne 0x4004431	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004530	    0x488b05000000	            mov rax, qword [0x04004537] 	     14443	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004537	        0x488d5001	                      lea rdx, [rax + 1]	     14443	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400453b	    0x488915000000	            mov qword [0x04004542], rdx 	     14443	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004542	          0xc60061	                    mov byte [rax], 0x61	     14443	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004545	    0x488b05000000	            mov rax, qword [0x0400454c] 	     14444	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400454c	        0x488d5001	                      lea rdx, [rax + 1]	     14444	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004550	    0x488915000000	            mov qword [0x04004557], rdx 	     14444	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004557	          0xc60062	                    mov byte [rax], 0x62	     14444	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400455a	    0x488b05000000	            mov rax, qword [0x04004561] 	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004561	        0x488d5001	                      lea rdx, [rax + 1]	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4004565	    0x488915000000	            mov qword [0x0400456c], rdx 	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400456c	          0xc60073	                    mov byte [rax], 0x73	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400456f	      0xe9bdfeffff	                           jmp 0x4004431	     14448	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30
0x4004574	      0xe902050000	                           jmp 0x4004a7b	     14450	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004579	        0x837de000	               cmp dword [rbp - 0x20], 0	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x400457d	            0x7506	                           jne 0x4004585	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x400457f	        0x837de401	               cmp dword [rbp - 0x1c], 1	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4004583	            0x742e	                            je 0x40045b3	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4004585	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4004588	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x400458b	            0x7321	                           jae 0x40045ae	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x400458d	        0x837de003	               cmp dword [rbp - 0x20], 3	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4004591	            0x771b	                            ja 0x40045ae	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4004593	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4004596	          0x8d5001	                      lea edx, [rax + 1]	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4004599	          0x8955e0	             mov dword [rbp - 0x20], edx	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x400459c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40045a0	           0xfb612	                   movzx edx, byte [rdx]	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40045a3	            0x89c0	                            mov eax, eax	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40045a5	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40045a9	      0xe9cd040000	                           jmp 0x4004a7b	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40045ae	      0xe800000000	                          call 0x40045b3	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40045b3	     0xfb605000000	           movzx eax, byte [0x040045ba] 	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x40045ba	            0x84c0	                             test al, al	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x40045bc	            0x7443	                            je 0x4004601	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x40045be	    0x8b0500000000	            mov eax, dword [0x040045c4] 	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x40045c4	            0x85c0	                           test eax, eax	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x40045c6	            0x7439	                            je 0x4004601	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x40045c8	    0x8b0500000000	            mov eax, dword [0x040045ce] 	     14459	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40045ce	          0x83f866	                           cmp eax, 0x66	     14459	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40045d1	            0x7517	                           jne 0x40045ea	     14459	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40045d3	    0x488b05000000	            mov rax, qword [0x040045da] 	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40045da	        0x488d5001	                      lea rdx, [rax + 1]	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40045de	    0x488915000000	            mov qword [0x040045e5], rdx 	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40045e5	          0xc60064	                    mov byte [rax], 0x64	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40045e8	            0xeb72	                           jmp 0x400465c	     14459	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40045ea	    0x488b05000000	            mov rax, qword [0x040045f1] 	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x40045f1	        0x488d5001	                      lea rdx, [rax + 1]	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x40045f5	    0x488915000000	            mov qword [0x040045fc], rdx 	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x40045fc	          0xc60073	                    mov byte [rax], 0x73	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x40045ff	            0xeb5b	                           jmp 0x400465c	     14459	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x4004601	    0x8b0500000000	            mov eax, dword [0x04004607] 	     14466	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4004607	      0x2500020000	                          and eax, 0x200	     14466	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x400460c	            0x85c0	                           test eax, eax	     14466	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x400460e	            0x7417	                            je 0x4004627	     14466	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4004610	    0x488b05000000	            mov rax, qword [0x04004617] 	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4004617	        0x488d5001	                      lea rdx, [rax + 1]	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x400461b	    0x488915000000	            mov qword [0x04004622], rdx 	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4004622	          0xc60064	                    mov byte [rax], 0x64	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4004625	            0xeb15	                           jmp 0x400463c	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4004627	    0x488b05000000	            mov rax, qword [0x0400462e] 	     14469	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	ELSE_33
0x400462e	        0x488d5001	                      lea rdx, [rax + 1]	     14469	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	ELSE_33
0x4004632	    0x488915000000	            mov qword [0x04004639], rdx 	     14469	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	ELSE_33
0x4004639	          0xc60073	                    mov byte [rax], 0x73	     14469	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	ELSE_33
0x400463c	    0x8b0500000000	            mov eax, dword [0x04004642] 	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x4004642	      0x2500020000	                          and eax, 0x200	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x4004647	            0x89c2	                            mov edx, eax	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x4004649	    0x8b0500000000	            mov eax, dword [0x0400464f] 	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x400464f	             0x9d0	                             or eax, edx	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x4004651	    0x890500000000	            mov dword [0x04004657], eax 	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x4004657	      0xe91f040000	                           jmp 0x4004a7b	     14472	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400465c	      0xe91a040000	                           jmp 0x4004a7b	     14472	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004661	        0x837de000	               cmp dword [rbp - 0x20], 0	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x4004665	            0x750b	                           jne 0x4004672	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x4004667	        0x837de401	               cmp dword [rbp - 0x1c], 1	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x400466b	            0x7505	                           jne 0x4004672	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x400466d	      0xe800000000	                          call 0x4004672	     14475	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	CALL_5
0x4004672	        0x837de001	               cmp dword [rbp - 0x20], 1	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4004676	            0x750e	                           jne 0x4004686	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4004678	        0x837de402	               cmp dword [rbp - 0x1c], 2	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400467c	            0x7508	                           jne 0x4004686	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400467e	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4004682	            0x3c58	                            cmp al, 0x58	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4004684	            0x742e	                            je 0x40046b4	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4004686	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4004689	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400468c	            0x7321	                           jae 0x40046af	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400468e	        0x837de003	               cmp dword [rbp - 0x20], 3	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4004692	            0x771b	                            ja 0x40046af	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4004694	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4004697	          0x8d5001	                      lea edx, [rax + 1]	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400469a	          0x8955e0	             mov dword [rbp - 0x20], edx	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400469d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40046a1	           0xfb612	                   movzx edx, byte [rdx]	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40046a4	            0x89c0	                            mov eax, eax	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40046a6	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40046aa	      0xe9cc030000	                           jmp 0x4004a7b	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40046af	      0xe800000000	                          call 0x40046b4	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40046b4	     0xfb605000000	           movzx eax, byte [0x040046bb] 	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x40046bb	            0x84c0	                             test al, al	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x40046bd	            0x7505	                           jne 0x40046c4	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x40046bf	      0xe800000000	                          call 0x40046c4	     14484	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	CALL_6
0x40046c4	     0xfb605000000	           movzx eax, byte [0x040046cb] 	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046cb	            0x84c0	                             test al, al	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046cd	     0xf85a8030000	                           jne 0x4004a7b	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046d3	    0x8b0500000000	            mov eax, dword [0x040046d9] 	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046d9	          0x83f803	                              cmp eax, 3	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046dc	            0x740a	                            je 0x40046e8	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046de	    0x8b0500000000	            mov eax, dword [0x040046e4] 	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046e4	            0x85c0	                           test eax, eax	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046e6	            0x740e	                            je 0x40046f6	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046e8	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046eb	          0x83e004	                              and eax, 4	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046ee	            0x85c0	                           test eax, eax	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046f0	     0xf8485030000	                            je 0x4004a7b	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40046f6	    0x8b0500000000	            mov eax, dword [0x040046fc] 	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40046fc	      0x3d00010000	                          cmp eax, 0x100	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4004701	            0x7425	                            je 0x4004728	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4004703	      0x3d00020000	                          cmp eax, 0x200	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4004708	            0x7435	                            je 0x400473f	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400470a	      0x3d80000000	                           cmp eax, 0x80	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400470f	            0x753c	                           jne 0x400474d	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4004711	    0x488b05000000	            mov rax, qword [0x04004718] 	     14491	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4004718	        0x488d5001	                      lea rdx, [rax + 1]	     14491	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400471c	    0x488915000000	            mov qword [0x04004723], rdx 	     14491	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4004723	          0xc60078	                    mov byte [rax], 0x78	     14491	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4004726	            0xeb2a	                           jmp 0x4004752	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4004728	    0x488b05000000	            mov rax, qword [0x0400472f] 	     14494	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400472f	        0x488d5001	                      lea rdx, [rax + 1]	     14494	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4004733	    0x488915000000	            mov qword [0x0400473a], rdx 	     14494	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400473a	          0xc60079	                    mov byte [rax], 0x79	     14494	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400473d	            0xeb13	                           jmp 0x4004752	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400473f	    0x8b0500000000	            mov eax, dword [0x04004745] 	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x4004745	            0x85c0	                           test eax, eax	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x4004747	     0xf8521030000	                           jne 0x4004a6e	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x400474d	      0xe800000000	                          call 0x4004752	     14499	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	CALL_7
0x4004752	      0xe917030000	                           jmp 0x4004a6e	     14502	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004757	        0x837de000	               cmp dword [rbp - 0x20], 0	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400475b	     0xf85d3000000	                           jne 0x4004834	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4004761	        0x837de401	               cmp dword [rbp - 0x1c], 1	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4004765	     0xf85c9000000	                           jne 0x4004834	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400476b	    0x8b0500000000	            mov eax, dword [0x04004771] 	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4004771	          0x83e008	                              and eax, 8	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4004774	            0x85c0	                           test eax, eax	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4004776	            0x740f	                            je 0x4004787	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4004778	    0x8b0500000000	            mov eax, dword [0x0400477e] 	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400477e	          0x83c848	                            or eax, 0x48	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4004781	    0x890500000000	            mov dword [0x04004787], eax 	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4004787	    0x8b0500000000	            mov eax, dword [0x0400478d] 	     14508	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98
0x400478d	          0x83e008	                              and eax, 8	     14508	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98
0x4004790	            0x85c0	                           test eax, eax	     14508	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98
0x4004792	            0x7439	                            je 0x40047cd	     14508	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98
0x4004794	     0xfb605000000	           movzx eax, byte [0x0400479b] 	     14510	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x400479b	            0x84c0	                             test al, al	     14510	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x400479d	            0x7417	                            je 0x40047b6	     14510	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x400479f	    0x488b05000000	            mov rax, qword [0x040047a6] 	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x40047a6	        0x488d5001	                      lea rdx, [rax + 1]	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x40047aa	    0x488915000000	            mov qword [0x040047b1], rdx 	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x40047b1	          0xc60064	                    mov byte [rax], 0x64	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x40047b4	            0xeb4d	                           jmp 0x4004803	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x40047b6	    0x488b05000000	            mov rax, qword [0x040047bd] 	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x40047bd	        0x488d5001	                      lea rdx, [rax + 1]	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x40047c1	    0x488915000000	            mov qword [0x040047c8], rdx 	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x40047c8	          0xc6006c	                    mov byte [rax], 0x6c	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x40047cb	            0xeb36	                           jmp 0x4004803	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x40047cd	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14515	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40047d0	          0x83e001	                              and eax, 1	     14515	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40047d3	            0x85c0	                           test eax, eax	     14515	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40047d5	            0x7417	                            je 0x40047ee	     14515	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40047d7	    0x488b05000000	            mov rax, qword [0x040047de] 	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40047de	        0x488d5001	                      lea rdx, [rax + 1]	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40047e2	    0x488915000000	            mov qword [0x040047e9], rdx 	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40047e9	          0xc60077	                    mov byte [rax], 0x77	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40047ec	            0xeb15	                           jmp 0x4004803	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40047ee	    0x488b05000000	            mov rax, qword [0x040047f5] 	     14518	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_37
0x40047f5	        0x488d5001	                      lea rdx, [rax + 1]	     14518	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_37
0x40047f9	    0x488915000000	            mov qword [0x04004800], rdx 	     14518	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_37
0x4004800	          0xc60062	                    mov byte [rax], 0x62	     14518	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_37
0x4004803	    0x8b0500000000	            mov eax, dword [0x04004809] 	     14519	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4004809	          0x83e008	                              and eax, 8	     14519	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x400480c	            0x85c0	                           test eax, eax	     14519	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x400480e	     0xf85e0000000	                           jne 0x40048f4	     14519	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4004814	    0x8b0500000000	            mov eax, dword [0x0400481a] 	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x400481a	      0x2500020000	                          and eax, 0x200	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x400481f	            0x89c2	                            mov edx, eax	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4004821	    0x8b0500000000	            mov eax, dword [0x04004827] 	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4004827	             0x9d0	                             or eax, edx	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4004829	    0x890500000000	            mov dword [0x0400482f], eax 	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x400482f	      0xe9c0000000	                           jmp 0x40048f4	     14519	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4004834	        0x837de001	               cmp dword [rbp - 0x20], 1	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004838	            0x7516	                           jne 0x4004850	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400483a	        0x837de402	               cmp dword [rbp - 0x1c], 2	     14525	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400483e	            0x7510	                           jne 0x4004850	     14525	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004840	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004844	            0x3c58	                            cmp al, 0x58	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004846	            0x7436	                            je 0x400487e	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004848	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	     14527	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400484c	            0x3c4c	                            cmp al, 0x4c	     14527	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400484e	            0x742e	                            je 0x400487e	     14527	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004850	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004853	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004856	            0x7321	                           jae 0x4004879	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004858	        0x837de003	               cmp dword [rbp - 0x20], 3	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400485c	            0x771b	                            ja 0x4004879	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400485e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004861	          0x8d5001	                      lea edx, [rax + 1]	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004864	          0x8955e0	             mov dword [rbp - 0x20], edx	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004867	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400486b	           0xfb612	                   movzx edx, byte [rdx]	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400486e	            0x89c0	                            mov eax, eax	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004870	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004874	      0xe902020000	                           jmp 0x4004a7b	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4004879	      0xe800000000	                          call 0x400487e	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400487e	     0xfb605000000	           movzx eax, byte [0x04004885] 	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x4004885	            0x84c0	                             test al, al	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x4004887	            0x7505	                           jne 0x400488e	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x4004889	      0xe800000000	                          call 0x400488e	     14533	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	CALL_8
0x400488e	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	     14534	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4004892	            0x3c58	                            cmp al, 0x58	     14534	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4004894	            0x752f	                           jne 0x40048c5	     14534	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4004896	    0x488b05000000	            mov rax, qword [0x0400489d] 	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400489d	        0x488d5001	                      lea rdx, [rax + 1]	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x40048a1	    0x488915000000	            mov qword [0x040048a8], rdx 	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x40048a8	    0x8b1500000000	            mov edx, dword [0x040048ae] 	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x40048ae	            0x85d2	                           test edx, edx	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x40048b0	            0x7407	                            je 0x40048b9	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x40048b2	      0xba64000000	                           mov edx, 0x64	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x40048b7	            0xeb05	                           jmp 0x40048be	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x40048b9	      0xba73000000	                           mov edx, 0x73	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x40048be	            0x8810	                      mov byte [rax], dl	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x40048c0	      0xe9b6010000	                           jmp 0x4004a7b	     14539	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40048c5	    0x488b05000000	            mov rax, qword [0x040048cc] 	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40048cc	        0x488d5001	                      lea rdx, [rax + 1]	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40048d0	    0x488915000000	            mov qword [0x040048d7], rdx 	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40048d7	    0x8b1500000000	            mov edx, dword [0x040048dd] 	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40048dd	            0x85d2	                           test edx, edx	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40048df	            0x7407	                            je 0x40048e8	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40048e1	      0xba71000000	                           mov edx, 0x71	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40048e6	            0xeb05	                           jmp 0x40048ed	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40048e8	      0xba64000000	                           mov edx, 0x64	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40048ed	            0x8810	                      mov byte [rax], dl	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40048ef	      0xe987010000	                           jmp 0x4004a7b	     14539	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40048f4	      0xe982010000	                           jmp 0x4004a7b	     14539	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40048f9	     0xfb605000000	           movzx eax, byte [0x04004900] 	     14541	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x4004900	            0x84c0	                             test al, al	     14541	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x4004902	     0xf8569010000	                           jne 0x4004a71	     14541	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x4004908	    0x8b0500000000	            mov eax, dword [0x0400490e] 	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400490e	      0x2500020000	                          and eax, 0x200	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4004913	            0x85c0	                           test eax, eax	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4004915	            0x750e	                           jne 0x4004925	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4004917	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400491a	          0x83e004	                              and eax, 4	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400491d	            0x85c0	                           test eax, eax	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400491f	     0xf844f010000	                            je 0x4004a74	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4004925	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14545	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4004928	          0x83e001	                              and eax, 1	     14545	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x400492b	            0x85c0	                           test eax, eax	     14545	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x400492d	            0x7417	                            je 0x4004946	     14545	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x400492f	    0x488b05000000	            mov rax, qword [0x04004936] 	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4004936	        0x488d5001	                      lea rdx, [rax + 1]	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x400493a	    0x488915000000	            mov qword [0x04004941], rdx 	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4004941	          0xc6006c	                    mov byte [rax], 0x6c	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4004944	            0xeb15	                           jmp 0x400495b	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4004946	    0x488b05000000	            mov rax, qword [0x0400494d] 	     14548	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	ELSE_40
0x400494d	        0x488d5001	                      lea rdx, [rax + 1]	     14548	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	ELSE_40
0x4004951	    0x488915000000	            mov qword [0x04004958], rdx 	     14548	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	ELSE_40
0x4004958	          0xc60077	                    mov byte [rax], 0x77	     14548	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	ELSE_40
0x400495b	    0x8b0500000000	            mov eax, dword [0x04004961] 	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4004961	      0x2500020000	                          and eax, 0x200	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4004966	            0x89c2	                            mov edx, eax	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4004968	    0x8b0500000000	            mov eax, dword [0x0400496e] 	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400496e	             0x9d0	                             or eax, edx	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4004970	    0x890500000000	            mov dword [0x04004976], eax 	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4004976	      0xe9f9000000	                           jmp 0x4004a74	     14551	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400497b	     0xfb605000000	           movzx eax, byte [0x04004982] 	     14553	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x4004982	            0x84c0	                             test al, al	     14553	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x4004984	     0xf85ed000000	                           jne 0x4004a77	     14553	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x400498a	    0x8b0500000000	            mov eax, dword [0x04004990] 	     14555	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4004990	          0x83f802	                              cmp eax, 2	     14555	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4004993	            0x753c	                           jne 0x40049d1	     14555	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4004995	    0x8b0500000000	            mov eax, dword [0x0400499b] 	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x400499b	          0x83f801	                              cmp eax, 1	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x400499e	            0x7417	                            je 0x40049b7	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049a0	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049a3	          0x83e001	                              and eax, 1	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049a6	            0x85c0	                           test eax, eax	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049a8	            0x750d	                           jne 0x40049b7	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049aa	    0x8b0500000000	            mov eax, dword [0x040049b0] 	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049b0	          0x83e008	                              and eax, 8	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049b3	            0x85c0	                           test eax, eax	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049b5	            0x741a	                            je 0x40049d1	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049b7	    0x488b05000000	            mov rax, qword [0x040049be] 	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049be	        0x488d5001	                      lea rdx, [rax + 1]	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049c2	    0x488915000000	            mov qword [0x040049c9], rdx 	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049c9	          0xc60071	                    mov byte [rax], 0x71	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40049cc	      0xe9a9000000	                           jmp 0x4004a7a	     14565	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40049d1	    0x8b0500000000	            mov eax, dword [0x040049d7] 	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40049d7	      0x2500020000	                          and eax, 0x200	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40049dc	            0x85c0	                           test eax, eax	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40049de	     0xf8496000000	                            je 0x4004a7a	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40049e4	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40049e7	          0x83e001	                              and eax, 1	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40049ea	            0x85c0	                           test eax, eax	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40049ec	            0x7515	                           jne 0x4004a03	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40049ee	    0x488b05000000	            mov rax, qword [0x040049f5] 	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40049f5	        0x488d5001	                      lea rdx, [rax + 1]	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40049f9	    0x488915000000	            mov qword [0x04004a00], rdx 	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x4004a00	          0xc60077	                    mov byte [rax], 0x77	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x4004a03	    0x8b0500000000	            mov eax, dword [0x04004a09] 	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4004a09	      0x2500020000	                          and eax, 0x200	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4004a0e	            0x89c2	                            mov edx, eax	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4004a10	    0x8b0500000000	            mov eax, dword [0x04004a16] 	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4004a16	             0x9d0	                             or eax, edx	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4004a18	    0x890500000000	            mov dword [0x04004a1e], eax 	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4004a1e	            0xeb5a	                           jmp 0x4004a7a	     14565	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a20	              0x90	                                     nop	     14028	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a21	            0xeb58	                           jmp 0x4004a7b	     14028	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a23	              0x90	                                     nop	     14031	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x4004a24	            0xeb55	                           jmp 0x4004a7b	     14031	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x4004a26	              0x90	                                     nop	     14034	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a27	            0xeb52	                           jmp 0x4004a7b	     14034	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a29	              0x90	                                     nop	     14040	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_7
0x4004a2a	            0xeb4f	                           jmp 0x4004a7b	     14040	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_7
0x4004a2c	              0x90	                                     nop	     14067	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4004a2d	            0xeb4c	                           jmp 0x4004a7b	     14067	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4004a2f	              0x90	                                     nop	     14076	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a30	            0xeb49	                           jmp 0x4004a7b	     14076	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a32	              0x90	                                     nop	     14112	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x4004a33	            0xeb46	                           jmp 0x4004a7b	     14112	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x4004a35	              0x90	                                     nop	     14121	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a36	            0xeb43	                           jmp 0x4004a7b	     14121	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a38	              0x90	                                     nop	     14131	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a39	            0xeb40	                           jmp 0x4004a7b	     14131	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a3b	              0x90	                                     nop	     14134	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x4004a3c	            0xeb3d	                           jmp 0x4004a7b	     14134	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x4004a3e	              0x90	                                     nop	     14146	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a3f	            0xeb3a	                           jmp 0x4004a7b	     14146	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a41	              0x90	                                     nop	     14149	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x4004a42	            0xeb37	                           jmp 0x4004a7b	     14149	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x4004a44	              0x90	                                     nop	     14189	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4004a45	            0xeb34	                           jmp 0x4004a7b	     14189	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4004a47	              0x90	                                     nop	     14205	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x4004a48	            0xeb31	                           jmp 0x4004a7b	     14205	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x4004a4a	              0x90	                                     nop	     14208	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a4b	            0xeb2e	                           jmp 0x4004a7b	     14208	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a4d	              0x90	                                     nop	     14212	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a4e	            0xeb2b	                           jmp 0x4004a7b	     14212	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a50	              0x90	                                     nop	     14229	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a51	            0xeb28	                           jmp 0x4004a7b	     14229	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a53	              0x90	                                     nop	     14262	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x4004a54	            0xeb25	                           jmp 0x4004a7b	     14262	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x4004a56	              0x90	                                     nop	     14306	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a57	            0xeb22	                           jmp 0x4004a7b	     14306	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a59	              0x90	                                     nop	     14309	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x4004a5a	            0xeb1f	                           jmp 0x4004a7b	     14309	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x4004a5c	              0x90	                                     nop	     14315	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4004a5d	            0xeb1c	                           jmp 0x4004a7b	     14315	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4004a5f	              0x90	                                     nop	     14324	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4004a60	            0xeb19	                           jmp 0x4004a7b	     14324	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4004a62	              0x90	                                     nop	     14377	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a63	            0xeb16	                           jmp 0x4004a7b	     14377	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a65	              0x90	                                     nop	     14382	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4004a66	            0xeb13	                           jmp 0x4004a7b	     14382	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4004a68	              0x90	                                     nop	     14388	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4004a69	            0xeb10	                           jmp 0x4004a7b	     14388	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4004a6b	              0x90	                                     nop	     14415	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x4004a6c	            0xeb0d	                           jmp 0x4004a7b	     14415	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x4004a6e	              0x90	                                     nop	     14502	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a6f	            0xeb0a	                           jmp 0x4004a7b	     14502	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a71	              0x90	                                     nop	     14542	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x4004a72	            0xeb07	                           jmp 0x4004a7b	     14542	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x4004a74	              0x90	                                     nop	     14551	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a75	            0xeb04	                           jmp 0x4004a7b	     14551	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a77	              0x90	                                     nop	     14554	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x4004a78	            0xeb01	                           jmp 0x4004a7b	     14554	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x4004a7a	              0x90	                                     nop	     14565	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4004a7b	    0xc745d8000000	               mov dword [rbp - 0x28], 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4004a82	      0x488345e801	               add qword [rbp - 0x18], 1	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4004a87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4004a8b	           0xfb600	                   movzx eax, byte [rax]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4004a8e	            0x84c0	                             test al, al	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4004a90	     0xf85e9e8ffff	                           jne 0x400337f	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4004a96	    0x488b05000000	            mov rax, qword [0x04004a9d] 	     14569	i386-dis.c	FUNCTION_17
0x4004a9d	          0xc60000	                       mov byte [rax], 0	     14569	i386-dis.c	FUNCTION_17
0x4004aa0	    0x488b05000000	            mov rax, qword [0x04004aa7] 	     14570	i386-dis.c	FUNCTION_17
0x4004aa7	    0x488905000000	            mov qword [0x04004aae], rax 	     14570	i386-dis.c	FUNCTION_17
0x4004aae	      0xb800000000	                              mov eax, 0	     14571	i386-dis.c	FUNCTION_17
0x4004ab3	        0x488b4df8	                mov rcx, qword [rbp - 8]	     14572	i386-dis.c	FUNCTION_17
0x4004ab7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     14572	i386-dis.c	FUNCTION_17
0x4004ac0	            0x7405	                            je 0x4004ac7	     14572	i386-dis.c	FUNCTION_17
0x4004ac2	      0xe800000000	                          call 0x4004ac7	     14572	i386-dis.c	FUNCTION_17
0x4004ac7	              0xc9	                                   leave	     14572	i386-dis.c	FUNCTION_17
0x4004ac8	              0xc3	                                     ret	     14572	i386-dis.c	FUNCTION_17
OP_E_register	CALL,5:WHILE,0:functions,0:DO,0:ELSE,4:IF,10:SWITCH,1:FOR,0	189
0x400570f	              0x55	                                push rbp	     15093	i386-dis.c	FUNCTION_24
0x4005710	          0x4889e5	                            mov rbp, rsp	     15093	i386-dis.c	FUNCTION_24
0x4005713	        0x4883ec20	                           sub rsp, 0x20	     15093	i386-dis.c	FUNCTION_24
0x4005717	          0x897dec	             mov dword [rbp - 0x14], edi	     15093	i386-dis.c	FUNCTION_24
0x400571a	          0x8975e8	             mov dword [rbp - 0x18], esi	     15093	i386-dis.c	FUNCTION_24
0x400571d	    0x8b0500000000	            mov eax, dword [0x04005723] 	     15094	i386-dis.c	FUNCTION_24
0x4005723	          0x8945f4	              mov dword [rbp - 0xc], eax	     15094	i386-dis.c	FUNCTION_24
0x4005726	    0x8b0500000000	            mov eax, dword [0x0400572c] 	     15097	i386-dis.c	FUNCTION_24
0x400572c	          0x83e001	                              and eax, 1	     15097	i386-dis.c	FUNCTION_24
0x400572f	            0x85c0	                           test eax, eax	     15097	i386-dis.c	FUNCTION_24
0x4005731	            0x740f	                            je 0x4005742	     15097	i386-dis.c	FUNCTION_24
0x4005733	    0x8b0500000000	            mov eax, dword [0x04005739] 	     15097	i386-dis.c	FUNCTION_24
0x4005739	          0x83c841	                            or eax, 0x41	     15097	i386-dis.c	FUNCTION_24
0x400573c	    0x890500000000	            mov dword [0x04005742], eax 	     15097	i386-dis.c	FUNCTION_24
0x4005742	    0x8b0500000000	            mov eax, dword [0x04005748] 	     15098	i386-dis.c	FUNCTION_24	IF_1
0x4005748	          0x83e001	                              and eax, 1	     15098	i386-dis.c	FUNCTION_24	IF_1
0x400574b	            0x85c0	                           test eax, eax	     15098	i386-dis.c	FUNCTION_24	IF_1
0x400574d	            0x7404	                            je 0x4005753	     15098	i386-dis.c	FUNCTION_24	IF_1
0x400574f	        0x8345f408	                add dword [rbp - 0xc], 8	     15099	i386-dis.c	FUNCTION_24	IF_1
0x4005753	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     15101	i386-dis.c	FUNCTION_24	IF_2
0x4005756	          0x83e004	                              and eax, 4	     15101	i386-dis.c	FUNCTION_24	IF_2
0x4005759	            0x85c0	                           test eax, eax	     15101	i386-dis.c	FUNCTION_24	IF_2
0x400575b	            0x7417	                            je 0x4005774	     15101	i386-dis.c	FUNCTION_24	IF_2
0x400575d	        0x837dec02	               cmp dword [rbp - 0x14], 2	     15102	i386-dis.c	FUNCTION_24	IF_2
0x4005761	            0x740c	                            je 0x400576f	     15102	i386-dis.c	FUNCTION_24	IF_2
0x4005763	        0x837dec26	           cmp dword [rbp - 0x14], 0x26 	     15103	i386-dis.c	FUNCTION_24	IF_2
0x4005767	            0x7406	                            je 0x400576f	     15103	i386-dis.c	FUNCTION_24	IF_2
0x4005769	        0x837dec05	               cmp dword [rbp - 0x14], 5	     15104	i386-dis.c	FUNCTION_24	IF_2
0x400576d	            0x7505	                           jne 0x4005774	     15104	i386-dis.c	FUNCTION_24	IF_2
0x400576f	      0xe8f3d8ffff	                   call sym.swap_operand	     15105	i386-dis.c	FUNCTION_24	CALL_1
0x4005774	        0x837dec45	           cmp dword [rbp - 0x14], 0x45 	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005778	     0xf8752020000	                            ja 0x40059d0	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x400577e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005781	    0x488b04c50000	                  mov rax, qword [rax*8]	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005789	            0xffe0	                                 jmp rax	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x400578b	    0x8b0500000000	            mov eax, dword [0x04005791] 	     15111	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005791	          0x83c840	                            or eax, 0x40	     15111	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005794	    0x890500000000	            mov dword [0x0400579a], eax 	     15111	i386-dis.c	FUNCTION_24	SWITCH_1
0x400579a	    0x8b0500000000	            mov eax, dword [0x040057a0] 	     15112	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x40057a0	            0x85c0	                           test eax, eax	     15112	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x40057a2	            0x7410	                            je 0x40057b4	     15112	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x40057a4	    0x488b05000000	            mov rax, qword [0x040057ab] 	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x40057ab	        0x488945f8	                mov qword [rbp - 8], rax	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x40057af	      0xe935020000	                           jmp 0x40059e9	     15116	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057b4	    0x488b05000000	            mov rax, qword [0x040057bb] 	     15115	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057bb	        0x488945f8	                mov qword [rbp - 8], rax	     15115	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057bf	      0xe925020000	                           jmp 0x40059e9	     15116	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057c4	    0x488b05000000	            mov rax, qword [0x040057cb] 	     15118	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057cb	        0x488945f8	                mov qword [rbp - 8], rax	     15118	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057cf	      0xe915020000	                           jmp 0x40059e9	     15119	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057d4	    0x488b05000000	            mov rax, qword [0x040057db] 	     15123	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057db	        0x488945f8	                mov qword [rbp - 8], rax	     15123	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057df	      0xe905020000	                           jmp 0x40059e9	     15124	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057e4	    0x488b05000000	            mov rax, qword [0x040057eb] 	     15126	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057eb	        0x488945f8	                mov qword [rbp - 8], rax	     15126	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057ef	      0xe9f5010000	                           jmp 0x40059e9	     15127	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057f4	    0x8b0500000000	            mov eax, dword [0x040057fa] 	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057fa	          0x83f802	                              cmp eax, 2	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057fd	            0x7509	                           jne 0x4005808	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40057ff	    0x488b05000000	            mov rax, qword [0x04005806] 	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4005806	            0xeb07	                           jmp 0x400580f	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4005808	    0x488b05000000	            mov rax, qword [0x0400580f] 	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x400580f	        0x488945f8	                mov qword [rbp - 8], rax	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4005813	      0xe9d1010000	                           jmp 0x40059e9	     15131	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4005818	        0x837df403	                cmp dword [rbp - 0xc], 3	     15134	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4
0x400581c	            0x7e0f	                           jle 0x400582d	     15134	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4
0x400581e	      0xbf00000000	                              mov edi, 0	     15136	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4	CALL_2
0x4005823	      0xe8a1f2ffff	                        call sym.oappend	     15136	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4	CALL_2
0x4005828	      0xe9de010000	                           jmp 0x4005a0b	     15137	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4
0x400582d	    0x488b05000000	            mov rax, qword [0x04005834] 	     15139	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005834	        0x488945f8	                mov qword [rbp - 8], rax	     15139	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005838	      0xe9ac010000	                           jmp 0x40059e9	     15140	i386-dis.c	FUNCTION_24	SWITCH_1
0x400583d	    0x8b0500000000	            mov eax, dword [0x04005843] 	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x4005843	          0x83f802	                              cmp eax, 2	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x4005846	            0x751b	                           jne 0x4005863	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x4005848	    0x8b0500000000	            mov eax, dword [0x0400584e] 	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x400584e	          0x83f801	                              cmp eax, 1	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x4005851	            0x7510	                           jne 0x4005863	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x4005853	    0x488b05000000	            mov rax, qword [0x0400585a] 	     15144	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x400585a	        0x488945f8	                mov qword [rbp - 8], rax	     15144	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x400585e	      0xe986010000	                           jmp 0x40059e9	     15145	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x4005863	    0x8b0500000000	            mov eax, dword [0x04005869] 	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005869	          0x83f802	                              cmp eax, 2	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x400586c	            0x7527	                           jne 0x4005895	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x400586e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005871	          0x83e001	                              and eax, 1	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005874	            0x85c0	                           test eax, eax	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005876	            0x750d	                           jne 0x4005885	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005878	    0x8b0500000000	            mov eax, dword [0x0400587e] 	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x400587e	          0x83e008	                              and eax, 8	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005881	            0x85c0	                           test eax, eax	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005883	            0x7410	                            je 0x4005895	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005885	    0x488b05000000	            mov rax, qword [0x0400588c] 	     15151	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x400588c	        0x488945f8	                mov qword [rbp - 8], rax	     15151	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005890	      0xe954010000	                           jmp 0x40059e9	     15152	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005895	    0xc745ec040000	               mov dword [rbp - 0x14], 4	     15154	i386-dis.c	FUNCTION_24	SWITCH_1
0x400589c	    0x8b0500000000	            mov eax, dword [0x040058a2] 	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x40058a2	          0x83e008	                              and eax, 8	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x40058a5	            0x85c0	                           test eax, eax	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x40058a7	            0x740f	                            je 0x40058b8	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x40058a9	    0x8b0500000000	            mov eax, dword [0x040058af] 	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x40058af	          0x83c848	                            or eax, 0x48	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x40058b2	    0x890500000000	            mov dword [0x040058b8], eax 	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x40058b8	    0x8b0500000000	            mov eax, dword [0x040058be] 	     15163	i386-dis.c	FUNCTION_24	SWITCH_1	IF_7
0x40058be	          0x83e008	                              and eax, 8	     15163	i386-dis.c	FUNCTION_24	SWITCH_1	IF_7
0x40058c1	            0x85c0	                           test eax, eax	     15163	i386-dis.c	FUNCTION_24	SWITCH_1	IF_7
0x40058c3	            0x7410	                            je 0x40058d5	     15163	i386-dis.c	FUNCTION_24	SWITCH_1	IF_7
0x40058c5	    0x488b05000000	            mov rax, qword [0x040058cc] 	     15164	i386-dis.c	FUNCTION_24	SWITCH_1	IF_7
0x40058cc	        0x488945f8	                mov qword [rbp - 8], rax	     15164	i386-dis.c	FUNCTION_24	SWITCH_1	IF_7
0x40058d0	      0xe914010000	                           jmp 0x40059e9	     15175	i386-dis.c	FUNCTION_24	SWITCH_1
0x40058d5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     15167	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40058d8	          0x83e001	                              and eax, 1	     15167	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40058db	            0x85c0	                           test eax, eax	     15167	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40058dd	            0x750c	                           jne 0x40058eb	     15167	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40058df	        0x837dec04	               cmp dword [rbp - 0x14], 4	     15168	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40058e3	            0x7413	                            je 0x40058f8	     15168	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40058e5	        0x837dec05	               cmp dword [rbp - 0x14], 5	     15169	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40058e9	            0x740d	                            je 0x40058f8	     15169	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40058eb	    0x488b05000000	            mov rax, qword [0x040058f2] 	     15170	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40058f2	        0x488945f8	                mov qword [rbp - 8], rax	     15170	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40058f6	            0xeb0b	                           jmp 0x4005903	     15170	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40058f8	    0x488b05000000	            mov rax, qword [0x040058ff] 	     15172	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	ELSE_3
0x40058ff	        0x488945f8	                mov qword [rbp - 8], rax	     15172	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	ELSE_3
0x4005903	    0x8b0500000000	            mov eax, dword [0x04005909] 	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4005909	      0x2500020000	                          and eax, 0x200	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x400590e	            0x89c2	                            mov edx, eax	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4005910	    0x8b0500000000	            mov eax, dword [0x04005916] 	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4005916	             0x9d0	                             or eax, edx	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4005918	    0x890500000000	            mov dword [0x0400591e], eax 	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x400591e	      0xe9c6000000	                           jmp 0x40059e9	     15175	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005923	    0x8b0500000000	            mov eax, dword [0x04005929] 	     15177	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005929	          0x83f802	                              cmp eax, 2	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x400592c	            0x7509	                           jne 0x4005937	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x400592e	    0x488b05000000	            mov rax, qword [0x04005935] 	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005935	            0xeb07	                           jmp 0x400593e	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005937	    0x488b05000000	            mov rax, qword [0x0400593e] 	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x400593e	        0x488945f8	                mov qword [rbp - 8], rax	     15177	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005942	    0x8b0500000000	            mov eax, dword [0x04005948] 	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x4005948	      0x2500040000	                          and eax, 0x400	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x400594d	            0x85c0	                           test eax, eax	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x400594f	            0x751d	                           jne 0x400596e	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x4005951	    0x8b0500000000	            mov eax, dword [0x04005957] 	     15180	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x4005957	            0x85c0	                           test eax, eax	     15181	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x4005959	            0x7509	                           jne 0x4005964	     15181	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x400595b	    0x488b05000000	            mov rax, qword [0x04005962] 	     15181	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x4005962	            0xeb04	                           jmp 0x4005968	     15181	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x4005964	        0x488b45f8	                mov rax, qword [rbp - 8]	     15181	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x4005968	        0x488945f8	                mov qword [rbp - 8], rax	     15180	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x400596c	            0xeb7b	                           jmp 0x40059e9	     15190	i386-dis.c	FUNCTION_24	SWITCH_1
0x400596e	    0x8b0500000000	            mov eax, dword [0x04005974] 	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005974	            0x4898	                                    cdqe	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005976	    0xc70485000000	                    mov dword [rax*4], 0	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005981	    0x8b0500000000	            mov eax, dword [0x04005987] 	     15186	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005987	          0x83f801	                              cmp eax, 1	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x400598a	            0x7409	                            je 0x4005995	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x400598c	    0x488b05000000	            mov rax, qword [0x04005993] 	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005993	            0xeb07	                           jmp 0x400599c	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005995	    0x488b05000000	            mov rax, qword [0x0400599c] 	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x400599c	        0x488945f8	                mov qword [rbp - 8], rax	     15186	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40059a0	    0x8b0500000000	            mov eax, dword [0x040059a6] 	     15188	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40059a6	          0x80cc04	                                or ah, 4	     15188	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40059a9	    0x890500000000	            mov dword [0x040059af], eax 	     15188	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40059af	            0xeb38	                           jmp 0x40059e9	     15190	i386-dis.c	FUNCTION_24	SWITCH_1
0x40059b1	        0x837df407	                cmp dword [rbp - 0xc], 7	     15193	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10
0x40059b5	            0x7e0c	                           jle 0x40059c3	     15193	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10
0x40059b7	      0xbf00000000	                              mov edi, 0	     15195	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10	CALL_3
0x40059bc	      0xe808f1ffff	                        call sym.oappend	     15195	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10	CALL_3
0x40059c1	            0xeb48	                           jmp 0x4005a0b	     15196	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10
0x40059c3	    0x488b05000000	            mov rax, qword [0x040059ca] 	     15198	i386-dis.c	FUNCTION_24	SWITCH_1
0x40059ca	        0x488945f8	                mov qword [rbp - 8], rax	     15198	i386-dis.c	FUNCTION_24	SWITCH_1
0x40059ce	            0xeb19	                           jmp 0x40059e9	     15199	i386-dis.c	FUNCTION_24	SWITCH_1
0x40059d0	      0xbe00000000	                              mov esi, 0	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x40059d5	      0xbf00000000	                              mov edi, 0	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x40059da	      0xe800000000	                          call 0x40059df	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x40059df	          0x4889c7	                            mov rdi, rax	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x40059e2	      0xe8e2f0ffff	                        call sym.oappend	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x40059e7	            0xeb22	                           jmp 0x4005a0b	     15204	i386-dis.c	FUNCTION_24	SWITCH_1
0x40059e9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x40059ec	            0x4898	                                    cdqe	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x40059ee	    0x488d14c50000	                        lea rdx, [rax*8]	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x40059f6	        0x488b45f8	                mov rax, qword [rbp - 8]	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x40059fa	          0x4801d0	                            add rax, rdx	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x40059fd	          0x488b00	                    mov rax, qword [rax]	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x4005a00	          0x4889c7	                            mov rdi, rax	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x4005a03	      0xe8c1f0ffff	                        call sym.oappend	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x4005a08	            0xeb01	                           jmp 0x4005a0b	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x4005a0a	              0x90	                                     nop	     15201	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005a0b	              0xc9	                                   leave	     15207	i386-dis.c	FUNCTION_24
0x4005a0c	              0xc3	                                     ret	     15207	i386-dis.c	FUNCTION_24
OP_EX	CALL,5:WHILE,0:functions,0:DO,0:ELSE,3:IF,8:SWITCH,2:FOR,0	154
0x400866f	              0x55	                                push rbp	     16561	i386-dis.c	FUNCTION_55
0x4008670	          0x4889e5	                            mov rbp, rsp	     16561	i386-dis.c	FUNCTION_55
0x4008673	        0x4883ec20	                           sub rsp, 0x20	     16561	i386-dis.c	FUNCTION_55
0x4008677	          0x897dec	             mov dword [rbp - 0x14], edi	     16561	i386-dis.c	FUNCTION_55
0x400867a	          0x8975e8	             mov dword [rbp - 0x18], esi	     16561	i386-dis.c	FUNCTION_55
0x400867d	     0xfb605000000	           movzx eax, byte [0x04008684] 	     16566	i386-dis.c	FUNCTION_55
0x4008684	            0x84c0	                             test al, al	     16566	i386-dis.c	FUNCTION_55
0x4008686	            0x7505	                           jne 0x400868d	     16566	i386-dis.c	FUNCTION_55
0x4008688	      0xe800000000	                          call 0x400868d	     16566	i386-dis.c	FUNCTION_55
0x400868d	    0x488b05000000	            mov rax, qword [0x04008694] 	     16567	i386-dis.c	FUNCTION_55
0x4008694	        0x4883c001	                              add rax, 1	     16567	i386-dis.c	FUNCTION_55
0x4008698	    0x488905000000	            mov qword [0x0400869f], rax 	     16567	i386-dis.c	FUNCTION_55
0x400869f	    0x8b0500000000	            mov eax, dword [0x040086a5] 	     16569	i386-dis.c	FUNCTION_55	IF_1
0x40086a5	          0x83f803	                              cmp eax, 3	     16569	i386-dis.c	FUNCTION_55	IF_1
0x40086a8	            0x7414	                            je 0x40086be	     16569	i386-dis.c	FUNCTION_55	IF_1
0x40086aa	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     16571	i386-dis.c	FUNCTION_55	IF_1	CALL_1
0x40086ad	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     16571	i386-dis.c	FUNCTION_55	IF_1	CALL_1
0x40086b0	            0x89d6	                            mov esi, edx	     16571	i386-dis.c	FUNCTION_55	IF_1	CALL_1
0x40086b2	            0x89c7	                            mov edi, eax	     16571	i386-dis.c	FUNCTION_55	IF_1	CALL_1
0x40086b4	      0xe854d3ffff	                    call sym.OP_E_memory	     16571	i386-dis.c	FUNCTION_55	IF_1	CALL_1
0x40086b9	      0xe9ef010000	                           jmp 0x40088ad	     16572	i386-dis.c	FUNCTION_55	IF_1
0x40086be	    0x8b0500000000	            mov eax, dword [0x040086c4] 	     16575	i386-dis.c	FUNCTION_55
0x40086c4	          0x8945f4	              mov dword [rbp - 0xc], eax	     16575	i386-dis.c	FUNCTION_55
0x40086c7	    0x8b0500000000	            mov eax, dword [0x040086cd] 	     16576	i386-dis.c	FUNCTION_55
0x40086cd	          0x83e001	                              and eax, 1	     16576	i386-dis.c	FUNCTION_55
0x40086d0	            0x85c0	                           test eax, eax	     16576	i386-dis.c	FUNCTION_55
0x40086d2	            0x740f	                            je 0x40086e3	     16576	i386-dis.c	FUNCTION_55
0x40086d4	    0x8b0500000000	            mov eax, dword [0x040086da] 	     16576	i386-dis.c	FUNCTION_55
0x40086da	          0x83c841	                            or eax, 0x41	     16576	i386-dis.c	FUNCTION_55
0x40086dd	    0x890500000000	            mov dword [0x040086e3], eax 	     16576	i386-dis.c	FUNCTION_55
0x40086e3	    0x8b0500000000	            mov eax, dword [0x040086e9] 	     16577	i386-dis.c	FUNCTION_55	IF_2
0x40086e9	          0x83e001	                              and eax, 1	     16577	i386-dis.c	FUNCTION_55	IF_2
0x40086ec	            0x85c0	                           test eax, eax	     16577	i386-dis.c	FUNCTION_55	IF_2
0x40086ee	            0x7404	                            je 0x40086f4	     16577	i386-dis.c	FUNCTION_55	IF_2
0x40086f0	        0x8345f408	                add dword [rbp - 0xc], 8	     16578	i386-dis.c	FUNCTION_55	IF_2
0x40086f4	    0x8b0500000000	            mov eax, dword [0x040086fa] 	     16579	i386-dis.c	FUNCTION_55	IF_3
0x40086fa	            0x85c0	                           test eax, eax	     16579	i386-dis.c	FUNCTION_55	IF_3
0x40086fc	            0x742d	                            je 0x400872b	     16579	i386-dis.c	FUNCTION_55	IF_3
0x40086fe	    0x8b0500000000	            mov eax, dword [0x04008704] 	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008704	          0x83e002	                              and eax, 2	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008707	            0x85c0	                           test eax, eax	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008709	            0x740f	                            je 0x400871a	     16581	i386-dis.c	FUNCTION_55	IF_3
0x400870b	    0x8b0500000000	            mov eax, dword [0x04008711] 	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008711	          0x83c842	                            or eax, 0x42	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008714	    0x890500000000	            mov dword [0x0400871a], eax 	     16581	i386-dis.c	FUNCTION_55	IF_3
0x400871a	    0x8b0500000000	            mov eax, dword [0x04008720] 	     16582	i386-dis.c	FUNCTION_55	IF_3	IF_4
0x4008720	          0x83e002	                              and eax, 2	     16582	i386-dis.c	FUNCTION_55	IF_3	IF_4
0x4008723	            0x85c0	                           test eax, eax	     16582	i386-dis.c	FUNCTION_55	IF_3	IF_4
0x4008725	            0x7404	                            je 0x400872b	     16582	i386-dis.c	FUNCTION_55	IF_3	IF_4
0x4008727	        0x8345f410	             add dword [rbp - 0xc], 0x10	     16583	i386-dis.c	FUNCTION_55	IF_3	IF_4
0x400872b	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16586	i386-dis.c	FUNCTION_55	IF_5
0x400872e	          0x83e004	                              and eax, 4	     16586	i386-dis.c	FUNCTION_55	IF_5
0x4008731	            0x85c0	                           test eax, eax	     16586	i386-dis.c	FUNCTION_55	IF_5
0x4008733	            0x7423	                            je 0x4008758	     16586	i386-dis.c	FUNCTION_55	IF_5
0x4008735	        0x837dec10	           cmp dword [rbp - 0x14], 0x10 	     16587	i386-dis.c	FUNCTION_55	IF_5
0x4008739	            0x7418	                            je 0x4008753	     16587	i386-dis.c	FUNCTION_55	IF_5
0x400873b	        0x837dec09	               cmp dword [rbp - 0x14], 9	     16588	i386-dis.c	FUNCTION_55	IF_5
0x400873f	            0x7412	                            je 0x4008753	     16588	i386-dis.c	FUNCTION_55	IF_5
0x4008741	        0x837dec3d	           cmp dword [rbp - 0x14], 0x3d 	     16589	i386-dis.c	FUNCTION_55	IF_5
0x4008745	            0x740c	                            je 0x4008753	     16589	i386-dis.c	FUNCTION_55	IF_5
0x4008747	        0x837dec0b	            cmp dword [rbp - 0x14], 0xb 	     16590	i386-dis.c	FUNCTION_55	IF_5
0x400874b	            0x7406	                            je 0x4008753	     16590	i386-dis.c	FUNCTION_55	IF_5
0x400874d	        0x837dec3f	           cmp dword [rbp - 0x14], 0x3f 	     16591	i386-dis.c	FUNCTION_55	IF_5
0x4008751	            0x7505	                           jne 0x4008758	     16591	i386-dis.c	FUNCTION_55	IF_5
0x4008753	      0xe80fa9ffff	                   call sym.swap_operand	     16592	i386-dis.c	FUNCTION_55	CALL_2
0x4008758	     0xfb605000000	           movzx eax, byte [0x0400875f] 	     16594	i386-dis.c	FUNCTION_55	IF_6
0x400875f	            0x84c0	                             test al, al	     16594	i386-dis.c	FUNCTION_55	IF_6
0x4008761	     0xf84c1000000	                            je 0x4008828	     16594	i386-dis.c	FUNCTION_55	IF_6
0x4008767	        0x837dec11	           cmp dword [rbp - 0x14], 0x11 	     16595	i386-dis.c	FUNCTION_55	IF_6
0x400876b	     0xf84b7000000	                            je 0x4008828	     16595	i386-dis.c	FUNCTION_55	IF_6
0x4008771	        0x837dec19	           cmp dword [rbp - 0x14], 0x19 	     16596	i386-dis.c	FUNCTION_55	IF_6
0x4008775	     0xf84ad000000	                            je 0x4008828	     16596	i386-dis.c	FUNCTION_55	IF_6
0x400877b	        0x837dec1a	           cmp dword [rbp - 0x14], 0x1a 	     16597	i386-dis.c	FUNCTION_55	IF_6
0x400877f	     0xf84a3000000	                            je 0x4008828	     16597	i386-dis.c	FUNCTION_55	IF_6
0x4008785	        0x837dec14	           cmp dword [rbp - 0x14], 0x14 	     16598	i386-dis.c	FUNCTION_55	IF_6
0x4008789	     0xf8499000000	                            je 0x4008828	     16598	i386-dis.c	FUNCTION_55	IF_6
0x400878f	        0x837dec15	           cmp dword [rbp - 0x14], 0x15 	     16599	i386-dis.c	FUNCTION_55	IF_6
0x4008793	     0xf848f000000	                            je 0x4008828	     16599	i386-dis.c	FUNCTION_55	IF_6
0x4008799	        0x837dec16	           cmp dword [rbp - 0x14], 0x16 	     16600	i386-dis.c	FUNCTION_55	IF_6
0x400879d	     0xf8485000000	                            je 0x4008828	     16600	i386-dis.c	FUNCTION_55	IF_6
0x40087a3	        0x837dec17	           cmp dword [rbp - 0x14], 0x17 	     16601	i386-dis.c	FUNCTION_55	IF_6
0x40087a7	            0x747f	                            je 0x4008828	     16601	i386-dis.c	FUNCTION_55	IF_6
0x40087a9	        0x837dec18	           cmp dword [rbp - 0x14], 0x18 	     16602	i386-dis.c	FUNCTION_55	IF_6
0x40087ad	            0x7479	                            je 0x4008828	     16602	i386-dis.c	FUNCTION_55	IF_6
0x40087af	        0x837dec12	           cmp dword [rbp - 0x14], 0x12 	     16603	i386-dis.c	FUNCTION_55	IF_6
0x40087b3	            0x7473	                            je 0x4008828	     16603	i386-dis.c	FUNCTION_55	IF_6
0x40087b5	        0x837dec13	           cmp dword [rbp - 0x14], 0x13 	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40087b9	            0x746d	                            je 0x4008828	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40087bb	        0x837dec1b	           cmp dword [rbp - 0x14], 0x1b 	     16605	i386-dis.c	FUNCTION_55	IF_6
0x40087bf	            0x7467	                            je 0x4008828	     16605	i386-dis.c	FUNCTION_55	IF_6
0x40087c1	        0x837dec3c	           cmp dword [rbp - 0x14], 0x3c 	     16606	i386-dis.c	FUNCTION_55	IF_6
0x40087c5	            0x7461	                            je 0x4008828	     16606	i386-dis.c	FUNCTION_55	IF_6
0x40087c7	        0x837dec3d	           cmp dword [rbp - 0x14], 0x3d 	     16607	i386-dis.c	FUNCTION_55	IF_6
0x40087cb	            0x745b	                            je 0x4008828	     16607	i386-dis.c	FUNCTION_55	IF_6
0x40087cd	        0x837dec3e	           cmp dword [rbp - 0x14], 0x3e 	     16608	i386-dis.c	FUNCTION_55	IF_6
0x40087d1	            0x7455	                            je 0x4008828	     16608	i386-dis.c	FUNCTION_55	IF_6
0x40087d3	        0x837dec3f	           cmp dword [rbp - 0x14], 0x3f 	     16609	i386-dis.c	FUNCTION_55	IF_6
0x40087d7	            0x744f	                            je 0x4008828	     16609	i386-dis.c	FUNCTION_55	IF_6
0x40087d9	        0x837dec41	           cmp dword [rbp - 0x14], 0x41 	     16610	i386-dis.c	FUNCTION_55	IF_6
0x40087dd	            0x7449	                            je 0x4008828	     16610	i386-dis.c	FUNCTION_55	IF_6
0x40087df	    0x8b0500000000	            mov eax, dword [0x040087e5] 	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40087e5	      0x3d00010000	                          cmp eax, 0x100	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40087ea	            0x741b	                            je 0x4008807	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40087ec	      0x3d00020000	                          cmp eax, 0x200	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40087f1	            0x7421	                            je 0x4008814	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40087f3	      0x3d80000000	                           cmp eax, 0x80	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40087f8	            0x7527	                           jne 0x4008821	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40087fa	    0x488b05000000	            mov rax, qword [0x04008801] 	     16615	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008801	        0x488945f8	                mov qword [rbp - 8], rax	     16615	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008805	            0xeb1f	                           jmp 0x4008826	     16616	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008807	    0x488b05000000	            mov rax, qword [0x0400880e] 	     16618	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x400880e	        0x488945f8	                mov qword [rbp - 8], rax	     16618	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008812	            0xeb12	                           jmp 0x4008826	     16619	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008814	    0x488b05000000	            mov rax, qword [0x0400881b] 	     16621	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x400881b	        0x488945f8	                mov qword [rbp - 8], rax	     16621	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x400881f	            0xeb05	                           jmp 0x4008826	     16622	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008821	      0xe800000000	                          call 0x4008826	     16624	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1	CALL_3
0x4008826	            0xeb66	                           jmp 0x400888e	     16626	i386-dis.c	FUNCTION_55	IF_6
0x4008828	        0x837dec12	           cmp dword [rbp - 0x14], 0x12 	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x400882c	            0x7406	                            je 0x4008834	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x400882e	        0x837dec13	           cmp dword [rbp - 0x14], 0x13 	     16628	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4008832	            0x753c	                           jne 0x4008870	     16628	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4008834	    0x8b0500000000	            mov eax, dword [0x0400883a] 	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x400883a	      0x3d00010000	                          cmp eax, 0x100	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x400883f	            0x740e	                            je 0x400884f	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008841	      0x3d00020000	                          cmp eax, 0x200	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008846	            0x7414	                            je 0x400885c	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008848	      0x3d80000000	                           cmp eax, 0x80	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x400884d	            0x751a	                           jne 0x4008869	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x400884f	    0x488b05000000	            mov rax, qword [0x04008856] 	     16634	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008856	        0x488945f8	                mov qword [rbp - 8], rax	     16634	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x400885a	            0xeb12	                           jmp 0x400886e	     16635	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x400885c	    0x488b05000000	            mov rax, qword [0x04008863] 	     16637	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008863	        0x488945f8	                mov qword [rbp - 8], rax	     16637	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008867	            0xeb05	                           jmp 0x400886e	     16638	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008869	      0xe800000000	                          call 0x400886e	     16640	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2	CALL_4
0x400886e	            0xeb1e	                           jmp 0x400888e	     16642	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4008870	        0x837dec1b	           cmp dword [rbp - 0x14], 0x1b 	     16643	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x4008874	            0x750d	                           jne 0x4008883	     16643	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x4008876	    0x488b05000000	            mov rax, qword [0x0400887d] 	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x400887d	        0x488945f8	                mov qword [rbp - 8], rax	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x4008881	            0xeb0b	                           jmp 0x400888e	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x4008883	    0x488b05000000	            mov rax, qword [0x0400888a] 	     16646	i386-dis.c	FUNCTION_55	ELSE_3
0x400888a	        0x488945f8	                mov qword [rbp - 8], rax	     16646	i386-dis.c	FUNCTION_55	ELSE_3
0x400888e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x4008891	            0x4898	                                    cdqe	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x4008893	    0x488d14c50000	                        lea rdx, [rax*8]	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x400889b	        0x488b45f8	                mov rax, qword [rbp - 8]	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x400889f	          0x4801d0	                            add rax, rdx	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x40088a2	          0x488b00	                    mov rax, qword [rax]	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x40088a5	          0x4889c7	                            mov rdi, rax	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x40088a8	      0xe81cc2ffff	                        call sym.oappend	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x40088ad	              0xc9	                                   leave	     16648	i386-dis.c	FUNCTION_55
0x40088ae	              0xc3	                                     ret	     16648	i386-dis.c	FUNCTION_55
OP_STi	CALL,2:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	16
0x4003301	              0x55	                                push rbp	     13975	i386-dis.c	FUNCTION_16
0x4003302	          0x4889e5	                            mov rbp, rsp	     13975	i386-dis.c	FUNCTION_16
0x4003305	        0x4883ec10	                           sub rsp, 0x10	     13975	i386-dis.c	FUNCTION_16
0x4003309	          0x897dfc	                mov dword [rbp - 4], edi	     13975	i386-dis.c	FUNCTION_16
0x400330c	          0x8975f8	                mov dword [rbp - 8], esi	     13975	i386-dis.c	FUNCTION_16
0x400330f	    0x8b0500000000	            mov eax, dword [0x04003315] 	     13976	i386-dis.c	FUNCTION_16	CALL_1
0x4003315	            0x89c2	                            mov edx, eax	     13976	i386-dis.c	FUNCTION_16	CALL_1
0x4003317	      0xbe00000000	                              mov esi, 0	     13976	i386-dis.c	FUNCTION_16	CALL_1
0x400331c	      0xbf00000000	                              mov edi, 0	     13976	i386-dis.c	FUNCTION_16	CALL_1
0x4003321	      0xb800000000	                              mov eax, 0	     13976	i386-dis.c	FUNCTION_16	CALL_1
0x4003326	      0xe800000000	                          call 0x400332b	     13976	i386-dis.c	FUNCTION_16	CALL_1
0x400332b	      0xbf00000000	                              mov edi, 0	     13977	i386-dis.c	FUNCTION_16	CALL_2
0x4003330	      0xe888ffffff	            call sym.oappend_maybe_intel	     13977	i386-dis.c	FUNCTION_16	CALL_2
0x4003335	              0x90	                                     nop	     13978	i386-dis.c	FUNCTION_16
0x4003336	              0xc9	                                   leave	     13978	i386-dis.c	FUNCTION_16
0x4003337	              0xc3	                                     ret	     13978	i386-dis.c	FUNCTION_16
OP_EX_VexImmW	CALL,5:WHILE,0:functions,0:DO,0:ELSE,2:IF,4:SWITCH,0:FOR,0	72
0x40099f7	              0x55	                                push rbp	     17404	i386-dis.c	FUNCTION_82
0x40099f8	          0x4889e5	                            mov rbp, rsp	     17404	i386-dis.c	FUNCTION_82
0x40099fb	        0x4883ec20	                           sub rsp, 0x20	     17404	i386-dis.c	FUNCTION_82
0x40099ff	          0x897dec	             mov dword [rbp - 0x14], edi	     17404	i386-dis.c	FUNCTION_82
0x4009a02	          0x8975e8	             mov dword [rbp - 0x18], esi	     17404	i386-dis.c	FUNCTION_82
0x4009a05	    0xc745fcffffff	        mov dword [rbp - 4], 0xffffffff 	     17405	i386-dis.c	FUNCTION_82
0x4009a0c	     0xfb605000000	           movzx eax, byte [0x04009a13] 	     17408	i386-dis.c	FUNCTION_82	IF_1
0x4009a13	            0x84c0	                             test al, al	     17408	i386-dis.c	FUNCTION_82	IF_1
0x4009a15	            0x756f	                           jne 0x4009a86	     17408	i386-dis.c	FUNCTION_82	IF_1
0x4009a17	    0xc60500000000	                mov byte [0x04009a1e], 1	     17410	i386-dis.c	FUNCTION_82	IF_1
0x4009a1e	     0xfb605000000	           movzx eax, byte [0x04009a25] 	     17413	i386-dis.c	FUNCTION_82	IF_1
0x4009a25	            0x84c0	                             test al, al	     17413	i386-dis.c	FUNCTION_82	IF_1
0x4009a27	            0x7505	                           jne 0x4009a2e	     17413	i386-dis.c	FUNCTION_82	IF_1
0x4009a29	      0xe800000000	                          call 0x4009a2e	     17413	i386-dis.c	FUNCTION_82	IF_1
0x4009a2e	    0x488b05000000	            mov rax, qword [0x04009a35] 	     17414	i386-dis.c	FUNCTION_82	IF_1
0x4009a35	        0x4883c001	                              add rax, 1	     17414	i386-dis.c	FUNCTION_82	IF_1
0x4009a39	    0x488905000000	            mov qword [0x04009a40], rax 	     17414	i386-dis.c	FUNCTION_82	IF_1
0x4009a40	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     17416	i386-dis.c	FUNCTION_82	IF_1	CALL_1
0x4009a43	      0xbe00000000	                              mov esi, 0	     17416	i386-dis.c	FUNCTION_82	IF_1	CALL_1
0x4009a48	            0x89c7	                            mov edi, eax	     17416	i386-dis.c	FUNCTION_82	IF_1	CALL_1
0x4009a4a	      0xe85dfdffff	                   call sym.get_vex_imm8	     17416	i386-dis.c	FUNCTION_82	IF_1	CALL_1
0x4009a4f	    0x880500000000	               mov byte [0x04009a55], al	     17416	i386-dis.c	FUNCTION_82	IF_1	CALL_1
0x4009a55	    0x8b0500000000	            mov eax, dword [0x04009a5b] 	     17418	i386-dis.c	FUNCTION_82	IF_1	IF_2
0x4009a5b	            0x85c0	                           test eax, eax	     17418	i386-dis.c	FUNCTION_82	IF_1	IF_2
0x4009a5d	            0x7410	                            je 0x4009a6f	     17418	i386-dis.c	FUNCTION_82	IF_1	IF_2
0x4009a5f	     0xfb605000000	           movzx eax, byte [0x04009a66] 	     17419	i386-dis.c	FUNCTION_82	IF_1	IF_2
0x4009a66	          0xc0e804	                               shr al, 4	     17419	i386-dis.c	FUNCTION_82	IF_1	IF_2
0x4009a69	           0xfb6c0	                           movzx eax, al	     17419	i386-dis.c	FUNCTION_82	IF_1	IF_2
0x4009a6c	          0x8945fc	                mov dword [rbp - 4], eax	     17419	i386-dis.c	FUNCTION_82	IF_1	IF_2
0x4009a6f	          0x8b55fc	                mov edx, dword [rbp - 4]	     17421	i386-dis.c	FUNCTION_82	IF_1	CALL_2
0x4009a72	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	     17421	i386-dis.c	FUNCTION_82	IF_1	CALL_2
0x4009a75	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17421	i386-dis.c	FUNCTION_82	IF_1	CALL_2
0x4009a78	            0x89ce	                            mov esi, ecx	     17421	i386-dis.c	FUNCTION_82	IF_1	CALL_2
0x4009a7a	            0x89c7	                            mov edi, eax	     17421	i386-dis.c	FUNCTION_82	IF_1	CALL_2
0x4009a7c	      0xe89ffeffff	                   call sym.OP_EX_VexReg	     17421	i386-dis.c	FUNCTION_82	IF_1	CALL_2
0x4009a81	      0xe98c000000	                           jmp 0x4009b12	     17441	i386-dis.c	FUNCTION_82
0x4009a86	     0xfb605000000	           movzx eax, byte [0x04009a8d] 	     17423	i386-dis.c	FUNCTION_82	ELSE_1	IF_3
0x4009a8d	            0x3c01	                               cmp al, 1	     17423	i386-dis.c	FUNCTION_82	ELSE_1	IF_3
0x4009a8f	            0x7535	                           jne 0x4009ac6	     17423	i386-dis.c	FUNCTION_82	ELSE_1	IF_3
0x4009a91	    0xc60500000000	                mov byte [0x04009a98], 2	     17425	i386-dis.c	FUNCTION_82	ELSE_1	IF_3
0x4009a98	    0x8b0500000000	            mov eax, dword [0x04009a9e] 	     17427	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x4009a9e	            0x85c0	                           test eax, eax	     17427	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x4009aa0	            0x7510	                           jne 0x4009ab2	     17427	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x4009aa2	     0xfb605000000	           movzx eax, byte [0x04009aa9] 	     17428	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x4009aa9	          0xc0e804	                               shr al, 4	     17428	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x4009aac	           0xfb6c0	                           movzx eax, al	     17428	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x4009aaf	          0x8945fc	                mov dword [rbp - 4], eax	     17428	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x4009ab2	          0x8b55fc	                mov edx, dword [rbp - 4]	     17430	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	CALL_3
0x4009ab5	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	     17430	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	CALL_3
0x4009ab8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17430	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	CALL_3
0x4009abb	            0x89ce	                            mov esi, ecx	     17430	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	CALL_3
0x4009abd	            0x89c7	                            mov edi, eax	     17430	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	CALL_3
0x4009abf	      0xe85cfeffff	                   call sym.OP_EX_VexReg	     17430	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	CALL_3
0x4009ac4	            0xeb4c	                           jmp 0x4009b12	     17441	i386-dis.c	FUNCTION_82
0x4009ac6	    0xc60500000000	            mov byte [0x04009acd], 0x24 	     17435	i386-dis.c	FUNCTION_82	ELSE_2
0x4009acd	     0xfb605000000	           movzx eax, byte [0x04009ad4] 	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x4009ad4	           0xfb6c0	                           movzx eax, al	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x4009ad7	          0x83e00f	                            and eax, 0xf	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x4009ada	      0xb900000000	                              mov ecx, 0	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x4009adf	          0x4889c2	                            mov rdx, rax	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x4009ae2	      0xbe01000000	                              mov esi, 1	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x4009ae7	          0x4889cf	                            mov rdi, rcx	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x4009aea	      0xe8ddb0ffff	            call sym.print_operand_value	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x4009aef	      0xbf00000000	                              mov edi, 0	     17437	i386-dis.c	FUNCTION_82	ELSE_2	CALL_5
0x4009af4	      0xe8c497ffff	            call sym.oappend_maybe_intel	     17437	i386-dis.c	FUNCTION_82	ELSE_2	CALL_5
0x4009af9	    0xc60500000000	                mov byte [0x04009b00], 0	     17438	i386-dis.c	FUNCTION_82	ELSE_2
0x4009b00	    0x488b05000000	            mov rax, qword [0x04009b07] 	     17439	i386-dis.c	FUNCTION_82	ELSE_2
0x4009b07	        0x4883c001	                              add rax, 1	     17439	i386-dis.c	FUNCTION_82	ELSE_2
0x4009b0b	    0x488905000000	            mov qword [0x04009b12], rax 	     17439	i386-dis.c	FUNCTION_82	ELSE_2
0x4009b12	              0x90	                                     nop	     17441	i386-dis.c	FUNCTION_82
0x4009b13	              0xc9	                                   leave	     17441	i386-dis.c	FUNCTION_82
0x4009b14	              0xc3	                                     ret	     17441	i386-dis.c	FUNCTION_82
OP_SEG	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,0:FOR,0	29
0x4007b09	              0x55	                                push rbp	     16191	i386-dis.c	FUNCTION_39
0x4007b0a	          0x4889e5	                            mov rbp, rsp	     16191	i386-dis.c	FUNCTION_39
0x4007b0d	        0x4883ec10	                           sub rsp, 0x10	     16191	i386-dis.c	FUNCTION_39
0x4007b11	          0x897dfc	                mov dword [rbp - 4], edi	     16191	i386-dis.c	FUNCTION_39
0x4007b14	          0x8975f8	                mov dword [rbp - 8], esi	     16191	i386-dis.c	FUNCTION_39
0x4007b17	        0x837dfc07	                  cmp dword [rbp - 4], 7	     16192	i386-dis.c	FUNCTION_39	IF_1
0x4007b1b	            0x7524	                           jne 0x4007b41	     16192	i386-dis.c	FUNCTION_39	IF_1
0x4007b1d	    0x488b05000000	            mov rax, qword [0x04007b24] 	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x4007b24	    0x8b1500000000	            mov edx, dword [0x04007b2a] 	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x4007b2a	          0x4863d2	                         movsxd rdx, edx	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x4007b2d	        0x48c1e203	                              shl rdx, 3	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x4007b31	          0x4801d0	                            add rax, rdx	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x4007b34	          0x488b00	                    mov rax, qword [rax]	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x4007b37	          0x4889c7	                            mov rdi, rax	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x4007b3a	      0xe88acfffff	                        call sym.oappend	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x4007b3f	            0xeb21	                           jmp 0x4007b62	     16196	i386-dis.c	FUNCTION_39
0x4007b41	    0x8b0500000000	            mov eax, dword [0x04007b47] 	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x4007b47	          0x83f803	                              cmp eax, 3	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x4007b4a	            0x7505	                           jne 0x4007b51	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x4007b4c	          0x8b45fc	                mov eax, dword [rbp - 4]	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x4007b4f	            0xeb05	                           jmp 0x4007b56	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x4007b51	      0xb807000000	                              mov eax, 7	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x4007b56	          0x8b55f8	                mov edx, dword [rbp - 8]	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x4007b59	            0x89d6	                            mov esi, edx	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x4007b5b	            0x89c7	                            mov edi, eax	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x4007b5d	      0xe8cbebffff	                           call sym.OP_E	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x4007b62	              0x90	                                     nop	     16196	i386-dis.c	FUNCTION_39
0x4007b63	              0xc9	                                   leave	     16196	i386-dis.c	FUNCTION_39
0x4007b64	              0xc3	                                     ret	     16196	i386-dis.c	FUNCTION_39
OP_Rounding	CALL,3:WHILE,0:functions,0:DO,0:ELSE,0:IF,2:SWITCH,1:FOR,0	37
0x400a7b5	              0x55	                                push rbp	     17915	i386-dis.c	FUNCTION_100
0x400a7b6	          0x4889e5	                            mov rbp, rsp	     17915	i386-dis.c	FUNCTION_100
0x400a7b9	        0x4883ec10	                           sub rsp, 0x10	     17915	i386-dis.c	FUNCTION_100
0x400a7bd	          0x897dfc	                mov dword [rbp - 4], edi	     17915	i386-dis.c	FUNCTION_100
0x400a7c0	          0x8975f8	                mov dword [rbp - 8], esi	     17915	i386-dis.c	FUNCTION_100
0x400a7c3	    0x8b0500000000	            mov eax, dword [0x0400a7c9] 	     17916	i386-dis.c	FUNCTION_100	IF_1
0x400a7c9	            0x85c0	                           test eax, eax	     17916	i386-dis.c	FUNCTION_100	IF_1
0x400a7cb	            0x740c	                            je 0x400a7d9	     17916	i386-dis.c	FUNCTION_100	IF_1
0x400a7cd	        0x837dfc42	               cmp dword [rbp - 4], 0x42	     17917	i386-dis.c	FUNCTION_100	IF_1
0x400a7d1	            0x740b	                            je 0x400a7de	     17917	i386-dis.c	FUNCTION_100	IF_1
0x400a7d3	        0x837dfc43	               cmp dword [rbp - 4], 0x43	     17918	i386-dis.c	FUNCTION_100	IF_1
0x400a7d7	            0x7405	                            je 0x400a7de	     17918	i386-dis.c	FUNCTION_100	IF_1
0x400a7d9	      0xe800000000	                          call 0x400a7de	     17919	i386-dis.c	FUNCTION_100	CALL_1
0x400a7de	    0x8b0500000000	            mov eax, dword [0x0400a7e4] 	     17920	i386-dis.c	FUNCTION_100	IF_2
0x400a7e4	          0x83f803	                              cmp eax, 3	     17920	i386-dis.c	FUNCTION_100	IF_2
0x400a7e7	            0x753e	                           jne 0x400a827	     17920	i386-dis.c	FUNCTION_100	IF_2
0x400a7e9	    0x8b0500000000	            mov eax, dword [0x0400a7ef] 	     17920	i386-dis.c	FUNCTION_100	IF_2
0x400a7ef	            0x85c0	                           test eax, eax	     17920	i386-dis.c	FUNCTION_100	IF_2
0x400a7f1	            0x7434	                            je 0x400a827	     17920	i386-dis.c	FUNCTION_100	IF_2
0x400a7f3	          0x8b45fc	                mov eax, dword [rbp - 4]	     17921	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x400a7f6	          0x83f842	                           cmp eax, 0x42	     17921	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x400a7f9	            0x7407	                            je 0x400a802	     17921	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x400a7fb	          0x83f843	                           cmp eax, 0x43	     17921	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x400a7fe	            0x741c	                            je 0x400a81c	     17921	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x400a800	            0xeb25	                           jmp 0x400a827	     17930	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x400a802	    0x8b0500000000	            mov eax, dword [0x0400a808] 	     17924	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_2
0x400a808	            0x4898	                                    cdqe	     17924	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_2
0x400a80a	    0x488b04c50000	                  mov rax, qword [rax*8]	     17924	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_2
0x400a812	          0x4889c7	                            mov rdi, rax	     17924	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_2
0x400a815	      0xe8afa2ffff	                        call sym.oappend	     17924	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_2
0x400a81a	            0xeb0b	                           jmp 0x400a827	     17925	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x400a81c	      0xbf00000000	                              mov edi, 0	     17927	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_3
0x400a821	      0xe8a3a2ffff	                        call sym.oappend	     17927	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_3
0x400a826	              0x90	                                     nop	     17928	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x400a827	              0x90	                                     nop	     17932	i386-dis.c	FUNCTION_100
0x400a828	              0xc9	                                   leave	     17932	i386-dis.c	FUNCTION_100
0x400a829	              0xc3	                                     ret	     17932	i386-dis.c	FUNCTION_100
BND_Fixup	CALL,0:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0	14
0x4008f15	              0x55	                                push rbp	     16953	i386-dis.c	FUNCTION_69
0x4008f16	          0x4889e5	                            mov rbp, rsp	     16953	i386-dis.c	FUNCTION_69
0x4008f19	          0x897dfc	                mov dword [rbp - 4], edi	     16953	i386-dis.c	FUNCTION_69
0x4008f1c	          0x8975f8	                mov dword [rbp - 8], esi	     16953	i386-dis.c	FUNCTION_69
0x4008f1f	    0x8b0500000000	            mov eax, dword [0x04008f25] 	     16954	i386-dis.c	FUNCTION_69	IF_1
0x4008f25	          0x83e002	                              and eax, 2	     16954	i386-dis.c	FUNCTION_69	IF_1
0x4008f28	            0x85c0	                           test eax, eax	     16954	i386-dis.c	FUNCTION_69	IF_1
0x4008f2a	            0x7413	                            je 0x4008f3f	     16954	i386-dis.c	FUNCTION_69	IF_1
0x4008f2c	    0x8b0500000000	            mov eax, dword [0x04008f32] 	     16955	i386-dis.c	FUNCTION_69	IF_1
0x4008f32	            0x4898	                                    cdqe	     16955	i386-dis.c	FUNCTION_69	IF_1
0x4008f34	    0xc70485000000	                mov dword [rax*4], 0x4f2	     16955	i386-dis.c	FUNCTION_69	IF_1
0x4008f3f	              0x90	                                     nop	     16956	i386-dis.c	FUNCTION_69
0x4008f40	              0x5d	                                 pop rbp	     16956	i386-dis.c	FUNCTION_69
0x4008f41	              0xc3	                                     ret	     16956	i386-dis.c	FUNCTION_69
OP_XMM_Vex	CALL,2:WHILE,0:functions,0:DO,0:ELSE,0:IF,2:SWITCH,0:FOR,0	21
0x4009ede	              0x55	                                push rbp	     17583	i386-dis.c	FUNCTION_90
0x4009edf	          0x4889e5	                            mov rbp, rsp	     17583	i386-dis.c	FUNCTION_90
0x4009ee2	        0x4883ec10	                           sub rsp, 0x10	     17583	i386-dis.c	FUNCTION_90
0x4009ee6	          0x897dfc	                mov dword [rbp - 4], edi	     17583	i386-dis.c	FUNCTION_90
0x4009ee9	          0x8975f8	                mov dword [rbp - 8], esi	     17583	i386-dis.c	FUNCTION_90
0x4009eec	    0x8b0500000000	            mov eax, dword [0x04009ef2] 	     17584	i386-dis.c	FUNCTION_90	IF_1
0x4009ef2	          0x83f803	                              cmp eax, 3	     17584	i386-dis.c	FUNCTION_90	IF_1
0x4009ef5	            0x7416	                            je 0x4009f0d	     17584	i386-dis.c	FUNCTION_90	IF_1
0x4009ef7	    0x8b0500000000	            mov eax, dword [0x04009efd] 	     17586	i386-dis.c	FUNCTION_90	IF_1	IF_2
0x4009efd	            0x85c0	                           test eax, eax	     17586	i386-dis.c	FUNCTION_90	IF_1	IF_2
0x4009eff	            0x7405	                            je 0x4009f06	     17586	i386-dis.c	FUNCTION_90	IF_1	IF_2
0x4009f01	      0xe86cefffff	                          call sym.BadOp	     17587	i386-dis.c	FUNCTION_90	IF_1	CALL_1
0x4009f06	    0xc60500000000	                mov byte [0x04009f0d], 0	     17588	i386-dis.c	FUNCTION_90	IF_1
0x4009f0d	          0x8b55f8	                mov edx, dword [rbp - 8]	     17590	i386-dis.c	FUNCTION_90	CALL_2
0x4009f10	          0x8b45fc	                mov eax, dword [rbp - 4]	     17590	i386-dis.c	FUNCTION_90	CALL_2
0x4009f13	            0x89d6	                            mov esi, edx	     17590	i386-dis.c	FUNCTION_90	CALL_2
0x4009f15	            0x89c7	                            mov edi, eax	     17590	i386-dis.c	FUNCTION_90	CALL_2
0x4009f17	      0xe862e3ffff	                         call sym.OP_XMM	     17590	i386-dis.c	FUNCTION_90	CALL_2
0x4009f1c	              0x90	                                     nop	     17591	i386-dis.c	FUNCTION_90
0x4009f1d	              0xc9	                                   leave	     17591	i386-dis.c	FUNCTION_90
0x4009f1e	              0xc3	                                     ret	     17591	i386-dis.c	FUNCTION_90
get32s	CALL,0:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	51
0x4006d71	              0x55	                                push rbp	     15808	i386-dis.c	FUNCTION_30
0x4006d72	          0x4889e5	                            mov rbp, rsp	     15808	i386-dis.c	FUNCTION_30
0x4006d75	        0x4883ec10	                           sub rsp, 0x10	     15808	i386-dis.c	FUNCTION_30
0x4006d79	    0x48c745f80000	                  mov qword [rbp - 8], 0	     15809	i386-dis.c	FUNCTION_30
0x4006d81	    0x488b05000000	            mov rax, qword [0x04006d88] 	     15811	i386-dis.c	FUNCTION_30
0x4006d88	        0x488d5004	                      lea rdx, [rax + 4]	     15811	i386-dis.c	FUNCTION_30
0x4006d8c	    0x488b05000000	            mov rax, qword [0x04006d93] 	     15811	i386-dis.c	FUNCTION_30
0x4006d93	        0x488b4068	            mov rax, qword [rax + 0x68] 	     15811	i386-dis.c	FUNCTION_30
0x4006d97	          0x488b00	                    mov rax, qword [rax]	     15811	i386-dis.c	FUNCTION_30
0x4006d9a	          0x4839c2	                            cmp rdx, rax	     15811	i386-dis.c	FUNCTION_30
0x4006d9d	            0x761d	                           jbe 0x4006dbc	     15811	i386-dis.c	FUNCTION_30
0x4006d9f	    0x488b05000000	            mov rax, qword [0x04006da6] 	     15811	i386-dis.c	FUNCTION_30
0x4006da6	        0x488d5004	                      lea rdx, [rax + 4]	     15811	i386-dis.c	FUNCTION_30
0x4006daa	    0x488b05000000	            mov rax, qword [0x04006db1] 	     15811	i386-dis.c	FUNCTION_30
0x4006db1	          0x4889d6	                            mov rsi, rdx	     15811	i386-dis.c	FUNCTION_30
0x4006db4	          0x4889c7	                            mov rdi, rax	     15811	i386-dis.c	FUNCTION_30
0x4006db7	      0xe88492ffff	                     call sym.fetch_data	     15811	i386-dis.c	FUNCTION_30
0x4006dbc	    0x488b05000000	            mov rax, qword [0x04006dc3] 	     15812	i386-dis.c	FUNCTION_30
0x4006dc3	        0x488d5001	                      lea rdx, [rax + 1]	     15812	i386-dis.c	FUNCTION_30
0x4006dc7	    0x488915000000	            mov qword [0x04006dce], rdx 	     15812	i386-dis.c	FUNCTION_30
0x4006dce	           0xfb600	                   movzx eax, byte [rax]	     15812	i386-dis.c	FUNCTION_30
0x4006dd1	           0xfb6c0	                           movzx eax, al	     15812	i386-dis.c	FUNCTION_30
0x4006dd4	        0x488945f8	                mov qword [rbp - 8], rax	     15812	i386-dis.c	FUNCTION_30
0x4006dd8	    0x488b05000000	            mov rax, qword [0x04006ddf] 	     15813	i386-dis.c	FUNCTION_30
0x4006ddf	        0x488d5001	                      lea rdx, [rax + 1]	     15813	i386-dis.c	FUNCTION_30
0x4006de3	    0x488915000000	            mov qword [0x04006dea], rdx 	     15813	i386-dis.c	FUNCTION_30
0x4006dea	           0xfb600	                   movzx eax, byte [rax]	     15813	i386-dis.c	FUNCTION_30
0x4006ded	           0xfb6c0	                           movzx eax, al	     15813	i386-dis.c	FUNCTION_30
0x4006df0	        0x48c1e008	                              shl rax, 8	     15813	i386-dis.c	FUNCTION_30
0x4006df4	        0x480945f8	                 or qword [rbp - 8], rax	     15813	i386-dis.c	FUNCTION_30
0x4006df8	    0x488b05000000	            mov rax, qword [0x04006dff] 	     15814	i386-dis.c	FUNCTION_30
0x4006dff	        0x488d5001	                      lea rdx, [rax + 1]	     15814	i386-dis.c	FUNCTION_30
0x4006e03	    0x488915000000	            mov qword [0x04006e0a], rdx 	     15814	i386-dis.c	FUNCTION_30
0x4006e0a	           0xfb600	                   movzx eax, byte [rax]	     15814	i386-dis.c	FUNCTION_30
0x4006e0d	           0xfb6c0	                           movzx eax, al	     15814	i386-dis.c	FUNCTION_30
0x4006e10	        0x48c1e010	                           shl rax, 0x10	     15814	i386-dis.c	FUNCTION_30
0x4006e14	        0x480945f8	                 or qword [rbp - 8], rax	     15814	i386-dis.c	FUNCTION_30
0x4006e18	    0x488b05000000	            mov rax, qword [0x04006e1f] 	     15815	i386-dis.c	FUNCTION_30
0x4006e1f	        0x488d5001	                      lea rdx, [rax + 1]	     15815	i386-dis.c	FUNCTION_30
0x4006e23	    0x488915000000	            mov qword [0x04006e2a], rdx 	     15815	i386-dis.c	FUNCTION_30
0x4006e2a	           0xfb600	                   movzx eax, byte [rax]	     15815	i386-dis.c	FUNCTION_30
0x4006e2d	           0xfb6c0	                           movzx eax, al	     15815	i386-dis.c	FUNCTION_30
0x4006e30	        0x48c1e018	                           shl rax, 0x18	     15815	i386-dis.c	FUNCTION_30
0x4006e34	        0x480945f8	                 or qword [rbp - 8], rax	     15815	i386-dis.c	FUNCTION_30
0x4006e38	      0xb800000080	                     mov eax, 0x80000000	     15817	i386-dis.c	FUNCTION_30
0x4006e3d	        0x483345f8	                xor rax, qword [rbp - 8]	     15817	i386-dis.c	FUNCTION_30
0x4006e41	    0x480500000080	             add rax, 0xffffffff80000000	     15817	i386-dis.c	FUNCTION_30
0x4006e47	        0x488945f8	                mov qword [rbp - 8], rax	     15817	i386-dis.c	FUNCTION_30
0x4006e4b	        0x488b45f8	                mov rax, qword [rbp - 8]	     15819	i386-dis.c	FUNCTION_30
0x4006e4f	              0xc9	                                   leave	     15820	i386-dis.c	FUNCTION_30
0x4006e50	              0xc3	                                     ret	     15820	i386-dis.c	FUNCTION_30
OP_J	CALL,6:WHILE,0:functions,0:DO,0:ELSE,1:IF,6:SWITCH,1:FOR,0	140
0x40078dc	              0x55	                                push rbp	     16141	i386-dis.c	FUNCTION_38
0x40078dd	          0x4889e5	                            mov rbp, rsp	     16141	i386-dis.c	FUNCTION_38
0x40078e0	        0x4883ec30	                           sub rsp, 0x30	     16141	i386-dis.c	FUNCTION_38
0x40078e4	          0x897ddc	             mov dword [rbp - 0x24], edi	     16141	i386-dis.c	FUNCTION_38
0x40078e7	          0x8975d8	             mov dword [rbp - 0x28], esi	     16141	i386-dis.c	FUNCTION_38
0x40078ea	    0x48c745f0ffff	mov qword [rbp - 0x10], 0xffffffffffffffff	     16143	i386-dis.c	FUNCTION_38
0x40078f2	    0x48c745f80000	                  mov qword [rbp - 8], 0	     16144	i386-dis.c	FUNCTION_38
0x40078fa	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x40078fd	          0x83f801	                              cmp eax, 1	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007900	            0x740a	                            je 0x400790c	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007902	          0x83f804	                              cmp eax, 4	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007905	            0x747b	                            je 0x4007982	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007907	      0xe976010000	                           jmp 0x4007a82	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x400790c	    0x488b05000000	            mov rax, qword [0x04007913] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007913	        0x488d5001	                      lea rdx, [rax + 1]	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007917	    0x488b05000000	            mov rax, qword [0x0400791e] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x400791e	        0x488b4068	            mov rax, qword [rax + 0x68] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007922	          0x488b00	                    mov rax, qword [rax]	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007925	          0x4839c2	                            cmp rdx, rax	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007928	            0x761d	                           jbe 0x4007947	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x400792a	    0x488b05000000	            mov rax, qword [0x04007931] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007931	        0x488d5001	                      lea rdx, [rax + 1]	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007935	    0x488b05000000	            mov rax, qword [0x0400793c] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x400793c	          0x4889d6	                            mov rsi, rdx	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x400793f	          0x4889c7	                            mov rdi, rax	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007942	      0xe8f986ffff	                     call sym.fetch_data	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007947	    0x488b05000000	            mov rax, qword [0x0400794e] 	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x400794e	        0x488d5001	                      lea rdx, [rax + 1]	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007952	    0x488915000000	            mov qword [0x04007959], rdx 	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007959	           0xfb600	                   movzx eax, byte [rax]	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x400795c	           0xfb6c0	                           movzx eax, al	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x400795f	        0x488945e8	             mov qword [rbp - 0x18], rax	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007963	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4007967	      0x2580000000	                           and eax, 0x80	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x400796c	          0x4885c0	                           test rax, rax	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x400796f	     0xf8426010000	                            je 0x4007a9b	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4007975	    0x48816de80001	           sub qword [rbp - 0x18], 0x100	     16152	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x400797d	      0xe919010000	                           jmp 0x4007a9b	     16153	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007982	    0x8b0500000000	            mov eax, dword [0x04007988] 	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4007988	            0x85c0	                           test eax, eax	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x400798a	            0x751c	                           jne 0x40079a8	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x400798c	    0x8b0500000000	            mov eax, dword [0x04007992] 	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4007992	          0x83e008	                              and eax, 8	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4007995	            0x85c0	                           test eax, eax	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4007997	            0x740f	                            je 0x40079a8	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4007999	    0x8b0500000000	            mov eax, dword [0x0400799f] 	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x400799f	          0x83c848	                            or eax, 0x48	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x40079a2	    0x890500000000	            mov dword [0x040079a8], eax 	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x40079a8	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     16157	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079ab	          0x83e001	                              and eax, 1	     16157	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079ae	            0x85c0	                           test eax, eax	     16157	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079b0	            0x7522	                           jne 0x40079d4	     16157	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079b2	    0x8b0500000000	            mov eax, dword [0x040079b8] 	     16158	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079b8	          0x83f802	                              cmp eax, 2	     16158	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079bb	            0x7522	                           jne 0x40079df	     16158	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079bd	    0x8b0500000000	            mov eax, dword [0x040079c3] 	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079c3	            0x85c0	                           test eax, eax	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079c5	            0x750d	                           jne 0x40079d4	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079c7	    0x8b0500000000	            mov eax, dword [0x040079cd] 	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079cd	          0x83e008	                              and eax, 8	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079d0	            0x85c0	                           test eax, eax	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079d2	            0x740b	                            je 0x40079df	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40079d4	      0xe898f3ffff	                         call sym.get32s	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x40079d9	        0x488945e8	             mov qword [rbp - 0x18], rax	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x40079dd	            0xeb64	                           jmp 0x4007a43	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x40079df	      0xe86df4ffff	                          call sym.get16	     16163	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_2
0x40079e4	            0x4898	                                    cdqe	     16163	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_2
0x40079e6	        0x488945e8	             mov qword [rbp - 0x18], rax	     16163	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_2
0x40079ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     16164	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x40079ee	      0x2500800000	                         and eax, 0x8000	     16164	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x40079f3	          0x4885c0	                           test rax, rax	     16164	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x40079f6	            0x7408	                            je 0x4007a00	     16164	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x40079f8	    0x48816de80000	         sub qword [rbp - 0x18], 0x10000	     16165	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x4007a00	    0x48c745f0ffff	          mov qword [rbp - 0x10], 0xffff	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4007a08	    0x8b0500000000	            mov eax, dword [0x04007a0e] 	     16171	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a0e	      0x2500020000	                          and eax, 0x200	     16171	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a13	            0x85c0	                           test eax, eax	     16171	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a15	            0x752c	                           jne 0x4007a43	     16171	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a17	    0x488b05000000	            mov rax, qword [0x04007a1e] 	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a1e	          0x4889c2	                            mov rdx, rax	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a21	    0x488b05000000	            mov rax, qword [0x04007a28] 	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a28	          0x4829c2	                            sub rdx, rax	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a2b	          0x4889d0	                            mov rax, rdx	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a2e	          0x4889c2	                            mov rdx, rax	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a31	    0x488b05000000	            mov rax, qword [0x04007a38] 	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a38	          0x4801d0	                            add rax, rdx	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a3b	        0x66b80000	                               mov ax, 0	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a3f	        0x488945f8	                mov qword [rbp - 8], rax	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4007a43	    0x8b0500000000	            mov eax, dword [0x04007a49] 	     16175	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a49	          0x83f802	                              cmp eax, 2	     16175	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a4c	            0x7517	                           jne 0x4007a65	     16175	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a4e	    0x8b0500000000	            mov eax, dword [0x04007a54] 	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a54	            0x85c0	                           test eax, eax	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a56	            0x7546	                           jne 0x4007a9e	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a58	    0x8b0500000000	            mov eax, dword [0x04007a5e] 	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a5e	          0x83e008	                              and eax, 8	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a61	            0x85c0	                           test eax, eax	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a63	            0x7539	                           jne 0x4007a9e	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a65	    0x8b0500000000	            mov eax, dword [0x04007a6b] 	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a6b	      0x2500020000	                          and eax, 0x200	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a70	            0x89c2	                            mov edx, eax	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a72	    0x8b0500000000	            mov eax, dword [0x04007a78] 	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a78	             0x9d0	                             or eax, edx	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a7a	    0x890500000000	            mov dword [0x04007a80], eax 	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4007a80	            0xeb1c	                           jmp 0x4007a9e	     16178	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007a82	      0xbe00000000	                              mov esi, 0	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4007a87	      0xbf00000000	                              mov edi, 0	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4007a8c	      0xe800000000	                          call 0x4007a91	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4007a91	          0x4889c7	                            mov rdi, rax	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4007a94	      0xe830d0ffff	                        call sym.oappend	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4007a99	            0xeb6c	                           jmp 0x4007b07	     16181	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007a9b	              0x90	                                     nop	     16153	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007a9c	            0xeb01	                           jmp 0x4007a9f	     16153	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007a9e	              0x90	                                     nop	     16178	i386-dis.c	FUNCTION_38	SWITCH_1
0x4007a9f	    0x488b05000000	            mov rax, qword [0x04007aa6] 	     16183	i386-dis.c	FUNCTION_38
0x4007aa6	          0x4889c2	                            mov rdx, rax	     16183	i386-dis.c	FUNCTION_38
0x4007aa9	    0x488b05000000	            mov rax, qword [0x04007ab0] 	     16183	i386-dis.c	FUNCTION_38
0x4007ab0	          0x4829c2	                            sub rdx, rax	     16183	i386-dis.c	FUNCTION_38
0x4007ab3	          0x4889d0	                            mov rax, rdx	     16183	i386-dis.c	FUNCTION_38
0x4007ab6	          0x4889c2	                            mov rdx, rax	     16183	i386-dis.c	FUNCTION_38
0x4007ab9	    0x488b05000000	            mov rax, qword [0x04007ac0] 	     16183	i386-dis.c	FUNCTION_38
0x4007ac0	          0x4801c2	                            add rdx, rax	     16183	i386-dis.c	FUNCTION_38
0x4007ac3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     16183	i386-dis.c	FUNCTION_38
0x4007ac7	          0x4801d0	                            add rax, rdx	     16183	i386-dis.c	FUNCTION_38
0x4007aca	        0x482345f0	             and rax, qword [rbp - 0x10]	     16183	i386-dis.c	FUNCTION_38
0x4007ace	        0x480b45f8	                 or rax, qword [rbp - 8]	     16183	i386-dis.c	FUNCTION_38
0x4007ad2	        0x488945e8	             mov qword [rbp - 0x18], rax	     16183	i386-dis.c	FUNCTION_38
0x4007ad6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     16184	i386-dis.c	FUNCTION_38	CALL_4
0x4007ada	      0xbe00000000	                              mov esi, 0	     16184	i386-dis.c	FUNCTION_38	CALL_4
0x4007adf	          0x4889c7	                            mov rdi, rax	     16184	i386-dis.c	FUNCTION_38	CALL_4
0x4007ae2	      0xe8f2f3ffff	                         call sym.set_op	     16184	i386-dis.c	FUNCTION_38	CALL_4
0x4007ae7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     16185	i386-dis.c	FUNCTION_38	CALL_5
0x4007aeb	          0x4889c2	                            mov rdx, rax	     16185	i386-dis.c	FUNCTION_38	CALL_5
0x4007aee	      0xbe01000000	                              mov esi, 1	     16185	i386-dis.c	FUNCTION_38	CALL_5
0x4007af3	      0xbf00000000	                              mov edi, 0	     16185	i386-dis.c	FUNCTION_38	CALL_5
0x4007af8	      0xe8cfd0ffff	            call sym.print_operand_value	     16185	i386-dis.c	FUNCTION_38	CALL_5
0x4007afd	      0xbf00000000	                              mov edi, 0	     16186	i386-dis.c	FUNCTION_38	CALL_6
0x4007b02	      0xe8c2cfffff	                        call sym.oappend	     16186	i386-dis.c	FUNCTION_38	CALL_6
0x4007b07	              0xc9	                                   leave	     16187	i386-dis.c	FUNCTION_38
0x4007b08	              0xc3	                                     ret	     16187	i386-dis.c	FUNCTION_38
XMM_Fixup	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,1:FOR,0	34
0x4009191	              0x55	                                push rbp	     17050	i386-dis.c	FUNCTION_75
0x4009192	          0x4889e5	                            mov rbp, rsp	     17050	i386-dis.c	FUNCTION_75
0x4009195	        0x4883ec20	                           sub rsp, 0x20	     17050	i386-dis.c	FUNCTION_75
0x4009199	          0x897dec	             mov dword [rbp - 0x14], edi	     17050	i386-dis.c	FUNCTION_75
0x400919c	          0x8975e8	             mov dword [rbp - 0x18], esi	     17050	i386-dis.c	FUNCTION_75
0x400919f	     0xfb605000000	           movzx eax, byte [0x040091a6] 	     17053	i386-dis.c	FUNCTION_75	IF_1
0x40091a6	            0x84c0	                             test al, al	     17053	i386-dis.c	FUNCTION_75	IF_1
0x40091a8	            0x7435	                            je 0x40091df	     17053	i386-dis.c	FUNCTION_75	IF_1
0x40091aa	    0x8b0500000000	            mov eax, dword [0x040091b0] 	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091b0	      0x3d80000000	                           cmp eax, 0x80	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091b5	            0x7409	                            je 0x40091c0	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091b7	      0x3d00010000	                          cmp eax, 0x100	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091bc	            0x740f	                            je 0x40091cd	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091be	            0xeb1a	                           jmp 0x40091da	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091c0	    0x488b05000000	            mov rax, qword [0x040091c7] 	     17058	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091c7	        0x488945f8	                mov qword [rbp - 8], rax	     17058	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091cb	            0xeb1d	                           jmp 0x40091ea	     17059	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091cd	    0x488b05000000	            mov rax, qword [0x040091d4] 	     17061	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091d4	        0x488945f8	                mov qword [rbp - 8], rax	     17061	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091d8	            0xeb10	                           jmp 0x40091ea	     17062	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40091da	      0xe800000000	                          call 0x40091df	     17064	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1	CALL_1
0x40091df	    0x488b05000000	            mov rax, qword [0x040091e6] 	     17068	i386-dis.c	FUNCTION_75	ELSE_1
0x40091e6	        0x488945f8	                mov qword [rbp - 8], rax	     17068	i386-dis.c	FUNCTION_75	ELSE_1
0x40091ea	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x40091ed	            0x4898	                                    cdqe	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x40091ef	    0x488d14c50000	                        lea rdx, [rax*8]	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x40091f7	        0x488b45f8	                mov rax, qword [rbp - 8]	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x40091fb	          0x4801d0	                            add rax, rdx	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x40091fe	          0x488b00	                    mov rax, qword [rax]	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x4009201	          0x4889c7	                            mov rdi, rax	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x4009204	      0xe8c0b8ffff	                        call sym.oappend	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x4009209	              0x90	                                     nop	     17070	i386-dis.c	FUNCTION_75
0x400920a	              0xc9	                                   leave	     17070	i386-dis.c	FUNCTION_75
0x400920b	              0xc3	                                     ret	     17070	i386-dis.c	FUNCTION_75
get_sib	CALL,0:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0	57
0x4001a69	              0x55	                                push rbp	     13152	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9
0x4001a6a	          0x4889e5	                            mov rbp, rsp	     13152	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9
0x4001a6d	        0x4883ec10	                           sub rsp, 0x10	     13152	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9
0x4001a71	        0x48897df8	                mov qword [rbp - 8], rdi	     13152	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9
0x4001a75	          0x8975f4	              mov dword [rbp - 0xc], esi	     13152	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9
0x4001a78	     0xfb605000000	           movzx eax, byte [0x04001a7f] 	     13154	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4001a7f	            0x84c0	                             test al, al	     13154	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4001a81	     0xf84c0000000	                            je 0x4001b47	     13154	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4001a87	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4001a8a	          0x83e002	                              and eax, 2	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4001a8d	            0x85c0	                           test eax, eax	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4001a8f	            0x750f	                           jne 0x4001aa0	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4001a91	    0x8b0500000000	            mov eax, dword [0x04001a97] 	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4001a97	          0x83f802	                              cmp eax, 2	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4001a9a	     0xf85a7000000	                           jne 0x4001b47	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4001aa0	    0x8b0500000000	            mov eax, dword [0x04001aa6] 	     13156	i386-dis.c	FUNCTION_9	IF_1
0x4001aa6	          0x83f803	                              cmp eax, 3	     13156	i386-dis.c	FUNCTION_9	IF_1
0x4001aa9	     0xf8498000000	                            je 0x4001b47	     13156	i386-dis.c	FUNCTION_9	IF_1
0x4001aaf	    0x8b0500000000	            mov eax, dword [0x04001ab5] 	     13157	i386-dis.c	FUNCTION_9	IF_1
0x4001ab5	          0x83f804	                              cmp eax, 4	     13157	i386-dis.c	FUNCTION_9	IF_1
0x4001ab8	     0xf8589000000	                           jne 0x4001b47	     13157	i386-dis.c	FUNCTION_9	IF_1
0x4001abe	    0x488b05000000	            mov rax, qword [0x04001ac5] 	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001ac5	        0x488d5002	                      lea rdx, [rax + 2]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001ac9	        0x488b45f8	                mov rax, qword [rbp - 8]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001acd	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001ad1	          0x488b00	                    mov rax, qword [rax]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001ad4	          0x4839c2	                            cmp rdx, rax	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001ad7	            0x761a	                           jbe 0x4001af3	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001ad9	    0x488b05000000	            mov rax, qword [0x04001ae0] 	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001ae0	        0x488d5002	                      lea rdx, [rax + 2]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001ae4	        0x488b45f8	                mov rax, qword [rbp - 8]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001ae8	          0x4889d6	                            mov rsi, rdx	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001aeb	          0x4889c7	                            mov rdi, rax	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001aee	      0xe84de5ffff	                     call sym.fetch_data	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4001af3	    0x488b05000000	            mov rax, qword [0x04001afa] 	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4001afa	        0x4883c001	                              add rax, 1	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4001afe	           0xfb600	                   movzx eax, byte [rax]	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4001b01	          0xc0e803	                               shr al, 3	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4001b04	           0xfb6c0	                           movzx eax, al	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4001b07	          0x83e007	                              and eax, 7	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4001b0a	    0x890500000000	            mov dword [0x04001b10], eax 	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4001b10	    0x488b05000000	            mov rax, qword [0x04001b17] 	     13161	i386-dis.c	FUNCTION_9	IF_1
0x4001b17	        0x4883c001	                              add rax, 1	     13161	i386-dis.c	FUNCTION_9	IF_1
0x4001b1b	           0xfb600	                   movzx eax, byte [rax]	     13161	i386-dis.c	FUNCTION_9	IF_1
0x4001b1e	          0xc0e806	                               shr al, 6	     13161	i386-dis.c	FUNCTION_9	IF_1
0x4001b21	           0xfb6c0	                           movzx eax, al	     13161	i386-dis.c	FUNCTION_9	IF_1
0x4001b24	          0x83e003	                              and eax, 3	     13161	i386-dis.c	FUNCTION_9	IF_1
0x4001b27	    0x890500000000	            mov dword [0x04001b2d], eax 	     13161	i386-dis.c	FUNCTION_9	IF_1
0x4001b2d	    0x488b05000000	            mov rax, qword [0x04001b34] 	     13162	i386-dis.c	FUNCTION_9	IF_1
0x4001b34	        0x4883c001	                              add rax, 1	     13162	i386-dis.c	FUNCTION_9	IF_1
0x4001b38	           0xfb600	                   movzx eax, byte [rax]	     13162	i386-dis.c	FUNCTION_9	IF_1
0x4001b3b	           0xfb6c0	                           movzx eax, al	     13162	i386-dis.c	FUNCTION_9	IF_1
0x4001b3e	          0x83e007	                              and eax, 7	     13162	i386-dis.c	FUNCTION_9	IF_1
0x4001b41	    0x890500000000	            mov dword [0x04001b47], eax 	     13162	i386-dis.c	FUNCTION_9	IF_1
0x4001b47	              0x90	                                     nop	     13164	i386-dis.c	FUNCTION_9
0x4001b48	              0xc9	                                   leave	     13164	i386-dis.c	FUNCTION_9
0x4001b49	              0xc3	                                     ret	     13164	i386-dis.c	FUNCTION_9
get16	CALL,0:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	33
0x4006e51	              0x55	                                push rbp	     15824	i386-dis.c	FUNCTION_31
0x4006e52	          0x4889e5	                            mov rbp, rsp	     15824	i386-dis.c	FUNCTION_31
0x4006e55	        0x4883ec10	                           sub rsp, 0x10	     15824	i386-dis.c	FUNCTION_31
0x4006e59	    0xc745fc000000	                  mov dword [rbp - 4], 0	     15825	i386-dis.c	FUNCTION_31
0x4006e60	    0x488b05000000	            mov rax, qword [0x04006e67] 	     15827	i386-dis.c	FUNCTION_31
0x4006e67	        0x488d5002	                      lea rdx, [rax + 2]	     15827	i386-dis.c	FUNCTION_31
0x4006e6b	    0x488b05000000	            mov rax, qword [0x04006e72] 	     15827	i386-dis.c	FUNCTION_31
0x4006e72	        0x488b4068	            mov rax, qword [rax + 0x68] 	     15827	i386-dis.c	FUNCTION_31
0x4006e76	          0x488b00	                    mov rax, qword [rax]	     15827	i386-dis.c	FUNCTION_31
0x4006e79	          0x4839c2	                            cmp rdx, rax	     15827	i386-dis.c	FUNCTION_31
0x4006e7c	            0x761d	                           jbe 0x4006e9b	     15827	i386-dis.c	FUNCTION_31
0x4006e7e	    0x488b05000000	            mov rax, qword [0x04006e85] 	     15827	i386-dis.c	FUNCTION_31
0x4006e85	        0x488d5002	                      lea rdx, [rax + 2]	     15827	i386-dis.c	FUNCTION_31
0x4006e89	    0x488b05000000	            mov rax, qword [0x04006e90] 	     15827	i386-dis.c	FUNCTION_31
0x4006e90	          0x4889d6	                            mov rsi, rdx	     15827	i386-dis.c	FUNCTION_31
0x4006e93	          0x4889c7	                            mov rdi, rax	     15827	i386-dis.c	FUNCTION_31
0x4006e96	      0xe8a591ffff	                     call sym.fetch_data	     15827	i386-dis.c	FUNCTION_31
0x4006e9b	    0x488b05000000	            mov rax, qword [0x04006ea2] 	     15828	i386-dis.c	FUNCTION_31
0x4006ea2	        0x488d5001	                      lea rdx, [rax + 1]	     15828	i386-dis.c	FUNCTION_31
0x4006ea6	    0x488915000000	            mov qword [0x04006ead], rdx 	     15828	i386-dis.c	FUNCTION_31
0x4006ead	           0xfb600	                   movzx eax, byte [rax]	     15828	i386-dis.c	FUNCTION_31
0x4006eb0	           0xfb6c0	                           movzx eax, al	     15828	i386-dis.c	FUNCTION_31
0x4006eb3	          0x8945fc	                mov dword [rbp - 4], eax	     15828	i386-dis.c	FUNCTION_31
0x4006eb6	    0x488b05000000	            mov rax, qword [0x04006ebd] 	     15829	i386-dis.c	FUNCTION_31
0x4006ebd	        0x488d5001	                      lea rdx, [rax + 1]	     15829	i386-dis.c	FUNCTION_31
0x4006ec1	    0x488915000000	            mov qword [0x04006ec8], rdx 	     15829	i386-dis.c	FUNCTION_31
0x4006ec8	           0xfb600	                   movzx eax, byte [rax]	     15829	i386-dis.c	FUNCTION_31
0x4006ecb	           0xfb6c0	                           movzx eax, al	     15829	i386-dis.c	FUNCTION_31
0x4006ece	          0xc1e008	                              shl eax, 8	     15829	i386-dis.c	FUNCTION_31
0x4006ed1	           0x945fc	                 or dword [rbp - 4], eax	     15829	i386-dis.c	FUNCTION_31
0x4006ed4	          0x8b45fc	                mov eax, dword [rbp - 4]	     15830	i386-dis.c	FUNCTION_31
0x4006ed7	              0xc9	                                   leave	     15831	i386-dis.c	FUNCTION_31
0x4006ed8	              0xc3	                                     ret	     15831	i386-dis.c	FUNCTION_31
oappend_maybe_intel	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	13
0x40032bd	              0x55	                                push rbp	     13963	i386-dis.c	FUNCTION_14
0x40032be	          0x4889e5	                            mov rbp, rsp	     13963	i386-dis.c	FUNCTION_14
0x40032c1	        0x4883ec10	                           sub rsp, 0x10	     13963	i386-dis.c	FUNCTION_14
0x40032c5	        0x48897df8	                mov qword [rbp - 8], rdi	     13963	i386-dis.c	FUNCTION_14
0x40032c9	     0xfb605000000	           movzx eax, byte [0x040032d0] 	     13964	i386-dis.c	FUNCTION_14	CALL_1
0x40032d0	        0x480fbed0	                           movsx rdx, al	     13964	i386-dis.c	FUNCTION_14	CALL_1
0x40032d4	        0x488b45f8	                mov rax, qword [rbp - 8]	     13964	i386-dis.c	FUNCTION_14	CALL_1
0x40032d8	          0x4801d0	                            add rax, rdx	     13964	i386-dis.c	FUNCTION_14	CALL_1
0x40032db	          0x4889c7	                            mov rdi, rax	     13964	i386-dis.c	FUNCTION_14	CALL_1
0x40032de	      0xe8e6170000	                        call sym.oappend	     13964	i386-dis.c	FUNCTION_14	CALL_1
0x40032e3	              0x90	                                     nop	     13965	i386-dis.c	FUNCTION_14
0x40032e4	              0xc9	                                   leave	     13965	i386-dis.c	FUNCTION_14
0x40032e5	              0xc3	                                     ret	     13965	i386-dis.c	FUNCTION_14
OP_ST	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	10
0x40032e6	              0x55	                                push rbp	     13969	i386-dis.c	FUNCTION_15
0x40032e7	          0x4889e5	                            mov rbp, rsp	     13969	i386-dis.c	FUNCTION_15
0x40032ea	        0x4883ec10	                           sub rsp, 0x10	     13969	i386-dis.c	FUNCTION_15
0x40032ee	          0x897dfc	                mov dword [rbp - 4], edi	     13969	i386-dis.c	FUNCTION_15
0x40032f1	          0x8975f8	                mov dword [rbp - 8], esi	     13969	i386-dis.c	FUNCTION_15
0x40032f4	      0xbf00000000	                              mov edi, 0	     13970	i386-dis.c	FUNCTION_15	CALL_1
0x40032f9	      0xe8bfffffff	            call sym.oappend_maybe_intel	     13970	i386-dis.c	FUNCTION_15	CALL_1
0x40032fe	              0x90	                                     nop	     13971	i386-dis.c	FUNCTION_15
0x40032ff	              0xc9	                                   leave	     13971	i386-dis.c	FUNCTION_15
0x4003300	              0xc3	                                     ret	     13971	i386-dis.c	FUNCTION_15
PCLMUL_Fixup	CALL,4:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,1:FOR,0	88
0x400a3b0	              0x55	                                push rbp	     17782	i386-dis.c	FUNCTION_95
0x400a3b1	          0x4889e5	                            mov rbp, rsp	     17782	i386-dis.c	FUNCTION_95
0x400a3b4	        0x4883ec30	                           sub rsp, 0x30	     17782	i386-dis.c	FUNCTION_95
0x400a3b8	          0x897ddc	             mov dword [rbp - 0x24], edi	     17782	i386-dis.c	FUNCTION_95
0x400a3bb	          0x8975d8	             mov dword [rbp - 0x28], esi	     17782	i386-dis.c	FUNCTION_95
0x400a3be	    0x64488b042528	                mov rax, qword fs:[0x28]	     17782	i386-dis.c	FUNCTION_95
0x400a3c7	        0x488945f8	                mov qword [rbp - 8], rax	     17782	i386-dis.c	FUNCTION_95
0x400a3cb	            0x31c0	                            xor eax, eax	     17782	i386-dis.c	FUNCTION_95
0x400a3cd	    0x488b05000000	            mov rax, qword [0x0400a3d4] 	     17785	i386-dis.c	FUNCTION_95
0x400a3d4	        0x488d5001	                      lea rdx, [rax + 1]	     17785	i386-dis.c	FUNCTION_95
0x400a3d8	    0x488b05000000	            mov rax, qword [0x0400a3df] 	     17785	i386-dis.c	FUNCTION_95
0x400a3df	        0x488b4068	            mov rax, qword [rax + 0x68] 	     17785	i386-dis.c	FUNCTION_95
0x400a3e3	          0x488b00	                    mov rax, qword [rax]	     17785	i386-dis.c	FUNCTION_95
0x400a3e6	          0x4839c2	                            cmp rdx, rax	     17785	i386-dis.c	FUNCTION_95
0x400a3e9	            0x761d	                           jbe 0x400a408	     17785	i386-dis.c	FUNCTION_95
0x400a3eb	    0x488b05000000	            mov rax, qword [0x0400a3f2] 	     17785	i386-dis.c	FUNCTION_95
0x400a3f2	        0x488d5001	                      lea rdx, [rax + 1]	     17785	i386-dis.c	FUNCTION_95
0x400a3f6	    0x488b05000000	            mov rax, qword [0x0400a3fd] 	     17785	i386-dis.c	FUNCTION_95
0x400a3fd	          0x4889d6	                            mov rsi, rdx	     17785	i386-dis.c	FUNCTION_95
0x400a400	          0x4889c7	                            mov rdi, rax	     17785	i386-dis.c	FUNCTION_95
0x400a403	      0xe8385cffff	                     call sym.fetch_data	     17785	i386-dis.c	FUNCTION_95
0x400a408	    0x488b05000000	            mov rax, qword [0x0400a40f] 	     17786	i386-dis.c	FUNCTION_95
0x400a40f	        0x488d5001	                      lea rdx, [rax + 1]	     17786	i386-dis.c	FUNCTION_95
0x400a413	    0x488915000000	            mov qword [0x0400a41a], rdx 	     17786	i386-dis.c	FUNCTION_95
0x400a41a	           0xfb600	                   movzx eax, byte [rax]	     17786	i386-dis.c	FUNCTION_95
0x400a41d	           0xfb6c0	                           movzx eax, al	     17786	i386-dis.c	FUNCTION_95
0x400a420	          0x8945e4	             mov dword [rbp - 0x1c], eax	     17786	i386-dis.c	FUNCTION_95
0x400a423	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x400a426	          0x83f810	                           cmp eax, 0x10	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x400a429	            0x7407	                            je 0x400a432	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x400a42b	          0x83f811	                           cmp eax, 0x11	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x400a42e	            0x740b	                            je 0x400a43b	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x400a430	            0xeb11	                           jmp 0x400a443	     17796	i386-dis.c	FUNCTION_95	SWITCH_1
0x400a432	    0xc745e4020000	               mov dword [rbp - 0x1c], 2	     17790	i386-dis.c	FUNCTION_95	SWITCH_1
0x400a439	            0xeb08	                           jmp 0x400a443	     17791	i386-dis.c	FUNCTION_95	SWITCH_1
0x400a43b	    0xc745e4030000	               mov dword [rbp - 0x1c], 3	     17793	i386-dis.c	FUNCTION_95	SWITCH_1
0x400a442	              0x90	                                     nop	     17794	i386-dis.c	FUNCTION_95	SWITCH_1
0x400a443	        0x837de403	               cmp dword [rbp - 0x1c], 3	     17798	i386-dis.c	FUNCTION_95	IF_1	CALL_1
0x400a447	     0xf8782000000	                            ja 0x400a4cf	     17798	i386-dis.c	FUNCTION_95	IF_1	CALL_1
0x400a44d	    0x488b05000000	            mov rax, qword [0x0400a454] 	     17801	i386-dis.c	FUNCTION_95	IF_1
0x400a454	        0x4883e803	                              sub rax, 3	     17801	i386-dis.c	FUNCTION_95	IF_1
0x400a458	        0x488945e8	             mov qword [rbp - 0x18], rax	     17801	i386-dis.c	FUNCTION_95	IF_1
0x400a45c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17802	i386-dis.c	FUNCTION_95	IF_1
0x400a460	           0xfb600	                   movzx eax, byte [rax]	     17802	i386-dis.c	FUNCTION_95	IF_1
0x400a463	          0x8845f0	               mov byte [rbp - 0x10], al	     17802	i386-dis.c	FUNCTION_95	IF_1
0x400a466	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17803	i386-dis.c	FUNCTION_95	IF_1
0x400a46a	         0xfb64001	               movzx eax, byte [rax + 1]	     17803	i386-dis.c	FUNCTION_95	IF_1
0x400a46e	          0x8845f1	                mov byte [rbp - 0xf], al	     17803	i386-dis.c	FUNCTION_95	IF_1
0x400a471	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17804	i386-dis.c	FUNCTION_95	IF_1
0x400a475	         0xfb64002	               movzx eax, byte [rax + 2]	     17804	i386-dis.c	FUNCTION_95	IF_1
0x400a479	          0x8845f2	                mov byte [rbp - 0xe], al	     17804	i386-dis.c	FUNCTION_95	IF_1
0x400a47c	        0xc645f300	                 mov byte [rbp - 0xd], 0	     17805	i386-dis.c	FUNCTION_95	IF_1
0x400a480	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     17806	i386-dis.c	FUNCTION_95	IF_1	CALL_2
0x400a483	        0x48c1e004	                              shl rax, 4	     17806	i386-dis.c	FUNCTION_95	IF_1	CALL_2
0x400a487	    0x480500000000	                              add rax, 0	     17806	i386-dis.c	FUNCTION_95	IF_1	CALL_2
0x400a48d	          0x488b10	                    mov rdx, qword [rax]	     17806	i386-dis.c	FUNCTION_95	IF_1	CALL_2
0x400a490	        0x488d4df0	                   lea rcx, [rbp - 0x10]	     17806	i386-dis.c	FUNCTION_95	IF_1	CALL_2
0x400a494	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     17806	i386-dis.c	FUNCTION_95	IF_1	CALL_2
0x400a498	      0xbe00000000	                              mov esi, 0	     17806	i386-dis.c	FUNCTION_95	IF_1	CALL_2
0x400a49d	          0x4889c7	                            mov rdi, rax	     17806	i386-dis.c	FUNCTION_95	IF_1	CALL_2
0x400a4a0	      0xb800000000	                              mov eax, 0	     17806	i386-dis.c	FUNCTION_95	IF_1	CALL_2
0x400a4a5	      0xe800000000	                          call 0x400a4aa	     17806	i386-dis.c	FUNCTION_95	IF_1	CALL_2
0x400a4aa	    0x488b05000000	            mov rax, qword [0x0400a4b1] 	     17807	i386-dis.c	FUNCTION_95	IF_1
0x400a4b1	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	     17807	i386-dis.c	FUNCTION_95	IF_1
0x400a4b4	        0x48c1e204	                              shl rdx, 4	     17807	i386-dis.c	FUNCTION_95	IF_1
0x400a4b8	    0x4881c2000000	                              add rdx, 0	     17807	i386-dis.c	FUNCTION_95	IF_1
0x400a4bf	            0x8b12	                    mov edx, dword [rdx]	     17807	i386-dis.c	FUNCTION_95	IF_1
0x400a4c1	            0x89d2	                            mov edx, edx	     17807	i386-dis.c	FUNCTION_95	IF_1
0x400a4c3	          0x4801d0	                            add rax, rdx	     17807	i386-dis.c	FUNCTION_95	IF_1
0x400a4c6	    0x488905000000	            mov qword [0x0400a4cd], rax 	     17807	i386-dis.c	FUNCTION_95	IF_1
0x400a4cd	            0xeb30	                           jmp 0x400a4ff	     17817	i386-dis.c	FUNCTION_95
0x400a4cf	    0xc60500000000	            mov byte [0x0400a4d6], 0x24 	     17812	i386-dis.c	FUNCTION_95	ELSE_1
0x400a4d6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_3
0x400a4d9	      0xb900000000	                              mov ecx, 0	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_3
0x400a4de	          0x4889c2	                            mov rdx, rax	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_3
0x400a4e1	      0xbe01000000	                              mov esi, 1	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_3
0x400a4e6	          0x4889cf	                            mov rdi, rcx	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_3
0x400a4e9	      0xe8dea6ffff	            call sym.print_operand_value	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_3
0x400a4ee	      0xbf00000000	                              mov edi, 0	     17814	i386-dis.c	FUNCTION_95	ELSE_1	CALL_4
0x400a4f3	      0xe8c58dffff	            call sym.oappend_maybe_intel	     17814	i386-dis.c	FUNCTION_95	ELSE_1	CALL_4
0x400a4f8	    0xc60500000000	                mov byte [0x0400a4ff], 0	     17815	i386-dis.c	FUNCTION_95	ELSE_1
0x400a4ff	              0x90	                                     nop	     17817	i386-dis.c	FUNCTION_95
0x400a500	        0x488b45f8	                mov rax, qword [rbp - 8]	     17817	i386-dis.c	FUNCTION_95
0x400a504	    0x644833042528	                xor rax, qword fs:[0x28]	     17817	i386-dis.c	FUNCTION_95
0x400a50d	            0x7405	                            je 0x400a514	     17817	i386-dis.c	FUNCTION_95
0x400a50f	      0xe800000000	                          call 0x400a514	     17817	i386-dis.c	FUNCTION_95
0x400a514	              0xc9	                                   leave	     17817	i386-dis.c	FUNCTION_95
0x400a515	              0xc3	                                     ret	     17817	i386-dis.c	FUNCTION_95
OP_OFF	CALL,8:WHILE,0:functions,0:DO,0:ELSE,1:IF,4:SWITCH,0:FOR,0	54
0x4007c10	              0x55	                                push rbp	     16223	i386-dis.c	FUNCTION_41
0x4007c11	          0x4889e5	                            mov rbp, rsp	     16223	i386-dis.c	FUNCTION_41
0x4007c14	        0x4883ec20	                           sub rsp, 0x20	     16223	i386-dis.c	FUNCTION_41
0x4007c18	          0x897dec	             mov dword [rbp - 0x14], edi	     16223	i386-dis.c	FUNCTION_41
0x4007c1b	          0x8975e8	             mov dword [rbp - 0x18], esi	     16223	i386-dis.c	FUNCTION_41
0x4007c1e	     0xfb605000000	           movzx eax, byte [0x04007c25] 	     16226	i386-dis.c	FUNCTION_41	IF_1
0x4007c25	            0x84c0	                             test al, al	     16226	i386-dis.c	FUNCTION_41	IF_1
0x4007c27	            0x7419	                            je 0x4007c42	     16226	i386-dis.c	FUNCTION_41	IF_1
0x4007c29	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16226	i386-dis.c	FUNCTION_41	IF_1
0x4007c2c	          0x83e004	                              and eax, 4	     16226	i386-dis.c	FUNCTION_41	IF_1
0x4007c2f	            0x85c0	                           test eax, eax	     16226	i386-dis.c	FUNCTION_41	IF_1
0x4007c31	            0x740f	                            je 0x4007c42	     16226	i386-dis.c	FUNCTION_41	IF_1
0x4007c33	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     16227	i386-dis.c	FUNCTION_41	CALL_1
0x4007c36	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     16227	i386-dis.c	FUNCTION_41	CALL_1
0x4007c39	            0x89d6	                            mov esi, edx	     16227	i386-dis.c	FUNCTION_41	CALL_1
0x4007c3b	            0x89c7	                            mov edi, eax	     16227	i386-dis.c	FUNCTION_41	CALL_1
0x4007c3d	      0xe86ad3ffff	             call sym.intel_operand_size	     16227	i386-dis.c	FUNCTION_41	CALL_1
0x4007c42	      0xe8aeceffff	                     call sym.append_seg	     16228	i386-dis.c	FUNCTION_41	CALL_2
0x4007c47	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16230	i386-dis.c	FUNCTION_41	IF_2
0x4007c4a	          0x83e002	                              and eax, 2	     16230	i386-dis.c	FUNCTION_41	IF_2
0x4007c4d	            0x85c0	                           test eax, eax	     16230	i386-dis.c	FUNCTION_41	IF_2
0x4007c4f	            0x750b	                           jne 0x4007c5c	     16230	i386-dis.c	FUNCTION_41	IF_2
0x4007c51	    0x8b0500000000	            mov eax, dword [0x04007c57] 	     16230	i386-dis.c	FUNCTION_41	IF_2
0x4007c57	          0x83f802	                              cmp eax, 2	     16230	i386-dis.c	FUNCTION_41	IF_2
0x4007c5a	            0x750b	                           jne 0x4007c67	     16230	i386-dis.c	FUNCTION_41	IF_2
0x4007c5c	      0xe843f0ffff	                          call sym.get32	     16231	i386-dis.c	FUNCTION_41	CALL_3
0x4007c61	        0x488945f8	                mov qword [rbp - 8], rax	     16231	i386-dis.c	FUNCTION_41	CALL_3
0x4007c65	            0xeb0b	                           jmp 0x4007c72	     16231	i386-dis.c	FUNCTION_41	CALL_3
0x4007c67	      0xe8e5f1ffff	                          call sym.get16	     16233	i386-dis.c	FUNCTION_41	CALL_4
0x4007c6c	            0x4898	                                    cdqe	     16233	i386-dis.c	FUNCTION_41	CALL_4
0x4007c6e	        0x488945f8	                mov qword [rbp - 8], rax	     16233	i386-dis.c	FUNCTION_41	CALL_4
0x4007c72	     0xfb605000000	           movzx eax, byte [0x04007c79] 	     16235	i386-dis.c	FUNCTION_41	IF_3
0x4007c79	            0x84c0	                             test al, al	     16235	i386-dis.c	FUNCTION_41	IF_3
0x4007c7b	            0x742a	                            je 0x4007ca7	     16235	i386-dis.c	FUNCTION_41	IF_3
0x4007c7d	    0x8b0500000000	            mov eax, dword [0x04007c83] 	     16237	i386-dis.c	FUNCTION_41	IF_3	IF_4
0x4007c83	            0x85c0	                           test eax, eax	     16237	i386-dis.c	FUNCTION_41	IF_3	IF_4
0x4007c85	            0x7520	                           jne 0x4007ca7	     16237	i386-dis.c	FUNCTION_41	IF_3	IF_4
0x4007c87	    0x488b05000000	            mov rax, qword [0x04007c8e] 	     16239	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_5
0x4007c8e	        0x4883c018	                           add rax, 0x18	     16239	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_5
0x4007c92	          0x488b00	                    mov rax, qword [rax]	     16239	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_5
0x4007c95	          0x4889c7	                            mov rdi, rax	     16239	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_5
0x4007c98	      0xe82cceffff	                        call sym.oappend	     16239	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_5
0x4007c9d	      0xbf00000000	                              mov edi, 0	     16240	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_6
0x4007ca2	      0xe822ceffff	                        call sym.oappend	     16240	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_6
0x4007ca7	        0x488b45f8	                mov rax, qword [rbp - 8]	     16243	i386-dis.c	FUNCTION_41	CALL_7
0x4007cab	          0x4889c2	                            mov rdx, rax	     16243	i386-dis.c	FUNCTION_41	CALL_7
0x4007cae	      0xbe01000000	                              mov esi, 1	     16243	i386-dis.c	FUNCTION_41	CALL_7
0x4007cb3	      0xbf00000000	                              mov edi, 0	     16243	i386-dis.c	FUNCTION_41	CALL_7
0x4007cb8	      0xe80fcfffff	            call sym.print_operand_value	     16243	i386-dis.c	FUNCTION_41	CALL_7
0x4007cbd	      0xbf00000000	                              mov edi, 0	     16244	i386-dis.c	FUNCTION_41	CALL_8
0x4007cc2	      0xe802ceffff	                        call sym.oappend	     16244	i386-dis.c	FUNCTION_41	CALL_8
0x4007cc7	              0x90	                                     nop	     16245	i386-dis.c	FUNCTION_41
0x4007cc8	              0xc9	                                   leave	     16245	i386-dis.c	FUNCTION_41
0x4007cc9	              0xc3	                                     ret	     16245	i386-dis.c	FUNCTION_41
OP_DSreg	CALL,5:WHILE,0:functions,0:DO,0:ELSE,0:IF,2:SWITCH,1:FOR,0	51
0x4007f57	              0x55	                                push rbp	     16326	i386-dis.c	FUNCTION_45
0x4007f58	          0x4889e5	                            mov rbp, rsp	     16326	i386-dis.c	FUNCTION_45
0x4007f5b	        0x4883ec10	                           sub rsp, 0x10	     16326	i386-dis.c	FUNCTION_45
0x4007f5f	          0x897dfc	                mov dword [rbp - 4], edi	     16326	i386-dis.c	FUNCTION_45
0x4007f62	          0x8975f8	                mov dword [rbp - 8], esi	     16326	i386-dis.c	FUNCTION_45
0x4007f65	     0xfb605000000	           movzx eax, byte [0x04007f6c] 	     16327	i386-dis.c	FUNCTION_45	IF_1
0x4007f6c	            0x84c0	                             test al, al	     16327	i386-dis.c	FUNCTION_45	IF_1
0x4007f6e	            0x7467	                            je 0x4007fd7	     16327	i386-dis.c	FUNCTION_45	IF_1
0x4007f70	    0x488b05000000	            mov rax, qword [0x04007f77] 	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f77	        0x4883e801	                              sub rax, 1	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f7b	           0xfb600	                   movzx eax, byte [rax]	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f7e	           0xfb6c0	                           movzx eax, al	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f81	      0x3da5000000	                           cmp eax, 0xa5	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f86	            0x742f	                            je 0x4007fb7	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f88	      0x3da5000000	                           cmp eax, 0xa5	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f8d	            0x7f07	                            jg 0x4007f96	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f8f	          0x83f86f	                           cmp eax, 0x6f	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f92	            0x7412	                            je 0x4007fa6	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f94	            0xeb32	                           jmp 0x4007fc8	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f96	      0x3da7000000	                           cmp eax, 0xa7	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f9b	            0x741a	                            je 0x4007fb7	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007f9d	      0x3dad000000	                           cmp eax, 0xad	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007fa2	            0x7413	                            je 0x4007fb7	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007fa4	            0xeb22	                           jmp 0x4007fc8	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007fa6	          0x8b45f8	                mov eax, dword [rbp - 8]	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x4007fa9	            0x89c6	                            mov esi, eax	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x4007fab	      0xbf2b000000	                           mov edi, 0x2b	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x4007fb0	      0xe8f7cfffff	             call sym.intel_operand_size	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x4007fb5	            0xeb20	                           jmp 0x4007fd7	     16333	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007fb7	          0x8b45f8	                mov eax, dword [rbp - 8]	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4007fba	            0x89c6	                            mov esi, eax	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4007fbc	      0xbf04000000	                              mov edi, 4	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4007fc1	      0xe8e6cfffff	             call sym.intel_operand_size	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4007fc6	            0xeb0f	                           jmp 0x4007fd7	     16338	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4007fc8	          0x8b45f8	                mov eax, dword [rbp - 8]	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4007fcb	            0x89c6	                            mov esi, eax	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4007fcd	      0xbf01000000	                              mov edi, 1	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4007fd2	      0xe8d5cfffff	             call sym.intel_operand_size	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4007fd7	    0x8b0500000000	            mov eax, dword [0x04007fdd] 	     16345	i386-dis.c	FUNCTION_45	IF_2
0x4007fdd	            0x85c0	                           test eax, eax	     16345	i386-dis.c	FUNCTION_45	IF_2
0x4007fdf	            0x750a	                           jne 0x4007feb	     16345	i386-dis.c	FUNCTION_45	IF_2
0x4007fe1	    0xc70500000000	           mov dword [0x04007feb], 0x20 	     16346	i386-dis.c	FUNCTION_45	IF_2
0x4007feb	      0xe805cbffff	                     call sym.append_seg	     16347	i386-dis.c	FUNCTION_45	CALL_4
0x4007ff0	          0x8b55f8	                mov edx, dword [rbp - 8]	     16348	i386-dis.c	FUNCTION_45	CALL_5
0x4007ff3	          0x8b45fc	                mov eax, dword [rbp - 4]	     16348	i386-dis.c	FUNCTION_45	CALL_5
0x4007ff6	            0x89d6	                            mov esi, edx	     16348	i386-dis.c	FUNCTION_45	CALL_5
0x4007ff8	            0x89c7	                            mov edi, eax	     16348	i386-dis.c	FUNCTION_45	CALL_5
0x4007ffa	      0xe890fdffff	                        call sym.ptr_reg	     16348	i386-dis.c	FUNCTION_45	CALL_5
0x4007fff	              0x90	                                     nop	     16349	i386-dis.c	FUNCTION_45
0x4008000	              0xc9	                                   leave	     16349	i386-dis.c	FUNCTION_45
0x4008001	              0xc3	                                     ret	     16349	i386-dis.c	FUNCTION_45
get32	CALL,0:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	47
0x4006ca4	              0x55	                                push rbp	     15795	i386-dis.c	FUNCTION_29
0x4006ca5	          0x4889e5	                            mov rbp, rsp	     15795	i386-dis.c	FUNCTION_29
0x4006ca8	        0x4883ec10	                           sub rsp, 0x10	     15795	i386-dis.c	FUNCTION_29
0x4006cac	    0x48c745f80000	                  mov qword [rbp - 8], 0	     15796	i386-dis.c	FUNCTION_29
0x4006cb4	    0x488b05000000	            mov rax, qword [0x04006cbb] 	     15798	i386-dis.c	FUNCTION_29
0x4006cbb	        0x488d5004	                      lea rdx, [rax + 4]	     15798	i386-dis.c	FUNCTION_29
0x4006cbf	    0x488b05000000	            mov rax, qword [0x04006cc6] 	     15798	i386-dis.c	FUNCTION_29
0x4006cc6	        0x488b4068	            mov rax, qword [rax + 0x68] 	     15798	i386-dis.c	FUNCTION_29
0x4006cca	          0x488b00	                    mov rax, qword [rax]	     15798	i386-dis.c	FUNCTION_29
0x4006ccd	          0x4839c2	                            cmp rdx, rax	     15798	i386-dis.c	FUNCTION_29
0x4006cd0	            0x761d	                           jbe 0x4006cef	     15798	i386-dis.c	FUNCTION_29
0x4006cd2	    0x488b05000000	            mov rax, qword [0x04006cd9] 	     15798	i386-dis.c	FUNCTION_29
0x4006cd9	        0x488d5004	                      lea rdx, [rax + 4]	     15798	i386-dis.c	FUNCTION_29
0x4006cdd	    0x488b05000000	            mov rax, qword [0x04006ce4] 	     15798	i386-dis.c	FUNCTION_29
0x4006ce4	          0x4889d6	                            mov rsi, rdx	     15798	i386-dis.c	FUNCTION_29
0x4006ce7	          0x4889c7	                            mov rdi, rax	     15798	i386-dis.c	FUNCTION_29
0x4006cea	      0xe85193ffff	                     call sym.fetch_data	     15798	i386-dis.c	FUNCTION_29
0x4006cef	    0x488b05000000	            mov rax, qword [0x04006cf6] 	     15799	i386-dis.c	FUNCTION_29
0x4006cf6	        0x488d5001	                      lea rdx, [rax + 1]	     15799	i386-dis.c	FUNCTION_29
0x4006cfa	    0x488915000000	            mov qword [0x04006d01], rdx 	     15799	i386-dis.c	FUNCTION_29
0x4006d01	           0xfb600	                   movzx eax, byte [rax]	     15799	i386-dis.c	FUNCTION_29
0x4006d04	           0xfb6c0	                           movzx eax, al	     15799	i386-dis.c	FUNCTION_29
0x4006d07	        0x488945f8	                mov qword [rbp - 8], rax	     15799	i386-dis.c	FUNCTION_29
0x4006d0b	    0x488b05000000	            mov rax, qword [0x04006d12] 	     15800	i386-dis.c	FUNCTION_29
0x4006d12	        0x488d5001	                      lea rdx, [rax + 1]	     15800	i386-dis.c	FUNCTION_29
0x4006d16	    0x488915000000	            mov qword [0x04006d1d], rdx 	     15800	i386-dis.c	FUNCTION_29
0x4006d1d	           0xfb600	                   movzx eax, byte [rax]	     15800	i386-dis.c	FUNCTION_29
0x4006d20	           0xfb6c0	                           movzx eax, al	     15800	i386-dis.c	FUNCTION_29
0x4006d23	        0x48c1e008	                              shl rax, 8	     15800	i386-dis.c	FUNCTION_29
0x4006d27	        0x480945f8	                 or qword [rbp - 8], rax	     15800	i386-dis.c	FUNCTION_29
0x4006d2b	    0x488b05000000	            mov rax, qword [0x04006d32] 	     15801	i386-dis.c	FUNCTION_29
0x4006d32	        0x488d5001	                      lea rdx, [rax + 1]	     15801	i386-dis.c	FUNCTION_29
0x4006d36	    0x488915000000	            mov qword [0x04006d3d], rdx 	     15801	i386-dis.c	FUNCTION_29
0x4006d3d	           0xfb600	                   movzx eax, byte [rax]	     15801	i386-dis.c	FUNCTION_29
0x4006d40	           0xfb6c0	                           movzx eax, al	     15801	i386-dis.c	FUNCTION_29
0x4006d43	        0x48c1e010	                           shl rax, 0x10	     15801	i386-dis.c	FUNCTION_29
0x4006d47	        0x480945f8	                 or qword [rbp - 8], rax	     15801	i386-dis.c	FUNCTION_29
0x4006d4b	    0x488b05000000	            mov rax, qword [0x04006d52] 	     15802	i386-dis.c	FUNCTION_29
0x4006d52	        0x488d5001	                      lea rdx, [rax + 1]	     15802	i386-dis.c	FUNCTION_29
0x4006d56	    0x488915000000	            mov qword [0x04006d5d], rdx 	     15802	i386-dis.c	FUNCTION_29
0x4006d5d	           0xfb600	                   movzx eax, byte [rax]	     15802	i386-dis.c	FUNCTION_29
0x4006d60	           0xfb6c0	                           movzx eax, al	     15802	i386-dis.c	FUNCTION_29
0x4006d63	        0x48c1e018	                           shl rax, 0x18	     15802	i386-dis.c	FUNCTION_29
0x4006d67	        0x480945f8	                 or qword [rbp - 8], rax	     15802	i386-dis.c	FUNCTION_29
0x4006d6b	        0x488b45f8	                mov rax, qword [rbp - 8]	     15803	i386-dis.c	FUNCTION_29
0x4006d6f	              0xc9	                                   leave	     15804	i386-dis.c	FUNCTION_29
0x4006d70	              0xc3	                                     ret	     15804	i386-dis.c	FUNCTION_29
OP_OFF64	CALL,8:WHILE,0:functions,0:DO,0:ELSE,0:IF,4:SWITCH,0:FOR,0	55
0x4007cca	              0x55	                                push rbp	     16249	i386-dis.c	FUNCTION_42
0x4007ccb	          0x4889e5	                            mov rbp, rsp	     16249	i386-dis.c	FUNCTION_42
0x4007cce	        0x4883ec20	                           sub rsp, 0x20	     16249	i386-dis.c	FUNCTION_42
0x4007cd2	          0x897dec	             mov dword [rbp - 0x14], edi	     16249	i386-dis.c	FUNCTION_42
0x4007cd5	          0x8975e8	             mov dword [rbp - 0x18], esi	     16249	i386-dis.c	FUNCTION_42
0x4007cd8	    0x8b0500000000	            mov eax, dword [0x04007cde] 	     16252	i386-dis.c	FUNCTION_42	IF_1
0x4007cde	          0x83f802	                              cmp eax, 2	     16252	i386-dis.c	FUNCTION_42	IF_1
0x4007ce1	            0x750f	                           jne 0x4007cf2	     16252	i386-dis.c	FUNCTION_42	IF_1
0x4007ce3	    0x8b0500000000	            mov eax, dword [0x04007ce9] 	     16253	i386-dis.c	FUNCTION_42	IF_1
0x4007ce9	      0x2500040000	                          and eax, 0x400	     16253	i386-dis.c	FUNCTION_42	IF_1
0x4007cee	            0x85c0	                           test eax, eax	     16253	i386-dis.c	FUNCTION_42	IF_1
0x4007cf0	            0x7414	                            je 0x4007d06	     16253	i386-dis.c	FUNCTION_42	IF_1
0x4007cf2	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     16255	i386-dis.c	FUNCTION_42	IF_1	CALL_1
0x4007cf5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     16255	i386-dis.c	FUNCTION_42	IF_1	CALL_1
0x4007cf8	            0x89d6	                            mov esi, edx	     16255	i386-dis.c	FUNCTION_42	IF_1	CALL_1
0x4007cfa	            0x89c7	                            mov edi, eax	     16255	i386-dis.c	FUNCTION_42	IF_1	CALL_1
0x4007cfc	      0xe80fffffff	                         call sym.OP_OFF	     16255	i386-dis.c	FUNCTION_42	IF_1	CALL_1
0x4007d01	      0xe987000000	                           jmp 0x4007d8d	     16256	i386-dis.c	FUNCTION_42	IF_1
0x4007d06	     0xfb605000000	           movzx eax, byte [0x04007d0d] 	     16259	i386-dis.c	FUNCTION_42	IF_2
0x4007d0d	            0x84c0	                             test al, al	     16259	i386-dis.c	FUNCTION_42	IF_2
0x4007d0f	            0x7419	                            je 0x4007d2a	     16259	i386-dis.c	FUNCTION_42	IF_2
0x4007d11	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16259	i386-dis.c	FUNCTION_42	IF_2
0x4007d14	          0x83e004	                              and eax, 4	     16259	i386-dis.c	FUNCTION_42	IF_2
0x4007d17	            0x85c0	                           test eax, eax	     16259	i386-dis.c	FUNCTION_42	IF_2
0x4007d19	            0x740f	                            je 0x4007d2a	     16259	i386-dis.c	FUNCTION_42	IF_2
0x4007d1b	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     16260	i386-dis.c	FUNCTION_42	CALL_2
0x4007d1e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     16260	i386-dis.c	FUNCTION_42	CALL_2
0x4007d21	            0x89d6	                            mov esi, edx	     16260	i386-dis.c	FUNCTION_42	CALL_2
0x4007d23	            0x89c7	                            mov edi, eax	     16260	i386-dis.c	FUNCTION_42	CALL_2
0x4007d25	      0xe882d2ffff	             call sym.intel_operand_size	     16260	i386-dis.c	FUNCTION_42	CALL_2
0x4007d2a	      0xe8c6cdffff	                     call sym.append_seg	     16261	i386-dis.c	FUNCTION_42	CALL_3
0x4007d2f	      0xe82ceeffff	                          call sym.get64	     16263	i386-dis.c	FUNCTION_42	CALL_4
0x4007d34	        0x488945f8	                mov qword [rbp - 8], rax	     16263	i386-dis.c	FUNCTION_42	CALL_4
0x4007d38	     0xfb605000000	           movzx eax, byte [0x04007d3f] 	     16265	i386-dis.c	FUNCTION_42	IF_3
0x4007d3f	            0x84c0	                             test al, al	     16265	i386-dis.c	FUNCTION_42	IF_3
0x4007d41	            0x742a	                            je 0x4007d6d	     16265	i386-dis.c	FUNCTION_42	IF_3
0x4007d43	    0x8b0500000000	            mov eax, dword [0x04007d49] 	     16267	i386-dis.c	FUNCTION_42	IF_3	IF_4
0x4007d49	            0x85c0	                           test eax, eax	     16267	i386-dis.c	FUNCTION_42	IF_3	IF_4
0x4007d4b	            0x7520	                           jne 0x4007d6d	     16267	i386-dis.c	FUNCTION_42	IF_3	IF_4
0x4007d4d	    0x488b05000000	            mov rax, qword [0x04007d54] 	     16269	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_5
0x4007d54	        0x4883c018	                           add rax, 0x18	     16269	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_5
0x4007d58	          0x488b00	                    mov rax, qword [rax]	     16269	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_5
0x4007d5b	          0x4889c7	                            mov rdi, rax	     16269	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_5
0x4007d5e	      0xe866cdffff	                        call sym.oappend	     16269	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_5
0x4007d63	      0xbf00000000	                              mov edi, 0	     16270	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_6
0x4007d68	      0xe85ccdffff	                        call sym.oappend	     16270	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_6
0x4007d6d	        0x488b45f8	                mov rax, qword [rbp - 8]	     16273	i386-dis.c	FUNCTION_42	CALL_7
0x4007d71	          0x4889c2	                            mov rdx, rax	     16273	i386-dis.c	FUNCTION_42	CALL_7
0x4007d74	      0xbe01000000	                              mov esi, 1	     16273	i386-dis.c	FUNCTION_42	CALL_7
0x4007d79	      0xbf00000000	                              mov edi, 0	     16273	i386-dis.c	FUNCTION_42	CALL_7
0x4007d7e	      0xe849ceffff	            call sym.print_operand_value	     16273	i386-dis.c	FUNCTION_42	CALL_7
0x4007d83	      0xbf00000000	                              mov edi, 0	     16274	i386-dis.c	FUNCTION_42	CALL_8
0x4007d88	      0xe83ccdffff	                        call sym.oappend	     16274	i386-dis.c	FUNCTION_42	CALL_8
0x4007d8d	              0xc9	                                   leave	     16275	i386-dis.c	FUNCTION_42
0x4007d8e	              0xc3	                                     ret	     16275	i386-dis.c	FUNCTION_42
OP_C	CALL,2:WHILE,0:functions,0:DO,0:ELSE,2:IF,2:SWITCH,0:FOR,0	47
0x4008002	              0x55	                                push rbp	     16353	i386-dis.c	FUNCTION_46
0x4008003	          0x4889e5	                            mov rbp, rsp	     16353	i386-dis.c	FUNCTION_46
0x4008006	        0x4883ec20	                           sub rsp, 0x20	     16353	i386-dis.c	FUNCTION_46
0x400800a	          0x897dec	             mov dword [rbp - 0x14], edi	     16353	i386-dis.c	FUNCTION_46
0x400800d	          0x8975e8	             mov dword [rbp - 0x18], esi	     16353	i386-dis.c	FUNCTION_46
0x4008010	    0x8b0500000000	            mov eax, dword [0x04008016] 	     16355	i386-dis.c	FUNCTION_46	IF_1
0x4008016	          0x83e004	                              and eax, 4	     16355	i386-dis.c	FUNCTION_46	IF_1
0x4008019	            0x85c0	                           test eax, eax	     16355	i386-dis.c	FUNCTION_46	IF_1
0x400801b	            0x7425	                            je 0x4008042	     16355	i386-dis.c	FUNCTION_46	IF_1
0x400801d	    0x8b0500000000	            mov eax, dword [0x04008023] 	     16357	i386-dis.c	FUNCTION_46	IF_1
0x4008023	          0x83e004	                              and eax, 4	     16357	i386-dis.c	FUNCTION_46	IF_1
0x4008026	            0x85c0	                           test eax, eax	     16357	i386-dis.c	FUNCTION_46	IF_1
0x4008028	            0x740f	                            je 0x4008039	     16357	i386-dis.c	FUNCTION_46	IF_1
0x400802a	    0x8b0500000000	            mov eax, dword [0x04008030] 	     16357	i386-dis.c	FUNCTION_46	IF_1
0x4008030	          0x83c844	                            or eax, 0x44	     16357	i386-dis.c	FUNCTION_46	IF_1
0x4008033	    0x890500000000	            mov dword [0x04008039], eax 	     16357	i386-dis.c	FUNCTION_46	IF_1
0x4008039	    0xc745fc080000	                  mov dword [rbp - 4], 8	     16358	i386-dis.c	FUNCTION_46	IF_1
0x4008040	            0xeb4a	                           jmp 0x400808c	     16358	i386-dis.c	FUNCTION_46	IF_1
0x4008042	    0x8b0500000000	            mov eax, dword [0x04008048] 	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4008048	          0x83f802	                              cmp eax, 2	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x400804b	            0x7438	                            je 0x4008085	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x400804d	    0x8b0500000000	            mov eax, dword [0x04008053] 	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4008053	          0x83e004	                              and eax, 4	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4008056	            0x85c0	                           test eax, eax	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4008058	            0x742b	                            je 0x4008085	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x400805a	    0x8b0500000000	            mov eax, dword [0x04008060] 	     16362	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4008060	            0x4898	                                    cdqe	     16362	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4008062	    0xc70485000000	                    mov dword [rax*4], 0	     16362	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x400806d	    0x8b0500000000	            mov eax, dword [0x04008073] 	     16363	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4008073	          0x83c804	                               or eax, 4	     16363	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4008076	    0x890500000000	            mov dword [0x0400807c], eax 	     16363	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x400807c	    0xc745fc080000	                  mov dword [rbp - 4], 8	     16364	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4008083	            0xeb07	                           jmp 0x400808c	     16364	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4008085	    0xc745fc000000	                  mov dword [rbp - 4], 0	     16367	i386-dis.c	FUNCTION_46	ELSE_2
0x400808c	    0x8b1500000000	            mov edx, dword [0x04008092] 	     16368	i386-dis.c	FUNCTION_46	CALL_1
0x4008092	          0x8b45fc	                mov eax, dword [rbp - 4]	     16368	i386-dis.c	FUNCTION_46	CALL_1
0x4008095	             0x1d0	                            add eax, edx	     16368	i386-dis.c	FUNCTION_46	CALL_1
0x4008097	            0x89c2	                            mov edx, eax	     16368	i386-dis.c	FUNCTION_46	CALL_1
0x4008099	      0xbe00000000	                              mov esi, 0	     16368	i386-dis.c	FUNCTION_46	CALL_1
0x400809e	      0xbf00000000	                              mov edi, 0	     16368	i386-dis.c	FUNCTION_46	CALL_1
0x40080a3	      0xb800000000	                              mov eax, 0	     16368	i386-dis.c	FUNCTION_46	CALL_1
0x40080a8	      0xe800000000	                          call 0x40080ad	     16368	i386-dis.c	FUNCTION_46	CALL_1
0x40080ad	      0xbf00000000	                              mov edi, 0	     16369	i386-dis.c	FUNCTION_46	CALL_2
0x40080b2	      0xe806b2ffff	            call sym.oappend_maybe_intel	     16369	i386-dis.c	FUNCTION_46	CALL_2
0x40080b7	              0x90	                                     nop	     16370	i386-dis.c	FUNCTION_46
0x40080b8	              0xc9	                                   leave	     16370	i386-dis.c	FUNCTION_46
0x40080b9	              0xc3	                                     ret	     16370	i386-dis.c	FUNCTION_46
OP_EMC	CALL,2:WHILE,0:functions,0:DO,0:ELSE,0:IF,2:SWITCH,0:FOR,0	56
0x400854c	              0x55	                                push rbp	     16533	i386-dis.c	FUNCTION_53
0x400854d	          0x4889e5	                            mov rbp, rsp	     16533	i386-dis.c	FUNCTION_53
0x4008550	        0x4883ec10	                           sub rsp, 0x10	     16533	i386-dis.c	FUNCTION_53
0x4008554	          0x897dfc	                mov dword [rbp - 4], edi	     16533	i386-dis.c	FUNCTION_53
0x4008557	          0x8975f8	                mov dword [rbp - 8], esi	     16533	i386-dis.c	FUNCTION_53
0x400855a	    0x8b0500000000	            mov eax, dword [0x04008560] 	     16534	i386-dis.c	FUNCTION_53	IF_1
0x4008560	          0x83f803	                              cmp eax, 3	     16534	i386-dis.c	FUNCTION_53	IF_1
0x4008563	            0x745b	                            je 0x40085c0	     16534	i386-dis.c	FUNCTION_53	IF_1
0x4008565	     0xfb605000000	           movzx eax, byte [0x0400856c] 	     16536	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x400856c	            0x84c0	                             test al, al	     16536	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x400856e	            0x743f	                            je 0x40085af	     16536	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4008570	        0x837dfc04	                  cmp dword [rbp - 4], 4	     16536	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4008574	            0x7539	                           jne 0x40085af	     16536	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4008576	    0x8b0500000000	            mov eax, dword [0x0400857c] 	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x400857c	      0x2500020000	                          and eax, 0x200	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4008581	            0x85c0	                           test eax, eax	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4008583	            0x7407	                            je 0x400858c	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4008585	      0xb80d000000	                            mov eax, 0xd	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x400858a	            0xeb05	                           jmp 0x4008591	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x400858c	      0xb80a000000	                            mov eax, 0xa	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4008591	          0x8945fc	                mov dword [rbp - 4], eax	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4008594	    0x8b0500000000	            mov eax, dword [0x0400859a] 	     16539	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x400859a	      0x2500020000	                          and eax, 0x200	     16539	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x400859f	            0x89c2	                            mov edx, eax	     16539	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x40085a1	    0x8b0500000000	            mov eax, dword [0x040085a7] 	     16539	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x40085a7	             0x9d0	                             or eax, edx	     16539	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x40085a9	    0x890500000000	            mov dword [0x040085af], eax 	     16539	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x40085af	          0x8b55f8	                mov edx, dword [rbp - 8]	     16541	i386-dis.c	FUNCTION_53	IF_1	CALL_1
0x40085b2	          0x8b45fc	                mov eax, dword [rbp - 4]	     16541	i386-dis.c	FUNCTION_53	IF_1	CALL_1
0x40085b5	            0x89d6	                            mov esi, edx	     16541	i386-dis.c	FUNCTION_53	IF_1	CALL_1
0x40085b7	            0x89c7	                            mov edi, eax	     16541	i386-dis.c	FUNCTION_53	IF_1	CALL_1
0x40085b9	      0xe86fe1ffff	                           call sym.OP_E	     16541	i386-dis.c	FUNCTION_53	IF_1	CALL_1
0x40085be	            0xeb5f	                           jmp 0x400861f	     16542	i386-dis.c	FUNCTION_53	IF_1
0x40085c0	     0xfb605000000	           movzx eax, byte [0x040085c7] 	     16546	i386-dis.c	FUNCTION_53
0x40085c7	            0x84c0	                             test al, al	     16546	i386-dis.c	FUNCTION_53
0x40085c9	            0x7505	                           jne 0x40085d0	     16546	i386-dis.c	FUNCTION_53
0x40085cb	      0xe800000000	                          call 0x40085d0	     16546	i386-dis.c	FUNCTION_53
0x40085d0	    0x488b05000000	            mov rax, qword [0x040085d7] 	     16547	i386-dis.c	FUNCTION_53
0x40085d7	        0x4883c001	                              add rax, 1	     16547	i386-dis.c	FUNCTION_53
0x40085db	    0x488905000000	            mov qword [0x040085e2], rax 	     16547	i386-dis.c	FUNCTION_53
0x40085e2	    0x8b0500000000	            mov eax, dword [0x040085e8] 	     16548	i386-dis.c	FUNCTION_53
0x40085e8	      0x2500020000	                          and eax, 0x200	     16548	i386-dis.c	FUNCTION_53
0x40085ed	            0x89c2	                            mov edx, eax	     16548	i386-dis.c	FUNCTION_53
0x40085ef	    0x8b0500000000	            mov eax, dword [0x040085f5] 	     16548	i386-dis.c	FUNCTION_53
0x40085f5	             0x9d0	                             or eax, edx	     16548	i386-dis.c	FUNCTION_53
0x40085f7	    0x890500000000	            mov dword [0x040085fd], eax 	     16548	i386-dis.c	FUNCTION_53
0x40085fd	    0x488b05000000	            mov rax, qword [0x04008604] 	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x4008604	    0x8b1500000000	            mov edx, dword [0x0400860a] 	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x400860a	          0x4863d2	                         movsxd rdx, edx	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x400860d	        0x48c1e203	                              shl rdx, 3	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x4008611	          0x4801d0	                            add rax, rdx	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x4008614	          0x488b00	                    mov rax, qword [rax]	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x4008617	          0x4889c7	                            mov rdi, rax	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x400861a	      0xe8aac4ffff	                        call sym.oappend	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x400861f	              0xc9	                                   leave	     16550	i386-dis.c	FUNCTION_53
0x4008620	              0xc3	                                     ret	     16550	i386-dis.c	FUNCTION_53
OP_sI	CALL,5:WHILE,0:functions,0:DO,0:ELSE,4:IF,7:SWITCH,1:FOR,0	108
0x400774a	              0x55	                                push rbp	     16088	i386-dis.c	FUNCTION_37
0x400774b	          0x4889e5	                            mov rbp, rsp	     16088	i386-dis.c	FUNCTION_37
0x400774e	        0x4883ec20	                           sub rsp, 0x20	     16088	i386-dis.c	FUNCTION_37
0x4007752	          0x897dec	             mov dword [rbp - 0x14], edi	     16088	i386-dis.c	FUNCTION_37
0x4007755	          0x8975e8	             mov dword [rbp - 0x18], esi	     16088	i386-dis.c	FUNCTION_37
0x4007758	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x400775b	          0x83f803	                              cmp eax, 3	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x400775e	            0x7412	                            je 0x4007772	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007760	          0x83f804	                              cmp eax, 4	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007763	     0xf84fe000000	                            je 0x4007867	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007769	          0x83f801	                              cmp eax, 1	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x400776c	     0xf8524010000	                           jne 0x4007896	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007772	    0x488b05000000	            mov rax, qword [0x04007779] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007779	        0x488d5001	                      lea rdx, [rax + 1]	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x400777d	    0x488b05000000	            mov rax, qword [0x04007784] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007784	        0x488b4068	            mov rax, qword [rax + 0x68] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007788	          0x488b00	                    mov rax, qword [rax]	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x400778b	          0x4839c2	                            cmp rdx, rax	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x400778e	            0x761d	                           jbe 0x40077ad	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007790	    0x488b05000000	            mov rax, qword [0x04007797] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007797	        0x488d5001	                      lea rdx, [rax + 1]	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x400779b	    0x488b05000000	            mov rax, qword [0x040077a2] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x40077a2	          0x4889d6	                            mov rsi, rdx	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x40077a5	          0x4889c7	                            mov rdi, rax	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x40077a8	      0xe89388ffff	                     call sym.fetch_data	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x40077ad	    0x488b05000000	            mov rax, qword [0x040077b4] 	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x40077b4	        0x488d5001	                      lea rdx, [rax + 1]	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x40077b8	    0x488915000000	            mov qword [0x040077bf], rdx 	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x40077bf	           0xfb600	                   movzx eax, byte [rax]	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x40077c2	           0xfb6c0	                           movzx eax, al	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x40077c5	        0x488945f8	                mov qword [rbp - 8], rax	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x40077c9	        0x488b45f8	                mov rax, qword [rbp - 8]	     16097	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x40077cd	      0x2580000000	                           and eax, 0x80	     16097	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x40077d2	          0x4885c0	                           test rax, rax	     16097	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x40077d5	            0x7408	                            je 0x40077df	     16097	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x40077d7	    0x48816df80001	              sub qword [rbp - 8], 0x100	     16098	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x40077df	        0x837dec03	               cmp dword [rbp - 0x14], 3	     16099	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2
0x40077e3	            0x7556	                           jne 0x400783b	     16099	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2
0x40077e5	    0x8b0500000000	            mov eax, dword [0x040077eb] 	     16101	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x40077eb	          0x83f802	                              cmp eax, 2	     16101	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x40077ee	            0x751f	                           jne 0x400780f	     16101	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x40077f0	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x40077f3	          0x83e001	                              and eax, 1	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x40077f6	            0x85c0	                           test eax, eax	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x40077f8	     0xf85b1000000	                           jne 0x40078af	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x40077fe	    0x8b0500000000	            mov eax, dword [0x04007804] 	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4007804	          0x83e008	                              and eax, 8	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4007807	            0x85c0	                           test eax, eax	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4007809	     0xf85a0000000	                           jne 0x40078af	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x400780f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4007812	          0x83e001	                              and eax, 1	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4007815	            0x85c0	                           test eax, eax	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4007817	            0x750d	                           jne 0x4007826	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4007819	    0x8b0500000000	            mov eax, dword [0x0400781f] 	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x400781f	          0x83e008	                              and eax, 8	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4007822	            0x85c0	                           test eax, eax	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4007824	            0x740b	                            je 0x4007831	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4007826	      0xb8ffffffff	                     mov eax, 0xffffffff	     16106	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x400782b	        0x482145f8	                and qword [rbp - 8], rax	     16106	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x400782f	            0xeb7e	                           jmp 0x40078af	     16121	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007831	    0x488165f8ffff	             and qword [rbp - 8], 0xffff	     16108	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	ELSE_1
0x4007839	            0xeb74	                           jmp 0x40078af	     16121	i386-dis.c	FUNCTION_37	SWITCH_1
0x400783b	    0x8b0500000000	            mov eax, dword [0x04007841] 	     16113	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5
0x4007841	          0x83e008	                              and eax, 8	     16113	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5
0x4007844	            0x85c0	                           test eax, eax	     16113	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5
0x4007846	            0x7567	                           jne 0x40078af	     16113	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5
0x4007848	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16115	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x400784b	          0x83e001	                              and eax, 1	     16115	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x400784e	            0x85c0	                           test eax, eax	     16115	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4007850	            0x740b	                            je 0x400785d	     16115	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4007852	      0xb8ffffffff	                     mov eax, 0xffffffff	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4007857	        0x482145f8	                and qword [rbp - 8], rax	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x400785b	            0xeb52	                           jmp 0x40078af	     16121	i386-dis.c	FUNCTION_37	SWITCH_1
0x400785d	    0x488165f8ffff	             and qword [rbp - 8], 0xffff	     16118	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	ELSE_3
0x4007865	            0xeb48	                           jmp 0x40078af	     16121	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007867	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x400786a	          0x83e001	                              and eax, 1	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x400786d	            0x85c0	                           test eax, eax	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x400786f	            0x750d	                           jne 0x400787e	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4007871	    0x8b0500000000	            mov eax, dword [0x04007877] 	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4007877	          0x83e008	                              and eax, 8	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x400787a	            0x85c0	                           test eax, eax	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x400787c	            0x740b	                            je 0x4007889	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x400787e	      0xe8eef4ffff	                         call sym.get32s	     16125	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_1
0x4007883	        0x488945f8	                mov qword [rbp - 8], rax	     16125	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_1
0x4007887	            0xeb27	                           jmp 0x40078b0	     16128	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007889	      0xe8c3f5ffff	                          call sym.get16	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x400788e	            0x4898	                                    cdqe	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4007890	        0x488945f8	                mov qword [rbp - 8], rax	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4007894	            0xeb1a	                           jmp 0x40078b0	     16128	i386-dis.c	FUNCTION_37	SWITCH_1
0x4007896	      0xbe00000000	                              mov esi, 0	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x400789b	      0xbf00000000	                              mov edi, 0	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x40078a0	      0xe800000000	                          call 0x40078a5	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x40078a5	          0x4889c7	                            mov rdi, rax	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x40078a8	      0xe81cd2ffff	                        call sym.oappend	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x40078ad	            0xeb2b	                           jmp 0x40078da	     16131	i386-dis.c	FUNCTION_37	SWITCH_1
0x40078af	              0x90	                                     nop	     16121	i386-dis.c	FUNCTION_37	SWITCH_1
0x40078b0	    0xc60500000000	            mov byte [0x040078b7], 0x24 	     16134	i386-dis.c	FUNCTION_37
0x40078b7	        0x488b45f8	                mov rax, qword [rbp - 8]	     16135	i386-dis.c	FUNCTION_37	CALL_4
0x40078bb	      0xb900000000	                              mov ecx, 0	     16135	i386-dis.c	FUNCTION_37	CALL_4
0x40078c0	          0x4889c2	                            mov rdx, rax	     16135	i386-dis.c	FUNCTION_37	CALL_4
0x40078c3	      0xbe01000000	                              mov esi, 1	     16135	i386-dis.c	FUNCTION_37	CALL_4
0x40078c8	          0x4889cf	                            mov rdi, rcx	     16135	i386-dis.c	FUNCTION_37	CALL_4
0x40078cb	      0xe8fcd2ffff	            call sym.print_operand_value	     16135	i386-dis.c	FUNCTION_37	CALL_4
0x40078d0	      0xbf00000000	                              mov edi, 0	     16136	i386-dis.c	FUNCTION_37	CALL_5
0x40078d5	      0xe8e3b9ffff	            call sym.oappend_maybe_intel	     16136	i386-dis.c	FUNCTION_37	CALL_5
0x40078da	              0xc9	                                   leave	     16137	i386-dis.c	FUNCTION_37
0x40078db	              0xc3	                                     ret	     16137	i386-dis.c	FUNCTION_37
set_op	CALL,0:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,0:FOR,0	34
0x4006ed9	              0x55	                                push rbp	     15835	i386-dis.c	FUNCTION_32
0x4006eda	          0x4889e5	                            mov rbp, rsp	     15835	i386-dis.c	FUNCTION_32
0x4006edd	        0x48897df8	                mov qword [rbp - 8], rdi	     15835	i386-dis.c	FUNCTION_32
0x4006ee1	          0x8975f4	              mov dword [rbp - 0xc], esi	     15835	i386-dis.c	FUNCTION_32
0x4006ee4	    0x8b0500000000	            mov eax, dword [0x04006eea] 	     15836	i386-dis.c	FUNCTION_32
0x4006eea	    0x8b1500000000	            mov edx, dword [0x04006ef0] 	     15836	i386-dis.c	FUNCTION_32
0x4006ef0	            0x4898	                                    cdqe	     15836	i386-dis.c	FUNCTION_32
0x4006ef2	    0x891485000000	                  mov dword [rax*4], edx	     15836	i386-dis.c	FUNCTION_32
0x4006ef9	    0x8b0500000000	            mov eax, dword [0x04006eff] 	     15837	i386-dis.c	FUNCTION_32	IF_1
0x4006eff	          0x83f802	                              cmp eax, 2	     15837	i386-dis.c	FUNCTION_32	IF_1
0x4006f02	            0x752c	                           jne 0x4006f30	     15837	i386-dis.c	FUNCTION_32	IF_1
0x4006f04	    0x8b0500000000	            mov eax, dword [0x04006f0a] 	     15839	i386-dis.c	FUNCTION_32	IF_1
0x4006f0a	            0x4898	                                    cdqe	     15839	i386-dis.c	FUNCTION_32	IF_1
0x4006f0c	        0x488b55f8	                mov rdx, qword [rbp - 8]	     15839	i386-dis.c	FUNCTION_32	IF_1
0x4006f10	    0x488914c50000	                  mov qword [rax*8], rdx	     15839	i386-dis.c	FUNCTION_32	IF_1
0x4006f18	    0x8b0500000000	            mov eax, dword [0x04006f1e] 	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4006f1e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4006f21	          0x4863d2	                         movsxd rdx, edx	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4006f24	            0x4898	                                    cdqe	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4006f26	    0x488914c50000	                  mov qword [rax*8], rdx	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4006f2e	            0xeb2b	                           jmp 0x4006f5b	     15848	i386-dis.c	FUNCTION_32
0x4006f30	    0x8b0500000000	            mov eax, dword [0x04006f36] 	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4006f36	        0x488b55f8	                mov rdx, qword [rbp - 8]	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4006f3a	            0x89d2	                            mov edx, edx	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4006f3c	            0x4898	                                    cdqe	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4006f3e	    0x488914c50000	                  mov qword [rax*8], rdx	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4006f46	    0x8b0500000000	            mov eax, dword [0x04006f4c] 	     15846	i386-dis.c	FUNCTION_32	ELSE_1
0x4006f4c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15846	i386-dis.c	FUNCTION_32	ELSE_1
0x4006f4f	            0x89d2	                            mov edx, edx	     15846	i386-dis.c	FUNCTION_32	ELSE_1
0x4006f51	            0x4898	                                    cdqe	     15846	i386-dis.c	FUNCTION_32	ELSE_1
0x4006f53	    0x488914c50000	                  mov qword [rax*8], rdx	     15846	i386-dis.c	FUNCTION_32	ELSE_1
0x4006f5b	              0x90	                                     nop	     15848	i386-dis.c	FUNCTION_32
0x4006f5c	              0x5d	                                 pop rbp	     15848	i386-dis.c	FUNCTION_32
0x4006f5d	              0xc3	                                     ret	     15848	i386-dis.c	FUNCTION_32
CMP_Fixup	CALL,4:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,0:FOR,0	75
0x4008ae1	              0x55	                                push rbp	     16819	i386-dis.c	FUNCTION_63
0x4008ae2	          0x4889e5	                            mov rbp, rsp	     16819	i386-dis.c	FUNCTION_63
0x4008ae5	        0x4883ec30	                           sub rsp, 0x30	     16819	i386-dis.c	FUNCTION_63
0x4008ae9	          0x897ddc	             mov dword [rbp - 0x24], edi	     16819	i386-dis.c	FUNCTION_63
0x4008aec	          0x8975d8	             mov dword [rbp - 0x28], esi	     16819	i386-dis.c	FUNCTION_63
0x4008aef	    0x64488b042528	                mov rax, qword fs:[0x28]	     16819	i386-dis.c	FUNCTION_63
0x4008af8	        0x488945f8	                mov qword [rbp - 8], rax	     16819	i386-dis.c	FUNCTION_63
0x4008afc	            0x31c0	                            xor eax, eax	     16819	i386-dis.c	FUNCTION_63
0x4008afe	    0x488b05000000	            mov rax, qword [0x04008b05] 	     16822	i386-dis.c	FUNCTION_63
0x4008b05	        0x488d5001	                      lea rdx, [rax + 1]	     16822	i386-dis.c	FUNCTION_63
0x4008b09	    0x488b05000000	            mov rax, qword [0x04008b10] 	     16822	i386-dis.c	FUNCTION_63
0x4008b10	        0x488b4068	            mov rax, qword [rax + 0x68] 	     16822	i386-dis.c	FUNCTION_63
0x4008b14	          0x488b00	                    mov rax, qword [rax]	     16822	i386-dis.c	FUNCTION_63
0x4008b17	          0x4839c2	                            cmp rdx, rax	     16822	i386-dis.c	FUNCTION_63
0x4008b1a	            0x761d	                           jbe 0x4008b39	     16822	i386-dis.c	FUNCTION_63
0x4008b1c	    0x488b05000000	            mov rax, qword [0x04008b23] 	     16822	i386-dis.c	FUNCTION_63
0x4008b23	        0x488d5001	                      lea rdx, [rax + 1]	     16822	i386-dis.c	FUNCTION_63
0x4008b27	    0x488b05000000	            mov rax, qword [0x04008b2e] 	     16822	i386-dis.c	FUNCTION_63
0x4008b2e	          0x4889d6	                            mov rsi, rdx	     16822	i386-dis.c	FUNCTION_63
0x4008b31	          0x4889c7	                            mov rdi, rax	     16822	i386-dis.c	FUNCTION_63
0x4008b34	      0xe80775ffff	                     call sym.fetch_data	     16822	i386-dis.c	FUNCTION_63
0x4008b39	    0x488b05000000	            mov rax, qword [0x04008b40] 	     16823	i386-dis.c	FUNCTION_63
0x4008b40	        0x488d5001	                      lea rdx, [rax + 1]	     16823	i386-dis.c	FUNCTION_63
0x4008b44	    0x488915000000	            mov qword [0x04008b4b], rdx 	     16823	i386-dis.c	FUNCTION_63
0x4008b4b	           0xfb600	                   movzx eax, byte [rax]	     16823	i386-dis.c	FUNCTION_63
0x4008b4e	           0xfb6c0	                           movzx eax, al	     16823	i386-dis.c	FUNCTION_63
0x4008b51	          0x8945e4	             mov dword [rbp - 0x1c], eax	     16823	i386-dis.c	FUNCTION_63
0x4008b54	        0x837de407	               cmp dword [rbp - 0x1c], 7	     16824	i386-dis.c	FUNCTION_63	IF_1	CALL_1
0x4008b58	            0x7777	                            ja 0x4008bd1	     16824	i386-dis.c	FUNCTION_63	IF_1	CALL_1
0x4008b5a	    0x488b05000000	            mov rax, qword [0x04008b61] 	     16827	i386-dis.c	FUNCTION_63	IF_1
0x4008b61	        0x4883e802	                              sub rax, 2	     16827	i386-dis.c	FUNCTION_63	IF_1
0x4008b65	        0x488945e8	             mov qword [rbp - 0x18], rax	     16827	i386-dis.c	FUNCTION_63	IF_1
0x4008b69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     16828	i386-dis.c	FUNCTION_63	IF_1
0x4008b6d	           0xfb600	                   movzx eax, byte [rax]	     16828	i386-dis.c	FUNCTION_63	IF_1
0x4008b70	          0x8845f0	               mov byte [rbp - 0x10], al	     16828	i386-dis.c	FUNCTION_63	IF_1
0x4008b73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     16829	i386-dis.c	FUNCTION_63	IF_1
0x4008b77	         0xfb64001	               movzx eax, byte [rax + 1]	     16829	i386-dis.c	FUNCTION_63	IF_1
0x4008b7b	          0x8845f1	                mov byte [rbp - 0xf], al	     16829	i386-dis.c	FUNCTION_63	IF_1
0x4008b7e	        0xc645f200	                 mov byte [rbp - 0xe], 0	     16830	i386-dis.c	FUNCTION_63	IF_1
0x4008b82	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     16831	i386-dis.c	FUNCTION_63	IF_1	CALL_2
0x4008b85	        0x48c1e004	                              shl rax, 4	     16831	i386-dis.c	FUNCTION_63	IF_1	CALL_2
0x4008b89	    0x480500000000	                              add rax, 0	     16831	i386-dis.c	FUNCTION_63	IF_1	CALL_2
0x4008b8f	          0x488b10	                    mov rdx, qword [rax]	     16831	i386-dis.c	FUNCTION_63	IF_1	CALL_2
0x4008b92	        0x488d4df0	                   lea rcx, [rbp - 0x10]	     16831	i386-dis.c	FUNCTION_63	IF_1	CALL_2
0x4008b96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     16831	i386-dis.c	FUNCTION_63	IF_1	CALL_2
0x4008b9a	      0xbe00000000	                              mov esi, 0	     16831	i386-dis.c	FUNCTION_63	IF_1	CALL_2
0x4008b9f	          0x4889c7	                            mov rdi, rax	     16831	i386-dis.c	FUNCTION_63	IF_1	CALL_2
0x4008ba2	      0xb800000000	                              mov eax, 0	     16831	i386-dis.c	FUNCTION_63	IF_1	CALL_2
0x4008ba7	      0xe800000000	                          call 0x4008bac	     16831	i386-dis.c	FUNCTION_63	IF_1	CALL_2
0x4008bac	    0x488b05000000	            mov rax, qword [0x04008bb3] 	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4008bb3	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4008bb6	        0x48c1e204	                              shl rdx, 4	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4008bba	    0x4881c2000000	                              add rdx, 0	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4008bc1	            0x8b12	                    mov edx, dword [rdx]	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4008bc3	            0x89d2	                            mov edx, edx	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4008bc5	          0x4801d0	                            add rax, rdx	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4008bc8	    0x488905000000	            mov qword [0x04008bcf], rax 	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4008bcf	            0xeb30	                           jmp 0x4008c01	     16842	i386-dis.c	FUNCTION_63
0x4008bd1	    0xc60500000000	            mov byte [0x04008bd8], 0x24 	     16837	i386-dis.c	FUNCTION_63	ELSE_1
0x4008bd8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_3
0x4008bdb	      0xb900000000	                              mov ecx, 0	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_3
0x4008be0	          0x4889c2	                            mov rdx, rax	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_3
0x4008be3	      0xbe01000000	                              mov esi, 1	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_3
0x4008be8	          0x4889cf	                            mov rdi, rcx	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_3
0x4008beb	      0xe8dcbfffff	            call sym.print_operand_value	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_3
0x4008bf0	      0xbf00000000	                              mov edi, 0	     16839	i386-dis.c	FUNCTION_63	ELSE_1	CALL_4
0x4008bf5	      0xe8c3a6ffff	            call sym.oappend_maybe_intel	     16839	i386-dis.c	FUNCTION_63	ELSE_1	CALL_4
0x4008bfa	    0xc60500000000	                mov byte [0x04008c01], 0	     16840	i386-dis.c	FUNCTION_63	ELSE_1
0x4008c01	              0x90	                                     nop	     16842	i386-dis.c	FUNCTION_63
0x4008c02	        0x488b45f8	                mov rax, qword [rbp - 8]	     16842	i386-dis.c	FUNCTION_63
0x4008c06	    0x644833042528	                xor rax, qword fs:[0x28]	     16842	i386-dis.c	FUNCTION_63
0x4008c0f	            0x7405	                            je 0x4008c16	     16842	i386-dis.c	FUNCTION_63
0x4008c11	      0xe800000000	                          call 0x4008c16	     16842	i386-dis.c	FUNCTION_63
0x4008c16	              0xc9	                                   leave	     16842	i386-dis.c	FUNCTION_63
0x4008c17	              0xc3	                                     ret	     16842	i386-dis.c	FUNCTION_63
OP_XS	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,0:FOR,0	18
0x40088e1	              0x55	                                push rbp	     16661	i386-dis.c	FUNCTION_57
0x40088e2	          0x4889e5	                            mov rbp, rsp	     16661	i386-dis.c	FUNCTION_57
0x40088e5	        0x4883ec10	                           sub rsp, 0x10	     16661	i386-dis.c	FUNCTION_57
0x40088e9	          0x897dfc	                mov dword [rbp - 4], edi	     16661	i386-dis.c	FUNCTION_57
0x40088ec	          0x8975f8	                mov dword [rbp - 8], esi	     16661	i386-dis.c	FUNCTION_57
0x40088ef	    0x8b0500000000	            mov eax, dword [0x040088f5] 	     16662	i386-dis.c	FUNCTION_57	IF_1
0x40088f5	          0x83f803	                              cmp eax, 3	     16662	i386-dis.c	FUNCTION_57	IF_1
0x40088f8	            0x7511	                           jne 0x400890b	     16662	i386-dis.c	FUNCTION_57	IF_1
0x40088fa	          0x8b55f8	                mov edx, dword [rbp - 8]	     16663	i386-dis.c	FUNCTION_57	CALL_1
0x40088fd	          0x8b45fc	                mov eax, dword [rbp - 4]	     16663	i386-dis.c	FUNCTION_57	CALL_1
0x4008900	            0x89d6	                            mov esi, edx	     16663	i386-dis.c	FUNCTION_57	CALL_1
0x4008902	            0x89c7	                            mov edi, eax	     16663	i386-dis.c	FUNCTION_57	CALL_1
0x4008904	      0xe866fdffff	                          call sym.OP_EX	     16663	i386-dis.c	FUNCTION_57	CALL_1
0x4008909	            0xeb05	                           jmp 0x4008910	     16666	i386-dis.c	FUNCTION_57
0x400890b	      0xe862050000	                          call sym.BadOp	     16665	i386-dis.c	FUNCTION_57	CALL_2
0x4008910	              0x90	                                     nop	     16666	i386-dis.c	FUNCTION_57
0x4008911	              0xc9	                                   leave	     16666	i386-dis.c	FUNCTION_57
0x4008912	              0xc3	                                     ret	     16666	i386-dis.c	FUNCTION_57
oappend	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	13
0x4004ac9	              0x55	                                push rbp	     14576	i386-dis.c	FUNCTION_18
0x4004aca	          0x4889e5	                            mov rbp, rsp	     14576	i386-dis.c	FUNCTION_18
0x4004acd	        0x4883ec10	                           sub rsp, 0x10	     14576	i386-dis.c	FUNCTION_18
0x4004ad1	        0x48897df8	                mov qword [rbp - 8], rdi	     14576	i386-dis.c	FUNCTION_18
0x4004ad5	    0x488b05000000	            mov rax, qword [0x04004adc] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004adc	        0x488b55f8	                mov rdx, qword [rbp - 8]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004ae0	          0x4889d6	                            mov rsi, rdx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004ae3	          0x4889c7	                            mov rdi, rax	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004ae6	      0xe800000000	                          call 0x4004aeb	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004aeb	    0x488905000000	            mov qword [0x04004af2], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004af2	              0x90	                                     nop	     14578	i386-dis.c	FUNCTION_18
0x4004af3	              0xc9	                                   leave	     14578	i386-dis.c	FUNCTION_18
0x4004af4	              0xc3	                                     ret	     14578	i386-dis.c	FUNCTION_18
OP_XMM_VexW	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	16
0x4009e6e	              0x55	                                push rbp	     17562	i386-dis.c	FUNCTION_88
0x4009e6f	          0x4889e5	                            mov rbp, rsp	     17562	i386-dis.c	FUNCTION_88
0x4009e72	        0x4883ec10	                           sub rsp, 0x10	     17562	i386-dis.c	FUNCTION_88
0x4009e76	          0x897dfc	                mov dword [rbp - 4], edi	     17562	i386-dis.c	FUNCTION_88
0x4009e79	          0x8975f8	                mov dword [rbp - 8], esi	     17562	i386-dis.c	FUNCTION_88
0x4009e7c	    0x8b0500000000	            mov eax, dword [0x04009e82] 	     17565	i386-dis.c	FUNCTION_88
0x4009e82	          0x83e0f7	                     and eax, 0xfffffff7	     17565	i386-dis.c	FUNCTION_88
0x4009e85	    0x890500000000	            mov dword [0x04009e8b], eax 	     17565	i386-dis.c	FUNCTION_88
0x4009e8b	          0x8b55f8	                mov edx, dword [rbp - 8]	     17566	i386-dis.c	FUNCTION_88	CALL_1
0x4009e8e	          0x8b45fc	                mov eax, dword [rbp - 4]	     17566	i386-dis.c	FUNCTION_88	CALL_1
0x4009e91	            0x89d6	                            mov esi, edx	     17566	i386-dis.c	FUNCTION_88	CALL_1
0x4009e93	            0x89c7	                            mov edi, eax	     17566	i386-dis.c	FUNCTION_88	CALL_1
0x4009e95	      0xe8e4e3ffff	                         call sym.OP_XMM	     17566	i386-dis.c	FUNCTION_88	CALL_1
0x4009e9a	              0x90	                                     nop	     17567	i386-dis.c	FUNCTION_88
0x4009e9b	              0xc9	                                   leave	     17567	i386-dis.c	FUNCTION_88
0x4009e9c	              0xc3	                                     ret	     17567	i386-dis.c	FUNCTION_88
CMPXCHG8B_Fixup	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,4:SWITCH,0:FOR,0	52
0x40090ca	              0x55	                                push rbp	     17028	i386-dis.c	FUNCTION_74
0x40090cb	          0x4889e5	                            mov rbp, rsp	     17028	i386-dis.c	FUNCTION_74
0x40090ce	        0x4883ec20	                           sub rsp, 0x20	     17028	i386-dis.c	FUNCTION_74
0x40090d2	          0x897dec	             mov dword [rbp - 0x14], edi	     17028	i386-dis.c	FUNCTION_74
0x40090d5	          0x8975e8	             mov dword [rbp - 0x18], esi	     17028	i386-dis.c	FUNCTION_74
0x40090d8	    0x8b0500000000	            mov eax, dword [0x040090de] 	     17029	i386-dis.c	FUNCTION_74
0x40090de	          0x83e008	                              and eax, 8	     17029	i386-dis.c	FUNCTION_74
0x40090e1	            0x85c0	                           test eax, eax	     17029	i386-dis.c	FUNCTION_74
0x40090e3	            0x740f	                            je 0x40090f4	     17029	i386-dis.c	FUNCTION_74
0x40090e5	    0x8b0500000000	            mov eax, dword [0x040090eb] 	     17029	i386-dis.c	FUNCTION_74
0x40090eb	          0x83c848	                            or eax, 0x48	     17029	i386-dis.c	FUNCTION_74
0x40090ee	    0x890500000000	            mov dword [0x040090f4], eax 	     17029	i386-dis.c	FUNCTION_74
0x40090f4	    0x8b0500000000	            mov eax, dword [0x040090fa] 	     17030	i386-dis.c	FUNCTION_74	IF_1
0x40090fa	          0x83e008	                              and eax, 8	     17030	i386-dis.c	FUNCTION_74	IF_1
0x40090fd	            0x85c0	                           test eax, eax	     17030	i386-dis.c	FUNCTION_74	IF_1
0x40090ff	            0x7431	                            je 0x4009132	     17030	i386-dis.c	FUNCTION_74	IF_1
0x4009101	    0x488b05000000	            mov rax, qword [0x04009108] 	     17033	i386-dis.c	FUNCTION_74	IF_1
0x4009108	        0x4883e802	                              sub rax, 2	     17033	i386-dis.c	FUNCTION_74	IF_1
0x400910c	        0x488945f8	                mov qword [rbp - 8], rax	     17033	i386-dis.c	FUNCTION_74	IF_1
0x4009110	        0x488b45f8	                mov rax, qword [rbp - 8]	     17034	i386-dis.c	FUNCTION_74	IF_1	CALL_1
0x4009114	    0xc70031366200	               mov dword [rax], 0x623631	     17034	i386-dis.c	FUNCTION_74	IF_1	CALL_1
0x400911a	        0x488b45f8	                mov rax, qword [rbp - 8]	     17034	i386-dis.c	FUNCTION_74	IF_1	CALL_1
0x400911e	        0x4883c003	                              add rax, 3	     17034	i386-dis.c	FUNCTION_74	IF_1	CALL_1
0x4009122	    0x488905000000	            mov qword [0x04009129], rax 	     17034	i386-dis.c	FUNCTION_74	IF_1	CALL_1
0x4009129	    0xc745ec2c0000	           mov dword [rbp - 0x14], 0x2c 	     17035	i386-dis.c	FUNCTION_74	IF_1
0x4009130	            0xeb4d	                           jmp 0x400917f	     17035	i386-dis.c	FUNCTION_74	IF_1
0x4009132	    0x8b0500000000	            mov eax, dword [0x04009138] 	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x4009138	          0x83e004	                              and eax, 4	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x400913b	            0x85c0	                           test eax, eax	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x400913d	            0x7440	                            je 0x400917f	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x400913f	    0x8b0500000000	            mov eax, dword [0x04009145] 	     17039	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x4009145	          0x83e001	                              and eax, 1	     17039	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x4009148	            0x85c0	                           test eax, eax	     17039	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x400914a	            0x7413	                            je 0x400915f	     17039	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x400914c	    0x8b0500000000	            mov eax, dword [0x04009152] 	     17040	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x4009152	            0x4898	                                    cdqe	     17040	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x4009154	    0xc70485000000	                mov dword [rax*4], 0x4f3	     17040	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x400915f	    0x8b0500000000	            mov eax, dword [0x04009165] 	     17041	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x4009165	          0x83e002	                              and eax, 2	     17041	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x4009168	            0x85c0	                           test eax, eax	     17041	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x400916a	            0x7413	                            je 0x400917f	     17041	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x400916c	    0x8b0500000000	            mov eax, dword [0x04009172] 	     17042	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x4009172	            0x4898	                                    cdqe	     17042	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x4009174	    0xc70485000000	                mov dword [rax*4], 0x2f2	     17042	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x400917f	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     17045	i386-dis.c	FUNCTION_74	CALL_2
0x4009182	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17045	i386-dis.c	FUNCTION_74	CALL_2
0x4009185	            0x89d6	                            mov esi, edx	     17045	i386-dis.c	FUNCTION_74	CALL_2
0x4009187	            0x89c7	                            mov edi, eax	     17045	i386-dis.c	FUNCTION_74	CALL_2
0x4009189	      0xe885f7ffff	                           call sym.OP_M	     17045	i386-dis.c	FUNCTION_74	CALL_2
0x400918e	              0x90	                                     nop	     17046	i386-dis.c	FUNCTION_74
0x400918f	              0xc9	                                   leave	     17046	i386-dis.c	FUNCTION_74
0x4009190	              0xc3	                                     ret	     17046	i386-dis.c	FUNCTION_74
NOTRACK_Fixup	CALL,0:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0	20
0x4008f42	              0x55	                                push rbp	     16964	i386-dis.c	FUNCTION_70
0x4008f43	          0x4889e5	                            mov rbp, rsp	     16964	i386-dis.c	FUNCTION_70
0x4008f46	          0x897dfc	                mov dword [rbp - 4], edi	     16964	i386-dis.c	FUNCTION_70
0x4008f49	          0x8975f8	                mov dword [rbp - 8], esi	     16964	i386-dis.c	FUNCTION_70
0x4008f4c	    0x8b0500000000	            mov eax, dword [0x04008f52] 	     16965	i386-dis.c	FUNCTION_70	IF_1
0x4008f52	          0x83f820	                           cmp eax, 0x20	     16965	i386-dis.c	FUNCTION_70	IF_1
0x4008f55	            0x7532	                           jne 0x4008f89	     16965	i386-dis.c	FUNCTION_70	IF_1
0x4008f57	    0x8b0500000000	            mov eax, dword [0x04008f5d] 	     16966	i386-dis.c	FUNCTION_70	IF_1
0x4008f5d	          0x83f802	                              cmp eax, 2	     16966	i386-dis.c	FUNCTION_70	IF_1
0x4008f60	            0x750a	                           jne 0x4008f6c	     16966	i386-dis.c	FUNCTION_70	IF_1
0x4008f62	    0x8b0500000000	            mov eax, dword [0x04008f68] 	     16966	i386-dis.c	FUNCTION_70	IF_1
0x4008f68	            0x85c0	                           test eax, eax	     16966	i386-dis.c	FUNCTION_70	IF_1
0x4008f6a	            0x791d	                           jns 0x4008f89	     16966	i386-dis.c	FUNCTION_70	IF_1
0x4008f6c	    0xc70500000000	               mov dword [0x04008f76], 0	     16970	i386-dis.c	FUNCTION_70	IF_1
0x4008f76	    0x8b0500000000	            mov eax, dword [0x04008f7c] 	     16971	i386-dis.c	FUNCTION_70	IF_1
0x4008f7c	            0x4898	                                    cdqe	     16971	i386-dis.c	FUNCTION_70	IF_1
0x4008f7e	    0xc70485000000	                mov dword [rax*4], 0x13e	     16971	i386-dis.c	FUNCTION_70	IF_1
0x4008f89	              0x90	                                     nop	     16973	i386-dis.c	FUNCTION_70
0x4008f8a	              0x5d	                                 pop rbp	     16973	i386-dis.c	FUNCTION_70
0x4008f8b	              0xc3	                                     ret	     16973	i386-dis.c	FUNCTION_70
OP_indirE	CALL,2:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0	18
0x4004b97	              0x55	                                push rbp	     14615	i386-dis.c	FUNCTION_20
0x4004b98	          0x4889e5	                            mov rbp, rsp	     14615	i386-dis.c	FUNCTION_20
0x4004b9b	        0x4883ec10	                           sub rsp, 0x10	     14615	i386-dis.c	FUNCTION_20
0x4004b9f	          0x897dfc	                mov dword [rbp - 4], edi	     14615	i386-dis.c	FUNCTION_20
0x4004ba2	          0x8975f8	                mov dword [rbp - 8], esi	     14615	i386-dis.c	FUNCTION_20
0x4004ba5	     0xfb605000000	           movzx eax, byte [0x04004bac] 	     14616	i386-dis.c	FUNCTION_20	IF_1
0x4004bac	            0x84c0	                             test al, al	     14616	i386-dis.c	FUNCTION_20	IF_1
0x4004bae	            0x750a	                           jne 0x4004bba	     14616	i386-dis.c	FUNCTION_20	IF_1
0x4004bb0	      0xbf00000000	                              mov edi, 0	     14617	i386-dis.c	FUNCTION_20	CALL_1
0x4004bb5	      0xe80fffffff	                        call sym.oappend	     14617	i386-dis.c	FUNCTION_20	CALL_1
0x4004bba	          0x8b55f8	                mov edx, dword [rbp - 8]	     14618	i386-dis.c	FUNCTION_20	CALL_2
0x4004bbd	          0x8b45fc	                mov eax, dword [rbp - 4]	     14618	i386-dis.c	FUNCTION_20	CALL_2
0x4004bc0	            0x89d6	                            mov esi, edx	     14618	i386-dis.c	FUNCTION_20	CALL_2
0x4004bc2	            0x89c7	                            mov edi, eax	     14618	i386-dis.c	FUNCTION_20	CALL_2
0x4004bc4	      0xe8641b0000	                           call sym.OP_E	     14618	i386-dis.c	FUNCTION_20	CALL_2
0x4004bc9	              0x90	                                     nop	     14619	i386-dis.c	FUNCTION_20
0x4004bca	              0xc9	                                   leave	     14619	i386-dis.c	FUNCTION_20
0x4004bcb	              0xc3	                                     ret	     14619	i386-dis.c	FUNCTION_20
print_insn	CALL,37:WHILE,0:functions,0:DO,0:ELSE,22:IF,55:SWITCH,0:FOR,12	1100
0x4001b4a	              0x55	                                push rbp	     13168	i386-dis.c	FUNCTION_10
0x4001b4b	          0x4889e5	                            mov rbp, rsp	     13168	i386-dis.c	FUNCTION_10
0x4001b4e	              0x53	                                push rbx	     13168	i386-dis.c	FUNCTION_10
0x4001b4f	    0x4881ec880100	                          sub rsp, 0x188	     13168	i386-dis.c	FUNCTION_10
0x4001b56	    0x4889bd78feff	            mov qword [rbp - 0x188], rdi	     13168	i386-dis.c	FUNCTION_10
0x4001b5d	    0x4889b570feff	            mov qword [rbp - 0x190], rsi	     13168	i386-dis.c	FUNCTION_10
0x4001b64	    0x64488b042528	                mov rax, qword fs:[0x28]	     13168	i386-dis.c	FUNCTION_10
0x4001b6d	        0x488945e8	             mov qword [rbp - 0x18], rax	     13168	i386-dis.c	FUNCTION_10
0x4001b71	            0x31c0	                            xor eax, eax	     13168	i386-dis.c	FUNCTION_10
0x4001b73	    0xc78518ffffff	               mov dword [rbp - 0xe8], 3	     13178	i386-dis.c	FUNCTION_10
0x4001b7d	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13179	i386-dis.c	FUNCTION_10	IF_1
0x4001b84	        0x488b4020	            mov rax, qword [rax + 0x20] 	     13179	i386-dis.c	FUNCTION_10	IF_1
0x4001b88	          0x83e004	                              and eax, 4	     13179	i386-dis.c	FUNCTION_10	IF_1
0x4001b8b	          0x4885c0	                           test rax, rax	     13179	i386-dis.c	FUNCTION_10	IF_1
0x4001b8e	            0x740c	                            je 0x4001b9c	     13179	i386-dis.c	FUNCTION_10	IF_1
0x4001b90	    0xc70500000000	               mov dword [0x04001b9a], 1	     13180	i386-dis.c	FUNCTION_10	IF_1
0x4001b9a	            0xeb31	                           jmp 0x4001bcd	     13180	i386-dis.c	FUNCTION_10	IF_1
0x4001b9c	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13181	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4001ba3	        0x488b4020	            mov rax, qword [rax + 0x20] 	     13181	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4001ba7	        0x4883f802	                              cmp rax, 2	     13181	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4001bab	            0x7516	                           jne 0x4001bc3	     13181	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4001bad	    0xc70500000000	               mov dword [0x04001bb7], 0	     13183	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4001bb7	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	     13184	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4001bc1	            0xeb0a	                           jmp 0x4001bcd	     13184	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4001bc3	    0xc70500000000	               mov dword [0x04001bcd], 2	     13187	i386-dis.c	FUNCTION_10	ELSE_2
0x4001bcd	     0xfb605000000	           movzx eax, byte [0x04001bd4] 	     13189	i386-dis.c	FUNCTION_10	IF_3
0x4001bd4	            0x3cff	                            cmp al, 0xff	     13189	i386-dis.c	FUNCTION_10	IF_3
0x4001bd6	            0x751a	                           jne 0x4001bf2	     13189	i386-dis.c	FUNCTION_10	IF_3
0x4001bd8	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4001bdf	        0x488b4020	            mov rax, qword [rax + 0x20] 	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4001be3	          0x83e001	                              and eax, 1	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4001be6	          0x4885c0	                           test rax, rax	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4001be9	           0xf95c0	                                setne al	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4001bec	    0x880500000000	               mov byte [0x04001bf2], al	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4001bf2	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4001bf9	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4001c00	    0x488985a0feff	            mov qword [rbp - 0x160], rax	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4001c07	      0xe9a0030000	                           jmp 0x4001fac	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4001c0c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4001c13	      0xba05000000	                              mov edx, 5	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4001c18	      0xbe00000000	                              mov esi, 0	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4001c1d	          0x4889c7	                            mov rdi, rax	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4001c20	      0xe800000000	                          call 0x4001c25	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4001c25	            0x85c0	                           test eax, eax	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4001c27	            0x750f	                           jne 0x4001c38	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4001c29	    0xc70500000000	               mov dword [0x04001c33], 0	     13195	i386-dis.c	FUNCTION_10	FOR_1	IF_4
0x4001c33	      0xe947030000	                           jmp 0x4001f7f	     13195	i386-dis.c	FUNCTION_10	FOR_1	IF_4
0x4001c38	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4001c3f	      0xba07000000	                              mov edx, 7	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4001c44	      0xbe00000000	                              mov esi, 0	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4001c49	          0x4889c7	                            mov rdi, rax	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4001c4c	      0xe800000000	                          call 0x4001c51	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4001c51	            0x85c0	                           test eax, eax	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4001c53	            0x750f	                           jne 0x4001c64	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4001c55	    0xc70500000000	               mov dword [0x04001c5f], 1	     13197	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5
0x4001c5f	      0xe91b030000	                           jmp 0x4001f7f	     13197	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5
0x4001c64	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4001c6b	      0xba06000000	                              mov edx, 6	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4001c70	      0xbe00000000	                              mov esi, 0	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4001c75	          0x4889c7	                            mov rdi, rax	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4001c78	      0xe800000000	                          call 0x4001c7d	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4001c7d	            0x85c0	                           test eax, eax	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4001c7f	            0x7519	                           jne 0x4001c9a	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4001c81	    0xc70500000000	               mov dword [0x04001c8b], 2	     13200	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x4001c8b	    0xc78518ffffff	               mov dword [rbp - 0xe8], 3	     13201	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x4001c95	      0xe9e5020000	                           jmp 0x4001f7f	     13201	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x4001c9a	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4001ca1	      0xba04000000	                              mov edx, 4	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4001ca6	      0xbe00000000	                              mov esi, 0	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4001cab	          0x4889c7	                            mov rdi, rax	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4001cae	      0xe800000000	                          call 0x4001cb3	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4001cb3	            0x85c0	                           test eax, eax	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4001cb5	            0x7519	                           jne 0x4001cd0	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4001cb7	    0xc70500000000	               mov dword [0x04001cc1], 1	     13205	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x4001cc1	    0xc78518ffffff	               mov dword [rbp - 0xe8], 3	     13206	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x4001ccb	      0xe9af020000	                           jmp 0x4001f7f	     13206	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x4001cd0	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4001cd7	      0xba05000000	                              mov edx, 5	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4001cdc	      0xbe00000000	                              mov esi, 0	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4001ce1	          0x4889c7	                            mov rdi, rax	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4001ce4	      0xe800000000	                          call 0x4001ce9	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4001ce9	            0x85c0	                           test eax, eax	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4001ceb	            0x7519	                           jne 0x4001d06	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4001ced	    0xc70500000000	               mov dword [0x04001cf7], 0	     13210	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x4001cf7	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	     13211	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x4001d01	      0xe979020000	                           jmp 0x4001f7f	     13211	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x4001d06	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4001d0d	      0xba05000000	                              mov edx, 5	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4001d12	      0xbe00000000	                              mov esi, 0	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4001d17	          0x4889c7	                            mov rdi, rax	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4001d1a	      0xe800000000	                          call 0x4001d1f	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4001d1f	            0x85c0	                           test eax, eax	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4001d21	            0x7538	                           jne 0x4001d5b	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4001d23	    0xc60500000000	                mov byte [0x04001d2a], 1	     13215	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9
0x4001d2a	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4001d31	        0x4883c005	                              add rax, 5	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4001d35	      0xba09000000	                              mov edx, 9	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4001d3a	      0xbe00000000	                              mov esi, 0	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4001d3f	          0x4889c7	                            mov rdi, rax	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4001d42	      0xe800000000	                          call 0x4001d47	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4001d47	            0x85c0	                           test eax, eax	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4001d49	     0xf8530020000	                           jne 0x4001f7f	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4001d4f	    0xc60500000000	                mov byte [0x04001d56], 1	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x4001d56	      0xe924020000	                           jmp 0x4001f7f	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x4001d5b	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4001d62	      0xba03000000	                              mov edx, 3	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4001d67	      0xbe00000000	                              mov esi, 0	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4001d6c	          0x4889c7	                            mov rdi, rax	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4001d6f	      0xe800000000	                          call 0x4001d74	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4001d74	            0x85c0	                           test eax, eax	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4001d76	            0x7538	                           jne 0x4001db0	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4001d78	    0xc60500000000	                mov byte [0x04001d7f], 0	     13221	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11
0x4001d7f	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4001d86	        0x4883c003	                              add rax, 3	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4001d8a	      0xba09000000	                              mov edx, 9	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4001d8f	      0xbe00000000	                              mov esi, 0	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4001d94	          0x4889c7	                            mov rdi, rax	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4001d97	      0xe800000000	                          call 0x4001d9c	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4001d9c	            0x85c0	                           test eax, eax	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4001d9e	     0xf85db010000	                           jne 0x4001f7f	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4001da4	    0xc60500000000	                mov byte [0x04001dab], 0	     13223	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12
0x4001dab	      0xe9cf010000	                           jmp 0x4001f7f	     13223	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12
0x4001db0	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4001db7	      0xba04000000	                              mov edx, 4	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4001dbc	      0xbe00000000	                              mov esi, 0	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4001dc1	          0x4889c7	                            mov rdi, rax	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4001dc4	      0xe800000000	                          call 0x4001dc9	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4001dc9	            0x85c0	                           test eax, eax	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4001dcb	     0xf85fb000000	                           jne 0x4001ecc	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4001dd1	    0x8b0500000000	            mov eax, dword [0x04001dd7] 	     13227	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14
0x4001dd7	          0x83f802	                              cmp eax, 2	     13227	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14
0x4001dda	            0x7578	                           jne 0x4001e54	     13227	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14
0x4001ddc	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001de3	        0x4883c004	                              add rax, 4	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001de7	           0xfb600	                   movzx eax, byte [rax]	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001dea	            0x3c33	                            cmp al, 0x33	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001dec	            0x7526	                           jne 0x4001e14	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001dee	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001df5	        0x4883c005	                              add rax, 5	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001df9	           0xfb600	                   movzx eax, byte [rax]	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001dfc	            0x3c32	                            cmp al, 0x32	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001dfe	            0x7514	                           jne 0x4001e14	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001e00	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	     13230	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001e06	          0x83e0fd	                     and eax, 0xfffffffd	     13230	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001e09	    0x898518ffffff	             mov dword [rbp - 0xe8], eax	     13230	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001e0f	      0xe96b010000	                           jmp 0x4001f7f	     13230	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4001e14	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e1b	        0x4883c004	                              add rax, 4	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e1f	           0xfb600	                   movzx eax, byte [rax]	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e22	            0x3c36	                            cmp al, 0x36	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e24	     0xf8555010000	                           jne 0x4001f7f	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e2a	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e31	        0x4883c005	                              add rax, 5	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e35	           0xfb600	                   movzx eax, byte [rax]	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e38	            0x3c34	                            cmp al, 0x34	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e3a	     0xf853f010000	                           jne 0x4001f7f	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e40	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e46	          0x83c802	                               or eax, 2	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e49	    0x898518ffffff	             mov dword [rbp - 0xe8], eax	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e4f	      0xe92b010000	                           jmp 0x4001f7f	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4001e54	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e5b	        0x4883c004	                              add rax, 4	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e5f	           0xfb600	                   movzx eax, byte [rax]	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e62	            0x3c31	                            cmp al, 0x31	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e64	            0x7526	                           jne 0x4001e8c	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e66	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e6d	        0x4883c005	                              add rax, 5	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e71	           0xfb600	                   movzx eax, byte [rax]	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e74	            0x3c36	                            cmp al, 0x36	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e76	            0x7514	                           jne 0x4001e8c	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e78	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	     13237	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e7e	          0x83e0fd	                     and eax, 0xfffffffd	     13237	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e81	    0x898518ffffff	             mov dword [rbp - 0xe8], eax	     13237	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e87	      0xe9f3000000	                           jmp 0x4001f7f	     13237	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4001e8c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001e93	        0x4883c004	                              add rax, 4	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001e97	           0xfb600	                   movzx eax, byte [rax]	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001e9a	            0x3c33	                            cmp al, 0x33	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001e9c	     0xf85dd000000	                           jne 0x4001f7f	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001ea2	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001ea9	        0x4883c005	                              add rax, 5	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001ead	           0xfb600	                   movzx eax, byte [rax]	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001eb0	            0x3c32	                            cmp al, 0x32	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001eb2	     0xf85c7000000	                           jne 0x4001f7f	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001eb8	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	     13239	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001ebe	          0x83c802	                               or eax, 2	     13239	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001ec1	    0x898518ffffff	             mov dword [rbp - 0xe8], eax	     13239	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001ec7	      0xe9b3000000	                           jmp 0x4001f7f	     13239	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4001ecc	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4001ed3	      0xba04000000	                              mov edx, 4	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4001ed8	      0xbe00000000	                              mov esi, 0	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4001edd	          0x4889c7	                            mov rdi, rax	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4001ee0	      0xe800000000	                          call 0x4001ee5	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4001ee5	            0x85c0	                           test eax, eax	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4001ee7	            0x756a	                           jne 0x4001f53	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4001ee9	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001ef0	        0x4883c004	                              add rax, 4	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001ef4	           0xfb600	                   movzx eax, byte [rax]	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001ef7	            0x3c31	                            cmp al, 0x31	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001ef9	            0x7523	                           jne 0x4001f1e	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001efb	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001f02	        0x4883c005	                              add rax, 5	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001f06	           0xfb600	                   movzx eax, byte [rax]	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001f09	            0x3c36	                            cmp al, 0x36	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001f0b	            0x7511	                           jne 0x4001f1e	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001f0d	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	     13245	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001f13	          0x83e0fe	                     and eax, 0xfffffffe	     13245	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001f16	    0x898518ffffff	             mov dword [rbp - 0xe8], eax	     13245	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001f1c	            0xeb61	                           jmp 0x4001f7f	     13245	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4001f1e	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f25	        0x4883c004	                              add rax, 4	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f29	           0xfb600	                   movzx eax, byte [rax]	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f2c	            0x3c33	                            cmp al, 0x33	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f2e	            0x754f	                           jne 0x4001f7f	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f30	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f37	        0x4883c005	                              add rax, 5	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f3b	           0xfb600	                   movzx eax, byte [rax]	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f3e	            0x3c32	                            cmp al, 0x32	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f40	            0x753d	                           jne 0x4001f7f	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f42	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f48	          0x83c801	                               or eax, 1	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f4b	    0x898518ffffff	             mov dword [rbp - 0xe8], eax	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f51	            0xeb2c	                           jmp 0x4001f7f	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4001f53	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4001f5a	      0xba06000000	                              mov edx, 6	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4001f5f	      0xbe00000000	                              mov esi, 0	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4001f64	          0x4889c7	                            mov rdi, rax	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4001f67	      0xe800000000	                          call 0x4001f6c	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4001f6c	            0x85c0	                           test eax, eax	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4001f6e	            0x750f	                           jne 0x4001f7f	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4001f70	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	     13250	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22
0x4001f76	          0x83c804	                               or eax, 4	     13250	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22
0x4001f79	    0x898518ffffff	             mov dword [rbp - 0xe8], eax	     13250	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22
0x4001f7f	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4001f86	      0xbe2c000000	                           mov esi, 0x2c	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4001f8b	          0x4889c7	                            mov rdi, rax	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4001f8e	      0xe800000000	                          call 0x4001f93	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4001f93	    0x488985a0feff	            mov qword [rbp - 0x160], rax	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4001f9a	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	     13253	i386-dis.c	FUNCTION_10	FOR_1	IF_23
0x4001fa2	            0x7408	                            je 0x4001fac	     13253	i386-dis.c	FUNCTION_10	FOR_1	IF_23
0x4001fa4	    0x488385a0feff	              add qword [rbp - 0x160], 1	     13254	i386-dis.c	FUNCTION_10	FOR_1	IF_23
0x4001fac	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4001fb4	     0xf8552fcffff	                           jne 0x4001c0c	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4001fba	     0xfb605000000	           movzx eax, byte [0x04001fc1] 	     13264	i386-dis.c	FUNCTION_10	IF_25
0x4001fc1	            0x84c0	                             test al, al	     13264	i386-dis.c	FUNCTION_10	IF_25
0x4001fc3	     0xf84cc000000	                            je 0x4002095	     13264	i386-dis.c	FUNCTION_10	IF_25
0x4001fc9	    0x48c705000000	               mov qword [0x04001fd4], 0	     13266	i386-dis.c	FUNCTION_10	IF_25
0x4001fd4	    0x48c705000000	               mov qword [0x04001fdf], 0	     13267	i386-dis.c	FUNCTION_10	IF_25
0x4001fdf	    0x48c705000000	               mov qword [0x04001fea], 0	     13268	i386-dis.c	FUNCTION_10	IF_25
0x4001fea	    0x48c705000000	               mov qword [0x04001ff5], 0	     13269	i386-dis.c	FUNCTION_10	IF_25
0x4001ff5	    0x48c705000000	               mov qword [0x04002000], 0	     13270	i386-dis.c	FUNCTION_10	IF_25
0x4002000	    0x48c705000000	               mov qword [0x0400200b], 0	     13271	i386-dis.c	FUNCTION_10	IF_25
0x400200b	    0x48c705000000	               mov qword [0x04002016], 0	     13272	i386-dis.c	FUNCTION_10	IF_25
0x4002016	    0x48c705000000	               mov qword [0x04002021], 0	     13273	i386-dis.c	FUNCTION_10	IF_25
0x4002021	    0x48c705000000	               mov qword [0x0400202c], 0	     13274	i386-dis.c	FUNCTION_10	IF_25
0x400202c	    0x48c705000000	               mov qword [0x04002037], 0	     13275	i386-dis.c	FUNCTION_10	IF_25
0x4002037	    0x48c705000000	               mov qword [0x04002042], 0	     13276	i386-dis.c	FUNCTION_10	IF_25
0x4002042	    0x488b05000000	            mov rax, qword [0x04002049] 	     13277	i386-dis.c	FUNCTION_10	IF_25
0x4002049	    0x488905000000	            mov qword [0x04002050], rax 	     13277	i386-dis.c	FUNCTION_10	IF_25
0x4002050	    0x488b05000000	            mov rax, qword [0x04002057] 	     13278	i386-dis.c	FUNCTION_10	IF_25
0x4002057	    0x488905000000	            mov qword [0x0400205e], rax 	     13278	i386-dis.c	FUNCTION_10	IF_25
0x400205e	    0x48c705000000	               mov qword [0x04002069], 0	     13279	i386-dis.c	FUNCTION_10	IF_25
0x4002069	    0x48c705000000	               mov qword [0x04002074], 0	     13280	i386-dis.c	FUNCTION_10	IF_25
0x4002074	    0xc60500000000	            mov byte [0x0400207b], 0x5b 	     13281	i386-dis.c	FUNCTION_10	IF_25
0x400207b	    0xc60500000000	            mov byte [0x04002082], 0x5d 	     13282	i386-dis.c	FUNCTION_10	IF_25
0x4002082	    0xc60500000000	            mov byte [0x04002089], 0x2b 	     13283	i386-dis.c	FUNCTION_10	IF_25
0x4002089	    0xc60500000000	            mov byte [0x04002090], 0x2a 	     13284	i386-dis.c	FUNCTION_10	IF_25
0x4002090	      0xe9c7000000	                           jmp 0x400215c	     13284	i386-dis.c	FUNCTION_10	IF_25
0x4002095	    0x48c705000000	               mov qword [0x040020a0], 0	     13288	i386-dis.c	FUNCTION_10	ELSE_16
0x40020a0	    0x48c705000000	               mov qword [0x040020ab], 0	     13289	i386-dis.c	FUNCTION_10	ELSE_16
0x40020ab	    0x48c705000000	               mov qword [0x040020b6], 0	     13290	i386-dis.c	FUNCTION_10	ELSE_16
0x40020b6	    0x48c705000000	               mov qword [0x040020c1], 0	     13291	i386-dis.c	FUNCTION_10	ELSE_16
0x40020c1	    0x48c705000000	               mov qword [0x040020cc], 0	     13292	i386-dis.c	FUNCTION_10	ELSE_16
0x40020cc	    0x48c705000000	               mov qword [0x040020d7], 0	     13293	i386-dis.c	FUNCTION_10	ELSE_16
0x40020d7	    0x48c705000000	               mov qword [0x040020e2], 0	     13294	i386-dis.c	FUNCTION_10	ELSE_16
0x40020e2	    0x48c705000000	               mov qword [0x040020ed], 0	     13295	i386-dis.c	FUNCTION_10	ELSE_16
0x40020ed	    0x48c705000000	               mov qword [0x040020f8], 0	     13296	i386-dis.c	FUNCTION_10	ELSE_16
0x40020f8	    0x48c705000000	               mov qword [0x04002103], 0	     13297	i386-dis.c	FUNCTION_10	ELSE_16
0x4002103	    0x48c705000000	               mov qword [0x0400210e], 0	     13298	i386-dis.c	FUNCTION_10	ELSE_16
0x400210e	    0x488b05000000	            mov rax, qword [0x04002115] 	     13299	i386-dis.c	FUNCTION_10	ELSE_16
0x4002115	    0x488905000000	            mov qword [0x0400211c], rax 	     13299	i386-dis.c	FUNCTION_10	ELSE_16
0x400211c	    0x488b05000000	            mov rax, qword [0x04002123] 	     13300	i386-dis.c	FUNCTION_10	ELSE_16
0x4002123	    0x488905000000	            mov qword [0x0400212a], rax 	     13300	i386-dis.c	FUNCTION_10	ELSE_16
0x400212a	    0x48c705000000	               mov qword [0x04002135], 0	     13301	i386-dis.c	FUNCTION_10	ELSE_16
0x4002135	    0x48c705000000	               mov qword [0x04002140], 0	     13302	i386-dis.c	FUNCTION_10	ELSE_16
0x4002140	    0xc60500000000	            mov byte [0x04002147], 0x28 	     13303	i386-dis.c	FUNCTION_10	ELSE_16
0x4002147	    0xc60500000000	            mov byte [0x0400214e], 0x29 	     13304	i386-dis.c	FUNCTION_10	ELSE_16
0x400214e	    0xc60500000000	            mov byte [0x04002155], 0x2c 	     13305	i386-dis.c	FUNCTION_10	ELSE_16
0x4002155	    0xc60500000000	            mov byte [0x0400215c], 0x2c 	     13306	i386-dis.c	FUNCTION_10	ELSE_16
0x400215c	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13312	i386-dis.c	FUNCTION_10	IF_26
0x4002163	        0x488b4020	            mov rax, qword [rax + 0x20] 	     13312	i386-dis.c	FUNCTION_10	IF_26
0x4002167	          0x83e020	                           and eax, 0x20	     13312	i386-dis.c	FUNCTION_10	IF_26
0x400216a	          0x4885c0	                           test rax, rax	     13312	i386-dis.c	FUNCTION_10	IF_26
0x400216d	            0x7413	                            je 0x4002182	     13312	i386-dis.c	FUNCTION_10	IF_26
0x400216f	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13313	i386-dis.c	FUNCTION_10	IF_26
0x4002176	    0xc780b0000000	               mov dword [rax + 0xb0], 8	     13313	i386-dis.c	FUNCTION_10	IF_26
0x4002180	            0xeb11	                           jmp 0x4002193	     13313	i386-dis.c	FUNCTION_10	IF_26
0x4002182	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13315	i386-dis.c	FUNCTION_10	ELSE_17
0x4002189	    0xc780b0000000	               mov dword [rax + 0xb0], 7	     13315	i386-dis.c	FUNCTION_10	ELSE_17
0x4002193	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13317	i386-dis.c	FUNCTION_10	ELSE_17
0x400219a	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	     13317	i386-dis.c	FUNCTION_10	ELSE_17
0x40021a1	        0x48895068	             mov qword [rax + 0x68], rdx	     13317	i386-dis.c	FUNCTION_10	ELSE_17
0x40021a5	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	     13318	i386-dis.c	FUNCTION_10	ELSE_17
0x40021ac	        0x4883c008	                              add rax, 8	     13318	i386-dis.c	FUNCTION_10	ELSE_17
0x40021b0	    0x488985f0feff	            mov qword [rbp - 0x110], rax	     13318	i386-dis.c	FUNCTION_10	ELSE_17
0x40021b7	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	     13319	i386-dis.c	FUNCTION_10	ELSE_17
0x40021be	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	     13319	i386-dis.c	FUNCTION_10	ELSE_17
0x40021c5	    0xc60500000000	                mov byte [0x040021cc], 0	     13321	i386-dis.c	FUNCTION_10	ELSE_17
0x40021cc	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	     13322	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40021d6	            0xeb45	                           jmp 0x400221d	     13322	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40021d8	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40021de	          0x4863d0	                         movsxd rdx, eax	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40021e1	          0x4889d0	                            mov rax, rdx	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40021e4	        0x48c1e002	                              shl rax, 2	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40021e8	          0x4801d0	                            add rax, rdx	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40021eb	    0x488d14850000	                        lea rdx, [rax*4]	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40021f3	          0x4801d0	                            add rax, rdx	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40021f6	        0x48c1e002	                              shl rax, 2	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40021fa	    0x480500000000	                              add rax, 0	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4002200	          0xc60000	                       mov byte [rax], 0	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4002203	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13325	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4002209	            0x4898	                                    cdqe	     13325	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x400220b	    0xc70485000000	          mov dword [rax*4], 0xffffffff 	     13325	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4002216	    0x838584feffff	              add dword [rbp - 0x17c], 1	     13322	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x400221d	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 4	     13322	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4002224	            0x7eb2	                           jle 0x40021d8	     13322	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4002226	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13328	i386-dis.c	FUNCTION_10
0x400222d	    0x488905000000	            mov qword [0x04002234], rax 	     13328	i386-dis.c	FUNCTION_10
0x4002234	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	     13329	i386-dis.c	FUNCTION_10
0x400223b	    0x488905000000	            mov qword [0x04002242], rax 	     13329	i386-dis.c	FUNCTION_10
0x4002242	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	     13330	i386-dis.c	FUNCTION_10
0x4002249	        0x4883c008	                              add rax, 8	     13330	i386-dis.c	FUNCTION_10
0x400224d	    0x488905000000	            mov qword [0x04002254], rax 	     13330	i386-dis.c	FUNCTION_10
0x4002254	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	     13331	i386-dis.c	FUNCTION_10
0x400225b	        0x4883c008	                              add rax, 8	     13331	i386-dis.c	FUNCTION_10
0x400225f	    0x488905000000	            mov qword [0x04002266], rax 	     13331	i386-dis.c	FUNCTION_10
0x4002266	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x400226d	        0x4883c030	                           add rax, 0x30	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4002271	      0xbe00000000	                              mov esi, 0	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4002276	          0x4889c7	                            mov rdi, rax	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4002279	      0xe800000000	                          call 0x400227e	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x400227e	            0x85c0	                           test eax, eax	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4002280	     0xf84b4000000	                            je 0x400233a	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4002286	    0x488b05000000	            mov rax, qword [0x0400228d] 	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x400228d	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x4002294	        0x4883c208	                              add rdx, 8	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x4002298	          0x4839d0	                            cmp rax, rdx	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x400229b	     0xf868f000000	                           jbe 0x4002330	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x40022a1	    0x8b9518ffffff	             mov edx, dword [rbp - 0xe8]	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x40022a7	     0xfb685f8feff	           movzx eax, byte [rbp - 0x108]	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x40022ae	           0xfb6c0	                           movzx eax, al	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x40022b1	            0x89d6	                            mov esi, edx	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x40022b3	            0x89c7	                            mov edi, eax	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x40022b5	      0xe8b5e2ffff	                    call sym.prefix_name	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x40022ba	    0x488985a8feff	            mov qword [rbp - 0x158], rax	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x40022c1	    0x4883bda8feff	              cmp qword [rbp - 0x158], 0	     13343	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022c9	            0x742d	                            je 0x40022f8	     13343	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022cb	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022d2	          0x488b08	                    mov rcx, qword [rax]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022d5	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022dc	        0x488b4008	                mov rax, qword [rax + 8]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022e0	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022e7	      0xbe00000000	                              mov esi, 0	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022ec	          0x4889c7	                            mov rdi, rax	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022ef	      0xb800000000	                              mov eax, 0	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022f4	            0xffd1	                                call rcx	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022f6	            0xeb2e	                           jmp 0x4002326	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x40022f8	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x40022ff	          0x488b08	                    mov rcx, qword [rax]	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4002302	     0xfb685f8feff	           movzx eax, byte [rbp - 0x108]	     13349	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4002309	           0xfb6d0	                           movzx edx, al	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x400230c	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4002313	        0x488b4008	                mov rax, qword [rax + 8]	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4002317	      0xbe00000000	                              mov esi, 0	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x400231c	          0x4889c7	                            mov rdi, rax	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x400231f	      0xb800000000	                              mov eax, 0	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4002324	            0xffd1	                                call rcx	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4002326	      0xb801000000	                              mov eax, 1	     13352	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x400232b	      0xe9190d0000	                           jmp 0x4003049	     13352	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x4002330	      0xb8ffffffff	                     mov eax, 0xffffffff	     13355	i386-dis.c	FUNCTION_10	IF_27
0x4002335	      0xe90f0d0000	                           jmp 0x4003049	     13355	i386-dis.c	FUNCTION_10	IF_27
0x400233a	    0x48c705000000	               mov qword [0x04002345], 0	     13358	i386-dis.c	FUNCTION_10
0x4002345	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	     13359	i386-dis.c	FUNCTION_10
0x400234b	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	     13359	i386-dis.c	FUNCTION_10
0x4002351	      0xe8d6ddffff	                       call sym.ckprefix	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x4002356	            0x85c0	                           test eax, eax	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x4002358	            0x740e	                            je 0x4002368	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x400235a	    0x8b0500000000	            mov eax, dword [0x04002360] 	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x4002360	            0x85c0	                           test eax, eax	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x4002362	     0xf8494000000	                            je 0x40023fc	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x4002368	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4002372	            0xeb61	                           jmp 0x40023d5	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4002374	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400237b	          0x488b18	                    mov rbx, qword [rax]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400237e	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4002384	            0x4898	                                    cdqe	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4002386	    0x8b0485000000	                  mov eax, dword [rax*4]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400238d	    0x8b958cfeffff	            mov edx, dword [rbp - 0x174]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4002393	            0x89d6	                            mov esi, edx	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4002395	            0x89c7	                            mov edi, eax	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4002397	      0xe8d3e1ffff	                    call sym.prefix_name	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400239c	          0x4889c1	                            mov rcx, rax	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400239f	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023a6	            0x7507	                           jne 0x40023af	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023a8	      0xba00000000	                              mov edx, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023ad	            0xeb05	                           jmp 0x40023b4	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023af	      0xba00000000	                              mov edx, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023b4	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023bb	        0x488b4008	                mov rax, qword [rax + 8]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023bf	      0xbe00000000	                              mov esi, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023c4	          0x4889c7	                            mov rdi, rax	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023c7	      0xb800000000	                              mov eax, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023cc	            0xffd3	                                call rbx	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023ce	    0x838584feffff	              add dword [rbp - 0x17c], 1	     13366	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023d5	    0x83bd84feffff	           cmp dword [rbp - 0x17c], 0xd 	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023dc	            0x7f13	                            jg 0x40023f1	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40023de	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x40023e4	            0x4898	                                    cdqe	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x40023e6	    0x8b0485000000	                  mov eax, dword [rax*4]	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x40023ed	            0x85c0	                           test eax, eax	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x40023ef	            0x7583	                           jne 0x4002374	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x40023f1	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13370	i386-dis.c	FUNCTION_10	IF_30
0x40023f7	      0xe94d0c0000	                           jmp 0x4003049	     13370	i386-dis.c	FUNCTION_10	IF_30
0x40023fc	    0x488b05000000	            mov rax, qword [0x04002403] 	     13373	i386-dis.c	FUNCTION_10
0x4002403	    0x488905000000	            mov qword [0x0400240a], rax 	     13373	i386-dis.c	FUNCTION_10
0x400240a	    0x488b05000000	            mov rax, qword [0x04002411] 	     13375	i386-dis.c	FUNCTION_10
0x4002411	        0x488d5001	                      lea rdx, [rax + 1]	     13375	i386-dis.c	FUNCTION_10
0x4002415	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13375	i386-dis.c	FUNCTION_10
0x400241c	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13375	i386-dis.c	FUNCTION_10
0x4002420	          0x488b00	                    mov rax, qword [rax]	     13375	i386-dis.c	FUNCTION_10
0x4002423	          0x4839c2	                            cmp rdx, rax	     13375	i386-dis.c	FUNCTION_10
0x4002426	            0x761d	                           jbe 0x4002445	     13375	i386-dis.c	FUNCTION_10
0x4002428	    0x488b05000000	            mov rax, qword [0x0400242f] 	     13375	i386-dis.c	FUNCTION_10
0x400242f	        0x488d5001	                      lea rdx, [rax + 1]	     13375	i386-dis.c	FUNCTION_10
0x4002433	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13375	i386-dis.c	FUNCTION_10
0x400243a	          0x4889d6	                            mov rsi, rdx	     13375	i386-dis.c	FUNCTION_10
0x400243d	          0x4889c7	                            mov rdi, rax	     13375	i386-dis.c	FUNCTION_10
0x4002440	      0xe8fbdbffff	                     call sym.fetch_data	     13375	i386-dis.c	FUNCTION_10
0x4002445	    0x488b05000000	            mov rax, qword [0x0400244c] 	     13376	i386-dis.c	FUNCTION_10
0x400244c	           0xfb600	                   movzx eax, byte [rax]	     13376	i386-dis.c	FUNCTION_10
0x400244f	            0x3c62	                            cmp al, 0x62	     13376	i386-dis.c	FUNCTION_10
0x4002451	            0x740e	                            je 0x4002461	     13376	i386-dis.c	FUNCTION_10
0x4002453	    0x488b05000000	            mov rax, qword [0x0400245a] 	     13376	i386-dis.c	FUNCTION_10
0x400245a	           0xfb600	                   movzx eax, byte [rax]	     13376	i386-dis.c	FUNCTION_10
0x400245d	            0x3cc8	                            cmp al, 0xc8	     13376	i386-dis.c	FUNCTION_10
0x400245f	            0x7507	                           jne 0x4002468	     13376	i386-dis.c	FUNCTION_10
0x4002461	      0xb801000000	                              mov eax, 1	     13376	i386-dis.c	FUNCTION_10
0x4002466	            0xeb05	                           jmp 0x400246d	     13376	i386-dis.c	FUNCTION_10
0x4002468	      0xb800000000	                              mov eax, 0	     13376	i386-dis.c	FUNCTION_10
0x400246d	    0x890500000000	            mov dword [0x04002473], eax 	     13376	i386-dis.c	FUNCTION_10
0x4002473	    0x8b0500000000	            mov eax, dword [0x04002479] 	     13378	i386-dis.c	FUNCTION_10	IF_31
0x4002479	      0x2500080000	                          and eax, 0x800	     13378	i386-dis.c	FUNCTION_10	IF_31
0x400247e	            0x85c0	                           test eax, eax	     13378	i386-dis.c	FUNCTION_10	IF_31
0x4002480	     0xf84cb000000	                            je 0x4002551	     13378	i386-dis.c	FUNCTION_10	IF_31
0x4002486	    0x488b05000000	            mov rax, qword [0x0400248d] 	     13379	i386-dis.c	FUNCTION_10	IF_31
0x400248d	           0xfb600	                   movzx eax, byte [rax]	     13379	i386-dis.c	FUNCTION_10	IF_31
0x4002490	            0x3cd7	                            cmp al, 0xd7	     13379	i386-dis.c	FUNCTION_10	IF_31
0x4002492	            0x7612	                           jbe 0x40024a6	     13379	i386-dis.c	FUNCTION_10	IF_31
0x4002494	    0x488b05000000	            mov rax, qword [0x0400249b] 	     13379	i386-dis.c	FUNCTION_10	IF_31
0x400249b	           0xfb600	                   movzx eax, byte [rax]	     13379	i386-dis.c	FUNCTION_10	IF_31
0x400249e	            0x3cdf	                            cmp al, 0xdf	     13379	i386-dis.c	FUNCTION_10	IF_31
0x40024a0	     0xf86ab000000	                           jbe 0x4002551	     13379	i386-dis.c	FUNCTION_10	IF_31
0x40024a6	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024b0	            0xeb4c	                           jmp 0x40024fe	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024b2	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024b9	          0x488b18	                    mov rbx, qword [rax]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024bc	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024c2	            0x4898	                                    cdqe	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024c4	    0x8b0485000000	                  mov eax, dword [rax*4]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024cb	    0x8b958cfeffff	            mov edx, dword [rbp - 0x174]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024d1	            0x89d6	                            mov esi, edx	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024d3	            0x89c7	                            mov edi, eax	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024d5	      0xe895e0ffff	                    call sym.prefix_name	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024da	          0x4889c2	                            mov rdx, rax	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024dd	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024e4	        0x488b4008	                mov rax, qword [rax + 8]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024e8	      0xbe00000000	                              mov esi, 0	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024ed	          0x4889c7	                            mov rdi, rax	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024f0	      0xb800000000	                              mov eax, 0	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024f5	            0xffd3	                                call rbx	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024f7	    0x838584feffff	              add dword [rbp - 0x17c], 1	     13383	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40024fe	    0x8b0500000000	            mov eax, dword [0x04002504] 	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4002504	    0x398584feffff	           cmp dword [rbp - 0x17c], eax 	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400250a	            0x7d13	                           jge 0x400251f	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400250c	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4002512	            0x4898	                                    cdqe	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4002514	    0x8b0485000000	                  mov eax, dword [rax*4]	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400251b	            0x85c0	                           test eax, eax	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400251d	            0x7593	                           jne 0x40024b2	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400251f	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4002526	          0x488b10	                    mov rdx, qword [rax]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4002529	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4002530	        0x488b4008	                mov rax, qword [rax + 8]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4002534	      0xbe00000000	                              mov esi, 0	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4002539	          0x4889c7	                            mov rdi, rax	     13386	i386-dis.c	FUNCTION_10	IF_31
0x400253c	      0xb800000000	                              mov eax, 0	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4002541	            0xffd2	                                call rdx	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4002543	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13387	i386-dis.c	FUNCTION_10	IF_31
0x4002549	          0x83c001	                              add eax, 1	     13387	i386-dis.c	FUNCTION_10	IF_31
0x400254c	      0xe9f80a0000	                           jmp 0x4003049	     13387	i386-dis.c	FUNCTION_10	IF_31
0x4002551	    0x488b05000000	            mov rax, qword [0x04002558] 	     13390	i386-dis.c	FUNCTION_10	IF_32
0x4002558	           0xfb600	                   movzx eax, byte [rax]	     13390	i386-dis.c	FUNCTION_10	IF_32
0x400255b	            0x3c0f	                             cmp al, 0xf	     13390	i386-dis.c	FUNCTION_10	IF_32
0x400255d	     0xf85b1000000	                           jne 0x4002614	     13390	i386-dis.c	FUNCTION_10	IF_32
0x4002563	    0x488b05000000	            mov rax, qword [0x0400256a] 	     13394	i386-dis.c	FUNCTION_10	IF_32
0x400256a	        0x4883c001	                              add rax, 1	     13394	i386-dis.c	FUNCTION_10	IF_32
0x400256e	    0x488905000000	            mov qword [0x04002575], rax 	     13394	i386-dis.c	FUNCTION_10	IF_32
0x4002575	    0x488b05000000	            mov rax, qword [0x0400257c] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400257c	        0x488d5001	                      lea rdx, [rax + 1]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4002580	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4002587	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400258b	          0x488b00	                    mov rax, qword [rax]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400258e	          0x4839c2	                            cmp rdx, rax	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4002591	            0x761d	                           jbe 0x40025b0	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4002593	    0x488b05000000	            mov rax, qword [0x0400259a] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400259a	        0x488d5001	                      lea rdx, [rax + 1]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400259e	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x40025a5	          0x4889d6	                            mov rsi, rdx	     13395	i386-dis.c	FUNCTION_10	IF_32
0x40025a8	          0x4889c7	                            mov rdi, rax	     13395	i386-dis.c	FUNCTION_10	IF_32
0x40025ab	      0xe890daffff	                     call sym.fetch_data	     13395	i386-dis.c	FUNCTION_10	IF_32
0x40025b0	    0x488b05000000	            mov rax, qword [0x040025b7] 	     13396	i386-dis.c	FUNCTION_10	IF_32
0x40025b7	           0xfb600	                   movzx eax, byte [rax]	     13396	i386-dis.c	FUNCTION_10	IF_32
0x40025ba	    0x888583feffff	              mov byte [rbp - 0x17d], al	     13396	i386-dis.c	FUNCTION_10	IF_32
0x40025c0	     0xfb68583feff	           movzx eax, byte [rbp - 0x17d]	     13397	i386-dis.c	FUNCTION_10	IF_32
0x40025c7	          0x4863d0	                         movsxd rdx, eax	     13397	i386-dis.c	FUNCTION_10	IF_32
0x40025ca	          0x4889d0	                            mov rax, rdx	     13397	i386-dis.c	FUNCTION_10	IF_32
0x40025cd	          0x4801c0	                            add rax, rax	     13397	i386-dis.c	FUNCTION_10	IF_32
0x40025d0	          0x4801d0	                            add rax, rdx	     13397	i386-dis.c	FUNCTION_10	IF_32
0x40025d3	        0x48c1e005	                              shl rax, 5	     13397	i386-dis.c	FUNCTION_10	IF_32
0x40025d7	    0x480500000000	                              add rax, 0	     13397	i386-dis.c	FUNCTION_10	IF_32
0x40025dd	    0x48898598feff	            mov qword [rbp - 0x168], rax	     13397	i386-dis.c	FUNCTION_10	IF_32
0x40025e4	    0x488b05000000	            mov rax, qword [0x040025eb] 	     13398	i386-dis.c	FUNCTION_10	IF_32
0x40025eb	           0xfb600	                   movzx eax, byte [rax]	     13398	i386-dis.c	FUNCTION_10	IF_32
0x40025ee	           0xfb6c0	                           movzx eax, al	     13398	i386-dis.c	FUNCTION_10	IF_32
0x40025f1	            0x4898	                                    cdqe	     13398	i386-dis.c	FUNCTION_10	IF_32
0x40025f3	     0xfb680000000	                   movzx eax, byte [rax]	     13398	i386-dis.c	FUNCTION_10	IF_32
0x40025fa	    0x880500000000	               mov byte [0x04002600], al	     13398	i386-dis.c	FUNCTION_10	IF_32
0x4002600	    0x488b05000000	            mov rax, qword [0x04002607] 	     13399	i386-dis.c	FUNCTION_10	IF_32
0x4002607	        0x4883c001	                              add rax, 1	     13399	i386-dis.c	FUNCTION_10	IF_32
0x400260b	    0x488905000000	            mov qword [0x04002612], rax 	     13399	i386-dis.c	FUNCTION_10	IF_32
0x4002612	            0xeb58	                           jmp 0x400266c	     13399	i386-dis.c	FUNCTION_10	IF_32
0x4002614	    0x488b05000000	            mov rax, qword [0x0400261b] 	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x400261b	           0xfb600	                   movzx eax, byte [rax]	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x400261e	           0xfb6c0	                           movzx eax, al	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x4002621	          0x4863d0	                         movsxd rdx, eax	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x4002624	          0x4889d0	                            mov rax, rdx	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x4002627	          0x4801c0	                            add rax, rax	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x400262a	          0x4801d0	                            add rax, rdx	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x400262d	        0x48c1e005	                              shl rax, 5	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x4002631	    0x480500000000	                              add rax, 0	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x4002637	    0x48898598feff	            mov qword [rbp - 0x168], rax	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x400263e	    0x488b05000000	            mov rax, qword [0x04002645] 	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x4002645	           0xfb600	                   movzx eax, byte [rax]	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x4002648	           0xfb6c0	                           movzx eax, al	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x400264b	            0x4898	                                    cdqe	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x400264d	     0xfb680000000	                   movzx eax, byte [rax]	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x4002654	    0x880500000000	               mov byte [0x0400265a], al	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x400265a	    0x488b05000000	            mov rax, qword [0x04002661] 	     13405	i386-dis.c	FUNCTION_10	ELSE_19
0x4002661	        0x4883c001	                              add rax, 1	     13405	i386-dis.c	FUNCTION_10	ELSE_19
0x4002665	    0x488905000000	            mov qword [0x0400266c], rax 	     13405	i386-dis.c	FUNCTION_10	ELSE_19
0x400266c	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	     13411	i386-dis.c	FUNCTION_10
0x4002672	    0x898594feffff	            mov dword [rbp - 0x16c], eax	     13411	i386-dis.c	FUNCTION_10
0x4002678	    0x8b0500000000	            mov eax, dword [0x0400267e] 	     13412	i386-dis.c	FUNCTION_10	IF_33
0x400267e	      0x2500040000	                          and eax, 0x400	     13412	i386-dis.c	FUNCTION_10	IF_33
0x4002683	            0x85c0	                           test eax, eax	     13412	i386-dis.c	FUNCTION_10	IF_33
0x4002685	            0x7407	                            je 0x400268e	     13412	i386-dis.c	FUNCTION_10	IF_33
0x4002687	    0x83b58cfeffff	              xor dword [rbp - 0x174], 2	     13413	i386-dis.c	FUNCTION_10	IF_33
0x400268e	    0x8b0500000000	            mov eax, dword [0x04002694] 	     13414	i386-dis.c	FUNCTION_10	IF_34
0x4002694	      0x2500020000	                          and eax, 0x200	     13414	i386-dis.c	FUNCTION_10	IF_34
0x4002699	            0x85c0	                           test eax, eax	     13414	i386-dis.c	FUNCTION_10	IF_34
0x400269b	            0x7407	                            je 0x40026a4	     13414	i386-dis.c	FUNCTION_10	IF_34
0x400269d	    0x83b58cfeffff	              xor dword [rbp - 0x174], 1	     13415	i386-dis.c	FUNCTION_10	IF_34
0x40026a4	    0x488b05000000	            mov rax, qword [0x040026ab] 	     13417	i386-dis.c	FUNCTION_10
0x40026ab	    0x488905000000	            mov qword [0x040026b2], rax 	     13417	i386-dis.c	FUNCTION_10
0x40026b2	     0xfb605000000	           movzx eax, byte [0x040026b9] 	     13418	i386-dis.c	FUNCTION_10	IF_35
0x40026b9	            0x84c0	                             test al, al	     13418	i386-dis.c	FUNCTION_10	IF_35
0x40026bb	     0xf8483000000	                            je 0x4002744	     13418	i386-dis.c	FUNCTION_10	IF_35
0x40026c1	    0x488b05000000	            mov rax, qword [0x040026c8] 	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026c8	        0x488d5001	                      lea rdx, [rax + 1]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026cc	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026d3	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026d7	          0x488b00	                    mov rax, qword [rax]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026da	          0x4839c2	                            cmp rdx, rax	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026dd	            0x761d	                           jbe 0x40026fc	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026df	    0x488b05000000	            mov rax, qword [0x040026e6] 	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026e6	        0x488d5001	                      lea rdx, [rax + 1]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026ea	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026f1	          0x4889d6	                            mov rsi, rdx	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026f4	          0x4889c7	                            mov rdi, rax	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026f7	      0xe844d9ffff	                     call sym.fetch_data	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40026fc	    0x488b05000000	            mov rax, qword [0x04002703] 	     13421	i386-dis.c	FUNCTION_10	IF_35
0x4002703	           0xfb600	                   movzx eax, byte [rax]	     13421	i386-dis.c	FUNCTION_10	IF_35
0x4002706	          0xc0e806	                               shr al, 6	     13421	i386-dis.c	FUNCTION_10	IF_35
0x4002709	           0xfb6c0	                           movzx eax, al	     13421	i386-dis.c	FUNCTION_10	IF_35
0x400270c	          0x83e003	                              and eax, 3	     13421	i386-dis.c	FUNCTION_10	IF_35
0x400270f	    0x890500000000	            mov dword [0x04002715], eax 	     13421	i386-dis.c	FUNCTION_10	IF_35
0x4002715	    0x488b05000000	            mov rax, qword [0x0400271c] 	     13422	i386-dis.c	FUNCTION_10	IF_35
0x400271c	           0xfb600	                   movzx eax, byte [rax]	     13422	i386-dis.c	FUNCTION_10	IF_35
0x400271f	          0xc0e803	                               shr al, 3	     13422	i386-dis.c	FUNCTION_10	IF_35
0x4002722	           0xfb6c0	                           movzx eax, al	     13422	i386-dis.c	FUNCTION_10	IF_35
0x4002725	          0x83e007	                              and eax, 7	     13422	i386-dis.c	FUNCTION_10	IF_35
0x4002728	    0x890500000000	            mov dword [0x0400272e], eax 	     13422	i386-dis.c	FUNCTION_10	IF_35
0x400272e	    0x488b05000000	            mov rax, qword [0x04002735] 	     13423	i386-dis.c	FUNCTION_10	IF_35
0x4002735	           0xfb600	                   movzx eax, byte [rax]	     13423	i386-dis.c	FUNCTION_10	IF_35
0x4002738	           0xfb6c0	                           movzx eax, al	     13423	i386-dis.c	FUNCTION_10	IF_35
0x400273b	          0x83e007	                              and eax, 7	     13423	i386-dis.c	FUNCTION_10	IF_35
0x400273e	    0x890500000000	            mov dword [0x04002744], eax 	     13423	i386-dis.c	FUNCTION_10	IF_35
0x4002744	    0xc60500000000	                mov byte [0x0400274b], 0	     13426	i386-dis.c	FUNCTION_10
0x400274b	    0xc60500000000	                mov byte [0x04002752], 0	     13427	i386-dis.c	FUNCTION_10
0x4002752	    0xc60500000000	                mov byte [0x04002759], 0	     13428	i386-dis.c	FUNCTION_10
0x4002759	      0xba2c000000	                           mov edx, 0x2c	     13429	i386-dis.c	FUNCTION_10	CALL_21
0x400275e	      0xbe00000000	                              mov esi, 0	     13429	i386-dis.c	FUNCTION_10	CALL_21
0x4002763	      0xbf00000000	                              mov edi, 0	     13429	i386-dis.c	FUNCTION_10	CALL_21
0x4002768	      0xe800000000	                          call 0x400276d	     13429	i386-dis.c	FUNCTION_10	CALL_21
0x400276d	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     13431	i386-dis.c	FUNCTION_10	IF_36
0x4002774	          0x488b00	                    mov rax, qword [rax]	     13431	i386-dis.c	FUNCTION_10	IF_36
0x4002777	          0x4885c0	                           test rax, rax	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400277a	            0x7538	                           jne 0x40027b4	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400277c	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     13431	i386-dis.c	FUNCTION_10	IF_36
0x4002783	          0x8b4010	            mov eax, dword [rax + 0x10] 	     13431	i386-dis.c	FUNCTION_10	IF_36
0x4002786	          0x83f801	                              cmp eax, 1	     13431	i386-dis.c	FUNCTION_10	IF_36
0x4002789	            0x7529	                           jne 0x40027b4	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400278b	    0x8b958cfeffff	            mov edx, dword [rbp - 0x174]	     13433	i386-dis.c	FUNCTION_10	IF_36	CALL_22
0x4002791	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13433	i386-dis.c	FUNCTION_10	IF_36	CALL_22
0x4002798	            0x89d6	                            mov esi, edx	     13433	i386-dis.c	FUNCTION_10	IF_36	CALL_22
0x400279a	          0x4889c7	                            mov rdi, rax	     13433	i386-dis.c	FUNCTION_10	IF_36	CALL_22
0x400279d	      0xe8c7f2ffff	                        call sym.get_sib	     13433	i386-dis.c	FUNCTION_10	IF_36	CALL_22
0x40027a2	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	     13434	i386-dis.c	FUNCTION_10	IF_36	CALL_23
0x40027a8	            0x89c7	                            mov edi, eax	     13434	i386-dis.c	FUNCTION_10	IF_36	CALL_23
0x40027aa	      0xe81c090000	                        call sym.dofloat	     13434	i386-dis.c	FUNCTION_10	IF_36	CALL_23
0x40027af	      0xe99b010000	                           jmp 0x400294f	     13434	i386-dis.c	FUNCTION_10	IF_36	CALL_23
0x40027b4	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	     13438	i386-dis.c	FUNCTION_10	ELSE_20	CALL_24
0x40027bb	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     13438	i386-dis.c	FUNCTION_10	ELSE_20	CALL_24
0x40027c2	          0x4889d6	                            mov rsi, rdx	     13438	i386-dis.c	FUNCTION_10	ELSE_20	CALL_24
0x40027c5	          0x4889c7	                            mov rdi, rax	     13438	i386-dis.c	FUNCTION_10	ELSE_20	CALL_24
0x40027c8	      0xe888e2ffff	               call sym.get_valid_dis386	     13438	i386-dis.c	FUNCTION_10	ELSE_20	CALL_24
0x40027cd	    0x48898598feff	            mov qword [rbp - 0x168], rax	     13438	i386-dis.c	FUNCTION_10	ELSE_20	CALL_24
0x40027d4	    0x4883bd98feff	              cmp qword [rbp - 0x168], 0	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x40027dc	     0xf846d010000	                            je 0x400294f	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x40027e2	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x40027e9	          0x488b00	                    mov rax, qword [rax]	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x40027ec	    0x8b958cfeffff	            mov edx, dword [rbp - 0x174]	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x40027f2	            0x89d6	                            mov esi, edx	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x40027f4	          0x4889c7	                            mov rdi, rax	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x40027f7	      0xe83c0b0000	                          call sym.putop	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x40027fc	            0x85c0	                           test eax, eax	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x40027fe	     0xf854b010000	                           jne 0x400294f	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x4002804	    0x8b958cfeffff	            mov edx, dword [rbp - 0x174]	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x400280a	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4002811	            0x89d6	                            mov esi, edx	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4002813	          0x4889c7	                            mov rdi, rax	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4002816	      0xe84ef2ffff	                        call sym.get_sib	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x400281b	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4002825	      0xe918010000	                           jmp 0x4002942	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400282a	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4002830	          0x4863d0	                         movsxd rdx, eax	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4002833	          0x4889d0	                            mov rax, rdx	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4002836	        0x48c1e002	                              shl rax, 2	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400283a	          0x4801d0	                            add rax, rdx	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400283d	    0x488d14850000	                        lea rdx, [rax*4]	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4002845	          0x4801d0	                            add rax, rdx	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4002848	        0x48c1e002	                              shl rax, 2	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400284c	    0x480500000000	                              add rax, 0	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4002852	    0x488905000000	            mov qword [0x04002859], rax 	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4002859	      0xb804000000	                              mov eax, 4	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400285e	    0x2b8584feffff	            sub eax, dword [rbp - 0x17c]	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4002864	    0x890500000000	            mov dword [0x0400286a], eax 	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400286a	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4002871	    0x8b9584feffff	            mov edx, dword [rbp - 0x17c]	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4002877	          0x4863d2	                         movsxd rdx, edx	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400287a	        0x48c1e204	                              shl rdx, 4	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400287e	          0x4801d0	                            add rax, rdx	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4002881	        0x4883c008	                              add rax, 8	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4002885	          0x488b00	                    mov rax, qword [rax]	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4002888	          0x4885c0	                           test rax, rax	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400288b	            0x7447	                            je 0x40028d4	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400288d	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4002894	    0x8b9584feffff	            mov edx, dword [rbp - 0x17c]	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400289a	          0x4863d2	                         movsxd rdx, edx	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400289d	        0x48c1e204	                              shl rdx, 4	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028a1	          0x4801d0	                            add rax, rdx	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028a4	        0x4883c008	                              add rax, 8	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028a8	          0x488b00	                    mov rax, qword [rax]	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028ab	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028b2	    0x8b8d84feffff	            mov ecx, dword [rbp - 0x17c]	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028b8	          0x4863c9	                         movsxd rcx, ecx	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028bb	        0x48c1e104	                              shl rcx, 4	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028bf	          0x4801ca	                            add rdx, rcx	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028c2	        0x4883c210	                           add rdx, 0x10	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028c6	            0x8b12	                    mov edx, dword [rdx]	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028c8	    0x8b8d8cfeffff	            mov ecx, dword [rbp - 0x174]	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028ce	            0x89ce	                            mov esi, ecx	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028d0	            0x89d7	                            mov edi, edx	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028d2	            0xffd0	                                call rax	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40028d4	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 0	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x40028db	            0x755e	                           jne 0x400293b	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x40028dd	    0x8b0500000000	            mov eax, dword [0x040028e3] 	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x40028e3	            0x85c0	                           test eax, eax	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x40028e5	            0x7454	                            je 0x400293b	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x40028e7	    0x8b0500000000	            mov eax, dword [0x040028ed] 	     13453	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40
0x40028ed	            0x85c0	                           test eax, eax	     13453	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40
0x40028ef	            0x7436	                            je 0x4002927	     13453	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40
0x40028f1	      0xbf00000000	                              mov edi, 0	     13455	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_27
0x40028f6	      0xe8ce210000	                        call sym.oappend	     13455	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_27
0x40028fb	    0x488b05000000	            mov rax, qword [0x04002902] 	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x4002902	    0x8b1500000000	            mov edx, dword [0x04002908] 	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x4002908	          0x4863d2	                         movsxd rdx, edx	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x400290b	        0x48c1e203	                              shl rdx, 3	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x400290f	          0x4801d0	                            add rax, rdx	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x4002912	          0x488b00	                    mov rax, qword [rax]	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x4002915	          0x4889c7	                            mov rdi, rax	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x4002918	      0xe8ac210000	                        call sym.oappend	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x400291d	      0xbf00000000	                              mov edi, 0	     13457	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_29
0x4002922	      0xe8a2210000	                        call sym.oappend	     13457	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_29
0x4002927	    0x8b0500000000	            mov eax, dword [0x0400292d] 	     13459	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_41
0x400292d	            0x85c0	                           test eax, eax	     13459	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_41
0x400292f	            0x740a	                            je 0x400293b	     13459	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_41
0x4002931	      0xbf00000000	                              mov edi, 0	     13460	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	CALL_30
0x4002936	      0xe88e210000	                        call sym.oappend	     13460	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	CALL_30
0x400293b	    0x838584feffff	              add dword [rbp - 0x17c], 1	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4002942	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 4	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4002949	     0xf8edbfeffff	                           jle 0x400282a	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400294f	    0x8b0500000000	            mov eax, dword [0x04002955] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4002955	            0x85c0	                           test eax, eax	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4002957	            0x752d	                           jne 0x4002986	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4002959	    0x8b1500000000	            mov edx, dword [0x0400295f] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400295f	    0x8b0500000000	            mov eax, dword [0x04002965] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4002965	            0x39c2	                            cmp edx, eax	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4002967	            0x751d	                           jne 0x4002986	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4002969	    0x8b0500000000	            mov eax, dword [0x0400296f] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400296f	            0x85c0	                           test eax, eax	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4002971	            0x7813	                            js 0x4002986	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4002973	    0x8b0500000000	            mov eax, dword [0x04002979] 	     13468	i386-dis.c	FUNCTION_10	IF_42
0x4002979	            0x4898	                                    cdqe	     13468	i386-dis.c	FUNCTION_10	IF_42
0x400297b	    0xc70485000000	                    mov dword [rax*4], 0	     13468	i386-dis.c	FUNCTION_10	IF_42
0x4002986	    0x8b0500000000	            mov eax, dword [0x0400298c] 	     13471	i386-dis.c	FUNCTION_10	IF_43
0x400298c	      0x25f8010000	                          and eax, 0x1f8	     13471	i386-dis.c	FUNCTION_10	IF_43
0x4002991	            0x85c0	                           test eax, eax	     13471	i386-dis.c	FUNCTION_10	IF_43
0x4002993	            0x7425	                            je 0x40029ba	     13471	i386-dis.c	FUNCTION_10	IF_43
0x4002995	    0x8b1500000000	            mov edx, dword [0x0400299b] 	     13473	i386-dis.c	FUNCTION_10	IF_43
0x400299b	    0x8b0500000000	            mov eax, dword [0x040029a1] 	     13473	i386-dis.c	FUNCTION_10	IF_43
0x40029a1	            0x21d0	                            and eax, edx	     13473	i386-dis.c	FUNCTION_10	IF_43
0x40029a3	            0x85c0	                           test eax, eax	     13473	i386-dis.c	FUNCTION_10	IF_43
0x40029a5	            0x7413	                            je 0x40029ba	     13473	i386-dis.c	FUNCTION_10	IF_43
0x40029a7	    0x8b0500000000	            mov eax, dword [0x040029ad] 	     13474	i386-dis.c	FUNCTION_10	IF_43
0x40029ad	            0x4898	                                    cdqe	     13474	i386-dis.c	FUNCTION_10	IF_43
0x40029af	    0xc70485000000	                    mov dword [rax*4], 0	     13474	i386-dis.c	FUNCTION_10	IF_43
0x40029ba	    0x8b0500000000	            mov eax, dword [0x040029c0] 	     13477	i386-dis.c	FUNCTION_10	IF_44
0x40029c0	      0x2500040000	                          and eax, 0x400	     13477	i386-dis.c	FUNCTION_10	IF_44
0x40029c5	            0x85c0	                           test eax, eax	     13477	i386-dis.c	FUNCTION_10	IF_44
0x40029c7	            0x7422	                            je 0x40029eb	     13477	i386-dis.c	FUNCTION_10	IF_44
0x40029c9	    0x8b0500000000	            mov eax, dword [0x040029cf] 	     13478	i386-dis.c	FUNCTION_10	IF_44
0x40029cf	      0x2500040000	                          and eax, 0x400	     13478	i386-dis.c	FUNCTION_10	IF_44
0x40029d4	            0x85c0	                           test eax, eax	     13478	i386-dis.c	FUNCTION_10	IF_44
0x40029d6	            0x7413	                            je 0x40029eb	     13478	i386-dis.c	FUNCTION_10	IF_44
0x40029d8	    0x8b0500000000	            mov eax, dword [0x040029de] 	     13479	i386-dis.c	FUNCTION_10	IF_44
0x40029de	            0x4898	                                    cdqe	     13479	i386-dis.c	FUNCTION_10	IF_44
0x40029e0	    0xc70485000000	                    mov dword [rax*4], 0	     13479	i386-dis.c	FUNCTION_10	IF_44
0x40029eb	    0x8b0500000000	            mov eax, dword [0x040029f1] 	     13482	i386-dis.c	FUNCTION_10	IF_45
0x40029f1	      0x2500020000	                          and eax, 0x200	     13482	i386-dis.c	FUNCTION_10	IF_45
0x40029f6	            0x85c0	                           test eax, eax	     13482	i386-dis.c	FUNCTION_10	IF_45
0x40029f8	            0x7422	                            je 0x4002a1c	     13482	i386-dis.c	FUNCTION_10	IF_45
0x40029fa	    0x8b0500000000	            mov eax, dword [0x04002a00] 	     13483	i386-dis.c	FUNCTION_10	IF_45
0x4002a00	      0x2500020000	                          and eax, 0x200	     13483	i386-dis.c	FUNCTION_10	IF_45
0x4002a05	            0x85c0	                           test eax, eax	     13483	i386-dis.c	FUNCTION_10	IF_45
0x4002a07	            0x7413	                            je 0x4002a1c	     13483	i386-dis.c	FUNCTION_10	IF_45
0x4002a09	    0x8b0500000000	            mov eax, dword [0x04002a0f] 	     13484	i386-dis.c	FUNCTION_10	IF_45
0x4002a0f	            0x4898	                                    cdqe	     13484	i386-dis.c	FUNCTION_10	IF_45
0x4002a11	    0xc70485000000	                    mov dword [rax*4], 0	     13484	i386-dis.c	FUNCTION_10	IF_45
0x4002a1c	    0xc78590feffff	              mov dword [rbp - 0x170], 0	     13487	i386-dis.c	FUNCTION_10
0x4002a26	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x4002a30	      0xe99f000000	                           jmp 0x4002ad4	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x4002a35	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002a3b	            0x4898	                                    cdqe	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002a3d	    0x8b0485000000	                  mov eax, dword [rax*4]	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002a44	            0x85c0	                           test eax, eax	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002a46	     0xf8481000000	                            je 0x4002acd	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002a4c	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4002a52	            0x4898	                                    cdqe	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4002a54	    0x8b0485000000	                  mov eax, dword [rax*4]	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4002a5b	    0x8b9594feffff	            mov edx, dword [rbp - 0x16c]	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4002a61	            0x89d6	                            mov esi, edx	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4002a63	            0x89c7	                            mov edi, eax	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4002a65	      0xe805dbffff	                    call sym.prefix_name	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4002a6a	    0x488985b0feff	            mov qword [rbp - 0x150], rax	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4002a71	    0x4883bdb0feff	              cmp qword [rbp - 0x150], 0	     13493	i386-dis.c	FUNCTION_10	FOR_6	IF_46	IF_47
0x4002a79	            0x7505	                           jne 0x4002a80	     13493	i386-dis.c	FUNCTION_10	FOR_6	IF_46	IF_47
0x4002a7b	      0xe800000000	                          call 0x4002a80	     13494	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_33
0x4002a80	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4002a87	          0x4889c7	                            mov rdi, rax	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4002a8a	      0xe800000000	                          call 0x4002a8f	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4002a8f	            0x89c2	                            mov edx, eax	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4002a91	    0x8b8590feffff	            mov eax, dword [rbp - 0x170]	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4002a97	             0x1d0	                            add eax, edx	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4002a99	          0x83c001	                              add eax, 1	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4002a9c	    0x898590feffff	            mov dword [rbp - 0x170], eax	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4002aa2	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002aa9	          0x488b08	                    mov rcx, qword [rax]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002aac	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002ab3	        0x488b4008	                mov rax, qword [rax + 8]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002ab7	    0x488b95b0feff	            mov rdx, qword [rbp - 0x150]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002abe	      0xbe00000000	                              mov esi, 0	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002ac3	          0x4889c7	                            mov rdi, rax	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002ac6	      0xb800000000	                              mov eax, 0	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002acb	            0xffd1	                                call rcx	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4002acd	    0x838584feffff	              add dword [rbp - 0x17c], 1	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x4002ad4	    0x83bd84feffff	           cmp dword [rbp - 0x17c], 0xd 	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x4002adb	     0xf8e54ffffff	                           jle 0x4002a35	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x4002ae1	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     13504	i386-dis.c	FUNCTION_10	IF_48
0x4002ae8	          0x8b4058	            mov eax, dword [rax + 0x58] 	     13504	i386-dis.c	FUNCTION_10	IF_48
0x4002aeb	      0x3d03020000	                          cmp eax, 0x203	     13504	i386-dis.c	FUNCTION_10	IF_48
0x4002af0	     0xf858c000000	                           jne 0x4002b82	     13504	i386-dis.c	FUNCTION_10	IF_48
0x4002af6	    0x4881bd98feff	              cmp qword [rbp - 0x168], 0	     13505	i386-dis.c	FUNCTION_10	IF_48
0x4002b01	            0x747f	                            je 0x4002b82	     13505	i386-dis.c	FUNCTION_10	IF_48
0x4002b03	    0x8b0500000000	            mov eax, dword [0x04002b09] 	     13507	i386-dis.c	FUNCTION_10	IF_48
0x4002b09	          0x83e003	                              and eax, 3	     13507	i386-dis.c	FUNCTION_10	IF_48
0x4002b0c	            0x85c0	                           test eax, eax	     13506	i386-dis.c	FUNCTION_10	IF_48
0x4002b0e	            0x740d	                            je 0x4002b1d	     13506	i386-dis.c	FUNCTION_10	IF_48
0x4002b10	    0x8b0500000000	            mov eax, dword [0x04002b16] 	     13509	i386-dis.c	FUNCTION_10	IF_48
0x4002b16	          0x83e003	                              and eax, 3	     13509	i386-dis.c	FUNCTION_10	IF_48
0x4002b19	            0x85c0	                           test eax, eax	     13508	i386-dis.c	FUNCTION_10	IF_48
0x4002b1b	            0x7421	                            je 0x4002b3e	     13508	i386-dis.c	FUNCTION_10	IF_48
0x4002b1d	    0x8b0500000000	            mov eax, dword [0x04002b23] 	     13511	i386-dis.c	FUNCTION_10	IF_48
0x4002b23	      0x2503020000	                          and eax, 0x203	     13511	i386-dis.c	FUNCTION_10	IF_48
0x4002b28	      0x3d00020000	                          cmp eax, 0x200	     13510	i386-dis.c	FUNCTION_10	IF_48
0x4002b2d	            0x7553	                           jne 0x4002b82	     13510	i386-dis.c	FUNCTION_10	IF_48
0x4002b2f	    0x8b0500000000	            mov eax, dword [0x04002b35] 	     13513	i386-dis.c	FUNCTION_10	IF_48
0x4002b35	      0x2500020000	                          and eax, 0x200	     13513	i386-dis.c	FUNCTION_10	IF_48
0x4002b3a	            0x85c0	                           test eax, eax	     13513	i386-dis.c	FUNCTION_10	IF_48
0x4002b3c	            0x7544	                           jne 0x4002b82	     13513	i386-dis.c	FUNCTION_10	IF_48
0x4002b3e	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4002b45	          0x488b10	                    mov rdx, qword [rax]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4002b48	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4002b4f	        0x488b4008	                mov rax, qword [rax + 8]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4002b53	      0xbe00000000	                              mov esi, 0	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4002b58	          0x4889c7	                            mov rdi, rax	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4002b5b	      0xb800000000	                              mov eax, 0	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4002b60	            0xffd2	                                call rdx	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4002b62	    0x488b05000000	            mov rax, qword [0x04002b69] 	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4002b69	          0x4889c2	                            mov rdx, rax	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4002b6c	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4002b73	        0x4883c008	                              add rax, 8	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4002b77	          0x4829c2	                            sub rdx, rax	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4002b7a	          0x4889d0	                            mov rax, rdx	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4002b7d	      0xe9c7040000	                           jmp 0x4003049	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4002b82	    0x488b05000000	            mov rax, qword [0x04002b89] 	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4002b89	          0x4889c2	                            mov rdx, rax	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4002b8c	    0x488b05000000	            mov rax, qword [0x04002b93] 	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4002b93	          0x4829c2	                            sub rdx, rax	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4002b96	          0x4889d0	                            mov rax, rdx	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4002b99	        0x4883f80f	                            cmp rax, 0xf	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4002b9d	            0x7e2e	                           jle 0x4002bcd	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4002b9f	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4002ba6	          0x488b10	                    mov rdx, qword [rax]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4002ba9	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4002bb0	        0x488b4008	                mov rax, qword [rax + 8]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4002bb4	      0xbe00000000	                              mov esi, 0	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4002bb9	          0x4889c7	                            mov rdi, rax	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4002bbc	      0xb800000000	                              mov eax, 0	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4002bc1	            0xffd2	                                call rdx	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4002bc3	      0xb80f000000	                            mov eax, 0xf	     13523	i386-dis.c	FUNCTION_10	IF_49
0x4002bc8	      0xe97c040000	                           jmp 0x4003049	     13523	i386-dis.c	FUNCTION_10	IF_49
0x4002bcd	    0x488b05000000	            mov rax, qword [0x04002bd4] 	     13526	i386-dis.c	FUNCTION_10
0x4002bd4	    0x488905000000	            mov qword [0x04002bdb], rax 	     13526	i386-dis.c	FUNCTION_10
0x4002bdb	      0xbf00000000	                              mov edi, 0	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4002be0	      0xe800000000	                          call 0x4002be5	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4002be5	            0x89c2	                            mov edx, eax	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4002be7	    0x8b8590feffff	            mov eax, dword [rbp - 0x170]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4002bed	             0x1d0	                            add eax, edx	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4002bef	    0x898584feffff	            mov dword [rbp - 0x17c], eax	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4002bf5	            0xeb11	                           jmp 0x4002c08	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4002bf7	      0xbf00000000	                              mov edi, 0	     13528	i386-dis.c	FUNCTION_10	CALL_36
0x4002bfc	      0xe8c81e0000	                        call sym.oappend	     13528	i386-dis.c	FUNCTION_10	CALL_36
0x4002c01	    0x838584feffff	              add dword [rbp - 0x17c], 1	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4002c08	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 5	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4002c0f	            0x7ee6	                           jle 0x4002bf7	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4002c11	      0xbf00000000	                              mov edi, 0	     13529	i386-dis.c	FUNCTION_10	CALL_37
0x4002c16	      0xe8ae1e0000	                        call sym.oappend	     13529	i386-dis.c	FUNCTION_10	CALL_37
0x4002c1b	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13530	i386-dis.c	FUNCTION_10
0x4002c22	          0x488b08	                    mov rcx, qword [rax]	     13530	i386-dis.c	FUNCTION_10
0x4002c25	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13530	i386-dis.c	FUNCTION_10
0x4002c2c	        0x488b4008	                mov rax, qword [rax + 8]	     13530	i386-dis.c	FUNCTION_10
0x4002c30	      0xba00000000	                              mov edx, 0	     13530	i386-dis.c	FUNCTION_10
0x4002c35	      0xbe00000000	                              mov esi, 0	     13530	i386-dis.c	FUNCTION_10
0x4002c3a	          0x4889c7	                            mov rdi, rax	     13530	i386-dis.c	FUNCTION_10
0x4002c3d	      0xb800000000	                              mov eax, 0	     13530	i386-dis.c	FUNCTION_10
0x4002c42	            0xffd1	                                call rcx	     13530	i386-dis.c	FUNCTION_10
0x4002c44	     0xfb605000000	           movzx eax, byte [0x04002c4b] 	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4002c4b	            0x84c0	                             test al, al	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4002c4d	            0x750e	                           jne 0x4002c5d	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4002c4f	    0x8b0500000000	            mov eax, dword [0x04002c55] 	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4002c55	            0x85c0	                           test eax, eax	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4002c57	     0xf8485010000	                            je 0x4002de2	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4002c5d	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	     13538	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c67	            0xeb40	                           jmp 0x4002ca9	     13538	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c69	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c6f	          0x4863d0	                         movsxd rdx, eax	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c72	          0x4889d0	                            mov rax, rdx	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c75	        0x48c1e002	                              shl rax, 2	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c79	          0x4801d0	                            add rax, rdx	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c7c	    0x488d14850000	                        lea rdx, [rax*4]	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c84	          0x4801d0	                            add rax, rdx	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c87	        0x48c1e002	                              shl rax, 2	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c8b	    0x488d90000000	                          lea rdx, [rax]	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c92	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c98	            0x4898	                                    cdqe	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002c9a	    0x488994c5c0fe	    mov qword [rbp + rax*8 - 0x140], rdx	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002ca2	    0x838584feffff	              add dword [rbp - 0x17c], 1	     13538	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002ca9	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 4	     13538	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002cb0	            0x7eb7	                           jle 0x4002c69	     13538	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4002cb2	     0xfb605000000	           movzx eax, byte [0x04002cb9] 	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cb9	            0x84c0	                             test al, al	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cbb	            0x7456	                            je 0x4002d13	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cbd	    0x4883bd98feff	              cmp qword [rbp - 0x168], 0	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cc5	            0x744c	                            je 0x4002d13	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cc7	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cce	        0x488b4028	            mov rax, qword [rax + 0x28] 	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cd2	    0x483d00000000	                              cmp rax, 0	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cd8	            0x7539	                           jne 0x4002d13	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cda	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002ce1	        0x488b4038	            mov rax, qword [rax + 0x38] 	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002ce5	    0x483d00000000	                              cmp rax, 0	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002ceb	            0x7526	                           jne 0x4002d13	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002ced	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cf4	        0x488b4048	            mov rax, qword [rax + 0x48] 	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cf8	          0x4885c0	                           test rax, rax	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cfb	            0x7516	                           jne 0x4002d13	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002cfd	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	     13544	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002d08	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	     13545	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4002d13	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	     13548	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d1d	      0xe9b1000000	                           jmp 0x4002dd3	     13548	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d22	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d28	            0x4898	                                    cdqe	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d2a	    0x8b0485000000	                  mov eax, dword [rax*4]	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d31	    0x890500000000	            mov dword [0x04002d37], eax 	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d37	      0xb804000000	                              mov eax, 4	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d3c	    0x2b8584feffff	            sub eax, dword [rbp - 0x17c]	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d42	            0x4898	                                    cdqe	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d44	    0x8b1485000000	                  mov edx, dword [rax*4]	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d4b	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d51	            0x4898	                                    cdqe	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d53	    0x891485000000	                  mov dword [rax*4], edx	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d5a	      0xb804000000	                              mov eax, 4	     13552	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d5f	    0x2b8584feffff	            sub eax, dword [rbp - 0x17c]	     13552	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d65	    0x8b1500000000	            mov edx, dword [0x04002d6b] 	     13552	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d6b	            0x4898	                                    cdqe	     13552	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d6d	    0x891485000000	                  mov dword [rax*4], edx	     13552	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d74	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13553	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d7a	            0x4898	                                    cdqe	     13553	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d7c	    0x488b04c50000	                  mov rax, qword [rax*8]	     13553	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d84	    0x488985b8feff	            mov qword [rbp - 0x148], rax	     13553	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d8b	      0xb804000000	                              mov eax, 4	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d90	    0x2b8584feffff	            sub eax, dword [rbp - 0x17c]	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d96	            0x4898	                                    cdqe	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002d98	    0x488b14c50000	                  mov rdx, qword [rax*8]	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002da0	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002da6	            0x4898	                                    cdqe	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002da8	    0x488914c50000	                  mov qword [rax*8], rdx	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002db0	      0xb804000000	                              mov eax, 4	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002db5	    0x2b8584feffff	            sub eax, dword [rbp - 0x17c]	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002dbb	            0x4898	                                    cdqe	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002dbd	    0x488b95b8feff	            mov rdx, qword [rbp - 0x148]	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002dc4	    0x488914c50000	                  mov qword [rax*8], rdx	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002dcc	    0x838584feffff	              add dword [rbp - 0x17c], 1	     13548	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002dd3	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 1	     13548	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002dda	     0xf8e42ffffff	                           jle 0x4002d22	     13548	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4002de0	            0xeb5d	                           jmp 0x4002e3f	     13535	i386-dis.c	FUNCTION_10	IF_50
0x4002de2	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	     13560	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002dec	            0xeb48	                           jmp 0x4002e36	     13560	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002dee	      0xb804000000	                              mov eax, 4	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002df3	    0x2b8584feffff	            sub eax, dword [rbp - 0x17c]	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002df9	            0x89c1	                            mov ecx, eax	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002dfb	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e01	          0x4863d0	                         movsxd rdx, eax	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e04	          0x4889d0	                            mov rax, rdx	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e07	        0x48c1e002	                              shl rax, 2	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e0b	          0x4801d0	                            add rax, rdx	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e0e	    0x488d14850000	                        lea rdx, [rax*4]	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e16	          0x4801d0	                            add rax, rdx	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e19	        0x48c1e002	                              shl rax, 2	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e1d	    0x488d90000000	                          lea rdx, [rax]	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e24	          0x4863c1	                         movsxd rax, ecx	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e27	    0x488994c5c0fe	    mov qword [rbp + rax*8 - 0x140], rdx	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e2f	    0x838584feffff	              add dword [rbp - 0x17c], 1	     13560	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e36	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 4	     13560	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e3d	            0x7eaf	                           jle 0x4002dee	     13560	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4002e3f	    0xc78588feffff	              mov dword [rbp - 0x178], 0	     13564	i386-dis.c	FUNCTION_10
0x4002e49	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x4002e53	      0xe9f0000000	                           jmp 0x4002f48	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x4002e58	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4002e5e	            0x4898	                                    cdqe	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4002e60	    0x488b84c5c0fe	    mov rax, qword [rbp + rax*8 - 0x140]	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4002e68	           0xfb600	                   movzx eax, byte [rax]	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4002e6b	            0x84c0	                             test al, al	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4002e6d	     0xf84ce000000	                            je 0x4002f41	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4002e73	    0x83bd88feffff	              cmp dword [rbp - 0x178], 0	     13568	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4002e7a	            0x7424	                            je 0x4002ea0	     13568	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4002e7c	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4002e83	          0x488b10	                    mov rdx, qword [rax]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4002e86	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4002e8d	        0x488b4008	                mov rax, qword [rax + 8]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4002e91	      0xbe00000000	                              mov esi, 0	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4002e96	          0x4889c7	                            mov rdi, rax	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4002e99	      0xb800000000	                              mov eax, 0	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4002e9e	            0xffd2	                                call rdx	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4002ea0	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ea6	            0x4898	                                    cdqe	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ea8	    0x8b0485000000	                  mov eax, dword [rax*4]	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002eaf	          0x83f8ff	             cmp eax, 0xffffffffffffffff	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002eb2	            0x744f	                            je 0x4002f03	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002eb4	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002eba	            0x4898	                                    cdqe	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ebc	    0x488b04c50000	                  mov rax, qword [rax*8]	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ec4	          0x4885c0	                           test rax, rax	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ec7	            0x753a	                           jne 0x4002f03	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ec9	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ed0	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ed7	    0x8b9584feffff	            mov edx, dword [rbp - 0x17c]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002edd	          0x4863d2	                         movsxd rdx, edx	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ee0	    0x8b1495000000	                  mov edx, dword [rdx*4]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ee7	          0x4863d2	                         movsxd rdx, edx	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002eea	    0x488b14d50000	                  mov rdx, qword [rdx*8]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ef2	    0x488b8d70feff	            mov rcx, qword [rbp - 0x190]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002ef9	          0x4889ce	                            mov rsi, rcx	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002efc	          0x4889d7	                            mov rdi, rdx	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002eff	            0xffd0	                                call rax	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002f01	            0xeb34	                           jmp 0x4002f37	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4002f03	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4002f0a	          0x488b08	                    mov rcx, qword [rax]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4002f0d	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4002f13	            0x4898	                                    cdqe	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4002f15	    0x488b94c5c0fe	    mov rdx, qword [rbp + rax*8 - 0x140]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4002f1d	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4002f24	        0x488b4008	                mov rax, qword [rax + 8]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4002f28	      0xbe00000000	                              mov esi, 0	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4002f2d	          0x4889c7	                            mov rdi, rax	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4002f30	      0xb800000000	                              mov eax, 0	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4002f35	            0xffd1	                                call rcx	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4002f37	    0xc78588feffff	              mov dword [rbp - 0x178], 1	     13574	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4002f41	    0x838584feffff	              add dword [rbp - 0x17c], 1	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x4002f48	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 4	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x4002f4f	     0xf8e03ffffff	                           jle 0x4002e58	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x4002f55	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x4002f5f	      0xe9bd000000	                           jmp 0x4003021	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x4002f64	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f6a	            0x4898	                                    cdqe	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f6c	    0x8b0485000000	                  mov eax, dword [rax*4]	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f73	          0x83f8ff	             cmp eax, 0xffffffffffffffff	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f76	     0xf849e000000	                            je 0x400301a	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f7c	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f82	            0x4898	                                    cdqe	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f84	    0x488b04c50000	                  mov rax, qword [rax*8]	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f8c	          0x4885c0	                           test rax, rax	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f8f	     0xf8485000000	                            je 0x400301a	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f95	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f9c	          0x488b10	                    mov rdx, qword [rax]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002f9f	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fa6	        0x488b4008	                mov rax, qword [rax + 8]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002faa	      0xbe00000000	                              mov esi, 0	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002faf	          0x4889c7	                            mov rdi, rax	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fb2	      0xb800000000	                              mov eax, 0	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fb7	            0xffd2	                                call rdx	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fb9	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fc0	    0x488b80800000	            mov rax, qword [rax + 0x80] 	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fc7	    0x488b15000000	            mov rdx, qword [0x04002fce] 	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fce	          0x4889d1	                            mov rcx, rdx	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fd1	    0x488b15000000	            mov rdx, qword [0x04002fd8] 	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fd8	          0x4829d1	                            sub rcx, rdx	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fdb	          0x4889ca	                            mov rdx, rcx	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fde	          0x4889d1	                            mov rcx, rdx	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fe1	    0x488b15000000	            mov rdx, qword [0x04002fe8] 	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002fe8	          0x4801d1	                            add rcx, rdx	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002feb	    0x8b9584feffff	            mov edx, dword [rbp - 0x17c]	     13582	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002ff1	          0x4863d2	                         movsxd rdx, edx	     13582	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002ff4	    0x8b1495000000	                  mov edx, dword [rdx*4]	     13582	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002ffb	          0x4863d2	                         movsxd rdx, edx	     13582	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4002ffe	    0x488b14d50000	                  mov rdx, qword [rdx*8]	     13582	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4003006	          0x4801d1	                            add rcx, rdx	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4003009	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4003010	          0x4889d6	                            mov rsi, rdx	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4003013	          0x4889cf	                            mov rdi, rcx	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4003016	            0xffd0	                                call rax	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4003018	            0xeb14	                           jmp 0x400302e	     13583	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400301a	    0x838584feffff	              add dword [rbp - 0x17c], 1	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x4003021	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 4	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x4003028	     0xf8e36ffffff	                           jle 0x4002f64	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x400302e	    0x488b05000000	            mov rax, qword [0x04003035] 	     13585	i386-dis.c	FUNCTION_10
0x4003035	          0x4889c2	                            mov rdx, rax	     13585	i386-dis.c	FUNCTION_10
0x4003038	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	     13585	i386-dis.c	FUNCTION_10
0x400303f	        0x4883c008	                              add rax, 8	     13585	i386-dis.c	FUNCTION_10
0x4003043	          0x4829c2	                            sub rdx, rax	     13585	i386-dis.c	FUNCTION_10
0x4003046	          0x4889d0	                            mov rax, rdx	     13585	i386-dis.c	FUNCTION_10
0x4003049	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	     13586	i386-dis.c	FUNCTION_10
0x400304d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     13586	i386-dis.c	FUNCTION_10
0x4003056	            0x7405	                            je 0x400305d	     13586	i386-dis.c	FUNCTION_10
0x4003058	      0xe800000000	                          call 0x400305d	     13586	i386-dis.c	FUNCTION_10
0x400305d	    0x4881c4880100	                          add rsp, 0x188	     13586	i386-dis.c	FUNCTION_10
0x4003064	              0x5b	                                 pop rbx	     13586	i386-dis.c	FUNCTION_10
0x4003065	              0x5d	                                 pop rbp	     13586	i386-dis.c	FUNCTION_10
0x4003066	              0xc3	                                     ret	     13586	i386-dis.c	FUNCTION_10
OP_D	CALL,3:WHILE,0:functions,0:DO,0:ELSE,2:IF,2:SWITCH,0:FOR,0	44
0x40080ba	              0x55	                                push rbp	     16374	i386-dis.c	FUNCTION_47
0x40080bb	          0x4889e5	                            mov rbp, rsp	     16374	i386-dis.c	FUNCTION_47
0x40080be	        0x4883ec20	                           sub rsp, 0x20	     16374	i386-dis.c	FUNCTION_47
0x40080c2	          0x897dec	             mov dword [rbp - 0x14], edi	     16374	i386-dis.c	FUNCTION_47
0x40080c5	          0x8975e8	             mov dword [rbp - 0x18], esi	     16374	i386-dis.c	FUNCTION_47
0x40080c8	    0x8b0500000000	            mov eax, dword [0x040080ce] 	     16376	i386-dis.c	FUNCTION_47
0x40080ce	          0x83e004	                              and eax, 4	     16376	i386-dis.c	FUNCTION_47
0x40080d1	            0x85c0	                           test eax, eax	     16376	i386-dis.c	FUNCTION_47
0x40080d3	            0x740f	                            je 0x40080e4	     16376	i386-dis.c	FUNCTION_47
0x40080d5	    0x8b0500000000	            mov eax, dword [0x040080db] 	     16376	i386-dis.c	FUNCTION_47
0x40080db	          0x83c844	                            or eax, 0x44	     16376	i386-dis.c	FUNCTION_47
0x40080de	    0x890500000000	            mov dword [0x040080e4], eax 	     16376	i386-dis.c	FUNCTION_47
0x40080e4	    0x8b0500000000	            mov eax, dword [0x040080ea] 	     16377	i386-dis.c	FUNCTION_47	IF_1
0x40080ea	          0x83e004	                              and eax, 4	     16377	i386-dis.c	FUNCTION_47	IF_1
0x40080ed	            0x85c0	                           test eax, eax	     16377	i386-dis.c	FUNCTION_47	IF_1
0x40080ef	            0x7409	                            je 0x40080fa	     16377	i386-dis.c	FUNCTION_47	IF_1
0x40080f1	    0xc745fc080000	                  mov dword [rbp - 4], 8	     16378	i386-dis.c	FUNCTION_47	IF_1
0x40080f8	            0xeb07	                           jmp 0x4008101	     16378	i386-dis.c	FUNCTION_47	IF_1
0x40080fa	    0xc745fc000000	                  mov dword [rbp - 4], 0	     16380	i386-dis.c	FUNCTION_47	ELSE_1
0x4008101	     0xfb605000000	           movzx eax, byte [0x04008108] 	     16381	i386-dis.c	FUNCTION_47	IF_2
0x4008108	            0x84c0	                             test al, al	     16381	i386-dis.c	FUNCTION_47	IF_2
0x400810a	            0x7423	                            je 0x400812f	     16381	i386-dis.c	FUNCTION_47	IF_2
0x400810c	    0x8b1500000000	            mov edx, dword [0x04008112] 	     16382	i386-dis.c	FUNCTION_47	CALL_1
0x4008112	          0x8b45fc	                mov eax, dword [rbp - 4]	     16382	i386-dis.c	FUNCTION_47	CALL_1
0x4008115	             0x1d0	                            add eax, edx	     16382	i386-dis.c	FUNCTION_47	CALL_1
0x4008117	            0x89c2	                            mov edx, eax	     16382	i386-dis.c	FUNCTION_47	CALL_1
0x4008119	      0xbe00000000	                              mov esi, 0	     16382	i386-dis.c	FUNCTION_47	CALL_1
0x400811e	      0xbf00000000	                              mov edi, 0	     16382	i386-dis.c	FUNCTION_47	CALL_1
0x4008123	      0xb800000000	                              mov eax, 0	     16382	i386-dis.c	FUNCTION_47	CALL_1
0x4008128	      0xe800000000	                          call 0x400812d	     16382	i386-dis.c	FUNCTION_47	CALL_1
0x400812d	            0xeb21	                           jmp 0x4008150	     16382	i386-dis.c	FUNCTION_47	CALL_1
0x400812f	    0x8b1500000000	            mov edx, dword [0x04008135] 	     16384	i386-dis.c	FUNCTION_47	CALL_2
0x4008135	          0x8b45fc	                mov eax, dword [rbp - 4]	     16384	i386-dis.c	FUNCTION_47	CALL_2
0x4008138	             0x1d0	                            add eax, edx	     16384	i386-dis.c	FUNCTION_47	CALL_2
0x400813a	            0x89c2	                            mov edx, eax	     16384	i386-dis.c	FUNCTION_47	CALL_2
0x400813c	      0xbe00000000	                              mov esi, 0	     16384	i386-dis.c	FUNCTION_47	CALL_2
0x4008141	      0xbf00000000	                              mov edi, 0	     16384	i386-dis.c	FUNCTION_47	CALL_2
0x4008146	      0xb800000000	                              mov eax, 0	     16384	i386-dis.c	FUNCTION_47	CALL_2
0x400814b	      0xe800000000	                          call 0x4008150	     16384	i386-dis.c	FUNCTION_47	CALL_2
0x4008150	      0xbf00000000	                              mov edi, 0	     16385	i386-dis.c	FUNCTION_47	CALL_3
0x4008155	      0xe86fc9ffff	                        call sym.oappend	     16385	i386-dis.c	FUNCTION_47	CALL_3
0x400815a	              0x90	                                     nop	     16386	i386-dis.c	FUNCTION_47
0x400815b	              0xc9	                                   leave	     16386	i386-dis.c	FUNCTION_47
0x400815c	              0xc3	                                     ret	     16386	i386-dis.c	FUNCTION_47
OP_MXC	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	22
0x4008621	              0x55	                                push rbp	     16554	i386-dis.c	FUNCTION_54
0x4008622	          0x4889e5	                            mov rbp, rsp	     16554	i386-dis.c	FUNCTION_54
0x4008625	        0x4883ec10	                           sub rsp, 0x10	     16554	i386-dis.c	FUNCTION_54
0x4008629	          0x897dfc	                mov dword [rbp - 4], edi	     16554	i386-dis.c	FUNCTION_54
0x400862c	          0x8975f8	                mov dword [rbp - 8], esi	     16554	i386-dis.c	FUNCTION_54
0x400862f	    0x8b0500000000	            mov eax, dword [0x04008635] 	     16555	i386-dis.c	FUNCTION_54
0x4008635	      0x2500020000	                          and eax, 0x200	     16555	i386-dis.c	FUNCTION_54
0x400863a	            0x89c2	                            mov edx, eax	     16555	i386-dis.c	FUNCTION_54
0x400863c	    0x8b0500000000	            mov eax, dword [0x04008642] 	     16555	i386-dis.c	FUNCTION_54
0x4008642	             0x9d0	                             or eax, edx	     16555	i386-dis.c	FUNCTION_54
0x4008644	    0x890500000000	            mov dword [0x0400864a], eax 	     16555	i386-dis.c	FUNCTION_54
0x400864a	    0x488b05000000	            mov rax, qword [0x04008651] 	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x4008651	    0x8b1500000000	            mov edx, dword [0x04008657] 	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x4008657	          0x4863d2	                         movsxd rdx, edx	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x400865a	        0x48c1e203	                              shl rdx, 3	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x400865e	          0x4801d0	                            add rax, rdx	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x4008661	          0x488b00	                    mov rax, qword [rax]	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x4008664	          0x4889c7	                            mov rdi, rax	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x4008667	      0xe85dc4ffff	                        call sym.oappend	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x400866c	              0x90	                                     nop	     16557	i386-dis.c	FUNCTION_54
0x400866d	              0xc9	                                   leave	     16557	i386-dis.c	FUNCTION_54
0x400866e	              0xc3	                                     ret	     16557	i386-dis.c	FUNCTION_54
swap_operand	CALL,0:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	13
0x4003067	              0x55	                                push rbp	     13897	i386-dis.c	FUNCTION_11
0x4003068	          0x4889e5	                            mov rbp, rsp	     13897	i386-dis.c	FUNCTION_11
0x400306b	    0x488b05000000	            mov rax, qword [0x04003072] 	     13898	i386-dis.c	FUNCTION_11
0x4003072	          0xc6002e	                    mov byte [rax], 0x2e	     13898	i386-dis.c	FUNCTION_11
0x4003075	    0x488b05000000	            mov rax, qword [0x0400307c] 	     13899	i386-dis.c	FUNCTION_11
0x400307c	        0x4883c001	                              add rax, 1	     13899	i386-dis.c	FUNCTION_11
0x4003080	          0xc60073	                    mov byte [rax], 0x73	     13899	i386-dis.c	FUNCTION_11
0x4003083	    0x488b05000000	            mov rax, qword [0x0400308a] 	     13900	i386-dis.c	FUNCTION_11
0x400308a	        0x4883c002	                              add rax, 2	     13900	i386-dis.c	FUNCTION_11
0x400308e	    0x488905000000	            mov qword [0x04003095], rax 	     13900	i386-dis.c	FUNCTION_11
0x4003095	              0x90	                                     nop	     13901	i386-dis.c	FUNCTION_11
0x4003096	              0x5d	                                 pop rbp	     13901	i386-dis.c	FUNCTION_11
0x4003097	              0xc3	                                     ret	     13901	i386-dis.c	FUNCTION_11
OP_XMM	CALL,3:WHILE,0:functions,0:DO,0:ELSE,4:IF,7:SWITCH,2:FOR,0	104
0x400827e	              0x55	                                push rbp	     16425	i386-dis.c	FUNCTION_51
0x400827f	          0x4889e5	                            mov rbp, rsp	     16425	i386-dis.c	FUNCTION_51
0x4008282	        0x4883ec20	                           sub rsp, 0x20	     16425	i386-dis.c	FUNCTION_51
0x4008286	          0x897dec	             mov dword [rbp - 0x14], edi	     16425	i386-dis.c	FUNCTION_51
0x4008289	          0x8975e8	             mov dword [rbp - 0x18], esi	     16425	i386-dis.c	FUNCTION_51
0x400828c	    0x8b0500000000	            mov eax, dword [0x04008292] 	     16426	i386-dis.c	FUNCTION_51
0x4008292	          0x8945f4	              mov dword [rbp - 0xc], eax	     16426	i386-dis.c	FUNCTION_51
0x4008295	    0x8b0500000000	            mov eax, dword [0x0400829b] 	     16429	i386-dis.c	FUNCTION_51
0x400829b	          0x83e004	                              and eax, 4	     16429	i386-dis.c	FUNCTION_51
0x400829e	            0x85c0	                           test eax, eax	     16429	i386-dis.c	FUNCTION_51
0x40082a0	            0x740f	                            je 0x40082b1	     16429	i386-dis.c	FUNCTION_51
0x40082a2	    0x8b0500000000	            mov eax, dword [0x040082a8] 	     16429	i386-dis.c	FUNCTION_51
0x40082a8	          0x83c844	                            or eax, 0x44	     16429	i386-dis.c	FUNCTION_51
0x40082ab	    0x890500000000	            mov dword [0x040082b1], eax 	     16429	i386-dis.c	FUNCTION_51
0x40082b1	    0x8b0500000000	            mov eax, dword [0x040082b7] 	     16430	i386-dis.c	FUNCTION_51	IF_1
0x40082b7	          0x83e004	                              and eax, 4	     16430	i386-dis.c	FUNCTION_51	IF_1
0x40082ba	            0x85c0	                           test eax, eax	     16430	i386-dis.c	FUNCTION_51	IF_1
0x40082bc	            0x7404	                            je 0x40082c2	     16430	i386-dis.c	FUNCTION_51	IF_1
0x40082be	        0x8345f408	                add dword [rbp - 0xc], 8	     16431	i386-dis.c	FUNCTION_51	IF_1
0x40082c2	    0x8b0500000000	            mov eax, dword [0x040082c8] 	     16432	i386-dis.c	FUNCTION_51	IF_2
0x40082c8	            0x85c0	                           test eax, eax	     16432	i386-dis.c	FUNCTION_51	IF_2
0x40082ca	            0x740e	                            je 0x40082da	     16432	i386-dis.c	FUNCTION_51	IF_2
0x40082cc	    0x8b0500000000	            mov eax, dword [0x040082d2] 	     16434	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x40082d2	            0x85c0	                           test eax, eax	     16434	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x40082d4	            0x7504	                           jne 0x40082da	     16434	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x40082d6	        0x8345f410	             add dword [rbp - 0xc], 0x10	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x40082da	     0xfb605000000	           movzx eax, byte [0x040082e1] 	     16438	i386-dis.c	FUNCTION_51	IF_4
0x40082e1	            0x84c0	                             test al, al	     16438	i386-dis.c	FUNCTION_51	IF_4
0x40082e3	     0xf848e000000	                            je 0x4008377	     16438	i386-dis.c	FUNCTION_51	IF_4
0x40082e9	        0x837dec11	           cmp dword [rbp - 0x14], 0x11 	     16439	i386-dis.c	FUNCTION_51	IF_4
0x40082ed	     0xf8484000000	                            je 0x4008377	     16439	i386-dis.c	FUNCTION_51	IF_4
0x40082f3	        0x837dec12	           cmp dword [rbp - 0x14], 0x12 	     16440	i386-dis.c	FUNCTION_51	IF_4
0x40082f7	            0x747e	                            je 0x4008377	     16440	i386-dis.c	FUNCTION_51	IF_4
0x40082f9	        0x837dec13	           cmp dword [rbp - 0x14], 0x13 	     16441	i386-dis.c	FUNCTION_51	IF_4
0x40082fd	            0x7478	                            je 0x4008377	     16441	i386-dis.c	FUNCTION_51	IF_4
0x40082ff	        0x837dec1b	           cmp dword [rbp - 0x14], 0x1b 	     16442	i386-dis.c	FUNCTION_51	IF_4
0x4008303	            0x7472	                            je 0x4008377	     16442	i386-dis.c	FUNCTION_51	IF_4
0x4008305	        0x837dec39	           cmp dword [rbp - 0x14], 0x39 	     16443	i386-dis.c	FUNCTION_51	IF_4
0x4008309	            0x746c	                            je 0x4008377	     16443	i386-dis.c	FUNCTION_51	IF_4
0x400830b	    0x8b0500000000	            mov eax, dword [0x04008311] 	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4008311	      0x3d00010000	                          cmp eax, 0x100	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4008316	            0x741b	                            je 0x4008333	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4008318	      0x3d00020000	                          cmp eax, 0x200	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x400831d	            0x7444	                            je 0x4008363	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x400831f	      0x3d80000000	                           cmp eax, 0x80	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4008324	            0x754a	                           jne 0x4008370	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4008326	    0x488b05000000	            mov rax, qword [0x0400832d] 	     16448	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x400832d	        0x488945f8	                mov qword [rbp - 8], rax	     16448	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4008331	            0xeb42	                           jmp 0x4008375	     16449	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4008333	    0x8b0500000000	            mov eax, dword [0x04008339] 	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4008339	            0x85c0	                           test eax, eax	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x400833b	            0x750c	                           jne 0x4008349	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x400833d	        0x837dec37	           cmp dword [rbp - 0x14], 0x37 	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4008341	            0x7413	                            je 0x4008356	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4008343	        0x837dec38	           cmp dword [rbp - 0x14], 0x38 	     16453	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4008347	            0x740d	                            je 0x4008356	     16453	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4008349	    0x488b05000000	            mov rax, qword [0x04008350] 	     16454	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4008350	        0x488945f8	                mov qword [rbp - 8], rax	     16454	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4008354	            0xeb1f	                           jmp 0x4008375	     16457	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4008356	    0x488b05000000	            mov rax, qword [0x0400835d] 	     16456	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	ELSE_1
0x400835d	        0x488945f8	                mov qword [rbp - 8], rax	     16456	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	ELSE_1
0x4008361	            0xeb12	                           jmp 0x4008375	     16457	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4008363	    0x488b05000000	            mov rax, qword [0x0400836a] 	     16459	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x400836a	        0x488945f8	                mov qword [rbp - 8], rax	     16459	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x400836e	            0xeb05	                           jmp 0x4008375	     16460	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4008370	      0xe800000000	                          call 0x4008375	     16462	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	CALL_1
0x4008375	            0xeb66	                           jmp 0x40083dd	     16464	i386-dis.c	FUNCTION_51	IF_4
0x4008377	        0x837dec12	           cmp dword [rbp - 0x14], 0x12 	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x400837b	            0x7406	                            je 0x4008383	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x400837d	        0x837dec13	           cmp dword [rbp - 0x14], 0x13 	     16466	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4008381	            0x753c	                           jne 0x40083bf	     16466	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4008383	    0x8b0500000000	            mov eax, dword [0x04008389] 	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4008389	      0x3d00010000	                          cmp eax, 0x100	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x400838e	            0x740e	                            je 0x400839e	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4008390	      0x3d00020000	                          cmp eax, 0x200	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4008395	            0x7414	                            je 0x40083ab	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4008397	      0x3d80000000	                           cmp eax, 0x80	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x400839c	            0x751a	                           jne 0x40083b8	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x400839e	    0x488b05000000	            mov rax, qword [0x040083a5] 	     16472	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x40083a5	        0x488945f8	                mov qword [rbp - 8], rax	     16472	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x40083a9	            0xeb12	                           jmp 0x40083bd	     16473	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x40083ab	    0x488b05000000	            mov rax, qword [0x040083b2] 	     16475	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x40083b2	        0x488945f8	                mov qword [rbp - 8], rax	     16475	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x40083b6	            0xeb05	                           jmp 0x40083bd	     16476	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x40083b8	      0xe800000000	                          call 0x40083bd	     16478	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2	CALL_2
0x40083bd	            0xeb1e	                           jmp 0x40083dd	     16480	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x40083bf	        0x837dec1b	           cmp dword [rbp - 0x14], 0x1b 	     16481	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x40083c3	            0x750d	                           jne 0x40083d2	     16481	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x40083c5	    0x488b05000000	            mov rax, qword [0x040083cc] 	     16482	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x40083cc	        0x488945f8	                mov qword [rbp - 8], rax	     16482	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x40083d0	            0xeb0b	                           jmp 0x40083dd	     16482	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x40083d2	    0x488b05000000	            mov rax, qword [0x040083d9] 	     16484	i386-dis.c	FUNCTION_51	ELSE_4
0x40083d9	        0x488945f8	                mov qword [rbp - 8], rax	     16484	i386-dis.c	FUNCTION_51	ELSE_4
0x40083dd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x40083e0	            0x4898	                                    cdqe	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x40083e2	    0x488d14c50000	                        lea rdx, [rax*8]	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x40083ea	        0x488b45f8	                mov rax, qword [rbp - 8]	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x40083ee	          0x4801d0	                            add rax, rdx	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x40083f1	          0x488b00	                    mov rax, qword [rax]	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x40083f4	          0x4889c7	                            mov rdi, rax	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x40083f7	      0xe8cdc6ffff	                        call sym.oappend	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x40083fc	              0x90	                                     nop	     16486	i386-dis.c	FUNCTION_51
0x40083fd	              0xc9	                                   leave	     16486	i386-dis.c	FUNCTION_51
0x40083fe	              0xc3	                                     ret	     16486	i386-dis.c	FUNCTION_51
OP_G	CALL,16:WHILE,0:functions,0:DO,0:ELSE,5:IF,9:SWITCH,1:FOR,0	248
0x400678b	              0x55	                                push rbp	     15678	i386-dis.c	FUNCTION_27
0x400678c	          0x4889e5	                            mov rbp, rsp	     15678	i386-dis.c	FUNCTION_27
0x400678f	        0x4883ec20	                           sub rsp, 0x20	     15678	i386-dis.c	FUNCTION_27
0x4006793	          0x897dec	             mov dword [rbp - 0x14], edi	     15678	i386-dis.c	FUNCTION_27
0x4006796	          0x8975e8	             mov dword [rbp - 0x18], esi	     15678	i386-dis.c	FUNCTION_27
0x4006799	    0xc745f4000000	                mov dword [rbp - 0xc], 0	     15679	i386-dis.c	FUNCTION_27
0x40067a0	    0x8b0500000000	            mov eax, dword [0x040067a6] 	     15681	i386-dis.c	FUNCTION_27
0x40067a6	          0x83e004	                              and eax, 4	     15681	i386-dis.c	FUNCTION_27
0x40067a9	            0x85c0	                           test eax, eax	     15681	i386-dis.c	FUNCTION_27
0x40067ab	            0x740f	                            je 0x40067bc	     15681	i386-dis.c	FUNCTION_27
0x40067ad	    0x8b0500000000	            mov eax, dword [0x040067b3] 	     15681	i386-dis.c	FUNCTION_27
0x40067b3	          0x83c844	                            or eax, 0x44	     15681	i386-dis.c	FUNCTION_27
0x40067b6	    0x890500000000	            mov dword [0x040067bc], eax 	     15681	i386-dis.c	FUNCTION_27
0x40067bc	    0x8b0500000000	            mov eax, dword [0x040067c2] 	     15682	i386-dis.c	FUNCTION_27	IF_1
0x40067c2	          0x83e004	                              and eax, 4	     15682	i386-dis.c	FUNCTION_27	IF_1
0x40067c5	            0x85c0	                           test eax, eax	     15682	i386-dis.c	FUNCTION_27	IF_1
0x40067c7	            0x7404	                            je 0x40067cd	     15682	i386-dis.c	FUNCTION_27	IF_1
0x40067c9	        0x8345f408	                add dword [rbp - 0xc], 8	     15683	i386-dis.c	FUNCTION_27	IF_1
0x40067cd	        0x837dec45	           cmp dword [rbp - 0x14], 0x45 	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x40067d1	     0xf876f030000	                            ja 0x4006b46	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x40067d7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x40067da	    0x488b04c50000	                  mov rax, qword [rax*8]	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x40067e2	            0xffe0	                                 jmp rax	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x40067e4	    0x8b0500000000	            mov eax, dword [0x040067ea] 	     15687	i386-dis.c	FUNCTION_27	SWITCH_1
0x40067ea	          0x83c840	                            or eax, 0x40	     15687	i386-dis.c	FUNCTION_27	SWITCH_1
0x40067ed	    0x890500000000	            mov dword [0x040067f3], eax 	     15687	i386-dis.c	FUNCTION_27	SWITCH_1
0x40067f3	    0x8b0500000000	            mov eax, dword [0x040067f9] 	     15688	i386-dis.c	FUNCTION_27	SWITCH_1	IF_2
0x40067f9	            0x85c0	                           test eax, eax	     15688	i386-dis.c	FUNCTION_27	SWITCH_1	IF_2
0x40067fb	            0x742c	                            je 0x4006829	     15688	i386-dis.c	FUNCTION_27	SWITCH_1	IF_2
0x40067fd	    0x488b05000000	            mov rax, qword [0x04006804] 	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x4006804	    0x8b0d00000000	            mov ecx, dword [0x0400680a] 	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x400680a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x400680d	             0x1ca	                            add edx, ecx	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x400680f	          0x4863d2	                         movsxd rdx, edx	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x4006812	        0x48c1e203	                              shl rdx, 3	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x4006816	          0x4801d0	                            add rax, rdx	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x4006819	          0x488b00	                    mov rax, qword [rax]	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x400681c	          0x4889c7	                            mov rdi, rax	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x400681f	      0xe8a5e2ffff	                        call sym.oappend	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x4006824	      0xe935030000	                           jmp 0x4006b5e	     15692	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006829	    0x488b05000000	            mov rax, qword [0x04006830] 	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x4006830	    0x8b0d00000000	            mov ecx, dword [0x04006836] 	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x4006836	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x4006839	             0x1ca	                            add edx, ecx	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x400683b	          0x4863d2	                         movsxd rdx, edx	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x400683e	        0x48c1e203	                              shl rdx, 3	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x4006842	          0x4801d0	                            add rax, rdx	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x4006845	          0x488b00	                    mov rax, qword [rax]	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x4006848	          0x4889c7	                            mov rdi, rax	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x400684b	      0xe879e2ffff	                        call sym.oappend	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x4006850	      0xe909030000	                           jmp 0x4006b5e	     15692	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006855	    0x488b05000000	            mov rax, qword [0x0400685c] 	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x400685c	    0x8b0d00000000	            mov ecx, dword [0x04006862] 	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x4006862	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x4006865	             0x1ca	                            add edx, ecx	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x4006867	          0x4863d2	                         movsxd rdx, edx	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x400686a	        0x48c1e203	                              shl rdx, 3	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x400686e	          0x4801d0	                            add rax, rdx	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x4006871	          0x488b00	                    mov rax, qword [rax]	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x4006874	          0x4889c7	                            mov rdi, rax	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x4006877	      0xe84de2ffff	                        call sym.oappend	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x400687c	      0xe9dd020000	                           jmp 0x4006b5e	     15695	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006881	    0x488b05000000	            mov rax, qword [0x04006888] 	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x4006888	    0x8b0d00000000	            mov ecx, dword [0x0400688e] 	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x400688e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x4006891	             0x1ca	                            add edx, ecx	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x4006893	          0x4863d2	                         movsxd rdx, edx	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x4006896	        0x48c1e203	                              shl rdx, 3	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x400689a	          0x4801d0	                            add rax, rdx	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x400689d	          0x488b00	                    mov rax, qword [rax]	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x40068a0	          0x4889c7	                            mov rdi, rax	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x40068a3	      0xe821e2ffff	                        call sym.oappend	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x40068a8	      0xe9b1020000	                           jmp 0x4006b5e	     15700	i386-dis.c	FUNCTION_27	SWITCH_1
0x40068ad	    0x488b05000000	            mov rax, qword [0x040068b4] 	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x40068b4	    0x8b0d00000000	            mov ecx, dword [0x040068ba] 	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x40068ba	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x40068bd	             0x1ca	                            add edx, ecx	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x40068bf	          0x4863d2	                         movsxd rdx, edx	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x40068c2	        0x48c1e203	                              shl rdx, 3	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x40068c6	          0x4801d0	                            add rax, rdx	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x40068c9	          0x488b00	                    mov rax, qword [rax]	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x40068cc	          0x4889c7	                            mov rdi, rax	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x40068cf	      0xe8f5e1ffff	                        call sym.oappend	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x40068d4	      0xe985020000	                           jmp 0x4006b5e	     15703	i386-dis.c	FUNCTION_27	SWITCH_1
0x40068d9	    0x8b0500000000	            mov eax, dword [0x040068df] 	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x40068df	          0x83f803	                              cmp eax, 3	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x40068e2	            0x7e0f	                           jle 0x40068f3	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x40068e4	      0xbf00000000	                              mov edi, 0	     15707	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3	CALL_6
0x40068e9	      0xe8dbe1ffff	                        call sym.oappend	     15707	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3	CALL_6
0x40068ee	      0xe96b020000	                           jmp 0x4006b5e	     15708	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x40068f3	    0x488b05000000	            mov rax, qword [0x040068fa] 	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x40068fa	    0x8b1500000000	            mov edx, dword [0x04006900] 	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x4006900	          0x4863d2	                         movsxd rdx, edx	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x4006903	        0x48c1e203	                              shl rdx, 3	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x4006907	          0x4801d0	                            add rax, rdx	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x400690a	          0x488b00	                    mov rax, qword [rax]	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x400690d	          0x4889c7	                            mov rdi, rax	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x4006910	      0xe8b4e1ffff	                        call sym.oappend	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x4006915	      0xe944020000	                           jmp 0x4006b5e	     15711	i386-dis.c	FUNCTION_27	SWITCH_1
0x400691a	    0x8b0500000000	            mov eax, dword [0x04006920] 	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006920	          0x83e008	                              and eax, 8	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006923	            0x85c0	                           test eax, eax	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006925	            0x740f	                            je 0x4006936	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006927	    0x8b0500000000	            mov eax, dword [0x0400692d] 	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x400692d	          0x83c848	                            or eax, 0x48	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006930	    0x890500000000	            mov dword [0x04006936], eax 	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006936	    0x8b0500000000	            mov eax, dword [0x0400693c] 	     15718	i386-dis.c	FUNCTION_27	SWITCH_1	IF_4
0x400693c	          0x83e008	                              and eax, 8	     15718	i386-dis.c	FUNCTION_27	SWITCH_1	IF_4
0x400693f	            0x85c0	                           test eax, eax	     15718	i386-dis.c	FUNCTION_27	SWITCH_1	IF_4
0x4006941	            0x742c	                            je 0x400696f	     15718	i386-dis.c	FUNCTION_27	SWITCH_1	IF_4
0x4006943	    0x488b05000000	            mov rax, qword [0x0400694a] 	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x400694a	    0x8b0d00000000	            mov ecx, dword [0x04006950] 	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x4006950	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x4006953	             0x1ca	                            add edx, ecx	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x4006955	          0x4863d2	                         movsxd rdx, edx	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x4006958	        0x48c1e203	                              shl rdx, 3	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x400695c	          0x4801d0	                            add rax, rdx	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x400695f	          0x488b00	                    mov rax, qword [rax]	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x4006962	          0x4889c7	                            mov rdi, rax	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x4006965	      0xe85fe1ffff	                        call sym.oappend	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x400696a	      0xe9ef010000	                           jmp 0x4006b5e	     15728	i386-dis.c	FUNCTION_27	SWITCH_1
0x400696f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4006972	          0x83e001	                              and eax, 1	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4006975	            0x85c0	                           test eax, eax	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4006977	            0x7506	                           jne 0x400697f	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4006979	        0x837dec04	               cmp dword [rbp - 0x14], 4	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x400697d	            0x7429	                            je 0x40069a8	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x400697f	    0x488b05000000	            mov rax, qword [0x04006986] 	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x4006986	    0x8b0d00000000	            mov ecx, dword [0x0400698c] 	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x400698c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x400698f	             0x1ca	                            add edx, ecx	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x4006991	          0x4863d2	                         movsxd rdx, edx	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x4006994	        0x48c1e203	                              shl rdx, 3	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x4006998	          0x4801d0	                            add rax, rdx	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x400699b	          0x488b00	                    mov rax, qword [rax]	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x400699e	          0x4889c7	                            mov rdi, rax	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40069a1	      0xe823e1ffff	                        call sym.oappend	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40069a6	            0xeb27	                           jmp 0x40069cf	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40069a8	    0x488b05000000	            mov rax, qword [0x040069af] 	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40069af	    0x8b0d00000000	            mov ecx, dword [0x040069b5] 	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40069b5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40069b8	             0x1ca	                            add edx, ecx	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40069ba	          0x4863d2	                         movsxd rdx, edx	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40069bd	        0x48c1e203	                              shl rdx, 3	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40069c1	          0x4801d0	                            add rax, rdx	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40069c4	          0x488b00	                    mov rax, qword [rax]	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40069c7	          0x4889c7	                            mov rdi, rax	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40069ca	      0xe8fae0ffff	                        call sym.oappend	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40069cf	    0x8b0500000000	            mov eax, dword [0x040069d5] 	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40069d5	      0x2500020000	                          and eax, 0x200	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40069da	            0x89c2	                            mov edx, eax	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40069dc	    0x8b0500000000	            mov eax, dword [0x040069e2] 	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40069e2	             0x9d0	                             or eax, edx	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40069e4	    0x890500000000	            mov dword [0x040069ea], eax 	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40069ea	      0xe96f010000	                           jmp 0x4006b5e	     15728	i386-dis.c	FUNCTION_27	SWITCH_1
0x40069ef	    0x8b0500000000	            mov eax, dword [0x040069f5] 	     15730	i386-dis.c	FUNCTION_27	SWITCH_1
0x40069f5	          0x83f802	                              cmp eax, 2	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x40069f8	            0x7509	                           jne 0x4006a03	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x40069fa	    0x488b05000000	            mov rax, qword [0x04006a01] 	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006a01	            0xeb07	                           jmp 0x4006a0a	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006a03	    0x488b05000000	            mov rax, qword [0x04006a0a] 	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006a0a	        0x488945f8	                mov qword [rbp - 8], rax	     15730	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006a0e	    0x8b0500000000	            mov eax, dword [0x04006a14] 	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4006a14	      0x2500040000	                          and eax, 0x400	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4006a19	            0x85c0	                           test eax, eax	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4006a1b	            0x7517	                           jne 0x4006a34	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4006a1d	    0x8b0500000000	            mov eax, dword [0x04006a23] 	     15734	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6	IF_7
0x4006a23	            0x85c0	                           test eax, eax	     15734	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6	IF_7
0x4006a25	            0x754e	                           jne 0x4006a75	     15734	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6	IF_7
0x4006a27	    0x488b05000000	            mov rax, qword [0x04006a2e] 	     15735	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6	IF_7
0x4006a2e	        0x488945f8	                mov qword [rbp - 8], rax	     15735	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6	IF_7
0x4006a32	            0xeb41	                           jmp 0x4006a75	     15735	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6	IF_7
0x4006a34	    0x8b0500000000	            mov eax, dword [0x04006a3a] 	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a3a	            0x4898	                                    cdqe	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a3c	    0xc70485000000	                    mov dword [rax*4], 0	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a47	    0x8b0500000000	            mov eax, dword [0x04006a4d] 	     15741	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a4d	          0x83f801	                              cmp eax, 1	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a50	            0x7409	                            je 0x4006a5b	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a52	    0x488b05000000	            mov rax, qword [0x04006a59] 	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a59	            0xeb07	                           jmp 0x4006a62	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a5b	    0x488b05000000	            mov rax, qword [0x04006a62] 	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a62	        0x488945f8	                mov qword [rbp - 8], rax	     15741	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a66	    0x8b0500000000	            mov eax, dword [0x04006a6c] 	     15743	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a6c	          0x80cc04	                                or ah, 4	     15743	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a6f	    0x890500000000	            mov dword [0x04006a75], eax 	     15743	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4006a75	    0x8b1500000000	            mov edx, dword [0x04006a7b] 	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4006a7b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4006a7e	             0x1d0	                            add eax, edx	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4006a80	            0x4898	                                    cdqe	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4006a82	    0x488d14c50000	                        lea rdx, [rax*8]	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4006a8a	        0x488b45f8	                mov rax, qword [rbp - 8]	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4006a8e	          0x4801d0	                            add rax, rdx	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4006a91	          0x488b00	                    mov rax, qword [rax]	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4006a94	          0x4889c7	                            mov rdi, rax	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4006a97	      0xe82de0ffff	                        call sym.oappend	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4006a9c	      0xe9bd000000	                           jmp 0x4006b5e	     15746	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006aa1	    0x8b0500000000	            mov eax, dword [0x04006aa7] 	     15748	i386-dis.c	FUNCTION_27	SWITCH_1	IF_8
0x4006aa7	          0x83f802	                              cmp eax, 2	     15748	i386-dis.c	FUNCTION_27	SWITCH_1	IF_8
0x4006aaa	            0x752c	                           jne 0x4006ad8	     15748	i386-dis.c	FUNCTION_27	SWITCH_1	IF_8
0x4006aac	    0x488b05000000	            mov rax, qword [0x04006ab3] 	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4006ab3	    0x8b0d00000000	            mov ecx, dword [0x04006ab9] 	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4006ab9	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4006abc	             0x1ca	                            add edx, ecx	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4006abe	          0x4863d2	                         movsxd rdx, edx	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4006ac1	        0x48c1e203	                              shl rdx, 3	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4006ac5	          0x4801d0	                            add rax, rdx	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4006ac8	          0x488b00	                    mov rax, qword [rax]	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4006acb	          0x4889c7	                            mov rdi, rax	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4006ace	      0xe8f6dfffff	                        call sym.oappend	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4006ad3	      0xe986000000	                           jmp 0x4006b5e	     15752	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006ad8	    0x488b05000000	            mov rax, qword [0x04006adf] 	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4006adf	    0x8b0d00000000	            mov ecx, dword [0x04006ae5] 	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4006ae5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4006ae8	             0x1ca	                            add edx, ecx	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4006aea	          0x4863d2	                         movsxd rdx, edx	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4006aed	        0x48c1e203	                              shl rdx, 3	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4006af1	          0x4801d0	                            add rax, rdx	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4006af4	          0x488b00	                    mov rax, qword [rax]	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4006af7	          0x4889c7	                            mov rdi, rax	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4006afa	      0xe8cadfffff	                        call sym.oappend	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4006aff	            0xeb5d	                           jmp 0x4006b5e	     15752	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006b01	    0x8b1500000000	            mov edx, dword [0x04006b07] 	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x4006b07	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x4006b0a	             0x1d0	                            add eax, edx	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x4006b0c	          0x83f807	                              cmp eax, 7	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x4006b0f	            0x7e0c	                           jle 0x4006b1d	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x4006b11	      0xbf00000000	                              mov edi, 0	     15757	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9	CALL_14
0x4006b16	      0xe8aedfffff	                        call sym.oappend	     15757	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9	CALL_14
0x4006b1b	            0xeb41	                           jmp 0x4006b5e	     15758	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x4006b1d	    0x488b05000000	            mov rax, qword [0x04006b24] 	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4006b24	    0x8b0d00000000	            mov ecx, dword [0x04006b2a] 	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4006b2a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4006b2d	             0x1ca	                            add edx, ecx	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4006b2f	          0x4863d2	                         movsxd rdx, edx	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4006b32	        0x48c1e203	                              shl rdx, 3	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4006b36	          0x4801d0	                            add rax, rdx	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4006b39	          0x488b00	                    mov rax, qword [rax]	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4006b3c	          0x4889c7	                            mov rdi, rax	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4006b3f	      0xe885dfffff	                        call sym.oappend	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4006b44	            0xeb18	                           jmp 0x4006b5e	     15761	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006b46	      0xbe00000000	                              mov esi, 0	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4006b4b	      0xbf00000000	                              mov edi, 0	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4006b50	      0xe800000000	                          call 0x4006b55	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4006b55	          0x4889c7	                            mov rdi, rax	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4006b58	      0xe86cdfffff	                        call sym.oappend	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4006b5d	              0x90	                                     nop	     15764	i386-dis.c	FUNCTION_27	SWITCH_1
0x4006b5e	              0xc9	                                   leave	     15766	i386-dis.c	FUNCTION_27
0x4006b5f	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
get64	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	78
0x4006b60	              0x55	                                push rbp	     15770	i386-dis.c	FUNCTION_28
0x4006b61	          0x4889e5	                            mov rbp, rsp	     15770	i386-dis.c	FUNCTION_28
0x4006b64	        0x4883ec10	                           sub rsp, 0x10	     15770	i386-dis.c	FUNCTION_28
0x4006b68	    0x488b05000000	            mov rax, qword [0x04006b6f] 	     15776	i386-dis.c	FUNCTION_28
0x4006b6f	        0x488d5008	                      lea rdx, [rax + 8]	     15776	i386-dis.c	FUNCTION_28
0x4006b73	    0x488b05000000	            mov rax, qword [0x04006b7a] 	     15776	i386-dis.c	FUNCTION_28
0x4006b7a	        0x488b4068	            mov rax, qword [rax + 0x68] 	     15776	i386-dis.c	FUNCTION_28
0x4006b7e	          0x488b00	                    mov rax, qword [rax]	     15776	i386-dis.c	FUNCTION_28
0x4006b81	          0x4839c2	                            cmp rdx, rax	     15776	i386-dis.c	FUNCTION_28
0x4006b84	            0x761d	                           jbe 0x4006ba3	     15776	i386-dis.c	FUNCTION_28
0x4006b86	    0x488b05000000	            mov rax, qword [0x04006b8d] 	     15776	i386-dis.c	FUNCTION_28
0x4006b8d	        0x488d5008	                      lea rdx, [rax + 8]	     15776	i386-dis.c	FUNCTION_28
0x4006b91	    0x488b05000000	            mov rax, qword [0x04006b98] 	     15776	i386-dis.c	FUNCTION_28
0x4006b98	          0x4889d6	                            mov rsi, rdx	     15776	i386-dis.c	FUNCTION_28
0x4006b9b	          0x4889c7	                            mov rdi, rax	     15776	i386-dis.c	FUNCTION_28
0x4006b9e	      0xe89d94ffff	                     call sym.fetch_data	     15776	i386-dis.c	FUNCTION_28
0x4006ba3	    0x488b05000000	            mov rax, qword [0x04006baa] 	     15777	i386-dis.c	FUNCTION_28
0x4006baa	        0x488d5001	                      lea rdx, [rax + 1]	     15777	i386-dis.c	FUNCTION_28
0x4006bae	    0x488915000000	            mov qword [0x04006bb5], rdx 	     15777	i386-dis.c	FUNCTION_28
0x4006bb5	           0xfb600	                   movzx eax, byte [rax]	     15777	i386-dis.c	FUNCTION_28
0x4006bb8	           0xfb6c0	                           movzx eax, al	     15777	i386-dis.c	FUNCTION_28
0x4006bbb	          0x8945f0	             mov dword [rbp - 0x10], eax	     15777	i386-dis.c	FUNCTION_28
0x4006bbe	    0x488b05000000	            mov rax, qword [0x04006bc5] 	     15778	i386-dis.c	FUNCTION_28
0x4006bc5	        0x488d5001	                      lea rdx, [rax + 1]	     15778	i386-dis.c	FUNCTION_28
0x4006bc9	    0x488915000000	            mov qword [0x04006bd0], rdx 	     15778	i386-dis.c	FUNCTION_28
0x4006bd0	           0xfb600	                   movzx eax, byte [rax]	     15778	i386-dis.c	FUNCTION_28
0x4006bd3	           0xfb6c0	                           movzx eax, al	     15778	i386-dis.c	FUNCTION_28
0x4006bd6	          0xc1e008	                              shl eax, 8	     15778	i386-dis.c	FUNCTION_28
0x4006bd9	           0x945f0	              or dword [rbp - 0x10], eax	     15778	i386-dis.c	FUNCTION_28
0x4006bdc	    0x488b05000000	            mov rax, qword [0x04006be3] 	     15779	i386-dis.c	FUNCTION_28
0x4006be3	        0x488d5001	                      lea rdx, [rax + 1]	     15779	i386-dis.c	FUNCTION_28
0x4006be7	    0x488915000000	            mov qword [0x04006bee], rdx 	     15779	i386-dis.c	FUNCTION_28
0x4006bee	           0xfb600	                   movzx eax, byte [rax]	     15779	i386-dis.c	FUNCTION_28
0x4006bf1	           0xfb6c0	                           movzx eax, al	     15779	i386-dis.c	FUNCTION_28
0x4006bf4	          0xc1e010	                           shl eax, 0x10	     15779	i386-dis.c	FUNCTION_28
0x4006bf7	           0x945f0	              or dword [rbp - 0x10], eax	     15779	i386-dis.c	FUNCTION_28
0x4006bfa	    0x488b05000000	            mov rax, qword [0x04006c01] 	     15780	i386-dis.c	FUNCTION_28
0x4006c01	        0x488d5001	                      lea rdx, [rax + 1]	     15780	i386-dis.c	FUNCTION_28
0x4006c05	    0x488915000000	            mov qword [0x04006c0c], rdx 	     15780	i386-dis.c	FUNCTION_28
0x4006c0c	           0xfb600	                   movzx eax, byte [rax]	     15780	i386-dis.c	FUNCTION_28
0x4006c0f	           0xfb6c0	                           movzx eax, al	     15780	i386-dis.c	FUNCTION_28
0x4006c12	          0xc1e018	                           shl eax, 0x18	     15780	i386-dis.c	FUNCTION_28
0x4006c15	           0x945f0	              or dword [rbp - 0x10], eax	     15780	i386-dis.c	FUNCTION_28
0x4006c18	    0x488b05000000	            mov rax, qword [0x04006c1f] 	     15781	i386-dis.c	FUNCTION_28
0x4006c1f	        0x488d5001	                      lea rdx, [rax + 1]	     15781	i386-dis.c	FUNCTION_28
0x4006c23	    0x488915000000	            mov qword [0x04006c2a], rdx 	     15781	i386-dis.c	FUNCTION_28
0x4006c2a	           0xfb600	                   movzx eax, byte [rax]	     15781	i386-dis.c	FUNCTION_28
0x4006c2d	           0xfb6c0	                           movzx eax, al	     15781	i386-dis.c	FUNCTION_28
0x4006c30	          0x8945f4	              mov dword [rbp - 0xc], eax	     15781	i386-dis.c	FUNCTION_28
0x4006c33	    0x488b05000000	            mov rax, qword [0x04006c3a] 	     15782	i386-dis.c	FUNCTION_28
0x4006c3a	        0x488d5001	                      lea rdx, [rax + 1]	     15782	i386-dis.c	FUNCTION_28
0x4006c3e	    0x488915000000	            mov qword [0x04006c45], rdx 	     15782	i386-dis.c	FUNCTION_28
0x4006c45	           0xfb600	                   movzx eax, byte [rax]	     15782	i386-dis.c	FUNCTION_28
0x4006c48	           0xfb6c0	                           movzx eax, al	     15782	i386-dis.c	FUNCTION_28
0x4006c4b	          0xc1e008	                              shl eax, 8	     15782	i386-dis.c	FUNCTION_28
0x4006c4e	           0x945f4	               or dword [rbp - 0xc], eax	     15782	i386-dis.c	FUNCTION_28
0x4006c51	    0x488b05000000	            mov rax, qword [0x04006c58] 	     15783	i386-dis.c	FUNCTION_28
0x4006c58	        0x488d5001	                      lea rdx, [rax + 1]	     15783	i386-dis.c	FUNCTION_28
0x4006c5c	    0x488915000000	            mov qword [0x04006c63], rdx 	     15783	i386-dis.c	FUNCTION_28
0x4006c63	           0xfb600	                   movzx eax, byte [rax]	     15783	i386-dis.c	FUNCTION_28
0x4006c66	           0xfb6c0	                           movzx eax, al	     15783	i386-dis.c	FUNCTION_28
0x4006c69	          0xc1e010	                           shl eax, 0x10	     15783	i386-dis.c	FUNCTION_28
0x4006c6c	           0x945f4	               or dword [rbp - 0xc], eax	     15783	i386-dis.c	FUNCTION_28
0x4006c6f	    0x488b05000000	            mov rax, qword [0x04006c76] 	     15784	i386-dis.c	FUNCTION_28
0x4006c76	        0x488d5001	                      lea rdx, [rax + 1]	     15784	i386-dis.c	FUNCTION_28
0x4006c7a	    0x488915000000	            mov qword [0x04006c81], rdx 	     15784	i386-dis.c	FUNCTION_28
0x4006c81	           0xfb600	                   movzx eax, byte [rax]	     15784	i386-dis.c	FUNCTION_28
0x4006c84	           0xfb6c0	                           movzx eax, al	     15784	i386-dis.c	FUNCTION_28
0x4006c87	          0xc1e018	                           shl eax, 0x18	     15784	i386-dis.c	FUNCTION_28
0x4006c8a	           0x945f4	               or dword [rbp - 0xc], eax	     15784	i386-dis.c	FUNCTION_28
0x4006c8d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     15785	i386-dis.c	FUNCTION_28
0x4006c90	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     15785	i386-dis.c	FUNCTION_28
0x4006c93	        0x48c1e220	                           shl rdx, 0x20	     15785	i386-dis.c	FUNCTION_28
0x4006c97	          0x4801d0	                            add rax, rdx	     15785	i386-dis.c	FUNCTION_28
0x4006c9a	        0x488945f8	                mov qword [rbp - 8], rax	     15785	i386-dis.c	FUNCTION_28
0x4006c9e	        0x488b45f8	                mov rax, qword [rbp - 8]	     15790	i386-dis.c	FUNCTION_28
0x4006ca2	              0xc9	                                   leave	     15791	i386-dis.c	FUNCTION_28
0x4006ca3	              0xc3	                                     ret	     15791	i386-dis.c	FUNCTION_28
OP_Vex_2src_2	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,2:SWITCH,0:FOR,0	30
0x4009c74	              0x55	                                push rbp	     17490	i386-dis.c	FUNCTION_85
0x4009c75	          0x4889e5	                            mov rbp, rsp	     17490	i386-dis.c	FUNCTION_85
0x4009c78	        0x4883ec20	                           sub rsp, 0x20	     17490	i386-dis.c	FUNCTION_85
0x4009c7c	          0x897dec	             mov dword [rbp - 0x14], edi	     17490	i386-dis.c	FUNCTION_85
0x4009c7f	          0x8975e8	             mov dword [rbp - 0x18], esi	     17490	i386-dis.c	FUNCTION_85
0x4009c82	    0x8b0500000000	            mov eax, dword [0x04009c88] 	     17491	i386-dis.c	FUNCTION_85	IF_1
0x4009c88	            0x85c0	                           test eax, eax	     17491	i386-dis.c	FUNCTION_85	IF_1
0x4009c8a	            0x7411	                            je 0x4009c9d	     17491	i386-dis.c	FUNCTION_85	IF_1
0x4009c8c	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     17492	i386-dis.c	FUNCTION_85	CALL_1
0x4009c8f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17492	i386-dis.c	FUNCTION_85	CALL_1
0x4009c92	            0x89d6	                            mov esi, edx	     17492	i386-dis.c	FUNCTION_85	CALL_1
0x4009c94	            0x89c7	                            mov edi, eax	     17492	i386-dis.c	FUNCTION_85	CALL_1
0x4009c96	      0xe87afeffff	                    call sym.OP_Vex_2src	     17492	i386-dis.c	FUNCTION_85	CALL_1
0x4009c9b	            0xeb34	                           jmp 0x4009cd1	     17501	i386-dis.c	FUNCTION_85
0x4009c9d	    0x8b0500000000	            mov eax, dword [0x04009ca3] 	     17495	i386-dis.c	FUNCTION_85	ELSE_1
0x4009ca3	          0x8945fc	                mov dword [rbp - 4], eax	     17495	i386-dis.c	FUNCTION_85	ELSE_1
0x4009ca6	    0x8b0500000000	            mov eax, dword [0x04009cac] 	     17497	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4009cac	          0x83f802	                              cmp eax, 2	     17497	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4009caf	            0x7404	                            je 0x4009cb5	     17497	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4009cb1	        0x8365fc07	                  and dword [rbp - 4], 7	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4009cb5	    0x488b05000000	            mov rax, qword [0x04009cbc] 	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4009cbc	          0x8b55fc	                mov edx, dword [rbp - 4]	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4009cbf	        0x48c1e203	                              shl rdx, 3	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4009cc3	          0x4801d0	                            add rax, rdx	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4009cc6	          0x488b00	                    mov rax, qword [rax]	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4009cc9	          0x4889c7	                            mov rdi, rax	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4009ccc	      0xe8f8adffff	                        call sym.oappend	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4009cd1	              0x90	                                     nop	     17501	i386-dis.c	FUNCTION_85
0x4009cd2	              0xc9	                                   leave	     17501	i386-dis.c	FUNCTION_85
0x4009cd3	              0xc3	                                     ret	     17501	i386-dis.c	FUNCTION_85
OP_Mwaitx	CALL,3:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0	43
0x4008c18	              0x55	                                push rbp	     16847	i386-dis.c	FUNCTION_64
0x4008c19	          0x4889e5	                            mov rbp, rsp	     16847	i386-dis.c	FUNCTION_64
0x4008c1c	        0x4883ec20	                           sub rsp, 0x20	     16847	i386-dis.c	FUNCTION_64
0x4008c20	          0x897dec	             mov dword [rbp - 0x14], edi	     16847	i386-dis.c	FUNCTION_64
0x4008c23	          0x8975e8	             mov dword [rbp - 0x18], esi	     16847	i386-dis.c	FUNCTION_64
0x4008c26	     0xfb605000000	           movzx eax, byte [0x04008c2d] 	     16849	i386-dis.c	FUNCTION_64	IF_1
0x4008c2d	            0x84c0	                             test al, al	     16849	i386-dis.c	FUNCTION_64	IF_1
0x4008c2f	            0x756d	                           jne 0x4008c9e	     16849	i386-dis.c	FUNCTION_64	IF_1
0x4008c31	    0x8b0500000000	            mov eax, dword [0x04008c37] 	     16851	i386-dis.c	FUNCTION_64	IF_1
0x4008c37	          0x83f802	                              cmp eax, 2	     16852	i386-dis.c	FUNCTION_64	IF_1
0x4008c3a	            0x7509	                           jne 0x4008c45	     16852	i386-dis.c	FUNCTION_64	IF_1
0x4008c3c	    0x488b05000000	            mov rax, qword [0x04008c43] 	     16852	i386-dis.c	FUNCTION_64	IF_1
0x4008c43	            0xeb07	                           jmp 0x4008c4c	     16852	i386-dis.c	FUNCTION_64	IF_1
0x4008c45	    0x488b05000000	            mov rax, qword [0x04008c4c] 	     16852	i386-dis.c	FUNCTION_64	IF_1
0x4008c4c	        0x488945f8	                mov qword [rbp - 8], rax	     16851	i386-dis.c	FUNCTION_64	IF_1
0x4008c50	        0x488b45f8	                mov rax, qword [rbp - 8]	     16853	i386-dis.c	FUNCTION_64	IF_1	CALL_1
0x4008c54	          0x488b00	                    mov rax, qword [rax]	     16853	i386-dis.c	FUNCTION_64	IF_1	CALL_1
0x4008c57	          0x4889c6	                            mov rsi, rax	     16853	i386-dis.c	FUNCTION_64	IF_1	CALL_1
0x4008c5a	      0xbf00000000	                              mov edi, 0	     16853	i386-dis.c	FUNCTION_64	IF_1	CALL_1
0x4008c5f	      0xe800000000	                          call 0x4008c64	     16853	i386-dis.c	FUNCTION_64	IF_1	CALL_1
0x4008c64	        0x488b45f8	                mov rax, qword [rbp - 8]	     16854	i386-dis.c	FUNCTION_64	IF_1	CALL_2
0x4008c68	        0x4883c008	                              add rax, 8	     16854	i386-dis.c	FUNCTION_64	IF_1	CALL_2
0x4008c6c	          0x488b00	                    mov rax, qword [rax]	     16854	i386-dis.c	FUNCTION_64	IF_1	CALL_2
0x4008c6f	          0x4889c6	                            mov rsi, rax	     16854	i386-dis.c	FUNCTION_64	IF_1	CALL_2
0x4008c72	      0xbf00000000	                              mov edi, 0	     16854	i386-dis.c	FUNCTION_64	IF_1	CALL_2
0x4008c77	      0xe800000000	                          call 0x4008c7c	     16854	i386-dis.c	FUNCTION_64	IF_1	CALL_2
0x4008c7c	        0x488b45f8	                mov rax, qword [rbp - 8]	     16855	i386-dis.c	FUNCTION_64	IF_1	CALL_3
0x4008c80	        0x4883c018	                           add rax, 0x18	     16855	i386-dis.c	FUNCTION_64	IF_1	CALL_3
0x4008c84	          0x488b00	                    mov rax, qword [rax]	     16855	i386-dis.c	FUNCTION_64	IF_1	CALL_3
0x4008c87	          0x4889c6	                            mov rsi, rax	     16855	i386-dis.c	FUNCTION_64	IF_1	CALL_3
0x4008c8a	      0xbf00000000	                              mov edi, 0	     16855	i386-dis.c	FUNCTION_64	IF_1	CALL_3
0x4008c8f	      0xe800000000	                          call 0x4008c94	     16855	i386-dis.c	FUNCTION_64	IF_1	CALL_3
0x4008c94	    0xc70500000000	               mov dword [0x04008c9e], 1	     16856	i386-dis.c	FUNCTION_64	IF_1
0x4008c9e	     0xfb605000000	           movzx eax, byte [0x04008ca5] 	     16859	i386-dis.c	FUNCTION_64
0x4008ca5	            0x84c0	                             test al, al	     16859	i386-dis.c	FUNCTION_64
0x4008ca7	            0x7505	                           jne 0x4008cae	     16859	i386-dis.c	FUNCTION_64
0x4008ca9	      0xe800000000	                          call 0x4008cae	     16859	i386-dis.c	FUNCTION_64
0x4008cae	    0x488b05000000	            mov rax, qword [0x04008cb5] 	     16860	i386-dis.c	FUNCTION_64
0x4008cb5	        0x4883c001	                              add rax, 1	     16860	i386-dis.c	FUNCTION_64
0x4008cb9	    0x488905000000	            mov qword [0x04008cc0], rax 	     16860	i386-dis.c	FUNCTION_64
0x4008cc0	              0x90	                                     nop	     16861	i386-dis.c	FUNCTION_64
0x4008cc1	              0xc9	                                   leave	     16861	i386-dis.c	FUNCTION_64
0x4008cc2	              0xc3	                                     ret	     16861	i386-dis.c	FUNCTION_64
append_seg	CALL,6:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,1:FOR,0	47
0x4004af5	              0x55	                                push rbp	     14582	i386-dis.c	FUNCTION_19
0x4004af6	          0x4889e5	                            mov rbp, rsp	     14582	i386-dis.c	FUNCTION_19
0x4004af9	    0x8b0500000000	            mov eax, dword [0x04004aff] 	     14584	i386-dis.c	FUNCTION_19	IF_1
0x4004aff	            0x85c0	                           test eax, eax	     14584	i386-dis.c	FUNCTION_19	IF_1
0x4004b01	     0xf848d000000	                            je 0x4004b94	     14584	i386-dis.c	FUNCTION_19	IF_1
0x4004b07	    0x8b1500000000	            mov edx, dword [0x04004b0d] 	     14587	i386-dis.c	FUNCTION_19
0x4004b0d	    0x8b0500000000	            mov eax, dword [0x04004b13] 	     14587	i386-dis.c	FUNCTION_19
0x4004b13	             0x9d0	                             or eax, edx	     14587	i386-dis.c	FUNCTION_19
0x4004b15	    0x890500000000	            mov dword [0x04004b1b], eax 	     14587	i386-dis.c	FUNCTION_19
0x4004b1b	    0x8b0500000000	            mov eax, dword [0x04004b21] 	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b21	          0x83f820	                           cmp eax, 0x20	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b24	            0x7432	                            je 0x4004b58	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b26	          0x83f820	                           cmp eax, 0x20	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b29	            0x7f0c	                            jg 0x4004b37	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b2b	          0x83f808	                              cmp eax, 8	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b2e	            0x741c	                            je 0x4004b4c	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b30	          0x83f810	                           cmp eax, 0x10	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b33	            0x742f	                            je 0x4004b64	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b35	            0xeb5e	                           jmp 0x4004b95	     14609	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b37	      0x3d80000000	                           cmp eax, 0x80	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b3c	            0x743e	                            je 0x4004b7c	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b3e	      0x3d00010000	                          cmp eax, 0x100	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b43	            0x7443	                            je 0x4004b88	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b45	          0x83f840	                           cmp eax, 0x40	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b48	            0x7426	                            je 0x4004b70	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b4a	            0xeb49	                           jmp 0x4004b95	     14609	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b4c	      0xbf00000000	                              mov edi, 0	     14591	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_1
0x4004b51	      0xe867e7ffff	            call sym.oappend_maybe_intel	     14591	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_1
0x4004b56	            0xeb3d	                           jmp 0x4004b95	     14592	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b58	      0xbf00000000	                              mov edi, 0	     14594	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_2
0x4004b5d	      0xe85be7ffff	            call sym.oappend_maybe_intel	     14594	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_2
0x4004b62	            0xeb31	                           jmp 0x4004b95	     14595	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b64	      0xbf00000000	                              mov edi, 0	     14597	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_3
0x4004b69	      0xe84fe7ffff	            call sym.oappend_maybe_intel	     14597	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_3
0x4004b6e	            0xeb25	                           jmp 0x4004b95	     14598	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b70	      0xbf00000000	                              mov edi, 0	     14600	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_4
0x4004b75	      0xe843e7ffff	            call sym.oappend_maybe_intel	     14600	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_4
0x4004b7a	            0xeb19	                           jmp 0x4004b95	     14601	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b7c	      0xbf00000000	                              mov edi, 0	     14603	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_5
0x4004b81	      0xe837e7ffff	            call sym.oappend_maybe_intel	     14603	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_5
0x4004b86	            0xeb0d	                           jmp 0x4004b95	     14604	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b88	      0xbf00000000	                              mov edi, 0	     14606	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_6
0x4004b8d	      0xe82be7ffff	            call sym.oappend_maybe_intel	     14606	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_6
0x4004b92	            0xeb01	                           jmp 0x4004b95	     14607	i386-dis.c	FUNCTION_19	SWITCH_1
0x4004b94	              0x90	                                     nop	     14585	i386-dis.c	FUNCTION_19	IF_1
0x4004b95	              0x5d	                                 pop rbp	     14611	i386-dis.c	FUNCTION_19
0x4004b96	              0xc3	                                     ret	     14611	i386-dis.c	FUNCTION_19
intel_operand_size	CALL,83:WHILE,0:functions,0:DO,0:ELSE,12:IF,31:SWITCH,13:FOR,0	470
0x4004fac	              0x55	                                push rbp	     14724	i386-dis.c	FUNCTION_23
0x4004fad	          0x4889e5	                            mov rbp, rsp	     14724	i386-dis.c	FUNCTION_23
0x4004fb0	        0x4883ec10	                           sub rsp, 0x10	     14724	i386-dis.c	FUNCTION_23
0x4004fb4	          0x897dfc	                mov dword [rbp - 4], edi	     14724	i386-dis.c	FUNCTION_23
0x4004fb7	          0x8975f8	                mov dword [rbp - 8], esi	     14724	i386-dis.c	FUNCTION_23
0x4004fba	    0x8b0500000000	            mov eax, dword [0x04004fc0] 	     14725	i386-dis.c	FUNCTION_23	IF_1
0x4004fc0	            0x85c0	                           test eax, eax	     14725	i386-dis.c	FUNCTION_23	IF_1
0x4004fc2	            0x743e	                            je 0x4005002	     14725	i386-dis.c	FUNCTION_23	IF_1
0x4004fc4	    0x8b0500000000	            mov eax, dword [0x04004fca] 	     14726	i386-dis.c	FUNCTION_23	IF_1
0x4004fca	            0x85c0	                           test eax, eax	     14726	i386-dis.c	FUNCTION_23	IF_1
0x4004fcc	            0x7434	                            je 0x4005002	     14726	i386-dis.c	FUNCTION_23	IF_1
0x4004fce	        0x837dfc0d	                cmp dword [rbp - 4], 0xd	     14727	i386-dis.c	FUNCTION_23	IF_1
0x4004fd2	            0x7406	                            je 0x4004fda	     14727	i386-dis.c	FUNCTION_23	IF_1
0x4004fd4	        0x837dfc13	               cmp dword [rbp - 4], 0x13	     14728	i386-dis.c	FUNCTION_23	IF_1
0x4004fd8	            0x7528	                           jne 0x4005002	     14728	i386-dis.c	FUNCTION_23	IF_1
0x4004fda	    0x8b0500000000	            mov eax, dword [0x04004fe0] 	     14730	i386-dis.c	FUNCTION_23	IF_1	IF_2
0x4004fe0	            0x85c0	                           test eax, eax	     14730	i386-dis.c	FUNCTION_23	IF_1	IF_2
0x4004fe2	            0x740f	                            je 0x4004ff3	     14730	i386-dis.c	FUNCTION_23	IF_1	IF_2
0x4004fe4	      0xbf00000000	                              mov edi, 0	     14731	i386-dis.c	FUNCTION_23	IF_1	CALL_1
0x4004fe9	      0xe8dbfaffff	                        call sym.oappend	     14731	i386-dis.c	FUNCTION_23	IF_1	CALL_1
0x4004fee	      0xe91a070000	                           jmp 0x400570d	     14734	i386-dis.c	FUNCTION_23	IF_1
0x4004ff3	      0xbf00000000	                              mov edi, 0	     14733	i386-dis.c	FUNCTION_23	IF_1	CALL_2
0x4004ff8	      0xe8ccfaffff	                        call sym.oappend	     14733	i386-dis.c	FUNCTION_23	IF_1	CALL_2
0x4004ffd	      0xe90b070000	                           jmp 0x400570d	     14734	i386-dis.c	FUNCTION_23	IF_1
0x4005002	        0x837dfc45	               cmp dword [rbp - 4], 0x45	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005006	     0xf87fd060000	                            ja 0x4005709	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x400500c	          0x8b45fc	                mov eax, dword [rbp - 4]	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x400500f	    0x488b04c50000	                  mov rax, qword [rax*8]	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005017	            0xffe0	                                 jmp rax	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005019	      0xbf00000000	                              mov edi, 0	     14742	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_3
0x400501e	      0xe8a6faffff	                        call sym.oappend	     14742	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_3
0x4005023	      0xe9e5060000	                           jmp 0x400570d	     14743	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005028	      0xbf00000000	                              mov edi, 0	     14747	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_4
0x400502d	      0xe897faffff	                        call sym.oappend	     14747	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_4
0x4005032	      0xe9d6060000	                           jmp 0x400570d	     14748	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005037	    0x8b0500000000	            mov eax, dword [0x0400503d] 	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x400503d	          0x83f802	                              cmp eax, 2	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x4005040	            0x751a	                           jne 0x400505c	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x4005042	    0x8b0500000000	            mov eax, dword [0x04005048] 	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x4005048	          0x83f801	                              cmp eax, 1	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x400504b	            0x750f	                           jne 0x400505c	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x400504d	      0xbf00000000	                              mov edi, 0	     14752	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3	CALL_5
0x4005052	      0xe872faffff	                        call sym.oappend	     14752	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3	CALL_5
0x4005057	      0xe9b1060000	                           jmp 0x400570d	     14753	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x400505c	    0x8b0500000000	            mov eax, dword [0x04005062] 	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4005062	          0x83f802	                              cmp eax, 2	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4005065	            0x7526	                           jne 0x400508d	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4005067	          0x8b45f8	                mov eax, dword [rbp - 8]	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400506a	          0x83e001	                              and eax, 1	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400506d	            0x85c0	                           test eax, eax	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400506f	            0x750d	                           jne 0x400507e	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4005071	    0x8b0500000000	            mov eax, dword [0x04005077] 	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4005077	          0x83e008	                              and eax, 8	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400507a	            0x85c0	                           test eax, eax	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400507c	            0x740f	                            je 0x400508d	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400507e	      0xbf00000000	                              mov edi, 0	     14759	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4	CALL_6
0x4005083	      0xe841faffff	                        call sym.oappend	     14759	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4	CALL_6
0x4005088	      0xe980060000	                           jmp 0x400570d	     14760	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400508d	    0x8b0500000000	            mov eax, dword [0x04005093] 	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005093	          0x83e008	                              and eax, 8	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005096	            0x85c0	                           test eax, eax	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005098	            0x740f	                            je 0x40050a9	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x400509a	    0x8b0500000000	            mov eax, dword [0x040050a0] 	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x40050a0	          0x83c848	                            or eax, 0x48	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x40050a3	    0x890500000000	            mov dword [0x040050a9], eax 	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x40050a9	    0x8b0500000000	            mov eax, dword [0x040050af] 	     14767	i386-dis.c	FUNCTION_23	SWITCH_1	IF_5
0x40050af	          0x83e008	                              and eax, 8	     14767	i386-dis.c	FUNCTION_23	SWITCH_1	IF_5
0x40050b2	            0x85c0	                           test eax, eax	     14767	i386-dis.c	FUNCTION_23	SWITCH_1	IF_5
0x40050b4	            0x740f	                            je 0x40050c5	     14767	i386-dis.c	FUNCTION_23	SWITCH_1	IF_5
0x40050b6	      0xbf00000000	                              mov edi, 0	     14768	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_7
0x40050bb	      0xe809faffff	                        call sym.oappend	     14768	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_7
0x40050c0	      0xe948060000	                           jmp 0x400570d	     14777	i386-dis.c	FUNCTION_23	SWITCH_1
0x40050c5	          0x8b45f8	                mov eax, dword [rbp - 8]	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40050c8	          0x83e001	                              and eax, 1	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40050cb	            0x85c0	                           test eax, eax	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40050cd	            0x7506	                           jne 0x40050d5	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40050cf	        0x837dfc23	               cmp dword [rbp - 4], 0x23	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40050d3	            0x750c	                           jne 0x40050e1	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40050d5	      0xbf00000000	                              mov edi, 0	     14772	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	CALL_8
0x40050da	      0xe8eaf9ffff	                        call sym.oappend	     14772	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	CALL_8
0x40050df	            0xeb0a	                           jmp 0x40050eb	     14772	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	CALL_8
0x40050e1	      0xbf00000000	                              mov edi, 0	     14774	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	CALL_9
0x40050e6	      0xe8def9ffff	                        call sym.oappend	     14774	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	CALL_9
0x40050eb	    0x8b0500000000	            mov eax, dword [0x040050f1] 	     14775	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2
0x40050f1	      0x2500020000	                          and eax, 0x200	     14775	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2
0x40050f6	            0x89c2	                            mov edx, eax	     14775	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2
0x40050f8	    0x8b0500000000	            mov eax, dword [0x040050fe] 	     14775	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2
0x40050fe	             0x9d0	                             or eax, edx	     14775	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2
0x4005100	    0x890500000000	            mov dword [0x04005106], eax 	     14775	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2
0x4005106	      0xe902060000	                           jmp 0x400570d	     14777	i386-dis.c	FUNCTION_23	SWITCH_1
0x400510b	    0x8b0500000000	            mov eax, dword [0x04005111] 	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4005111	          0x83e008	                              and eax, 8	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4005114	            0x85c0	                           test eax, eax	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4005116	            0x750a	                           jne 0x4005122	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4005118	          0x8b45f8	                mov eax, dword [rbp - 8]	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x400511b	          0x83e001	                              and eax, 1	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x400511e	            0x85c0	                           test eax, eax	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4005120	            0x7415	                            je 0x4005137	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4005122	    0x488b05000000	            mov rax, qword [0x04005129] 	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4005129	        0x488d5001	                      lea rdx, [rax + 1]	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x400512d	    0x488915000000	            mov qword [0x04005134], rdx 	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4005134	          0xc60044	                    mov byte [rax], 0x44	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4005137	      0xbf00000000	                              mov edi, 0	     14781	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_10
0x400513c	      0xe888f9ffff	                        call sym.oappend	     14781	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_10
0x4005141	    0x8b0500000000	            mov eax, dword [0x04005147] 	     14782	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x4005147	          0x83e008	                              and eax, 8	     14782	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x400514a	            0x85c0	                           test eax, eax	     14782	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x400514c	     0xf85ba050000	                           jne 0x400570c	     14782	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x4005152	    0x8b0500000000	            mov eax, dword [0x04005158] 	     14783	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x4005158	      0x2500020000	                          and eax, 0x200	     14783	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x400515d	            0x89c2	                            mov edx, eax	     14783	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x400515f	    0x8b0500000000	            mov eax, dword [0x04005165] 	     14783	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x4005165	             0x9d0	                             or eax, edx	     14783	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x4005167	    0x890500000000	            mov dword [0x0400516d], eax 	     14783	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x400516d	      0xe99a050000	                           jmp 0x400570c	     14784	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005172	          0x8b45f8	                mov eax, dword [rbp - 8]	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4005175	          0x83e001	                              and eax, 1	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4005178	            0x85c0	                           test eax, eax	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x400517a	            0x740c	                            je 0x4005188	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x400517c	      0xbf00000000	                              mov edi, 0	     14787	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_11
0x4005181	      0xe843f9ffff	                        call sym.oappend	     14787	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_11
0x4005186	            0xeb0a	                           jmp 0x4005192	     14787	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_11
0x4005188	      0xbf00000000	                              mov edi, 0	     14789	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_12
0x400518d	      0xe837f9ffff	                        call sym.oappend	     14789	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_12
0x4005192	    0x8b0500000000	            mov eax, dword [0x04005198] 	     14790	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005198	      0x2500020000	                          and eax, 0x200	     14790	i386-dis.c	FUNCTION_23	SWITCH_1
0x400519d	            0x89c2	                            mov edx, eax	     14790	i386-dis.c	FUNCTION_23	SWITCH_1
0x400519f	    0x8b0500000000	            mov eax, dword [0x040051a5] 	     14790	i386-dis.c	FUNCTION_23	SWITCH_1
0x40051a5	             0x9d0	                             or eax, edx	     14790	i386-dis.c	FUNCTION_23	SWITCH_1
0x40051a7	    0x890500000000	            mov dword [0x040051ad], eax 	     14790	i386-dis.c	FUNCTION_23	SWITCH_1
0x40051ad	      0xe95b050000	                           jmp 0x400570d	     14791	i386-dis.c	FUNCTION_23	SWITCH_1
0x40051b2	      0xbf00000000	                              mov edi, 0	     14797	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_13
0x40051b7	      0xe80df9ffff	                        call sym.oappend	     14797	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_13
0x40051bc	      0xe94c050000	                           jmp 0x400570d	     14798	i386-dis.c	FUNCTION_23	SWITCH_1
0x40051c1	      0xbf00000000	                              mov edi, 0	     14803	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_14
0x40051c6	      0xe8fef8ffff	                        call sym.oappend	     14803	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_14
0x40051cb	      0xe93d050000	                           jmp 0x400570d	     14804	i386-dis.c	FUNCTION_23	SWITCH_1
0x40051d0	    0x8b0500000000	            mov eax, dword [0x040051d6] 	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x40051d6	          0x83f802	                              cmp eax, 2	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x40051d9	            0x750f	                           jne 0x40051ea	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x40051db	      0xbf00000000	                              mov edi, 0	     14807	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_15
0x40051e0	      0xe8e4f8ffff	                        call sym.oappend	     14807	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_15
0x40051e5	      0xe923050000	                           jmp 0x400570d	     14810	i386-dis.c	FUNCTION_23	SWITCH_1
0x40051ea	      0xbf00000000	                              mov edi, 0	     14809	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_16
0x40051ef	      0xe8d5f8ffff	                        call sym.oappend	     14809	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_16
0x40051f4	      0xe914050000	                           jmp 0x400570d	     14810	i386-dis.c	FUNCTION_23	SWITCH_1
0x40051f9	          0x8b45f8	                mov eax, dword [rbp - 8]	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x40051fc	          0x83e001	                              and eax, 1	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x40051ff	            0x85c0	                           test eax, eax	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x4005201	            0x740c	                            je 0x400520f	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x4005203	      0xbf00000000	                              mov edi, 0	     14813	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_17
0x4005208	      0xe8bcf8ffff	                        call sym.oappend	     14813	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_17
0x400520d	            0xeb0a	                           jmp 0x4005219	     14813	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_17
0x400520f	      0xbf00000000	                              mov edi, 0	     14815	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_18
0x4005214	      0xe8b0f8ffff	                        call sym.oappend	     14815	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_18
0x4005219	    0x8b0500000000	            mov eax, dword [0x0400521f] 	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x400521f	      0x2500020000	                          and eax, 0x200	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005224	            0x89c2	                            mov edx, eax	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005226	    0x8b0500000000	            mov eax, dword [0x0400522c] 	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x400522c	             0x9d0	                             or eax, edx	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x400522e	    0x890500000000	            mov dword [0x04005234], eax 	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005234	      0xe9d4040000	                           jmp 0x400570d	     14817	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005239	      0xbf00000000	                              mov edi, 0	     14819	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_19
0x400523e	      0xe886f8ffff	                        call sym.oappend	     14819	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_19
0x4005243	      0xe9c5040000	                           jmp 0x400570d	     14820	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005248	     0xfb605000000	           movzx eax, byte [0x0400524f] 	     14827	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12
0x400524f	            0x84c0	                             test al, al	     14827	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12
0x4005251	            0x7444	                            je 0x4005297	     14827	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12
0x4005253	    0x8b0500000000	            mov eax, dword [0x04005259] 	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4005259	      0x3d00010000	                          cmp eax, 0x100	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x400525e	            0x741a	                            je 0x400527a	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4005260	      0x3d00020000	                          cmp eax, 0x200	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4005265	            0x741f	                            je 0x4005286	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4005267	      0x3d80000000	                           cmp eax, 0x80	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x400526c	            0x7524	                           jne 0x4005292	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x400526e	      0xbf00000000	                              mov edi, 0	     14832	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_20
0x4005273	      0xe851f8ffff	                        call sym.oappend	     14832	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_20
0x4005278	            0xeb2c	                           jmp 0x40052a6	     14833	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x400527a	      0xbf00000000	                              mov edi, 0	     14835	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_21
0x400527f	      0xe845f8ffff	                        call sym.oappend	     14835	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_21
0x4005284	            0xeb20	                           jmp 0x40052a6	     14836	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4005286	      0xbf00000000	                              mov edi, 0	     14838	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_22
0x400528b	      0xe839f8ffff	                        call sym.oappend	     14838	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_22
0x4005290	            0xeb14	                           jmp 0x40052a6	     14839	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4005292	      0xe800000000	                          call 0x4005297	     14841	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_23
0x4005297	      0xbf00000000	                              mov edi, 0	     14845	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_24
0x400529c	      0xe828f8ffff	                        call sym.oappend	     14845	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_24
0x40052a1	      0xe967040000	                           jmp 0x400570d	     14846	i386-dis.c	FUNCTION_23	SWITCH_1
0x40052a6	      0xe962040000	                           jmp 0x400570d	     14846	i386-dis.c	FUNCTION_23	SWITCH_1
0x40052ab	      0xbf00000000	                              mov edi, 0	     14848	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_25
0x40052b0	      0xe814f8ffff	                        call sym.oappend	     14848	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_25
0x40052b5	      0xe953040000	                           jmp 0x400570d	     14849	i386-dis.c	FUNCTION_23	SWITCH_1
0x40052ba	      0xbf00000000	                              mov edi, 0	     14851	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_26
0x40052bf	      0xe805f8ffff	                        call sym.oappend	     14851	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_26
0x40052c4	      0xe944040000	                           jmp 0x400570d	     14852	i386-dis.c	FUNCTION_23	SWITCH_1
0x40052c9	     0xfb605000000	           movzx eax, byte [0x040052d0] 	     14855	i386-dis.c	FUNCTION_23	SWITCH_1	IF_13
0x40052d0	            0x84c0	                             test al, al	     14855	i386-dis.c	FUNCTION_23	SWITCH_1	IF_13
0x40052d2	            0x7505	                           jne 0x40052d9	     14855	i386-dis.c	FUNCTION_23	SWITCH_1	IF_13
0x40052d4	      0xe800000000	                          call 0x40052d9	     14856	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_27
0x40052d9	    0x8b0500000000	            mov eax, dword [0x040052df] 	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40052df	      0x3d00010000	                          cmp eax, 0x100	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40052e4	            0x741a	                            je 0x4005300	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40052e6	      0x3d00020000	                          cmp eax, 0x200	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40052eb	            0x741f	                            je 0x400530c	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40052ed	      0x3d80000000	                           cmp eax, 0x80	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40052f2	            0x7524	                           jne 0x4005318	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40052f4	      0xbf00000000	                              mov edi, 0	     14861	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_28
0x40052f9	      0xe8cbf7ffff	                        call sym.oappend	     14861	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_28
0x40052fe	            0xeb1d	                           jmp 0x400531d	     14862	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x4005300	      0xbf00000000	                              mov edi, 0	     14864	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_29
0x4005305	      0xe8bff7ffff	                        call sym.oappend	     14864	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_29
0x400530a	            0xeb11	                           jmp 0x400531d	     14865	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x400530c	      0xbf00000000	                              mov edi, 0	     14867	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_30
0x4005311	      0xe8b3f7ffff	                        call sym.oappend	     14867	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_30
0x4005316	            0xeb05	                           jmp 0x400531d	     14868	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x4005318	      0xe800000000	                          call 0x400531d	     14870	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_31
0x400531d	      0xe9eb030000	                           jmp 0x400570d	     14872	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005322	     0xfb605000000	           movzx eax, byte [0x04005329] 	     14874	i386-dis.c	FUNCTION_23	SWITCH_1	IF_14
0x4005329	            0x84c0	                             test al, al	     14874	i386-dis.c	FUNCTION_23	SWITCH_1	IF_14
0x400532b	            0x7505	                           jne 0x4005332	     14874	i386-dis.c	FUNCTION_23	SWITCH_1	IF_14
0x400532d	      0xe800000000	                          call 0x4005332	     14875	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_32
0x4005332	    0x8b0500000000	            mov eax, dword [0x04005338] 	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4005338	      0x3d00010000	                          cmp eax, 0x100	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x400533d	            0x740e	                            je 0x400534d	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x400533f	      0x3d00020000	                          cmp eax, 0x200	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4005344	            0x7407	                            je 0x400534d	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4005346	      0x3d80000000	                           cmp eax, 0x80	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x400534b	            0x7510	                           jne 0x400535d	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x400534d	      0xbf00000000	                              mov edi, 0	     14882	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4	CALL_33
0x4005352	      0xe872f7ffff	                        call sym.oappend	     14882	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4	CALL_33
0x4005357	              0x90	                                     nop	     14883	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4005358	      0xe9b0030000	                           jmp 0x400570d	     14887	i386-dis.c	FUNCTION_23	SWITCH_1
0x400535d	      0xe800000000	                          call 0x4005362	     14885	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4	CALL_34
0x4005362	     0xfb605000000	           movzx eax, byte [0x04005369] 	     14889	i386-dis.c	FUNCTION_23	SWITCH_1	IF_15
0x4005369	            0x84c0	                             test al, al	     14889	i386-dis.c	FUNCTION_23	SWITCH_1	IF_15
0x400536b	            0x7505	                           jne 0x4005372	     14889	i386-dis.c	FUNCTION_23	SWITCH_1	IF_15
0x400536d	      0xe800000000	                          call 0x4005372	     14890	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_35
0x4005372	    0x8b0500000000	            mov eax, dword [0x04005378] 	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4005378	      0x3d00010000	                          cmp eax, 0x100	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x400537d	            0x740e	                            je 0x400538d	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x400537f	      0x3d00020000	                          cmp eax, 0x200	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4005384	            0x7407	                            je 0x400538d	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4005386	      0x3d80000000	                           cmp eax, 0x80	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x400538b	            0x7510	                           jne 0x400539d	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x400538d	      0xbf00000000	                              mov edi, 0	     14897	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5	CALL_36
0x4005392	      0xe832f7ffff	                        call sym.oappend	     14897	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5	CALL_36
0x4005397	              0x90	                                     nop	     14898	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4005398	      0xe970030000	                           jmp 0x400570d	     14902	i386-dis.c	FUNCTION_23	SWITCH_1
0x400539d	      0xe800000000	                          call 0x40053a2	     14900	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5	CALL_37
0x40053a2	     0xfb605000000	           movzx eax, byte [0x040053a9] 	     14904	i386-dis.c	FUNCTION_23	SWITCH_1	IF_16
0x40053a9	            0x84c0	                             test al, al	     14904	i386-dis.c	FUNCTION_23	SWITCH_1	IF_16
0x40053ab	            0x7505	                           jne 0x40053b2	     14904	i386-dis.c	FUNCTION_23	SWITCH_1	IF_16
0x40053ad	      0xe800000000	                          call 0x40053b2	     14905	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_38
0x40053b2	    0x8b0500000000	            mov eax, dword [0x040053b8] 	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x40053b8	      0x3d00010000	                          cmp eax, 0x100	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x40053bd	            0x740e	                            je 0x40053cd	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x40053bf	      0x3d00020000	                          cmp eax, 0x200	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x40053c4	            0x7407	                            je 0x40053cd	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x40053c6	      0x3d80000000	                           cmp eax, 0x80	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x40053cb	            0x7510	                           jne 0x40053dd	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x40053cd	      0xbf00000000	                              mov edi, 0	     14912	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6	CALL_39
0x40053d2	      0xe8f2f6ffff	                        call sym.oappend	     14912	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6	CALL_39
0x40053d7	              0x90	                                     nop	     14913	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x40053d8	      0xe930030000	                           jmp 0x400570d	     14917	i386-dis.c	FUNCTION_23	SWITCH_1
0x40053dd	      0xe800000000	                          call 0x40053e2	     14915	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6	CALL_40
0x40053e2	     0xfb605000000	           movzx eax, byte [0x040053e9] 	     14919	i386-dis.c	FUNCTION_23	SWITCH_1	IF_17
0x40053e9	            0x84c0	                             test al, al	     14919	i386-dis.c	FUNCTION_23	SWITCH_1	IF_17
0x40053eb	            0x7505	                           jne 0x40053f2	     14919	i386-dis.c	FUNCTION_23	SWITCH_1	IF_17
0x40053ed	      0xe800000000	                          call 0x40053f2	     14920	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_41
0x40053f2	    0x8b0500000000	            mov eax, dword [0x040053f8] 	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x40053f8	      0x3d00010000	                          cmp eax, 0x100	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x40053fd	            0x740e	                            je 0x400540d	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x40053ff	      0x3d00020000	                          cmp eax, 0x200	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4005404	            0x7407	                            je 0x400540d	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4005406	      0x3d80000000	                           cmp eax, 0x80	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x400540b	            0x7510	                           jne 0x400541d	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x400540d	      0xbf00000000	                              mov edi, 0	     14927	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7	CALL_42
0x4005412	      0xe8b2f6ffff	                        call sym.oappend	     14927	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7	CALL_42
0x4005417	              0x90	                                     nop	     14928	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4005418	      0xe9f0020000	                           jmp 0x400570d	     14932	i386-dis.c	FUNCTION_23	SWITCH_1
0x400541d	      0xe800000000	                          call 0x4005422	     14930	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7	CALL_43
0x4005422	     0xfb605000000	           movzx eax, byte [0x04005429] 	     14934	i386-dis.c	FUNCTION_23	SWITCH_1	IF_18
0x4005429	            0x84c0	                             test al, al	     14934	i386-dis.c	FUNCTION_23	SWITCH_1	IF_18
0x400542b	            0x7505	                           jne 0x4005432	     14934	i386-dis.c	FUNCTION_23	SWITCH_1	IF_18
0x400542d	      0xe800000000	                          call 0x4005432	     14935	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_44
0x4005432	    0x8b0500000000	            mov eax, dword [0x04005438] 	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4005438	      0x3d00010000	                          cmp eax, 0x100	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x400543d	            0x741a	                            je 0x4005459	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x400543f	      0x3d00020000	                          cmp eax, 0x200	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4005444	            0x741f	                            je 0x4005465	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4005446	      0x3d80000000	                           cmp eax, 0x80	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x400544b	            0x7524	                           jne 0x4005471	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x400544d	      0xbf00000000	                              mov edi, 0	     14940	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_45
0x4005452	      0xe872f6ffff	                        call sym.oappend	     14940	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_45
0x4005457	            0xeb1d	                           jmp 0x4005476	     14941	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4005459	      0xbf00000000	                              mov edi, 0	     14943	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_46
0x400545e	      0xe866f6ffff	                        call sym.oappend	     14943	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_46
0x4005463	            0xeb11	                           jmp 0x4005476	     14944	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4005465	      0xbf00000000	                              mov edi, 0	     14946	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_47
0x400546a	      0xe85af6ffff	                        call sym.oappend	     14946	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_47
0x400546f	            0xeb05	                           jmp 0x4005476	     14947	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4005471	      0xe800000000	                          call 0x4005476	     14949	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_48
0x4005476	      0xe992020000	                           jmp 0x400570d	     14951	i386-dis.c	FUNCTION_23	SWITCH_1
0x400547b	     0xfb605000000	           movzx eax, byte [0x04005482] 	     14953	i386-dis.c	FUNCTION_23	SWITCH_1	IF_19
0x4005482	            0x84c0	                             test al, al	     14953	i386-dis.c	FUNCTION_23	SWITCH_1	IF_19
0x4005484	            0x7505	                           jne 0x400548b	     14953	i386-dis.c	FUNCTION_23	SWITCH_1	IF_19
0x4005486	      0xe800000000	                          call 0x400548b	     14954	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_49
0x400548b	    0x8b0500000000	            mov eax, dword [0x04005491] 	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4005491	      0x3d00010000	                          cmp eax, 0x100	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4005496	            0x741a	                            je 0x40054b2	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4005498	      0x3d00020000	                          cmp eax, 0x200	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x400549d	            0x741f	                            je 0x40054be	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x400549f	      0x3d80000000	                           cmp eax, 0x80	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40054a4	            0x7524	                           jne 0x40054ca	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40054a6	      0xbf00000000	                              mov edi, 0	     14959	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_50
0x40054ab	      0xe819f6ffff	                        call sym.oappend	     14959	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_50
0x40054b0	            0xeb1d	                           jmp 0x40054cf	     14960	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40054b2	      0xbf00000000	                              mov edi, 0	     14962	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_51
0x40054b7	      0xe80df6ffff	                        call sym.oappend	     14962	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_51
0x40054bc	            0xeb11	                           jmp 0x40054cf	     14963	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40054be	      0xbf00000000	                              mov edi, 0	     14965	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_52
0x40054c3	      0xe801f6ffff	                        call sym.oappend	     14965	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_52
0x40054c8	            0xeb05	                           jmp 0x40054cf	     14966	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40054ca	      0xe800000000	                          call 0x40054cf	     14968	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_53
0x40054cf	      0xe939020000	                           jmp 0x400570d	     14970	i386-dis.c	FUNCTION_23	SWITCH_1
0x40054d4	     0xfb605000000	           movzx eax, byte [0x040054db] 	     14972	i386-dis.c	FUNCTION_23	SWITCH_1	IF_20
0x40054db	            0x84c0	                             test al, al	     14972	i386-dis.c	FUNCTION_23	SWITCH_1	IF_20
0x40054dd	            0x7505	                           jne 0x40054e4	     14972	i386-dis.c	FUNCTION_23	SWITCH_1	IF_20
0x40054df	      0xe800000000	                          call 0x40054e4	     14973	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_54
0x40054e4	    0x8b0500000000	            mov eax, dword [0x040054ea] 	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40054ea	      0x3d00010000	                          cmp eax, 0x100	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40054ef	            0x741a	                            je 0x400550b	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40054f1	      0x3d00020000	                          cmp eax, 0x200	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40054f6	            0x741f	                            je 0x4005517	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40054f8	      0x3d80000000	                           cmp eax, 0x80	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40054fd	            0x7524	                           jne 0x4005523	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40054ff	      0xbf00000000	                              mov edi, 0	     14978	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_55
0x4005504	      0xe8c0f5ffff	                        call sym.oappend	     14978	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_55
0x4005509	            0xeb1d	                           jmp 0x4005528	     14979	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x400550b	      0xbf00000000	                              mov edi, 0	     14981	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_56
0x4005510	      0xe8b4f5ffff	                        call sym.oappend	     14981	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_56
0x4005515	            0xeb11	                           jmp 0x4005528	     14982	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4005517	      0xbf00000000	                              mov edi, 0	     14984	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_57
0x400551c	      0xe8a8f5ffff	                        call sym.oappend	     14984	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_57
0x4005521	            0xeb05	                           jmp 0x4005528	     14985	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4005523	      0xe800000000	                          call 0x4005528	     14987	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_58
0x4005528	      0xe9e0010000	                           jmp 0x400570d	     14989	i386-dis.c	FUNCTION_23	SWITCH_1
0x400552d	     0xfb605000000	           movzx eax, byte [0x04005534] 	     14991	i386-dis.c	FUNCTION_23	SWITCH_1	IF_21
0x4005534	            0x84c0	                             test al, al	     14991	i386-dis.c	FUNCTION_23	SWITCH_1	IF_21
0x4005536	            0x7505	                           jne 0x400553d	     14991	i386-dis.c	FUNCTION_23	SWITCH_1	IF_21
0x4005538	      0xe800000000	                          call 0x400553d	     14992	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_59
0x400553d	    0x8b0500000000	            mov eax, dword [0x04005543] 	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x4005543	      0x3d80000000	                           cmp eax, 0x80	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x4005548	            0x7407	                            je 0x4005551	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x400554a	      0x3d00010000	                          cmp eax, 0x100	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x400554f	            0x7510	                           jne 0x4005561	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x4005551	      0xbf00000000	                              mov edi, 0	     14998	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11	CALL_60
0x4005556	      0xe86ef5ffff	                        call sym.oappend	     14998	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11	CALL_60
0x400555b	              0x90	                                     nop	     14999	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x400555c	      0xe9ac010000	                           jmp 0x400570d	     15003	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005561	      0xe800000000	                          call 0x4005566	     15001	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11	CALL_61
0x4005566	      0xbf00000000	                              mov edi, 0	     15005	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_62
0x400556b	      0xe859f5ffff	                        call sym.oappend	     15005	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_62
0x4005570	      0xe998010000	                           jmp 0x400570d	     15006	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005575	     0xfb605000000	           movzx eax, byte [0x0400557c] 	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x400557c	            0x84c0	                             test al, al	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x400557e	            0x7505	                           jne 0x4005585	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x4005580	      0xe800000000	                          call 0x4005585	     15011	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_63
0x4005585	    0x8b0500000000	            mov eax, dword [0x0400558b] 	     15013	i386-dis.c	FUNCTION_23	SWITCH_1	IF_23
0x400558b	            0x85c0	                           test eax, eax	     15013	i386-dis.c	FUNCTION_23	SWITCH_1	IF_23
0x400558d	            0x740f	                            je 0x400559e	     15013	i386-dis.c	FUNCTION_23	SWITCH_1	IF_23
0x400558f	      0xbf00000000	                              mov edi, 0	     15014	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_64
0x4005594	      0xe830f5ffff	                        call sym.oappend	     15014	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_64
0x4005599	      0xe96f010000	                           jmp 0x400570d	     15017	i386-dis.c	FUNCTION_23	SWITCH_1
0x400559e	      0xbf00000000	                              mov edi, 0	     15016	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_65
0x40055a3	      0xe821f5ffff	                        call sym.oappend	     15016	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_65
0x40055a8	      0xe960010000	                           jmp 0x400570d	     15017	i386-dis.c	FUNCTION_23	SWITCH_1
0x40055ad	     0xfb605000000	           movzx eax, byte [0x040055b4] 	     15020	i386-dis.c	FUNCTION_23	SWITCH_1	IF_24
0x40055b4	            0x84c0	                             test al, al	     15020	i386-dis.c	FUNCTION_23	SWITCH_1	IF_24
0x40055b6	            0x7505	                           jne 0x40055bd	     15020	i386-dis.c	FUNCTION_23	SWITCH_1	IF_24
0x40055b8	      0xe800000000	                          call 0x40055bd	     15021	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_66
0x40055bd	    0x8b0500000000	            mov eax, dword [0x040055c3] 	     15023	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25
0x40055c3	            0x85c0	                           test eax, eax	     15023	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25
0x40055c5	            0x7528	                           jne 0x40055ef	     15023	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25
0x40055c7	    0x8b0500000000	            mov eax, dword [0x040055cd] 	     15025	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	IF_26
0x40055cd	            0x85c0	                           test eax, eax	     15025	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	IF_26
0x40055cf	            0x740f	                            je 0x40055e0	     15025	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	IF_26
0x40055d1	      0xbf00000000	                              mov edi, 0	     15026	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	CALL_67
0x40055d6	      0xe8eef4ffff	                        call sym.oappend	     15026	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	CALL_67
0x40055db	      0xe92d010000	                           jmp 0x400570d	     15047	i386-dis.c	FUNCTION_23	SWITCH_1
0x40055e0	      0xbf00000000	                              mov edi, 0	     15028	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	CALL_68
0x40055e5	      0xe8dff4ffff	                        call sym.oappend	     15028	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	CALL_68
0x40055ea	      0xe91e010000	                           jmp 0x400570d	     15047	i386-dis.c	FUNCTION_23	SWITCH_1
0x40055ef	    0x8b0500000000	            mov eax, dword [0x040055f5] 	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x40055f5	      0x3d00010000	                          cmp eax, 0x100	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x40055fa	            0x741a	                            je 0x4005616	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x40055fc	      0x3d00020000	                          cmp eax, 0x200	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4005601	            0x741f	                            je 0x4005622	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4005603	      0x3d80000000	                           cmp eax, 0x80	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4005608	            0x7524	                           jne 0x400562e	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x400560a	      0xbf00000000	                              mov edi, 0	     15035	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_69
0x400560f	      0xe8b5f4ffff	                        call sym.oappend	     15035	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_69
0x4005614	            0xeb1d	                           jmp 0x4005633	     15036	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4005616	      0xbf00000000	                              mov edi, 0	     15038	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_70
0x400561b	      0xe8a9f4ffff	                        call sym.oappend	     15038	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_70
0x4005620	            0xeb11	                           jmp 0x4005633	     15039	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4005622	      0xbf00000000	                              mov edi, 0	     15041	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_71
0x4005627	      0xe89df4ffff	                        call sym.oappend	     15041	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_71
0x400562c	            0xeb05	                           jmp 0x4005633	     15042	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x400562e	      0xe800000000	                          call 0x4005633	     15044	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_72
0x4005633	      0xe9d5000000	                           jmp 0x400570d	     15047	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005638	     0xfb605000000	           movzx eax, byte [0x0400563f] 	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x400563f	            0x84c0	                             test al, al	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x4005641	            0x740a	                            je 0x400564d	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x4005643	    0x8b0500000000	            mov eax, dword [0x04005649] 	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x4005649	            0x85c0	                           test eax, eax	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x400564b	            0x7505	                           jne 0x4005652	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x400564d	      0xe800000000	                          call 0x4005652	     15051	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_73
0x4005652	    0x8b0500000000	            mov eax, dword [0x04005658] 	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4005658	      0x3d00010000	                          cmp eax, 0x100	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x400565d	            0x741a	                            je 0x4005679	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x400565f	      0x3d00020000	                          cmp eax, 0x200	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4005664	            0x741f	                            je 0x4005685	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4005666	      0x3d80000000	                           cmp eax, 0x80	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x400566b	            0x7524	                           jne 0x4005691	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x400566d	      0xbf00000000	                              mov edi, 0	     15056	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_74
0x4005672	      0xe852f4ffff	                        call sym.oappend	     15056	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_74
0x4005677	            0xeb1d	                           jmp 0x4005696	     15057	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4005679	      0xbf00000000	                              mov edi, 0	     15059	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_75
0x400567e	      0xe846f4ffff	                        call sym.oappend	     15059	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_75
0x4005683	            0xeb11	                           jmp 0x4005696	     15060	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4005685	      0xbf00000000	                              mov edi, 0	     15062	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_76
0x400568a	      0xe83af4ffff	                        call sym.oappend	     15062	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_76
0x400568f	            0xeb05	                           jmp 0x4005696	     15063	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4005691	      0xe800000000	                          call 0x4005696	     15065	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_77
0x4005696	            0xeb75	                           jmp 0x400570d	     15068	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005698	     0xfb605000000	           movzx eax, byte [0x0400569f] 	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x400569f	            0x84c0	                             test al, al	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x40056a1	            0x740d	                            je 0x40056b0	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x40056a3	    0x8b0500000000	            mov eax, dword [0x040056a9] 	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x40056a9	      0x3d80000000	                           cmp eax, 0x80	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x40056ae	            0x7405	                            je 0x40056b5	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x40056b0	      0xe800000000	                          call 0x40056b5	     15071	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_78
0x40056b5	    0x8b0500000000	            mov eax, dword [0x040056bb] 	     15072	i386-dis.c	FUNCTION_23	SWITCH_1	IF_29
0x40056bb	            0x85c0	                           test eax, eax	     15072	i386-dis.c	FUNCTION_23	SWITCH_1	IF_29
0x40056bd	            0x740c	                            je 0x40056cb	     15072	i386-dis.c	FUNCTION_23	SWITCH_1	IF_29
0x40056bf	      0xbf00000000	                              mov edi, 0	     15073	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_79
0x40056c4	      0xe800f4ffff	                        call sym.oappend	     15073	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_79
0x40056c9	            0xeb42	                           jmp 0x400570d	     15076	i386-dis.c	FUNCTION_23	SWITCH_1
0x40056cb	      0xbf00000000	                              mov edi, 0	     15075	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_80
0x40056d0	      0xe8f4f3ffff	                        call sym.oappend	     15075	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_80
0x40056d5	            0xeb36	                           jmp 0x400570d	     15076	i386-dis.c	FUNCTION_23	SWITCH_1
0x40056d7	     0xfb605000000	           movzx eax, byte [0x040056de] 	     15078	i386-dis.c	FUNCTION_23	SWITCH_1	IF_30
0x40056de	            0x84c0	                             test al, al	     15078	i386-dis.c	FUNCTION_23	SWITCH_1	IF_30
0x40056e0	            0x7505	                           jne 0x40056e7	     15078	i386-dis.c	FUNCTION_23	SWITCH_1	IF_30
0x40056e2	      0xe800000000	                          call 0x40056e7	     15079	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_81
0x40056e7	    0x8b0500000000	            mov eax, dword [0x040056ed] 	     15080	i386-dis.c	FUNCTION_23	SWITCH_1	IF_31
0x40056ed	            0x85c0	                           test eax, eax	     15080	i386-dis.c	FUNCTION_23	SWITCH_1	IF_31
0x40056ef	            0x740c	                            je 0x40056fd	     15080	i386-dis.c	FUNCTION_23	SWITCH_1	IF_31
0x40056f1	      0xbf00000000	                              mov edi, 0	     15081	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_82
0x40056f6	      0xe8cef3ffff	                        call sym.oappend	     15081	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_82
0x40056fb	            0xeb10	                           jmp 0x400570d	     15084	i386-dis.c	FUNCTION_23	SWITCH_1
0x40056fd	      0xbf00000000	                              mov edi, 0	     15083	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_83
0x4005702	      0xe8c2f3ffff	                        call sym.oappend	     15083	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_83
0x4005707	            0xeb04	                           jmp 0x400570d	     15084	i386-dis.c	FUNCTION_23	SWITCH_1
0x4005709	              0x90	                                     nop	     15087	i386-dis.c	FUNCTION_23	SWITCH_1
0x400570a	            0xeb01	                           jmp 0x400570d	     15087	i386-dis.c	FUNCTION_23	SWITCH_1
0x400570c	              0x90	                                     nop	     14784	i386-dis.c	FUNCTION_23	SWITCH_1
0x400570d	              0xc9	                                   leave	     15089	i386-dis.c	FUNCTION_23
0x400570e	              0xc3	                                     ret	     15089	i386-dis.c	FUNCTION_23
fetch_data	CALL,1:WHILE,0:functions,0:DO,0:ELSE,2:IF,3:SWITCH,0:FOR,0	68
0x4000040	              0x55	                                push rbp	       200	i386-dis.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       200	i386-dis.c	FUNCTION_1
0x4000044	        0x4883ec30	                           sub rsp, 0x30	       200	i386-dis.c	FUNCTION_1
0x4000048	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       200	i386-dis.c	FUNCTION_1
0x400004c	        0x488975d0	             mov qword [rbp - 0x30], rsi	       200	i386-dis.c	FUNCTION_1
0x4000050	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       202	i386-dis.c	FUNCTION_1
0x4000054	        0x488b4068	            mov rax, qword [rax + 0x68] 	       202	i386-dis.c	FUNCTION_1
0x4000058	        0x488945f0	             mov qword [rbp - 0x10], rax	       202	i386-dis.c	FUNCTION_1
0x400005c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       203	i386-dis.c	FUNCTION_1
0x4000060	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       203	i386-dis.c	FUNCTION_1
0x4000064	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       203	i386-dis.c	FUNCTION_1
0x4000068	          0x488b00	                    mov rax, qword [rax]	       203	i386-dis.c	FUNCTION_1
0x400006b	          0x4889c1	                            mov rcx, rax	       203	i386-dis.c	FUNCTION_1
0x400006e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       203	i386-dis.c	FUNCTION_1
0x4000072	        0x4883c008	                              add rax, 8	       203	i386-dis.c	FUNCTION_1
0x4000076	          0x4829c1	                            sub rcx, rax	       203	i386-dis.c	FUNCTION_1
0x4000079	          0x4889c8	                            mov rax, rcx	       203	i386-dis.c	FUNCTION_1
0x400007c	          0x4801d0	                            add rax, rdx	       203	i386-dis.c	FUNCTION_1
0x400007f	        0x488945f8	                mov qword [rbp - 8], rax	       203	i386-dis.c	FUNCTION_1
0x4000083	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4000087	        0x4883c008	                              add rax, 8	       205	i386-dis.c	FUNCTION_1	IF_1
0x400008b	        0x4883c014	                           add rax, 0x14	       205	i386-dis.c	FUNCTION_1	IF_1
0x400008f	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4000093	            0x7238	                            jb 0x40000cd	       205	i386-dis.c	FUNCTION_1	IF_1
0x4000095	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4000099	        0x488b4070	            mov rax, qword [rax + 0x70] 	       206	i386-dis.c	FUNCTION_1	IF_1
0x400009d	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       208	i386-dis.c	FUNCTION_1	IF_1
0x40000a1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       208	i386-dis.c	FUNCTION_1	IF_1
0x40000a5	          0x488b12	                    mov rdx, qword [rdx]	       208	i386-dis.c	FUNCTION_1	IF_1
0x40000a8	          0x4829d1	                            sub rcx, rdx	       208	i386-dis.c	FUNCTION_1	IF_1
0x40000ab	          0x4889ca	                            mov rdx, rcx	       208	i386-dis.c	FUNCTION_1	IF_1
0x40000ae	          0x4189d0	                            mov r8d, edx	       206	i386-dis.c	FUNCTION_1	IF_1
0x40000b1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40000b5	          0x488b32	                    mov rsi, qword [rdx]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40000b8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40000bc	        0x488b7df8	                mov rdi, qword [rbp - 8]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40000c0	          0x4889d1	                            mov rcx, rdx	       206	i386-dis.c	FUNCTION_1	IF_1
0x40000c3	          0x4489c2	                            mov edx, r8d	       206	i386-dis.c	FUNCTION_1	IF_1
0x40000c6	            0xffd0	                                call rax	       206	i386-dis.c	FUNCTION_1	IF_1
0x40000c8	          0x8945ec	             mov dword [rbp - 0x14], eax	       206	i386-dis.c	FUNCTION_1	IF_1
0x40000cb	            0xeb07	                           jmp 0x40000d4	       206	i386-dis.c	FUNCTION_1	IF_1
0x40000cd	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x40000d4	        0x837dec00	               cmp dword [rbp - 0x14], 0	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40000d8	            0x7440	                            je 0x400011a	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40000da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40000de	          0x488b00	                    mov rax, qword [rax]	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40000e1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40000e5	        0x4883c208	                              add rdx, 8	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40000e9	          0x4839d0	                            cmp rax, rdx	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40000ec	            0x7517	                           jne 0x4000105	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40000ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40000f2	        0x488b4078	            mov rax, qword [rax + 0x78] 	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40000f6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40000fa	        0x488b75f8	                mov rsi, qword [rbp - 8]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40000fe	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4000101	            0x89cf	                            mov edi, ecx	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4000103	            0xffd0	                                call rax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4000105	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4000109	        0x4883c030	                           add rax, 0x30	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400010d	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4000112	          0x4889c7	                            mov rdi, rax	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4000115	      0xe800000000	                          call 0x400011a	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400011a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400011e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4000122	          0x488910	                    mov qword [rax], rdx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4000125	      0xb801000000	                              mov eax, 1	       224	i386-dis.c	FUNCTION_1
0x400012a	              0xc9	                                   leave	       225	i386-dis.c	FUNCTION_1
0x400012b	              0xc3	                                     ret	       225	i386-dis.c	FUNCTION_1
NOP_Fixup1	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,1:SWITCH,0:FOR,0	28
0x4008981	              0x55	                                push rbp	     16692	i386-dis.c	FUNCTION_60
0x4008982	          0x4889e5	                            mov rbp, rsp	     16692	i386-dis.c	FUNCTION_60
0x4008985	        0x4883ec10	                           sub rsp, 0x10	     16692	i386-dis.c	FUNCTION_60
0x4008989	          0x897dfc	                mov dword [rbp - 4], edi	     16692	i386-dis.c	FUNCTION_60
0x400898c	          0x8975f8	                mov dword [rbp - 8], esi	     16692	i386-dis.c	FUNCTION_60
0x400898f	    0x8b0500000000	            mov eax, dword [0x04008995] 	     16693	i386-dis.c	FUNCTION_60	IF_1
0x4008995	      0x2500020000	                          and eax, 0x200	     16693	i386-dis.c	FUNCTION_60	IF_1
0x400899a	            0x85c0	                           test eax, eax	     16693	i386-dis.c	FUNCTION_60	IF_1
0x400899c	            0x7520	                           jne 0x40089be	     16693	i386-dis.c	FUNCTION_60	IF_1
0x400899e	    0x8b0500000000	            mov eax, dword [0x040089a4] 	     16694	i386-dis.c	FUNCTION_60	IF_1
0x40089a4	            0x85c0	                           test eax, eax	     16694	i386-dis.c	FUNCTION_60	IF_1
0x40089a6	            0x7427	                            je 0x40089cf	     16694	i386-dis.c	FUNCTION_60	IF_1
0x40089a8	    0x8b0500000000	            mov eax, dword [0x040089ae] 	     16695	i386-dis.c	FUNCTION_60	IF_1
0x40089ae	          0x83f848	                           cmp eax, 0x48	     16695	i386-dis.c	FUNCTION_60	IF_1
0x40089b1	            0x741c	                            je 0x40089cf	     16695	i386-dis.c	FUNCTION_60	IF_1
0x40089b3	    0x8b0500000000	            mov eax, dword [0x040089b9] 	     16696	i386-dis.c	FUNCTION_60	IF_1
0x40089b9	          0x83f802	                              cmp eax, 2	     16696	i386-dis.c	FUNCTION_60	IF_1
0x40089bc	            0x7511	                           jne 0x40089cf	     16696	i386-dis.c	FUNCTION_60	IF_1
0x40089be	          0x8b55f8	                mov edx, dword [rbp - 8]	     16697	i386-dis.c	FUNCTION_60	CALL_1
0x40089c1	          0x8b45fc	                mov eax, dword [rbp - 4]	     16697	i386-dis.c	FUNCTION_60	CALL_1
0x40089c4	            0x89d6	                            mov esi, edx	     16697	i386-dis.c	FUNCTION_60	CALL_1
0x40089c6	            0x89c7	                            mov edi, eax	     16697	i386-dis.c	FUNCTION_60	CALL_1
0x40089c8	      0xe891e5ffff	                         call sym.OP_REG	     16697	i386-dis.c	FUNCTION_60	CALL_1
0x40089cd	            0xeb0a	                           jmp 0x40089d9	     16697	i386-dis.c	FUNCTION_60	CALL_1
0x40089cf	    0xc70500000000	       mov dword [0x040089d9], 0x706f6e 	     16699	i386-dis.c	FUNCTION_60	CALL_2
0x40089d9	              0x90	                                     nop	     16700	i386-dis.c	FUNCTION_60
0x40089da	              0xc9	                                   leave	     16700	i386-dis.c	FUNCTION_60
0x40089db	              0xc3	                                     ret	     16700	i386-dis.c	FUNCTION_60
OP_T	CALL,2:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	16
0x400815d	              0x55	                                push rbp	     16390	i386-dis.c	FUNCTION_48
0x400815e	          0x4889e5	                            mov rbp, rsp	     16390	i386-dis.c	FUNCTION_48
0x4008161	        0x4883ec10	                           sub rsp, 0x10	     16390	i386-dis.c	FUNCTION_48
0x4008165	          0x897dfc	                mov dword [rbp - 4], edi	     16390	i386-dis.c	FUNCTION_48
0x4008168	          0x8975f8	                mov dword [rbp - 8], esi	     16390	i386-dis.c	FUNCTION_48
0x400816b	    0x8b0500000000	            mov eax, dword [0x04008171] 	     16391	i386-dis.c	FUNCTION_48	CALL_1
0x4008171	            0x89c2	                            mov edx, eax	     16391	i386-dis.c	FUNCTION_48	CALL_1
0x4008173	      0xbe00000000	                              mov esi, 0	     16391	i386-dis.c	FUNCTION_48	CALL_1
0x4008178	      0xbf00000000	                              mov edi, 0	     16391	i386-dis.c	FUNCTION_48	CALL_1
0x400817d	      0xb800000000	                              mov eax, 0	     16391	i386-dis.c	FUNCTION_48	CALL_1
0x4008182	      0xe800000000	                          call 0x4008187	     16391	i386-dis.c	FUNCTION_48	CALL_1
0x4008187	      0xbf00000000	                              mov edi, 0	     16392	i386-dis.c	FUNCTION_48	CALL_2
0x400818c	      0xe82cb1ffff	            call sym.oappend_maybe_intel	     16392	i386-dis.c	FUNCTION_48	CALL_2
0x4008191	              0x90	                                     nop	     16393	i386-dis.c	FUNCTION_48
0x4008192	              0xc9	                                   leave	     16393	i386-dis.c	FUNCTION_48
0x4008193	              0xc3	                                     ret	     16393	i386-dis.c	FUNCTION_48
MOVBE_Fixup	CALL,2:WHILE,0:functions,0:DO,0:ELSE,2:IF,4:SWITCH,1:FOR,0	74
0x400a516	              0x55	                                push rbp	     17821	i386-dis.c	FUNCTION_96
0x400a517	          0x4889e5	                            mov rbp, rsp	     17821	i386-dis.c	FUNCTION_96
0x400a51a	        0x4883ec20	                           sub rsp, 0x20	     17821	i386-dis.c	FUNCTION_96
0x400a51e	          0x897dec	             mov dword [rbp - 0x14], edi	     17821	i386-dis.c	FUNCTION_96
0x400a521	          0x8975e8	             mov dword [rbp - 0x18], esi	     17821	i386-dis.c	FUNCTION_96
0x400a524	    0x488b05000000	            mov rax, qword [0x0400a52b] 	     17823	i386-dis.c	FUNCTION_96
0x400a52b	        0x488945f8	                mov qword [rbp - 8], rax	     17823	i386-dis.c	FUNCTION_96
0x400a52f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17825	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a532	          0x83f804	                              cmp eax, 4	     17825	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a535	     0xf859a000000	                           jne 0x400a5d5	     17825	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a53b	     0xfb605000000	           movzx eax, byte [0x0400a542] 	     17828	i386-dis.c	FUNCTION_96	SWITCH_1	IF_1
0x400a542	            0x84c0	                             test al, al	     17828	i386-dis.c	FUNCTION_96	SWITCH_1	IF_1
0x400a544	     0xf85b9000000	                           jne 0x400a603	     17828	i386-dis.c	FUNCTION_96	SWITCH_1	IF_1
0x400a54a	    0x8b0500000000	            mov eax, dword [0x0400a550] 	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a550	          0x83e008	                              and eax, 8	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a553	            0x85c0	                           test eax, eax	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a555	            0x740f	                            je 0x400a566	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a557	    0x8b0500000000	            mov eax, dword [0x0400a55d] 	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a55d	          0x83c848	                            or eax, 0x48	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a560	    0x890500000000	            mov dword [0x0400a566], eax 	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a566	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x400a569	          0x83e004	                              and eax, 4	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x400a56c	            0x85c0	                           test eax, eax	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x400a56e	            0x747e	                            je 0x400a5ee	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x400a570	    0x8b0500000000	            mov eax, dword [0x0400a576] 	     17834	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x400a576	          0x83e008	                              and eax, 8	     17834	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x400a579	            0x85c0	                           test eax, eax	     17834	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x400a57b	            0x7411	                            je 0x400a58e	     17834	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x400a57d	        0x488b45f8	                mov rax, qword [rbp - 8]	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x400a581	        0x488d5001	                      lea rdx, [rax + 1]	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x400a585	        0x488955f8	                mov qword [rbp - 8], rdx	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x400a589	          0xc60071	                    mov byte [rax], 0x71	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x400a58c	            0xeb60	                           jmp 0x400a5ee	     17845	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a58e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     17838	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x400a591	          0x83e001	                              and eax, 1	     17838	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x400a594	            0x85c0	                           test eax, eax	     17838	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x400a596	            0x7411	                            je 0x400a5a9	     17838	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x400a598	        0x488b45f8	                mov rax, qword [rbp - 8]	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x400a59c	        0x488d5001	                      lea rdx, [rax + 1]	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x400a5a0	        0x488955f8	                mov qword [rbp - 8], rdx	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x400a5a4	          0xc6006c	                    mov byte [rax], 0x6c	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x400a5a7	            0xeb0f	                           jmp 0x400a5b8	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x400a5a9	        0x488b45f8	                mov rax, qword [rbp - 8]	     17841	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	ELSE_2
0x400a5ad	        0x488d5001	                      lea rdx, [rax + 1]	     17841	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	ELSE_2
0x400a5b1	        0x488955f8	                mov qword [rbp - 8], rdx	     17841	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	ELSE_2
0x400a5b5	          0xc60077	                    mov byte [rax], 0x77	     17841	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	ELSE_2
0x400a5b8	    0x8b0500000000	            mov eax, dword [0x0400a5be] 	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x400a5be	      0x2500020000	                          and eax, 0x200	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x400a5c3	            0x89c2	                            mov edx, eax	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x400a5c5	    0x8b0500000000	            mov eax, dword [0x0400a5cb] 	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x400a5cb	             0x9d0	                             or eax, edx	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x400a5cd	    0x890500000000	            mov dword [0x0400a5d3], eax 	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x400a5d3	            0xeb19	                           jmp 0x400a5ee	     17845	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a5d5	      0xbe00000000	                              mov esi, 0	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x400a5da	      0xbf00000000	                              mov edi, 0	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x400a5df	      0xe800000000	                          call 0x400a5e4	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x400a5e4	          0x4889c7	                            mov rdi, rax	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x400a5e7	      0xe8dda4ffff	                        call sym.oappend	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x400a5ec	            0xeb01	                           jmp 0x400a5ef	     17848	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a5ee	              0x90	                                     nop	     17845	i386-dis.c	FUNCTION_96	SWITCH_1
0x400a5ef	        0x488b45f8	                mov rax, qword [rbp - 8]	     17850	i386-dis.c	FUNCTION_96
0x400a5f3	    0x488905000000	            mov qword [0x0400a5fa], rax 	     17850	i386-dis.c	FUNCTION_96
0x400a5fa	        0x488b45f8	                mov rax, qword [rbp - 8]	     17851	i386-dis.c	FUNCTION_96
0x400a5fe	          0xc60000	                       mov byte [rax], 0	     17851	i386-dis.c	FUNCTION_96
0x400a601	            0xeb01	                           jmp 0x400a604	     17851	i386-dis.c	FUNCTION_96
0x400a603	              0x90	                                     nop	     17829	i386-dis.c	FUNCTION_96	SWITCH_1	IF_1
0x400a604	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     17854	i386-dis.c	FUNCTION_96	CALL_2
0x400a607	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17854	i386-dis.c	FUNCTION_96	CALL_2
0x400a60a	            0x89d6	                            mov esi, edx	     17854	i386-dis.c	FUNCTION_96	CALL_2
0x400a60c	            0x89c7	                            mov edi, eax	     17854	i386-dis.c	FUNCTION_96	CALL_2
0x400a60e	      0xe800e3ffff	                           call sym.OP_M	     17854	i386-dis.c	FUNCTION_96	CALL_2
0x400a613	              0x90	                                     nop	     17855	i386-dis.c	FUNCTION_96
0x400a614	              0xc9	                                   leave	     17855	i386-dis.c	FUNCTION_96
0x400a615	              0xc3	                                     ret	     17855	i386-dis.c	FUNCTION_96
OP_EX_VexW	CALL,3:WHILE,0:functions,0:DO,0:ELSE,1:IF,4:SWITCH,0:FOR,0	53
0x4009cd4	              0x55	                                push rbp	     17505	i386-dis.c	FUNCTION_86
0x4009cd5	          0x4889e5	                            mov rbp, rsp	     17505	i386-dis.c	FUNCTION_86
0x4009cd8	        0x4883ec20	                           sub rsp, 0x20	     17505	i386-dis.c	FUNCTION_86
0x4009cdc	          0x897dec	             mov dword [rbp - 0x14], edi	     17505	i386-dis.c	FUNCTION_86
0x4009cdf	          0x8975e8	             mov dword [rbp - 0x18], esi	     17505	i386-dis.c	FUNCTION_86
0x4009ce2	    0xc745fcffffff	        mov dword [rbp - 4], 0xffffffff 	     17506	i386-dis.c	FUNCTION_86
0x4009ce9	     0xfb605000000	           movzx eax, byte [0x04009cf0] 	     17508	i386-dis.c	FUNCTION_86	IF_1
0x4009cf0	            0x84c0	                             test al, al	     17508	i386-dis.c	FUNCTION_86	IF_1
0x4009cf2	            0x7546	                           jne 0x4009d3a	     17508	i386-dis.c	FUNCTION_86	IF_1
0x4009cf4	     0xfb605000000	           movzx eax, byte [0x04009cfb] 	     17511	i386-dis.c	FUNCTION_86	IF_1
0x4009cfb	            0x84c0	                             test al, al	     17511	i386-dis.c	FUNCTION_86	IF_1
0x4009cfd	            0x7505	                           jne 0x4009d04	     17511	i386-dis.c	FUNCTION_86	IF_1
0x4009cff	      0xe800000000	                          call 0x4009d04	     17511	i386-dis.c	FUNCTION_86	IF_1
0x4009d04	    0x488b05000000	            mov rax, qword [0x04009d0b] 	     17512	i386-dis.c	FUNCTION_86	IF_1
0x4009d0b	        0x4883c001	                              add rax, 1	     17512	i386-dis.c	FUNCTION_86	IF_1
0x4009d0f	    0x488905000000	            mov qword [0x04009d16], rax 	     17512	i386-dis.c	FUNCTION_86	IF_1
0x4009d16	    0x8b0500000000	            mov eax, dword [0x04009d1c] 	     17514	i386-dis.c	FUNCTION_86	IF_1	IF_2
0x4009d1c	            0x85c0	                           test eax, eax	     17514	i386-dis.c	FUNCTION_86	IF_1	IF_2
0x4009d1e	            0x743c	                            je 0x4009d5c	     17514	i386-dis.c	FUNCTION_86	IF_1	IF_2
0x4009d20	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4009d23	      0xbe00000000	                              mov esi, 0	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4009d28	            0x89c7	                            mov edi, eax	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4009d2a	      0xe87dfaffff	                   call sym.get_vex_imm8	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4009d2f	          0xc0e804	                               shr al, 4	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4009d32	           0xfb6c0	                           movzx eax, al	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4009d35	          0x8945fc	                mov dword [rbp - 4], eax	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4009d38	            0xeb22	                           jmp 0x4009d5c	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4009d3a	    0x8b0500000000	            mov eax, dword [0x04009d40] 	     17519	i386-dis.c	FUNCTION_86	ELSE_1	IF_3
0x4009d40	            0x85c0	                           test eax, eax	     17519	i386-dis.c	FUNCTION_86	ELSE_1	IF_3
0x4009d42	            0x7518	                           jne 0x4009d5c	     17519	i386-dis.c	FUNCTION_86	ELSE_1	IF_3
0x4009d44	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4009d47	      0xbe01000000	                              mov esi, 1	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4009d4c	            0x89c7	                            mov edi, eax	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4009d4e	      0xe859faffff	                   call sym.get_vex_imm8	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4009d53	          0xc0e804	                               shr al, 4	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4009d56	           0xfb6c0	                           movzx eax, al	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4009d59	          0x8945fc	                mov dword [rbp - 4], eax	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4009d5c	          0x8b55fc	                mov edx, dword [rbp - 4]	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x4009d5f	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x4009d62	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x4009d65	            0x89ce	                            mov esi, ecx	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x4009d67	            0x89c7	                            mov edi, eax	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x4009d69	      0xe8b2fbffff	                   call sym.OP_EX_VexReg	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x4009d6e	     0xfb605000000	           movzx eax, byte [0x04009d75] 	     17525	i386-dis.c	FUNCTION_86	IF_4
0x4009d75	            0x84c0	                             test al, al	     17525	i386-dis.c	FUNCTION_86	IF_4
0x4009d77	            0x7412	                            je 0x4009d8b	     17525	i386-dis.c	FUNCTION_86	IF_4
0x4009d79	    0x488b05000000	            mov rax, qword [0x04009d80] 	     17526	i386-dis.c	FUNCTION_86	IF_4
0x4009d80	        0x4883c001	                              add rax, 1	     17526	i386-dis.c	FUNCTION_86	IF_4
0x4009d84	    0x488905000000	            mov qword [0x04009d8b], rax 	     17526	i386-dis.c	FUNCTION_86	IF_4
0x4009d8b	    0xc60500000000	                mov byte [0x04009d92], 1	     17527	i386-dis.c	FUNCTION_86
0x4009d92	              0x90	                                     nop	     17528	i386-dis.c	FUNCTION_86
0x4009d93	              0xc9	                                   leave	     17528	i386-dis.c	FUNCTION_86
0x4009d94	              0xc3	                                     ret	     17528	i386-dis.c	FUNCTION_86
ptr_reg	CALL,1:WHILE,0:functions,0:DO,0:ELSE,3:IF,3:SWITCH,0:FOR,0	75
0x4007d8f	              0x55	                                push rbp	     16279	i386-dis.c	FUNCTION_43
0x4007d90	          0x4889e5	                            mov rbp, rsp	     16279	i386-dis.c	FUNCTION_43
0x4007d93	        0x4883ec20	                           sub rsp, 0x20	     16279	i386-dis.c	FUNCTION_43
0x4007d97	          0x897dec	             mov dword [rbp - 0x14], edi	     16279	i386-dis.c	FUNCTION_43
0x4007d9a	          0x8975e8	             mov dword [rbp - 0x18], esi	     16279	i386-dis.c	FUNCTION_43
0x4007d9d	    0x488b05000000	            mov rax, qword [0x04007da4] 	     16282	i386-dis.c	FUNCTION_43
0x4007da4	        0x488d5001	                      lea rdx, [rax + 1]	     16282	i386-dis.c	FUNCTION_43
0x4007da8	    0x488915000000	            mov qword [0x04007daf], rdx 	     16282	i386-dis.c	FUNCTION_43
0x4007daf	     0xfb615000000	           movzx edx, byte [0x04007db6] 	     16282	i386-dis.c	FUNCTION_43
0x4007db6	            0x8810	                      mov byte [rax], dl	     16282	i386-dis.c	FUNCTION_43
0x4007db8	    0x8b0500000000	            mov eax, dword [0x04007dbe] 	     16283	i386-dis.c	FUNCTION_43
0x4007dbe	      0x2500040000	                          and eax, 0x400	     16283	i386-dis.c	FUNCTION_43
0x4007dc3	            0x89c2	                            mov edx, eax	     16283	i386-dis.c	FUNCTION_43
0x4007dc5	    0x8b0500000000	            mov eax, dword [0x04007dcb] 	     16283	i386-dis.c	FUNCTION_43
0x4007dcb	             0x9d0	                             or eax, edx	     16283	i386-dis.c	FUNCTION_43
0x4007dcd	    0x890500000000	            mov dword [0x04007dd3], eax 	     16283	i386-dis.c	FUNCTION_43
0x4007dd3	    0x8b0500000000	            mov eax, dword [0x04007dd9] 	     16284	i386-dis.c	FUNCTION_43	IF_1
0x4007dd9	          0x83f802	                              cmp eax, 2	     16284	i386-dis.c	FUNCTION_43	IF_1
0x4007ddc	            0x7552	                           jne 0x4007e30	     16284	i386-dis.c	FUNCTION_43	IF_1
0x4007dde	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007de1	          0x83e002	                              and eax, 2	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007de4	            0x85c0	                           test eax, eax	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007de6	            0x7524	                           jne 0x4007e0c	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007de8	    0x488b05000000	            mov rax, qword [0x04007def] 	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007def	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007df2	          0x4863d2	                         movsxd rdx, edx	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007df5	        0x48c1e203	                              shl rdx, 3	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007df9	    0x4881ea600200	                          sub rdx, 0x260	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007e00	          0x4801d0	                            add rax, rdx	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007e03	          0x488b00	                    mov rax, qword [rax]	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007e06	        0x488945f8	                mov qword [rbp - 8], rax	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007e0a	            0xeb74	                           jmp 0x4007e80	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4007e0c	    0x488b05000000	            mov rax, qword [0x04007e13] 	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4007e13	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4007e16	          0x4863d2	                         movsxd rdx, edx	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4007e19	        0x48c1e203	                              shl rdx, 3	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4007e1d	    0x4881ea600200	                          sub rdx, 0x260	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4007e24	          0x4801d0	                            add rax, rdx	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4007e27	          0x488b00	                    mov rax, qword [rax]	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4007e2a	        0x488945f8	                mov qword [rbp - 8], rax	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4007e2e	            0xeb50	                           jmp 0x4007e80	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4007e30	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e33	          0x83e002	                              and eax, 2	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e36	            0x85c0	                           test eax, eax	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e38	            0x7424	                            je 0x4007e5e	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e3a	    0x488b05000000	            mov rax, qword [0x04007e41] 	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e41	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e44	          0x4863d2	                         movsxd rdx, edx	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e47	        0x48c1e203	                              shl rdx, 3	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e4b	    0x4881ea600200	                          sub rdx, 0x260	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e52	          0x4801d0	                            add rax, rdx	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e55	          0x488b00	                    mov rax, qword [rax]	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e58	        0x488945f8	                mov qword [rbp - 8], rax	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e5c	            0xeb22	                           jmp 0x4007e80	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4007e5e	    0x488b05000000	            mov rax, qword [0x04007e65] 	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4007e65	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4007e68	          0x4863d2	                         movsxd rdx, edx	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4007e6b	        0x48c1e203	                              shl rdx, 3	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4007e6f	    0x4881ea600200	                          sub rdx, 0x260	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4007e76	          0x4801d0	                            add rax, rdx	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4007e79	          0x488b00	                    mov rax, qword [rax]	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4007e7c	        0x488945f8	                mov qword [rbp - 8], rax	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4007e80	        0x488b45f8	                mov rax, qword [rbp - 8]	     16295	i386-dis.c	FUNCTION_43	CALL_1
0x4007e84	          0x4889c7	                            mov rdi, rax	     16295	i386-dis.c	FUNCTION_43	CALL_1
0x4007e87	      0xe83dccffff	                        call sym.oappend	     16295	i386-dis.c	FUNCTION_43	CALL_1
0x4007e8c	    0x488b05000000	            mov rax, qword [0x04007e93] 	     16296	i386-dis.c	FUNCTION_43
0x4007e93	        0x488d5001	                      lea rdx, [rax + 1]	     16296	i386-dis.c	FUNCTION_43
0x4007e97	    0x488915000000	            mov qword [0x04007e9e], rdx 	     16296	i386-dis.c	FUNCTION_43
0x4007e9e	     0xfb615000000	           movzx edx, byte [0x04007ea5] 	     16296	i386-dis.c	FUNCTION_43
0x4007ea5	            0x8810	                      mov byte [rax], dl	     16296	i386-dis.c	FUNCTION_43
0x4007ea7	    0x488b05000000	            mov rax, qword [0x04007eae] 	     16297	i386-dis.c	FUNCTION_43
0x4007eae	          0xc60000	                       mov byte [rax], 0	     16297	i386-dis.c	FUNCTION_43
0x4007eb1	              0x90	                                     nop	     16298	i386-dis.c	FUNCTION_43
0x4007eb2	              0xc9	                                   leave	     16298	i386-dis.c	FUNCTION_43
0x4007eb3	              0xc3	                                     ret	     16298	i386-dis.c	FUNCTION_43
REP_Fixup	CALL,4:WHILE,0:functions,0:DO,0:ELSE,0:IF,1:SWITCH,1:FOR,0	41
0x4008e95	              0x55	                                push rbp	     16923	i386-dis.c	FUNCTION_68
0x4008e96	          0x4889e5	                            mov rbp, rsp	     16923	i386-dis.c	FUNCTION_68
0x4008e99	        0x4883ec10	                           sub rsp, 0x10	     16923	i386-dis.c	FUNCTION_68
0x4008e9d	          0x897dfc	                mov dword [rbp - 4], edi	     16923	i386-dis.c	FUNCTION_68
0x4008ea0	          0x8975f8	                mov dword [rbp - 8], esi	     16923	i386-dis.c	FUNCTION_68
0x4008ea3	    0x8b0500000000	            mov eax, dword [0x04008ea9] 	     16926	i386-dis.c	FUNCTION_68	IF_1
0x4008ea9	          0x83e001	                              and eax, 1	     16926	i386-dis.c	FUNCTION_68	IF_1
0x4008eac	            0x85c0	                           test eax, eax	     16926	i386-dis.c	FUNCTION_68	IF_1
0x4008eae	            0x7413	                            je 0x4008ec3	     16926	i386-dis.c	FUNCTION_68	IF_1
0x4008eb0	    0x8b0500000000	            mov eax, dword [0x04008eb6] 	     16927	i386-dis.c	FUNCTION_68	IF_1
0x4008eb6	            0x4898	                                    cdqe	     16927	i386-dis.c	FUNCTION_68	IF_1
0x4008eb8	    0xc70485000000	                mov dword [rax*4], 0x1f3	     16927	i386-dis.c	FUNCTION_68	IF_1
0x4008ec3	          0x8b45fc	                mov eax, dword [rbp - 4]	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4008ec6	          0x83e84c	                           sub eax, 0x4c	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4008ec9	          0x83f821	                           cmp eax, 0x21	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4008ecc	            0x773f	                            ja 0x4008f0d	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4008ece	            0x89c0	                            mov eax, eax	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4008ed0	    0x488b04c50000	                  mov rax, qword [rax*8]	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4008ed8	            0xffe0	                                 jmp rax	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4008eda	          0x8b55f8	                mov edx, dword [rbp - 8]	     16934	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_1
0x4008edd	          0x8b45fc	                mov eax, dword [rbp - 4]	     16934	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_1
0x4008ee0	            0x89d6	                            mov esi, edx	     16934	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_1
0x4008ee2	            0x89c7	                            mov edi, eax	     16934	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_1
0x4008ee4	      0xe8cde2ffff	                       call sym.OP_IMREG	     16934	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_1
0x4008ee9	            0xeb27	                           jmp 0x4008f12	     16935	i386-dis.c	FUNCTION_68	SWITCH_1
0x4008eeb	          0x8b55f8	                mov edx, dword [rbp - 8]	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x4008eee	          0x8b45fc	                mov eax, dword [rbp - 4]	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x4008ef1	            0x89d6	                            mov esi, edx	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x4008ef3	            0x89c7	                            mov edi, eax	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x4008ef5	      0xe8baefffff	                       call sym.OP_ESreg	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x4008efa	            0xeb16	                           jmp 0x4008f12	     16938	i386-dis.c	FUNCTION_68	SWITCH_1
0x4008efc	          0x8b55f8	                mov edx, dword [rbp - 8]	     16940	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_3
0x4008eff	          0x8b45fc	                mov eax, dword [rbp - 4]	     16940	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_3
0x4008f02	            0x89d6	                            mov esi, edx	     16940	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_3
0x4008f04	            0x89c7	                            mov edi, eax	     16940	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_3
0x4008f06	      0xe84cf0ffff	                       call sym.OP_DSreg	     16940	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_3
0x4008f0b	            0xeb05	                           jmp 0x4008f12	     16941	i386-dis.c	FUNCTION_68	SWITCH_1
0x4008f0d	      0xe800000000	                          call 0x4008f12	     16943	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_4
0x4008f12	              0x90	                                     nop	     16946	i386-dis.c	FUNCTION_68
0x4008f13	              0xc9	                                   leave	     16946	i386-dis.c	FUNCTION_68
0x4008f14	              0xc3	                                     ret	     16946	i386-dis.c	FUNCTION_68
OP_Vex_2src	CALL,2:WHILE,0:functions,0:DO,0:ELSE,1:IF,3:SWITCH,0:FOR,0	60
0x4009b15	              0x55	                                push rbp	     17445	i386-dis.c	FUNCTION_83
0x4009b16	          0x4889e5	                            mov rbp, rsp	     17445	i386-dis.c	FUNCTION_83
0x4009b19	        0x4883ec20	                           sub rsp, 0x20	     17445	i386-dis.c	FUNCTION_83
0x4009b1d	          0x897dec	             mov dword [rbp - 0x14], edi	     17445	i386-dis.c	FUNCTION_83
0x4009b20	          0x8975e8	             mov dword [rbp - 0x18], esi	     17445	i386-dis.c	FUNCTION_83
0x4009b23	    0x8b0500000000	            mov eax, dword [0x04009b29] 	     17446	i386-dis.c	FUNCTION_83	IF_1
0x4009b29	          0x83f803	                              cmp eax, 3	     17446	i386-dis.c	FUNCTION_83	IF_1
0x4009b2c	            0x7557	                           jne 0x4009b85	     17446	i386-dis.c	FUNCTION_83	IF_1
0x4009b2e	    0x8b0500000000	            mov eax, dword [0x04009b34] 	     17448	i386-dis.c	FUNCTION_83	IF_1
0x4009b34	          0x8945fc	                mov dword [rbp - 4], eax	     17448	i386-dis.c	FUNCTION_83	IF_1
0x4009b37	    0x8b0500000000	            mov eax, dword [0x04009b3d] 	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009b3d	          0x83e001	                              and eax, 1	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009b40	            0x85c0	                           test eax, eax	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009b42	            0x740f	                            je 0x4009b53	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009b44	    0x8b0500000000	            mov eax, dword [0x04009b4a] 	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009b4a	          0x83c841	                            or eax, 0x41	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009b4d	    0x890500000000	            mov dword [0x04009b53], eax 	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009b53	    0x8b0500000000	            mov eax, dword [0x04009b59] 	     17450	i386-dis.c	FUNCTION_83	IF_1	IF_2
0x4009b59	          0x83e001	                              and eax, 1	     17450	i386-dis.c	FUNCTION_83	IF_1	IF_2
0x4009b5c	            0x85c0	                           test eax, eax	     17450	i386-dis.c	FUNCTION_83	IF_1	IF_2
0x4009b5e	            0x7404	                            je 0x4009b64	     17450	i386-dis.c	FUNCTION_83	IF_1	IF_2
0x4009b60	        0x8345fc08	                  add dword [rbp - 4], 8	     17451	i386-dis.c	FUNCTION_83	IF_1	IF_2
0x4009b64	    0x488b05000000	            mov rax, qword [0x04009b6b] 	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009b6b	          0x8b55fc	                mov edx, dword [rbp - 4]	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009b6e	          0x4863d2	                         movsxd rdx, edx	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009b71	        0x48c1e203	                              shl rdx, 3	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009b75	          0x4801d0	                            add rax, rdx	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009b78	          0x488b00	                    mov rax, qword [rax]	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009b7b	          0x4889c7	                            mov rdi, rax	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009b7e	      0xe846afffff	                        call sym.oappend	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009b83	            0xeb5f	                           jmp 0x4009be4	     17464	i386-dis.c	FUNCTION_83
0x4009b85	     0xfb605000000	           movzx eax, byte [0x04009b8c] 	     17456	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b8c	            0x84c0	                             test al, al	     17456	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b8e	            0x7445	                            je 0x4009bd5	     17456	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b90	        0x837dec04	               cmp dword [rbp - 0x14], 4	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b94	            0x7406	                            je 0x4009b9c	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b96	        0x837dec05	               cmp dword [rbp - 0x14], 5	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b9a	            0x7539	                           jne 0x4009bd5	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b9c	    0x8b0500000000	            mov eax, dword [0x04009ba2] 	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009ba2	      0x2500020000	                          and eax, 0x200	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009ba7	            0x85c0	                           test eax, eax	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009ba9	            0x7407	                            je 0x4009bb2	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009bab	      0xb80d000000	                            mov eax, 0xd	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009bb0	            0xeb05	                           jmp 0x4009bb7	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009bb2	      0xb80a000000	                            mov eax, 0xa	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009bb7	          0x8945ec	             mov dword [rbp - 0x14], eax	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009bba	    0x8b0500000000	            mov eax, dword [0x04009bc0] 	     17460	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009bc0	      0x2500020000	                          and eax, 0x200	     17460	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009bc5	            0x89c2	                            mov edx, eax	     17460	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009bc7	    0x8b0500000000	            mov eax, dword [0x04009bcd] 	     17460	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009bcd	             0x9d0	                             or eax, edx	     17460	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009bcf	    0x890500000000	            mov dword [0x04009bd5], eax 	     17460	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009bd5	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     17462	i386-dis.c	FUNCTION_83	ELSE_1	CALL_2
0x4009bd8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     17462	i386-dis.c	FUNCTION_83	ELSE_1	CALL_2
0x4009bdb	            0x89d6	                            mov esi, edx	     17462	i386-dis.c	FUNCTION_83	ELSE_1	CALL_2
0x4009bdd	            0x89c7	                            mov edi, eax	     17462	i386-dis.c	FUNCTION_83	ELSE_1	CALL_2
0x4009bdf	      0xe849cbffff	                           call sym.OP_E	     17462	i386-dis.c	FUNCTION_83	ELSE_1	CALL_2
0x4009be4	              0x90	                                     nop	     17464	i386-dis.c	FUNCTION_83
0x4009be5	              0xc9	                                   leave	     17464	i386-dis.c	FUNCTION_83
0x4009be6	              0xc3	                                     ret	     17464	i386-dis.c	FUNCTION_83
print_insn_i386_intel	CALL,1:WHILE,0:functions,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0	13
0x400078e	              0x55	                                push rbp	     12683	i386-dis.c	FUNCTION_5
0x400078f	          0x4889e5	                            mov rbp, rsp	     12683	i386-dis.c	FUNCTION_5
0x4000792	        0x4883ec10	                           sub rsp, 0x10	     12683	i386-dis.c	FUNCTION_5
0x4000796	        0x48897df8	                mov qword [rbp - 8], rdi	     12683	i386-dis.c	FUNCTION_5
0x400079a	        0x488975f0	             mov qword [rbp - 0x10], rsi	     12683	i386-dis.c	FUNCTION_5
0x400079e	    0xc60500000000	                mov byte [0x040007a5], 1	     12684	i386-dis.c	FUNCTION_5
0x40007a5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     12686	i386-dis.c	FUNCTION_5	CALL_1
0x40007a9	        0x488b45f8	                mov rax, qword [rbp - 8]	     12686	i386-dis.c	FUNCTION_5	CALL_1
0x40007ad	          0x4889d6	                            mov rsi, rdx	     12686	i386-dis.c	FUNCTION_5	CALL_1
0x40007b0	          0x4889c7	                            mov rdi, rax	     12686	i386-dis.c	FUNCTION_5	CALL_1
0x40007b3	      0xe892130000	                     call sym.print_insn	     12686	i386-dis.c	FUNCTION_5	CALL_1
0x40007b8	              0xc9	                                   leave	     12687	i386-dis.c	FUNCTION_5
0x40007b9	              0xc3	                                     ret	     12687	i386-dis.c	FUNCTION_5
