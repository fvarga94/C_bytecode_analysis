rpl_mbrtowc	FOR,1:functions,0:SWITCH,0:ELSE,0:CALL,4:DO,0:WHILE,0:IF,9	45
0x4000040	              0x55	                                push rbp	       335	mbrtowc.c	FUNCTION_2
0x4000041	          0x4889e5	                            mov rbp, rsp	       335	mbrtowc.c	FUNCTION_2
0x4000044	        0x4883ec40	                           sub rsp, 0x40	       335	mbrtowc.c	FUNCTION_2
0x4000048	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       335	mbrtowc.c	FUNCTION_2
0x400004c	        0x488975d0	             mov qword [rbp - 0x30], rsi	       335	mbrtowc.c	FUNCTION_2
0x4000050	        0x488955c8	             mov qword [rbp - 0x38], rdx	       335	mbrtowc.c	FUNCTION_2
0x4000054	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       335	mbrtowc.c	FUNCTION_2
0x4000058	    0x64488b042528	                mov rax, qword fs:[0x28]	       335	mbrtowc.c	FUNCTION_2
0x4000061	        0x488945f8	                mov qword [rbp - 8], rax	       335	mbrtowc.c	FUNCTION_2
0x4000065	            0x31c0	                            xor eax, eax	       335	mbrtowc.c	FUNCTION_2
0x4000067	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       353	mbrtowc.c	FUNCTION_2	IF_3
0x400006c	            0x7508	                           jne 0x4000076	       353	mbrtowc.c	FUNCTION_2	IF_3
0x400006e	        0x488d45ec	                   lea rax, [rbp - 0x14]	       354	mbrtowc.c	FUNCTION_2	IF_3
0x4000072	        0x488945d8	             mov qword [rbp - 0x28], rax	       354	mbrtowc.c	FUNCTION_2	IF_3
0x4000076	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       388	mbrtowc.c	FUNCTION_2	CALL_3
0x400007a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       388	mbrtowc.c	FUNCTION_2	CALL_3
0x400007e	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       388	mbrtowc.c	FUNCTION_2	CALL_3
0x4000082	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       388	mbrtowc.c	FUNCTION_2	CALL_3
0x4000086	          0x4889c7	                            mov rdi, rax	       388	mbrtowc.c	FUNCTION_2	CALL_3
0x4000089	      0xe800000000	                          call 0x400008e	       388	mbrtowc.c	FUNCTION_2	CALL_3
0x400008e	        0x488945f0	             mov qword [rbp - 0x10], rax	       388	mbrtowc.c	FUNCTION_2	CALL_3
0x4000092	      0x48837df0fd	cmp qword [rbp - 0x10], 0xfffffffffffffffd	       396	mbrtowc.c	FUNCTION_2	IF_9	CALL_4
0x4000097	            0x7633	                           jbe 0x40000cc	       396	mbrtowc.c	FUNCTION_2	IF_9	CALL_4
0x4000099	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       396	mbrtowc.c	FUNCTION_2	IF_9	CALL_4
0x400009e	            0x742c	                            je 0x40000cc	       396	mbrtowc.c	FUNCTION_2	IF_9	CALL_4
0x40000a0	      0xbf00000000	                              mov edi, 0	       396	mbrtowc.c	FUNCTION_2	IF_9	CALL_4
0x40000a5	      0xe800000000	                          call 0x40000aa	       396	mbrtowc.c	FUNCTION_2	IF_9	CALL_4
0x40000aa	          0x83f001	                              xor eax, 1	       396	mbrtowc.c	FUNCTION_2	IF_9	CALL_4
0x40000ad	            0x84c0	                             test al, al	       396	mbrtowc.c	FUNCTION_2	IF_9	CALL_4
0x40000af	            0x741b	                            je 0x40000cc	       396	mbrtowc.c	FUNCTION_2	IF_9	CALL_4
0x40000b1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       398	mbrtowc.c	FUNCTION_2	IF_9
0x40000b5	           0xfb600	                   movzx eax, byte [rax]	       398	mbrtowc.c	FUNCTION_2	IF_9
0x40000b8	          0x8845eb	               mov byte [rbp - 0x15], al	       398	mbrtowc.c	FUNCTION_2	IF_9
0x40000bb	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       399	mbrtowc.c	FUNCTION_2	IF_9
0x40000bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       399	mbrtowc.c	FUNCTION_2	IF_9
0x40000c3	            0x8910	                    mov dword [rax], edx	       399	mbrtowc.c	FUNCTION_2	IF_9
0x40000c5	      0xb801000000	                              mov eax, 1	       400	mbrtowc.c	FUNCTION_2	IF_9
0x40000ca	            0xeb04	                           jmp 0x40000d0	       400	mbrtowc.c	FUNCTION_2	IF_9
0x40000cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       404	mbrtowc.c	FUNCTION_2
0x40000d0	        0x488b7df8	                mov rdi, qword [rbp - 8]	       405	mbrtowc.c	FUNCTION_2
0x40000d4	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       405	mbrtowc.c	FUNCTION_2
0x40000dd	            0x7405	                            je 0x40000e4	       405	mbrtowc.c	FUNCTION_2
0x40000df	      0xe800000000	                          call 0x40000e4	       405	mbrtowc.c	FUNCTION_2
0x40000e4	              0xc9	                                   leave	       405	mbrtowc.c	FUNCTION_2
0x40000e5	              0xc3	                                     ret	       405	mbrtowc.c	FUNCTION_2
