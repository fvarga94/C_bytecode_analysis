bfd_getb32	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	30
0x400078d	              0x55	                                push rbp	       639	libbfd.c	FUNCTION_44
0x400078e	          0x4889e5	                            mov rbp, rsp	       639	libbfd.c	FUNCTION_44
0x4000791	        0x48897de8	             mov qword [rbp - 0x18], rdi	       639	libbfd.c	FUNCTION_44
0x4000795	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       640	libbfd.c	FUNCTION_44
0x4000799	        0x488945f0	             mov qword [rbp - 0x10], rax	       640	libbfd.c	FUNCTION_44
0x400079d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       643	libbfd.c	FUNCTION_44
0x40007a1	           0xfb600	                   movzx eax, byte [rax]	       643	libbfd.c	FUNCTION_44
0x40007a4	           0xfb6c0	                           movzx eax, al	       643	libbfd.c	FUNCTION_44
0x40007a7	        0x48c1e018	                           shl rax, 0x18	       643	libbfd.c	FUNCTION_44
0x40007ab	        0x488945f8	                mov qword [rbp - 8], rax	       643	libbfd.c	FUNCTION_44
0x40007af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       644	libbfd.c	FUNCTION_44
0x40007b3	        0x4883c001	                              add rax, 1	       644	libbfd.c	FUNCTION_44
0x40007b7	           0xfb600	                   movzx eax, byte [rax]	       644	libbfd.c	FUNCTION_44
0x40007ba	           0xfb6c0	                           movzx eax, al	       644	libbfd.c	FUNCTION_44
0x40007bd	        0x48c1e010	                           shl rax, 0x10	       644	libbfd.c	FUNCTION_44
0x40007c1	        0x480945f8	                 or qword [rbp - 8], rax	       644	libbfd.c	FUNCTION_44
0x40007c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       645	libbfd.c	FUNCTION_44
0x40007c9	        0x4883c002	                              add rax, 2	       645	libbfd.c	FUNCTION_44
0x40007cd	           0xfb600	                   movzx eax, byte [rax]	       645	libbfd.c	FUNCTION_44
0x40007d0	           0xfb6c0	                           movzx eax, al	       645	libbfd.c	FUNCTION_44
0x40007d3	        0x48c1e008	                              shl rax, 8	       645	libbfd.c	FUNCTION_44
0x40007d7	        0x480945f8	                 or qword [rbp - 8], rax	       645	libbfd.c	FUNCTION_44
0x40007db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       646	libbfd.c	FUNCTION_44
0x40007df	        0x4883c003	                              add rax, 3	       646	libbfd.c	FUNCTION_44
0x40007e3	           0xfb600	                   movzx eax, byte [rax]	       646	libbfd.c	FUNCTION_44
0x40007e6	           0xfb6c0	                           movzx eax, al	       646	libbfd.c	FUNCTION_44
0x40007e9	        0x480945f8	                 or qword [rbp - 8], rax	       646	libbfd.c	FUNCTION_44
0x40007ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       647	libbfd.c	FUNCTION_44
0x40007f1	              0x5d	                                 pop rbp	       648	libbfd.c	FUNCTION_44
0x40007f2	              0xc3	                                     ret	       648	libbfd.c	FUNCTION_44
bfd_putb64	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	48
0x4000d35	              0x55	                                push rbp	       804	libbfd.c	FUNCTION_54
0x4000d36	          0x4889e5	                            mov rbp, rsp	       804	libbfd.c	FUNCTION_54
0x4000d39	        0x48897de8	             mov qword [rbp - 0x18], rdi	       804	libbfd.c	FUNCTION_54
0x4000d3d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       804	libbfd.c	FUNCTION_54
0x4000d41	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       806	libbfd.c	FUNCTION_54
0x4000d45	        0x488945f8	                mov qword [rbp - 8], rax	       806	libbfd.c	FUNCTION_54
0x4000d49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       807	libbfd.c	FUNCTION_54
0x4000d4d	        0x48c1e838	                           shr rax, 0x38	       807	libbfd.c	FUNCTION_54
0x4000d51	            0x89c2	                            mov edx, eax	       807	libbfd.c	FUNCTION_54
0x4000d53	        0x488b45f8	                mov rax, qword [rbp - 8]	       807	libbfd.c	FUNCTION_54
0x4000d57	            0x8810	                      mov byte [rax], dl	       807	libbfd.c	FUNCTION_54
0x4000d59	        0x488b45f8	                mov rax, qword [rbp - 8]	       808	libbfd.c	FUNCTION_54
0x4000d5d	        0x4883c001	                              add rax, 1	       808	libbfd.c	FUNCTION_54
0x4000d61	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       808	libbfd.c	FUNCTION_54
0x4000d65	        0x48c1ea30	                           shr rdx, 0x30	       808	libbfd.c	FUNCTION_54
0x4000d69	            0x8810	                      mov byte [rax], dl	       808	libbfd.c	FUNCTION_54
0x4000d6b	        0x488b45f8	                mov rax, qword [rbp - 8]	       809	libbfd.c	FUNCTION_54
0x4000d6f	        0x4883c002	                              add rax, 2	       809	libbfd.c	FUNCTION_54
0x4000d73	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       809	libbfd.c	FUNCTION_54
0x4000d77	        0x48c1ea28	                           shr rdx, 0x28	       809	libbfd.c	FUNCTION_54
0x4000d7b	            0x8810	                      mov byte [rax], dl	       809	libbfd.c	FUNCTION_54
0x4000d7d	        0x488b45f8	                mov rax, qword [rbp - 8]	       810	libbfd.c	FUNCTION_54
0x4000d81	        0x4883c003	                              add rax, 3	       810	libbfd.c	FUNCTION_54
0x4000d85	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       810	libbfd.c	FUNCTION_54
0x4000d89	        0x48c1ea20	                           shr rdx, 0x20	       810	libbfd.c	FUNCTION_54
0x4000d8d	            0x8810	                      mov byte [rax], dl	       810	libbfd.c	FUNCTION_54
0x4000d8f	        0x488b45f8	                mov rax, qword [rbp - 8]	       811	libbfd.c	FUNCTION_54
0x4000d93	        0x4883c004	                              add rax, 4	       811	libbfd.c	FUNCTION_54
0x4000d97	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       811	libbfd.c	FUNCTION_54
0x4000d9b	        0x48c1ea18	                           shr rdx, 0x18	       811	libbfd.c	FUNCTION_54
0x4000d9f	            0x8810	                      mov byte [rax], dl	       811	libbfd.c	FUNCTION_54
0x4000da1	        0x488b45f8	                mov rax, qword [rbp - 8]	       812	libbfd.c	FUNCTION_54
0x4000da5	        0x4883c005	                              add rax, 5	       812	libbfd.c	FUNCTION_54
0x4000da9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       812	libbfd.c	FUNCTION_54
0x4000dad	        0x48c1ea10	                           shr rdx, 0x10	       812	libbfd.c	FUNCTION_54
0x4000db1	            0x8810	                      mov byte [rax], dl	       812	libbfd.c	FUNCTION_54
0x4000db3	        0x488b45f8	                mov rax, qword [rbp - 8]	       813	libbfd.c	FUNCTION_54
0x4000db7	        0x4883c006	                              add rax, 6	       813	libbfd.c	FUNCTION_54
0x4000dbb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       813	libbfd.c	FUNCTION_54
0x4000dbf	        0x48c1ea08	                              shr rdx, 8	       813	libbfd.c	FUNCTION_54
0x4000dc3	            0x8810	                      mov byte [rax], dl	       813	libbfd.c	FUNCTION_54
0x4000dc5	        0x488b45f8	                mov rax, qword [rbp - 8]	       814	libbfd.c	FUNCTION_54
0x4000dc9	        0x4883c007	                              add rax, 7	       814	libbfd.c	FUNCTION_54
0x4000dcd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       814	libbfd.c	FUNCTION_54
0x4000dd1	            0x8810	                      mov byte [rax], dl	       814	libbfd.c	FUNCTION_54
0x4000dd3	              0x90	                                     nop	       818	libbfd.c	FUNCTION_54
0x4000dd4	              0x5d	                                 pop rbp	       818	libbfd.c	FUNCTION_54
0x4000dd5	              0xc3	                                     ret	       818	libbfd.c	FUNCTION_54
_bfd_nocore_core_file_failing_signal	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	9
0x400024c	              0x55	                                push rbp	       233	libbfd.c	FUNCTION_25
0x400024d	          0x4889e5	                            mov rbp, rsp	       233	libbfd.c	FUNCTION_25
0x4000250	        0x4883ec10	                           sub rsp, 0x10	       233	libbfd.c	FUNCTION_25
0x4000254	        0x48897df8	                mov qword [rbp - 8], rdi	       233	libbfd.c	FUNCTION_25
0x4000258	      0xbf05000000	                              mov edi, 5	       234	libbfd.c	FUNCTION_25	CALL_1
0x400025d	      0xe800000000	                          call 0x4000262	       234	libbfd.c	FUNCTION_25	CALL_1
0x4000262	      0xb800000000	                              mov eax, 0	       235	libbfd.c	FUNCTION_25
0x4000267	              0xc9	                                   leave	       236	libbfd.c	FUNCTION_25
0x4000268	              0xc3	                                     ret	       236	libbfd.c	FUNCTION_25
bfd_getb16	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	18
0x40005b7	              0x55	                                push rbp	       574	libbfd.c	FUNCTION_36
0x40005b8	          0x4889e5	                            mov rbp, rsp	       574	libbfd.c	FUNCTION_36
0x40005bb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       574	libbfd.c	FUNCTION_36
0x40005bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       575	libbfd.c	FUNCTION_36
0x40005c3	        0x488945f8	                mov qword [rbp - 8], rax	       575	libbfd.c	FUNCTION_36
0x40005c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       576	libbfd.c	FUNCTION_36
0x40005cb	           0xfb600	                   movzx eax, byte [rax]	       576	libbfd.c	FUNCTION_36
0x40005ce	           0xfb6c0	                           movzx eax, al	       576	libbfd.c	FUNCTION_36
0x40005d1	          0xc1e008	                              shl eax, 8	       576	libbfd.c	FUNCTION_36
0x40005d4	            0x89c2	                            mov edx, eax	       576	libbfd.c	FUNCTION_36
0x40005d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       576	libbfd.c	FUNCTION_36
0x40005da	        0x4883c001	                              add rax, 1	       576	libbfd.c	FUNCTION_36
0x40005de	           0xfb600	                   movzx eax, byte [rax]	       576	libbfd.c	FUNCTION_36
0x40005e1	           0xfb6c0	                           movzx eax, al	       576	libbfd.c	FUNCTION_36
0x40005e4	             0x9d0	                             or eax, edx	       576	libbfd.c	FUNCTION_36
0x40005e6	            0x4898	                                    cdqe	       576	libbfd.c	FUNCTION_36
0x40005e8	              0x5d	                                 pop rbp	       577	libbfd.c	FUNCTION_36
0x40005e9	              0xc3	                                     ret	       577	libbfd.c	FUNCTION_36
_bfd_bool_bfd_bfd_true	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	7
0x40000bf	              0x55	                                push rbp	        92	libbfd.c	FUNCTION_7
0x40000c0	          0x4889e5	                            mov rbp, rsp	        92	libbfd.c	FUNCTION_7
0x40000c3	        0x48897df8	                mov qword [rbp - 8], rdi	        92	libbfd.c	FUNCTION_7
0x40000c7	        0x488975f0	             mov qword [rbp - 0x10], rsi	        92	libbfd.c	FUNCTION_7
0x40000cb	      0xb801000000	                              mov eax, 1	        93	libbfd.c	FUNCTION_7
0x40000d0	              0x5d	                                 pop rbp	        94	libbfd.c	FUNCTION_7
0x40000d1	              0xc3	                                     ret	        94	libbfd.c	FUNCTION_7
_bfd_dummy_target	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	9
0x4000286	              0x55	                                push rbp	       250	libbfd.c	FUNCTION_27
0x4000287	          0x4889e5	                            mov rbp, rsp	       250	libbfd.c	FUNCTION_27
0x400028a	        0x4883ec10	                           sub rsp, 0x10	       250	libbfd.c	FUNCTION_27
0x400028e	        0x48897df8	                mov qword [rbp - 8], rdi	       250	libbfd.c	FUNCTION_27
0x4000292	      0xbf03000000	                              mov edi, 3	       251	libbfd.c	FUNCTION_27	CALL_1
0x4000297	      0xe800000000	                          call 0x400029c	       251	libbfd.c	FUNCTION_27	CALL_1
0x400029c	      0xb800000000	                              mov eax, 0	       252	libbfd.c	FUNCTION_27
0x40002a1	              0xc9	                                   leave	       253	libbfd.c	FUNCTION_27
0x40002a2	              0xc3	                                     ret	       253	libbfd.c	FUNCTION_27
_bfd_void_bfd_link	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	7
0x40001a1	              0x55	                                push rbp	       174	libbfd.c	FUNCTION_18
0x40001a2	          0x4889e5	                            mov rbp, rsp	       174	libbfd.c	FUNCTION_18
0x40001a5	        0x48897df8	                mov qword [rbp - 8], rdi	       174	libbfd.c	FUNCTION_18
0x40001a9	        0x488975f0	             mov qword [rbp - 0x10], rsi	       174	libbfd.c	FUNCTION_18
0x40001ad	              0x90	                                     nop	       175	libbfd.c	FUNCTION_18
0x40001ae	              0x5d	                                 pop rbp	       175	libbfd.c	FUNCTION_18
0x40001af	              0xc3	                                     ret	       175	libbfd.c	FUNCTION_18
bfd_putb32	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	28
0x4000c83	              0x55	                                push rbp	       784	libbfd.c	FUNCTION_52
0x4000c84	          0x4889e5	                            mov rbp, rsp	       784	libbfd.c	FUNCTION_52
0x4000c87	        0x48897de8	             mov qword [rbp - 0x18], rdi	       784	libbfd.c	FUNCTION_52
0x4000c8b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       784	libbfd.c	FUNCTION_52
0x4000c8f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       785	libbfd.c	FUNCTION_52
0x4000c93	        0x488945f8	                mov qword [rbp - 8], rax	       785	libbfd.c	FUNCTION_52
0x4000c97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       786	libbfd.c	FUNCTION_52
0x4000c9b	        0x48c1e818	                           shr rax, 0x18	       786	libbfd.c	FUNCTION_52
0x4000c9f	            0x89c2	                            mov edx, eax	       786	libbfd.c	FUNCTION_52
0x4000ca1	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	libbfd.c	FUNCTION_52
0x4000ca5	            0x8810	                      mov byte [rax], dl	       786	libbfd.c	FUNCTION_52
0x4000ca7	        0x488b45f8	                mov rax, qword [rbp - 8]	       787	libbfd.c	FUNCTION_52
0x4000cab	        0x4883c001	                              add rax, 1	       787	libbfd.c	FUNCTION_52
0x4000caf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       787	libbfd.c	FUNCTION_52
0x4000cb3	        0x48c1ea10	                           shr rdx, 0x10	       787	libbfd.c	FUNCTION_52
0x4000cb7	            0x8810	                      mov byte [rax], dl	       787	libbfd.c	FUNCTION_52
0x4000cb9	        0x488b45f8	                mov rax, qword [rbp - 8]	       788	libbfd.c	FUNCTION_52
0x4000cbd	        0x4883c002	                              add rax, 2	       788	libbfd.c	FUNCTION_52
0x4000cc1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       788	libbfd.c	FUNCTION_52
0x4000cc5	        0x48c1ea08	                              shr rdx, 8	       788	libbfd.c	FUNCTION_52
0x4000cc9	            0x8810	                      mov byte [rax], dl	       788	libbfd.c	FUNCTION_52
0x4000ccb	        0x488b45f8	                mov rax, qword [rbp - 8]	       789	libbfd.c	FUNCTION_52
0x4000ccf	        0x4883c003	                              add rax, 3	       789	libbfd.c	FUNCTION_52
0x4000cd3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       789	libbfd.c	FUNCTION_52
0x4000cd7	            0x8810	                      mov byte [rax], dl	       789	libbfd.c	FUNCTION_52
0x4000cd9	              0x90	                                     nop	       790	libbfd.c	FUNCTION_52
0x4000cda	              0x5d	                                 pop rbp	       790	libbfd.c	FUNCTION_52
0x4000cdb	              0xc3	                                     ret	       790	libbfd.c	FUNCTION_52
bfd_putb24	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	23
0x40006ff	              0x55	                                push rbp	       619	libbfd.c	FUNCTION_42
0x4000700	          0x4889e5	                            mov rbp, rsp	       619	libbfd.c	FUNCTION_42
0x4000703	        0x48897de8	             mov qword [rbp - 0x18], rdi	       619	libbfd.c	FUNCTION_42
0x4000707	        0x488975e0	             mov qword [rbp - 0x20], rsi	       619	libbfd.c	FUNCTION_42
0x400070b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       620	libbfd.c	FUNCTION_42
0x400070f	        0x488945f8	                mov qword [rbp - 8], rax	       620	libbfd.c	FUNCTION_42
0x4000713	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       621	libbfd.c	FUNCTION_42
0x4000717	        0x48c1e810	                           shr rax, 0x10	       621	libbfd.c	FUNCTION_42
0x400071b	            0x89c2	                            mov edx, eax	       621	libbfd.c	FUNCTION_42
0x400071d	        0x488b45f8	                mov rax, qword [rbp - 8]	       621	libbfd.c	FUNCTION_42
0x4000721	            0x8810	                      mov byte [rax], dl	       621	libbfd.c	FUNCTION_42
0x4000723	        0x488b45f8	                mov rax, qword [rbp - 8]	       622	libbfd.c	FUNCTION_42
0x4000727	        0x4883c001	                              add rax, 1	       622	libbfd.c	FUNCTION_42
0x400072b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       622	libbfd.c	FUNCTION_42
0x400072f	        0x48c1ea08	                              shr rdx, 8	       622	libbfd.c	FUNCTION_42
0x4000733	            0x8810	                      mov byte [rax], dl	       622	libbfd.c	FUNCTION_42
0x4000735	        0x488b45f8	                mov rax, qword [rbp - 8]	       623	libbfd.c	FUNCTION_42
0x4000739	        0x4883c002	                              add rax, 2	       623	libbfd.c	FUNCTION_42
0x400073d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       623	libbfd.c	FUNCTION_42
0x4000741	            0x8810	                      mov byte [rax], dl	       623	libbfd.c	FUNCTION_42
0x4000743	              0x90	                                     nop	       624	libbfd.c	FUNCTION_42
0x4000744	              0x5d	                                 pop rbp	       624	libbfd.c	FUNCTION_42
0x4000745	              0xc3	                                     ret	       624	libbfd.c	FUNCTION_42
bfd_getb_signed_16	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	20
0x400061d	              0x55	                                push rbp	       588	libbfd.c	FUNCTION_38
0x400061e	          0x4889e5	                            mov rbp, rsp	       588	libbfd.c	FUNCTION_38
0x4000621	        0x48897de8	             mov qword [rbp - 0x18], rdi	       588	libbfd.c	FUNCTION_38
0x4000625	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       589	libbfd.c	FUNCTION_38
0x4000629	        0x488945f8	                mov qword [rbp - 8], rax	       589	libbfd.c	FUNCTION_38
0x400062d	        0x488b45f8	                mov rax, qword [rbp - 8]	       590	libbfd.c	FUNCTION_38
0x4000631	           0xfb600	                   movzx eax, byte [rax]	       590	libbfd.c	FUNCTION_38
0x4000634	           0xfb6c0	                           movzx eax, al	       590	libbfd.c	FUNCTION_38
0x4000637	          0xc1e008	                              shl eax, 8	       590	libbfd.c	FUNCTION_38
0x400063a	            0x89c2	                            mov edx, eax	       590	libbfd.c	FUNCTION_38
0x400063c	        0x488b45f8	                mov rax, qword [rbp - 8]	       590	libbfd.c	FUNCTION_38
0x4000640	        0x4883c001	                              add rax, 1	       590	libbfd.c	FUNCTION_38
0x4000644	           0xfb600	                   movzx eax, byte [rax]	       590	libbfd.c	FUNCTION_38
0x4000647	           0xfb6c0	                           movzx eax, al	       590	libbfd.c	FUNCTION_38
0x400064a	             0x9d0	                             or eax, edx	       590	libbfd.c	FUNCTION_38
0x400064c	          0x80f480	                            xor ah, 0x80	       590	libbfd.c	FUNCTION_38
0x400064f	            0x4898	                                    cdqe	       590	libbfd.c	FUNCTION_38
0x4000651	    0x482d00800000	                         sub rax, 0x8000	       590	libbfd.c	FUNCTION_38
0x4000657	              0x5d	                                 pop rbp	       591	libbfd.c	FUNCTION_38
0x4000658	              0xc3	                                     ret	       591	libbfd.c	FUNCTION_38
_bfd_generic_get_section_contents_in_window	DO,0:WHILE,0:ELSE,1:functions,0:FOR,0:IF,6:SWITCH,0:CALL,9	12
0x4001142	              0x55	                                push rbp	       938	libbfd.c	FUNCTION_59
0x4001143	          0x4889e5	                            mov rbp, rsp	       938	libbfd.c	FUNCTION_59
0x4001146	        0x4883ec30	                           sub rsp, 0x30	       938	libbfd.c	FUNCTION_59
0x400114a	        0x48897df8	                mov qword [rbp - 8], rdi	       938	libbfd.c	FUNCTION_59
0x400114e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       938	libbfd.c	FUNCTION_59
0x4001152	        0x488955e8	             mov qword [rbp - 0x18], rdx	       938	libbfd.c	FUNCTION_59
0x4001156	        0x48894de0	             mov qword [rbp - 0x20], rcx	       938	libbfd.c	FUNCTION_59
0x400115a	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       938	libbfd.c	FUNCTION_59
0x400115e	      0xba00000000	                              mov edx, 0	       984	libbfd.c	FUNCTION_59	CALL_9
0x4001163	      0xbed8030000	                          mov esi, 0x3d8	       984	libbfd.c	FUNCTION_59	CALL_9
0x4001168	      0xbf00000000	                              mov edi, 0	       984	libbfd.c	FUNCTION_59	CALL_9
0x400116d	      0xe800000000	call sym._bfd_generic_set_section_contents	       984	libbfd.c	FUNCTION_59	CALL_9
_bfd_long_bfd_0	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	6
0x4000168	              0x55	                                push rbp	       152	libbfd.c	FUNCTION_15
0x4000169	          0x4889e5	                            mov rbp, rsp	       152	libbfd.c	FUNCTION_15
0x400016c	        0x48897df8	                mov qword [rbp - 8], rdi	       152	libbfd.c	FUNCTION_15
0x4000170	      0xb800000000	                              mov eax, 0	       153	libbfd.c	FUNCTION_15
0x4000175	              0x5d	                                 pop rbp	       154	libbfd.c	FUNCTION_15
0x4000176	              0xc3	                                     ret	       154	libbfd.c	FUNCTION_15
bfd_putl24	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	23
0x4000746	              0x55	                                push rbp	       629	libbfd.c	FUNCTION_43
0x4000747	          0x4889e5	                            mov rbp, rsp	       629	libbfd.c	FUNCTION_43
0x400074a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       629	libbfd.c	FUNCTION_43
0x400074e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       629	libbfd.c	FUNCTION_43
0x4000752	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       630	libbfd.c	FUNCTION_43
0x4000756	        0x488945f8	                mov qword [rbp - 8], rax	       630	libbfd.c	FUNCTION_43
0x400075a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       631	libbfd.c	FUNCTION_43
0x400075e	            0x89c2	                            mov edx, eax	       631	libbfd.c	FUNCTION_43
0x4000760	        0x488b45f8	                mov rax, qword [rbp - 8]	       631	libbfd.c	FUNCTION_43
0x4000764	            0x8810	                      mov byte [rax], dl	       631	libbfd.c	FUNCTION_43
0x4000766	        0x488b45f8	                mov rax, qword [rbp - 8]	       632	libbfd.c	FUNCTION_43
0x400076a	        0x4883c001	                              add rax, 1	       632	libbfd.c	FUNCTION_43
0x400076e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       632	libbfd.c	FUNCTION_43
0x4000772	        0x48c1ea08	                              shr rdx, 8	       632	libbfd.c	FUNCTION_43
0x4000776	            0x8810	                      mov byte [rax], dl	       632	libbfd.c	FUNCTION_43
0x4000778	        0x488b45f8	                mov rax, qword [rbp - 8]	       633	libbfd.c	FUNCTION_43
0x400077c	        0x4883c002	                              add rax, 2	       633	libbfd.c	FUNCTION_43
0x4000780	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       633	libbfd.c	FUNCTION_43
0x4000784	        0x48c1ea10	                           shr rdx, 0x10	       633	libbfd.c	FUNCTION_43
0x4000788	            0x8810	                      mov byte [rax], dl	       633	libbfd.c	FUNCTION_43
0x400078a	              0x90	                                     nop	       634	libbfd.c	FUNCTION_43
0x400078b	              0x5d	                                 pop rbp	       634	libbfd.c	FUNCTION_43
0x400078c	              0xc3	                                     ret	       634	libbfd.c	FUNCTION_43
_bfd_long_bfd_n1_error	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	9
0x4000177	              0x55	                                push rbp	       161	libbfd.c	FUNCTION_16
0x4000178	          0x4889e5	                            mov rbp, rsp	       161	libbfd.c	FUNCTION_16
0x400017b	        0x4883ec10	                           sub rsp, 0x10	       161	libbfd.c	FUNCTION_16
0x400017f	        0x48897df8	                mov qword [rbp - 8], rdi	       161	libbfd.c	FUNCTION_16
0x4000183	      0xbf05000000	                              mov edi, 5	       162	libbfd.c	FUNCTION_16	CALL_1
0x4000188	      0xe800000000	                          call 0x400018d	       162	libbfd.c	FUNCTION_16	CALL_1
0x400018d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       163	libbfd.c	FUNCTION_16
0x4000194	              0xc9	                                   leave	       164	libbfd.c	FUNCTION_16
0x4000195	              0xc3	                                     ret	       164	libbfd.c	FUNCTION_16
_bfd_bool_bfd_uint_true	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	7
0x40000d2	              0x55	                                push rbp	        99	libbfd.c	FUNCTION_8
0x40000d3	          0x4889e5	                            mov rbp, rsp	        99	libbfd.c	FUNCTION_8
0x40000d6	        0x48897df8	                mov qword [rbp - 8], rdi	        99	libbfd.c	FUNCTION_8
0x40000da	          0x8975f4	              mov dword [rbp - 0xc], esi	        99	libbfd.c	FUNCTION_8
0x40000dd	      0xb801000000	                              mov eax, 1	       100	libbfd.c	FUNCTION_8
0x40000e2	              0x5d	                                 pop rbp	       101	libbfd.c	FUNCTION_8
0x40000e3	              0xc3	                                     ret	       101	libbfd.c	FUNCTION_8
bfd_realloc	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,3:SWITCH,0:CALL,4	38
0x400036f	              0x55	                                push rbp	       298	libbfd.c	FUNCTION_30
0x4000370	          0x4889e5	                            mov rbp, rsp	       298	libbfd.c	FUNCTION_30
0x4000373	        0x4883ec20	                           sub rsp, 0x20	       298	libbfd.c	FUNCTION_30
0x4000377	        0x48897de8	             mov qword [rbp - 0x18], rdi	       298	libbfd.c	FUNCTION_30
0x400037b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       298	libbfd.c	FUNCTION_30
0x400037f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       300	libbfd.c	FUNCTION_30
0x4000383	        0x488945f0	             mov qword [rbp - 0x10], rax	       300	libbfd.c	FUNCTION_30
0x4000387	      0x48837de800	               cmp qword [rbp - 0x18], 0	       302	libbfd.c	FUNCTION_30	IF_1
0x400038c	            0x750e	                           jne 0x400039c	       302	libbfd.c	FUNCTION_30	IF_1
0x400038e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       303	libbfd.c	FUNCTION_30	CALL_1
0x4000392	          0x4889c7	                            mov rdi, rax	       303	libbfd.c	FUNCTION_30	CALL_1
0x4000395	      0xe800000000	                          call 0x400039a	       303	libbfd.c	FUNCTION_30	CALL_1
0x400039a	            0xeb57	                           jmp 0x40003f3	       303	libbfd.c	FUNCTION_30	CALL_1
0x400039c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       305	libbfd.c	FUNCTION_30	IF_2
0x40003a0	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       305	libbfd.c	FUNCTION_30	IF_2
0x40003a4	            0x7509	                           jne 0x40003af	       305	libbfd.c	FUNCTION_30	IF_2
0x40003a6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       307	libbfd.c	FUNCTION_30	IF_2
0x40003aa	          0x4885c0	                           test rax, rax	       307	libbfd.c	FUNCTION_30	IF_2
0x40003ad	            0x7911	                           jns 0x40003c0	       307	libbfd.c	FUNCTION_30	IF_2
0x40003af	      0xbf06000000	                              mov edi, 6	       309	libbfd.c	FUNCTION_30	IF_2	CALL_2
0x40003b4	      0xe800000000	                          call 0x40003b9	       309	libbfd.c	FUNCTION_30	IF_2	CALL_2
0x40003b9	      0xb800000000	                              mov eax, 0	       310	libbfd.c	FUNCTION_30	IF_2
0x40003be	            0xeb33	                           jmp 0x40003f3	       310	libbfd.c	FUNCTION_30	IF_2
0x40003c0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       313	libbfd.c	FUNCTION_30	CALL_3
0x40003c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       313	libbfd.c	FUNCTION_30	CALL_3
0x40003c8	          0x4889d6	                            mov rsi, rdx	       313	libbfd.c	FUNCTION_30	CALL_3
0x40003cb	          0x4889c7	                            mov rdi, rax	       313	libbfd.c	FUNCTION_30	CALL_3
0x40003ce	      0xe800000000	                          call 0x40003d3	       313	libbfd.c	FUNCTION_30	CALL_3
0x40003d3	        0x488945f8	                mov qword [rbp - 8], rax	       313	libbfd.c	FUNCTION_30	CALL_3
0x40003d7	      0x48837df800	                  cmp qword [rbp - 8], 0	       315	libbfd.c	FUNCTION_30	IF_3
0x40003dc	            0x7511	                           jne 0x40003ef	       315	libbfd.c	FUNCTION_30	IF_3
0x40003de	      0x48837df000	               cmp qword [rbp - 0x10], 0	       315	libbfd.c	FUNCTION_30	IF_3
0x40003e3	            0x740a	                            je 0x40003ef	       315	libbfd.c	FUNCTION_30	IF_3
0x40003e5	      0xbf06000000	                              mov edi, 6	       316	libbfd.c	FUNCTION_30	CALL_4
0x40003ea	      0xe800000000	                          call 0x40003ef	       316	libbfd.c	FUNCTION_30	CALL_4
0x40003ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       318	libbfd.c	FUNCTION_30
0x40003f3	              0xc9	                                   leave	       319	libbfd.c	FUNCTION_30
0x40003f4	              0xc3	                                     ret	       319	libbfd.c	FUNCTION_30
_bfd_bool_bfd_asymbol_false	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	7
0x400004f	              0x55	                                push rbp	        52	libbfd.c	FUNCTION_2
0x4000050	          0x4889e5	                            mov rbp, rsp	        52	libbfd.c	FUNCTION_2
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	        52	libbfd.c	FUNCTION_2
0x4000057	        0x488975f0	             mov qword [rbp - 0x10], rsi	        52	libbfd.c	FUNCTION_2
0x400005b	      0xb800000000	                              mov eax, 0	        53	libbfd.c	FUNCTION_2
0x4000060	              0x5d	                                 pop rbp	        54	libbfd.c	FUNCTION_2
0x4000061	              0xc3	                                     ret	        54	libbfd.c	FUNCTION_2
_bfd_norelocs_set_reloc	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	9
0x40001f8	              0x55	                                push rbp	       205	libbfd.c	FUNCTION_22
0x40001f9	          0x4889e5	                            mov rbp, rsp	       205	libbfd.c	FUNCTION_22
0x40001fc	        0x48897df8	                mov qword [rbp - 8], rdi	       205	libbfd.c	FUNCTION_22
0x4000200	        0x488975f0	             mov qword [rbp - 0x10], rsi	       205	libbfd.c	FUNCTION_22
0x4000204	        0x488955e8	             mov qword [rbp - 0x18], rdx	       205	libbfd.c	FUNCTION_22
0x4000208	          0x894de4	             mov dword [rbp - 0x1c], ecx	       205	libbfd.c	FUNCTION_22
0x400020b	              0x90	                                     nop	       207	libbfd.c	FUNCTION_22
0x400020c	              0x5d	                                 pop rbp	       207	libbfd.c	FUNCTION_22
0x400020d	              0xc3	                                     ret	       207	libbfd.c	FUNCTION_22
bfd_putl32	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	28
0x4000cdc	              0x55	                                push rbp	       794	libbfd.c	FUNCTION_53
0x4000cdd	          0x4889e5	                            mov rbp, rsp	       794	libbfd.c	FUNCTION_53
0x4000ce0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       794	libbfd.c	FUNCTION_53
0x4000ce4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       794	libbfd.c	FUNCTION_53
0x4000ce8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       795	libbfd.c	FUNCTION_53
0x4000cec	        0x488945f8	                mov qword [rbp - 8], rax	       795	libbfd.c	FUNCTION_53
0x4000cf0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       796	libbfd.c	FUNCTION_53
0x4000cf4	            0x89c2	                            mov edx, eax	       796	libbfd.c	FUNCTION_53
0x4000cf6	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	libbfd.c	FUNCTION_53
0x4000cfa	            0x8810	                      mov byte [rax], dl	       796	libbfd.c	FUNCTION_53
0x4000cfc	        0x488b45f8	                mov rax, qword [rbp - 8]	       797	libbfd.c	FUNCTION_53
0x4000d00	        0x4883c001	                              add rax, 1	       797	libbfd.c	FUNCTION_53
0x4000d04	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       797	libbfd.c	FUNCTION_53
0x4000d08	        0x48c1ea08	                              shr rdx, 8	       797	libbfd.c	FUNCTION_53
0x4000d0c	            0x8810	                      mov byte [rax], dl	       797	libbfd.c	FUNCTION_53
0x4000d0e	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	libbfd.c	FUNCTION_53
0x4000d12	        0x4883c002	                              add rax, 2	       798	libbfd.c	FUNCTION_53
0x4000d16	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       798	libbfd.c	FUNCTION_53
0x4000d1a	        0x48c1ea10	                           shr rdx, 0x10	       798	libbfd.c	FUNCTION_53
0x4000d1e	            0x8810	                      mov byte [rax], dl	       798	libbfd.c	FUNCTION_53
0x4000d20	        0x488b45f8	                mov rax, qword [rbp - 8]	       799	libbfd.c	FUNCTION_53
0x4000d24	        0x4883c003	                              add rax, 3	       799	libbfd.c	FUNCTION_53
0x4000d28	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       799	libbfd.c	FUNCTION_53
0x4000d2c	        0x48c1ea18	                           shr rdx, 0x18	       799	libbfd.c	FUNCTION_53
0x4000d30	            0x8810	                      mov byte [rax], dl	       799	libbfd.c	FUNCTION_53
0x4000d32	              0x90	                                     nop	       800	libbfd.c	FUNCTION_53
0x4000d33	              0x5d	                                 pop rbp	       800	libbfd.c	FUNCTION_53
0x4000d34	              0xc3	                                     ret	       800	libbfd.c	FUNCTION_53
bfd_getl_signed_32	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	32
0x40008ca	              0x55	                                push rbp	       678	libbfd.c	FUNCTION_47
0x40008cb	          0x4889e5	                            mov rbp, rsp	       678	libbfd.c	FUNCTION_47
0x40008ce	        0x48897de8	             mov qword [rbp - 0x18], rdi	       678	libbfd.c	FUNCTION_47
0x40008d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       679	libbfd.c	FUNCTION_47
0x40008d6	        0x488945f0	             mov qword [rbp - 0x10], rax	       679	libbfd.c	FUNCTION_47
0x40008da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       682	libbfd.c	FUNCTION_47
0x40008de	           0xfb600	                   movzx eax, byte [rax]	       682	libbfd.c	FUNCTION_47
0x40008e1	           0xfb6c0	                           movzx eax, al	       682	libbfd.c	FUNCTION_47
0x40008e4	        0x488945f8	                mov qword [rbp - 8], rax	       682	libbfd.c	FUNCTION_47
0x40008e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       683	libbfd.c	FUNCTION_47
0x40008ec	        0x4883c001	                              add rax, 1	       683	libbfd.c	FUNCTION_47
0x40008f0	           0xfb600	                   movzx eax, byte [rax]	       683	libbfd.c	FUNCTION_47
0x40008f3	           0xfb6c0	                           movzx eax, al	       683	libbfd.c	FUNCTION_47
0x40008f6	        0x48c1e008	                              shl rax, 8	       683	libbfd.c	FUNCTION_47
0x40008fa	        0x480945f8	                 or qword [rbp - 8], rax	       683	libbfd.c	FUNCTION_47
0x40008fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       684	libbfd.c	FUNCTION_47
0x4000902	        0x4883c002	                              add rax, 2	       684	libbfd.c	FUNCTION_47
0x4000906	           0xfb600	                   movzx eax, byte [rax]	       684	libbfd.c	FUNCTION_47
0x4000909	           0xfb6c0	                           movzx eax, al	       684	libbfd.c	FUNCTION_47
0x400090c	        0x48c1e010	                           shl rax, 0x10	       684	libbfd.c	FUNCTION_47
0x4000910	        0x480945f8	                 or qword [rbp - 8], rax	       684	libbfd.c	FUNCTION_47
0x4000914	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       685	libbfd.c	FUNCTION_47
0x4000918	        0x4883c003	                              add rax, 3	       685	libbfd.c	FUNCTION_47
0x400091c	           0xfb600	                   movzx eax, byte [rax]	       685	libbfd.c	FUNCTION_47
0x400091f	           0xfb6c0	                           movzx eax, al	       685	libbfd.c	FUNCTION_47
0x4000922	        0x48c1e018	                           shl rax, 0x18	       685	libbfd.c	FUNCTION_47
0x4000926	        0x480945f8	                 or qword [rbp - 8], rax	       685	libbfd.c	FUNCTION_47
0x400092a	      0xb800000080	                     mov eax, 0x80000000	       686	libbfd.c	FUNCTION_47
0x400092f	        0x483345f8	                xor rax, qword [rbp - 8]	       686	libbfd.c	FUNCTION_47
0x4000933	    0x480500000080	             add rax, 0xffffffff80000000	       686	libbfd.c	FUNCTION_47
0x4000939	              0x5d	                                 pop rbp	       687	libbfd.c	FUNCTION_47
0x400093a	              0xc3	                                     ret	       687	libbfd.c	FUNCTION_47
_bfd_bool_bfd_link_true	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	7
0x40000ac	              0x55	                                push rbp	        85	libbfd.c	FUNCTION_6
0x40000ad	          0x4889e5	                            mov rbp, rsp	        85	libbfd.c	FUNCTION_6
0x40000b0	        0x48897df8	                mov qword [rbp - 8], rdi	        85	libbfd.c	FUNCTION_6
0x40000b4	        0x488975f0	             mov qword [rbp - 0x10], rsi	        85	libbfd.c	FUNCTION_6
0x40000b8	      0xb801000000	                              mov eax, 1	        86	libbfd.c	FUNCTION_6
0x40000bd	              0x5d	                                 pop rbp	        87	libbfd.c	FUNCTION_6
0x40000be	              0xc3	                                     ret	        87	libbfd.c	FUNCTION_6
_bfd_bool_bfd_asection_bfd_asection_true	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	9
0x40000e4	              0x55	                                push rbp	       108	libbfd.c	FUNCTION_9
0x40000e5	          0x4889e5	                            mov rbp, rsp	       108	libbfd.c	FUNCTION_9
0x40000e8	        0x48897df8	                mov qword [rbp - 8], rdi	       108	libbfd.c	FUNCTION_9
0x40000ec	        0x488975f0	             mov qword [rbp - 0x10], rsi	       108	libbfd.c	FUNCTION_9
0x40000f0	        0x488955e8	             mov qword [rbp - 0x18], rdx	       108	libbfd.c	FUNCTION_9
0x40000f4	        0x48894de0	             mov qword [rbp - 0x20], rcx	       108	libbfd.c	FUNCTION_9
0x40000f8	      0xb801000000	                              mov eax, 1	       109	libbfd.c	FUNCTION_9
0x40000fd	              0x5d	                                 pop rbp	       110	libbfd.c	FUNCTION_9
0x40000fe	              0xc3	                                     ret	       110	libbfd.c	FUNCTION_9
_bfd_bool_bfd_asymbol_bfd_asymbol_true	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	9
0x40000ff	              0x55	                                push rbp	       117	libbfd.c	FUNCTION_10
0x4000100	          0x4889e5	                            mov rbp, rsp	       117	libbfd.c	FUNCTION_10
0x4000103	        0x48897df8	                mov qword [rbp - 8], rdi	       117	libbfd.c	FUNCTION_10
0x4000107	        0x488975f0	             mov qword [rbp - 0x10], rsi	       117	libbfd.c	FUNCTION_10
0x400010b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       117	libbfd.c	FUNCTION_10
0x400010f	        0x48894de0	             mov qword [rbp - 0x20], rcx	       117	libbfd.c	FUNCTION_10
0x4000113	      0xb801000000	                              mov eax, 1	       118	libbfd.c	FUNCTION_10
0x4000118	              0x5d	                                 pop rbp	       119	libbfd.c	FUNCTION_10
0x4000119	              0xc3	                                     ret	       119	libbfd.c	FUNCTION_10
bfd_log2	DO,1:WHILE,0:ELSE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,0	16
0x40011f2	              0x55	                                push rbp	      1023	libbfd.c	FUNCTION_61
0x40011f3	          0x4889e5	                            mov rbp, rsp	      1023	libbfd.c	FUNCTION_61
0x40011f6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1023	libbfd.c	FUNCTION_61
0x40011fa	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1024	libbfd.c	FUNCTION_61
0x4001201	      0x48837de801	               cmp qword [rbp - 0x18], 1	      1026	libbfd.c	FUNCTION_61	IF_1
0x4001206	            0x7705	                            ja 0x400120d	      1026	libbfd.c	FUNCTION_61	IF_1
0x4001208	          0x8b45fc	                mov eax, dword [rbp - 4]	      1027	libbfd.c	FUNCTION_61	IF_1
0x400120b	            0xeb17	                           jmp 0x4001224	      1027	libbfd.c	FUNCTION_61	IF_1
0x400120d	      0x48836de801	               sub qword [rbp - 0x18], 1	      1028	libbfd.c	FUNCTION_61
0x4001212	        0x8345fc01	                  add dword [rbp - 4], 1	      1030	libbfd.c	FUNCTION_61	DO_1
0x4001216	        0x48d16de8	               shr qword [rbp - 0x18], 1	      1031	libbfd.c	FUNCTION_61
0x400121a	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1031	libbfd.c	FUNCTION_61
0x400121f	            0x75f1	                           jne 0x4001212	      1031	libbfd.c	FUNCTION_61
0x4001221	          0x8b45fc	                mov eax, dword [rbp - 4]	      1032	libbfd.c	FUNCTION_61
0x4001224	              0x5d	                                 pop rbp	      1033	libbfd.c	FUNCTION_61
0x4001225	              0xc3	                                     ret	      1033	libbfd.c	FUNCTION_61
_bfd_norelocs_get_reloc_upper_bound	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	7
0x40001bf	              0x55	                                push rbp	       186	libbfd.c	FUNCTION_20
0x40001c0	          0x4889e5	                            mov rbp, rsp	       186	libbfd.c	FUNCTION_20
0x40001c3	        0x48897df8	                mov qword [rbp - 8], rdi	       186	libbfd.c	FUNCTION_20
0x40001c7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       186	libbfd.c	FUNCTION_20
0x40001cb	      0xb808000000	                              mov eax, 8	       187	libbfd.c	FUNCTION_20
0x40001d0	              0x5d	                                 pop rbp	       188	libbfd.c	FUNCTION_20
0x40001d1	              0xc3	                                     ret	       188	libbfd.c	FUNCTION_20
_bfd_void_bfd	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	6
0x4000196	              0x55	                                push rbp	       168	libbfd.c	FUNCTION_17
0x4000197	          0x4889e5	                            mov rbp, rsp	       168	libbfd.c	FUNCTION_17
0x400019a	        0x48897df8	                mov qword [rbp - 8], rdi	       168	libbfd.c	FUNCTION_17
0x400019e	              0x90	                                     nop	       169	libbfd.c	FUNCTION_17
0x400019f	              0x5d	                                 pop rbp	       169	libbfd.c	FUNCTION_17
0x40001a0	              0xc3	                                     ret	       169	libbfd.c	FUNCTION_17
_bfd_generic_set_section_contents	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,2:SWITCH,0:CALL,2	36
0x4001172	              0x55	                                push rbp	       998	libbfd.c	FUNCTION_60
0x4001173	          0x4889e5	                            mov rbp, rsp	       998	libbfd.c	FUNCTION_60
0x4001176	        0x4883ec30	                           sub rsp, 0x30	       998	libbfd.c	FUNCTION_60
0x400117a	        0x48897df8	                mov qword [rbp - 8], rdi	       998	libbfd.c	FUNCTION_60
0x400117e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       998	libbfd.c	FUNCTION_60
0x4001182	        0x488955e8	             mov qword [rbp - 0x18], rdx	       998	libbfd.c	FUNCTION_60
0x4001186	        0x48894de0	             mov qword [rbp - 0x20], rcx	       998	libbfd.c	FUNCTION_60
0x400118a	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       998	libbfd.c	FUNCTION_60
0x400118e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       999	libbfd.c	FUNCTION_60	IF_1
0x4001193	            0x7507	                           jne 0x400119c	       999	libbfd.c	FUNCTION_60	IF_1
0x4001195	      0xb801000000	                              mov eax, 1	      1000	libbfd.c	FUNCTION_60	IF_1
0x400119a	            0xeb54	                           jmp 0x40011f0	      1000	libbfd.c	FUNCTION_60	IF_1
0x400119c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x40011a0	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x40011a7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x40011ab	        0x488d0c02	                    lea rcx, [rdx + rax]	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x40011af	        0x488b45f8	                mov rax, qword [rbp - 8]	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x40011b3	      0xba00000000	                              mov edx, 0	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x40011b8	          0x4889ce	                            mov rsi, rcx	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x40011bb	          0x4889c7	                            mov rdi, rax	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x40011be	      0xe800000000	                          call 0x40011c3	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x40011c3	            0x85c0	                           test eax, eax	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x40011c5	            0x751d	                           jne 0x40011e4	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x40011c7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x40011cb	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x40011cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x40011d3	          0x4889ce	                            mov rsi, rcx	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x40011d6	          0x4889c7	                            mov rdi, rax	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x40011d9	      0xe800000000	                          call 0x40011de	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x40011de	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x40011e2	            0x7407	                            je 0x40011eb	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x40011e4	      0xb800000000	                              mov eax, 0	      1004	libbfd.c	FUNCTION_60	IF_2
0x40011e9	            0xeb05	                           jmp 0x40011f0	      1004	libbfd.c	FUNCTION_60	IF_2
0x40011eb	      0xb801000000	                              mov eax, 1	      1006	libbfd.c	FUNCTION_60
0x40011f0	              0xc9	                                   leave	      1007	libbfd.c	FUNCTION_60
0x40011f1	              0xc3	                                     ret	      1007	libbfd.c	FUNCTION_60
_bfd_safe_read_leb128	DO,0:WHILE,1:ELSE,0:functions,0:FOR,0:IF,3:SWITCH,0:CALL,1	57
0x40013af	              0x55	                                push rbp	      1110	libbfd.c	FUNCTION_65
0x40013b0	          0x4889e5	                            mov rbp, rsp	      1110	libbfd.c	FUNCTION_65
0x40013b3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1110	libbfd.c	FUNCTION_65
0x40013b7	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1110	libbfd.c	FUNCTION_65
0x40013bb	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1110	libbfd.c	FUNCTION_65
0x40013bf	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      1110	libbfd.c	FUNCTION_65
0x40013c2	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      1110	libbfd.c	FUNCTION_65
0x40013c6	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1111	libbfd.c	FUNCTION_65
0x40013ce	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1112	libbfd.c	FUNCTION_65
0x40013d5	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1113	libbfd.c	FUNCTION_65
0x40013dc	        0xc645ef00	                mov byte [rbp - 0x11], 0	      1114	libbfd.c	FUNCTION_65
0x40013e0	            0xeb38	                           jmp 0x400141a	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x40013e2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1118	libbfd.c	FUNCTION_65	WHILE_1	CALL_1
0x40013e6	           0xfb600	                   movzx eax, byte [rax]	      1118	libbfd.c	FUNCTION_65	WHILE_1	CALL_1
0x40013e9	          0x8845ef	               mov byte [rbp - 0x11], al	      1118	libbfd.c	FUNCTION_65	WHILE_1	CALL_1
0x40013ec	      0x488345d001	               add qword [rbp - 0x30], 1	      1119	libbfd.c	FUNCTION_65	WHILE_1
0x40013f1	        0x8345f001	               add dword [rbp - 0x10], 1	      1120	libbfd.c	FUNCTION_65	WHILE_1
0x40013f5	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x40013f9	          0x83e07f	                           and eax, 0x7f	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x40013fc	          0x4889c2	                            mov rdx, rax	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x40013ff	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4001402	            0x89c1	                            mov ecx, eax	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4001404	          0x48d3e2	                             shl rdx, cl	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4001407	          0x4889d0	                            mov rax, rdx	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x400140a	        0x480945f8	                 or qword [rbp - 8], rax	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x400140e	        0x8345f407	                add dword [rbp - 0xc], 7	      1124	libbfd.c	FUNCTION_65	WHILE_1
0x4001412	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4001416	            0x84c0	                             test al, al	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4001418	            0x790c	                           jns 0x4001426	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x400141a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x400141e	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4001422	            0x72be	                            jb 0x40013e2	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4001424	            0xeb01	                           jmp 0x4001427	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4001426	              0x90	                                     nop	      1126	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4001427	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1129	libbfd.c	FUNCTION_65	IF_2
0x400142c	            0x7409	                            je 0x4001437	      1129	libbfd.c	FUNCTION_65	IF_2
0x400142e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1130	libbfd.c	FUNCTION_65	IF_2
0x4001432	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1130	libbfd.c	FUNCTION_65	IF_2
0x4001435	            0x8910	                    mov dword [rax], edx	      1130	libbfd.c	FUNCTION_65	IF_2
0x4001437	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1132	libbfd.c	FUNCTION_65	IF_3
0x400143b	            0x7428	                            je 0x4001465	      1132	libbfd.c	FUNCTION_65	IF_3
0x400143d	        0x837df43f	            cmp dword [rbp - 0xc], 0x3f 	      1132	libbfd.c	FUNCTION_65	IF_3
0x4001441	            0x7722	                            ja 0x4001465	      1132	libbfd.c	FUNCTION_65	IF_3
0x4001443	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	      1132	libbfd.c	FUNCTION_65	IF_3
0x4001447	          0x83e040	                           and eax, 0x40	      1132	libbfd.c	FUNCTION_65	IF_3
0x400144a	            0x85c0	                           test eax, eax	      1132	libbfd.c	FUNCTION_65	IF_3
0x400144c	            0x7417	                            je 0x4001465	      1132	libbfd.c	FUNCTION_65	IF_3
0x400144e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1133	libbfd.c	FUNCTION_65	IF_3
0x4001451	      0xba01000000	                              mov edx, 1	      1133	libbfd.c	FUNCTION_65	IF_3
0x4001456	            0x89c1	                            mov ecx, eax	      1133	libbfd.c	FUNCTION_65	IF_3
0x4001458	          0x48d3e2	                             shl rdx, cl	      1133	libbfd.c	FUNCTION_65	IF_3
0x400145b	          0x4889d0	                            mov rax, rdx	      1133	libbfd.c	FUNCTION_65	IF_3
0x400145e	          0x48f7d8	                                 neg rax	      1133	libbfd.c	FUNCTION_65	IF_3
0x4001461	        0x480945f8	                 or qword [rbp - 8], rax	      1133	libbfd.c	FUNCTION_65	IF_3
0x4001465	        0x488b45f8	                mov rax, qword [rbp - 8]	      1135	libbfd.c	FUNCTION_65
0x4001469	              0x5d	                                 pop rbp	      1136	libbfd.c	FUNCTION_65
0x400146a	              0xc3	                                     ret	      1136	libbfd.c	FUNCTION_65
bfd_zmalloc2	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,2:SWITCH,0:CALL,2	26
0x40004f5	              0x55	                                push rbp	       369	libbfd.c	FUNCTION_34
0x40004f6	          0x4889e5	                            mov rbp, rsp	       369	libbfd.c	FUNCTION_34
0x40004f9	        0x4883ec20	                           sub rsp, 0x20	       369	libbfd.c	FUNCTION_34
0x40004fd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       369	libbfd.c	FUNCTION_34
0x4000501	        0x488975e0	             mov qword [rbp - 0x20], rsi	       369	libbfd.c	FUNCTION_34
0x4000505	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       370	libbfd.c	FUNCTION_34	CALL_1
0x4000509	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       370	libbfd.c	FUNCTION_34	CALL_1
0x400050d	          0x4889d6	                            mov rsi, rdx	       370	libbfd.c	FUNCTION_34	CALL_1
0x4000510	          0x4889c7	                            mov rdi, rax	       370	libbfd.c	FUNCTION_34	CALL_1
0x4000513	      0xe800000000	                          call 0x4000518	       370	libbfd.c	FUNCTION_34	CALL_1
0x4000518	        0x488945f0	             mov qword [rbp - 0x10], rax	       370	libbfd.c	FUNCTION_34	CALL_1
0x400051c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       372	libbfd.c	FUNCTION_34	IF_1
0x4000521	            0x7429	                            je 0x400054c	       372	libbfd.c	FUNCTION_34	IF_1
0x4000523	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       374	libbfd.c	FUNCTION_34	IF_1
0x4000527	      0x480faf45e0	            imul rax, qword [rbp - 0x20]	       374	libbfd.c	FUNCTION_34	IF_1
0x400052c	        0x488945f8	                mov qword [rbp - 8], rax	       374	libbfd.c	FUNCTION_34	IF_1
0x4000530	      0x48837df800	                  cmp qword [rbp - 8], 0	       376	libbfd.c	FUNCTION_34	IF_1	IF_2
0x4000535	            0x7415	                            je 0x400054c	       376	libbfd.c	FUNCTION_34	IF_1	IF_2
0x4000537	        0x488b55f8	                mov rdx, qword [rbp - 8]	       377	libbfd.c	FUNCTION_34	IF_1	CALL_2
0x400053b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       377	libbfd.c	FUNCTION_34	IF_1	CALL_2
0x400053f	      0xbe00000000	                              mov esi, 0	       377	libbfd.c	FUNCTION_34	IF_1	CALL_2
0x4000544	          0x4889c7	                            mov rdi, rax	       377	libbfd.c	FUNCTION_34	IF_1	CALL_2
0x4000547	      0xe800000000	                          call 0x400054c	       377	libbfd.c	FUNCTION_34	IF_1	CALL_2
0x400054c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       380	libbfd.c	FUNCTION_34
0x4000550	              0xc9	                                   leave	       381	libbfd.c	FUNCTION_34
0x4000551	              0xc3	                                     ret	       381	libbfd.c	FUNCTION_34
bfd_getb_signed_32	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	32
0x4000859	              0x55	                                push rbp	       665	libbfd.c	FUNCTION_46
0x400085a	          0x4889e5	                            mov rbp, rsp	       665	libbfd.c	FUNCTION_46
0x400085d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       665	libbfd.c	FUNCTION_46
0x4000861	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       666	libbfd.c	FUNCTION_46
0x4000865	        0x488945f0	             mov qword [rbp - 0x10], rax	       666	libbfd.c	FUNCTION_46
0x4000869	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       669	libbfd.c	FUNCTION_46
0x400086d	           0xfb600	                   movzx eax, byte [rax]	       669	libbfd.c	FUNCTION_46
0x4000870	           0xfb6c0	                           movzx eax, al	       669	libbfd.c	FUNCTION_46
0x4000873	        0x48c1e018	                           shl rax, 0x18	       669	libbfd.c	FUNCTION_46
0x4000877	        0x488945f8	                mov qword [rbp - 8], rax	       669	libbfd.c	FUNCTION_46
0x400087b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       670	libbfd.c	FUNCTION_46
0x400087f	        0x4883c001	                              add rax, 1	       670	libbfd.c	FUNCTION_46
0x4000883	           0xfb600	                   movzx eax, byte [rax]	       670	libbfd.c	FUNCTION_46
0x4000886	           0xfb6c0	                           movzx eax, al	       670	libbfd.c	FUNCTION_46
0x4000889	        0x48c1e010	                           shl rax, 0x10	       670	libbfd.c	FUNCTION_46
0x400088d	        0x480945f8	                 or qword [rbp - 8], rax	       670	libbfd.c	FUNCTION_46
0x4000891	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       671	libbfd.c	FUNCTION_46
0x4000895	        0x4883c002	                              add rax, 2	       671	libbfd.c	FUNCTION_46
0x4000899	           0xfb600	                   movzx eax, byte [rax]	       671	libbfd.c	FUNCTION_46
0x400089c	           0xfb6c0	                           movzx eax, al	       671	libbfd.c	FUNCTION_46
0x400089f	        0x48c1e008	                              shl rax, 8	       671	libbfd.c	FUNCTION_46
0x40008a3	        0x480945f8	                 or qword [rbp - 8], rax	       671	libbfd.c	FUNCTION_46
0x40008a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       672	libbfd.c	FUNCTION_46
0x40008ab	        0x4883c003	                              add rax, 3	       672	libbfd.c	FUNCTION_46
0x40008af	           0xfb600	                   movzx eax, byte [rax]	       672	libbfd.c	FUNCTION_46
0x40008b2	           0xfb6c0	                           movzx eax, al	       672	libbfd.c	FUNCTION_46
0x40008b5	        0x480945f8	                 or qword [rbp - 8], rax	       672	libbfd.c	FUNCTION_46
0x40008b9	      0xb800000080	                     mov eax, 0x80000000	       673	libbfd.c	FUNCTION_46
0x40008be	        0x483345f8	                xor rax, qword [rbp - 8]	       673	libbfd.c	FUNCTION_46
0x40008c2	    0x480500000080	             add rax, 0xffffffff80000000	       673	libbfd.c	FUNCTION_46
0x40008c8	              0x5d	                                 pop rbp	       674	libbfd.c	FUNCTION_46
0x40008c9	              0xc3	                                     ret	       674	libbfd.c	FUNCTION_46
bfd_realloc2	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,2	32
0x40003f5	              0x55	                                push rbp	       325	libbfd.c	FUNCTION_31
0x40003f6	          0x4889e5	                            mov rbp, rsp	       325	libbfd.c	FUNCTION_31
0x40003f9	        0x4883ec20	                           sub rsp, 0x20	       325	libbfd.c	FUNCTION_31
0x40003fd	        0x48897df8	                mov qword [rbp - 8], rdi	       325	libbfd.c	FUNCTION_31
0x4000401	        0x488975f0	             mov qword [rbp - 0x10], rsi	       325	libbfd.c	FUNCTION_31
0x4000405	        0x488955e8	             mov qword [rbp - 0x18], rdx	       325	libbfd.c	FUNCTION_31
0x4000409	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       326	libbfd.c	FUNCTION_31	IF_1
0x400040d	        0x480b45e8	              or rax, qword [rbp - 0x18]	       326	libbfd.c	FUNCTION_31	IF_1
0x4000411	          0x4889c2	                            mov rdx, rax	       326	libbfd.c	FUNCTION_31	IF_1
0x4000414	      0xb8ffffffff	                     mov eax, 0xffffffff	       326	libbfd.c	FUNCTION_31	IF_1
0x4000419	          0x4839c2	                            cmp rdx, rax	       326	libbfd.c	FUNCTION_31	IF_1
0x400041c	            0x762e	                           jbe 0x400044c	       326	libbfd.c	FUNCTION_31	IF_1
0x400041e	      0x48837de800	               cmp qword [rbp - 0x18], 0	       327	libbfd.c	FUNCTION_31	IF_1
0x4000423	            0x7427	                            je 0x400044c	       327	libbfd.c	FUNCTION_31	IF_1
0x4000425	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       328	libbfd.c	FUNCTION_31	IF_1
0x400042c	      0xba00000000	                              mov edx, 0	       328	libbfd.c	FUNCTION_31	IF_1
0x4000431	        0x48f775e8	                  div qword [rbp - 0x18]	       328	libbfd.c	FUNCTION_31	IF_1
0x4000435	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       328	libbfd.c	FUNCTION_31	IF_1
0x4000439	            0x7311	                           jae 0x400044c	       328	libbfd.c	FUNCTION_31	IF_1
0x400043b	      0xbf06000000	                              mov edi, 6	       330	libbfd.c	FUNCTION_31	IF_1	CALL_1
0x4000440	      0xe800000000	                          call 0x4000445	       330	libbfd.c	FUNCTION_31	IF_1	CALL_1
0x4000445	      0xb800000000	                              mov eax, 0	       331	libbfd.c	FUNCTION_31	IF_1
0x400044a	            0xeb1b	                           jmp 0x4000467	       331	libbfd.c	FUNCTION_31	IF_1
0x400044c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       334	libbfd.c	FUNCTION_31	CALL_2
0x4000450	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       334	libbfd.c	FUNCTION_31	CALL_2
0x4000455	          0x4889c2	                            mov rdx, rax	       334	libbfd.c	FUNCTION_31	CALL_2
0x4000458	        0x488b45f8	                mov rax, qword [rbp - 8]	       334	libbfd.c	FUNCTION_31	CALL_2
0x400045c	          0x4889d6	                            mov rsi, rdx	       334	libbfd.c	FUNCTION_31	CALL_2
0x400045f	          0x4889c7	                            mov rdi, rax	       334	libbfd.c	FUNCTION_31	CALL_2
0x4000462	      0xe800000000	                          call 0x4000467	       334	libbfd.c	FUNCTION_31	CALL_2
0x4000467	              0xc9	                                   leave	       335	libbfd.c	FUNCTION_31
0x4000468	              0xc3	                                     ret	       335	libbfd.c	FUNCTION_31
_bfd_generic_get_section_contents	DO,0:WHILE,0:ELSE,1:functions,0:FOR,0:IF,5:SWITCH,0:CALL,8	107
0x4000fb3	              0x55	                                push rbp	       889	libbfd.c	FUNCTION_58
0x4000fb4	          0x4889e5	                            mov rbp, rsp	       889	libbfd.c	FUNCTION_58
0x4000fb7	        0x4883ec40	                           sub rsp, 0x40	       889	libbfd.c	FUNCTION_58
0x4000fbb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       889	libbfd.c	FUNCTION_58
0x4000fbf	        0x488975e0	             mov qword [rbp - 0x20], rsi	       889	libbfd.c	FUNCTION_58
0x4000fc3	        0x488955d8	             mov qword [rbp - 0x28], rdx	       889	libbfd.c	FUNCTION_58
0x4000fc7	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       889	libbfd.c	FUNCTION_58
0x4000fcb	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       889	libbfd.c	FUNCTION_58
0x4000fcf	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       891	libbfd.c	FUNCTION_58	IF_1
0x4000fd4	            0x750a	                           jne 0x4000fe0	       891	libbfd.c	FUNCTION_58	IF_1
0x4000fd6	      0xb801000000	                              mov eax, 1	       892	libbfd.c	FUNCTION_58	IF_1
0x4000fdb	      0xe960010000	                           jmp 0x4001140	       892	libbfd.c	FUNCTION_58	IF_1
0x4000fe0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       894	libbfd.c	FUNCTION_58	IF_2
0x4000fe4	         0xfb64024	           movzx eax, byte [rax + 0x24] 	       894	libbfd.c	FUNCTION_58	IF_2
0x4000fe8	          0x83e030	                           and eax, 0x30	       894	libbfd.c	FUNCTION_58	IF_2
0x4000feb	            0x84c0	                             test al, al	       894	libbfd.c	FUNCTION_58	IF_2
0x4000fed	            0x743e	                            je 0x400102d	       894	libbfd.c	FUNCTION_58	IF_2
0x4000fef	      0xbe00000000	                              mov esi, 0	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x4000ff4	      0xbf00000000	                              mov edi, 0	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x4000ff9	      0xe800000000	                          call 0x4000ffe	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x4000ffe	          0x4889c1	                            mov rcx, rax	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x4001001	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4001005	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4001009	          0x4889c6	                            mov rsi, rax	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x400100c	          0x4889cf	                            mov rdi, rcx	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x400100f	      0xb800000000	                              mov eax, 0	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4001014	      0xe800000000	                          call 0x4001019	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4001019	      0xbf05000000	                              mov edi, 5	       900	libbfd.c	FUNCTION_58	IF_2	CALL_3
0x400101e	      0xe800000000	                          call 0x4001023	       900	libbfd.c	FUNCTION_58	IF_2	CALL_3
0x4001023	      0xb800000000	                              mov eax, 0	       901	libbfd.c	FUNCTION_58	IF_2
0x4001028	      0xe913010000	                           jmp 0x4001140	       901	libbfd.c	FUNCTION_58	IF_2
0x400102d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       909	libbfd.c	FUNCTION_58	IF_3
0x4001031	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       909	libbfd.c	FUNCTION_58	IF_3
0x4001035	          0x83e018	                           and eax, 0x18	       909	libbfd.c	FUNCTION_58	IF_3
0x4001038	            0x3c10	                            cmp al, 0x10	       909	libbfd.c	FUNCTION_58	IF_3
0x400103a	            0x741b	                            je 0x4001057	       909	libbfd.c	FUNCTION_58	IF_3
0x400103c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       909	libbfd.c	FUNCTION_58	IF_3
0x4001040	        0x488b4040	            mov rax, qword [rax + 0x40] 	       909	libbfd.c	FUNCTION_58	IF_3
0x4001044	          0x4885c0	                           test rax, rax	       909	libbfd.c	FUNCTION_58	IF_3
0x4001047	            0x740e	                            je 0x4001057	       909	libbfd.c	FUNCTION_58	IF_3
0x4001049	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       910	libbfd.c	FUNCTION_58	IF_3
0x400104d	        0x488b4040	            mov rax, qword [rax + 0x40] 	       910	libbfd.c	FUNCTION_58	IF_3
0x4001051	        0x488945f8	                mov qword [rbp - 8], rax	       910	libbfd.c	FUNCTION_58	IF_3
0x4001055	            0xeb0c	                           jmp 0x4001063	       910	libbfd.c	FUNCTION_58	IF_3
0x4001057	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       912	libbfd.c	FUNCTION_58	ELSE_1
0x400105b	        0x488b4038	            mov rax, qword [rax + 0x38] 	       912	libbfd.c	FUNCTION_58	ELSE_1
0x400105f	        0x488945f8	                mov qword [rbp - 8], rax	       912	libbfd.c	FUNCTION_58	ELSE_1
0x4001063	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       913	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4001067	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       913	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x400106b	          0x4801d0	                            add rax, rdx	       913	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x400106e	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       913	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4001072	            0x7267	                            jb 0x40010db	       913	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4001074	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4001078	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x400107c	          0x4801d0	                            add rax, rdx	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x400107f	        0x483b45f8	                cmp rax, qword [rbp - 8]	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4001083	            0x7756	                            ja 0x40010db	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4001085	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       915	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4001089	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       915	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4001090	          0x4885c0	                           test rax, rax	       915	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4001093	            0x7457	                            je 0x40010ec	       915	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4001095	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x4001099	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x40010a0	         0xfb64048	           movzx eax, byte [rax + 0x48] 	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x40010a4	          0x83e001	                              and eax, 1	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x40010a7	            0x84c0	                             test al, al	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x40010a9	            0x7541	                           jne 0x40010ec	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x40010ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x40010af	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x40010b6	          0x4889c2	                            mov rdx, rax	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x40010b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x40010bd	          0x4801c2	                            add rdx, rax	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x40010c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x40010c4	          0x4801c2	                            add rdx, rax	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x40010c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       918	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_5
0x40010cb	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       918	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_5
0x40010d2	        0x488b4008	                mov rax, qword [rax + 8]	       918	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_5
0x40010d6	          0x4839c2	                            cmp rdx, rax	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x40010d9	            0x7611	                           jbe 0x40010ec	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x40010db	      0xbf05000000	                              mov edi, 5	       920	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_6
0x40010e0	      0xe800000000	                          call 0x40010e5	       920	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_6
0x40010e5	      0xb800000000	                              mov eax, 0	       921	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x40010ea	            0xeb54	                           jmp 0x4001140	       921	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x40010ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x40010f0	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x40010f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x40010fb	        0x488d0c02	                    lea rcx, [rdx + rax]	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x40010ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4001103	      0xba00000000	                              mov edx, 0	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4001108	          0x4889ce	                            mov rsi, rcx	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x400110b	          0x4889c7	                            mov rdi, rax	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x400110e	      0xe800000000	                          call 0x4001113	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4001113	            0x85c0	                           test eax, eax	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4001115	            0x751d	                           jne 0x4001134	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4001117	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x400111b	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x400111f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x4001123	          0x4889ce	                            mov rsi, rcx	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x4001126	          0x4889c7	                            mov rdi, rax	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x4001129	      0xe800000000	                          call 0x400112e	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x400112e	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x4001132	            0x7407	                            je 0x400113b	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x4001134	      0xb800000000	                              mov eax, 0	       926	libbfd.c	FUNCTION_58	IF_5
0x4001139	            0xeb05	                           jmp 0x4001140	       926	libbfd.c	FUNCTION_58	IF_5
0x400113b	      0xb801000000	                              mov eax, 1	       928	libbfd.c	FUNCTION_58
0x4001140	              0xc9	                                   leave	       929	libbfd.c	FUNCTION_58
0x4001141	              0xc3	                                     ret	       929	libbfd.c	FUNCTION_58
_bfd_warn_deprecated	DO,0:WHILE,0:ELSE,1:functions,0:FOR,0:IF,2:SWITCH,0:CALL,6	55
0x4001263	              0x55	                                push rbp	      1051	libbfd.c	FUNCTION_63
0x4001264	          0x4889e5	                            mov rbp, rsp	      1051	libbfd.c	FUNCTION_63
0x4001267	        0x4883ec20	                           sub rsp, 0x20	      1051	libbfd.c	FUNCTION_63
0x400126b	        0x48897df8	                mov qword [rbp - 8], rdi	      1051	libbfd.c	FUNCTION_63
0x400126f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1051	libbfd.c	FUNCTION_63
0x4001273	          0x8955ec	             mov dword [rbp - 0x14], edx	      1051	libbfd.c	FUNCTION_63
0x4001276	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1051	libbfd.c	FUNCTION_63
0x400127a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1055	libbfd.c	FUNCTION_63	IF_1
0x400127e	    0x488b05000000	            mov rax, qword [0x04001285] 	      1055	libbfd.c	FUNCTION_63	IF_1
0x4001285	          0x4809d0	                             or rax, rdx	      1055	libbfd.c	FUNCTION_63	IF_1
0x4001288	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      1055	libbfd.c	FUNCTION_63	IF_1
0x400128c	     0xf84ad000000	                            je 0x400133f	      1055	libbfd.c	FUNCTION_63	IF_1
0x4001292	    0x488b05000000	            mov rax, qword [0x04001299] 	      1057	libbfd.c	FUNCTION_63	IF_1	CALL_1
0x4001299	          0x4889c7	                            mov rdi, rax	      1057	libbfd.c	FUNCTION_63	IF_1	CALL_1
0x400129c	      0xe800000000	                          call 0x40012a1	      1057	libbfd.c	FUNCTION_63	IF_1	CALL_1
0x40012a1	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1060	libbfd.c	FUNCTION_63	IF_1	IF_2
0x40012a6	            0x7440	                            je 0x40012e8	      1060	libbfd.c	FUNCTION_63	IF_1	IF_2
0x40012a8	      0xbe00000000	                              mov esi, 0	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012ad	      0xbf00000000	                              mov edi, 0	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012b2	      0xe800000000	                          call 0x40012b7	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012b7	          0x4989c2	                            mov r10, rax	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012ba	    0x488b05000000	            mov rax, qword [0x040012c1] 	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012c1	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012c5	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012c8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012cc	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012d0	          0x4989f9	                             mov r9, rdi	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012d3	          0x4189f0	                            mov r8d, esi	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012d6	          0x4c89d6	                            mov rsi, r10	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012d9	          0x4889c7	                            mov rdi, rax	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012dc	      0xb800000000	                              mov eax, 0	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012e1	      0xe800000000	                          call 0x40012e6	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012e6	            0xeb2d	                           jmp 0x4001315	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_3
0x40012e8	      0xbe00000000	                              mov esi, 0	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_5
0x40012ed	      0xbf00000000	                              mov edi, 0	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_5
0x40012f2	      0xe800000000	                          call 0x40012f7	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_5
0x40012f7	          0x4889c1	                            mov rcx, rax	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_5
0x40012fa	    0x488b05000000	            mov rax, qword [0x04001301] 	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_5
0x4001301	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_5
0x4001305	          0x4889ce	                            mov rsi, rcx	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_5
0x4001308	          0x4889c7	                            mov rdi, rax	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_5
0x400130b	      0xb800000000	                              mov eax, 0	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_5
0x4001310	      0xe800000000	                          call 0x4001315	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_5
0x4001315	    0x488b05000000	            mov rax, qword [0x0400131c] 	      1066	libbfd.c	FUNCTION_63	IF_1	CALL_6
0x400131c	          0x4889c7	                            mov rdi, rax	      1066	libbfd.c	FUNCTION_63	IF_1	CALL_6
0x400131f	      0xe800000000	                          call 0x4001324	      1066	libbfd.c	FUNCTION_63	IF_1	CALL_6
0x4001324	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1067	libbfd.c	FUNCTION_63	IF_1
0x4001328	          0x48f7d0	                                 not rax	      1067	libbfd.c	FUNCTION_63	IF_1
0x400132b	          0x4889c2	                            mov rdx, rax	      1067	libbfd.c	FUNCTION_63	IF_1
0x400132e	    0x488b05000000	            mov rax, qword [0x04001335] 	      1067	libbfd.c	FUNCTION_63	IF_1
0x4001335	          0x4809d0	                             or rax, rdx	      1067	libbfd.c	FUNCTION_63	IF_1
0x4001338	    0x488905000000	            mov qword [0x0400133f], rax 	      1067	libbfd.c	FUNCTION_63	IF_1
0x400133f	              0x90	                                     nop	      1069	libbfd.c	FUNCTION_63
0x4001340	              0xc9	                                   leave	      1069	libbfd.c	FUNCTION_63
0x4001341	              0xc3	                                     ret	      1069	libbfd.c	FUNCTION_63
bfd_getb64	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	54
0x400093b	              0x55	                                push rbp	       691	libbfd.c	FUNCTION_48
0x400093c	          0x4889e5	                            mov rbp, rsp	       691	libbfd.c	FUNCTION_48
0x400093f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       691	libbfd.c	FUNCTION_48
0x4000943	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       693	libbfd.c	FUNCTION_48
0x4000947	        0x488945f0	             mov qword [rbp - 0x10], rax	       693	libbfd.c	FUNCTION_48
0x400094b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       696	libbfd.c	FUNCTION_48
0x400094f	           0xfb600	                   movzx eax, byte [rax]	       696	libbfd.c	FUNCTION_48
0x4000952	           0xfb6c0	                           movzx eax, al	       696	libbfd.c	FUNCTION_48
0x4000955	        0x488945f8	                mov qword [rbp - 8], rax	       696	libbfd.c	FUNCTION_48
0x4000959	      0x48c165f808	                  shl qword [rbp - 8], 8	       696	libbfd.c	FUNCTION_48
0x400095e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       697	libbfd.c	FUNCTION_48
0x4000962	        0x4883c001	                              add rax, 1	       697	libbfd.c	FUNCTION_48
0x4000966	           0xfb600	                   movzx eax, byte [rax]	       697	libbfd.c	FUNCTION_48
0x4000969	           0xfb6c0	                           movzx eax, al	       697	libbfd.c	FUNCTION_48
0x400096c	        0x480945f8	                 or qword [rbp - 8], rax	       697	libbfd.c	FUNCTION_48
0x4000970	      0x48c165f808	                  shl qword [rbp - 8], 8	       697	libbfd.c	FUNCTION_48
0x4000975	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       698	libbfd.c	FUNCTION_48
0x4000979	        0x4883c002	                              add rax, 2	       698	libbfd.c	FUNCTION_48
0x400097d	           0xfb600	                   movzx eax, byte [rax]	       698	libbfd.c	FUNCTION_48
0x4000980	           0xfb6c0	                           movzx eax, al	       698	libbfd.c	FUNCTION_48
0x4000983	        0x480945f8	                 or qword [rbp - 8], rax	       698	libbfd.c	FUNCTION_48
0x4000987	      0x48c165f808	                  shl qword [rbp - 8], 8	       698	libbfd.c	FUNCTION_48
0x400098c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       699	libbfd.c	FUNCTION_48
0x4000990	        0x4883c003	                              add rax, 3	       699	libbfd.c	FUNCTION_48
0x4000994	           0xfb600	                   movzx eax, byte [rax]	       699	libbfd.c	FUNCTION_48
0x4000997	           0xfb6c0	                           movzx eax, al	       699	libbfd.c	FUNCTION_48
0x400099a	        0x480945f8	                 or qword [rbp - 8], rax	       699	libbfd.c	FUNCTION_48
0x400099e	      0x48c165f808	                  shl qword [rbp - 8], 8	       699	libbfd.c	FUNCTION_48
0x40009a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       700	libbfd.c	FUNCTION_48
0x40009a7	        0x4883c004	                              add rax, 4	       700	libbfd.c	FUNCTION_48
0x40009ab	           0xfb600	                   movzx eax, byte [rax]	       700	libbfd.c	FUNCTION_48
0x40009ae	           0xfb6c0	                           movzx eax, al	       700	libbfd.c	FUNCTION_48
0x40009b1	        0x480945f8	                 or qword [rbp - 8], rax	       700	libbfd.c	FUNCTION_48
0x40009b5	      0x48c165f808	                  shl qword [rbp - 8], 8	       700	libbfd.c	FUNCTION_48
0x40009ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       701	libbfd.c	FUNCTION_48
0x40009be	        0x4883c005	                              add rax, 5	       701	libbfd.c	FUNCTION_48
0x40009c2	           0xfb600	                   movzx eax, byte [rax]	       701	libbfd.c	FUNCTION_48
0x40009c5	           0xfb6c0	                           movzx eax, al	       701	libbfd.c	FUNCTION_48
0x40009c8	        0x480945f8	                 or qword [rbp - 8], rax	       701	libbfd.c	FUNCTION_48
0x40009cc	      0x48c165f808	                  shl qword [rbp - 8], 8	       701	libbfd.c	FUNCTION_48
0x40009d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       702	libbfd.c	FUNCTION_48
0x40009d5	        0x4883c006	                              add rax, 6	       702	libbfd.c	FUNCTION_48
0x40009d9	           0xfb600	                   movzx eax, byte [rax]	       702	libbfd.c	FUNCTION_48
0x40009dc	           0xfb6c0	                           movzx eax, al	       702	libbfd.c	FUNCTION_48
0x40009df	        0x480945f8	                 or qword [rbp - 8], rax	       702	libbfd.c	FUNCTION_48
0x40009e3	      0x48c165f808	                  shl qword [rbp - 8], 8	       702	libbfd.c	FUNCTION_48
0x40009e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       703	libbfd.c	FUNCTION_48
0x40009ec	        0x4883c007	                              add rax, 7	       703	libbfd.c	FUNCTION_48
0x40009f0	           0xfb600	                   movzx eax, byte [rax]	       703	libbfd.c	FUNCTION_48
0x40009f3	           0xfb6c0	                           movzx eax, al	       703	libbfd.c	FUNCTION_48
0x40009f6	        0x480945f8	                 or qword [rbp - 8], rax	       703	libbfd.c	FUNCTION_48
0x40009fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       705	libbfd.c	FUNCTION_48
0x40009fe	              0x5d	                                 pop rbp	       710	libbfd.c	FUNCTION_48
0x40009ff	              0xc3	                                     ret	       710	libbfd.c	FUNCTION_48
bfd_getl16	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	18
0x40005ea	              0x55	                                push rbp	       581	libbfd.c	FUNCTION_37
0x40005eb	          0x4889e5	                            mov rbp, rsp	       581	libbfd.c	FUNCTION_37
0x40005ee	        0x48897de8	             mov qword [rbp - 0x18], rdi	       581	libbfd.c	FUNCTION_37
0x40005f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       582	libbfd.c	FUNCTION_37
0x40005f6	        0x488945f8	                mov qword [rbp - 8], rax	       582	libbfd.c	FUNCTION_37
0x40005fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       583	libbfd.c	FUNCTION_37
0x40005fe	        0x4883c001	                              add rax, 1	       583	libbfd.c	FUNCTION_37
0x4000602	           0xfb600	                   movzx eax, byte [rax]	       583	libbfd.c	FUNCTION_37
0x4000605	           0xfb6c0	                           movzx eax, al	       583	libbfd.c	FUNCTION_37
0x4000608	          0xc1e008	                              shl eax, 8	       583	libbfd.c	FUNCTION_37
0x400060b	            0x89c2	                            mov edx, eax	       583	libbfd.c	FUNCTION_37
0x400060d	        0x488b45f8	                mov rax, qword [rbp - 8]	       583	libbfd.c	FUNCTION_37
0x4000611	           0xfb600	                   movzx eax, byte [rax]	       583	libbfd.c	FUNCTION_37
0x4000614	           0xfb6c0	                           movzx eax, al	       583	libbfd.c	FUNCTION_37
0x4000617	             0x9d0	                             or eax, edx	       583	libbfd.c	FUNCTION_37
0x4000619	            0x4898	                                    cdqe	       583	libbfd.c	FUNCTION_37
0x400061b	              0x5d	                                 pop rbp	       584	libbfd.c	FUNCTION_37
0x400061c	              0xc3	                                     ret	       584	libbfd.c	FUNCTION_37
bfd_putl64	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	48
0x4000dd6	              0x55	                                push rbp	       822	libbfd.c	FUNCTION_55
0x4000dd7	          0x4889e5	                            mov rbp, rsp	       822	libbfd.c	FUNCTION_55
0x4000dda	        0x48897de8	             mov qword [rbp - 0x18], rdi	       822	libbfd.c	FUNCTION_55
0x4000dde	        0x488975e0	             mov qword [rbp - 0x20], rsi	       822	libbfd.c	FUNCTION_55
0x4000de2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       824	libbfd.c	FUNCTION_55
0x4000de6	        0x488945f8	                mov qword [rbp - 8], rax	       824	libbfd.c	FUNCTION_55
0x4000dea	        0x488b45f8	                mov rax, qword [rbp - 8]	       825	libbfd.c	FUNCTION_55
0x4000dee	        0x4883c007	                              add rax, 7	       825	libbfd.c	FUNCTION_55
0x4000df2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       825	libbfd.c	FUNCTION_55
0x4000df6	        0x48c1ea38	                           shr rdx, 0x38	       825	libbfd.c	FUNCTION_55
0x4000dfa	            0x8810	                      mov byte [rax], dl	       825	libbfd.c	FUNCTION_55
0x4000dfc	        0x488b45f8	                mov rax, qword [rbp - 8]	       826	libbfd.c	FUNCTION_55
0x4000e00	        0x4883c006	                              add rax, 6	       826	libbfd.c	FUNCTION_55
0x4000e04	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       826	libbfd.c	FUNCTION_55
0x4000e08	        0x48c1ea30	                           shr rdx, 0x30	       826	libbfd.c	FUNCTION_55
0x4000e0c	            0x8810	                      mov byte [rax], dl	       826	libbfd.c	FUNCTION_55
0x4000e0e	        0x488b45f8	                mov rax, qword [rbp - 8]	       827	libbfd.c	FUNCTION_55
0x4000e12	        0x4883c005	                              add rax, 5	       827	libbfd.c	FUNCTION_55
0x4000e16	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       827	libbfd.c	FUNCTION_55
0x4000e1a	        0x48c1ea28	                           shr rdx, 0x28	       827	libbfd.c	FUNCTION_55
0x4000e1e	            0x8810	                      mov byte [rax], dl	       827	libbfd.c	FUNCTION_55
0x4000e20	        0x488b45f8	                mov rax, qword [rbp - 8]	       828	libbfd.c	FUNCTION_55
0x4000e24	        0x4883c004	                              add rax, 4	       828	libbfd.c	FUNCTION_55
0x4000e28	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       828	libbfd.c	FUNCTION_55
0x4000e2c	        0x48c1ea20	                           shr rdx, 0x20	       828	libbfd.c	FUNCTION_55
0x4000e30	            0x8810	                      mov byte [rax], dl	       828	libbfd.c	FUNCTION_55
0x4000e32	        0x488b45f8	                mov rax, qword [rbp - 8]	       829	libbfd.c	FUNCTION_55
0x4000e36	        0x4883c003	                              add rax, 3	       829	libbfd.c	FUNCTION_55
0x4000e3a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       829	libbfd.c	FUNCTION_55
0x4000e3e	        0x48c1ea18	                           shr rdx, 0x18	       829	libbfd.c	FUNCTION_55
0x4000e42	            0x8810	                      mov byte [rax], dl	       829	libbfd.c	FUNCTION_55
0x4000e44	        0x488b45f8	                mov rax, qword [rbp - 8]	       830	libbfd.c	FUNCTION_55
0x4000e48	        0x4883c002	                              add rax, 2	       830	libbfd.c	FUNCTION_55
0x4000e4c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       830	libbfd.c	FUNCTION_55
0x4000e50	        0x48c1ea10	                           shr rdx, 0x10	       830	libbfd.c	FUNCTION_55
0x4000e54	            0x8810	                      mov byte [rax], dl	       830	libbfd.c	FUNCTION_55
0x4000e56	        0x488b45f8	                mov rax, qword [rbp - 8]	       831	libbfd.c	FUNCTION_55
0x4000e5a	        0x4883c001	                              add rax, 1	       831	libbfd.c	FUNCTION_55
0x4000e5e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       831	libbfd.c	FUNCTION_55
0x4000e62	        0x48c1ea08	                              shr rdx, 8	       831	libbfd.c	FUNCTION_55
0x4000e66	            0x8810	                      mov byte [rax], dl	       831	libbfd.c	FUNCTION_55
0x4000e68	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       832	libbfd.c	FUNCTION_55
0x4000e6c	            0x89c2	                            mov edx, eax	       832	libbfd.c	FUNCTION_55
0x4000e6e	        0x488b45f8	                mov rax, qword [rbp - 8]	       832	libbfd.c	FUNCTION_55
0x4000e72	            0x8810	                      mov byte [rax], dl	       832	libbfd.c	FUNCTION_55
0x4000e74	              0x90	                                     nop	       836	libbfd.c	FUNCTION_55
0x4000e75	              0x5d	                                 pop rbp	       836	libbfd.c	FUNCTION_55
0x4000e76	              0xc3	                                     ret	       836	libbfd.c	FUNCTION_55
_bfd_nocore_core_file_pid	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	9
0x4000269	              0x55	                                push rbp	       243	libbfd.c	FUNCTION_26
0x400026a	          0x4889e5	                            mov rbp, rsp	       243	libbfd.c	FUNCTION_26
0x400026d	        0x4883ec10	                           sub rsp, 0x10	       243	libbfd.c	FUNCTION_26
0x4000271	        0x48897df8	                mov qword [rbp - 8], rdi	       243	libbfd.c	FUNCTION_26
0x4000275	      0xbf05000000	                              mov edi, 5	       244	libbfd.c	FUNCTION_26	CALL_1
0x400027a	      0xe800000000	                          call 0x400027f	       244	libbfd.c	FUNCTION_26	CALL_1
0x400027f	      0xb800000000	                              mov eax, 0	       245	libbfd.c	FUNCTION_26
0x4000284	              0xc9	                                   leave	       246	libbfd.c	FUNCTION_26
0x4000285	              0xc3	                                     ret	       246	libbfd.c	FUNCTION_26
_bfd_norelocs_canonicalize_reloc	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	11
0x40001d2	              0x55	                                push rbp	       195	libbfd.c	FUNCTION_21
0x40001d3	          0x4889e5	                            mov rbp, rsp	       195	libbfd.c	FUNCTION_21
0x40001d6	        0x48897df8	                mov qword [rbp - 8], rdi	       195	libbfd.c	FUNCTION_21
0x40001da	        0x488975f0	             mov qword [rbp - 0x10], rsi	       195	libbfd.c	FUNCTION_21
0x40001de	        0x488955e8	             mov qword [rbp - 0x18], rdx	       195	libbfd.c	FUNCTION_21
0x40001e2	        0x48894de0	             mov qword [rbp - 0x20], rcx	       195	libbfd.c	FUNCTION_21
0x40001e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       196	libbfd.c	FUNCTION_21
0x40001ea	    0x48c700000000	                      mov qword [rax], 0	       196	libbfd.c	FUNCTION_21
0x40001f1	      0xb800000000	                              mov eax, 0	       197	libbfd.c	FUNCTION_21
0x40001f6	              0x5d	                                 pop rbp	       198	libbfd.c	FUNCTION_21
0x40001f7	              0xc3	                                     ret	       198	libbfd.c	FUNCTION_21
bfd_getl32	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	30
0x40007f3	              0x55	                                push rbp	       652	libbfd.c	FUNCTION_45
0x40007f4	          0x4889e5	                            mov rbp, rsp	       652	libbfd.c	FUNCTION_45
0x40007f7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       652	libbfd.c	FUNCTION_45
0x40007fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       653	libbfd.c	FUNCTION_45
0x40007ff	        0x488945f0	             mov qword [rbp - 0x10], rax	       653	libbfd.c	FUNCTION_45
0x4000803	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       656	libbfd.c	FUNCTION_45
0x4000807	           0xfb600	                   movzx eax, byte [rax]	       656	libbfd.c	FUNCTION_45
0x400080a	           0xfb6c0	                           movzx eax, al	       656	libbfd.c	FUNCTION_45
0x400080d	        0x488945f8	                mov qword [rbp - 8], rax	       656	libbfd.c	FUNCTION_45
0x4000811	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       657	libbfd.c	FUNCTION_45
0x4000815	        0x4883c001	                              add rax, 1	       657	libbfd.c	FUNCTION_45
0x4000819	           0xfb600	                   movzx eax, byte [rax]	       657	libbfd.c	FUNCTION_45
0x400081c	           0xfb6c0	                           movzx eax, al	       657	libbfd.c	FUNCTION_45
0x400081f	        0x48c1e008	                              shl rax, 8	       657	libbfd.c	FUNCTION_45
0x4000823	        0x480945f8	                 or qword [rbp - 8], rax	       657	libbfd.c	FUNCTION_45
0x4000827	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       658	libbfd.c	FUNCTION_45
0x400082b	        0x4883c002	                              add rax, 2	       658	libbfd.c	FUNCTION_45
0x400082f	           0xfb600	                   movzx eax, byte [rax]	       658	libbfd.c	FUNCTION_45
0x4000832	           0xfb6c0	                           movzx eax, al	       658	libbfd.c	FUNCTION_45
0x4000835	        0x48c1e010	                           shl rax, 0x10	       658	libbfd.c	FUNCTION_45
0x4000839	        0x480945f8	                 or qword [rbp - 8], rax	       658	libbfd.c	FUNCTION_45
0x400083d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       659	libbfd.c	FUNCTION_45
0x4000841	        0x4883c003	                              add rax, 3	       659	libbfd.c	FUNCTION_45
0x4000845	           0xfb600	                   movzx eax, byte [rax]	       659	libbfd.c	FUNCTION_45
0x4000848	           0xfb6c0	                           movzx eax, al	       659	libbfd.c	FUNCTION_45
0x400084b	        0x48c1e018	                           shl rax, 0x18	       659	libbfd.c	FUNCTION_45
0x400084f	        0x480945f8	                 or qword [rbp - 8], rax	       659	libbfd.c	FUNCTION_45
0x4000853	        0x488b45f8	                mov rax, qword [rbp - 8]	       660	libbfd.c	FUNCTION_45
0x4000857	              0x5d	                                 pop rbp	       661	libbfd.c	FUNCTION_45
0x4000858	              0xc3	                                     ret	       661	libbfd.c	FUNCTION_45
_bfd_nocore_core_file_matches_executable_p	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	10
0x400020e	              0x55	                                push rbp	       213	libbfd.c	FUNCTION_23
0x400020f	          0x4889e5	                            mov rbp, rsp	       213	libbfd.c	FUNCTION_23
0x4000212	        0x4883ec10	                           sub rsp, 0x10	       213	libbfd.c	FUNCTION_23
0x4000216	        0x48897df8	                mov qword [rbp - 8], rdi	       213	libbfd.c	FUNCTION_23
0x400021a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       213	libbfd.c	FUNCTION_23
0x400021e	      0xbf05000000	                              mov edi, 5	       214	libbfd.c	FUNCTION_23	CALL_1
0x4000223	      0xe800000000	                          call 0x4000228	       214	libbfd.c	FUNCTION_23	CALL_1
0x4000228	      0xb800000000	                              mov eax, 0	       215	libbfd.c	FUNCTION_23
0x400022d	              0xc9	                                   leave	       216	libbfd.c	FUNCTION_23
0x400022e	              0xc3	                                     ret	       216	libbfd.c	FUNCTION_23
bfd_get_bits	DO,0:WHILE,0:ELSE,0:functions,0:FOR,1:IF,1:SWITCH,0:CALL,1	51
0x4000f0b	              0x55	                                push rbp	       860	libbfd.c	FUNCTION_57
0x4000f0c	          0x4889e5	                            mov rbp, rsp	       860	libbfd.c	FUNCTION_57
0x4000f0f	        0x4883ec30	                           sub rsp, 0x30	       860	libbfd.c	FUNCTION_57
0x4000f13	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       860	libbfd.c	FUNCTION_57
0x4000f17	          0x8975d4	             mov dword [rbp - 0x2c], esi	       860	libbfd.c	FUNCTION_57
0x4000f1a	          0x8955d0	             mov dword [rbp - 0x30], edx	       860	libbfd.c	FUNCTION_57
0x4000f1d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       861	libbfd.c	FUNCTION_57
0x4000f21	        0x488945f8	                mov qword [rbp - 8], rax	       861	libbfd.c	FUNCTION_57
0x4000f25	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       866	libbfd.c	FUNCTION_57	IF_1
0x4000f28	          0x83e007	                              and eax, 7	       866	libbfd.c	FUNCTION_57	IF_1
0x4000f2b	            0x85c0	                           test eax, eax	       866	libbfd.c	FUNCTION_57	IF_1
0x4000f2d	            0x7414	                            je 0x4000f43	       866	libbfd.c	FUNCTION_57	IF_1
0x4000f2f	      0xba00000000	                              mov edx, 0	       867	libbfd.c	FUNCTION_57	CALL_1
0x4000f34	      0xbe63030000	                          mov esi, 0x363	       867	libbfd.c	FUNCTION_57	CALL_1
0x4000f39	      0xbf00000000	                              mov edi, 0	       867	libbfd.c	FUNCTION_57	CALL_1
0x4000f3e	      0xe800000000	                          call 0x4000f43	       867	libbfd.c	FUNCTION_57	CALL_1
0x4000f43	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       869	libbfd.c	FUNCTION_57
0x4000f4b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       870	libbfd.c	FUNCTION_57
0x4000f4e	          0x8d5007	                      lea edx, [rax + 7]	       870	libbfd.c	FUNCTION_57
0x4000f51	            0x85c0	                           test eax, eax	       870	libbfd.c	FUNCTION_57
0x4000f53	           0xf48c2	                          cmovs eax, edx	       870	libbfd.c	FUNCTION_57
0x4000f56	          0xc1f803	                              sar eax, 3	       870	libbfd.c	FUNCTION_57
0x4000f59	          0x8945e8	             mov dword [rbp - 0x18], eax	       870	libbfd.c	FUNCTION_57
0x4000f5c	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000f63	            0xeb40	                           jmp 0x4000fa5	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000f65	        0x837dd000	               cmp dword [rbp - 0x30], 0	       873	libbfd.c	FUNCTION_57	FOR_1
0x4000f69	            0x750b	                           jne 0x4000f76	       873	libbfd.c	FUNCTION_57	FOR_1
0x4000f6b	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       873	libbfd.c	FUNCTION_57	FOR_1
0x4000f6e	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	       873	libbfd.c	FUNCTION_57	FOR_1
0x4000f71	          0x83e801	                              sub eax, 1	       873	libbfd.c	FUNCTION_57	FOR_1
0x4000f74	            0xeb03	                           jmp 0x4000f79	       873	libbfd.c	FUNCTION_57	FOR_1
0x4000f76	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       873	libbfd.c	FUNCTION_57	FOR_1
0x4000f79	          0x8945ec	             mov dword [rbp - 0x14], eax	       873	libbfd.c	FUNCTION_57	FOR_1
0x4000f7c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000f80	        0x48c1e008	                              shl rax, 8	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000f84	          0x4889c1	                            mov rcx, rax	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000f87	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000f8a	          0x4863d0	                         movsxd rdx, eax	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000f8d	        0x488b45f8	                mov rax, qword [rbp - 8]	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000f91	          0x4801d0	                            add rax, rdx	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000f94	           0xfb600	                   movzx eax, byte [rax]	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000f97	           0xfb6c0	                           movzx eax, al	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000f9a	          0x4809c8	                             or rax, rcx	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000f9d	        0x488945f0	             mov qword [rbp - 0x10], rax	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000fa1	        0x8345e401	               add dword [rbp - 0x1c], 1	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000fa5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000fa8	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000fab	            0x7cb8	                            jl 0x4000f65	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000fad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       878	libbfd.c	FUNCTION_57
0x4000fb1	              0xc9	                                   leave	       879	libbfd.c	FUNCTION_57
0x4000fb2	              0xc3	                                     ret	       879	libbfd.c	FUNCTION_57
bfd_getl_signed_16	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	20
0x4000659	              0x55	                                push rbp	       595	libbfd.c	FUNCTION_39
0x400065a	          0x4889e5	                            mov rbp, rsp	       595	libbfd.c	FUNCTION_39
0x400065d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       595	libbfd.c	FUNCTION_39
0x4000661	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       596	libbfd.c	FUNCTION_39
0x4000665	        0x488945f8	                mov qword [rbp - 8], rax	       596	libbfd.c	FUNCTION_39
0x4000669	        0x488b45f8	                mov rax, qword [rbp - 8]	       597	libbfd.c	FUNCTION_39
0x400066d	        0x4883c001	                              add rax, 1	       597	libbfd.c	FUNCTION_39
0x4000671	           0xfb600	                   movzx eax, byte [rax]	       597	libbfd.c	FUNCTION_39
0x4000674	           0xfb6c0	                           movzx eax, al	       597	libbfd.c	FUNCTION_39
0x4000677	          0xc1e008	                              shl eax, 8	       597	libbfd.c	FUNCTION_39
0x400067a	            0x89c2	                            mov edx, eax	       597	libbfd.c	FUNCTION_39
0x400067c	        0x488b45f8	                mov rax, qword [rbp - 8]	       597	libbfd.c	FUNCTION_39
0x4000680	           0xfb600	                   movzx eax, byte [rax]	       597	libbfd.c	FUNCTION_39
0x4000683	           0xfb6c0	                           movzx eax, al	       597	libbfd.c	FUNCTION_39
0x4000686	             0x9d0	                             or eax, edx	       597	libbfd.c	FUNCTION_39
0x4000688	          0x80f480	                            xor ah, 0x80	       597	libbfd.c	FUNCTION_39
0x400068b	            0x4898	                                    cdqe	       597	libbfd.c	FUNCTION_39
0x400068d	    0x482d00800000	                         sub rax, 0x8000	       597	libbfd.c	FUNCTION_39
0x4000693	              0x5d	                                 pop rbp	       598	libbfd.c	FUNCTION_39
0x4000694	              0xc3	                                     ret	       598	libbfd.c	FUNCTION_39
bfd_putb16	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	18
0x4000695	              0x55	                                push rbp	       602	libbfd.c	FUNCTION_40
0x4000696	          0x4889e5	                            mov rbp, rsp	       602	libbfd.c	FUNCTION_40
0x4000699	        0x48897de8	             mov qword [rbp - 0x18], rdi	       602	libbfd.c	FUNCTION_40
0x400069d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       602	libbfd.c	FUNCTION_40
0x40006a1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       603	libbfd.c	FUNCTION_40
0x40006a5	        0x488945f8	                mov qword [rbp - 8], rax	       603	libbfd.c	FUNCTION_40
0x40006a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       604	libbfd.c	FUNCTION_40
0x40006ad	        0x48c1e808	                              shr rax, 8	       604	libbfd.c	FUNCTION_40
0x40006b1	            0x89c2	                            mov edx, eax	       604	libbfd.c	FUNCTION_40
0x40006b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       604	libbfd.c	FUNCTION_40
0x40006b7	            0x8810	                      mov byte [rax], dl	       604	libbfd.c	FUNCTION_40
0x40006b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       605	libbfd.c	FUNCTION_40
0x40006bd	        0x4883c001	                              add rax, 1	       605	libbfd.c	FUNCTION_40
0x40006c1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       605	libbfd.c	FUNCTION_40
0x40006c5	            0x8810	                      mov byte [rax], dl	       605	libbfd.c	FUNCTION_40
0x40006c7	              0x90	                                     nop	       606	libbfd.c	FUNCTION_40
0x40006c8	              0x5d	                                 pop rbp	       606	libbfd.c	FUNCTION_40
0x40006c9	              0xc3	                                     ret	       606	libbfd.c	FUNCTION_40
bfd_getl_signed_64	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	58
0x4000ba4	              0x55	                                push rbp	       761	libbfd.c	FUNCTION_51
0x4000ba5	          0x4889e5	                            mov rbp, rsp	       761	libbfd.c	FUNCTION_51
0x4000ba8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       761	libbfd.c	FUNCTION_51
0x4000bac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       763	libbfd.c	FUNCTION_51
0x4000bb0	        0x488945f0	             mov qword [rbp - 0x10], rax	       763	libbfd.c	FUNCTION_51
0x4000bb4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       766	libbfd.c	FUNCTION_51
0x4000bb8	        0x4883c007	                              add rax, 7	       766	libbfd.c	FUNCTION_51
0x4000bbc	           0xfb600	                   movzx eax, byte [rax]	       766	libbfd.c	FUNCTION_51
0x4000bbf	           0xfb6c0	                           movzx eax, al	       766	libbfd.c	FUNCTION_51
0x4000bc2	        0x488945f8	                mov qword [rbp - 8], rax	       766	libbfd.c	FUNCTION_51
0x4000bc6	      0x48c165f808	                  shl qword [rbp - 8], 8	       766	libbfd.c	FUNCTION_51
0x4000bcb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       767	libbfd.c	FUNCTION_51
0x4000bcf	        0x4883c006	                              add rax, 6	       767	libbfd.c	FUNCTION_51
0x4000bd3	           0xfb600	                   movzx eax, byte [rax]	       767	libbfd.c	FUNCTION_51
0x4000bd6	           0xfb6c0	                           movzx eax, al	       767	libbfd.c	FUNCTION_51
0x4000bd9	        0x480945f8	                 or qword [rbp - 8], rax	       767	libbfd.c	FUNCTION_51
0x4000bdd	      0x48c165f808	                  shl qword [rbp - 8], 8	       767	libbfd.c	FUNCTION_51
0x4000be2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       768	libbfd.c	FUNCTION_51
0x4000be6	        0x4883c005	                              add rax, 5	       768	libbfd.c	FUNCTION_51
0x4000bea	           0xfb600	                   movzx eax, byte [rax]	       768	libbfd.c	FUNCTION_51
0x4000bed	           0xfb6c0	                           movzx eax, al	       768	libbfd.c	FUNCTION_51
0x4000bf0	        0x480945f8	                 or qword [rbp - 8], rax	       768	libbfd.c	FUNCTION_51
0x4000bf4	      0x48c165f808	                  shl qword [rbp - 8], 8	       768	libbfd.c	FUNCTION_51
0x4000bf9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       769	libbfd.c	FUNCTION_51
0x4000bfd	        0x4883c004	                              add rax, 4	       769	libbfd.c	FUNCTION_51
0x4000c01	           0xfb600	                   movzx eax, byte [rax]	       769	libbfd.c	FUNCTION_51
0x4000c04	           0xfb6c0	                           movzx eax, al	       769	libbfd.c	FUNCTION_51
0x4000c07	        0x480945f8	                 or qword [rbp - 8], rax	       769	libbfd.c	FUNCTION_51
0x4000c0b	      0x48c165f808	                  shl qword [rbp - 8], 8	       769	libbfd.c	FUNCTION_51
0x4000c10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       770	libbfd.c	FUNCTION_51
0x4000c14	        0x4883c003	                              add rax, 3	       770	libbfd.c	FUNCTION_51
0x4000c18	           0xfb600	                   movzx eax, byte [rax]	       770	libbfd.c	FUNCTION_51
0x4000c1b	           0xfb6c0	                           movzx eax, al	       770	libbfd.c	FUNCTION_51
0x4000c1e	        0x480945f8	                 or qword [rbp - 8], rax	       770	libbfd.c	FUNCTION_51
0x4000c22	      0x48c165f808	                  shl qword [rbp - 8], 8	       770	libbfd.c	FUNCTION_51
0x4000c27	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       771	libbfd.c	FUNCTION_51
0x4000c2b	        0x4883c002	                              add rax, 2	       771	libbfd.c	FUNCTION_51
0x4000c2f	           0xfb600	                   movzx eax, byte [rax]	       771	libbfd.c	FUNCTION_51
0x4000c32	           0xfb6c0	                           movzx eax, al	       771	libbfd.c	FUNCTION_51
0x4000c35	        0x480945f8	                 or qword [rbp - 8], rax	       771	libbfd.c	FUNCTION_51
0x4000c39	      0x48c165f808	                  shl qword [rbp - 8], 8	       771	libbfd.c	FUNCTION_51
0x4000c3e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       772	libbfd.c	FUNCTION_51
0x4000c42	        0x4883c001	                              add rax, 1	       772	libbfd.c	FUNCTION_51
0x4000c46	           0xfb600	                   movzx eax, byte [rax]	       772	libbfd.c	FUNCTION_51
0x4000c49	           0xfb6c0	                           movzx eax, al	       772	libbfd.c	FUNCTION_51
0x4000c4c	        0x480945f8	                 or qword [rbp - 8], rax	       772	libbfd.c	FUNCTION_51
0x4000c50	      0x48c165f808	                  shl qword [rbp - 8], 8	       772	libbfd.c	FUNCTION_51
0x4000c55	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       773	libbfd.c	FUNCTION_51
0x4000c59	           0xfb600	                   movzx eax, byte [rax]	       773	libbfd.c	FUNCTION_51
0x4000c5c	           0xfb6c0	                           movzx eax, al	       773	libbfd.c	FUNCTION_51
0x4000c5f	        0x480945f8	                 or qword [rbp - 8], rax	       773	libbfd.c	FUNCTION_51
0x4000c63	    0x48b800000000	          movabs rax, 0x8000000000000000	       775	libbfd.c	FUNCTION_51
0x4000c6d	        0x483345f8	                xor rax, qword [rbp - 8]	       775	libbfd.c	FUNCTION_51
0x4000c71	          0x4889c2	                            mov rdx, rax	       775	libbfd.c	FUNCTION_51
0x4000c74	    0x48b800000000	          movabs rax, 0x8000000000000000	       775	libbfd.c	FUNCTION_51
0x4000c7e	          0x4801d0	                            add rax, rdx	       775	libbfd.c	FUNCTION_51
0x4000c81	              0x5d	                                 pop rbp	       780	libbfd.c	FUNCTION_51
0x4000c82	              0xc3	                                     ret	       780	libbfd.c	FUNCTION_51
_bfd_ptr_bfd_null_error	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	9
0x400012d	              0x55	                                push rbp	       133	libbfd.c	FUNCTION_12
0x400012e	          0x4889e5	                            mov rbp, rsp	       133	libbfd.c	FUNCTION_12
0x4000131	        0x4883ec10	                           sub rsp, 0x10	       133	libbfd.c	FUNCTION_12
0x4000135	        0x48897df8	                mov qword [rbp - 8], rdi	       133	libbfd.c	FUNCTION_12
0x4000139	      0xbf05000000	                              mov edi, 5	       134	libbfd.c	FUNCTION_12	CALL_1
0x400013e	      0xe800000000	                          call 0x4000143	       134	libbfd.c	FUNCTION_12	CALL_1
0x4000143	      0xb800000000	                              mov eax, 0	       135	libbfd.c	FUNCTION_12
0x4000148	              0xc9	                                   leave	       136	libbfd.c	FUNCTION_12
0x4000149	              0xc3	                                     ret	       136	libbfd.c	FUNCTION_12
_bfd_nocore_core_file_failing_command	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	9
0x400022f	              0x55	                                push rbp	       223	libbfd.c	FUNCTION_24
0x4000230	          0x4889e5	                            mov rbp, rsp	       223	libbfd.c	FUNCTION_24
0x4000233	        0x4883ec10	                           sub rsp, 0x10	       223	libbfd.c	FUNCTION_24
0x4000237	        0x48897df8	                mov qword [rbp - 8], rdi	       223	libbfd.c	FUNCTION_24
0x400023b	      0xbf05000000	                              mov edi, 5	       224	libbfd.c	FUNCTION_24	CALL_1
0x4000240	      0xe800000000	                          call 0x4000245	       224	libbfd.c	FUNCTION_24	CALL_1
0x4000245	      0xb800000000	                              mov eax, 0	       225	libbfd.c	FUNCTION_24
0x400024a	              0xc9	                                   leave	       226	libbfd.c	FUNCTION_24
0x400024b	              0xc3	                                     ret	       226	libbfd.c	FUNCTION_24
_bfd_generic_init_private_section_data	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	10
0x40014ff	              0x55	                                push rbp	      1174	libbfd.c	FUNCTION_67
0x4001500	          0x4889e5	                            mov rbp, rsp	      1174	libbfd.c	FUNCTION_67
0x4001503	        0x48897df8	                mov qword [rbp - 8], rdi	      1174	libbfd.c	FUNCTION_67
0x4001507	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1174	libbfd.c	FUNCTION_67
0x400150b	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1174	libbfd.c	FUNCTION_67
0x400150f	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1174	libbfd.c	FUNCTION_67
0x4001513	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1174	libbfd.c	FUNCTION_67
0x4001517	      0xb801000000	                              mov eax, 1	      1175	libbfd.c	FUNCTION_67
0x400151c	              0x5d	                                 pop rbp	      1176	libbfd.c	FUNCTION_67
0x400151d	              0xc3	                                     ret	      1176	libbfd.c	FUNCTION_67
_bfd_bool_bfd_ptr_true	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	7
0x400011a	              0x55	                                push rbp	       124	libbfd.c	FUNCTION_11
0x400011b	          0x4889e5	                            mov rbp, rsp	       124	libbfd.c	FUNCTION_11
0x400011e	        0x48897df8	                mov qword [rbp - 8], rdi	       124	libbfd.c	FUNCTION_11
0x4000122	        0x488975f0	             mov qword [rbp - 0x10], rsi	       124	libbfd.c	FUNCTION_11
0x4000126	      0xb801000000	                              mov eax, 1	       125	libbfd.c	FUNCTION_11
0x400012b	              0x5d	                                 pop rbp	       126	libbfd.c	FUNCTION_11
0x400012c	              0xc3	                                     ret	       126	libbfd.c	FUNCTION_11
bfd_put_bits	DO,0:WHILE,0:ELSE,0:functions,0:FOR,1:IF,1:SWITCH,0:CALL,1	47
0x4000e77	              0x55	                                push rbp	       840	libbfd.c	FUNCTION_56
0x4000e78	          0x4889e5	                            mov rbp, rsp	       840	libbfd.c	FUNCTION_56
0x4000e7b	        0x4883ec40	                           sub rsp, 0x40	       840	libbfd.c	FUNCTION_56
0x4000e7f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       840	libbfd.c	FUNCTION_56
0x4000e83	        0x488975d0	             mov qword [rbp - 0x30], rsi	       840	libbfd.c	FUNCTION_56
0x4000e87	          0x8955cc	             mov dword [rbp - 0x34], edx	       840	libbfd.c	FUNCTION_56
0x4000e8a	          0x894dc8	             mov dword [rbp - 0x38], ecx	       840	libbfd.c	FUNCTION_56
0x4000e8d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       841	libbfd.c	FUNCTION_56
0x4000e91	        0x488945f8	                mov qword [rbp - 8], rax	       841	libbfd.c	FUNCTION_56
0x4000e95	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       845	libbfd.c	FUNCTION_56	IF_1
0x4000e98	          0x83e007	                              and eax, 7	       845	libbfd.c	FUNCTION_56	IF_1
0x4000e9b	            0x85c0	                           test eax, eax	       845	libbfd.c	FUNCTION_56	IF_1
0x4000e9d	            0x7414	                            je 0x4000eb3	       845	libbfd.c	FUNCTION_56	IF_1
0x4000e9f	      0xba00000000	                              mov edx, 0	       846	libbfd.c	FUNCTION_56	CALL_1
0x4000ea4	      0xbe4e030000	                          mov esi, 0x34e	       846	libbfd.c	FUNCTION_56	CALL_1
0x4000ea9	      0xbf00000000	                              mov edi, 0	       846	libbfd.c	FUNCTION_56	CALL_1
0x4000eae	      0xe800000000	                          call 0x4000eb3	       846	libbfd.c	FUNCTION_56	CALL_1
0x4000eb3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       848	libbfd.c	FUNCTION_56
0x4000eb6	          0x8d5007	                      lea edx, [rax + 7]	       848	libbfd.c	FUNCTION_56
0x4000eb9	            0x85c0	                           test eax, eax	       848	libbfd.c	FUNCTION_56
0x4000ebb	           0xf48c2	                          cmovs eax, edx	       848	libbfd.c	FUNCTION_56
0x4000ebe	          0xc1f803	                              sar eax, 3	       848	libbfd.c	FUNCTION_56
0x4000ec1	          0x8945f0	             mov dword [rbp - 0x10], eax	       848	libbfd.c	FUNCTION_56
0x4000ec4	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000ecb	            0xeb33	                           jmp 0x4000f00	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000ecd	        0x837dc800	               cmp dword [rbp - 0x38], 0	       851	libbfd.c	FUNCTION_56	FOR_1
0x4000ed1	            0x740b	                            je 0x4000ede	       851	libbfd.c	FUNCTION_56	FOR_1
0x4000ed3	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       851	libbfd.c	FUNCTION_56	FOR_1
0x4000ed6	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       851	libbfd.c	FUNCTION_56	FOR_1
0x4000ed9	          0x83e801	                              sub eax, 1	       851	libbfd.c	FUNCTION_56	FOR_1
0x4000edc	            0xeb03	                           jmp 0x4000ee1	       851	libbfd.c	FUNCTION_56	FOR_1
0x4000ede	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       851	libbfd.c	FUNCTION_56	FOR_1
0x4000ee1	          0x8945f4	              mov dword [rbp - 0xc], eax	       851	libbfd.c	FUNCTION_56	FOR_1
0x4000ee4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000ee7	          0x4863d0	                         movsxd rdx, eax	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000eea	        0x488b45f8	                mov rax, qword [rbp - 8]	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000eee	          0x4801d0	                            add rax, rdx	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000ef1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000ef5	            0x8810	                      mov byte [rax], dl	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000ef7	      0x48c16dd808	               shr qword [rbp - 0x28], 8	       854	libbfd.c	FUNCTION_56	FOR_1
0x4000efc	        0x8345ec01	               add dword [rbp - 0x14], 1	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000f00	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000f03	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000f06	            0x7cc5	                            jl 0x4000ecd	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000f08	              0x90	                                     nop	       856	libbfd.c	FUNCTION_56
0x4000f09	              0xc9	                                   leave	       856	libbfd.c	FUNCTION_56
0x4000f0a	              0xc3	                                     ret	       856	libbfd.c	FUNCTION_56
bfd_write_bigendian_4byte_int	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,2	27
0x4000552	              0x55	                                push rbp	       398	libbfd.c	FUNCTION_35
0x4000553	          0x4889e5	                            mov rbp, rsp	       398	libbfd.c	FUNCTION_35
0x4000556	        0x4883ec20	                           sub rsp, 0x20	       398	libbfd.c	FUNCTION_35
0x400055a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       398	libbfd.c	FUNCTION_35
0x400055e	          0x8975e4	             mov dword [rbp - 0x1c], esi	       398	libbfd.c	FUNCTION_35
0x4000561	    0x64488b042528	                mov rax, qword fs:[0x28]	       398	libbfd.c	FUNCTION_35
0x400056a	        0x488945f8	                mov qword [rbp - 8], rax	       398	libbfd.c	FUNCTION_35
0x400056e	            0x31c0	                            xor eax, eax	       398	libbfd.c	FUNCTION_35
0x4000570	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       400	libbfd.c	FUNCTION_35	CALL_1
0x4000573	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       400	libbfd.c	FUNCTION_35	CALL_1
0x4000577	          0x4889d6	                            mov rsi, rdx	       400	libbfd.c	FUNCTION_35	CALL_1
0x400057a	          0x4889c7	                            mov rdi, rax	       400	libbfd.c	FUNCTION_35	CALL_1
0x400057d	      0xe800000000	                          call 0x4000582	       400	libbfd.c	FUNCTION_35	CALL_1
0x4000582	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       401	libbfd.c	FUNCTION_35	CALL_2
0x4000586	        0x488d45f0	                   lea rax, [rbp - 0x10]	       401	libbfd.c	FUNCTION_35	CALL_2
0x400058a	      0xbe04000000	                              mov esi, 4	       401	libbfd.c	FUNCTION_35	CALL_2
0x400058f	          0x4889c7	                            mov rdi, rax	       401	libbfd.c	FUNCTION_35	CALL_2
0x4000592	      0xe800000000	                          call 0x4000597	       401	libbfd.c	FUNCTION_35	CALL_2
0x4000597	        0x4883f804	                              cmp rax, 4	       401	libbfd.c	FUNCTION_35	CALL_2
0x400059b	           0xf94c0	                                 sete al	       401	libbfd.c	FUNCTION_35	CALL_2
0x400059e	           0xfb6c0	                           movzx eax, al	       401	libbfd.c	FUNCTION_35	CALL_2
0x40005a1	        0x488b4df8	                mov rcx, qword [rbp - 8]	       402	libbfd.c	FUNCTION_35
0x40005a5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       402	libbfd.c	FUNCTION_35
0x40005ae	            0x7405	                            je 0x40005b5	       402	libbfd.c	FUNCTION_35
0x40005b0	      0xe800000000	                          call 0x40005b5	       402	libbfd.c	FUNCTION_35
0x40005b5	              0xc9	                                   leave	       402	libbfd.c	FUNCTION_35
0x40005b6	              0xc3	                                     ret	       402	libbfd.c	FUNCTION_35
_bfd_bool_bfd_false_error	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	9
0x4000062	              0x55	                                push rbp	        61	libbfd.c	FUNCTION_3
0x4000063	          0x4889e5	                            mov rbp, rsp	        61	libbfd.c	FUNCTION_3
0x4000066	        0x4883ec10	                           sub rsp, 0x10	        61	libbfd.c	FUNCTION_3
0x400006a	        0x48897df8	                mov qword [rbp - 8], rdi	        61	libbfd.c	FUNCTION_3
0x400006e	      0xbf05000000	                              mov edi, 5	        62	libbfd.c	FUNCTION_3	CALL_1
0x4000073	      0xe800000000	                          call 0x4000078	        62	libbfd.c	FUNCTION_3	CALL_1
0x4000078	      0xb800000000	                              mov eax, 0	        63	libbfd.c	FUNCTION_3
0x400007d	              0xc9	                                   leave	        64	libbfd.c	FUNCTION_3
0x400007e	              0xc3	                                     ret	        64	libbfd.c	FUNCTION_3
bfd_malloc2	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,2	28
0x4000309	              0x55	                                push rbp	       282	libbfd.c	FUNCTION_29
0x400030a	          0x4889e5	                            mov rbp, rsp	       282	libbfd.c	FUNCTION_29
0x400030d	        0x4883ec10	                           sub rsp, 0x10	       282	libbfd.c	FUNCTION_29
0x4000311	        0x48897df8	                mov qword [rbp - 8], rdi	       282	libbfd.c	FUNCTION_29
0x4000315	        0x488975f0	             mov qword [rbp - 0x10], rsi	       282	libbfd.c	FUNCTION_29
0x4000319	        0x488b45f8	                mov rax, qword [rbp - 8]	       283	libbfd.c	FUNCTION_29	IF_1
0x400031d	        0x480b45f0	              or rax, qword [rbp - 0x10]	       283	libbfd.c	FUNCTION_29	IF_1
0x4000321	          0x4889c2	                            mov rdx, rax	       283	libbfd.c	FUNCTION_29	IF_1
0x4000324	      0xb8ffffffff	                     mov eax, 0xffffffff	       283	libbfd.c	FUNCTION_29	IF_1
0x4000329	          0x4839c2	                            cmp rdx, rax	       283	libbfd.c	FUNCTION_29	IF_1
0x400032c	            0x762e	                           jbe 0x400035c	       283	libbfd.c	FUNCTION_29	IF_1
0x400032e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       284	libbfd.c	FUNCTION_29	IF_1
0x4000333	            0x7427	                            je 0x400035c	       284	libbfd.c	FUNCTION_29	IF_1
0x4000335	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       285	libbfd.c	FUNCTION_29	IF_1
0x400033c	      0xba00000000	                              mov edx, 0	       285	libbfd.c	FUNCTION_29	IF_1
0x4000341	        0x48f775f0	                  div qword [rbp - 0x10]	       285	libbfd.c	FUNCTION_29	IF_1
0x4000345	        0x483b45f8	                cmp rax, qword [rbp - 8]	       285	libbfd.c	FUNCTION_29	IF_1
0x4000349	            0x7311	                           jae 0x400035c	       285	libbfd.c	FUNCTION_29	IF_1
0x400034b	      0xbf06000000	                              mov edi, 6	       287	libbfd.c	FUNCTION_29	IF_1	CALL_1
0x4000350	      0xe800000000	                          call 0x4000355	       287	libbfd.c	FUNCTION_29	IF_1	CALL_1
0x4000355	      0xb800000000	                              mov eax, 0	       288	libbfd.c	FUNCTION_29	IF_1
0x400035a	            0xeb11	                           jmp 0x400036d	       288	libbfd.c	FUNCTION_29	IF_1
0x400035c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       291	libbfd.c	FUNCTION_29	CALL_2
0x4000360	      0x480faf45f8	               imul rax, qword [rbp - 8]	       291	libbfd.c	FUNCTION_29	CALL_2
0x4000365	          0x4889c7	                            mov rdi, rax	       291	libbfd.c	FUNCTION_29	CALL_2
0x4000368	      0xe800000000	                          call 0x400036d	       291	libbfd.c	FUNCTION_29	CALL_2
0x400036d	              0xc9	                                   leave	       292	libbfd.c	FUNCTION_29
0x400036e	              0xc3	                                     ret	       292	libbfd.c	FUNCTION_29
bfd_malloc	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,2:SWITCH,0:CALL,3	29
0x40002a3	              0x55	                                push rbp	       259	libbfd.c	FUNCTION_28
0x40002a4	          0x4889e5	                            mov rbp, rsp	       259	libbfd.c	FUNCTION_28
0x40002a7	        0x4883ec20	                           sub rsp, 0x20	       259	libbfd.c	FUNCTION_28
0x40002ab	        0x48897de8	             mov qword [rbp - 0x18], rdi	       259	libbfd.c	FUNCTION_28
0x40002af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       261	libbfd.c	FUNCTION_28
0x40002b3	        0x488945f0	             mov qword [rbp - 0x10], rax	       261	libbfd.c	FUNCTION_28
0x40002b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       263	libbfd.c	FUNCTION_28	IF_1
0x40002bb	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       263	libbfd.c	FUNCTION_28	IF_1
0x40002bf	            0x7509	                           jne 0x40002ca	       263	libbfd.c	FUNCTION_28	IF_1
0x40002c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       265	libbfd.c	FUNCTION_28	IF_1
0x40002c5	          0x4885c0	                           test rax, rax	       265	libbfd.c	FUNCTION_28	IF_1
0x40002c8	            0x7911	                           jns 0x40002db	       265	libbfd.c	FUNCTION_28	IF_1
0x40002ca	      0xbf06000000	                              mov edi, 6	       267	libbfd.c	FUNCTION_28	IF_1	CALL_1
0x40002cf	      0xe800000000	                          call 0x40002d4	       267	libbfd.c	FUNCTION_28	IF_1	CALL_1
0x40002d4	      0xb800000000	                              mov eax, 0	       268	libbfd.c	FUNCTION_28	IF_1
0x40002d9	            0xeb2c	                           jmp 0x4000307	       268	libbfd.c	FUNCTION_28	IF_1
0x40002db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       271	libbfd.c	FUNCTION_28	CALL_2
0x40002df	          0x4889c7	                            mov rdi, rax	       271	libbfd.c	FUNCTION_28	CALL_2
0x40002e2	      0xe800000000	                          call 0x40002e7	       271	libbfd.c	FUNCTION_28	CALL_2
0x40002e7	        0x488945f8	                mov qword [rbp - 8], rax	       271	libbfd.c	FUNCTION_28	CALL_2
0x40002eb	      0x48837df800	                  cmp qword [rbp - 8], 0	       272	libbfd.c	FUNCTION_28	IF_2
0x40002f0	            0x7511	                           jne 0x4000303	       272	libbfd.c	FUNCTION_28	IF_2
0x40002f2	      0x48837df000	               cmp qword [rbp - 0x10], 0	       272	libbfd.c	FUNCTION_28	IF_2
0x40002f7	            0x740a	                            je 0x4000303	       272	libbfd.c	FUNCTION_28	IF_2
0x40002f9	      0xbf06000000	                              mov edi, 6	       273	libbfd.c	FUNCTION_28	CALL_3
0x40002fe	      0xe800000000	                          call 0x4000303	       273	libbfd.c	FUNCTION_28	CALL_3
0x4000303	        0x488b45f8	                mov rax, qword [rbp - 8]	       275	libbfd.c	FUNCTION_28
0x4000307	              0xc9	                                   leave	       276	libbfd.c	FUNCTION_28
0x4000308	              0xc3	                                     ret	       276	libbfd.c	FUNCTION_28
bfd_zmalloc	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,2	20
0x40004b0	              0x55	                                push rbp	       355	libbfd.c	FUNCTION_33
0x40004b1	          0x4889e5	                            mov rbp, rsp	       355	libbfd.c	FUNCTION_33
0x40004b4	        0x4883ec20	                           sub rsp, 0x20	       355	libbfd.c	FUNCTION_33
0x40004b8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       355	libbfd.c	FUNCTION_33
0x40004bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       356	libbfd.c	FUNCTION_33	CALL_1
0x40004c0	          0x4889c7	                            mov rdi, rax	       356	libbfd.c	FUNCTION_33	CALL_1
0x40004c3	      0xe800000000	                          call 0x40004c8	       356	libbfd.c	FUNCTION_33	CALL_1
0x40004c8	        0x488945f8	                mov qword [rbp - 8], rax	       356	libbfd.c	FUNCTION_33	CALL_1
0x40004cc	      0x48837df800	                  cmp qword [rbp - 8], 0	       358	libbfd.c	FUNCTION_33	IF_1
0x40004d1	            0x741c	                            je 0x40004ef	       358	libbfd.c	FUNCTION_33	IF_1
0x40004d3	      0x48837de800	               cmp qword [rbp - 0x18], 0	       358	libbfd.c	FUNCTION_33	IF_1
0x40004d8	            0x7415	                            je 0x40004ef	       358	libbfd.c	FUNCTION_33	IF_1
0x40004da	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       359	libbfd.c	FUNCTION_33	CALL_2
0x40004de	        0x488b45f8	                mov rax, qword [rbp - 8]	       359	libbfd.c	FUNCTION_33	CALL_2
0x40004e2	      0xbe00000000	                              mov esi, 0	       359	libbfd.c	FUNCTION_33	CALL_2
0x40004e7	          0x4889c7	                            mov rdi, rax	       359	libbfd.c	FUNCTION_33	CALL_2
0x40004ea	      0xe800000000	                          call 0x40004ef	       359	libbfd.c	FUNCTION_33	CALL_2
0x40004ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       361	libbfd.c	FUNCTION_33
0x40004f3	              0xc9	                                   leave	       362	libbfd.c	FUNCTION_33
0x40004f4	              0xc3	                                     ret	       362	libbfd.c	FUNCTION_33
bfd_getb_signed_64	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	58
0x4000ac5	              0x55	                                push rbp	       738	libbfd.c	FUNCTION_50
0x4000ac6	          0x4889e5	                            mov rbp, rsp	       738	libbfd.c	FUNCTION_50
0x4000ac9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       738	libbfd.c	FUNCTION_50
0x4000acd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       740	libbfd.c	FUNCTION_50
0x4000ad1	        0x488945f0	             mov qword [rbp - 0x10], rax	       740	libbfd.c	FUNCTION_50
0x4000ad5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       743	libbfd.c	FUNCTION_50
0x4000ad9	           0xfb600	                   movzx eax, byte [rax]	       743	libbfd.c	FUNCTION_50
0x4000adc	           0xfb6c0	                           movzx eax, al	       743	libbfd.c	FUNCTION_50
0x4000adf	        0x488945f8	                mov qword [rbp - 8], rax	       743	libbfd.c	FUNCTION_50
0x4000ae3	      0x48c165f808	                  shl qword [rbp - 8], 8	       743	libbfd.c	FUNCTION_50
0x4000ae8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       744	libbfd.c	FUNCTION_50
0x4000aec	        0x4883c001	                              add rax, 1	       744	libbfd.c	FUNCTION_50
0x4000af0	           0xfb600	                   movzx eax, byte [rax]	       744	libbfd.c	FUNCTION_50
0x4000af3	           0xfb6c0	                           movzx eax, al	       744	libbfd.c	FUNCTION_50
0x4000af6	        0x480945f8	                 or qword [rbp - 8], rax	       744	libbfd.c	FUNCTION_50
0x4000afa	      0x48c165f808	                  shl qword [rbp - 8], 8	       744	libbfd.c	FUNCTION_50
0x4000aff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       745	libbfd.c	FUNCTION_50
0x4000b03	        0x4883c002	                              add rax, 2	       745	libbfd.c	FUNCTION_50
0x4000b07	           0xfb600	                   movzx eax, byte [rax]	       745	libbfd.c	FUNCTION_50
0x4000b0a	           0xfb6c0	                           movzx eax, al	       745	libbfd.c	FUNCTION_50
0x4000b0d	        0x480945f8	                 or qword [rbp - 8], rax	       745	libbfd.c	FUNCTION_50
0x4000b11	      0x48c165f808	                  shl qword [rbp - 8], 8	       745	libbfd.c	FUNCTION_50
0x4000b16	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       746	libbfd.c	FUNCTION_50
0x4000b1a	        0x4883c003	                              add rax, 3	       746	libbfd.c	FUNCTION_50
0x4000b1e	           0xfb600	                   movzx eax, byte [rax]	       746	libbfd.c	FUNCTION_50
0x4000b21	           0xfb6c0	                           movzx eax, al	       746	libbfd.c	FUNCTION_50
0x4000b24	        0x480945f8	                 or qword [rbp - 8], rax	       746	libbfd.c	FUNCTION_50
0x4000b28	      0x48c165f808	                  shl qword [rbp - 8], 8	       746	libbfd.c	FUNCTION_50
0x4000b2d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       747	libbfd.c	FUNCTION_50
0x4000b31	        0x4883c004	                              add rax, 4	       747	libbfd.c	FUNCTION_50
0x4000b35	           0xfb600	                   movzx eax, byte [rax]	       747	libbfd.c	FUNCTION_50
0x4000b38	           0xfb6c0	                           movzx eax, al	       747	libbfd.c	FUNCTION_50
0x4000b3b	        0x480945f8	                 or qword [rbp - 8], rax	       747	libbfd.c	FUNCTION_50
0x4000b3f	      0x48c165f808	                  shl qword [rbp - 8], 8	       747	libbfd.c	FUNCTION_50
0x4000b44	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       748	libbfd.c	FUNCTION_50
0x4000b48	        0x4883c005	                              add rax, 5	       748	libbfd.c	FUNCTION_50
0x4000b4c	           0xfb600	                   movzx eax, byte [rax]	       748	libbfd.c	FUNCTION_50
0x4000b4f	           0xfb6c0	                           movzx eax, al	       748	libbfd.c	FUNCTION_50
0x4000b52	        0x480945f8	                 or qword [rbp - 8], rax	       748	libbfd.c	FUNCTION_50
0x4000b56	      0x48c165f808	                  shl qword [rbp - 8], 8	       748	libbfd.c	FUNCTION_50
0x4000b5b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       749	libbfd.c	FUNCTION_50
0x4000b5f	        0x4883c006	                              add rax, 6	       749	libbfd.c	FUNCTION_50
0x4000b63	           0xfb600	                   movzx eax, byte [rax]	       749	libbfd.c	FUNCTION_50
0x4000b66	           0xfb6c0	                           movzx eax, al	       749	libbfd.c	FUNCTION_50
0x4000b69	        0x480945f8	                 or qword [rbp - 8], rax	       749	libbfd.c	FUNCTION_50
0x4000b6d	      0x48c165f808	                  shl qword [rbp - 8], 8	       749	libbfd.c	FUNCTION_50
0x4000b72	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       750	libbfd.c	FUNCTION_50
0x4000b76	        0x4883c007	                              add rax, 7	       750	libbfd.c	FUNCTION_50
0x4000b7a	           0xfb600	                   movzx eax, byte [rax]	       750	libbfd.c	FUNCTION_50
0x4000b7d	           0xfb6c0	                           movzx eax, al	       750	libbfd.c	FUNCTION_50
0x4000b80	        0x480945f8	                 or qword [rbp - 8], rax	       750	libbfd.c	FUNCTION_50
0x4000b84	    0x48b800000000	          movabs rax, 0x8000000000000000	       752	libbfd.c	FUNCTION_50
0x4000b8e	        0x483345f8	                xor rax, qword [rbp - 8]	       752	libbfd.c	FUNCTION_50
0x4000b92	          0x4889c2	                            mov rdx, rax	       752	libbfd.c	FUNCTION_50
0x4000b95	    0x48b800000000	          movabs rax, 0x8000000000000000	       752	libbfd.c	FUNCTION_50
0x4000b9f	          0x4801d0	                            add rax, rdx	       752	libbfd.c	FUNCTION_50
0x4000ba2	              0x5d	                                 pop rbp	       757	libbfd.c	FUNCTION_50
0x4000ba3	              0xc3	                                     ret	       757	libbfd.c	FUNCTION_50
_bfd_read_signed_leb128	DO,1:WHILE,0:ELSE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,1	43
0x400146b	              0x55	                                push rbp	      1144	libbfd.c	FUNCTION_66
0x400146c	          0x4889e5	                            mov rbp, rsp	      1144	libbfd.c	FUNCTION_66
0x400146f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1144	libbfd.c	FUNCTION_66
0x4001473	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1144	libbfd.c	FUNCTION_66
0x4001477	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1144	libbfd.c	FUNCTION_66
0x400147b	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1150	libbfd.c	FUNCTION_66
0x4001483	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1151	libbfd.c	FUNCTION_66
0x400148a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1152	libbfd.c	FUNCTION_66
0x4001491	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1155	libbfd.c	FUNCTION_66	DO_1	CALL_1
0x4001495	           0xfb600	                   movzx eax, byte [rax]	      1155	libbfd.c	FUNCTION_66	DO_1	CALL_1
0x4001498	          0x8845ef	               mov byte [rbp - 0x11], al	      1155	libbfd.c	FUNCTION_66	DO_1	CALL_1
0x400149b	      0x488345d001	               add qword [rbp - 0x30], 1	      1156	libbfd.c	FUNCTION_66	DO_1
0x40014a0	        0x8345f401	                add dword [rbp - 0xc], 1	      1157	libbfd.c	FUNCTION_66	DO_1
0x40014a4	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	      1158	libbfd.c	FUNCTION_66	DO_1
0x40014a8	          0x83e07f	                           and eax, 0x7f	      1158	libbfd.c	FUNCTION_66	DO_1
0x40014ab	          0x4889c2	                            mov rdx, rax	      1158	libbfd.c	FUNCTION_66	DO_1
0x40014ae	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1158	libbfd.c	FUNCTION_66	DO_1
0x40014b1	            0x89c1	                            mov ecx, eax	      1158	libbfd.c	FUNCTION_66	DO_1
0x40014b3	          0x48d3e2	                             shl rdx, cl	      1158	libbfd.c	FUNCTION_66	DO_1
0x40014b6	          0x4889d0	                            mov rax, rdx	      1158	libbfd.c	FUNCTION_66	DO_1
0x40014b9	        0x480945f8	                 or qword [rbp - 8], rax	      1158	libbfd.c	FUNCTION_66	DO_1
0x40014bd	        0x8345f007	               add dword [rbp - 0x10], 7	      1159	libbfd.c	FUNCTION_66	DO_1
0x40014c1	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	      1161	libbfd.c	FUNCTION_66
0x40014c5	            0x84c0	                             test al, al	      1161	libbfd.c	FUNCTION_66
0x40014c7	            0x78c8	                            js 0x4001491	      1161	libbfd.c	FUNCTION_66
0x40014c9	        0x837df03f	           cmp dword [rbp - 0x10], 0x3f 	      1162	libbfd.c	FUNCTION_66	IF_1
0x40014cd	            0x7721	                            ja 0x40014f0	      1162	libbfd.c	FUNCTION_66	IF_1
0x40014cf	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	      1162	libbfd.c	FUNCTION_66	IF_1
0x40014d3	          0x83e040	                           and eax, 0x40	      1162	libbfd.c	FUNCTION_66	IF_1
0x40014d6	            0x85c0	                           test eax, eax	      1162	libbfd.c	FUNCTION_66	IF_1
0x40014d8	            0x7416	                            je 0x40014f0	      1162	libbfd.c	FUNCTION_66	IF_1
0x40014da	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1163	libbfd.c	FUNCTION_66	IF_1
0x40014dd	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1163	libbfd.c	FUNCTION_66	IF_1
0x40014e4	            0x89c1	                            mov ecx, eax	      1163	libbfd.c	FUNCTION_66	IF_1
0x40014e6	          0x48d3e2	                             shl rdx, cl	      1163	libbfd.c	FUNCTION_66	IF_1
0x40014e9	          0x4889d0	                            mov rax, rdx	      1163	libbfd.c	FUNCTION_66	IF_1
0x40014ec	        0x480945f8	                 or qword [rbp - 8], rax	      1163	libbfd.c	FUNCTION_66	IF_1
0x40014f0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1164	libbfd.c	FUNCTION_66
0x40014f4	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1164	libbfd.c	FUNCTION_66
0x40014f7	            0x8910	                    mov dword [rax], edx	      1164	libbfd.c	FUNCTION_66
0x40014f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1165	libbfd.c	FUNCTION_66
0x40014fd	              0x5d	                                 pop rbp	      1166	libbfd.c	FUNCTION_66
0x40014fe	              0xc3	                                     ret	      1166	libbfd.c	FUNCTION_66
bfd_generic_is_local_label_name	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	20
0x4001226	              0x55	                                push rbp	      1037	libbfd.c	FUNCTION_62
0x4001227	          0x4889e5	                            mov rbp, rsp	      1037	libbfd.c	FUNCTION_62
0x400122a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1037	libbfd.c	FUNCTION_62
0x400122e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1037	libbfd.c	FUNCTION_62
0x4001232	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4001236	        0x488b4008	                mov rax, qword [rax + 8]	      1038	libbfd.c	FUNCTION_62	CALL_1
0x400123a	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	      1038	libbfd.c	FUNCTION_62	CALL_1
0x400123e	            0x3c5f	                            cmp al, 0x5f	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4001240	            0x7507	                           jne 0x4001249	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4001242	      0xb84c000000	                           mov eax, 0x4c	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4001247	            0xeb05	                           jmp 0x400124e	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4001249	      0xb82e000000	                           mov eax, 0x2e	      1038	libbfd.c	FUNCTION_62	CALL_1
0x400124e	          0x8845ff	                  mov byte [rbp - 1], al	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4001251	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1040	libbfd.c	FUNCTION_62
0x4001255	           0xfb600	                   movzx eax, byte [rax]	      1040	libbfd.c	FUNCTION_62
0x4001258	          0x3a45ff	                  cmp al, byte [rbp - 1]	      1040	libbfd.c	FUNCTION_62
0x400125b	           0xf94c0	                                 sete al	      1040	libbfd.c	FUNCTION_62
0x400125e	           0xfb6c0	                           movzx eax, al	      1040	libbfd.c	FUNCTION_62
0x4001261	              0x5d	                                 pop rbp	      1041	libbfd.c	FUNCTION_62
0x4001262	              0xc3	                                     ret	      1041	libbfd.c	FUNCTION_62
_bfd_int_bfd_0	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	6
0x400014a	              0x55	                                push rbp	       140	libbfd.c	FUNCTION_13
0x400014b	          0x4889e5	                            mov rbp, rsp	       140	libbfd.c	FUNCTION_13
0x400014e	        0x48897df8	                mov qword [rbp - 8], rdi	       140	libbfd.c	FUNCTION_13
0x4000152	      0xb800000000	                              mov eax, 0	       141	libbfd.c	FUNCTION_13
0x4000157	              0x5d	                                 pop rbp	       142	libbfd.c	FUNCTION_13
0x4000158	              0xc3	                                     ret	       142	libbfd.c	FUNCTION_13
_bfd_uint_bfd_0	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	6
0x4000159	              0x55	                                push rbp	       146	libbfd.c	FUNCTION_14
0x400015a	          0x4889e5	                            mov rbp, rsp	       146	libbfd.c	FUNCTION_14
0x400015d	        0x48897df8	                mov qword [rbp - 8], rdi	       146	libbfd.c	FUNCTION_14
0x4000161	      0xb800000000	                              mov eax, 0	       147	libbfd.c	FUNCTION_14
0x4000166	              0x5d	                                 pop rbp	       148	libbfd.c	FUNCTION_14
0x4000167	              0xc3	                                     ret	       148	libbfd.c	FUNCTION_14
bfd_putl16	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	18
0x40006ca	              0x55	                                push rbp	       610	libbfd.c	FUNCTION_41
0x40006cb	          0x4889e5	                            mov rbp, rsp	       610	libbfd.c	FUNCTION_41
0x40006ce	        0x48897de8	             mov qword [rbp - 0x18], rdi	       610	libbfd.c	FUNCTION_41
0x40006d2	        0x488975e0	             mov qword [rbp - 0x20], rsi	       610	libbfd.c	FUNCTION_41
0x40006d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       611	libbfd.c	FUNCTION_41
0x40006da	        0x488945f8	                mov qword [rbp - 8], rax	       611	libbfd.c	FUNCTION_41
0x40006de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       612	libbfd.c	FUNCTION_41
0x40006e2	            0x89c2	                            mov edx, eax	       612	libbfd.c	FUNCTION_41
0x40006e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	libbfd.c	FUNCTION_41
0x40006e8	            0x8810	                      mov byte [rax], dl	       612	libbfd.c	FUNCTION_41
0x40006ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	libbfd.c	FUNCTION_41
0x40006ee	        0x4883c001	                              add rax, 1	       613	libbfd.c	FUNCTION_41
0x40006f2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       613	libbfd.c	FUNCTION_41
0x40006f6	        0x48c1ea08	                              shr rdx, 8	       613	libbfd.c	FUNCTION_41
0x40006fa	            0x8810	                      mov byte [rax], dl	       613	libbfd.c	FUNCTION_41
0x40006fc	              0x90	                                     nop	       614	libbfd.c	FUNCTION_41
0x40006fd	              0x5d	                                 pop rbp	       614	libbfd.c	FUNCTION_41
0x40006fe	              0xc3	                                     ret	       614	libbfd.c	FUNCTION_41
bfd_realloc_or_free	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,2	21
0x4000469	              0x55	                                push rbp	       342	libbfd.c	FUNCTION_32
0x400046a	          0x4889e5	                            mov rbp, rsp	       342	libbfd.c	FUNCTION_32
0x400046d	        0x4883ec20	                           sub rsp, 0x20	       342	libbfd.c	FUNCTION_32
0x4000471	        0x48897de8	             mov qword [rbp - 0x18], rdi	       342	libbfd.c	FUNCTION_32
0x4000475	        0x488975e0	             mov qword [rbp - 0x20], rsi	       342	libbfd.c	FUNCTION_32
0x4000479	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       343	libbfd.c	FUNCTION_32	CALL_1
0x400047d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       343	libbfd.c	FUNCTION_32	CALL_1
0x4000481	          0x4889d6	                            mov rsi, rdx	       343	libbfd.c	FUNCTION_32	CALL_1
0x4000484	          0x4889c7	                            mov rdi, rax	       343	libbfd.c	FUNCTION_32	CALL_1
0x4000487	      0xe800000000	                          call 0x400048c	       343	libbfd.c	FUNCTION_32	CALL_1
0x400048c	        0x488945f8	                mov qword [rbp - 8], rax	       343	libbfd.c	FUNCTION_32	CALL_1
0x4000490	      0x48837df800	                  cmp qword [rbp - 8], 0	       345	libbfd.c	FUNCTION_32	IF_1
0x4000495	            0x7513	                           jne 0x40004aa	       345	libbfd.c	FUNCTION_32	IF_1
0x4000497	      0x48837de800	               cmp qword [rbp - 0x18], 0	       345	libbfd.c	FUNCTION_32	IF_1
0x400049c	            0x740c	                            je 0x40004aa	       345	libbfd.c	FUNCTION_32	IF_1
0x400049e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       346	libbfd.c	FUNCTION_32	CALL_2
0x40004a2	          0x4889c7	                            mov rdi, rax	       346	libbfd.c	FUNCTION_32	CALL_2
0x40004a5	      0xe800000000	                          call 0x40004aa	       346	libbfd.c	FUNCTION_32	CALL_2
0x40004aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       348	libbfd.c	FUNCTION_32
0x40004ae	              0xc9	                                   leave	       349	libbfd.c	FUNCTION_32
0x40004af	              0xc3	                                     ret	       349	libbfd.c	FUNCTION_32
_bfd_bool_bfd_false	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	6
0x4000040	              0x55	                                push rbp	        45	libbfd.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        45	libbfd.c	FUNCTION_1
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	        45	libbfd.c	FUNCTION_1
0x4000048	      0xb800000000	                              mov eax, 0	        46	libbfd.c	FUNCTION_1
0x400004d	              0x5d	                                 pop rbp	        47	libbfd.c	FUNCTION_1
0x400004e	              0xc3	                                     ret	        47	libbfd.c	FUNCTION_1
_bfd_bool_bfd_true	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	6
0x400009d	              0x55	                                push rbp	        78	libbfd.c	FUNCTION_5
0x400009e	          0x4889e5	                            mov rbp, rsp	        78	libbfd.c	FUNCTION_5
0x40000a1	        0x48897df8	                mov qword [rbp - 8], rdi	        78	libbfd.c	FUNCTION_5
0x40000a5	      0xb801000000	                              mov eax, 1	        79	libbfd.c	FUNCTION_5
0x40000aa	              0x5d	                                 pop rbp	        80	libbfd.c	FUNCTION_5
0x40000ab	              0xc3	                                     ret	        80	libbfd.c	FUNCTION_5
bfd_getl64	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	54
0x4000a00	              0x55	                                push rbp	       714	libbfd.c	FUNCTION_49
0x4000a01	          0x4889e5	                            mov rbp, rsp	       714	libbfd.c	FUNCTION_49
0x4000a04	        0x48897de8	             mov qword [rbp - 0x18], rdi	       714	libbfd.c	FUNCTION_49
0x4000a08	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       716	libbfd.c	FUNCTION_49
0x4000a0c	        0x488945f0	             mov qword [rbp - 0x10], rax	       716	libbfd.c	FUNCTION_49
0x4000a10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       719	libbfd.c	FUNCTION_49
0x4000a14	        0x4883c007	                              add rax, 7	       719	libbfd.c	FUNCTION_49
0x4000a18	           0xfb600	                   movzx eax, byte [rax]	       719	libbfd.c	FUNCTION_49
0x4000a1b	           0xfb6c0	                           movzx eax, al	       719	libbfd.c	FUNCTION_49
0x4000a1e	        0x488945f8	                mov qword [rbp - 8], rax	       719	libbfd.c	FUNCTION_49
0x4000a22	      0x48c165f808	                  shl qword [rbp - 8], 8	       719	libbfd.c	FUNCTION_49
0x4000a27	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       720	libbfd.c	FUNCTION_49
0x4000a2b	        0x4883c006	                              add rax, 6	       720	libbfd.c	FUNCTION_49
0x4000a2f	           0xfb600	                   movzx eax, byte [rax]	       720	libbfd.c	FUNCTION_49
0x4000a32	           0xfb6c0	                           movzx eax, al	       720	libbfd.c	FUNCTION_49
0x4000a35	        0x480945f8	                 or qword [rbp - 8], rax	       720	libbfd.c	FUNCTION_49
0x4000a39	      0x48c165f808	                  shl qword [rbp - 8], 8	       720	libbfd.c	FUNCTION_49
0x4000a3e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       721	libbfd.c	FUNCTION_49
0x4000a42	        0x4883c005	                              add rax, 5	       721	libbfd.c	FUNCTION_49
0x4000a46	           0xfb600	                   movzx eax, byte [rax]	       721	libbfd.c	FUNCTION_49
0x4000a49	           0xfb6c0	                           movzx eax, al	       721	libbfd.c	FUNCTION_49
0x4000a4c	        0x480945f8	                 or qword [rbp - 8], rax	       721	libbfd.c	FUNCTION_49
0x4000a50	      0x48c165f808	                  shl qword [rbp - 8], 8	       721	libbfd.c	FUNCTION_49
0x4000a55	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       722	libbfd.c	FUNCTION_49
0x4000a59	        0x4883c004	                              add rax, 4	       722	libbfd.c	FUNCTION_49
0x4000a5d	           0xfb600	                   movzx eax, byte [rax]	       722	libbfd.c	FUNCTION_49
0x4000a60	           0xfb6c0	                           movzx eax, al	       722	libbfd.c	FUNCTION_49
0x4000a63	        0x480945f8	                 or qword [rbp - 8], rax	       722	libbfd.c	FUNCTION_49
0x4000a67	      0x48c165f808	                  shl qword [rbp - 8], 8	       722	libbfd.c	FUNCTION_49
0x4000a6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       723	libbfd.c	FUNCTION_49
0x4000a70	        0x4883c003	                              add rax, 3	       723	libbfd.c	FUNCTION_49
0x4000a74	           0xfb600	                   movzx eax, byte [rax]	       723	libbfd.c	FUNCTION_49
0x4000a77	           0xfb6c0	                           movzx eax, al	       723	libbfd.c	FUNCTION_49
0x4000a7a	        0x480945f8	                 or qword [rbp - 8], rax	       723	libbfd.c	FUNCTION_49
0x4000a7e	      0x48c165f808	                  shl qword [rbp - 8], 8	       723	libbfd.c	FUNCTION_49
0x4000a83	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       724	libbfd.c	FUNCTION_49
0x4000a87	        0x4883c002	                              add rax, 2	       724	libbfd.c	FUNCTION_49
0x4000a8b	           0xfb600	                   movzx eax, byte [rax]	       724	libbfd.c	FUNCTION_49
0x4000a8e	           0xfb6c0	                           movzx eax, al	       724	libbfd.c	FUNCTION_49
0x4000a91	        0x480945f8	                 or qword [rbp - 8], rax	       724	libbfd.c	FUNCTION_49
0x4000a95	      0x48c165f808	                  shl qword [rbp - 8], 8	       724	libbfd.c	FUNCTION_49
0x4000a9a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       725	libbfd.c	FUNCTION_49
0x4000a9e	        0x4883c001	                              add rax, 1	       725	libbfd.c	FUNCTION_49
0x4000aa2	           0xfb600	                   movzx eax, byte [rax]	       725	libbfd.c	FUNCTION_49
0x4000aa5	           0xfb6c0	                           movzx eax, al	       725	libbfd.c	FUNCTION_49
0x4000aa8	        0x480945f8	                 or qword [rbp - 8], rax	       725	libbfd.c	FUNCTION_49
0x4000aac	      0x48c165f808	                  shl qword [rbp - 8], 8	       725	libbfd.c	FUNCTION_49
0x4000ab1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       726	libbfd.c	FUNCTION_49
0x4000ab5	           0xfb600	                   movzx eax, byte [rax]	       726	libbfd.c	FUNCTION_49
0x4000ab8	           0xfb6c0	                           movzx eax, al	       726	libbfd.c	FUNCTION_49
0x4000abb	        0x480945f8	                 or qword [rbp - 8], rax	       726	libbfd.c	FUNCTION_49
0x4000abf	        0x488b45f8	                mov rax, qword [rbp - 8]	       728	libbfd.c	FUNCTION_49
0x4000ac3	              0x5d	                                 pop rbp	       734	libbfd.c	FUNCTION_49
0x4000ac4	              0xc3	                                     ret	       734	libbfd.c	FUNCTION_49
_bfd_read_unsigned_leb128	DO,1:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	31
0x4001342	              0x55	                                push rbp	      1077	libbfd.c	FUNCTION_64
0x4001343	          0x4889e5	                            mov rbp, rsp	      1077	libbfd.c	FUNCTION_64
0x4001346	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1077	libbfd.c	FUNCTION_64
0x400134a	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1077	libbfd.c	FUNCTION_64
0x400134e	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1077	libbfd.c	FUNCTION_64
0x4001352	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1083	libbfd.c	FUNCTION_64
0x400135a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1084	libbfd.c	FUNCTION_64
0x4001361	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1085	libbfd.c	FUNCTION_64
0x4001368	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	libbfd.c	FUNCTION_64	DO_1	CALL_1
0x400136c	           0xfb600	                   movzx eax, byte [rax]	      1088	libbfd.c	FUNCTION_64	DO_1	CALL_1
0x400136f	          0x8845ef	               mov byte [rbp - 0x11], al	      1088	libbfd.c	FUNCTION_64	DO_1	CALL_1
0x4001372	      0x488345d001	               add qword [rbp - 0x30], 1	      1089	libbfd.c	FUNCTION_64	DO_1
0x4001377	        0x8345f001	               add dword [rbp - 0x10], 1	      1090	libbfd.c	FUNCTION_64	DO_1
0x400137b	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	      1091	libbfd.c	FUNCTION_64	DO_1
0x400137f	          0x83e07f	                           and eax, 0x7f	      1091	libbfd.c	FUNCTION_64	DO_1
0x4001382	          0x4889c2	                            mov rdx, rax	      1091	libbfd.c	FUNCTION_64	DO_1
0x4001385	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1091	libbfd.c	FUNCTION_64	DO_1
0x4001388	            0x89c1	                            mov ecx, eax	      1091	libbfd.c	FUNCTION_64	DO_1
0x400138a	          0x48d3e2	                             shl rdx, cl	      1091	libbfd.c	FUNCTION_64	DO_1
0x400138d	          0x4889d0	                            mov rax, rdx	      1091	libbfd.c	FUNCTION_64	DO_1
0x4001390	        0x480945f8	                 or qword [rbp - 8], rax	      1091	libbfd.c	FUNCTION_64	DO_1
0x4001394	        0x8345f407	                add dword [rbp - 0xc], 7	      1092	libbfd.c	FUNCTION_64	DO_1
0x4001398	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	      1094	libbfd.c	FUNCTION_64
0x400139c	            0x84c0	                             test al, al	      1094	libbfd.c	FUNCTION_64
0x400139e	            0x78c8	                            js 0x4001368	      1094	libbfd.c	FUNCTION_64
0x40013a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1095	libbfd.c	FUNCTION_64
0x40013a4	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1095	libbfd.c	FUNCTION_64
0x40013a7	            0x8910	                    mov dword [rax], edx	      1095	libbfd.c	FUNCTION_64
0x40013a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1096	libbfd.c	FUNCTION_64
0x40013ad	              0x5d	                                 pop rbp	      1097	libbfd.c	FUNCTION_64
0x40013ae	              0xc3	                                     ret	      1097	libbfd.c	FUNCTION_64
_bfd_bool_bfd_link_false_error	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,1	10
0x400007f	              0x55	                                push rbp	        69	libbfd.c	FUNCTION_4
0x4000080	          0x4889e5	                            mov rbp, rsp	        69	libbfd.c	FUNCTION_4
0x4000083	        0x4883ec10	                           sub rsp, 0x10	        69	libbfd.c	FUNCTION_4
0x4000087	        0x48897df8	                mov qword [rbp - 8], rdi	        69	libbfd.c	FUNCTION_4
0x400008b	        0x488975f0	             mov qword [rbp - 0x10], rsi	        69	libbfd.c	FUNCTION_4
0x400008f	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	libbfd.c	FUNCTION_4	CALL_1
0x4000093	          0x4889c7	                            mov rdi, rax	        70	libbfd.c	FUNCTION_4	CALL_1
0x4000096	      0xe800000000	                          call 0x400009b	        70	libbfd.c	FUNCTION_4	CALL_1
0x400009b	              0xc9	                                   leave	        71	libbfd.c	FUNCTION_4
0x400009c	              0xc3	                                     ret	        71	libbfd.c	FUNCTION_4
_bfd_void_bfd_asection	DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0	7
0x40001b0	              0x55	                                push rbp	       180	libbfd.c	FUNCTION_19
0x40001b1	          0x4889e5	                            mov rbp, rsp	       180	libbfd.c	FUNCTION_19
0x40001b4	        0x48897df8	                mov qword [rbp - 8], rdi	       180	libbfd.c	FUNCTION_19
0x40001b8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       180	libbfd.c	FUNCTION_19
0x40001bc	              0x90	                                     nop	       181	libbfd.c	FUNCTION_19
0x40001bd	              0x5d	                                 pop rbp	       181	libbfd.c	FUNCTION_19
0x40001be	              0xc3	                                     ret	       181	libbfd.c	FUNCTION_19
