need_plt32_p	CALL,3:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,4:ELSE,0:DO,0	31
0x400cd7e	              0x55	                                push rbp	      7424	tc-i386.c	FUNCTION_89
0x400cd7f	          0x4889e5	                            mov rbp, rsp	      7424	tc-i386.c	FUNCTION_89
0x400cd82	        0x4883ec10	                           sub rsp, 0x10	      7424	tc-i386.c	FUNCTION_89
0x400cd86	        0x48897df8	                mov qword [rbp - 8], rdi	      7424	tc-i386.c	FUNCTION_89
0x400cd8a	    0x8b0500000000	            mov eax, dword [0x0400cd90] 	      7432	tc-i386.c	FUNCTION_89	IF_2
0x400cd90	            0x85c0	                           test eax, eax	      7432	tc-i386.c	FUNCTION_89	IF_2
0x400cd92	            0x7507	                           jne 0x400cd9b	      7432	tc-i386.c	FUNCTION_89	IF_2
0x400cd94	      0xb800000000	                              mov eax, 0	      7433	tc-i386.c	FUNCTION_89	IF_2
0x400cd99	            0xeb43	                           jmp 0x400cdde	      7433	tc-i386.c	FUNCTION_89	IF_2
0x400cd9b	        0x488b45f8	                mov rax, qword [rbp - 8]	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400cd9f	          0x4889c7	                            mov rdi, rax	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400cda2	      0xe800000000	                          call 0x400cda7	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400cda7	            0x85c0	                           test eax, eax	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400cda9	            0x7510	                           jne 0x400cdbb	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400cdab	        0x488b45f8	                mov rax, qword [rbp - 8]	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400cdaf	          0x4889c7	                            mov rdi, rax	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400cdb2	      0xe800000000	                          call 0x400cdb7	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400cdb7	            0x85c0	                           test eax, eax	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400cdb9	            0x7507	                           jne 0x400cdc2	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400cdbb	      0xb801000000	                              mov eax, 1	      7437	tc-i386.c	FUNCTION_89	IF_3
0x400cdc0	            0xeb1c	                           jmp 0x400cdde	      7437	tc-i386.c	FUNCTION_89	IF_3
0x400cdc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      7440	tc-i386.c	FUNCTION_89	IF_4	CALL_3
0x400cdc6	          0x4889c7	                            mov rdi, rax	      7440	tc-i386.c	FUNCTION_89	IF_4	CALL_3
0x400cdc9	      0xe800000000	                          call 0x400cdce	      7440	tc-i386.c	FUNCTION_89	IF_4	CALL_3
0x400cdce	            0x85c0	                           test eax, eax	      7440	tc-i386.c	FUNCTION_89	IF_4	CALL_3
0x400cdd0	            0x7507	                           jne 0x400cdd9	      7440	tc-i386.c	FUNCTION_89	IF_4	CALL_3
0x400cdd2	      0xb800000000	                              mov eax, 0	      7441	tc-i386.c	FUNCTION_89	IF_4
0x400cdd7	            0xeb05	                           jmp 0x400cdde	      7441	tc-i386.c	FUNCTION_89	IF_4
0x400cdd9	      0xb801000000	                              mov eax, 1	      7447	tc-i386.c	FUNCTION_89
0x400cdde	              0xc9	                                   leave	      7448	tc-i386.c	FUNCTION_89
0x400cddf	              0xc3	                                     ret	      7448	tc-i386.c	FUNCTION_89
finalize_imm	CALL,3:FOR,1:WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,0:DO,0	35
0x400a5fd	              0x55	                                push rbp	      6398	tc-i386.c	FUNCTION_85
0x400a5fe	          0x4889e5	                            mov rbp, rsp	      6398	tc-i386.c	FUNCTION_85
0x400a601	        0x4883ec10	                           sub rsp, 0x10	      6398	tc-i386.c	FUNCTION_85
0x400a605	    0x8b0500000000	            mov eax, dword [0x0400a60b] 	      6402	tc-i386.c	FUNCTION_85
0x400a60b	      0xba02000000	                              mov edx, 2	      6402	tc-i386.c	FUNCTION_85
0x400a610	          0x83f802	                              cmp eax, 2	      6402	tc-i386.c	FUNCTION_85
0x400a613	           0xf47c2	                          cmova eax, edx	      6402	tc-i386.c	FUNCTION_85
0x400a616	          0x8945fc	                mov dword [rbp - 4], eax	      6402	tc-i386.c	FUNCTION_85
0x400a619	        0x837dfc00	                  cmp dword [rbp - 4], 0	      6403	tc-i386.c	FUNCTION_85	IF_1
0x400a61d	            0x7453	                            je 0x400a672	      6403	tc-i386.c	FUNCTION_85	IF_1
0x400a61f	    0xc745f8000000	                  mov dword [rbp - 8], 0	      6405	tc-i386.c	FUNCTION_85	IF_1	FOR_1
0x400a626	            0xeb19	                           jmp 0x400a641	      6405	tc-i386.c	FUNCTION_85	IF_1	FOR_1
0x400a628	          0x8b45f8	                mov eax, dword [rbp - 8]	      6406	tc-i386.c	FUNCTION_85	IF_1	FOR_1	IF_2	CALL_1
0x400a62b	            0x89c7	                            mov edi, eax	      6406	tc-i386.c	FUNCTION_85	IF_1	FOR_1	IF_2	CALL_1
0x400a62d	      0xe868fcffff	                     call sym.update_imm	      6406	tc-i386.c	FUNCTION_85	IF_1	FOR_1	IF_2	CALL_1
0x400a632	            0x85c0	                           test eax, eax	      6406	tc-i386.c	FUNCTION_85	IF_1	FOR_1	IF_2	CALL_1
0x400a634	            0x7507	                           jne 0x400a63d	      6406	tc-i386.c	FUNCTION_85	IF_1	FOR_1	IF_2	CALL_1
0x400a636	      0xb800000000	                              mov eax, 0	      6407	tc-i386.c	FUNCTION_85	IF_1	FOR_1	IF_2
0x400a63b	            0xeb3a	                           jmp 0x400a677	      6407	tc-i386.c	FUNCTION_85	IF_1	FOR_1	IF_2
0x400a63d	        0x8345f801	                  add dword [rbp - 8], 1	      6405	tc-i386.c	FUNCTION_85	IF_1	FOR_1
0x400a641	          0x8b45f8	                mov eax, dword [rbp - 8]	      6405	tc-i386.c	FUNCTION_85	IF_1	FOR_1
0x400a644	          0x3b45fc	                cmp eax, dword [rbp - 4]	      6405	tc-i386.c	FUNCTION_85	IF_1	FOR_1
0x400a647	            0x72df	                            jb 0x400a628	      6405	tc-i386.c	FUNCTION_85	IF_1	FOR_1
0x400a649	      0xbe01000000	                              mov esi, 1	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400a64e	    0x488b3d000000	            mov rdi, qword [0x0400a655] 	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400a655	      0xe8d264ffff	             call sym.operand_type_check	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400a65a	            0x85c0	                           test eax, eax	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400a65c	            0x7414	                            je 0x400a672	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400a65e	      0xba00000000	                              mov edx, 0	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400a663	      0xbe0a190000	                         mov esi, 0x190a	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400a668	      0xbf00000000	                              mov edi, 0	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400a66d	      0xe800000000	                          call 0x400a672	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400a672	      0xb801000000	                              mov eax, 1	      6413	tc-i386.c	FUNCTION_85
0x400a677	              0xc9	                                   leave	      6414	tc-i386.c	FUNCTION_85
0x400a678	              0xc3	                                     ret	      6414	tc-i386.c	FUNCTION_85
smallest_imm_type	CALL,7:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,6:ELSE,5:DO,0	124
0x40017da	              0x55	                                push rbp	      2218	tc-i386.c	FUNCTION_38
0x40017db	          0x4889e5	                            mov rbp, rsp	      2218	tc-i386.c	FUNCTION_38
0x40017de	        0x4883ec20	                           sub rsp, 0x20	      2218	tc-i386.c	FUNCTION_38
0x40017e2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2218	tc-i386.c	FUNCTION_38
0x40017e6	    0x64488b042528	                mov rax, qword fs:[0x28]	      2218	tc-i386.c	FUNCTION_38
0x40017ef	        0x488945f8	                mov qword [rbp - 8], rax	      2218	tc-i386.c	FUNCTION_38
0x40017f3	            0x31c0	                            xor eax, eax	      2218	tc-i386.c	FUNCTION_38
0x40017f5	        0x488d45f0	                   lea rax, [rbp - 0x10]	      2221	tc-i386.c	FUNCTION_38	CALL_1
0x40017f9	      0xbe00000000	                              mov esi, 0	      2221	tc-i386.c	FUNCTION_38	CALL_1
0x40017fe	          0x4889c7	                            mov rdi, rax	      2221	tc-i386.c	FUNCTION_38	CALL_1
0x4001801	      0xe8fbecffff	               call sym.operand_type_set	      2221	tc-i386.c	FUNCTION_38	CALL_1
0x4001806	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2222	tc-i386.c	FUNCTION_38
0x400180a	          0x83c880	                      or eax, 0xffffff80	      2222	tc-i386.c	FUNCTION_38
0x400180d	          0x8845f1	                mov byte [rbp - 0xf], al	      2222	tc-i386.c	FUNCTION_38
0x4001810	    0x8b0500000000	            mov eax, dword [0x04001816] 	      2224	tc-i386.c	FUNCTION_38	IF_1
0x4001816	          0x83f802	                              cmp eax, 2	      2224	tc-i386.c	FUNCTION_38	IF_1
0x4001819	            0x7448	                            je 0x4001863	      2224	tc-i386.c	FUNCTION_38	IF_1
0x400181b	      0x48837de801	               cmp qword [rbp - 0x18], 1	      2224	tc-i386.c	FUNCTION_38	IF_1
0x4001820	            0x7541	                           jne 0x4001863	      2224	tc-i386.c	FUNCTION_38	IF_1
0x4001822	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2231	tc-i386.c	FUNCTION_38	IF_1
0x4001826	          0x83c802	                               or eax, 2	      2231	tc-i386.c	FUNCTION_38	IF_1
0x4001829	          0x8845f1	                mov byte [rbp - 0xf], al	      2231	tc-i386.c	FUNCTION_38	IF_1
0x400182c	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2232	tc-i386.c	FUNCTION_38	IF_1
0x4001830	          0x83c804	                               or eax, 4	      2232	tc-i386.c	FUNCTION_38	IF_1
0x4001833	          0x8845f1	                mov byte [rbp - 0xf], al	      2232	tc-i386.c	FUNCTION_38	IF_1
0x4001836	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2233	tc-i386.c	FUNCTION_38	IF_1
0x400183a	          0x83c808	                               or eax, 8	      2233	tc-i386.c	FUNCTION_38	IF_1
0x400183d	          0x8845f1	                mov byte [rbp - 0xf], al	      2233	tc-i386.c	FUNCTION_38	IF_1
0x4001840	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2234	tc-i386.c	FUNCTION_38	IF_1
0x4001844	          0x83c810	                            or eax, 0x10	      2234	tc-i386.c	FUNCTION_38	IF_1
0x4001847	          0x8845f1	                mov byte [rbp - 0xf], al	      2234	tc-i386.c	FUNCTION_38	IF_1
0x400184a	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2235	tc-i386.c	FUNCTION_38	IF_1
0x400184e	          0x83c820	                            or eax, 0x20	      2235	tc-i386.c	FUNCTION_38	IF_1
0x4001851	          0x8845f1	                mov byte [rbp - 0xf], al	      2235	tc-i386.c	FUNCTION_38	IF_1
0x4001854	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2236	tc-i386.c	FUNCTION_38	IF_1
0x4001858	          0x83c840	                            or eax, 0x40	      2236	tc-i386.c	FUNCTION_38	IF_1
0x400185b	          0x8845f1	                mov byte [rbp - 0xf], al	      2236	tc-i386.c	FUNCTION_38	IF_1
0x400185e	      0xe904010000	                           jmp 0x4001967	      2236	tc-i386.c	FUNCTION_38	IF_1
0x4001863	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2238	tc-i386.c	FUNCTION_38	ELSE_1	IF_2	CALL_2
0x4001867	          0x4889c7	                            mov rdi, rax	      2238	tc-i386.c	FUNCTION_38	ELSE_1	IF_2	CALL_2
0x400186a	      0xe836feffff	            call sym.fits_in_signed_byte	      2238	tc-i386.c	FUNCTION_38	ELSE_1	IF_2	CALL_2
0x400186f	            0x85c0	                           test eax, eax	      2238	tc-i386.c	FUNCTION_38	ELSE_1	IF_2	CALL_2
0x4001871	            0x7437	                            je 0x40018aa	      2238	tc-i386.c	FUNCTION_38	ELSE_1	IF_2	CALL_2
0x4001873	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2240	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x4001877	          0x83c804	                               or eax, 4	      2240	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x400187a	          0x8845f1	                mov byte [rbp - 0xf], al	      2240	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x400187d	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2241	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x4001881	          0x83c808	                               or eax, 8	      2241	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x4001884	          0x8845f1	                mov byte [rbp - 0xf], al	      2241	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x4001887	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2242	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x400188b	          0x83c810	                            or eax, 0x10	      2242	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x400188e	          0x8845f1	                mov byte [rbp - 0xf], al	      2242	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x4001891	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2243	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x4001895	          0x83c820	                            or eax, 0x20	      2243	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x4001898	          0x8845f1	                mov byte [rbp - 0xf], al	      2243	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x400189b	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2244	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x400189f	          0x83c840	                            or eax, 0x40	      2244	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x40018a2	          0x8845f1	                mov byte [rbp - 0xf], al	      2244	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x40018a5	      0xe9bd000000	                           jmp 0x4001967	      2244	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x40018aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2246	tc-i386.c	FUNCTION_38	ELSE_2	IF_3	CALL_3
0x40018ae	          0x4889c7	                            mov rdi, rax	      2246	tc-i386.c	FUNCTION_38	ELSE_2	IF_3	CALL_3
0x40018b1	      0xe80dfeffff	          call sym.fits_in_unsigned_byte	      2246	tc-i386.c	FUNCTION_38	ELSE_2	IF_3	CALL_3
0x40018b6	            0x85c0	                           test eax, eax	      2246	tc-i386.c	FUNCTION_38	ELSE_2	IF_3	CALL_3
0x40018b8	            0x742d	                            je 0x40018e7	      2246	tc-i386.c	FUNCTION_38	ELSE_2	IF_3	CALL_3
0x40018ba	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2248	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018be	          0x83c804	                               or eax, 4	      2248	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018c1	          0x8845f1	                mov byte [rbp - 0xf], al	      2248	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018c4	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2249	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018c8	          0x83c810	                            or eax, 0x10	      2249	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018cb	          0x8845f1	                mov byte [rbp - 0xf], al	      2249	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018ce	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2250	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018d2	          0x83c820	                            or eax, 0x20	      2250	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018d5	          0x8845f1	                mov byte [rbp - 0xf], al	      2250	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018d8	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2251	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018dc	          0x83c840	                            or eax, 0x40	      2251	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018df	          0x8845f1	                mov byte [rbp - 0xf], al	      2251	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018e2	      0xe980000000	                           jmp 0x4001967	      2251	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x40018e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x40018eb	          0x4889c7	                            mov rdi, rax	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x40018ee	      0xe800feffff	            call sym.fits_in_signed_word	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x40018f3	            0x85c0	                           test eax, eax	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x40018f5	            0x7510	                           jne 0x4001907	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x40018f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x40018fb	          0x4889c7	                            mov rdi, rax	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x40018fe	      0xe8d8fdffff	          call sym.fits_in_unsigned_word	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x4001903	            0x85c0	                           test eax, eax	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x4001905	            0x7420	                            je 0x4001927	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x4001907	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2255	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x400190b	          0x83c810	                            or eax, 0x10	      2255	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x400190e	          0x8845f1	                mov byte [rbp - 0xf], al	      2255	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x4001911	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2256	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x4001915	          0x83c820	                            or eax, 0x20	      2256	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x4001918	          0x8845f1	                mov byte [rbp - 0xf], al	      2256	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x400191b	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2257	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x400191f	          0x83c840	                            or eax, 0x40	      2257	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x4001922	          0x8845f1	                mov byte [rbp - 0xf], al	      2257	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x4001925	            0xeb40	                           jmp 0x4001967	      2257	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x4001927	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x400192b	          0x4889c7	                            mov rdi, rax	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x400192e	      0xe8e0fdffff	            call sym.fits_in_signed_long	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x4001933	            0x85c0	                           test eax, eax	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x4001935	            0x7416	                            je 0x400194d	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x4001937	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2261	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x400193b	          0x83c820	                            or eax, 0x20	      2261	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x400193e	          0x8845f1	                mov byte [rbp - 0xf], al	      2261	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x4001941	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2262	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x4001945	          0x83c840	                            or eax, 0x40	      2262	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x4001948	          0x8845f1	                mov byte [rbp - 0xf], al	      2262	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x400194b	            0xeb1a	                           jmp 0x4001967	      2262	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x400194d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2264	tc-i386.c	FUNCTION_38	ELSE_5	IF_6	CALL_7
0x4001951	          0x4889c7	                            mov rdi, rax	      2264	tc-i386.c	FUNCTION_38	ELSE_5	IF_6	CALL_7
0x4001954	      0xe8defdffff	          call sym.fits_in_unsigned_long	      2264	tc-i386.c	FUNCTION_38	ELSE_5	IF_6	CALL_7
0x4001959	            0x85c0	                           test eax, eax	      2264	tc-i386.c	FUNCTION_38	ELSE_5	IF_6	CALL_7
0x400195b	            0x740a	                            je 0x4001967	      2264	tc-i386.c	FUNCTION_38	ELSE_5	IF_6	CALL_7
0x400195d	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      2265	tc-i386.c	FUNCTION_38	ELSE_5	IF_6
0x4001961	          0x83c820	                            or eax, 0x20	      2265	tc-i386.c	FUNCTION_38	ELSE_5	IF_6
0x4001964	          0x8845f1	                mov byte [rbp - 0xf], al	      2265	tc-i386.c	FUNCTION_38	ELSE_5	IF_6
0x4001967	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2267	tc-i386.c	FUNCTION_38
0x400196b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2268	tc-i386.c	FUNCTION_38
0x400196f	    0x644833142528	                xor rdx, qword fs:[0x28]	      2268	tc-i386.c	FUNCTION_38
0x4001978	            0x7405	                            je 0x400197f	      2268	tc-i386.c	FUNCTION_38
0x400197a	      0xe800000000	                          call 0x400197f	      2268	tc-i386.c	FUNCTION_38
0x400197f	              0xc9	                                   leave	      2268	tc-i386.c	FUNCTION_38
0x4001980	              0xc3	                                     ret	      2268	tc-i386.c	FUNCTION_38
VEX_check_operands	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,6:ELSE,0:DO,0	55
0x400789d	              0x55	                                push rbp	      5235	tc-i386.c	FUNCTION_76
0x400789e	          0x4889e5	                            mov rbp, rsp	      5235	tc-i386.c	FUNCTION_76
0x40078a1	        0x4883ec08	                              sub rsp, 8	      5235	tc-i386.c	FUNCTION_76
0x40078a5	        0x48897df8	                mov qword [rbp - 8], rdi	      5235	tc-i386.c	FUNCTION_76
0x40078a9	    0x8b0500000000	            mov eax, dword [0x040078af] 	      5236	tc-i386.c	FUNCTION_76	IF_1
0x40078af	          0x83f803	                              cmp eax, 3	      5236	tc-i386.c	FUNCTION_76	IF_1
0x40078b2	            0x752e	                           jne 0x40078e2	      5236	tc-i386.c	FUNCTION_76	IF_1
0x40078b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5239	tc-i386.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x40078b8	          0x4889c7	                            mov rdi, rax	      5239	tc-i386.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x40078bb	      0xe89dc1ffff	               call sym.is_evex_encoding	      5239	tc-i386.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x40078c0	            0x85c0	                           test eax, eax	      5239	tc-i386.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x40078c2	            0x7514	                           jne 0x40078d8	      5239	tc-i386.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x40078c4	    0xc70500000000	               mov dword [0x040078ce], 8	      5241	tc-i386.c	FUNCTION_76	IF_1	IF_2
0x40078ce	      0xb801000000	                              mov eax, 1	      5242	tc-i386.c	FUNCTION_76	IF_1	IF_2
0x40078d3	      0xe9a1000000	                           jmp 0x4007979	      5242	tc-i386.c	FUNCTION_76	IF_1	IF_2
0x40078d8	      0xb800000000	                              mov eax, 0	      5244	tc-i386.c	FUNCTION_76	IF_1
0x40078dd	      0xe997000000	                           jmp 0x4007979	      5244	tc-i386.c	FUNCTION_76	IF_1
0x40078e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5247	tc-i386.c	FUNCTION_76	IF_3
0x40078e6	         0xfb6402d	           movzx eax, byte [rax + 0x2d] 	      5247	tc-i386.c	FUNCTION_76	IF_3
0x40078ea	          0x83e006	                              and eax, 6	      5247	tc-i386.c	FUNCTION_76	IF_3
0x40078ed	            0x84c0	                             test al, al	      5247	tc-i386.c	FUNCTION_76	IF_3
0x40078ef	            0x7522	                           jne 0x4007913	      5247	tc-i386.c	FUNCTION_76	IF_3
0x40078f1	    0x8b0500000000	            mov eax, dword [0x040078f7] 	      5250	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x40078f7	            0x85c0	                           test eax, eax	      5250	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x40078f9	            0x7411	                            je 0x400790c	      5250	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x40078fb	    0xc70500000000	               mov dword [0x04007905], 8	      5252	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x4007905	      0xb801000000	                              mov eax, 1	      5253	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x400790a	            0xeb6d	                           jmp 0x4007979	      5253	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x400790c	      0xb800000000	                              mov eax, 0	      5255	tc-i386.c	FUNCTION_76	IF_3
0x4007911	            0xeb66	                           jmp 0x4007979	      5255	tc-i386.c	FUNCTION_76	IF_3
0x4007913	        0x488b45f8	                mov rax, qword [rbp - 8]	      5259	tc-i386.c	FUNCTION_76	IF_5
0x4007917	         0xfb64039	           movzx eax, byte [rax + 0x39] 	      5259	tc-i386.c	FUNCTION_76	IF_5
0x400791b	          0x83e001	                              and eax, 1	      5259	tc-i386.c	FUNCTION_76	IF_5
0x400791e	            0x84c0	                             test al, al	      5259	tc-i386.c	FUNCTION_76	IF_5
0x4007920	            0x7452	                            je 0x4007974	      5259	tc-i386.c	FUNCTION_76	IF_5
0x4007922	    0x488b05000000	            mov rax, qword [0x04007929] 	      5261	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x4007929	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      5261	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400792d	            0x3c02	                               cmp al, 2	      5261	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400792f	            0x7517	                           jne 0x4007948	      5261	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x4007931	    0x488b05000000	            mov rax, qword [0x04007938] 	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4007938	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400793c	          0x4889c7	                            mov rdi, rax	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400793f	      0xe87b9effff	                   call sym.fits_in_imm4	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4007944	            0x85c0	                           test eax, eax	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4007946	            0x7511	                           jne 0x4007959	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4007948	    0xc70500000000	               mov dword [0x04007952], 5	      5264	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x4007952	      0xb801000000	                              mov eax, 1	      5265	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x4007957	            0xeb20	                           jmp 0x4007979	      5265	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x4007959	    0x48c705000000	               mov qword [0x04007964], 0	      5269	tc-i386.c	FUNCTION_76	IF_5
0x4007964	     0xfb605000000	           movzx eax, byte [0x0400796b] 	      5269	tc-i386.c	FUNCTION_76	IF_5
0x400796b	          0x83c801	                               or eax, 1	      5269	tc-i386.c	FUNCTION_76	IF_5
0x400796e	    0x880500000000	               mov byte [0x04007974], al	      5269	tc-i386.c	FUNCTION_76	IF_5
0x4007974	      0xb800000000	                              mov eax, 0	      5272	tc-i386.c	FUNCTION_76
0x4007979	              0xc9	                                   leave	      5273	tc-i386.c	FUNCTION_76
0x400797a	              0xc3	                                     ret	      5273	tc-i386.c	FUNCTION_76
i386_scale	CALL,5:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,1:ELSE,0:DO,0	79
0x400ef48	              0x55	                                push rbp	      8757	tc-i386.c	FUNCTION_105
0x400ef49	          0x4889e5	                            mov rbp, rsp	      8757	tc-i386.c	FUNCTION_105
0x400ef4c	              0x53	                                push rbx	      8757	tc-i386.c	FUNCTION_105
0x400ef4d	        0x4883ec38	                           sub rsp, 0x38	      8757	tc-i386.c	FUNCTION_105
0x400ef51	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      8757	tc-i386.c	FUNCTION_105
0x400ef55	    0x488b05000000	            mov rax, qword [0x0400ef5c] 	      8759	tc-i386.c	FUNCTION_105
0x400ef5c	        0x488945e0	             mov qword [rbp - 0x20], rax	      8759	tc-i386.c	FUNCTION_105
0x400ef60	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8761	tc-i386.c	FUNCTION_105
0x400ef64	    0x488905000000	            mov qword [0x0400ef6b], rax 	      8761	tc-i386.c	FUNCTION_105
0x400ef6b	      0xe800000000	                          call 0x400ef70	      8762	tc-i386.c	FUNCTION_105	CALL_1
0x400ef70	        0x488945e8	             mov qword [rbp - 0x18], rax	      8762	tc-i386.c	FUNCTION_105	CALL_1
0x400ef74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef78	        0x4883f802	                              cmp rax, 2	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef7c	            0x7428	                            je 0x400efa6	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef7e	        0x4883f802	                              cmp rax, 2	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef82	            0x7f08	                            jg 0x400ef8c	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef84	        0x4883f801	                              cmp rax, 1	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef88	            0x7410	                            je 0x400ef9a	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef8a	            0xeb3e	                           jmp 0x400efca	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef8c	        0x4883f804	                              cmp rax, 4	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef90	            0x7420	                            je 0x400efb2	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef92	        0x4883f808	                              cmp rax, 8	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef96	            0x7426	                            je 0x400efbe	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef98	            0xeb30	                           jmp 0x400efca	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400ef9a	    0xc70500000000	               mov dword [0x0400efa4], 0	      8767	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efa4	            0xeb7b	                           jmp 0x400f021	      8768	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efa6	    0xc70500000000	               mov dword [0x0400efb0], 1	      8770	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efb0	            0xeb6f	                           jmp 0x400f021	      8771	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efb2	    0xc70500000000	               mov dword [0x0400efbc], 2	      8773	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efbc	            0xeb63	                           jmp 0x400f021	      8774	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efbe	    0xc70500000000	               mov dword [0x0400efc8], 3	      8776	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efc8	            0xeb57	                           jmp 0x400f021	      8777	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efca	    0x488b05000000	            mov rax, qword [0x0400efd1] 	      8780	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efd1	           0xfb600	                   movzx eax, byte [rax]	      8780	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efd4	          0x8845df	               mov byte [rbp - 0x21], al	      8780	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efd7	    0x488b05000000	            mov rax, qword [0x0400efde] 	      8782	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efde	          0xc60000	                       mov byte [rax], 0	      8782	tc-i386.c	FUNCTION_105	SWITCH_1
0x400efe1	      0xbf00000000	                              mov edi, 0	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x400efe6	      0xe800000000	                          call 0x400efeb	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x400efeb	          0x4889c2	                            mov rdx, rax	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x400efee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x400eff2	          0x4889c6	                            mov rsi, rax	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x400eff5	          0x4889d7	                            mov rdi, rdx	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x400eff8	      0xb800000000	                              mov eax, 0	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x400effd	      0xe800000000	                          call 0x400f002	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x400f002	    0x488b05000000	            mov rax, qword [0x0400f009] 	      8785	tc-i386.c	FUNCTION_105	SWITCH_1
0x400f009	         0xfb655df	            movzx edx, byte [rbp - 0x21]	      8785	tc-i386.c	FUNCTION_105	SWITCH_1
0x400f00d	            0x8810	                      mov byte [rax], dl	      8785	tc-i386.c	FUNCTION_105	SWITCH_1
0x400f00f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8786	tc-i386.c	FUNCTION_105	SWITCH_1
0x400f013	    0x488905000000	            mov qword [0x0400f01a], rax 	      8786	tc-i386.c	FUNCTION_105	SWITCH_1
0x400f01a	      0xb800000000	                              mov eax, 0	      8787	tc-i386.c	FUNCTION_105	SWITCH_1
0x400f01f	            0xeb64	                           jmp 0x400f085	      8787	tc-i386.c	FUNCTION_105	SWITCH_1
0x400f021	    0x8b0500000000	            mov eax, dword [0x0400f027] 	      8790	tc-i386.c	FUNCTION_105	IF_1
0x400f027	            0x85c0	                           test eax, eax	      8790	tc-i386.c	FUNCTION_105	IF_1
0x400f029	            0x7440	                            je 0x400f06b	      8790	tc-i386.c	FUNCTION_105	IF_1
0x400f02b	    0x488b05000000	            mov rax, qword [0x0400f032] 	      8790	tc-i386.c	FUNCTION_105	IF_1
0x400f032	          0x4885c0	                           test rax, rax	      8790	tc-i386.c	FUNCTION_105	IF_1
0x400f035	            0x7534	                           jne 0x400f06b	      8790	tc-i386.c	FUNCTION_105	IF_1
0x400f037	    0x8b0500000000	            mov eax, dword [0x0400f03d] 	      8793	tc-i386.c	FUNCTION_105	IF_1
0x400f03d	      0xba01000000	                              mov edx, 1	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400f042	            0x89d3	                            mov ebx, edx	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400f044	            0x89c1	                            mov ecx, eax	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400f046	            0xd3e3	                             shl ebx, cl	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400f048	      0xbf00000000	                              mov edi, 0	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400f04d	      0xe800000000	                          call 0x400f052	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400f052	            0x89de	                            mov esi, ebx	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400f054	          0x4889c7	                            mov rdi, rax	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400f057	      0xb800000000	                              mov eax, 0	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400f05c	      0xe800000000	                          call 0x400f061	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400f061	    0xc70500000000	               mov dword [0x0400f06b], 0	      8794	tc-i386.c	FUNCTION_105	IF_1
0x400f06b	    0x488b05000000	            mov rax, qword [0x0400f072] 	      8796	tc-i386.c	FUNCTION_105
0x400f072	        0x488945c8	             mov qword [rbp - 0x38], rax	      8796	tc-i386.c	FUNCTION_105
0x400f076	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8797	tc-i386.c	FUNCTION_105
0x400f07a	    0x488905000000	            mov qword [0x0400f081], rax 	      8797	tc-i386.c	FUNCTION_105
0x400f081	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8798	tc-i386.c	FUNCTION_105
0x400f085	        0x4883c438	                           add rsp, 0x38	      8799	tc-i386.c	FUNCTION_105
0x400f089	              0x5b	                                 pop rbx	      8799	tc-i386.c	FUNCTION_105
0x400f08a	              0x5d	                                 pop rbp	      8799	tc-i386.c	FUNCTION_105
0x400f08b	              0xc3	                                     ret	      8799	tc-i386.c	FUNCTION_105
i386_intel_fold	CALL,4:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,1:DO,0	60
0x4014603	              0x55	                                push rbp	       236	tc-i386-intel.c	FUNCTION_147
0x4014604	          0x4889e5	                            mov rbp, rsp	       236	tc-i386-intel.c	FUNCTION_147
0x4014607	        0x4883ec20	                           sub rsp, 0x20	       236	tc-i386-intel.c	FUNCTION_147
0x401460b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       236	tc-i386-intel.c	FUNCTION_147
0x401460f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       236	tc-i386-intel.c	FUNCTION_147
0x4014613	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       237	tc-i386-intel.c	FUNCTION_147	CALL_1
0x4014617	          0x4889c7	                            mov rdi, rax	       237	tc-i386-intel.c	FUNCTION_147	CALL_1
0x401461a	      0xe800000000	                          call 0x401461f	       237	tc-i386-intel.c	FUNCTION_147	CALL_1
0x401461f	        0x488945f0	             mov qword [rbp - 0x10], rax	       237	tc-i386-intel.c	FUNCTION_147	CALL_1
0x4014623	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       238	tc-i386-intel.c	FUNCTION_147	IF_1	CALL_2
0x4014627	          0x4889c7	                            mov rdi, rax	       238	tc-i386-intel.c	FUNCTION_147	IF_1	CALL_2
0x401462a	      0xe800000000	                          call 0x401462f	       238	tc-i386-intel.c	FUNCTION_147	IF_1	CALL_2
0x401462f	    0x483d00000000	                              cmp rax, 0	       238	tc-i386-intel.c	FUNCTION_147	IF_1	CALL_2
0x4014635	            0x754b	                           jne 0x4014682	       238	tc-i386-intel.c	FUNCTION_147	IF_1	CALL_2
0x4014637	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       240	tc-i386-intel.c	FUNCTION_147	IF_1
0x401463b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       240	tc-i386-intel.c	FUNCTION_147	IF_1
0x401463f	        0x488945f8	                mov qword [rbp - 8], rax	       240	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014643	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       242	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014647	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       242	tc-i386-intel.c	FUNCTION_147	IF_1
0x401464b	          0x488b0a	                    mov rcx, qword [rdx]	       242	tc-i386-intel.c	FUNCTION_147	IF_1
0x401464e	          0x488908	                    mov qword [rax], rcx	       242	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014651	        0x488b4a08	                mov rcx, qword [rdx + 8]	       242	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014655	        0x48894808	                mov qword [rax + 8], rcx	       242	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014659	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       242	tc-i386-intel.c	FUNCTION_147	IF_1
0x401465d	        0x48894810	             mov qword [rax + 0x10], rcx	       242	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014661	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       242	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014665	        0x48895018	             mov qword [rax + 0x18], rdx	       242	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014669	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       243	tc-i386-intel.c	FUNCTION_147	IF_1
0x401466d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       243	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014671	        0x488b45f8	                mov rax, qword [rbp - 8]	       243	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014675	          0x4801c2	                            add rdx, rax	       243	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014678	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       243	tc-i386-intel.c	FUNCTION_147	IF_1
0x401467c	        0x48895010	             mov qword [rax + 0x10], rdx	       243	tc-i386-intel.c	FUNCTION_147	IF_1
0x4014680	            0xeb56	                           jmp 0x40146d8	       255	tc-i386-intel.c	FUNCTION_147
0x4014682	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       247	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2
0x4014686	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       247	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2
0x401468a	            0x3c03	                               cmp al, 3	       247	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2
0x401468c	            0x752b	                           jne 0x40146b9	       247	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2
0x401468e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       248	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2	CALL_4
0x4014692	          0x488b00	                    mov rax, qword [rax]	       248	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2	CALL_4
0x4014695	          0x4889c7	                            mov rdi, rax	       248	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2	CALL_4
0x4014698	      0xe800000000	                          call 0x401469d	       248	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2	CALL_4
0x401469d	      0xbe00000000	                              mov esi, 0	       248	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2	CALL_4
0x40146a2	          0x4889c7	                            mov rdi, rax	       248	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2	CALL_4
0x40146a5	      0xe800000000	                          call 0x40146aa	       248	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2	CALL_4
0x40146aa	            0x85c0	                           test eax, eax	       248	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2	CALL_4
0x40146ac	            0x750b	                           jne 0x40146b9	       248	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2	CALL_4
0x40146ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       250	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2
0x40146b2	          0x488b00	                    mov rax, qword [rax]	       250	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2
0x40146b5	        0x488945e0	             mov qword [rbp - 0x20], rax	       250	tc-i386-intel.c	FUNCTION_147	ELSE_1	IF_2
0x40146b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       251	tc-i386-intel.c	FUNCTION_147	ELSE_1
0x40146bd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       251	tc-i386-intel.c	FUNCTION_147	ELSE_1
0x40146c1	          0x488910	                    mov qword [rax], rdx	       251	tc-i386-intel.c	FUNCTION_147	ELSE_1
0x40146c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	tc-i386-intel.c	FUNCTION_147	ELSE_1
0x40146c8	    0x48c740080000	                  mov qword [rax + 8], 0	       252	tc-i386-intel.c	FUNCTION_147	ELSE_1
0x40146d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       253	tc-i386-intel.c	FUNCTION_147	ELSE_1
0x40146d4	        0xc6401803	                mov byte [rax + 0x18], 3	       253	tc-i386-intel.c	FUNCTION_147	ELSE_1
0x40146d8	              0x90	                                     nop	       255	tc-i386-intel.c	FUNCTION_147
0x40146d9	              0xc9	                                   leave	       255	tc-i386-intel.c	FUNCTION_147
0x40146da	              0xc3	                                     ret	       255	tc-i386-intel.c	FUNCTION_147
i386_finalize_displacement	CALL,15:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,11:ELSE,5:DO,0	207
0x400f4a0	              0x55	                                push rbp	      8954	tc-i386.c	FUNCTION_107
0x400f4a1	          0x4889e5	                            mov rbp, rsp	      8954	tc-i386.c	FUNCTION_107
0x400f4a4	              0x53	                                push rbx	      8954	tc-i386.c	FUNCTION_107
0x400f4a5	        0x4883ec48	                           sub rsp, 0x48	      8954	tc-i386.c	FUNCTION_107
0x400f4a9	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      8954	tc-i386.c	FUNCTION_107
0x400f4ad	        0x488975c0	             mov qword [rbp - 0x40], rsi	      8954	tc-i386.c	FUNCTION_107
0x400f4b1	        0x488955b0	             mov qword [rbp - 0x50], rdx	      8954	tc-i386.c	FUNCTION_107
0x400f4b5	        0x48894db8	             mov qword [rbp - 0x48], rcx	      8954	tc-i386.c	FUNCTION_107
0x400f4b9	    0x64488b042528	                mov rax, qword fs:[0x28]	      8954	tc-i386.c	FUNCTION_107
0x400f4c2	        0x488945e8	             mov qword [rbp - 0x18], rax	      8954	tc-i386.c	FUNCTION_107
0x400f4c6	            0x31c0	                            xor eax, eax	      8954	tc-i386.c	FUNCTION_107
0x400f4c8	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      8956	tc-i386.c	FUNCTION_107
0x400f4cf	    0x8b0500000000	            mov eax, dword [0x0400f4d5] 	      8961	tc-i386.c	FUNCTION_107	IF_1
0x400f4d5	            0x4898	                                    cdqe	      8961	tc-i386.c	FUNCTION_107	IF_1
0x400f4d7	        0x4883c034	                           add rax, 0x34	      8961	tc-i386.c	FUNCTION_107	IF_1
0x400f4db	    0x8b0485000000	                  mov eax, dword [rax*4]	      8961	tc-i386.c	FUNCTION_107	IF_1
0x400f4e2	      0x3d6a010000	                          cmp eax, 0x16a	      8961	tc-i386.c	FUNCTION_107	IF_1
0x400f4e7	            0x7438	                            je 0x400f521	      8961	tc-i386.c	FUNCTION_107	IF_1
0x400f4e9	    0x8b0500000000	            mov eax, dword [0x0400f4ef] 	      8962	tc-i386.c	FUNCTION_107	IF_1
0x400f4ef	            0x4898	                                    cdqe	      8962	tc-i386.c	FUNCTION_107	IF_1
0x400f4f1	        0x4883c034	                           add rax, 0x34	      8962	tc-i386.c	FUNCTION_107	IF_1
0x400f4f5	    0x8b0485000000	                  mov eax, dword [rax*4]	      8962	tc-i386.c	FUNCTION_107	IF_1
0x400f4fc	      0x3d83010000	                          cmp eax, 0x183	      8962	tc-i386.c	FUNCTION_107	IF_1
0x400f501	            0x741e	                            je 0x400f521	      8962	tc-i386.c	FUNCTION_107	IF_1
0x400f503	    0x8b0500000000	            mov eax, dword [0x0400f509] 	      8963	tc-i386.c	FUNCTION_107	IF_1
0x400f509	            0x4898	                                    cdqe	      8963	tc-i386.c	FUNCTION_107	IF_1
0x400f50b	        0x4883c034	                           add rax, 0x34	      8963	tc-i386.c	FUNCTION_107	IF_1
0x400f50f	    0x8b0485000000	                  mov eax, dword [rax*4]	      8963	tc-i386.c	FUNCTION_107	IF_1
0x400f516	      0x3d8d010000	                          cmp eax, 0x18d	      8963	tc-i386.c	FUNCTION_107	IF_1
0x400f51b	     0xf850e010000	                           jne 0x400f62f	      8963	tc-i386.c	FUNCTION_107	IF_1
0x400f521	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8965	tc-i386.c	FUNCTION_107	IF_1	IF_2
0x400f525	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8965	tc-i386.c	FUNCTION_107	IF_1	IF_2
0x400f529	            0x3c03	                               cmp al, 3	      8965	tc-i386.c	FUNCTION_107	IF_1	IF_2
0x400f52b	     0xf8524010000	                           jne 0x400f655	      8965	tc-i386.c	FUNCTION_107	IF_1	IF_2
0x400f531	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8968	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_1
0x400f535	          0x488b00	                    mov rax, qword [rax]	      8968	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_1
0x400f538	          0x4889c7	                            mov rdi, rax	      8968	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_1
0x400f53b	      0xe800000000	                          call 0x400f540	      8968	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_1
0x400f540	            0x85c0	                           test eax, eax	      8968	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_1
0x400f542	            0x744c	                            je 0x400f590	      8968	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_1
0x400f544	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8969	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_2
0x400f548	          0x488b00	                    mov rax, qword [rax]	      8969	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_2
0x400f54b	          0x4889c7	                            mov rdi, rax	      8969	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_2
0x400f54e	      0xe800000000	                          call 0x400f553	      8969	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_2
0x400f553	    0x483d00000000	                              cmp rax, 0	      8969	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_2
0x400f559	            0x7435	                            je 0x400f590	      8969	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_2
0x400f55b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x400f55f	          0x488b00	                    mov rax, qword [rax]	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x400f562	          0x4889c7	                            mov rdi, rax	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x400f565	      0xe800000000	                          call 0x400f56a	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x400f56a	          0x4889c2	                            mov rdx, rax	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x400f56d	    0x488b05000000	            mov rax, qword [0x0400f574] 	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x400f574	          0x4839c2	                            cmp rdx, rax	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x400f577	            0x7417	                            je 0x400f590	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x400f579	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8971	tc-i386.c	FUNCTION_107	IF_1	CALL_5
0x400f57d	          0x488b00	                    mov rax, qword [rax]	      8971	tc-i386.c	FUNCTION_107	IF_1	CALL_5
0x400f580	          0x4889c7	                            mov rdi, rax	      8971	tc-i386.c	FUNCTION_107	IF_1	CALL_5
0x400f583	      0xe800000000	                          call 0x400f588	      8971	tc-i386.c	FUNCTION_107	IF_1	CALL_5
0x400f588	          0x4889c7	                            mov rdi, rax	      8971	tc-i386.c	FUNCTION_107	IF_1	CALL_5
0x400f58b	      0xe800000000	                          call 0x400f590	      8971	tc-i386.c	FUNCTION_107	IF_1	CALL_5
0x400f590	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8972	tc-i386.c	FUNCTION_107	IF_1
0x400f594	        0xc6401814	            mov byte [rax + 0x18], 0x14 	      8972	tc-i386.c	FUNCTION_107	IF_1
0x400f598	    0x488b15000000	            mov rdx, qword [0x0400f59f] 	      8973	tc-i386.c	FUNCTION_107	IF_1
0x400f59f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8973	tc-i386.c	FUNCTION_107	IF_1
0x400f5a3	        0x48895008	                mov qword [rax + 8], rdx	      8973	tc-i386.c	FUNCTION_107	IF_1
0x400f5a7	    0x8b0500000000	            mov eax, dword [0x0400f5ad] 	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f5ad	            0x4898	                                    cdqe	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f5af	        0x4883c034	                           add rax, 0x34	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f5b3	    0x8b0485000000	                  mov eax, dword [rax*4]	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f5ba	      0x3d83010000	                          cmp eax, 0x183	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f5bf	            0x751c	                           jne 0x400f5dd	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f5c1	    0x8b0500000000	            mov eax, dword [0x0400f5c7] 	      8975	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f5c7	            0x4898	                                    cdqe	      8975	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f5c9	        0x4883c034	                           add rax, 0x34	      8975	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f5cd	    0xc70485000000	                    mov dword [rax*4], 9	      8975	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f5d8	      0xe96b010000	                           jmp 0x400f748	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f5dd	    0x8b0500000000	            mov eax, dword [0x0400f5e3] 	      8976	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x400f5e3	            0x4898	                                    cdqe	      8976	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x400f5e5	        0x4883c034	                           add rax, 0x34	      8976	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x400f5e9	    0x8b0485000000	                  mov eax, dword [rax*4]	      8976	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x400f5f0	      0x3d8d010000	                          cmp eax, 0x18d	      8976	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x400f5f5	            0x751c	                           jne 0x400f613	      8976	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x400f5f7	    0x8b0500000000	            mov eax, dword [0x0400f5fd] 	      8977	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x400f5fd	            0x4898	                                    cdqe	      8977	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x400f5ff	        0x4883c034	                           add rax, 0x34	      8977	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x400f603	    0xc70485000000	                    mov dword [rax*4], 1	      8977	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x400f60e	      0xe935010000	                           jmp 0x400f748	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f613	    0x8b0500000000	            mov eax, dword [0x0400f619] 	      8979	tc-i386.c	FUNCTION_107	IF_1	ELSE_2
0x400f619	            0x4898	                                    cdqe	      8979	tc-i386.c	FUNCTION_107	IF_1	ELSE_2
0x400f61b	        0x4883c034	                           add rax, 0x34	      8979	tc-i386.c	FUNCTION_107	IF_1	ELSE_2
0x400f61f	    0xc70485000000	                    mov dword [rax*4], 2	      8979	tc-i386.c	FUNCTION_107	IF_1	ELSE_2
0x400f62a	      0xe919010000	                           jmp 0x400f748	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x400f62f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8982	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f633	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8982	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f637	            0x3c01	                               cmp al, 1	      8982	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f639	            0x741b	                            je 0x400f656	      8982	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f63b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8983	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f63f	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8983	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f643	            0x84c0	                             test al, al	      8983	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f645	            0x740f	                            je 0x400f656	      8983	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f647	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8984	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f64b	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8984	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f64f	            0x3c06	                               cmp al, 6	      8984	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f651	            0x7530	                           jne 0x400f683	      8984	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f653	            0xeb01	                           jmp 0x400f656	      8984	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f655	              0x90	                                     nop	      8966	tc-i386.c	FUNCTION_107	IF_1	IF_2
0x400f656	      0xbf00000000	                              mov edi, 0	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x400f65b	      0xe800000000	                          call 0x400f660	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x400f660	          0x4889c2	                            mov rdx, rax	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x400f663	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x400f667	          0x4889c6	                            mov rsi, rax	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x400f66a	          0x4889d7	                            mov rdi, rdx	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x400f66d	      0xb800000000	                              mov eax, 0	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x400f672	      0xe800000000	                          call 0x400f677	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x400f677	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      8989	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f67e	      0xe9c5000000	                           jmp 0x400f748	      8989	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x400f683	    0x8b0500000000	            mov eax, dword [0x0400f689] 	      8992	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f689	          0x83f802	                              cmp eax, 2	      8992	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f68c	     0xf85b6000000	                           jne 0x400f748	      8992	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f692	     0xfb605000000	           movzx eax, byte [0x0400f699] 	      8993	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f699	            0x84c0	                             test al, al	      8993	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f69b	     0xf85a7000000	                           jne 0x400f748	      8993	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f6a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8994	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f6a5	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8994	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f6a9	            0x3c02	                               cmp al, 2	      8994	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f6ab	     0xf8597000000	                           jne 0x400f748	      8994	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f6b1	    0x8b0500000000	            mov eax, dword [0x0400f6b7] 	      8998	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f6b7	            0x4898	                                    cdqe	      8998	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f6b9	        0x4883c00e	                            add rax, 0xe	      8998	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f6bd	     0xfb614c50000	                 movzx edx, byte [rax*8]	      8998	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f6c5	          0x83e2fb	                     and edx, 0xfffffffb	      8998	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f6c8	    0x8814c5000000	                    mov byte [rax*8], dl	      8998	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x400f6cf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8999	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	CALL_8
0x400f6d3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8999	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	CALL_8
0x400f6d7	          0x4889c7	                            mov rdi, rax	      8999	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	CALL_8
0x400f6da	      0xe83420ffff	            call sym.fits_in_signed_long	      8999	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	CALL_8
0x400f6df	            0x85c0	                           test eax, eax	      8999	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	CALL_8
0x400f6e1	            0x7565	                           jne 0x400f748	      8999	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	CALL_8
0x400f6e3	    0x8b0500000000	            mov eax, dword [0x0400f6e9] 	      9001	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8
0x400f6e9	            0x4898	                                    cdqe	      9001	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8
0x400f6eb	        0x4883c00e	                            add rax, 0xe	      9001	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8
0x400f6ef	     0xfb614c50000	                 movzx edx, byte [rax*8]	      9001	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8
0x400f6f7	          0x83e2f7	                     and edx, 0xfffffff7	      9001	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8
0x400f6fa	    0x8814c5000000	                    mov byte [rax*8], dl	      9001	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8
0x400f701	    0x8b0500000000	            mov eax, dword [0x0400f707] 	      9002	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x400f707	            0x4898	                                    cdqe	      9002	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x400f709	        0x4883c00e	                            add rax, 0xe	      9002	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x400f70d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      9002	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x400f715	          0xc0e806	                               shr al, 6	      9002	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x400f718	          0x83e001	                              and eax, 1	      9002	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x400f71b	            0x84c0	                             test al, al	      9002	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x400f71d	            0x7429	                            je 0x400f748	      9002	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x400f71f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9005	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x400f723	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      9005	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x400f727	      0xbf00000000	                              mov edi, 0	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x400f72c	      0xe800000000	                          call 0x400f731	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x400f731	          0x4889de	                            mov rsi, rbx	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x400f734	          0x4889c7	                            mov rdi, rax	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x400f737	      0xb800000000	                              mov eax, 0	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x400f73c	      0xe800000000	                          call 0x400f741	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x400f741	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      9006	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x400f748	    0x8b0500000000	            mov eax, dword [0x0400f74e] 	      9027	tc-i386.c	FUNCTION_107
0x400f74e	            0x4898	                                    cdqe	      9027	tc-i386.c	FUNCTION_107
0x400f750	        0x4883c00e	                            add rax, 0xe	      9027	tc-i386.c	FUNCTION_107
0x400f754	    0x488b04c50000	                  mov rax, qword [rax*8]	      9027	tc-i386.c	FUNCTION_107
0x400f75c	        0x488945e0	             mov qword [rbp - 0x20], rax	      9027	tc-i386.c	FUNCTION_107
0x400f760	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      9028	tc-i386.c	FUNCTION_107
0x400f764	          0x83e0fe	                     and eax, 0xfffffffe	      9028	tc-i386.c	FUNCTION_107
0x400f767	          0x8845e2	               mov byte [rbp - 0x1e], al	      9028	tc-i386.c	FUNCTION_107
0x400f76a	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      9029	tc-i386.c	FUNCTION_107
0x400f76e	          0x83e0fd	                     and eax, 0xfffffffd	      9029	tc-i386.c	FUNCTION_107
0x400f771	          0x8845e2	               mov byte [rbp - 0x1e], al	      9029	tc-i386.c	FUNCTION_107
0x400f774	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      9030	tc-i386.c	FUNCTION_107
0x400f778	          0x83e0fb	                     and eax, 0xfffffffb	      9030	tc-i386.c	FUNCTION_107
0x400f77b	          0x8845e2	               mov byte [rbp - 0x1e], al	      9030	tc-i386.c	FUNCTION_107
0x400f77e	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      9031	tc-i386.c	FUNCTION_107
0x400f782	          0x83e0f7	                     and eax, 0xfffffff7	      9031	tc-i386.c	FUNCTION_107
0x400f785	          0x8845e2	               mov byte [rbp - 0x1e], al	      9031	tc-i386.c	FUNCTION_107
0x400f788	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      9032	tc-i386.c	FUNCTION_107
0x400f78c	          0x83e0ef	                     and eax, 0xffffffef	      9032	tc-i386.c	FUNCTION_107
0x400f78f	          0x8845e2	               mov byte [rbp - 0x1e], al	      9032	tc-i386.c	FUNCTION_107
0x400f792	        0x488d45e0	                   lea rax, [rbp - 0x20]	      9033	tc-i386.c	FUNCTION_107	IF_11	CALL_14
0x400f796	          0x4889c7	                            mov rdi, rax	      9033	tc-i386.c	FUNCTION_107	IF_11	CALL_14
0x400f799	      0xe8390dffff	          call sym.operand_type_all_zero	      9033	tc-i386.c	FUNCTION_107	IF_11	CALL_14
0x400f79e	            0x85c0	                           test eax, eax	      9033	tc-i386.c	FUNCTION_107	IF_11	CALL_14
0x400f7a0	            0x7438	                            je 0x400f7da	      9033	tc-i386.c	FUNCTION_107	IF_11	CALL_14
0x400f7a2	    0x8b1500000000	            mov edx, dword [0x0400f7a8] 	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7a8	    0x8b0500000000	            mov eax, dword [0x0400f7ae] 	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7ae	          0x4863d2	                         movsxd rdx, edx	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7b1	        0x488d5a0e	                    lea rbx, [rdx + 0xe]	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7b5	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7b9	            0x4898	                                    cdqe	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7bb	        0x4883c00e	                            add rax, 0xe	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7bf	    0x488b04c50000	                  mov rax, qword [rax*8]	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7c7	          0x4889d6	                            mov rsi, rdx	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7ca	          0x4889c7	                            mov rdi, rax	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7cd	      0xe81612ffff	               call sym.operand_type_and	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7d2	    0x488904dd0000	                  mov qword [rbx*8], rax	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x400f7da	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9037	tc-i386.c	FUNCTION_107
0x400f7dd	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      9038	tc-i386.c	FUNCTION_107
0x400f7e1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9038	tc-i386.c	FUNCTION_107
0x400f7ea	            0x7405	                            je 0x400f7f1	      9038	tc-i386.c	FUNCTION_107
0x400f7ec	      0xe800000000	                          call 0x400f7f1	      9038	tc-i386.c	FUNCTION_107
0x400f7f1	        0x4883c448	                           add rsp, 0x48	      9038	tc-i386.c	FUNCTION_107
0x400f7f5	              0x5b	                                 pop rbx	      9038	tc-i386.c	FUNCTION_107
0x400f7f6	              0x5d	                                 pop rbp	      9038	tc-i386.c	FUNCTION_107
0x400f7f7	              0xc3	                                     ret	      9038	tc-i386.c	FUNCTION_107
x86_dwarf2_addr_size	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	13
0x401675e	              0x55	                                push rbp	     11564	tc-i386.c	FUNCTION_138
0x401675f	          0x4889e5	                            mov rbp, rsp	     11564	tc-i386.c	FUNCTION_138
0x4016762	    0x8b0500000000	            mov eax, dword [0x04016768] 	     11566	tc-i386.c	
0x4016768	          0x83f802	                              cmp eax, 2	     11566	tc-i386.c	
0x401676b	            0x7507	                           jne 0x4016774	     11566	tc-i386.c	
0x401676d	      0xb804000000	                              mov eax, 4	     11567	tc-i386.c	
0x4016772	            0xeb12	                           jmp 0x4016786	     11567	tc-i386.c	
0x4016774	    0x488b05000000	            mov rax, qword [0x0401677b] 	     11569	tc-i386.c	
0x401677b	          0x4889c7	                            mov rdi, rax	     11569	tc-i386.c	
0x401677e	      0xe800000000	                          call 0x4016783	     11569	tc-i386.c	
0x4016783	          0xc1e803	                              shr eax, 3	     11569	tc-i386.c	
0x4016786	              0x5d	                                 pop rbp	     11570	tc-i386.c	FUNCTION_139
0x4016787	              0xc3	                                     ret	     11570	tc-i386.c	FUNCTION_139
operand_size_match	CALL,8:FOR,2:WHILE,0:functions,0:SWITCH,0:IF,10:ELSE,1:DO,0	199
0x4000fe9	              0x55	                                push rbp	      1969	tc-i386.c	FUNCTION_25
0x4000fea	          0x4889e5	                            mov rbp, rsp	      1969	tc-i386.c	FUNCTION_25
0x4000fed	        0x4883ec20	                           sub rsp, 0x20	      1969	tc-i386.c	FUNCTION_25
0x4000ff1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1969	tc-i386.c	FUNCTION_25
0x4000ff5	    0xc745fc010000	                  mov dword [rbp - 4], 1	      1971	tc-i386.c	FUNCTION_25
0x4000ffc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1974	tc-i386.c	FUNCTION_25	IF_1
0x4001000	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      1974	tc-i386.c	FUNCTION_25	IF_1
0x4001004	          0x83e020	                           and eax, 0x20	      1974	tc-i386.c	FUNCTION_25	IF_1
0x4001007	            0x84c0	                             test al, al	      1974	tc-i386.c	FUNCTION_25	IF_1
0x4001009	            0x752d	                           jne 0x4001038	      1974	tc-i386.c	FUNCTION_25	IF_1
0x400100b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1975	tc-i386.c	FUNCTION_25	IF_1
0x400100f	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      1975	tc-i386.c	FUNCTION_25	IF_1
0x4001013	          0x83e080	                     and eax, 0xffffff80	      1975	tc-i386.c	FUNCTION_25	IF_1
0x4001016	            0x84c0	                             test al, al	      1975	tc-i386.c	FUNCTION_25	IF_1
0x4001018	            0x751e	                           jne 0x4001038	      1975	tc-i386.c	FUNCTION_25	IF_1
0x400101a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1976	tc-i386.c	FUNCTION_25	IF_1
0x400101e	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      1976	tc-i386.c	FUNCTION_25	IF_1
0x4001022	          0x83e040	                           and eax, 0x40	      1976	tc-i386.c	FUNCTION_25	IF_1
0x4001025	            0x84c0	                             test al, al	      1976	tc-i386.c	FUNCTION_25	IF_1
0x4001027	            0x750f	                           jne 0x4001038	      1976	tc-i386.c	FUNCTION_25	IF_1
0x4001029	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1977	tc-i386.c	FUNCTION_25	IF_1
0x400102d	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      1977	tc-i386.c	FUNCTION_25	IF_1
0x4001031	          0x83e001	                              and eax, 1	      1977	tc-i386.c	FUNCTION_25	IF_1
0x4001034	            0x84c0	                             test al, al	      1977	tc-i386.c	FUNCTION_25	IF_1
0x4001036	            0x7408	                            je 0x4001040	      1977	tc-i386.c	FUNCTION_25	IF_1
0x4001038	          0x8b45fc	                mov eax, dword [rbp - 4]	      1978	tc-i386.c	FUNCTION_25	IF_1
0x400103b	      0xe965020000	                           jmp 0x40012a5	      1978	tc-i386.c	FUNCTION_25	IF_1
0x4001040	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x4001047	      0xe946010000	                           jmp 0x4001192	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x400104c	          0x8b45f8	                mov eax, dword [rbp - 8]	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x400104f	        0x4883c00e	                            add rax, 0xe	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001053	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x400105b	          0x83e001	                              and eax, 1	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x400105e	            0x84c0	                             test al, al	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001060	            0x7534	                           jne 0x4001096	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001062	          0x8b45f8	                mov eax, dword [rbp - 8]	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001065	        0x4883c00e	                            add rax, 0xe	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001069	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001071	          0xc0e802	                               shr al, 2	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001074	          0x83e001	                              and eax, 1	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001077	            0x84c0	                             test al, al	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001079	            0x751b	                           jne 0x4001096	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x400107b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1984	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x400107f	          0x8b55f8	                mov edx, dword [rbp - 8]	      1984	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001082	        0x4883c206	                              add rdx, 6	      1984	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001086	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      1984	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x400108b	          0xc0e807	                               shr al, 7	      1984	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x400108e	            0x84c0	                             test al, al	      1984	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001090	     0xf85f7000000	                           jne 0x400118d	      1984	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4001096	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x400109a	          0x8b55f8	                mov edx, dword [rbp - 8]	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x400109d	        0x4883c206	                              add rdx, 6	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x40010a1	       0xfb644d004	      movzx eax, byte [rax + rdx*8 + 4] 	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x40010a6	          0x83e001	                              and eax, 1	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x40010a9	            0x84c0	                             test al, al	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x40010ab	            0x7421	                            je 0x40010ce	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x40010ad	          0x8b55f8	                mov edx, dword [rbp - 8]	      1988	tc-i386.c	FUNCTION_25	FOR_1	IF_3	CALL_1
0x40010b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1988	tc-i386.c	FUNCTION_25	FOR_1	IF_3	CALL_1
0x40010b4	            0x89d6	                            mov esi, edx	      1988	tc-i386.c	FUNCTION_25	FOR_1	IF_3	CALL_1
0x40010b6	          0x4889c7	                            mov rdi, rax	      1988	tc-i386.c	FUNCTION_25	FOR_1	IF_3	CALL_1
0x40010b9	      0xe8adfbffff	                 call sym.match_reg_size	      1988	tc-i386.c	FUNCTION_25	FOR_1	IF_3	CALL_1
0x40010be	            0x85c0	                           test eax, eax	      1988	tc-i386.c	FUNCTION_25	FOR_1	IF_3	CALL_1
0x40010c0	            0x750c	                           jne 0x40010ce	      1988	tc-i386.c	FUNCTION_25	FOR_1	IF_3	CALL_1
0x40010c2	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1990	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x40010c9	      0xe9d3000000	                           jmp 0x40011a1	      1991	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x40010ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x40010d2	          0x8b55f8	                mov edx, dword [rbp - 8]	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x40010d5	        0x4883c206	                              add rdx, 6	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x40010d9	       0xfb644d004	      movzx eax, byte [rax + rdx*8 + 4] 	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x40010de	          0xc0e802	                               shr al, 2	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x40010e1	          0x83e001	                              and eax, 1	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x40010e4	            0x84c0	                             test al, al	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x40010e6	            0x7421	                            je 0x4001109	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x40010e8	          0x8b55f8	                mov edx, dword [rbp - 8]	      1995	tc-i386.c	FUNCTION_25	FOR_1	IF_4	CALL_2
0x40010eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1995	tc-i386.c	FUNCTION_25	FOR_1	IF_4	CALL_2
0x40010ef	            0x89d6	                            mov esi, edx	      1995	tc-i386.c	FUNCTION_25	FOR_1	IF_4	CALL_2
0x40010f1	          0x4889c7	                            mov rdi, rax	      1995	tc-i386.c	FUNCTION_25	FOR_1	IF_4	CALL_2
0x40010f4	      0xe88afcffff	                call sym.match_simd_size	      1995	tc-i386.c	FUNCTION_25	FOR_1	IF_4	CALL_2
0x40010f9	            0x85c0	                           test eax, eax	      1995	tc-i386.c	FUNCTION_25	FOR_1	IF_4	CALL_2
0x40010fb	            0x750c	                           jne 0x4001109	      1995	tc-i386.c	FUNCTION_25	FOR_1	IF_4	CALL_2
0x40010fd	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1997	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x4001104	      0xe998000000	                           jmp 0x40011a1	      1998	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x4001109	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x400110d	          0x8b55f8	                mov edx, dword [rbp - 8]	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x4001110	        0x4883c206	                              add rdx, 6	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x4001114	       0xfb644d006	      movzx eax, byte [rax + rdx*8 + 6] 	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x4001119	          0xc0e805	                               shr al, 5	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x400111c	          0x83e001	                              and eax, 1	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x400111f	            0x84c0	                             test al, al	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x4001121	            0x7433	                            je 0x4001156	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x4001123	          0x8b55f8	                mov edx, dword [rbp - 8]	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x4001126	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x400112a	            0x89d6	                            mov esi, edx	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x400112c	          0x4889c7	                            mov rdi, rax	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x400112f	      0xe837fbffff	                 call sym.match_reg_size	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x4001134	            0x85c0	                           test eax, eax	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x4001136	            0x7415	                            je 0x400114d	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x4001138	          0x8b55f8	                mov edx, dword [rbp - 8]	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x400113b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x400113f	            0x89d6	                            mov esi, edx	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x4001141	          0x4889c7	                            mov rdi, rax	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x4001144	      0xe83afcffff	                call sym.match_simd_size	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x4001149	            0x85c0	                           test eax, eax	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x400114b	            0x7509	                           jne 0x4001156	      2002	tc-i386.c	FUNCTION_25	FOR_1	IF_5	CALL_4
0x400114d	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2004	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x4001154	            0xeb4b	                           jmp 0x40011a1	      2005	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x4001156	          0x8b45f8	                mov eax, dword [rbp - 8]	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4001159	        0x4883c00e	                            add rax, 0xe	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x400115d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4001165	          0xc0e804	                               shr al, 4	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4001168	          0x83e001	                              and eax, 1	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x400116b	            0x84c0	                             test al, al	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x400116d	            0x741f	                            je 0x400118e	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x400116f	          0x8b55f8	                mov edx, dword [rbp - 8]	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4001172	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4001176	            0x89d6	                            mov esi, edx	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4001178	          0x4889c7	                            mov rdi, rax	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x400117b	      0xe8b5fcffff	                 call sym.match_mem_size	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4001180	            0x85c0	                           test eax, eax	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4001182	            0x750a	                           jne 0x400118e	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4001184	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2010	tc-i386.c	FUNCTION_25	FOR_1	IF_6
0x400118b	            0xeb14	                           jmp 0x40011a1	      2011	tc-i386.c	FUNCTION_25	FOR_1	IF_6
0x400118d	              0x90	                                     nop	      1985	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x400118e	        0x8345f801	                  add dword [rbp - 8], 1	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x4001192	    0x8b0500000000	            mov eax, dword [0x04001198] 	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x4001198	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x400119b	     0xf87abfeffff	                            ja 0x400104c	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x40011a1	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2015	tc-i386.c	FUNCTION_25	IF_7
0x40011a5	            0x7408	                            je 0x40011af	      2015	tc-i386.c	FUNCTION_25	IF_7
0x40011a7	          0x8b45fc	                mov eax, dword [rbp - 4]	      2016	tc-i386.c	FUNCTION_25	IF_7
0x40011aa	      0xe9f6000000	                           jmp 0x40012a5	      2016	tc-i386.c	FUNCTION_25	IF_7
0x40011af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2017	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x40011b3	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      2017	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x40011b7	          0x83e001	                              and eax, 1	      2017	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x40011ba	            0x84c0	                             test al, al	      2017	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x40011bc	            0x751a	                           jne 0x40011d8	      2017	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x40011be	            0xeb04	                           jmp 0x40011c4	      2017	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x40011c0	              0x90	                                     nop	      2033	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x40011c1	            0xeb01	                           jmp 0x40011c4	      2033	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x40011c3	              0x90	                                     nop	      2037	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x40011c4	    0xc70500000000	               mov dword [0x040011ce], 0	      2020	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x40011ce	      0xb800000000	                              mov eax, 0	      2021	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x40011d3	      0xe9cd000000	                           jmp 0x40012a5	      2021	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x40011d8	    0x8b0500000000	            mov eax, dword [0x040011de] 	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x40011de	          0x83f802	                              cmp eax, 2	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x40011e1	            0x7414	                            je 0x40011f7	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x40011e3	      0xba00000000	                              mov edx, 0	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x40011e8	      0xbee9070000	                          mov esi, 0x7e9	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x40011ed	      0xbf00000000	                              mov edi, 0	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x40011f2	      0xe800000000	                          call 0x40011f7	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x40011f7	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2027	tc-i386.c	FUNCTION_25
0x40011fe	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x4001205	      0xe98e000000	                           jmp 0x4001298	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x400120a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x400120e	          0x8b55f8	                mov edx, dword [rbp - 8]	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4001211	        0x4883c206	                              add rdx, 6	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4001215	       0xfb644d004	      movzx eax, byte [rax + rdx*8 + 4] 	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x400121a	          0x83e001	                              and eax, 1	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x400121d	            0x84c0	                             test al, al	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x400121f	            0x751a	                           jne 0x400123b	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4001221	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4001225	          0x8b55f8	                mov edx, dword [rbp - 8]	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4001228	        0x4883c206	                              add rdx, 6	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x400122c	       0xfb644d006	      movzx eax, byte [rax + rdx*8 + 6] 	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4001231	          0xc0e805	                               shr al, 5	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4001234	          0x83e001	                              and eax, 1	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4001237	            0x84c0	                             test al, al	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4001239	            0x7420	                            je 0x400125b	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x400123b	        0x837df800	                  cmp dword [rbp - 8], 0	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x400123f	           0xf94c0	                                 sete al	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x4001242	           0xfb6d0	                           movzx edx, al	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x4001245	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x4001249	            0x89d6	                            mov esi, edx	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x400124b	          0x4889c7	                            mov rdi, rax	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x400124e	      0xe818faffff	                 call sym.match_reg_size	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x4001253	            0x85c0	                           test eax, eax	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x4001255	     0xf8465ffffff	                            je 0x40011c0	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x400125b	          0x8b45f8	                mov eax, dword [rbp - 8]	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x400125e	        0x4883c00e	                            add rax, 0xe	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x4001262	     0xfb604c50000	                 movzx eax, byte [rax*8]	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x400126a	          0xc0e804	                               shr al, 4	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x400126d	          0x83e001	                              and eax, 1	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x4001270	            0x84c0	                             test al, al	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x4001272	            0x7420	                            je 0x4001294	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x4001274	        0x837df800	                  cmp dword [rbp - 8], 0	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x4001278	           0xf94c0	                                 sete al	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x400127b	           0xfb6d0	                           movzx edx, al	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x400127e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x4001282	            0x89d6	                            mov esi, edx	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x4001284	          0x4889c7	                            mov rdi, rax	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x4001287	      0xe8a9fbffff	                 call sym.match_mem_size	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x400128c	            0x85c0	                           test eax, eax	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x400128e	     0xf842fffffff	                            je 0x40011c3	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x4001294	        0x8345f801	                  add dword [rbp - 8], 1	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x4001298	        0x837df801	                  cmp dword [rbp - 8], 1	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x400129c	     0xf8668ffffff	                           jbe 0x400120a	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x40012a2	          0x8b45fc	                mov eax, dword [rbp - 4]	      2040	tc-i386.c	FUNCTION_25
0x40012a5	              0xc9	                                   leave	      2041	tc-i386.c	FUNCTION_25
0x40012a6	              0xc3	                                     ret	      2041	tc-i386.c	FUNCTION_25
i386_intel_operand	CALL,60:FOR,1:WHILE,0:functions,0:SWITCH,4:IF,59:ELSE,23:DO,0	1170
0x40151a7	              0x55	                                push rbp	       548	tc-i386-intel.c	FUNCTION_152
0x40151a8	          0x4889e5	                            mov rbp, rsp	       548	tc-i386-intel.c	FUNCTION_152
0x40151ab	              0x53	                                push rbx	       548	tc-i386-intel.c	FUNCTION_152
0x40151ac	        0x4883ec78	                           sub rsp, 0x78	       548	tc-i386-intel.c	FUNCTION_152
0x40151b0	        0x48897d88	             mov qword [rbp - 0x78], rdi	       548	tc-i386-intel.c	FUNCTION_152
0x40151b4	          0x897584	             mov dword [rbp - 0x7c], esi	       548	tc-i386-intel.c	FUNCTION_152
0x40151b7	    0x64488b042528	                mov rax, qword fs:[0x28]	       548	tc-i386-intel.c	FUNCTION_152
0x40151c0	        0x488945e8	             mov qword [rbp - 0x18], rax	       548	tc-i386-intel.c	FUNCTION_152
0x40151c4	            0x31c0	                            xor eax, eax	       548	tc-i386-intel.c	FUNCTION_152
0x40151c6	        0xc6459300	                mov byte [rbp - 0x6d], 0	       552	tc-i386-intel.c	FUNCTION_152
0x40151ca	        0x488b4588	             mov rax, qword [rbp - 0x78]	       556	tc-i386-intel.c	FUNCTION_152	IF_1	CALL_1
0x40151ce	          0x4889c7	                            mov rdi, rax	       556	tc-i386-intel.c	FUNCTION_152	IF_1	CALL_1
0x40151d1	      0xe833adffff	               call sym.RC_SAE_immediate	       556	tc-i386-intel.c	FUNCTION_152	IF_1	CALL_1
0x40151d6	            0x85c0	                           test eax, eax	       556	tc-i386-intel.c	FUNCTION_152	IF_1	CALL_1
0x40151d8	            0x740a	                            je 0x40151e4	       556	tc-i386-intel.c	FUNCTION_152	IF_1	CALL_1
0x40151da	      0xb801000000	                              mov eax, 1	       557	tc-i386-intel.c	FUNCTION_152	IF_1
0x40151df	      0xe96c130000	                           jmp 0x4016550	       557	tc-i386-intel.c	FUNCTION_152	IF_1
0x40151e4	    0xc70500000000	               mov dword [0x040151ee], 1	       560	tc-i386-intel.c	FUNCTION_152
0x40151ee	    0xc70500000000	               mov dword [0x040151f8], 0	       561	tc-i386-intel.c	FUNCTION_152
0x40151f8	    0xc70500000000	               mov dword [0x04015202], 0	       562	tc-i386-intel.c	FUNCTION_152
0x4015202	    0xc70500000000	               mov dword [0x0401520c], 0	       563	tc-i386-intel.c	FUNCTION_152
0x401520c	    0x48c705000000	               mov qword [0x04015217], 0	       564	tc-i386-intel.c	FUNCTION_152
0x4015217	    0x48c705000000	               mov qword [0x04015222], 0	       565	tc-i386-intel.c	FUNCTION_152
0x4015222	    0x48c705000000	               mov qword [0x0401522d], 0	       566	tc-i386-intel.c	FUNCTION_152
0x401522d	      0xbeffffffff	                     mov esi, 0xffffffff	       567	tc-i386-intel.c	FUNCTION_152	CALL_2
0x4015232	      0xbf00000000	                              mov edi, 0	       567	tc-i386-intel.c	FUNCTION_152	CALL_2
0x4015237	      0xe8c5b2feff	               call sym.operand_type_set	       567	tc-i386-intel.c	FUNCTION_152	CALL_2
0x401523c	    0x8b0500000000	            mov eax, dword [0x04015242] 	       568	tc-i386-intel.c	FUNCTION_152	CALL_3
0x4015242	            0x85c0	                           test eax, eax	       568	tc-i386-intel.c	FUNCTION_152	CALL_3
0x4015244	            0x7414	                            je 0x401525a	       568	tc-i386-intel.c	FUNCTION_152	CALL_3
0x4015246	      0xba00000000	                              mov edx, 0	       568	tc-i386-intel.c	FUNCTION_152	CALL_3
0x401524b	      0xbe38020000	                          mov esi, 0x238	       568	tc-i386-intel.c	FUNCTION_152	CALL_3
0x4015250	      0xbf00000000	                              mov edi, 0	       568	tc-i386-intel.c	FUNCTION_152	CALL_3
0x4015255	      0xe800000000	                          call 0x401525a	       568	tc-i386-intel.c	FUNCTION_152	CALL_3
0x401525a	    0x8b0500000000	            mov eax, dword [0x04015260] 	       569	tc-i386-intel.c	FUNCTION_152	CALL_4
0x4015260	            0x85c0	                           test eax, eax	       569	tc-i386-intel.c	FUNCTION_152	CALL_4
0x4015262	            0x7414	                            je 0x4015278	       569	tc-i386-intel.c	FUNCTION_152	CALL_4
0x4015264	      0xba00000000	                              mov edx, 0	       569	tc-i386-intel.c	FUNCTION_152	CALL_4
0x4015269	      0xbe39020000	                          mov esi, 0x239	       569	tc-i386-intel.c	FUNCTION_152	CALL_4
0x401526e	      0xbf00000000	                              mov edi, 0	       569	tc-i386-intel.c	FUNCTION_152	CALL_4
0x4015273	      0xe800000000	                          call 0x4015278	       569	tc-i386-intel.c	FUNCTION_152	CALL_4
0x4015278	    0x8b0500000000	            mov eax, dword [0x0401527e] 	       570	tc-i386-intel.c	FUNCTION_152	CALL_5
0x401527e	            0x85c0	                           test eax, eax	       570	tc-i386-intel.c	FUNCTION_152	CALL_5
0x4015280	            0x7414	                            je 0x4015296	       570	tc-i386-intel.c	FUNCTION_152	CALL_5
0x4015282	      0xba00000000	                              mov edx, 0	       570	tc-i386-intel.c	FUNCTION_152	CALL_5
0x4015287	      0xbe3a020000	                          mov esi, 0x23a	       570	tc-i386-intel.c	FUNCTION_152	CALL_5
0x401528c	      0xbf00000000	                              mov edi, 0	       570	tc-i386-intel.c	FUNCTION_152	CALL_5
0x4015291	      0xe800000000	                          call 0x4015296	       570	tc-i386-intel.c	FUNCTION_152	CALL_5
0x4015296	    0x488b05000000	            mov rax, qword [0x0401529d] 	       572	tc-i386-intel.c	FUNCTION_152
0x401529d	        0x48894598	             mov qword [rbp - 0x68], rax	       572	tc-i386-intel.c	FUNCTION_152
0x40152a1	        0x488b4588	             mov rax, qword [rbp - 0x78]	       573	tc-i386-intel.c	FUNCTION_152	CALL_6
0x40152a5	          0x4889c7	                            mov rdi, rax	       573	tc-i386-intel.c	FUNCTION_152	CALL_6
0x40152a8	      0xe800000000	                          call 0x40152ad	       573	tc-i386-intel.c	FUNCTION_152	CALL_6
0x40152ad	        0x488945a0	             mov qword [rbp - 0x60], rax	       573	tc-i386-intel.c	FUNCTION_152	CALL_6
0x40152b1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       573	tc-i386-intel.c	FUNCTION_152	CALL_6
0x40152b5	    0x488905000000	            mov qword [0x040152bc], rax 	       573	tc-i386-intel.c	FUNCTION_152	CALL_6
0x40152bc	    0xc70500000000	     mov dword [0x040152c6], 0xffffffff 	       575	tc-i386-intel.c	FUNCTION_152
0x40152c6	        0x488d45c0	                   lea rax, [rbp - 0x40]	       576	tc-i386-intel.c	FUNCTION_152	CALL_7
0x40152ca	      0xba20000000	                           mov edx, 0x20	       576	tc-i386-intel.c	FUNCTION_152	CALL_7
0x40152cf	      0xbe00000000	                              mov esi, 0	       576	tc-i386-intel.c	FUNCTION_152	CALL_7
0x40152d4	          0x4889c7	                            mov rdi, rax	       576	tc-i386-intel.c	FUNCTION_152	CALL_7
0x40152d7	      0xe800000000	                          call 0x40152dc	       576	tc-i386-intel.c	FUNCTION_152	CALL_7
0x40152dc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       577	tc-i386-intel.c	FUNCTION_152	CALL_8
0x40152e0	      0xba01000000	                              mov edx, 1	       577	tc-i386-intel.c	FUNCTION_152	CALL_8
0x40152e5	          0x4889c6	                            mov rsi, rax	       577	tc-i386-intel.c	FUNCTION_152	CALL_8
0x40152e8	      0xbf00000000	                              mov edi, 0	       577	tc-i386-intel.c	FUNCTION_152	CALL_8
0x40152ed	      0xe800000000	                          call 0x40152f2	       577	tc-i386-intel.c	FUNCTION_152	CALL_8
0x40152f2	        0x488945a8	             mov qword [rbp - 0x58], rax	       577	tc-i386-intel.c	FUNCTION_152	CALL_8
0x40152f6	        0x488d45c0	                   lea rax, [rbp - 0x40]	       578	tc-i386-intel.c	FUNCTION_152	CALL_9
0x40152fa	          0x4889c7	                            mov rdi, rax	       578	tc-i386-intel.c	FUNCTION_152	CALL_9
0x40152fd	      0xe865f7ffff	            call sym.i386_intel_simplify	       578	tc-i386-intel.c	FUNCTION_152	CALL_9
0x4015302	          0x894594	             mov dword [rbp - 0x6c], eax	       578	tc-i386-intel.c	FUNCTION_152	CALL_9
0x4015305	    0xc70500000000	               mov dword [0x0401530f], 1	       579	tc-i386-intel.c	FUNCTION_152
0x401530f	    0x488b05000000	            mov rax, qword [0x04015316] 	       581	tc-i386-intel.c	FUNCTION_152	CALL_10
0x4015316	           0xfb600	                   movzx eax, byte [rax]	       581	tc-i386-intel.c	FUNCTION_152	CALL_10
0x4015319	            0x3c20	                            cmp al, 0x20	       581	tc-i386-intel.c	FUNCTION_152	CALL_10
0x401531b	            0x7512	                           jne 0x401532f	       581	tc-i386-intel.c	FUNCTION_152	CALL_10
0x401531d	    0x488b05000000	            mov rax, qword [0x04015324] 	       581	tc-i386-intel.c	FUNCTION_152	CALL_10
0x4015324	        0x4883c001	                              add rax, 1	       581	tc-i386-intel.c	FUNCTION_152	CALL_10
0x4015328	    0x488905000000	            mov qword [0x0401532f], rax 	       581	tc-i386-intel.c	FUNCTION_152	CALL_10
0x401532f	    0x488b05000000	            mov rax, qword [0x04015336] 	       584	tc-i386-intel.c	FUNCTION_152	IF_2
0x4015336	           0xfb600	                   movzx eax, byte [rax]	       584	tc-i386-intel.c	FUNCTION_152	IF_2
0x4015339	            0x3c7b	                            cmp al, 0x7b	       584	tc-i386-intel.c	FUNCTION_152	IF_2
0x401533b	            0x7533	                           jne 0x4015370	       584	tc-i386-intel.c	FUNCTION_152	IF_2
0x401533d	    0x488b05000000	            mov rax, qword [0x04015344] 	       586	tc-i386-intel.c	FUNCTION_152	IF_2	CALL_11
0x4015344	      0xbe00000000	                              mov esi, 0	       586	tc-i386-intel.c	FUNCTION_152	IF_2	CALL_11
0x4015349	          0x4889c7	                            mov rdi, rax	       586	tc-i386-intel.c	FUNCTION_152	IF_2	CALL_11
0x401534c	      0xe89b93ffff	            call sym.check_VecOperations	       586	tc-i386-intel.c	FUNCTION_152	IF_2	CALL_11
0x4015351	        0x488945b0	             mov qword [rbp - 0x50], rax	       586	tc-i386-intel.c	FUNCTION_152	IF_2	CALL_11
0x4015355	      0x48837db000	               cmp qword [rbp - 0x50], 0	       587	tc-i386-intel.c	FUNCTION_152	IF_2	IF_3
0x401535a	            0x740d	                            je 0x4015369	       587	tc-i386-intel.c	FUNCTION_152	IF_2	IF_3
0x401535c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       588	tc-i386-intel.c	FUNCTION_152	IF_2	IF_3
0x4015360	    0x488905000000	            mov qword [0x04015367], rax 	       588	tc-i386-intel.c	FUNCTION_152	IF_2	IF_3
0x4015367	            0xeb07	                           jmp 0x4015370	       588	tc-i386-intel.c	FUNCTION_152	IF_2	IF_3
0x4015369	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       590	tc-i386-intel.c	FUNCTION_152	IF_2	ELSE_1
0x4015370	    0x488b05000000	            mov rax, qword [0x04015377] 	       593	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4
0x4015377	           0xfb600	                   movzx eax, byte [rax]	       593	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4
0x401537a	           0xfb6c0	                           movzx eax, al	       593	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4
0x401537d	            0x4898	                                    cdqe	       593	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4
0x401537f	     0xfb680000000	                   movzx eax, byte [rax]	       593	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4
0x4015386	            0x84c0	                             test al, al	       593	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4
0x4015388	            0x7530	                           jne 0x40153ba	       593	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4
0x401538a	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       595	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4	IF_5
0x401538e	            0x7421	                            je 0x40153b1	       595	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4	IF_5
0x4015390	    0x488b1d000000	            mov rbx, qword [0x04015397] 	       596	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4	CALL_13
0x4015397	      0xbf00000000	                              mov edi, 0	       596	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4	CALL_13
0x401539c	      0xe800000000	                          call 0x40153a1	       596	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4	CALL_13
0x40153a1	          0x4889de	                            mov rsi, rbx	       596	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4	CALL_13
0x40153a4	          0x4889c7	                            mov rdi, rax	       596	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4	CALL_13
0x40153a7	      0xb800000000	                              mov eax, 0	       596	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4	CALL_13
0x40153ac	      0xe800000000	                          call 0x40153b1	       596	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4	CALL_13
0x40153b1	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       597	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4
0x40153b8	            0xeb78	                           jmp 0x4015432	       597	tc-i386-intel.c	FUNCTION_152	ELSE_1	IF_4
0x40153ba	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       599	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6
0x40153be	            0x84c0	                             test al, al	       599	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6
0x40153c0	            0x7408	                            je 0x40153ca	       599	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6
0x40153c2	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       599	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6
0x40153c6	            0x3c01	                               cmp al, 1	       599	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6
0x40153c8	            0x7526	                           jne 0x40153f0	       599	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6
0x40153ca	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       601	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6	IF_7
0x40153ce	            0x7417	                            je 0x40153e7	       601	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6	IF_7
0x40153d0	      0xbf00000000	                              mov edi, 0	       602	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6	CALL_15
0x40153d5	      0xe800000000	                          call 0x40153da	       602	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6	CALL_15
0x40153da	          0x4889c7	                            mov rdi, rax	       602	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6	CALL_15
0x40153dd	      0xb800000000	                              mov eax, 0	       602	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6	CALL_15
0x40153e2	      0xe800000000	                          call 0x40153e7	       602	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6	CALL_15
0x40153e7	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       603	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6
0x40153ee	            0xeb42	                           jmp 0x4015432	       603	tc-i386-intel.c	FUNCTION_152	ELSE_2	IF_6
0x40153f0	    0x8b0500000000	            mov eax, dword [0x040153f6] 	       605	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x40153f6	            0x85c0	                           test eax, eax	       605	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x40153f8	            0x7538	                           jne 0x4015432	       605	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x40153fa	    0x488b05000000	            mov rax, qword [0x04015401] 	       606	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x4015401	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       606	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x4015405	            0x762b	                           jbe 0x4015432	       606	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x4015407	    0x488b05000000	            mov rax, qword [0x0401540e] 	       607	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x401540e	        0x4883e801	                              sub rax, 1	       607	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x4015412	           0xfb600	                   movzx eax, byte [rax]	       607	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x4015415	            0x3c5d	                            cmp al, 0x5d	       607	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x4015417	            0x7519	                           jne 0x4015432	       607	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x4015419	    0x8b0500000000	            mov eax, dword [0x0401541f] 	       609	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x401541f	          0x83c801	                               or eax, 1	       609	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x4015422	    0x890500000000	            mov dword [0x04015428], eax 	       609	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x4015428	    0xc70500000000	               mov dword [0x04015432], 1	       610	tc-i386-intel.c	FUNCTION_152	ELSE_3	IF_8
0x4015432	        0x488b4598	             mov rax, qword [rbp - 0x68]	       613	tc-i386-intel.c	FUNCTION_152
0x4015436	    0x488905000000	            mov qword [0x0401543d], rax 	       613	tc-i386-intel.c	FUNCTION_152
0x401543d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       614	tc-i386-intel.c	FUNCTION_152	CALL_16
0x4015441	          0x4889c7	                            mov rdi, rax	       614	tc-i386-intel.c	FUNCTION_152	CALL_16
0x4015444	      0xe800000000	                          call 0x4015449	       614	tc-i386-intel.c	FUNCTION_152	CALL_16
0x4015449	    0x8b0500000000	            mov eax, dword [0x0401544f] 	       616	tc-i386-intel.c	FUNCTION_152	CALL_17
0x401544f	            0x85c0	                           test eax, eax	       616	tc-i386-intel.c	FUNCTION_152	CALL_17
0x4015451	            0x7414	                            je 0x4015467	       616	tc-i386-intel.c	FUNCTION_152	CALL_17
0x4015453	      0xba00000000	                              mov edx, 0	       616	tc-i386-intel.c	FUNCTION_152	CALL_17
0x4015458	      0xbe68020000	                          mov esi, 0x268	       616	tc-i386-intel.c	FUNCTION_152	CALL_17
0x401545d	      0xbf00000000	                              mov edi, 0	       616	tc-i386-intel.c	FUNCTION_152	CALL_17
0x4015462	      0xe800000000	                          call 0x4015467	       616	tc-i386-intel.c	FUNCTION_152	CALL_17
0x4015467	    0x8b0500000000	            mov eax, dword [0x0401546d] 	       617	tc-i386-intel.c	FUNCTION_152	CALL_18
0x401546d	            0x85c0	                           test eax, eax	       617	tc-i386-intel.c	FUNCTION_152	CALL_18
0x401546f	            0x7414	                            je 0x4015485	       617	tc-i386-intel.c	FUNCTION_152	CALL_18
0x4015471	      0xba00000000	                              mov edx, 0	       617	tc-i386-intel.c	FUNCTION_152	CALL_18
0x4015476	      0xbe69020000	                          mov esi, 0x269	       617	tc-i386-intel.c	FUNCTION_152	CALL_18
0x401547b	      0xbf00000000	                              mov edi, 0	       617	tc-i386-intel.c	FUNCTION_152	CALL_18
0x4015480	      0xe800000000	                          call 0x4015485	       617	tc-i386-intel.c	FUNCTION_152	CALL_18
0x4015485	    0x8b0500000000	            mov eax, dword [0x0401548b] 	       618	tc-i386-intel.c	FUNCTION_152	CALL_19
0x401548b	            0x85c0	                           test eax, eax	       618	tc-i386-intel.c	FUNCTION_152	CALL_19
0x401548d	            0x7414	                            je 0x40154a3	       618	tc-i386-intel.c	FUNCTION_152	CALL_19
0x401548f	      0xba00000000	                              mov edx, 0	       618	tc-i386-intel.c	FUNCTION_152	CALL_19
0x4015494	      0xbe6a020000	                          mov esi, 0x26a	       618	tc-i386-intel.c	FUNCTION_152	CALL_19
0x4015499	      0xbf00000000	                              mov edi, 0	       618	tc-i386-intel.c	FUNCTION_152	CALL_19
0x401549e	      0xe800000000	                          call 0x40154a3	       618	tc-i386-intel.c	FUNCTION_152	CALL_19
0x40154a3	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       620	tc-i386-intel.c	FUNCTION_152	IF_9
0x40154a7	            0x750a	                           jne 0x40154b3	       620	tc-i386-intel.c	FUNCTION_152	IF_9
0x40154a9	      0xb800000000	                              mov eax, 0	       621	tc-i386-intel.c	FUNCTION_152	IF_9
0x40154ae	      0xe99d100000	                           jmp 0x4016550	       621	tc-i386-intel.c	FUNCTION_152	IF_9
0x40154b3	    0x8b0500000000	            mov eax, dword [0x040154b9] 	       623	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154b9	          0x83f801	                              cmp eax, 1	       623	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154bc	     0xf8414040000	                            je 0x40158d6	       623	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154c2	    0x488b05000000	            mov rax, qword [0x040154c9] 	       624	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154c9	          0x488b00	                    mov rax, qword [rax]	       624	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154cc	          0x8b400c	              mov eax, dword [rax + 0xc]	       624	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154cf	      0x3d8d000000	                           cmp eax, 0x8d	       624	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154d4	     0xf84fc030000	                            je 0x40158d6	       624	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154da	    0x8b0500000000	            mov eax, dword [0x040154e0] 	       626	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154e0	            0x4898	                                    cdqe	       626	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154e2	        0x4883c00e	                            add rax, 0xe	       626	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154e6	     0xfb614c50000	                 movzx edx, byte [rax*8]	       626	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154ee	          0x83e2bf	                     and edx, 0xffffffbf	       626	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154f1	    0x8814c5000000	                    mov byte [rax*8], dl	       626	tc-i386-intel.c	FUNCTION_152	IF_10
0x40154f8	    0x8b0500000000	            mov eax, dword [0x040154fe] 	       628	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40154fe	          0x83e830	                           sub eax, 0x30	       628	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015501	          0x83f80b	                            cmp eax, 0xb	       628	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015504	     0xf875b030000	                            ja 0x4015865	       628	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401550a	            0x89c0	                            mov eax, eax	       628	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401550c	    0x488b04c50000	                  mov rax, qword [rax*8]	       628	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015514	            0xffe0	                                 jmp rax	       628	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015516	    0x8b0500000000	            mov eax, dword [0x0401551c] 	       631	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401551c	            0x4898	                                    cdqe	       631	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401551e	        0x4883c00e	                            add rax, 0xe	       631	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015522	     0xfb614c50000	                 movzx edx, byte [rax*8]	       631	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401552a	          0x83ca20	                            or edx, 0x20	       631	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401552d	    0x8814c5000000	                    mov byte [rax*8], dl	       631	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015534	        0xc6459362	            mov byte [rbp - 0x6d], 0x62 	       632	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015538	      0xe955030000	                           jmp 0x4015892	       633	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401553d	    0x8b0500000000	            mov eax, dword [0x04015543] 	       636	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015543	            0x4898	                                    cdqe	       636	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015545	        0x4883c00e	                            add rax, 0xe	       636	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015549	     0xfb614c50000	                 movzx edx, byte [rax*8]	       636	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015551	          0x83ca40	                            or edx, 0x40	       636	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015554	    0x8814c5000000	                    mov byte [rax*8], dl	       636	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401555b	    0x488b05000000	            mov rax, qword [0x04015562] 	       637	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015562	          0x488b00	                    mov rax, qword [rax]	       637	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015565	          0x488b00	                    mov rax, qword [rax]	       637	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015568	           0xfb600	                   movzx eax, byte [rax]	       637	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x401556b	            0x3c6c	                            cmp al, 0x6c	       637	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x401556d	            0x7530	                           jne 0x401559f	       637	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x401556f	    0x488b05000000	            mov rax, qword [0x04015576] 	       638	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015576	          0x488b00	                    mov rax, qword [rax]	       638	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015579	          0x488b00	                    mov rax, qword [rax]	       638	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x401557c	        0x4883c002	                              add rax, 2	       638	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015580	           0xfb600	                   movzx eax, byte [rax]	       638	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015583	            0x3c73	                            cmp al, 0x73	       638	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015585	            0x7518	                           jne 0x401559f	       638	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015587	    0x488b05000000	            mov rax, qword [0x0401558e] 	       639	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x401558e	          0x488b00	                    mov rax, qword [rax]	       639	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015591	          0x488b00	                    mov rax, qword [rax]	       639	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015594	        0x4883c003	                              add rax, 3	       639	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x4015598	           0xfb600	                   movzx eax, byte [rax]	       639	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x401559b	            0x84c0	                             test al, al	       639	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x401559d	            0x7412	                            je 0x40155b1	       639	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x401559f	    0x488b05000000	            mov rax, qword [0x040155a6] 	       640	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x40155a6	          0x488b00	                    mov rax, qword [rax]	       640	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x40155a9	          0x8b400c	              mov eax, dword [rax + 0xc]	       640	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x40155ac	          0x83f862	                           cmp eax, 0x62	       640	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x40155af	            0x7509	                           jne 0x40155ba	       640	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x40155b1	        0xc6459362	            mov byte [rbp - 0x6d], 0x62 	       641	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_11
0x40155b5	      0xe9d8020000	                           jmp 0x4015892	       646	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40155ba	        0x837d8402	               cmp dword [rbp - 0x7c], 2	       642	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_4	IF_12
0x40155be	            0x7509	                           jne 0x40155c9	       642	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_4	IF_12
0x40155c0	        0xc6459373	            mov byte [rbp - 0x6d], 0x73 	       643	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_4	IF_12
0x40155c4	      0xe9c9020000	                           jmp 0x4015892	       646	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40155c9	        0xc6459377	            mov byte [rbp - 0x6d], 0x77 	       645	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_5
0x40155cd	      0xe9c0020000	                           jmp 0x4015892	       646	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40155d2	    0x8b0500000000	            mov eax, dword [0x040155d8] 	       649	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40155d8	            0x4898	                                    cdqe	       649	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40155da	        0x4883c00e	                            add rax, 0xe	       649	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40155de	     0xfb614c50000	                 movzx edx, byte [rax*8]	       649	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40155e6	          0x83ca80	                      or edx, 0xffffff80	       649	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40155e9	    0x8814c5000000	                    mov byte [rax*8], dl	       649	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40155f0	    0x488b05000000	            mov rax, qword [0x040155f7] 	       650	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x40155f7	          0x488b00	                    mov rax, qword [rax]	       650	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x40155fa	          0x488b00	                    mov rax, qword [rax]	       650	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x40155fd	           0xfb600	                   movzx eax, byte [rax]	       650	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015600	            0x3c6c	                            cmp al, 0x6c	       650	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015602	            0x7530	                           jne 0x4015634	       650	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015604	    0x488b05000000	            mov rax, qword [0x0401560b] 	       651	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x401560b	          0x488b00	                    mov rax, qword [rax]	       651	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x401560e	          0x488b00	                    mov rax, qword [rax]	       651	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015611	        0x4883c002	                              add rax, 2	       651	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015615	           0xfb600	                   movzx eax, byte [rax]	       651	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015618	            0x3c73	                            cmp al, 0x73	       651	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x401561a	            0x7518	                           jne 0x4015634	       651	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x401561c	    0x488b05000000	            mov rax, qword [0x04015623] 	       652	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015623	          0x488b00	                    mov rax, qword [rax]	       652	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015626	          0x488b00	                    mov rax, qword [rax]	       652	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015629	        0x4883c003	                              add rax, 3	       652	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x401562d	           0xfb600	                   movzx eax, byte [rax]	       652	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015630	            0x84c0	                             test al, al	       652	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015632	            0x7412	                            je 0x4015646	       652	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015634	    0x488b05000000	            mov rax, qword [0x0401563b] 	       653	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x401563b	          0x488b00	                    mov rax, qword [rax]	       653	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x401563e	          0x8b400c	              mov eax, dword [rax + 0xc]	       653	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015641	          0x83f862	                           cmp eax, 0x62	       653	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015644	            0x7506	                           jne 0x401564c	       653	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x4015646	        0xc6459377	            mov byte [rbp - 0x6d], 0x77 	       654	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x401564a	            0xeb53	                           jmp 0x401569f	       654	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_13
0x401564c	    0x8b0500000000	            mov eax, dword [0x04015652] 	       655	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x4015652	          0x83f801	                              cmp eax, 1	       655	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x4015655	            0x7530	                           jne 0x4015687	       655	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x4015657	    0x488b05000000	            mov rax, qword [0x0401565e] 	       656	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x401565e	          0x488b00	                    mov rax, qword [rax]	       656	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x4015661	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       656	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x4015665	          0x83e020	                           and eax, 0x20	       656	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x4015668	            0x84c0	                             test al, al	       656	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x401566a	            0x7515	                           jne 0x4015681	       656	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x401566c	    0x488b05000000	            mov rax, qword [0x04015673] 	       657	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x4015673	          0x488b00	                    mov rax, qword [rax]	       657	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x4015676	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       657	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x401567a	          0x83e040	                           and eax, 0x40	       657	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x401567d	            0x84c0	                             test al, al	       657	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x401567f	            0x7406	                            je 0x4015687	       657	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x4015681	        0xc6459301	                mov byte [rbp - 0x6d], 1	       658	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x4015685	            0xeb18	                           jmp 0x401569f	       658	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_6	IF_14
0x4015687	        0x837d8401	               cmp dword [rbp - 0x7c], 1	       659	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_7	IF_15
0x401568b	            0x7509	                           jne 0x4015696	       659	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_7	IF_15
0x401568d	        0xc6459373	            mov byte [rbp - 0x6d], 0x73 	       660	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_7	IF_15
0x4015691	      0xe9fc010000	                           jmp 0x4015892	       663	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015696	        0xc645936c	            mov byte [rbp - 0x6d], 0x6c 	       662	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_8
0x401569a	      0xe9f3010000	                           jmp 0x4015892	       663	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401569f	      0xe9ee010000	                           jmp 0x4015892	       663	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40156a4	    0x8b0500000000	            mov eax, dword [0x040156aa] 	       666	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40156aa	            0x4898	                                    cdqe	       666	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40156ac	        0x4883c00e	                            add rax, 0xe	       666	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40156b0	     0xfb614c50000	                 movzx edx, byte [rax*8]	       666	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40156b8	          0x83ca01	                               or edx, 1	       666	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40156bb	    0x8814c5000000	                    mov byte [rax*8], dl	       666	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40156c2	    0x488b05000000	            mov rax, qword [0x040156c9] 	       667	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156c9	          0x488b00	                    mov rax, qword [rax]	       667	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156cc	          0x488b00	                    mov rax, qword [rax]	       667	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156cf	           0xfb600	                   movzx eax, byte [rax]	       667	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156d2	            0x3c6c	                            cmp al, 0x6c	       667	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156d4	            0x7539	                           jne 0x401570f	       667	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156d6	    0x488b05000000	            mov rax, qword [0x040156dd] 	       668	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156dd	          0x488b00	                    mov rax, qword [rax]	       668	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156e0	          0x488b00	                    mov rax, qword [rax]	       668	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156e3	        0x4883c002	                              add rax, 2	       668	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156e7	           0xfb600	                   movzx eax, byte [rax]	       668	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156ea	            0x3c73	                            cmp al, 0x73	       668	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156ec	            0x7521	                           jne 0x401570f	       668	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156ee	    0x488b05000000	            mov rax, qword [0x040156f5] 	       669	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156f5	          0x488b00	                    mov rax, qword [rax]	       669	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156f8	          0x488b00	                    mov rax, qword [rax]	       669	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156fb	        0x4883c003	                              add rax, 3	       669	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x40156ff	           0xfb600	                   movzx eax, byte [rax]	       669	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x4015702	            0x84c0	                             test al, al	       669	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x4015704	            0x7509	                           jne 0x401570f	       669	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x4015706	        0xc645936c	            mov byte [rbp - 0x6d], 0x6c 	       670	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_16
0x401570a	      0xe983010000	                           jmp 0x4015892	       679	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401570f	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       671	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_9	IF_17
0x4015713	            0x751e	                           jne 0x4015733	       671	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_9	IF_17
0x4015715	    0x8b0500000000	            mov eax, dword [0x0401571b] 	       673	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_9	IF_17	IF_18
0x401571b	          0x83f801	                              cmp eax, 1	       673	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_9	IF_17	IF_18
0x401571e	            0x750a	                           jne 0x401572a	       673	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_9	IF_17	IF_18
0x4015720	      0xbf66000000	                           mov edi, 0x66	       674	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_9	IF_17	CALL_20
0x4015725	      0xe8b7c3feff	                     call sym.add_prefix	       674	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_9	IF_17	CALL_20
0x401572a	        0xc6459301	                mov byte [rbp - 0x6d], 1	       675	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_9	IF_17
0x401572e	      0xe95f010000	                           jmp 0x4015892	       679	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015733	        0xc6459362	            mov byte [rbp - 0x6d], 0x62 	       678	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_10
0x4015737	      0xe956010000	                           jmp 0x4015892	       679	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401573c	    0x8b0500000000	            mov eax, dword [0x04015742] 	       682	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015742	            0x4898	                                    cdqe	       682	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015744	        0x4883c00e	                            add rax, 0xe	       682	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015748	     0xfb614c50000	                 movzx edx, byte [rax*8]	       682	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015750	          0x83ca02	                               or edx, 2	       682	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015753	    0x8814c5000000	                    mov byte [rax*8], dl	       682	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401575a	    0x488b05000000	            mov rax, qword [0x04015761] 	       683	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_19
0x4015761	          0x488b00	                    mov rax, qword [rax]	       683	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_19
0x4015764	          0x8b400c	              mov eax, dword [rax + 0xc]	       683	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_19
0x4015767	          0x83f862	                           cmp eax, 0x62	       683	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_19
0x401576a	            0x7406	                            je 0x4015772	       683	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_19
0x401576c	        0x837d8401	               cmp dword [rbp - 0x7c], 1	       684	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_19
0x4015770	            0x7509	                           jne 0x401577b	       684	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_19
0x4015772	        0xc645936c	            mov byte [rbp - 0x6d], 0x6c 	       685	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_19
0x4015776	      0xe917010000	                           jmp 0x4015892	       688	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401577b	        0xc6459371	            mov byte [rbp - 0x6d], 0x71 	       687	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_11
0x401577f	      0xe90e010000	                           jmp 0x4015892	       688	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015784	    0x8b0500000000	            mov eax, dword [0x0401578a] 	       691	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401578a	            0x4898	                                    cdqe	       691	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401578c	        0x4883c00e	                            add rax, 0xe	       691	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015790	     0xfb614c50000	                 movzx edx, byte [rax*8]	       691	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015798	          0x83ca04	                               or edx, 4	       691	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401579b	    0x8814c5000000	                    mov byte [rax*8], dl	       691	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157a2	        0x837d8401	               cmp dword [rbp - 0x7c], 1	       692	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_20
0x40157a6	            0x7509	                           jne 0x40157b1	       692	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_20
0x40157a8	        0xc6459301	                mov byte [rbp - 0x6d], 1	       693	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_20
0x40157ac	      0xe9e1000000	                           jmp 0x4015892	       696	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157b1	        0xc6459362	            mov byte [rbp - 0x6d], 0x62 	       695	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	ELSE_12
0x40157b5	      0xe9d8000000	                           jmp 0x4015892	       696	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157ba	    0x8b0500000000	            mov eax, dword [0x040157c0] 	       700	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157c0	            0x4898	                                    cdqe	       700	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157c2	        0x4883c00e	                            add rax, 0xe	       700	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157c6	     0xfb614c50000	                 movzx edx, byte [rax*8]	       700	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157ce	          0x83ca08	                               or edx, 8	       700	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157d1	    0x8814c5000000	                    mov byte [rax*8], dl	       700	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157d8	      0xe9b5000000	                           jmp 0x4015892	       701	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157dd	    0x8b0500000000	            mov eax, dword [0x040157e3] 	       704	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157e3	            0x4898	                                    cdqe	       704	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157e5	        0x4883c00e	                            add rax, 0xe	       704	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157e9	     0xfb614c50000	                 movzx edx, byte [rax*8]	       704	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157f1	          0x83ca10	                            or edx, 0x10	       704	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157f4	    0x8814c5000000	                    mov byte [rax*8], dl	       704	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x40157fb	      0xe992000000	                           jmp 0x4015892	       705	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015800	    0x8b0500000000	            mov eax, dword [0x04015806] 	       708	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015806	            0x4898	                                    cdqe	       708	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015808	        0x4883c00e	                            add rax, 0xe	       708	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401580c	     0xfb614c50000	                 movzx edx, byte [rax*8]	       708	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015814	          0x83ca20	                            or edx, 0x20	       708	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015817	    0x8814c5000000	                    mov byte [rax*8], dl	       708	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x401581e	            0xeb72	                           jmp 0x4015892	       709	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015820	        0xc6459301	                mov byte [rbp - 0x6d], 1	       712	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015824	    0x488b05000000	            mov rax, qword [0x0401582b] 	       715	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x401582b	          0x488b00	                    mov rax, qword [rax]	       715	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x401582e	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       715	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015832	          0x83e020	                           and eax, 0x20	       715	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015835	            0x84c0	                             test al, al	       715	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015837	            0x7558	                           jne 0x4015891	       715	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015839	    0x488b05000000	            mov rax, qword [0x04015840] 	       716	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015840	          0x488b00	                    mov rax, qword [rax]	       716	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015843	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       716	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015847	          0x83e040	                           and eax, 0x40	       716	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x401584a	            0x84c0	                             test al, al	       716	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x401584c	            0x7543	                           jne 0x4015891	       716	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x401584e	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       717	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015852	            0x7407	                            je 0x401585b	       717	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015854	      0xb862000000	                           mov eax, 0x62	       717	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015859	            0xeb05	                           jmp 0x4015860	       717	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x401585b	      0xb801000000	                              mov eax, 1	       717	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015860	          0x884593	               mov byte [rbp - 0x6d], al	       717	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	IF_21
0x4015863	            0xeb2c	                           jmp 0x4015891	       720	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015865	    0x8b0500000000	            mov eax, dword [0x0401586b] 	       723	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	CALL_21
0x401586b	            0x89c3	                            mov ebx, eax	       723	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	CALL_21
0x401586d	      0xbf00000000	                              mov edi, 0	       723	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	CALL_21
0x4015872	      0xe800000000	                          call 0x4015877	       723	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	CALL_21
0x4015877	      0xb900000000	                              mov ecx, 0	       723	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	CALL_21
0x401587c	      0xbad3020000	                          mov edx, 0x2d3	       723	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	CALL_21
0x4015881	          0x4889de	                            mov rsi, rbx	       723	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	CALL_21
0x4015884	          0x4889c7	                            mov rdi, rax	       723	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	CALL_21
0x4015887	      0xb800000000	                              mov eax, 0	       723	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	CALL_21
0x401588c	      0xe800000000	                          call 0x4015891	       723	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1	CALL_21
0x4015891	              0x90	                                     nop	       720	tc-i386-intel.c	FUNCTION_152	IF_10	SWITCH_1
0x4015892	     0xfb605000000	           movzx eax, byte [0x04015899] 	       727	tc-i386-intel.c	FUNCTION_152	IF_10	IF_22
0x4015899	            0x84c0	                             test al, al	       727	tc-i386-intel.c	FUNCTION_152	IF_10	IF_22
0x401589b	            0x750c	                           jne 0x40158a9	       727	tc-i386-intel.c	FUNCTION_152	IF_10	IF_22
0x401589d	         0xfb64593	            movzx eax, byte [rbp - 0x6d]	       728	tc-i386-intel.c	FUNCTION_152	IF_10	IF_22
0x40158a1	    0x880500000000	               mov byte [0x040158a7], al	       728	tc-i386-intel.c	FUNCTION_152	IF_10	IF_22
0x40158a7	            0xeb2d	                           jmp 0x40158d6	       728	tc-i386-intel.c	FUNCTION_152	IF_10	IF_22
0x40158a9	     0xfb605000000	           movzx eax, byte [0x040158b0] 	       729	tc-i386-intel.c	FUNCTION_152	IF_10	ELSE_13	IF_23
0x40158b0	          0x3a4593	               cmp al, byte [rbp - 0x6d]	       729	tc-i386-intel.c	FUNCTION_152	IF_10	ELSE_13	IF_23
0x40158b3	            0x7421	                            je 0x40158d6	       729	tc-i386-intel.c	FUNCTION_152	IF_10	ELSE_13	IF_23
0x40158b5	      0xbf00000000	                              mov edi, 0	       731	tc-i386-intel.c	FUNCTION_152	IF_10	ELSE_13	IF_23	CALL_23
0x40158ba	      0xe800000000	                          call 0x40158bf	       731	tc-i386-intel.c	FUNCTION_152	IF_10	ELSE_13	IF_23	CALL_23
0x40158bf	          0x4889c7	                            mov rdi, rax	       731	tc-i386-intel.c	FUNCTION_152	IF_10	ELSE_13	IF_23	CALL_23
0x40158c2	      0xb800000000	                              mov eax, 0	       731	tc-i386-intel.c	FUNCTION_152	IF_10	ELSE_13	IF_23	CALL_23
0x40158c7	      0xe800000000	                          call 0x40158cc	       731	tc-i386-intel.c	FUNCTION_152	IF_10	ELSE_13	IF_23	CALL_23
0x40158cc	      0xb800000000	                              mov eax, 0	       732	tc-i386-intel.c	FUNCTION_152	IF_10	ELSE_13	IF_23
0x40158d1	      0xe97a0c0000	                           jmp 0x4016550	       732	tc-i386-intel.c	FUNCTION_152	IF_10	ELSE_13	IF_23
0x40158d6	    0x488b05000000	            mov rax, qword [0x040158dd] 	       737	tc-i386-intel.c	FUNCTION_152	IF_24
0x40158dd	          0x488b00	                    mov rax, qword [rax]	       737	tc-i386-intel.c	FUNCTION_152	IF_24
0x40158e0	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       737	tc-i386-intel.c	FUNCTION_152	IF_24
0x40158e4	          0x83e020	                           and eax, 0x20	       737	tc-i386-intel.c	FUNCTION_152	IF_24
0x40158e7	            0x84c0	                             test al, al	       737	tc-i386-intel.c	FUNCTION_152	IF_24
0x40158e9	            0x752e	                           jne 0x4015919	       737	tc-i386-intel.c	FUNCTION_152	IF_24
0x40158eb	    0x488b05000000	            mov rax, qword [0x040158f2] 	       738	tc-i386-intel.c	FUNCTION_152	IF_24
0x40158f2	          0x488b00	                    mov rax, qword [rax]	       738	tc-i386-intel.c	FUNCTION_152	IF_24
0x40158f5	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       738	tc-i386-intel.c	FUNCTION_152	IF_24
0x40158f9	          0x83e040	                           and eax, 0x40	       738	tc-i386-intel.c	FUNCTION_152	IF_24
0x40158fc	            0x84c0	                             test al, al	       738	tc-i386-intel.c	FUNCTION_152	IF_24
0x40158fe	            0x7519	                           jne 0x4015919	       738	tc-i386-intel.c	FUNCTION_152	IF_24
0x4015900	    0x488b05000000	            mov rax, qword [0x04015907] 	       739	tc-i386-intel.c	FUNCTION_152	IF_24
0x4015907	          0x488b00	                    mov rax, qword [rax]	       739	tc-i386-intel.c	FUNCTION_152	IF_24
0x401590a	         0xfb64029	           movzx eax, byte [rax + 0x29] 	       739	tc-i386-intel.c	FUNCTION_152	IF_24
0x401590e	          0x83e001	                              and eax, 1	       739	tc-i386-intel.c	FUNCTION_152	IF_24
0x4015911	            0x84c0	                             test al, al	       739	tc-i386-intel.c	FUNCTION_152	IF_24
0x4015913	     0xf8402030000	                            je 0x4015c1b	       739	tc-i386-intel.c	FUNCTION_152	IF_24
0x4015919	    0x8b0500000000	            mov eax, dword [0x0401591f] 	       741	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x401591f	            0x4898	                                    cdqe	       741	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015921	        0x4883c014	                           add rax, 0x14	       741	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015925	    0x488b04c50000	                  mov rax, qword [rax*8]	       741	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x401592d	          0x4885c0	                           test rax, rax	       741	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015930	            0x7523	                           jne 0x4015955	       741	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015932	    0x488b05000000	            mov rax, qword [0x04015939] 	       742	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015939	          0x4885c0	                           test rax, rax	       742	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x401593c	            0x7517	                           jne 0x4015955	       742	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x401593e	    0x488b05000000	            mov rax, qword [0x04015945] 	       743	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015945	          0x4885c0	                           test rax, rax	       743	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015948	            0x750b	                           jne 0x4015955	       743	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x401594a	    0x8b0500000000	            mov eax, dword [0x04015950] 	       744	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015950	          0x83f801	                              cmp eax, 1	       744	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015953	            0x7e23	                           jle 0x4015978	       744	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015955	    0x8b0500000000	            mov eax, dword [0x0401595b] 	       745	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x401595b	            0x4898	                                    cdqe	       745	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x401595d	        0x4883c00e	                            add rax, 0xe	       745	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015961	     0xfb614c50000	                 movzx edx, byte [rax*8]	       745	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015969	          0x83ca02	                               or edx, 2	       745	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x401596c	    0x8814c5000000	                    mov byte [rax*8], dl	       745	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015973	      0xe975020000	                           jmp 0x4015bed	       745	tc-i386-intel.c	FUNCTION_152	IF_24	IF_25
0x4015978	    0x8b0500000000	            mov eax, dword [0x0401597e] 	       747	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x401597e	          0x83f83a	                           cmp eax, 0x3a	       747	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015981	            0x744d	                            je 0x40159d0	       747	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015983	          0x83f83b	                           cmp eax, 0x3b	       747	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015986	            0x740a	                            je 0x4015992	       747	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015988	          0x83f801	                              cmp eax, 1	       747	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x401598b	            0x7443	                            je 0x40159d0	       747	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x401598d	      0xe93a020000	                           jmp 0x4015bcc	       747	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015992	    0x488b05000000	            mov rax, qword [0x04015999] 	       750	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	IF_26
0x4015999	          0x4885c0	                           test rax, rax	       750	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	IF_26
0x401599c	            0x7423	                            je 0x40159c1	       750	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	IF_26
0x401599e	    0x8b0500000000	            mov eax, dword [0x040159a4] 	       751	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	IF_26
0x40159a4	            0x4898	                                    cdqe	       751	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	IF_26
0x40159a6	        0x4883c00e	                            add rax, 0xe	       751	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	IF_26
0x40159aa	     0xfb614c50000	                 movzx edx, byte [rax*8]	       751	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	IF_26
0x40159b2	          0x83ca02	                               or edx, 2	       751	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	IF_26
0x40159b5	    0x8814c5000000	                    mov byte [rax*8], dl	       751	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	IF_26
0x40159bc	      0xe92c020000	                           jmp 0x4015bed	       754	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15
0x40159c1	    0xc70500000000	               mov dword [0x040159cb], 1	       753	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15
0x40159cb	      0xe91d020000	                           jmp 0x4015bed	       754	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15
0x40159d0	    0x488b05000000	            mov rax, qword [0x040159d7] 	       757	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x40159d7	          0x4885c0	                           test rax, rax	       757	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x40159da	            0x7568	                           jne 0x4015a44	       757	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x40159dc	    0xc70500000000	               mov dword [0x040159e6], 1	       759	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x40159e6	    0x8b0500000000	            mov eax, dword [0x040159ec] 	       760	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28
0x40159ec	          0x83f801	                              cmp eax, 1	       760	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28
0x40159ef	            0x7532	                           jne 0x4015a23	       760	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28
0x40159f1	    0x8b0500000000	            mov eax, dword [0x040159f7] 	       762	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x40159f7	          0x83f801	                              cmp eax, 1	       762	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x40159fa	     0xf85ec010000	                           jne 0x4015bec	       762	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4015a00	    0x8b0500000000	            mov eax, dword [0x04015a06] 	       763	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4015a06	            0x4898	                                    cdqe	       763	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4015a08	        0x4883c00e	                            add rax, 0xe	       763	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4015a0c	     0xfb614c50000	                 movzx edx, byte [rax*8]	       763	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4015a14	          0x83ca02	                               or edx, 2	       763	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4015a17	    0x8814c5000000	                    mov byte [rax*8], dl	       763	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4015a1e	      0xe9c9010000	                           jmp 0x4015bec	       764	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28
0x4015a23	      0xbf00000000	                              mov edi, 0	       766	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4015a28	      0xe800000000	                          call 0x4015a2d	       766	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4015a2d	          0x4889c7	                            mov rdi, rax	       766	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4015a30	      0xb800000000	                              mov eax, 0	       766	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4015a35	      0xe800000000	                          call 0x4015a3a	       766	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4015a3a	      0xb800000000	                              mov eax, 0	       767	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x4015a3f	      0xe90c0b0000	                           jmp 0x4016550	       767	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x4015a44	    0x488b05000000	            mov rax, qword [0x04015a4b] 	       769	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x4015a4b	          0x4889c7	                            mov rdi, rax	       769	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x4015a4e	      0xe800000000	                          call 0x4015a53	       769	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x4015a53	          0x4889c2	                            mov rdx, rax	       769	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x4015a56	    0x488b05000000	            mov rax, qword [0x04015a5d] 	       769	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x4015a5d	          0x4839c2	                            cmp rdx, rax	       769	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x4015a60	            0x7523	                           jne 0x4015a85	       769	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x4015a62	    0x8b0500000000	            mov eax, dword [0x04015a68] 	       770	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x4015a68	            0x4898	                                    cdqe	       770	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x4015a6a	        0x4883c00e	                            add rax, 0xe	       770	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x4015a6e	     0xfb614c50000	                 movzx edx, byte [rax*8]	       770	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x4015a76	          0x83ca02	                               or edx, 2	       770	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x4015a79	    0x8814c5000000	                    mov byte [rax*8], dl	       770	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x4015a80	      0xe968010000	                           jmp 0x4015bed	       802	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015a85	    0x8b0500000000	            mov eax, dword [0x04015a8b] 	       775	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x4015a8b	          0x83f801	                              cmp eax, 1	       775	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x4015a8e	            0x7626	                           jbe 0x4015ab6	       775	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x4015a90	      0xbf00000000	                              mov edi, 0	       777	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4015a95	      0xe800000000	                          call 0x4015a9a	       777	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4015a9a	      0xbe02000000	                              mov esi, 2	       777	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4015a9f	          0x4889c7	                            mov rdi, rax	       777	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4015aa2	      0xb800000000	                              mov eax, 0	       777	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4015aa7	      0xe800000000	                          call 0x4015aac	       777	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4015aac	      0xb800000000	                              mov eax, 0	       779	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x4015ab1	      0xe99a0a0000	                           jmp 0x4016550	       779	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x4015ab6	    0x8b0500000000	            mov eax, dword [0x04015abc] 	       781	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015abc	          0x8d5001	                      lea edx, [rax + 1]	       781	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015abf	    0x891500000000	            mov dword [0x04015ac5], edx 	       781	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015ac5	            0x89c0	                            mov eax, eax	       781	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015ac7	        0x48c1e005	                              shl rax, 5	       781	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015acb	    0x480500000000	                              add rax, 0	       781	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015ad1	        0x488945b8	             mov qword [rbp - 0x48], rax	       781	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015ad5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       782	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_29
0x4015ad9	      0xba20000000	                           mov edx, 0x20	       782	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_29
0x4015ade	      0xbe00000000	                              mov esi, 0	       782	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_29
0x4015ae3	          0x4889c7	                            mov rdi, rax	       782	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_29
0x4015ae6	      0xe800000000	                          call 0x4015aeb	       782	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_29
0x4015aeb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       783	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015aef	        0xc6401803	                mov byte [rax + 0x18], 3	       783	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015af3	    0x488b15000000	            mov rdx, qword [0x04015afa] 	       784	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015afa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       784	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015afe	          0x488910	                    mov qword [rax], rdx	       784	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015b01	    0x8b0500000000	            mov eax, dword [0x04015b07] 	       785	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015b07	            0x4898	                                    cdqe	       785	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015b09	        0x488d5014	                   lea rdx, [rax + 0x14]	       785	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015b0d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       785	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015b11	    0x488904d50000	                  mov qword [rdx*8], rax	       785	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015b19	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       787	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_30
0x4015b1d	          0x4889c7	                            mov rdi, rax	       787	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_30
0x4015b20	      0xe800000000	                          call 0x4015b25	       787	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_30
0x4015b25	        0x488d45e0	                   lea rax, [rbp - 0x20]	       788	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_31
0x4015b29	      0xbeffffffff	                     mov esi, 0xffffffff	       788	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_31
0x4015b2e	          0x4889c7	                            mov rdi, rax	       788	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_31
0x4015b31	      0xe8cba9feff	               call sym.operand_type_set	       788	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_31
0x4015b36	    0x488b05000000	            mov rax, qword [0x04015b3d] 	       789	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4015b3d	          0x4889c7	                            mov rdi, rax	       789	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4015b40	      0xe800000000	                          call 0x4015b45	       789	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4015b45	          0x4889c7	                            mov rdi, rax	       789	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4015b48	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       789	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4015b4c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       789	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4015b50	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       789	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4015b54	          0x4889c6	                            mov rsi, rax	       789	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4015b57	      0xe8d791ffff	        call sym.i386_finalize_immediate	       789	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4015b5c	            0x85c0	                           test eax, eax	       789	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4015b5e	            0x750a	                           jne 0x4015b6a	       789	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4015b60	      0xb800000000	                              mov eax, 0	       791	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32
0x4015b65	      0xe9e6090000	                           jmp 0x4016550	       791	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32
0x4015b6a	    0x8b0500000000	            mov eax, dword [0x04015b70] 	       792	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015b70	          0x83f804	                              cmp eax, 4	       792	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015b73	            0x7733	                            ja 0x4015ba8	       792	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015b75	    0x8b0500000000	            mov eax, dword [0x04015b7b] 	       794	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015b7b	          0x8d5001	                      lea edx, [rax + 1]	       794	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015b7e	    0x891500000000	            mov dword [0x04015b84], edx 	       794	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015b84	    0x890500000000	            mov dword [0x04015b8a], eax 	       794	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015b8a	    0x8b0500000000	            mov eax, dword [0x04015b90] 	       795	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015b90	            0x4898	                                    cdqe	       795	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015b92	        0x4883c00e	                            add rax, 0xe	       795	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015b96	     0xfb614c50000	                 movzx edx, byte [rax*8]	       795	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015b9e	          0x83ca40	                            or edx, 0x40	       795	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015ba1	    0x8814c5000000	                    mov byte [rax*8], dl	       795	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4015ba8	        0x807d9301	                cmp byte [rbp - 0x6d], 1	       797	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_34
0x4015bac	            0x7507	                           jne 0x4015bb5	       797	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_34
0x4015bae	    0xc60500000000	                mov byte [0x04015bb5], 0	       798	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_34
0x4015bb5	    0x48c705000000	               mov qword [0x04015bc0], 0	       799	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015bc0	    0xc70500000000	               mov dword [0x04015bca], 0	       800	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4015bca	            0xeb21	                           jmp 0x4015bed	       802	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015bcc	    0x8b0500000000	            mov eax, dword [0x04015bd2] 	       804	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015bd2	            0x4898	                                    cdqe	       804	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015bd4	        0x4883c00e	                            add rax, 0xe	       804	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015bd8	     0xfb614c50000	                 movzx edx, byte [rax*8]	       804	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015be0	          0x83ca02	                               or edx, 2	       804	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015be3	    0x8814c5000000	                    mov byte [rax*8], dl	       804	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015bea	            0xeb01	                           jmp 0x4015bed	       805	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2
0x4015bec	              0x90	                                     nop	       764	tc-i386-intel.c	FUNCTION_152	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28
0x4015bed	    0x8b0500000000	            mov eax, dword [0x04015bf3] 	       807	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015bf3	            0x4898	                                    cdqe	       807	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015bf5	        0x4883c00e	                            add rax, 0xe	       807	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015bf9	     0xfb604c50000	                 movzx eax, byte [rax*8]	       807	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015c01	            0xd0e8	                               shr al, 1	       807	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015c03	          0x83e001	                              and eax, 1	       807	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015c06	            0x84c0	                             test al, al	       807	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015c08	            0x742c	                            je 0x4015c36	       807	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015c0a	    0x8b0500000000	            mov eax, dword [0x04015c10] 	       808	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015c10	          0x83c801	                               or eax, 1	       808	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015c13	    0x890500000000	            mov dword [0x04015c19], eax 	       808	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015c19	            0xeb1b	                           jmp 0x4015c36	       807	tc-i386-intel.c	FUNCTION_152	IF_24	IF_35
0x4015c1b	    0x488b05000000	            mov rax, qword [0x04015c22] 	       810	tc-i386-intel.c	FUNCTION_152	ELSE_18	IF_36
0x4015c22	          0x4885c0	                           test rax, rax	       810	tc-i386-intel.c	FUNCTION_152	ELSE_18	IF_36
0x4015c25	            0x740f	                            je 0x4015c36	       810	tc-i386-intel.c	FUNCTION_152	ELSE_18	IF_36
0x4015c27	    0x8b0500000000	            mov eax, dword [0x04015c2d] 	       811	tc-i386-intel.c	FUNCTION_152	ELSE_18	IF_36
0x4015c2d	          0x83c801	                               or eax, 1	       811	tc-i386-intel.c	FUNCTION_152	ELSE_18	IF_36
0x4015c30	    0x890500000000	            mov dword [0x04015c36], eax 	       811	tc-i386-intel.c	FUNCTION_152	ELSE_18	IF_36
0x4015c36	    0x8b0500000000	            mov eax, dword [0x04015c3c] 	       813	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015c3c	            0x4898	                                    cdqe	       813	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015c3e	        0x4883c014	                           add rax, 0x14	       813	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015c42	    0x488b04c50000	                  mov rax, qword [rax*8]	       813	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015c4a	          0x4885c0	                           test rax, rax	       813	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015c4d	     0xf84d5000000	                            je 0x4015d28	       813	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015c53	    0x488b05000000	            mov rax, qword [0x04015c5a] 	       818	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38
0x4015c5a	          0x4885c0	                           test rax, rax	       818	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38
0x4015c5d	            0x7518	                           jne 0x4015c77	       818	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38
0x4015c5f	    0x488b05000000	            mov rax, qword [0x04015c66] 	       818	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38
0x4015c66	          0x4885c0	                           test rax, rax	       818	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38
0x4015c69	            0x750c	                           jne 0x4015c77	       818	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38
0x4015c6b	    0x488b05000000	            mov rax, qword [0x04015c72] 	       818	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38
0x4015c72	          0x4885c0	                           test rax, rax	       818	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38
0x4015c75	            0x7421	                            je 0x4015c98	       818	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38
0x4015c77	      0xbf00000000	                              mov edi, 0	       820	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38	CALL_35
0x4015c7c	      0xe800000000	                          call 0x4015c81	       820	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38	CALL_35
0x4015c81	          0x4889c7	                            mov rdi, rax	       820	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38	CALL_35
0x4015c84	      0xb800000000	                              mov eax, 0	       820	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38	CALL_35
0x4015c89	      0xe800000000	                          call 0x4015c8e	       820	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38	CALL_35
0x4015c8e	      0xb800000000	                              mov eax, 0	       821	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38
0x4015c93	      0xe9b8080000	                           jmp 0x4016550	       821	tc-i386-intel.c	FUNCTION_152	IF_37	IF_38
0x4015c98	    0x8b0500000000	            mov eax, dword [0x04015c9e] 	       824	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015c9e	            0x4898	                                    cdqe	       824	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015ca0	        0x4883c014	                           add rax, 0x14	       824	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015ca4	    0x488b04c50000	                  mov rax, qword [rax*8]	       824	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015cac	        0x488b4008	                mov rax, qword [rax + 8]	       824	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015cb0	        0x488945e0	             mov qword [rbp - 0x20], rax	       824	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015cb4	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	       825	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015cb8	          0x83e0bf	                     and eax, 0xffffffbf	       825	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015cbb	          0x8845e2	               mov byte [rbp - 0x1e], al	       825	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015cbe	    0x8b1500000000	            mov edx, dword [0x04015cc4] 	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015cc4	    0x8b0500000000	            mov eax, dword [0x04015cca] 	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015cca	          0x4863d2	                         movsxd rdx, edx	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015ccd	        0x488d5a0e	                    lea rbx, [rdx + 0xe]	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015cd1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015cd5	            0x4898	                                    cdqe	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015cd7	        0x4883c00e	                            add rax, 0xe	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015cdb	    0x488b04c50000	                  mov rax, qword [rax*8]	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015ce3	          0x4889d6	                            mov rsi, rdx	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015ce6	          0x4889c7	                            mov rdi, rax	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015ce9	      0xe89eadfeff	                call sym.operand_type_or	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015cee	    0x488904dd0000	                  mov qword [rbx*8], rax	       826	tc-i386-intel.c	FUNCTION_152	IF_37	CALL_36
0x4015cf6	    0x8b0500000000	            mov eax, dword [0x04015cfc] 	       828	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015cfc	            0x4898	                                    cdqe	       828	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015cfe	        0x4883c00e	                            add rax, 0xe	       828	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015d02	     0xfb614c50000	                 movzx edx, byte [rax*8]	       828	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015d0a	          0x83e2bf	                     and edx, 0xffffffbf	       828	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015d0d	    0x8814c5000000	                    mov byte [rax*8], dl	       828	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015d14	    0x8b0500000000	            mov eax, dword [0x04015d1a] 	       829	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015d1a	          0x83c001	                              add eax, 1	       829	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015d1d	    0x890500000000	            mov dword [0x04015d23], eax 	       829	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015d23	      0xe923080000	                           jmp 0x401654b	       829	tc-i386-intel.c	FUNCTION_152	IF_37
0x4015d28	    0x488b05000000	            mov rax, qword [0x04015d2f] 	       831	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d2f	          0x4885c0	                           test rax, rax	       831	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d32	            0x7526	                           jne 0x4015d5a	       831	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d34	    0x488b05000000	            mov rax, qword [0x04015d3b] 	       832	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d3b	          0x4885c0	                           test rax, rax	       832	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d3e	            0x751a	                           jne 0x4015d5a	       832	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d40	    0x488b05000000	            mov rax, qword [0x04015d47] 	       833	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d47	          0x4885c0	                           test rax, rax	       833	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d4a	            0x750e	                           jne 0x4015d5a	       833	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d4c	    0x8b0500000000	            mov eax, dword [0x04015d52] 	       834	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d52	            0x85c0	                           test eax, eax	       834	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d54	     0xf8449070000	                            je 0x40164a3	       834	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4015d5a	    0x8b0500000000	            mov eax, dword [0x04015d60] 	       837	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_40	CALL_37
0x4015d60	          0x83f801	                              cmp eax, 1	       837	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_40	CALL_37
0x4015d63	            0x7513	                           jne 0x4015d78	       837	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_40	CALL_37
0x4015d65	      0xe8d9a3ffff	         call sym.maybe_adjust_templates	       837	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_40	CALL_37
0x4015d6a	            0x85c0	                           test eax, eax	       837	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_40	CALL_37
0x4015d6c	            0x750a	                           jne 0x4015d78	       837	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_40	CALL_37
0x4015d6e	      0xb800000000	                              mov eax, 0	       838	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_40
0x4015d73	      0xe9d8070000	                           jmp 0x4016550	       838	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_40
0x4015d78	    0x8b0500000000	            mov eax, dword [0x04015d7e] 	       839	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015d7e	            0x89c2	                            mov edx, eax	       839	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015d80	    0x488b05000000	            mov rax, qword [0x04015d87] 	       840	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015d87	          0x488b00	                    mov rax, qword [rax]	       840	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015d8a	         0xfb6402b	           movzx eax, byte [rax + 0x2b] 	       840	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015d8e	          0x83e001	                              and eax, 1	       840	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015d91	            0x84c0	                             test al, al	       840	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015d93	            0x7507	                           jne 0x4015d9c	       840	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015d95	      0xb801000000	                              mov eax, 1	       840	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015d9a	            0xeb05	                           jmp 0x4015da1	       840	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015d9c	      0xb802000000	                              mov eax, 2	       840	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015da1	            0x39c2	                            cmp edx, eax	       839	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015da3	     0xf8cc6010000	                            jl 0x4015f6f	       839	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015da9	    0x488b05000000	            mov rax, qword [0x04015db0] 	       850	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015db0	          0x488b00	                    mov rax, qword [rax]	       850	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015db3	         0xfb64029	           movzx eax, byte [rax + 0x29] 	       850	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015db7	          0x83e001	                              and eax, 1	       850	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dba	            0x84c0	                             test al, al	       850	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dbc	            0x752e	                           jne 0x4015dec	       850	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dbe	    0x488b05000000	            mov rax, qword [0x04015dc5] 	       851	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dc5	          0x488b00	                    mov rax, qword [rax]	       851	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dc8	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       851	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dcc	          0x83e040	                           and eax, 0x40	       851	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dcf	            0x84c0	                             test al, al	       851	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dd1	            0x7519	                           jne 0x4015dec	       851	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dd3	    0x488b05000000	            mov rax, qword [0x04015dda] 	       852	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dda	          0x488b00	                    mov rax, qword [rax]	       852	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015ddd	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       852	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015de1	          0x83e020	                           and eax, 0x20	       852	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015de4	            0x84c0	                             test al, al	       852	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015de6	     0xf8452010000	                            je 0x4015f3e	       852	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dec	    0x8b0500000000	            mov eax, dword [0x04015df2] 	       853	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015df2	          0x83f801	                              cmp eax, 1	       853	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015df5	     0xf8543010000	                           jne 0x4015f3e	       853	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015dfb	    0x488b05000000	            mov rax, qword [0x04015e02] 	       854	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e02	          0x4885c0	                           test rax, rax	       854	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e05	     0xf8533010000	                           jne 0x4015f3e	       854	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e0b	    0x8b0500000000	            mov eax, dword [0x04015e11] 	       855	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e11	          0x83f801	                              cmp eax, 1	       855	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e14	     0xf8524010000	                           jne 0x4015f3e	       855	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e1a	    0x8b0500000000	            mov eax, dword [0x04015e20] 	       856	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e20	          0x83f801	                              cmp eax, 1	       856	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e23	     0xf8515010000	                           jne 0x4015f3e	       856	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e29	    0x8b0500000000	            mov eax, dword [0x04015e2f] 	       857	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e2f	          0x83f801	                              cmp eax, 1	       857	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e32	     0xf8506010000	                           jne 0x4015f3e	       857	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e38	    0xc70500000000	               mov dword [0x04015e42], 0	       860	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42
0x4015e42	    0x488b35000000	            mov rsi, qword [0x04015e49] 	       861	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4015e49	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       861	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4015e4d	      0xb900000000	                              mov ecx, 0	       861	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4015e52	    0x488b15000000	            mov rdx, qword [0x04015e59] 	       861	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4015e59	          0x4889c7	                            mov rdi, rax	       861	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4015e5c	      0xe8d28effff	        call sym.i386_finalize_immediate	       861	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4015e61	            0x85c0	                           test eax, eax	       861	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4015e63	     0xf84d5000000	                            je 0x4015f3e	       861	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4015e69	    0xc70500000000	               mov dword [0x04015e73], 1	       865	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015e73	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       866	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015e7b	    0x8b0500000000	            mov eax, dword [0x04015e81] 	       867	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015e81	            0x4898	                                    cdqe	       867	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015e83	        0x488d5014	                   lea rdx, [rax + 0x14]	       867	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015e87	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       867	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015e8b	    0x488904d50000	                  mov qword [rdx*8], rax	       867	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015e93	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       868	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015e97	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       868	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015e9b	          0x488910	                    mov qword [rax], rdx	       868	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015e9e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       868	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015ea2	        0x48895008	                mov qword [rax + 8], rdx	       868	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015ea6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       868	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015eaa	        0x48895010	             mov qword [rax + 0x10], rdx	       868	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015eae	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       868	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015eb2	        0x48895018	             mov qword [rax + 0x18], rdx	       868	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4015eb6	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       871	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4015eba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       871	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4015ebe	      0xb900000000	                              mov ecx, 0	       871	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4015ec3	    0x488b15000000	            mov rdx, qword [0x04015eca] 	       871	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4015eca	          0x4889c7	                            mov rdi, rax	       871	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4015ecd	      0xe8618effff	        call sym.i386_finalize_immediate	       871	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4015ed2	            0x85c0	                           test eax, eax	       871	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4015ed4	            0x7468	                            je 0x4015f3e	       871	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4015ed6	    0xc70500000000	               mov dword [0x04015ee0], 0	       875	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015ee0	    0xc70500000000	               mov dword [0x04015eea], 0	       876	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015eea	    0xc70500000000	               mov dword [0x04015ef4], 2	       877	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015ef4	     0xfb605000000	           movzx eax, byte [0x04015efb] 	       878	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015efb	          0x83e0ef	                     and eax, 0xffffffef	       878	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015efe	    0x880500000000	               mov byte [0x04015f04], al	       878	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f04	     0xfb605000000	           movzx eax, byte [0x04015f0b] 	       879	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f0b	          0x83e0fd	                     and eax, 0xfffffffd	       879	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f0e	    0x880500000000	               mov byte [0x04015f14], al	       879	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f14	     0xfb605000000	           movzx eax, byte [0x04015f1b] 	       880	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f1b	          0x83e0fb	                     and eax, 0xfffffffb	       880	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f1e	    0x880500000000	               mov byte [0x04015f24], al	       880	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f24	     0xfb605000000	           movzx eax, byte [0x04015f2b] 	       881	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f2b	          0x83e0f7	                     and eax, 0xfffffff7	       881	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f2e	    0x880500000000	               mov byte [0x04015f34], al	       881	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f34	      0xb801000000	                              mov eax, 1	       882	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f39	      0xe912060000	                           jmp 0x4016550	       882	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4015f3e	    0x488b05000000	            mov rax, qword [0x04015f45] 	       888	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015f45	          0x488b00	                    mov rax, qword [rax]	       888	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015f48	          0x488b18	                    mov rbx, qword [rax]	       887	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	CALL_41
0x4015f4b	      0xbf00000000	                              mov edi, 0	       887	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	CALL_41
0x4015f50	      0xe800000000	                          call 0x4015f55	       887	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	CALL_41
0x4015f55	          0x4889de	                            mov rsi, rbx	       887	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	CALL_41
0x4015f58	          0x4889c7	                            mov rdi, rax	       887	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	CALL_41
0x4015f5b	      0xb800000000	                              mov eax, 0	       887	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	CALL_41
0x4015f60	      0xe800000000	                          call 0x4015f65	       887	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41	CALL_41
0x4015f65	      0xb800000000	                              mov eax, 0	       889	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015f6a	      0xe9e1050000	                           jmp 0x4016550	       889	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_41
0x4015f6f	    0x488b05000000	            mov rax, qword [0x04015f76] 	       895	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015f76	          0x4885c0	                           test rax, rax	       895	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015f79	            0x746c	                            je 0x4015fe7	       895	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015f7b	    0x488b05000000	            mov rax, qword [0x04015f82] 	       896	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015f82	          0x4885c0	                           test rax, rax	       896	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015f85	            0x7460	                            je 0x4015fe7	       896	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015f87	    0x488b05000000	            mov rax, qword [0x04015f8e] 	       897	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015f8e	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	       897	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015f92	          0x83e040	                           and eax, 0x40	       897	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015f95	            0x84c0	                             test al, al	       897	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015f97	            0x744e	                            je 0x4015fe7	       897	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015f99	    0x488b05000000	            mov rax, qword [0x04015fa0] 	       898	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fa0	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	       898	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fa4	          0x83e040	                           and eax, 0x40	       898	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fa7	            0x84c0	                             test al, al	       898	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fa9	            0x743c	                            je 0x4015fe7	       898	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fab	    0x488b05000000	            mov rax, qword [0x04015fb2] 	       899	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fb2	         0xfb64011	           movzx eax, byte [rax + 0x11] 	       899	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fb6	            0x3c05	                               cmp al, 5	       899	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fb8	            0x762d	                           jbe 0x4015fe7	       899	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fba	    0x488b05000000	            mov rax, qword [0x04015fc1] 	       900	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fc1	         0xfb64011	           movzx eax, byte [rax + 0x11] 	       900	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fc5	            0x3c05	                               cmp al, 5	       900	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fc7	            0x771e	                            ja 0x4015fe7	       900	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fc9	    0x488b05000000	            mov rax, qword [0x04015fd0] 	       902	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fd0	    0x488905000000	            mov qword [0x04015fd7], rax 	       902	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fd7	    0x488b05000000	            mov rax, qword [0x04015fde] 	       903	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fde	    0x488905000000	            mov qword [0x04015fe5], rax 	       903	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fe5	            0xeb1c	                           jmp 0x4016003	       903	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_45
0x4015fe7	    0x488b05000000	            mov rax, qword [0x04015fee] 	       907	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	ELSE_20
0x4015fee	    0x488905000000	            mov qword [0x04015ff5], rax 	       907	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	ELSE_20
0x4015ff5	    0x488b05000000	            mov rax, qword [0x04015ffc] 	       908	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	ELSE_20
0x4015ffc	    0x488905000000	            mov qword [0x04016003], rax 	       908	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	ELSE_20
0x4016003	    0x488b05000000	            mov rax, qword [0x0401600a] 	       911	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x401600a	          0x4885c0	                           test rax, rax	       911	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x401600d	            0x750c	                           jne 0x401601b	       911	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x401600f	    0x488b05000000	            mov rax, qword [0x04016016] 	       911	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x4016016	          0x4885c0	                           test rax, rax	       911	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x4016019	            0x741e	                            je 0x4016039	       911	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x401601b	    0x8b0500000000	            mov eax, dword [0x04016021] 	       912	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x4016021	            0x4898	                                    cdqe	       912	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x4016023	        0x4883c00e	                            add rax, 0xe	       912	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x4016027	     0xfb614c50000	                 movzx edx, byte [rax*8]	       912	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x401602f	          0x83ca40	                            or edx, 0x40	       912	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x4016032	    0x8814c5000000	                    mov byte [rax*8], dl	       912	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_46
0x4016039	    0x8b0500000000	            mov eax, dword [0x0401603f] 	       914	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x401603f	            0x89c0	                            mov eax, eax	       914	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4016041	        0x48c1e005	                              shl rax, 5	       914	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4016045	    0x480500000000	                              add rax, 0	       914	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x401604b	        0x488945b8	             mov qword [rbp - 0x48], rax	       914	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x401604f	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       915	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_42
0x4016053	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       915	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_42
0x4016057	      0xba20000000	                           mov edx, 0x20	       915	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_42
0x401605c	          0x4889ce	                            mov rsi, rcx	       915	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_42
0x401605f	          0x4889c7	                            mov rdi, rax	       915	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_42
0x4016062	      0xe800000000	                          call 0x4016067	       915	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_42
0x4016067	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       916	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_43
0x401606b	          0x4889c7	                            mov rdi, rax	       916	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_43
0x401606e	      0xe800000000	                          call 0x4016073	       916	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_43
0x4016073	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       918	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x4016077	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       918	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x401607b	            0x3c02	                               cmp al, 2	       918	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x401607d	            0x752f	                           jne 0x40160ae	       918	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x401607f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       919	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x4016083	        0x488b4010	            mov rax, qword [rax + 0x10] 	       919	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x4016087	          0x4885c0	                           test rax, rax	       919	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x401608a	            0x7522	                           jne 0x40160ae	       919	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x401608c	    0x8b0500000000	            mov eax, dword [0x04016092] 	       920	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x4016092	            0x4898	                                    cdqe	       920	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x4016094	        0x4883c00e	                            add rax, 0xe	       920	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x4016098	     0xfb604c50000	                 movzx eax, byte [rax*8]	       920	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160a0	          0xc0e806	                               shr al, 6	       920	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160a3	          0x83e001	                              and eax, 1	       920	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160a6	            0x84c0	                             test al, al	       920	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160a8	     0xf852a010000	                           jne 0x40161d8	       920	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160ae	    0x8b0500000000	            mov eax, dword [0x040160b4] 	       922	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160b4	            0x4898	                                    cdqe	       922	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160b6	        0x488d5014	                   lea rdx, [rax + 0x14]	       922	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160ba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       922	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160be	    0x488904d50000	                  mov qword [rdx*8], rax	       922	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160c6	    0x8b0500000000	            mov eax, dword [0x040160cc] 	       923	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160cc	          0x83c001	                              add eax, 1	       923	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160cf	    0x890500000000	            mov dword [0x040160d5], eax 	       923	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47
0x40160d5	      0xe81e97ffff	           call sym.i386_addressing_mode	       925	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	CALL_44
0x40160da	    0x8b0500000000	            mov eax, dword [0x040160e0] 	       927	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48
0x40160e0	          0x83f802	                              cmp eax, 2	       927	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48
0x40160e3	            0x756b	                           jne 0x4016150	       927	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48
0x40160e5	    0x8b0500000000	            mov eax, dword [0x040160eb] 	       929	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48
0x40160eb	            0x4898	                                    cdqe	       929	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48
0x40160ed	        0x4883c00e	                            add rax, 0xe	       929	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48
0x40160f1	     0xfb614c50000	                 movzx edx, byte [rax*8]	       929	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48
0x40160f9	          0x83ca04	                               or edx, 4	       929	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48
0x40160fc	    0x8814c5000000	                    mov byte [rax*8], dl	       929	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48
0x4016103	     0xfb605000000	           movzx eax, byte [0x0401610a] 	       930	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x401610a	            0x84c0	                             test al, al	       930	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x401610c	     0xf859a000000	                           jne 0x40161ac	       930	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4016112	    0x8b0500000000	            mov eax, dword [0x04016118] 	       932	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4016118	            0x4898	                                    cdqe	       932	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x401611a	        0x4883c00e	                            add rax, 0xe	       932	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x401611e	     0xfb614c50000	                 movzx edx, byte [rax*8]	       932	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4016126	          0x83ca10	                            or edx, 0x10	       932	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4016129	    0x8814c5000000	                    mov byte [rax*8], dl	       932	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4016130	    0x8b0500000000	            mov eax, dword [0x04016136] 	       933	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4016136	            0x4898	                                    cdqe	       933	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4016138	        0x4883c00e	                            add rax, 0xe	       933	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x401613c	     0xfb614c50000	                 movzx edx, byte [rax*8]	       933	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4016144	          0x83ca08	                               or edx, 8	       933	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4016147	    0x8814c5000000	                    mov byte [rax*8], dl	       933	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x401614e	            0xeb5c	                           jmp 0x40161ac	       933	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4016150	     0xfb605000000	           movzx eax, byte [0x04016157] 	       936	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4016157	            0x84c0	                             test al, al	       936	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4016159	           0xf94c2	                                 sete dl	       936	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x401615c	    0x8b0500000000	            mov eax, dword [0x04016162] 	       936	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4016162	          0x83f801	                              cmp eax, 1	       936	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4016165	           0xf94c0	                                 sete al	       936	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4016168	            0x31d0	                            xor eax, edx	       936	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x401616a	            0x84c0	                             test al, al	       936	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x401616c	            0x7420	                            je 0x401618e	       936	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x401616e	    0x8b0500000000	            mov eax, dword [0x04016174] 	       937	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4016174	            0x4898	                                    cdqe	       937	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4016176	        0x4883c00e	                            add rax, 0xe	       937	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x401617a	     0xfb614c50000	                 movzx edx, byte [rax*8]	       937	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4016182	          0x83ca04	                               or edx, 4	       937	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4016185	    0x8814c5000000	                    mov byte [rax*8], dl	       937	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x401618c	            0xeb1e	                           jmp 0x40161ac	       937	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x401618e	    0x8b0500000000	            mov eax, dword [0x04016194] 	       939	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_22
0x4016194	            0x4898	                                    cdqe	       939	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_22
0x4016196	        0x4883c00e	                            add rax, 0xe	       939	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_22
0x401619a	     0xfb614c50000	                 movzx edx, byte [rax*8]	       939	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_22
0x40161a2	          0x83ca02	                               or edx, 2	       939	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_22
0x40161a5	    0x8814c5000000	                    mov byte [rax*8], dl	       939	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	ELSE_22
0x40161ac	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       960	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x40161b0	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       960	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x40161b4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       960	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x40161b8	          0x4889d1	                            mov rcx, rdx	       960	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x40161bb	    0x488b15000000	            mov rdx, qword [0x040161c2] 	       960	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x40161c2	          0x4889c7	                            mov rdi, rax	       960	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x40161c5	      0xe8d692ffff	     call sym.i386_finalize_displacement	       960	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x40161ca	            0x85c0	                           test eax, eax	       960	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x40161cc	            0x750a	                           jne 0x40161d8	       960	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x40161ce	      0xb800000000	                              mov eax, 0	       963	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_52
0x40161d3	      0xe978030000	                           jmp 0x4016550	       963	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_47	IF_52
0x40161d8	    0x488b05000000	            mov rax, qword [0x040161df] 	       966	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53
0x40161df	          0x4885c0	                           test rax, rax	       966	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53
0x40161e2	     0xf8452020000	                            je 0x401643a	       966	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53
0x40161e8	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       968	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1
0x40161ef	    0x488b05000000	            mov rax, qword [0x040161f6] 	       970	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	CALL_46
0x40161f6	          0x4889c7	                            mov rdi, rax	       970	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	CALL_46
0x40161f9	      0xe800000000	                          call 0x40161fe	       970	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	CALL_46
0x40161fe	        0x488945b8	             mov qword [rbp - 0x48], rax	       970	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	CALL_46
0x4016202	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       971	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	IF_54
0x4016206	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       971	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	IF_54
0x401620a	            0x3c1f	                            cmp al, 0x1f	       971	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	IF_54
0x401620c	            0x7531	                           jne 0x401623f	       971	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	IF_54
0x401620e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       972	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4016212	        0x488b4008	                mov rax, qword [rax + 8]	       972	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4016216	          0x4889c7	                            mov rdi, rax	       972	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4016219	      0xe800000000	                          call 0x401621e	       972	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x401621e	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       972	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4016222	            0x3c05	                               cmp al, 5	       972	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4016224	            0x7519	                           jne 0x401623f	       972	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4016226	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       975	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1
0x401622a	          0x488b00	                    mov rax, qword [rax]	       975	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1
0x401622d	    0x488905000000	            mov qword [0x04016234], rax 	       975	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1
0x4016234	    0x8b0500000000	            mov eax, dword [0x0401623a] 	       968	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1
0x401623a	          0x894594	             mov dword [rbp - 0x6c], eax	       968	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1
0x401623d	            0xebb0	                           jmp 0x40161ef	       976	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	FOR_1
0x401623f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       977	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_55
0x4016243	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       977	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_55
0x4016247	            0x3c05	                               cmp al, 5	       977	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_55
0x4016249	            0x7421	                            je 0x401626c	       977	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_55
0x401624b	      0xbf00000000	                              mov edi, 0	       979	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x4016250	      0xe800000000	                          call 0x4016255	       979	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x4016255	          0x4889c7	                            mov rdi, rax	       979	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x4016258	      0xb800000000	                              mov eax, 0	       979	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x401625d	      0xe800000000	                          call 0x4016262	       979	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x4016262	      0xb800000000	                              mov eax, 0	       980	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_55
0x4016267	      0xe9e4020000	                           jmp 0x4016550	       980	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_55
0x401626c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       982	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x4016270	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       982	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x4016274	          0x4889d0	                            mov rax, rdx	       982	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x4016277	          0x4801c0	                            add rax, rax	       982	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x401627a	          0x4801d0	                            add rax, rdx	       982	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x401627d	        0x48c1e003	                              shl rax, 3	       982	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x4016281	    0x480500000000	                              add rax, 0	       982	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x4016287	         0xfb64008	               movzx eax, byte [rax + 8]	       982	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x401628b	          0xc0e807	                               shr al, 7	       982	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x401628e	            0x84c0	                             test al, al	       982	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x4016290	            0x7547	                           jne 0x40162d9	       982	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x4016292	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       983	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x4016296	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       983	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x401629a	          0x4889d0	                            mov rax, rdx	       983	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x401629d	          0x4801c0	                            add rax, rax	       983	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x40162a0	          0x4801d0	                            add rax, rdx	       983	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x40162a3	        0x48c1e003	                              shl rax, 3	       983	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x40162a7	    0x480500000000	                              add rax, 0	       983	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x40162ad	         0xfb64009	               movzx eax, byte [rax + 9]	       983	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x40162b1	          0x83e001	                              and eax, 1	       983	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x40162b4	            0x84c0	                             test al, al	       983	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x40162b6	            0x7521	                           jne 0x40162d9	       983	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x40162b8	      0xbf00000000	                              mov edi, 0	       985	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x40162bd	      0xe800000000	                          call 0x40162c2	       985	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x40162c2	          0x4889c7	                            mov rdi, rax	       985	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x40162c5	      0xb800000000	                              mov eax, 0	       985	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x40162ca	      0xe800000000	                          call 0x40162cf	       985	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x40162cf	      0xb800000000	                              mov eax, 0	       986	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x40162d4	      0xe977020000	                           jmp 0x4016550	       986	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	IF_56
0x40162d9	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       988	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3
0x40162dc	          0x83f801	                              cmp eax, 1	       988	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3
0x40162df	            0x7426	                            je 0x4016307	       988	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3
0x40162e1	          0x83f802	                              cmp eax, 2	       988	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3
0x40162e4	            0x7539	                           jne 0x401631f	       988	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3
0x40162e6	      0xbf00000000	                              mov edi, 0	       991	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x40162eb	      0xe800000000	                          call 0x40162f0	       991	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x40162f0	          0x4889c7	                            mov rdi, rax	       991	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x40162f3	      0xb800000000	                              mov eax, 0	       991	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x40162f8	      0xe800000000	                          call 0x40162fd	       991	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x40162fd	      0xb800000000	                              mov eax, 0	       992	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3
0x4016302	      0xe949020000	                           jmp 0x4016550	       992	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3
0x4016307	      0xbf00000000	                              mov edi, 0	       994	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x401630c	      0xe800000000	                          call 0x4016311	       994	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x4016311	          0x4889c7	                            mov rdi, rax	       994	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x4016314	      0xb800000000	                              mov eax, 0	       994	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x4016319	      0xe800000000	                          call 0x401631e	       994	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x401631e	              0x90	                                     nop	       995	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_3
0x401631f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016323	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016327	          0x4889d0	                            mov rax, rdx	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401632a	          0x4801c0	                            add rax, rax	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401632d	          0x4801d0	                            add rax, rdx	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016330	        0x48c1e003	                              shl rax, 3	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016334	    0x480500000000	                              add rax, 0	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401633a	           0xfb600	                   movzx eax, byte [rax]	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401633d	           0xfb6c0	                           movzx eax, al	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016340	          0x83f803	                              cmp eax, 3	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016343	     0xf848a000000	                            je 0x40163d3	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016349	          0x83f803	                              cmp eax, 3	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401634c	            0x7f13	                            jg 0x4016361	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401634e	          0x83f801	                              cmp eax, 1	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016351	            0x7449	                            je 0x401639c	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016353	          0x83f801	                              cmp eax, 1	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016356	            0x7f61	                            jg 0x40163b9	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016358	            0x85c0	                           test eax, eax	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401635a	            0x7423	                            je 0x401637f	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401635c	      0xe9d9000000	                           jmp 0x401643a	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016361	          0x83f805	                              cmp eax, 5	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016364	     0xf849d000000	                            je 0x4016407	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401636a	          0x83f805	                              cmp eax, 5	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401636d	            0x7c7e	                            jl 0x40163ed	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401636f	      0x3dff000000	                           cmp eax, 0xff	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016374	     0xf84a7000000	                            je 0x4016421	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401637a	      0xe9bb000000	                           jmp 0x401643a	       997	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401637f	    0x8b0500000000	            mov eax, dword [0x04016385] 	       999	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016385	            0x89c0	                            mov eax, eax	       999	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016387	        0x4883c020	                           add rax, 0x20	       999	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401638b	    0x48c704c50000	                    mov qword [rax*8], 0	       999	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016397	      0xe99e000000	                           jmp 0x401643a	       999	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401639c	    0x8b0500000000	            mov eax, dword [0x040163a2] 	      1000	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163a2	            0x89c0	                            mov eax, eax	      1000	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163a4	        0x4883c020	                           add rax, 0x20	      1000	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163a8	    0x48c704c50000	                    mov qword [rax*8], 0	      1000	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163b4	      0xe981000000	                           jmp 0x401643a	      1000	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163b9	    0x8b0500000000	            mov eax, dword [0x040163bf] 	      1001	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163bf	            0x89c0	                            mov eax, eax	      1001	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163c1	        0x4883c020	                           add rax, 0x20	      1001	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163c5	    0x48c704c50000	                    mov qword [rax*8], 0	      1001	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163d1	            0xeb67	                           jmp 0x401643a	      1001	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163d3	    0x8b0500000000	            mov eax, dword [0x040163d9] 	      1002	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163d9	            0x89c0	                            mov eax, eax	      1002	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163db	        0x4883c020	                           add rax, 0x20	      1002	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163df	    0x48c704c50000	                    mov qword [rax*8], 0	      1002	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163eb	            0xeb4d	                           jmp 0x401643a	      1002	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163ed	    0x8b0500000000	            mov eax, dword [0x040163f3] 	      1003	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163f3	            0x89c0	                            mov eax, eax	      1003	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163f5	        0x4883c020	                           add rax, 0x20	      1003	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x40163f9	    0x48c704c50000	                    mov qword [rax*8], 0	      1003	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016405	            0xeb33	                           jmp 0x401643a	      1003	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016407	    0x8b0500000000	            mov eax, dword [0x0401640d] 	      1004	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401640d	            0x89c0	                            mov eax, eax	      1004	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401640f	        0x4883c020	                           add rax, 0x20	      1004	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016413	    0x48c704c50000	                    mov qword [rax*8], 0	      1004	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401641f	            0xeb19	                           jmp 0x401643a	      1004	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016421	    0x8b0500000000	            mov eax, dword [0x04016427] 	      1005	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016427	            0x89c0	                            mov eax, eax	      1005	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016429	        0x4883c020	                           add rax, 0x20	      1005	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401642d	    0x48c704c50000	                    mov qword [rax*8], 0	      1005	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x4016439	              0x90	                                     nop	      1005	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_53	SWITCH_4
0x401643a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1009	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_57	CALL_56
0x401643e	          0x4889c7	                            mov rdi, rax	      1009	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_57	CALL_56
0x4016441	      0xe81995ffff	               call sym.i386_index_check	      1009	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_57	CALL_56
0x4016446	            0x85c0	                           test eax, eax	      1009	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_57	CALL_56
0x4016448	            0x750a	                           jne 0x4016454	      1009	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_57	CALL_56
0x401644a	      0xb800000000	                              mov eax, 0	      1010	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_57
0x401644f	      0xe9fc000000	                           jmp 0x4016550	      1010	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_57
0x4016454	    0x8b0500000000	            mov eax, dword [0x0401645a] 	      1012	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x401645a	            0x4898	                                    cdqe	      1012	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x401645c	        0x4883c00e	                            add rax, 0xe	      1012	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4016460	     0xfb614c50000	                 movzx edx, byte [rax*8]	      1012	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4016468	          0x83ca10	                            or edx, 0x10	      1012	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x401646b	    0x8814c5000000	                    mov byte [rax*8], dl	      1012	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4016472	    0x8b0500000000	            mov eax, dword [0x04016478] 	      1013	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_58
0x4016478	            0x85c0	                           test eax, eax	      1013	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_58
0x401647a	            0x7513	                           jne 0x401648f	      1013	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	IF_58
0x401647c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1014	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_57
0x4016480	          0x4889c7	                            mov rdi, rax	      1014	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_57
0x4016483	      0xe800000000	                          call 0x4016488	      1014	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_57
0x4016488	    0x488905000000	            mov qword [0x0401648f], rax 	      1014	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39	CALL_57
0x401648f	    0x8b0500000000	            mov eax, dword [0x04016495] 	      1015	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4016495	          0x83c001	                              add eax, 1	      1015	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x4016498	    0x890500000000	            mov dword [0x0401649e], eax 	      1015	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x401649e	      0xe9a8000000	                           jmp 0x401654b	      1015	tc-i386-intel.c	FUNCTION_152	ELSE_19	IF_39
0x40164a3	    0x8b0500000000	            mov eax, dword [0x040164a9] 	      1020	tc-i386-intel.c	FUNCTION_152	ELSE_23	IF_59
0x40164a9	          0x83f801	                              cmp eax, 1	      1020	tc-i386-intel.c	FUNCTION_152	ELSE_23	IF_59
0x40164ac	            0x7623	                           jbe 0x40164d1	      1020	tc-i386-intel.c	FUNCTION_152	ELSE_23	IF_59
0x40164ae	      0xbf00000000	                              mov edi, 0	      1022	tc-i386-intel.c	FUNCTION_152	ELSE_23	IF_59	CALL_59
0x40164b3	      0xe800000000	                          call 0x40164b8	      1022	tc-i386-intel.c	FUNCTION_152	ELSE_23	IF_59	CALL_59
0x40164b8	      0xbe02000000	                              mov esi, 2	      1022	tc-i386-intel.c	FUNCTION_152	ELSE_23	IF_59	CALL_59
0x40164bd	          0x4889c7	                            mov rdi, rax	      1022	tc-i386-intel.c	FUNCTION_152	ELSE_23	IF_59	CALL_59
0x40164c0	      0xb800000000	                              mov eax, 0	      1022	tc-i386-intel.c	FUNCTION_152	ELSE_23	IF_59	CALL_59
0x40164c5	      0xe800000000	                          call 0x40164ca	      1022	tc-i386-intel.c	FUNCTION_152	ELSE_23	IF_59	CALL_59
0x40164ca	      0xb800000000	                              mov eax, 0	      1024	tc-i386-intel.c	FUNCTION_152	ELSE_23	IF_59
0x40164cf	            0xeb7f	                           jmp 0x4016550	      1024	tc-i386-intel.c	FUNCTION_152	ELSE_23	IF_59
0x40164d1	    0x8b0500000000	            mov eax, dword [0x040164d7] 	      1027	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x40164d7	          0x8d5001	                      lea edx, [rax + 1]	      1027	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x40164da	    0x891500000000	            mov dword [0x040164e0], edx 	      1027	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x40164e0	            0x89c0	                            mov eax, eax	      1027	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x40164e2	        0x48c1e005	                              shl rax, 5	      1027	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x40164e6	    0x480500000000	                              add rax, 0	      1027	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x40164ec	        0x488945b8	             mov qword [rbp - 0x48], rax	      1027	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x40164f0	    0x8b0500000000	            mov eax, dword [0x040164f6] 	      1028	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x40164f6	            0x4898	                                    cdqe	      1028	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x40164f8	        0x488d5014	                   lea rdx, [rax + 0x14]	      1028	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x40164fc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1028	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x4016500	    0x488904d50000	                  mov qword [rdx*8], rax	      1028	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x4016508	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1029	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x401650c	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1029	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x4016510	          0x488910	                    mov qword [rax], rdx	      1029	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x4016513	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1029	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x4016517	        0x48895008	                mov qword [rax + 8], rdx	      1029	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x401651b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1029	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x401651f	        0x48895010	             mov qword [rax + 0x10], rdx	      1029	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x4016523	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1029	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x4016527	        0x48895018	             mov qword [rax + 0x18], rdx	      1029	tc-i386-intel.c	FUNCTION_152	ELSE_23
0x401652b	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1031	tc-i386-intel.c	FUNCTION_152	ELSE_23	CALL_60
0x401652f	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      1031	tc-i386-intel.c	FUNCTION_152	ELSE_23	CALL_60
0x4016533	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1031	tc-i386-intel.c	FUNCTION_152	ELSE_23	CALL_60
0x4016537	          0x4889d1	                            mov rcx, rdx	      1031	tc-i386-intel.c	FUNCTION_152	ELSE_23	CALL_60
0x401653a	    0x488b15000000	            mov rdx, qword [0x04016541] 	      1031	tc-i386-intel.c	FUNCTION_152	ELSE_23	CALL_60
0x4016541	          0x4889c7	                            mov rdi, rax	      1031	tc-i386-intel.c	FUNCTION_152	ELSE_23	CALL_60
0x4016544	      0xe8ea87ffff	        call sym.i386_finalize_immediate	      1031	tc-i386-intel.c	FUNCTION_152	ELSE_23	CALL_60
0x4016549	            0xeb05	                           jmp 0x4016550	      1031	tc-i386-intel.c	FUNCTION_152	ELSE_23	CALL_60
0x401654b	      0xb801000000	                              mov eax, 1	      1035	tc-i386-intel.c	FUNCTION_152
0x4016550	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1036	tc-i386-intel.c	FUNCTION_152
0x4016554	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1036	tc-i386-intel.c	FUNCTION_152
0x401655d	            0x7405	                            je 0x4016564	      1036	tc-i386-intel.c	FUNCTION_152
0x401655f	      0xe800000000	                          call 0x4016564	      1036	tc-i386-intel.c	FUNCTION_152
0x4016564	        0x4883c478	                           add rsp, 0x78	      1036	tc-i386-intel.c	FUNCTION_152
0x4016568	              0x5b	                                 pop rbx	      1036	tc-i386-intel.c	FUNCTION_152
0x4016569	              0x5d	                                 pop rbp	      1036	tc-i386-intel.c	FUNCTION_152
0x401656a	              0xc3	                                     ret	      1036	tc-i386-intel.c	FUNCTION_152
md_convert_frag	CALL,7:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,3:ELSE,1:DO,0	200
0x4011147	              0x55	                                push rbp	      9857	tc-i386.c	FUNCTION_116
0x4011148	          0x4889e5	                            mov rbp, rsp	      9857	tc-i386.c	FUNCTION_116
0x401114b	              0x53	                                push rbx	      9857	tc-i386.c	FUNCTION_116
0x401114c	        0x4883ec58	                           sub rsp, 0x58	      9857	tc-i386.c	FUNCTION_116
0x4011150	        0x48897db8	             mov qword [rbp - 0x48], rdi	      9857	tc-i386.c	FUNCTION_116
0x4011154	        0x488975b0	             mov qword [rbp - 0x50], rsi	      9857	tc-i386.c	FUNCTION_116
0x4011158	        0x488955a8	             mov qword [rbp - 0x58], rdx	      9857	tc-i386.c	FUNCTION_116
0x401115c	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      9859	tc-i386.c	FUNCTION_116
0x4011164	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      9862	tc-i386.c	FUNCTION_116
0x401116b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9865	tc-i386.c	FUNCTION_116
0x401116f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      9865	tc-i386.c	FUNCTION_116
0x4011173	        0x488945d8	             mov qword [rbp - 0x28], rax	      9865	tc-i386.c	FUNCTION_116
0x4011177	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x401117b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x401117f	          0x4889c7	                            mov rdi, rax	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x4011182	      0xe800000000	                          call 0x4011187	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x4011187	          0x4889c2	                            mov rdx, rax	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x401118a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x401118e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x4011192	          0x4801d0	                            add rax, rdx	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x4011195	        0x488945e0	             mov qword [rbp - 0x20], rax	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x4011199	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9871	tc-i386.c	FUNCTION_116
0x401119d	          0x488b10	                    mov rdx, qword [rax]	      9871	tc-i386.c	FUNCTION_116
0x40111a0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9871	tc-i386.c	FUNCTION_116
0x40111a4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9871	tc-i386.c	FUNCTION_116
0x40111a8	          0x4801d0	                            add rax, rdx	      9871	tc-i386.c	FUNCTION_116
0x40111ab	        0x488945e8	             mov qword [rbp - 0x18], rax	      9871	tc-i386.c	FUNCTION_116
0x40111af	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9874	tc-i386.c	FUNCTION_116
0x40111b3	        0x482b45e8	             sub rax, qword [rbp - 0x18]	      9874	tc-i386.c	FUNCTION_116
0x40111b7	        0x488945d0	             mov qword [rbp - 0x30], rax	      9874	tc-i386.c	FUNCTION_116
0x40111bb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9876	tc-i386.c	FUNCTION_116	IF_1
0x40111bf	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9876	tc-i386.c	FUNCTION_116	IF_1
0x40111c2	          0x83e002	                              and eax, 2	      9876	tc-i386.c	FUNCTION_116	IF_1
0x40111c5	            0x85c0	                           test eax, eax	      9876	tc-i386.c	FUNCTION_116	IF_1
0x40111c7	            0x7518	                           jne 0x40111e1	      9876	tc-i386.c	FUNCTION_116	IF_1
0x40111c9	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      9879	tc-i386.c	FUNCTION_116	IF_1
0x40111d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9880	tc-i386.c	FUNCTION_116	IF_1
0x40111d4	        0x4883c001	                              add rax, 1	      9880	tc-i386.c	FUNCTION_116	IF_1
0x40111d8	        0x488945c8	             mov qword [rbp - 0x38], rax	      9880	tc-i386.c	FUNCTION_116	IF_1
0x40111dc	      0xe96a010000	                           jmp 0x401134b	      9880	tc-i386.c	FUNCTION_116	IF_1
0x40111e1	    0x8b0500000000	            mov eax, dword [0x040111e7] 	      9884	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x40111e7	            0x85c0	                           test eax, eax	      9884	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x40111e9	            0x7439	                            je 0x4011224	      9884	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x40111eb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x40111ef	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x40111f2	          0xc1e802	                              shr eax, 2	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x40111f5	            0x85c0	                           test eax, eax	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x40111f7	            0x742b	                            je 0x4011224	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x40111f9	      0xbf00000000	                              mov edi, 0	      9887	tc-i386.c	FUNCTION_116	ELSE_1	CALL_3
0x40111fe	      0xe800000000	                          call 0x4011203	      9887	tc-i386.c	FUNCTION_116	ELSE_1	CALL_3
0x4011203	          0x4889c2	                            mov rdx, rax	      9887	tc-i386.c	FUNCTION_116	ELSE_1	CALL_3
0x4011206	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x401120a	          0x8b4848	            mov ecx, dword [rax + 0x48] 	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x401120d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x4011211	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x4011215	            0x89ce	                            mov esi, ecx	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x4011217	          0x4889c7	                            mov rdi, rax	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x401121a	      0xb800000000	                              mov eax, 0	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x401121f	      0xe800000000	                          call 0x4011224	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x4011224	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011228	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401122b	          0x83f80b	                            cmp eax, 0xb	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401122e	     0xf87ea000000	                            ja 0x401131e	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011234	            0x89c0	                            mov eax, eax	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011236	    0x488b04c50000	                  mov rax, qword [rax*8]	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401123e	            0xffe0	                                 jmp rax	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011240	    0xc745c4040000	               mov dword [rbp - 0x3c], 4	      9892	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011247	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9893	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401124b	          0xc600e9	                    mov byte [rax], 0xe9	      9893	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401124e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9894	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011252	        0x4883c001	                              add rax, 1	      9894	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011256	        0x488945c8	             mov qword [rbp - 0x38], rax	      9894	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401125a	      0xe9ec000000	                           jmp 0x401134b	      9895	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401125f	    0xc745c4020000	               mov dword [rbp - 0x3c], 2	      9898	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011266	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9899	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401126a	          0xc600e9	                    mov byte [rax], 0xe9	      9899	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401126d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9900	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011271	        0x4883c001	                              add rax, 1	      9900	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011275	        0x488945c8	             mov qword [rbp - 0x38], rax	      9900	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011279	      0xe9cd000000	                           jmp 0x401134b	      9901	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401127e	    0xc745c4050000	               mov dword [rbp - 0x3c], 5	      9905	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011285	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011289	        0x488d5001	                      lea rdx, [rax + 1]	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401128d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011291	           0xfb600	                   movzx eax, byte [rax]	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011294	          0x83c010	                           add eax, 0x10	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011297	            0x8802	                      mov byte [rdx], al	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011299	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9907	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401129d	          0xc6000f	                     mov byte [rax], 0xf	      9907	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9908	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112a4	        0x4883c002	                              add rax, 2	      9908	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112a8	        0x488945c8	             mov qword [rbp - 0x38], rax	      9908	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112ac	      0xe99a000000	                           jmp 0x401134b	      9909	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112b1	    0xc745c4030000	               mov dword [rbp - 0x3c], 3	      9912	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112bc	        0x488d5001	                      lea rdx, [rax + 1]	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112c4	           0xfb600	                   movzx eax, byte [rax]	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112c7	          0x83c010	                           add eax, 0x10	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112ca	            0x8802	                      mov byte [rdx], al	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9914	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112d0	          0xc6000f	                     mov byte [rax], 0xf	      9914	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9915	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112d7	        0x4883c002	                              add rax, 2	      9915	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112db	        0x488945c8	             mov qword [rbp - 0x38], rax	      9915	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112df	            0xeb6a	                           jmp 0x401134b	      9916	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112e1	    0xc745c4040000	               mov dword [rbp - 0x3c], 4	      9919	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9920	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112ec	           0xfb600	                   movzx eax, byte [rax]	      9920	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112ef	          0x83f001	                              xor eax, 1	      9920	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112f2	            0x89c2	                            mov edx, eax	      9920	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9920	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112f8	            0x8810	                      mov byte [rax], dl	      9920	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9921	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x40112fe	        0x4883c001	                              add rax, 1	      9921	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011302	          0xc60003	                       mov byte [rax], 3	      9921	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011305	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9922	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011309	        0x4883c002	                              add rax, 2	      9922	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401130d	          0xc600e9	                    mov byte [rax], 0xe9	      9922	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011310	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9923	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011314	        0x4883c003	                              add rax, 3	      9923	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x4011318	        0x488945c8	             mov qword [rbp - 0x38], rax	      9923	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401131c	            0xeb2d	                           jmp 0x401134b	      9924	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x401131e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x4011322	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x4011325	            0x89c3	                            mov ebx, eax	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x4011327	      0xbf00000000	                              mov edi, 0	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x401132c	      0xe800000000	                          call 0x4011331	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x4011331	      0xb900000000	                              mov ecx, 0	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x4011336	      0xbac7260000	                         mov edx, 0x26c7	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x401133b	          0x4889de	                            mov rsi, rbx	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x401133e	          0x4889c7	                            mov rdi, rax	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x4011341	      0xb800000000	                              mov eax, 0	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x4011346	      0xe800000000	                          call 0x401134b	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x401134b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9935	tc-i386.c	FUNCTION_116	IF_3
0x401134f	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9935	tc-i386.c	FUNCTION_116	IF_3
0x4011352	          0x83e003	                              and eax, 3	      9935	tc-i386.c	FUNCTION_116	IF_3
0x4011355	          0x83f802	                              cmp eax, 2	      9935	tc-i386.c	FUNCTION_116	IF_3
0x4011358	            0x755e	                           jne 0x40113b8	      9935	tc-i386.c	FUNCTION_116	IF_3
0x401135a	    0x8b0500000000	            mov eax, dword [0x04011360] 	      9936	tc-i386.c	FUNCTION_116	IF_3
0x4011360	            0x85c0	                           test eax, eax	      9936	tc-i386.c	FUNCTION_116	IF_3
0x4011362	            0x7454	                            je 0x40113b8	      9936	tc-i386.c	FUNCTION_116	IF_3
0x4011364	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      9937	tc-i386.c	FUNCTION_116	IF_3
0x4011367	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      9937	tc-i386.c	FUNCTION_116	IF_3
0x401136b	          0x4829c2	                            sub rdx, rax	      9937	tc-i386.c	FUNCTION_116	IF_3
0x401136e	          0x4889d0	                            mov rax, rdx	      9937	tc-i386.c	FUNCTION_116	IF_3
0x4011371	          0x4889c2	                            mov rdx, rax	      9937	tc-i386.c	FUNCTION_116	IF_3
0x4011374	      0xb800000080	                     mov eax, 0x80000000	      9937	tc-i386.c	FUNCTION_116	IF_3
0x4011379	          0x4801c2	                            add rdx, rax	      9937	tc-i386.c	FUNCTION_116	IF_3
0x401137c	      0xb8ffffffff	                     mov eax, 0xffffffff	      9937	tc-i386.c	FUNCTION_116	IF_3
0x4011381	          0x4839c2	                            cmp rdx, rax	      9937	tc-i386.c	FUNCTION_116	IF_3
0x4011384	            0x7632	                           jbe 0x40113b8	      9937	tc-i386.c	FUNCTION_116	IF_3
0x4011386	      0xbf00000000	                              mov edi, 0	      9942	tc-i386.c	FUNCTION_116	IF_3	CALL_6
0x401138b	      0xe800000000	                          call 0x4011390	      9942	tc-i386.c	FUNCTION_116	IF_3	CALL_6
0x4011390	          0x4889c2	                            mov rdx, rax	      9942	tc-i386.c	FUNCTION_116	IF_3	CALL_6
0x4011393	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x4011397	          0x8b4848	            mov ecx, dword [rax + 0x48] 	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x401139a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x401139e	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x40113a2	            0x89ce	                            mov esi, ecx	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x40113a4	          0x4889c7	                            mov rdi, rax	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x40113a7	      0xb800000000	                              mov eax, 0	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x40113ac	      0xe800000000	                          call 0x40113b1	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x40113b1	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      9944	tc-i386.c	FUNCTION_116	IF_3
0x40113b4	        0x488945d0	             mov qword [rbp - 0x30], rax	      9944	tc-i386.c	FUNCTION_116	IF_3
0x40113b8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9949	tc-i386.c	FUNCTION_116
0x40113bc	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9949	tc-i386.c	FUNCTION_116
0x40113bf	          0x83e003	                              and eax, 3	      9949	tc-i386.c	FUNCTION_116
0x40113c2	          0x83f802	                              cmp eax, 2	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x40113c5	            0x741d	                            je 0x40113e4	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x40113c7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9949	tc-i386.c	FUNCTION_116
0x40113cb	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9949	tc-i386.c	FUNCTION_116
0x40113ce	          0x83e003	                              and eax, 3	      9949	tc-i386.c	FUNCTION_116
0x40113d1	          0x83f803	                              cmp eax, 3	      9949	tc-i386.c	FUNCTION_116
0x40113d4	            0x7507	                           jne 0x40113dd	      9949	tc-i386.c	FUNCTION_116
0x40113d6	      0xb802000000	                              mov eax, 2	      9949	tc-i386.c	FUNCTION_116
0x40113db	            0xeb0c	                           jmp 0x40113e9	      9949	tc-i386.c	FUNCTION_116
0x40113dd	      0xb801000000	                              mov eax, 1	      9949	tc-i386.c	FUNCTION_116
0x40113e2	            0xeb05	                           jmp 0x40113e9	      9949	tc-i386.c	FUNCTION_116
0x40113e4	      0xb804000000	                              mov eax, 4	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x40113e9	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      9948	tc-i386.c	FUNCTION_116
0x40113ec	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      9948	tc-i386.c	FUNCTION_116
0x40113f0	          0x4829d1	                            sub rcx, rdx	      9948	tc-i386.c	FUNCTION_116
0x40113f3	          0x4889ca	                            mov rdx, rcx	      9948	tc-i386.c	FUNCTION_116
0x40113f6	          0x4889d6	                            mov rsi, rdx	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x40113f9	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x40113fd	            0x89c2	                            mov edx, eax	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x40113ff	          0x4889cf	                            mov rdi, rcx	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x4011402	      0xe800000000	                          call 0x4011407	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x4011407	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9950	tc-i386.c	FUNCTION_116
0x401140b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9950	tc-i386.c	FUNCTION_116
0x401140f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      9950	tc-i386.c	FUNCTION_116
0x4011412	          0x4801c2	                            add rdx, rax	      9950	tc-i386.c	FUNCTION_116
0x4011415	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9950	tc-i386.c	FUNCTION_116
0x4011419	        0x48895010	             mov qword [rax + 0x10], rdx	      9950	tc-i386.c	FUNCTION_116
0x401141d	              0x90	                                     nop	      9951	tc-i386.c	FUNCTION_116
0x401141e	        0x4883c458	                           add rsp, 0x58	      9951	tc-i386.c	FUNCTION_116
0x4011422	              0x5b	                                 pop rbx	      9951	tc-i386.c	FUNCTION_116
0x4011423	              0x5d	                                 pop rbp	      9951	tc-i386.c	FUNCTION_116
0x4011424	              0xc3	                                     ret	      9951	tc-i386.c	FUNCTION_116
build_modrm_byte	CALL,48:FOR,2:WHILE,0:functions,0:SWITCH,2:IF,92:ELSE,41:DO,0	1624
0x400aff0	              0x55	                                push rbp	      6649	tc-i386.c	FUNCTION_87
0x400aff1	          0x4889e5	                            mov rbp, rsp	      6649	tc-i386.c	FUNCTION_87
0x400aff4	              0x53	                                push rbx	      6649	tc-i386.c	FUNCTION_87
0x400aff5	        0x4883ec68	                           sub rsp, 0x68	      6649	tc-i386.c	FUNCTION_87
0x400aff9	    0x64488b042528	                mov rax, qword fs:[0x28]	      6649	tc-i386.c	FUNCTION_87
0x400b002	        0x488945e8	             mov qword [rbp - 0x18], rax	      6649	tc-i386.c	FUNCTION_87
0x400b006	            0x31c0	                            xor eax, eax	      6649	tc-i386.c	FUNCTION_87
0x400b008	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      6650	tc-i386.c	FUNCTION_87
0x400b010	     0xfb605000000	           movzx eax, byte [0x0400b017] 	      6654	tc-i386.c	FUNCTION_87
0x400b017	          0x83e00c	                            and eax, 0xc	      6654	tc-i386.c	FUNCTION_87
0x400b01a	            0x3c08	                               cmp al, 8	      6654	tc-i386.c	FUNCTION_87
0x400b01c	           0xf94c0	                                 sete al	      6654	tc-i386.c	FUNCTION_87
0x400b01f	           0xfb6c0	                           movzx eax, al	      6654	tc-i386.c	FUNCTION_87
0x400b022	          0x8945b8	             mov dword [rbp - 0x48], eax	      6654	tc-i386.c	FUNCTION_87
0x400b025	        0x837db800	               cmp dword [rbp - 0x48], 0	      6655	tc-i386.c	FUNCTION_87	IF_1
0x400b029	     0xf8426030000	                            je 0x400b355	      6655	tc-i386.c	FUNCTION_87	IF_1
0x400b02f	    0x8b0500000000	            mov eax, dword [0x0400b035] 	      6660	tc-i386.c	FUNCTION_87	IF_1
0x400b035	          0x83e801	                              sub eax, 1	      6660	tc-i386.c	FUNCTION_87	IF_1
0x400b038	          0x894594	             mov dword [rbp - 0x6c], eax	      6660	tc-i386.c	FUNCTION_87	IF_1
0x400b03b	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6661	tc-i386.c	FUNCTION_87	IF_1
0x400b03e	          0x83e801	                              sub eax, 1	      6661	tc-i386.c	FUNCTION_87	IF_1
0x400b041	          0x8945bc	             mov dword [rbp - 0x44], eax	      6661	tc-i386.c	FUNCTION_87	IF_1
0x400b044	    0x8b0500000000	            mov eax, dword [0x0400b04a] 	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b04a	          0x83f804	                              cmp eax, 4	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b04d	            0x7416	                            je 0x400b065	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b04f	    0x8b0500000000	            mov eax, dword [0x0400b055] 	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b055	          0x83f803	                              cmp eax, 3	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b058	            0x7540	                           jne 0x400b09a	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b05a	    0x8b0500000000	            mov eax, dword [0x0400b060] 	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b060	          0x83f801	                              cmp eax, 1	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b063	            0x7535	                           jne 0x400b09a	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b065	     0xfb605000000	           movzx eax, byte [0x0400b06c] 	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b06c	          0x83e018	                           and eax, 0x18	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b06f	            0x3c08	                               cmp al, 8	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b071	            0x7527	                           jne 0x400b09a	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b073	     0xfb605000000	           movzx eax, byte [0x0400b07a] 	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b07a	          0x83e060	                           and eax, 0x60	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b07d	            0x84c0	                             test al, al	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b07f	            0x7419	                            je 0x400b09a	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b081	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b084	        0x4883c006	                              add rax, 6	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b088	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b090	          0xc0e802	                               shr al, 2	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b093	          0x83e001	                              and eax, 1	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b096	            0x84c0	                             test al, al	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b098	            0x7514	                           jne 0x400b0ae	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b09a	      0xba00000000	                              mov edx, 0	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b09f	      0xbe121a0000	                         mov esi, 0x1a12	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b0a4	      0xbf00000000	                              mov edi, 0	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b0a9	      0xe800000000	                          call 0x400b0ae	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x400b0ae	     0xfb605000000	           movzx eax, byte [0x0400b0b5] 	      6678	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x400b0b5	          0x83e060	                           and eax, 0x60	      6678	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x400b0b8	            0x3c40	                            cmp al, 0x40	      6678	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x400b0ba	            0x7517	                           jne 0x400b0d3	      6678	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x400b0bc	    0x8b0500000000	            mov eax, dword [0x0400b0c2] 	      6680	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x400b0c2	          0x894590	             mov dword [rbp - 0x70], eax	      6680	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x400b0c5	    0x8b0500000000	            mov eax, dword [0x0400b0cb] 	      6681	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x400b0cb	          0x83c001	                              add eax, 1	      6681	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x400b0ce	          0x894598	             mov dword [rbp - 0x68], eax	      6681	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x400b0d1	            0xeb15	                           jmp 0x400b0e8	      6681	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x400b0d3	    0x8b0500000000	            mov eax, dword [0x0400b0d9] 	      6685	tc-i386.c	FUNCTION_87	IF_1	ELSE_1
0x400b0d9	          0x83c001	                              add eax, 1	      6685	tc-i386.c	FUNCTION_87	IF_1	ELSE_1
0x400b0dc	          0x894590	             mov dword [rbp - 0x70], eax	      6685	tc-i386.c	FUNCTION_87	IF_1	ELSE_1
0x400b0df	    0x8b0500000000	            mov eax, dword [0x0400b0e5] 	      6686	tc-i386.c	FUNCTION_87	IF_1	ELSE_1
0x400b0e5	          0x894598	             mov dword [rbp - 0x68], eax	      6686	tc-i386.c	FUNCTION_87	IF_1	ELSE_1
0x400b0e8	    0x8b0500000000	            mov eax, dword [0x0400b0ee] 	      6689	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b0ee	            0x85c0	                           test eax, eax	      6689	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b0f0	     0xf8504010000	                           jne 0x400b1fa	      6689	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b0f6	    0x8b0500000000	            mov eax, dword [0x0400b0fc] 	      6693	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b0fc	          0x8d5001	                      lea edx, [rax + 1]	      6693	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b0ff	    0x891500000000	            mov dword [0x0400b105], edx 	      6693	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b105	            0x89c0	                            mov eax, eax	      6693	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b107	        0x48c1e005	                              shl rax, 5	      6693	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b10b	    0x480500000000	                              add rax, 0	      6693	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b111	        0x488945c8	             mov qword [rbp - 0x38], rax	      6693	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b115	    0x8b0500000000	            mov eax, dword [0x0400b11b] 	      6694	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b11b	            0x89c0	                            mov eax, eax	      6694	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b11d	        0x488d5014	                   lea rdx, [rax + 0x14]	      6694	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b121	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6694	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b125	    0x488904d50000	                  mov qword [rdx*8], rax	      6694	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b12d	    0x8b0500000000	            mov eax, dword [0x0400b133] 	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b133	            0x89c2	                            mov edx, eax	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b135	        0x4883c20e	                            add rdx, 0xe	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b139	    0x48c704d50000	                    mov qword [rdx*8], 0	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b145	            0x89c0	                            mov eax, eax	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b147	        0x4883c00e	                            add rax, 0xe	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b14b	     0xfb614c50000	                 movzx edx, byte [rax*8]	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b153	          0x83ca04	                               or edx, 4	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b156	    0x8814c5000000	                    mov byte [rax*8], dl	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b15d	    0x8b0500000000	            mov eax, dword [0x0400b163] 	      6696	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b163	          0x83c001	                              add eax, 1	      6696	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b166	    0x890500000000	            mov dword [0x0400b16c], eax 	      6696	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b16c	          0x8b4598	             mov eax, dword [rbp - 0x68]	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400b16f	        0x4883c006	                              add rax, 6	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400b173	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400b17b	          0xc0e802	                               shr al, 2	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400b17e	          0x83e001	                              and eax, 1	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400b181	            0x84c0	                             test al, al	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400b183	            0x7514	                           jne 0x400b199	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400b185	      0xba00000000	                              mov edx, 0	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400b18a	      0xbe2a1a0000	                         mov esi, 0x1a2a	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400b18f	      0xbf00000000	                              mov edi, 0	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400b194	      0xe800000000	                          call 0x400b199	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400b199	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6699	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b19d	        0xc6401802	                mov byte [rax + 0x18], 2	      6699	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400b1a1	          0x8b4598	             mov eax, dword [rbp - 0x68]	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400b1a4	        0x4883c014	                           add rax, 0x14	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400b1a8	    0x488b04c50000	                  mov rax, qword [rax*8]	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400b1b0	          0x4889c7	                            mov rdi, rax	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400b1b3	      0xe85d64ffff	                call sym.register_number	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400b1b8	          0xc1e004	                              shl eax, 4	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400b1bb	            0x89c2	                            mov edx, eax	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400b1bd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400b1c1	        0x48895010	             mov qword [rax + 0x10], rdx	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400b1c5	          0x8b4598	             mov eax, dword [rbp - 0x68]	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1c8	        0x4883c014	                           add rax, 0x14	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1cc	    0x488b04c50000	                  mov rax, qword [rax*8]	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1d4	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1d8	           0xfb6c0	                           movzx eax, al	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1db	          0x83e004	                              and eax, 4	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1de	            0x85c0	                           test eax, eax	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1e0	     0xf842a010000	                            je 0x400b310	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1e6	      0xba00000000	                              mov edx, 0	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1eb	      0xbe2d1a0000	                         mov esi, 0x1a2d	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1f0	      0xbf00000000	                              mov edi, 0	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1f5	      0xe800000000	                          call 0x400b1fa	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400b1fa	    0x8b0500000000	            mov eax, dword [0x0400b200] 	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400b200	          0x83f801	                              cmp eax, 1	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400b203	            0x750e	                           jne 0x400b213	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400b205	     0xfb605000000	           movzx eax, byte [0x0400b20c] 	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400b20c	          0x83e001	                              and eax, 1	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400b20f	            0x84c0	                             test al, al	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400b211	            0x7514	                           jne 0x400b227	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400b213	      0xba00000000	                              mov edx, 0	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400b218	      0xbe331a0000	                         mov esi, 0x1a33	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400b21d	      0xbf00000000	                              mov edi, 0	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400b222	      0xe800000000	                          call 0x400b227	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400b227	     0xfb605000000	           movzx eax, byte [0x0400b22e] 	      6709	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400b22e	          0x83e020	                           and eax, 0x20	      6709	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400b231	            0x84c0	                             test al, al	      6709	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400b233	            0x7416	                            je 0x400b24b	      6709	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400b235	    0x8b0500000000	            mov eax, dword [0x0400b23b] 	      6713	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400b23b	          0x83e801	                              sub eax, 1	      6713	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400b23e	          0x89459c	             mov dword [rbp - 0x64], eax	      6713	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400b241	        0x836d9001	               sub dword [rbp - 0x70], 1	      6714	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400b245	        0x836d9801	               sub dword [rbp - 0x68], 1	      6715	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400b249	            0xeb20	                           jmp 0x400b26b	      6715	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400b24b	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      6719	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x400b252	          0x8b459c	             mov eax, dword [rbp - 0x64]	      6722	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x400b255	        0x4883c00e	                            add rax, 0xe	      6722	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x400b259	     0xfb614c50000	                 movzx edx, byte [rax*8]	      6722	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x400b261	          0x83ca04	                               or edx, 4	      6722	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x400b264	    0x8814c5000000	                    mov byte [rax*8], dl	      6722	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x400b26b	          0x8b4598	             mov eax, dword [rbp - 0x68]	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400b26e	        0x4883c006	                              add rax, 6	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400b272	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400b27a	          0xc0e802	                               shr al, 2	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400b27d	          0x83e001	                              and eax, 1	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400b280	            0x84c0	                             test al, al	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400b282	            0x7514	                           jne 0x400b298	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400b284	      0xba00000000	                              mov edx, 0	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400b289	      0xbe451a0000	                         mov esi, 0x1a45	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400b28e	      0xbf00000000	                              mov edi, 0	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400b293	      0xe800000000	                          call 0x400b298	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400b298	          0x8b4598	             mov eax, dword [rbp - 0x68]	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400b29b	        0x4883c014	                           add rax, 0x14	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400b29f	    0x488b04c50000	                  mov rax, qword [rax*8]	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400b2a7	          0x4889c7	                            mov rdi, rax	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400b2aa	      0xe86663ffff	                call sym.register_number	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400b2af	          0xc1e004	                              shl eax, 4	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400b2b2	            0x89c1	                            mov ecx, eax	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400b2b4	          0x8b459c	             mov eax, dword [rbp - 0x64]	      6726	tc-i386.c	FUNCTION_87	IF_1	ELSE_2
0x400b2b7	        0x4883c014	                           add rax, 0x14	      6726	tc-i386.c	FUNCTION_87	IF_1	ELSE_2
0x400b2bb	    0x488b04c50000	                  mov rax, qword [rax*8]	      6726	tc-i386.c	FUNCTION_87	IF_1	ELSE_2
0x400b2c3	          0x8b559c	             mov edx, dword [rbp - 0x64]	      6726	tc-i386.c	FUNCTION_87	IF_1	ELSE_2
0x400b2c6	        0x4883c214	                           add rdx, 0x14	      6726	tc-i386.c	FUNCTION_87	IF_1	ELSE_2
0x400b2ca	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      6726	tc-i386.c	FUNCTION_87	IF_1	ELSE_2
0x400b2d2	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400b2d6	            0x89c9	                            mov ecx, ecx	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400b2d8	          0x4809ca	                             or rdx, rcx	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400b2db	        0x48895010	             mov qword [rax + 0x10], rdx	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400b2df	          0x8b4598	             mov eax, dword [rbp - 0x68]	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b2e2	        0x4883c014	                           add rax, 0x14	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b2e6	    0x488b04c50000	                  mov rax, qword [rax*8]	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b2ee	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b2f2	           0xfb6c0	                           movzx eax, al	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b2f5	          0x83e004	                              and eax, 4	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b2f8	            0x85c0	                           test eax, eax	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b2fa	            0x7414	                            je 0x400b310	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b2fc	      0xba00000000	                              mov edx, 0	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b301	      0xbe481a0000	                         mov esi, 0x1a48	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b306	      0xbf00000000	                              mov edi, 0	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b30b	      0xe800000000	                          call 0x400b310	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400b310	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x400b313	        0x4883c006	                              add rax, 6	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x400b317	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x400b31f	          0xc0e802	                               shr al, 2	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x400b322	          0x83e001	                              and eax, 1	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x400b325	            0x84c0	                             test al, al	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x400b327	            0x7514	                           jne 0x400b33d	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x400b329	      0xba00000000	                              mov edx, 0	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x400b32e	      0xbe4b1a0000	                         mov esi, 0x1a4b	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x400b333	      0xbf00000000	                              mov edi, 0	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x400b338	      0xe800000000	                          call 0x400b33d	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x400b33d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6732	tc-i386.c	FUNCTION_87	IF_1
0x400b340	        0x4883c014	                           add rax, 0x14	      6732	tc-i386.c	FUNCTION_87	IF_1
0x400b344	    0x488b04c50000	                  mov rax, qword [rax*8]	      6732	tc-i386.c	FUNCTION_87	IF_1
0x400b34c	    0x488905000000	            mov qword [0x0400b353], rax 	      6732	tc-i386.c	FUNCTION_87	IF_1
0x400b353	            0xeb0d	                           jmp 0x400b362	      6732	tc-i386.c	FUNCTION_87	IF_1
0x400b355	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      6735	tc-i386.c	FUNCTION_87	ELSE_4
0x400b35c	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6735	tc-i386.c	FUNCTION_87	ELSE_4
0x400b35f	          0x894590	             mov dword [rbp - 0x70], eax	      6735	tc-i386.c	FUNCTION_87	ELSE_4
0x400b362	    0x8b0500000000	            mov eax, dword [0x0400b368] 	      6743	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b368	            0x85c0	                           test eax, eax	      6743	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b36a	     0xf855a060000	                           jne 0x400b9ca	      6743	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b370	    0x8b0500000000	            mov eax, dword [0x0400b376] 	      6744	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b376	          0x83f802	                              cmp eax, 2	      6744	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b379	            0x7515	                           jne 0x400b390	      6744	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b37b	     0xfb605000000	           movzx eax, byte [0x0400b382] 	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b382	          0xc0e803	                               shr al, 3	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b385	          0x83e003	                              and eax, 3	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b388	           0xfb6c0	                           movzx eax, al	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b38b	          0x83f801	                              cmp eax, 1	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b38e	            0x7e32	                           jle 0x400b3c2	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b390	    0x8b0500000000	            mov eax, dword [0x0400b396] 	      6746	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b396	          0x83f803	                              cmp eax, 3	      6746	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b399	            0x750e	                           jne 0x400b3a9	      6746	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b39b	     0xfb605000000	           movzx eax, byte [0x0400b3a2] 	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b3a2	          0x83e018	                           and eax, 0x18	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b3a5	            0x3c08	                               cmp al, 8	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b3a7	            0x7419	                            je 0x400b3c2	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b3a9	    0x8b0500000000	            mov eax, dword [0x0400b3af] 	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b3af	          0x83f804	                              cmp eax, 4	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b3b2	     0xf8512060000	                           jne 0x400b9ca	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b3b8	        0x837db800	               cmp dword [rbp - 0x48], 0	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b3bc	     0xf8408060000	                            je 0x400b9ca	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b3c2	    0x8b0500000000	            mov eax, dword [0x0400b3c8] 	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3c8	          0x83f803	                              cmp eax, 3	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3cb	            0x7432	                            je 0x400b3ff	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3cd	          0x83f803	                              cmp eax, 3	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3d0	            0x770a	                            ja 0x400b3dc	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3d2	          0x83f802	                              cmp eax, 2	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3d5	            0x741c	                            je 0x400b3f3	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3d7	      0xe913020000	                           jmp 0x400b5ef	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3dc	          0x83f804	                              cmp eax, 4	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3df	     0xf849a000000	                            je 0x400b47f	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3e5	          0x83f805	                              cmp eax, 5	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3e8	     0xf845d010000	                            je 0x400b54b	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3ee	      0xe9fc010000	                           jmp 0x400b5ef	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3f3	    0xc74590000000	               mov dword [rbp - 0x70], 0	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3fa	      0xe905020000	                           jmp 0x400b604	      6754	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b3ff	    0x8b0500000000	            mov eax, dword [0x0400b405] 	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b405	          0x83f801	                              cmp eax, 1	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b408	            0x743a	                            je 0x400b444	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b40a	    0x8b0500000000	            mov eax, dword [0x0400b410] 	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b410	            0x85c0	                           test eax, eax	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b412	            0x751c	                           jne 0x400b430	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b414	     0xfb605000000	           movzx eax, byte [0x0400b41b] 	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b41b	          0x83e018	                           and eax, 0x18	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b41e	            0x3c08	                               cmp al, 8	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b420	            0x7422	                            je 0x400b444	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b422	     0xfb605000000	           movzx eax, byte [0x0400b429] 	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b429	          0x83e001	                              and eax, 1	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b42c	            0x84c0	                             test al, al	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b42e	            0x7514	                           jne 0x400b444	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b430	      0xba00000000	                              mov edx, 0	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b435	      0xbe6b1a0000	                         mov esi, 0x1a6b	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b43a	      0xbf00000000	                              mov edi, 0	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b43f	      0xe800000000	                          call 0x400b444	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x400b444	      0xbe01000000	                              mov esi, 1	      6764	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6	CALL_11
0x400b449	    0x488b3d000000	            mov rdi, qword [0x0400b450] 	      6764	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6	CALL_11
0x400b450	      0xe8d756ffff	             call sym.operand_type_check	      6764	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6	CALL_11
0x400b455	            0x85c0	                           test eax, eax	      6764	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6	CALL_11
0x400b457	            0x750e	                           jne 0x400b467	      6764	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6	CALL_11
0x400b459	     0xfb605000000	           movzx eax, byte [0x0400b460] 	      6765	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6
0x400b460	          0x83e001	                              and eax, 1	      6765	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6
0x400b463	            0x84c0	                             test al, al	      6765	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6
0x400b465	            0x740c	                            je 0x400b473	      6765	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6
0x400b467	    0xc74590010000	               mov dword [rbp - 0x70], 1	      6766	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6
0x400b46e	      0xe991010000	                           jmp 0x400b604	      6769	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b473	    0xc74590000000	               mov dword [rbp - 0x70], 0	      6768	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_5
0x400b47a	      0xe985010000	                           jmp 0x400b604	      6769	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b47f	    0x8b0500000000	            mov eax, dword [0x0400b485] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b485	          0x83f802	                              cmp eax, 2	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b488	            0x751c	                           jne 0x400b4a6	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b48a	     0xfb605000000	           movzx eax, byte [0x0400b491] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b491	          0x83e004	                              and eax, 4	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b494	            0x84c0	                             test al, al	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b496	            0x740e	                            je 0x400b4a6	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b498	     0xfb605000000	           movzx eax, byte [0x0400b49f] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b49f	          0x83e004	                              and eax, 4	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4a2	            0x84c0	                             test al, al	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4a4	            0x7568	                           jne 0x400b50e	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4a6	     0xfb605000000	           movzx eax, byte [0x0400b4ad] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4ad	          0x83e018	                           and eax, 0x18	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4b0	            0x3c08	                               cmp al, 8	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4b2	            0x7546	                           jne 0x400b4fa	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4b4	    0x8b0500000000	            mov eax, dword [0x0400b4ba] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4ba	          0x83f801	                              cmp eax, 1	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4bd	            0x753b	                           jne 0x400b4fa	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4bf	     0xfb605000000	           movzx eax, byte [0x0400b4c6] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4c6	          0x83e004	                              and eax, 4	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4c9	            0x84c0	                             test al, al	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4cb	            0x7541	                           jne 0x400b50e	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4cd	    0x8b0500000000	            mov eax, dword [0x0400b4d3] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4d3	          0x83e801	                              sub eax, 1	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4d6	            0x89c0	                            mov eax, eax	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4d8	        0x4883c00e	                            add rax, 0xe	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4dc	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4e4	          0xc0e802	                               shr al, 2	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4e7	          0x83e001	                              and eax, 1	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4ea	            0x84c0	                             test al, al	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4ec	            0x7520	                           jne 0x400b50e	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4ee	    0x488b05000000	            mov rax, qword [0x0400b4f5] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4f5	          0x4885c0	                           test rax, rax	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4f8	            0x7514	                           jne 0x400b50e	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4fa	      0xba00000000	                              mov edx, 0	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b4ff	      0xbe811a0000	                         mov esi, 0x1a81	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b504	      0xbf00000000	                              mov edi, 0	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b509	      0xe800000000	                          call 0x400b50e	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400b50e	    0x8b0500000000	            mov eax, dword [0x0400b514] 	      6786	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_7
0x400b514	          0x83f802	                              cmp eax, 2	      6786	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_7
0x400b517	            0x750c	                           jne 0x400b525	      6786	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_7
0x400b519	    0xc74590020000	               mov dword [rbp - 0x70], 2	      6787	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_7
0x400b520	      0xe9df000000	                           jmp 0x400b604	      6795	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7
0x400b525	     0xfb605000000	           movzx eax, byte [0x0400b52c] 	      6790	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_6	IF_8
0x400b52c	          0x83e004	                              and eax, 4	      6790	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_6	IF_8
0x400b52f	            0x84c0	                             test al, al	      6790	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_6	IF_8
0x400b531	            0x740c	                            je 0x400b53f	      6790	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_6	IF_8
0x400b533	    0xc74590010000	               mov dword [rbp - 0x70], 1	      6791	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_6	IF_8
0x400b53a	      0xe9c5000000	                           jmp 0x400b604	      6795	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7
0x400b53f	    0xc74590000000	               mov dword [rbp - 0x70], 0	      6793	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_6	ELSE_7
0x400b546	      0xe9b9000000	                           jmp 0x400b604	      6795	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7
0x400b54b	      0xbf00000000	                              mov edi, 0	      6797	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_13
0x400b550	      0xe80885ffff	               call sym.is_evex_encoding	      6797	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_13
0x400b555	            0x85c0	                           test eax, eax	      6797	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_13
0x400b557	     0xf84a6000000	                            je 0x400b603	      6797	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_13
0x400b55d	    0x8b0500000000	            mov eax, dword [0x0400b563] 	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b563	          0x83f802	                              cmp eax, 2	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b566	            0x7523	                           jne 0x400b58b	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b568	     0xfb605000000	           movzx eax, byte [0x0400b56f] 	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b56f	          0x83e080	                     and eax, 0xffffff80	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b572	            0x84c0	                             test al, al	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b574	            0x7415	                            je 0x400b58b	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b576	      0xbe01000000	                              mov esi, 1	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b57b	    0x488b3d000000	            mov rdi, qword [0x0400b582] 	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b582	      0xe8a555ffff	             call sym.operand_type_check	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b587	            0x85c0	                           test eax, eax	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b589	            0x7514	                           jne 0x400b59f	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b58b	      0xba00000000	                              mov edx, 0	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b590	      0xbe961a0000	                         mov esi, 0x1a96	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b595	      0xbf00000000	                              mov edi, 0	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b59a	      0xe800000000	                          call 0x400b59f	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400b59f	      0xbe01000000	                              mov esi, 1	      6807	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	IF_10	CALL_16
0x400b5a4	    0x488b3d000000	            mov rdi, qword [0x0400b5ab] 	      6807	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	IF_10	CALL_16
0x400b5ab	      0xe87c55ffff	             call sym.operand_type_check	      6807	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	IF_10	CALL_16
0x400b5b0	            0x85c0	                           test eax, eax	      6807	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	IF_10	CALL_16
0x400b5b2	            0x7409	                            je 0x400b5bd	      6807	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	IF_10	CALL_16
0x400b5b4	    0xc74590020000	               mov dword [rbp - 0x70], 2	      6808	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	IF_10
0x400b5bb	            0xeb46	                           jmp 0x400b603	      6814	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b5bd	      0xbe01000000	                              mov esi, 1	      6809	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	ELSE_8	IF_11	CALL_17
0x400b5c2	    0x488b3d000000	            mov rdi, qword [0x0400b5c9] 	      6809	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	ELSE_8	IF_11	CALL_17
0x400b5c9	      0xe85e55ffff	             call sym.operand_type_check	      6809	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	ELSE_8	IF_11	CALL_17
0x400b5ce	            0x85c0	                           test eax, eax	      6809	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	ELSE_8	IF_11	CALL_17
0x400b5d0	            0x7409	                            je 0x400b5db	      6809	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	ELSE_8	IF_11	CALL_17
0x400b5d2	    0xc74590010000	               mov dword [rbp - 0x70], 1	      6810	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	ELSE_8	IF_11
0x400b5d9	            0xeb28	                           jmp 0x400b603	      6814	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b5db	      0xba00000000	                              mov edx, 0	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x400b5e0	      0xbe9c1a0000	                         mov esi, 0x1a9c	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x400b5e5	      0xbf00000000	                              mov edi, 0	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x400b5ea	      0xe800000000	                          call 0x400b5ef	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x400b5ef	      0xba00000000	                              mov edx, 0	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x400b5f4	      0xbea01a0000	                         mov esi, 0x1aa0	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x400b5f9	      0xbf00000000	                              mov edi, 0	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x400b5fe	      0xe800000000	                          call 0x400b603	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x400b603	              0x90	                                     nop	      6814	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x400b604	        0x837db800	               cmp dword [rbp - 0x48], 0	      6819	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12
0x400b608	     0xf851e010000	                           jne 0x400b72c	      6819	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12
0x400b60e	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6821	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12
0x400b611	          0x83c001	                              add eax, 1	      6821	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12
0x400b614	          0x894594	             mov dword [rbp - 0x6c], eax	      6821	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12
0x400b617	    0x488b05000000	            mov rax, qword [0x0400b61e] 	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400b61e	          0x4885c0	                           test rax, rax	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400b621	            0x7415	                            je 0x400b638	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400b623	    0x488b05000000	            mov rax, qword [0x0400b62a] 	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400b62a	          0x8b5004	                mov edx, dword [rax + 4]	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400b62d	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400b630	            0x39c2	                            cmp edx, eax	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400b632	            0x7504	                           jne 0x400b638	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400b634	        0x83459401	               add dword [rbp - 0x6c], 1	      6827	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400b638	     0xfb605000000	           movzx eax, byte [0x0400b63f] 	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b63f	          0x83e018	                           and eax, 0x18	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b642	            0x3c08	                               cmp al, 8	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b644	     0xf85e2000000	                           jne 0x400b72c	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b64a	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b64d	        0x4883c006	                              add rax, 6	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b651	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b659	          0xc0e806	                               shr al, 6	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b65c	          0x83e001	                              and eax, 1	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b65f	            0x84c0	                             test al, al	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b661	            0x7527	                           jne 0x400b68a	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b663	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b666	        0x4883c006	                              add rax, 6	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b66a	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b672	          0xc0e806	                               shr al, 6	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b675	          0x83e001	                              and eax, 1	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b678	            0x84c0	                             test al, al	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b67a	            0x740e	                            je 0x400b68a	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b67c	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6844	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b67f	          0x8945a0	             mov dword [rbp - 0x60], eax	      6844	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b682	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6845	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b685	          0x894590	             mov dword [rbp - 0x70], eax	      6845	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b688	            0xeb06	                           jmp 0x400b690	      6845	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x400b68a	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6848	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	ELSE_10
0x400b68d	          0x8945a0	             mov dword [rbp - 0x60], eax	      6848	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	ELSE_10
0x400b690	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      6850	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b693	        0x4883c006	                              add rax, 6	      6850	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b697	    0x488b04c50000	                  mov rax, qword [rax*8]	      6850	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b69f	        0x488945e0	             mov qword [rbp - 0x20], rax	      6850	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b6a3	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      6851	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b6a7	          0x83e0f7	                     and eax, 0xfffffff7	      6851	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b6aa	          0x8845e3	               mov byte [rbp - 0x1d], al	      6851	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b6ad	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6852	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6b0	          0x8d5001	                      lea edx, [rax + 1]	      6852	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6b3	    0x8b0500000000	            mov eax, dword [0x0400b6b9] 	      6852	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6b9	            0x39c2	                            cmp edx, eax	      6852	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6bb	            0x7341	                           jae 0x400b6fe	      6852	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6bd	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      6853	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6c1	          0x83e001	                              and eax, 1	      6853	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6c4	            0x84c0	                             test al, al	      6853	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6c6	            0x7416	                            je 0x400b6de	      6853	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6c8	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6cc	          0x83e080	                     and eax, 0xffffff80	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6cf	            0x84c0	                             test al, al	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6d1	            0x753f	                           jne 0x400b712	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6d3	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6d7	          0x83e002	                              and eax, 2	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6da	            0x84c0	                             test al, al	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6dc	            0x7534	                           jne 0x400b712	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6de	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      6855	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6e2	          0x83e004	                              and eax, 4	      6855	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6e5	            0x84c0	                             test al, al	      6855	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6e7	            0x7529	                           jne 0x400b712	      6855	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400b6e9	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6856	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16	CALL_20
0x400b6ed	      0xbe00000000	                              mov esi, 0	      6856	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16	CALL_20
0x400b6f2	          0x4889c7	                            mov rdi, rax	      6856	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16	CALL_20
0x400b6f5	      0xe8294effff	             call sym.operand_type_equal	      6856	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16	CALL_20
0x400b6fa	            0x85c0	                           test eax, eax	      6856	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16	CALL_20
0x400b6fc	            0x7514	                           jne 0x400b712	      6856	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16	CALL_20
0x400b6fe	      0xba00000000	                              mov edx, 0	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x400b703	      0xbec91a0000	                         mov esi, 0x1ac9	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x400b708	      0xbf00000000	                              mov edi, 0	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x400b70d	      0xe800000000	                          call 0x400b712	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x400b712	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      6858	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b715	        0x4883c014	                           add rax, 0x14	      6858	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b719	    0x488b04c50000	                  mov rax, qword [rax*8]	      6858	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b721	    0x488905000000	            mov qword [0x0400b728], rax 	      6858	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b728	        0x83459401	               add dword [rbp - 0x6c], 1	      6859	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400b72c	    0xc70500000000	               mov dword [0x0400b736], 3	      6863	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400b736	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b739	        0x4883c006	                              add rax, 6	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b73d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b745	          0xc0e803	                               shr al, 3	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b748	          0x83e001	                              and eax, 1	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b74b	            0x84c0	                             test al, al	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b74d	     0xf8515010000	                           jne 0x400b868	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b753	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x400b756	        0x4883c006	                              add rax, 6	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x400b75a	    0x488b04c50000	                  mov rax, qword [rax*8]	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x400b762	      0xbe03000000	                              mov esi, 3	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x400b767	          0x4889c7	                            mov rdi, rax	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x400b76a	      0xe8bd53ffff	             call sym.operand_type_check	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x400b76f	            0x85c0	                           test eax, eax	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x400b771	     0xf85f1000000	                           jne 0x400b868	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x400b777	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b77a	        0x4883c014	                           add rax, 0x14	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b77e	    0x488b04c50000	                  mov rax, qword [rax*8]	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b786	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b78a	           0xfb6c0	                           movzx eax, al	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b78d	    0x890500000000	            mov dword [0x0400b793], eax 	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b793	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b796	        0x4883c014	                           add rax, 0x14	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b79a	    0x488b04c50000	                  mov rax, qword [rax*8]	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b7a2	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b7a6	           0xfb6c0	                           movzx eax, al	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b7a9	    0x890500000000	            mov dword [0x0400b7af], eax 	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400b7af	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x400b7b2	        0x4883c014	                           add rax, 0x14	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x400b7b6	    0x488b04c50000	                  mov rax, qword [rax*8]	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x400b7be	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x400b7c2	           0xfb6c0	                           movzx eax, al	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x400b7c5	          0x83e001	                              and eax, 1	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x400b7c8	            0x85c0	                           test eax, eax	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x400b7ca	            0x740f	                            je 0x400b7db	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x400b7cc	    0x8b0500000000	            mov eax, dword [0x0400b7d2] 	      6876	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x400b7d2	          0x83c804	                               or eax, 4	      6876	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x400b7d5	    0x890500000000	            mov dword [0x0400b7db], eax 	      6876	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x400b7db	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x400b7de	        0x4883c014	                           add rax, 0x14	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x400b7e2	    0x488b04c50000	                  mov rax, qword [rax*8]	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x400b7ea	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x400b7ee	           0xfb6c0	                           movzx eax, al	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x400b7f1	          0x83e004	                              and eax, 4	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x400b7f4	            0x85c0	                           test eax, eax	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x400b7f6	            0x740f	                            je 0x400b807	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x400b7f8	    0x8b0500000000	            mov eax, dword [0x0400b7fe] 	      6878	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x400b7fe	          0x83c804	                               or eax, 4	      6878	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x400b801	    0x890500000000	            mov dword [0x0400b807], eax 	      6878	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x400b807	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x400b80a	        0x4883c014	                           add rax, 0x14	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x400b80e	    0x488b04c50000	                  mov rax, qword [rax*8]	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x400b816	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x400b81a	           0xfb6c0	                           movzx eax, al	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x400b81d	          0x83e001	                              and eax, 1	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x400b820	            0x85c0	                           test eax, eax	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x400b822	            0x740f	                            je 0x400b833	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x400b824	    0x8b0500000000	            mov eax, dword [0x0400b82a] 	      6880	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x400b82a	          0x83c801	                               or eax, 1	      6880	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x400b82d	    0x890500000000	            mov dword [0x0400b833], eax 	      6880	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x400b833	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b836	        0x4883c014	                           add rax, 0x14	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b83a	    0x488b04c50000	                  mov rax, qword [rax*8]	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b842	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b846	           0xfb6c0	                           movzx eax, al	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b849	          0x83e004	                              and eax, 4	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b84c	            0x85c0	                           test eax, eax	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b84e	     0xf84fc000000	                            je 0x400b950	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b854	    0x8b0500000000	            mov eax, dword [0x0400b85a] 	      6882	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b85a	          0x83c801	                               or eax, 1	      6882	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b85d	    0x890500000000	            mov dword [0x0400b863], eax 	      6882	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b863	      0xe9e8000000	                           jmp 0x400b950	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x400b868	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b86b	        0x4883c014	                           add rax, 0x14	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b86f	    0x488b04c50000	                  mov rax, qword [rax*8]	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b877	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b87b	           0xfb6c0	                           movzx eax, al	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b87e	    0x890500000000	            mov dword [0x0400b884], eax 	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b884	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b887	        0x4883c014	                           add rax, 0x14	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b88b	    0x488b04c50000	                  mov rax, qword [rax*8]	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b893	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b897	           0xfb6c0	                           movzx eax, al	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b89a	    0x890500000000	            mov dword [0x0400b8a0], eax 	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400b8a0	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400b8a3	        0x4883c014	                           add rax, 0x14	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400b8a7	    0x488b04c50000	                  mov rax, qword [rax*8]	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400b8af	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400b8b3	           0xfb6c0	                           movzx eax, al	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400b8b6	          0x83e001	                              and eax, 1	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400b8b9	            0x85c0	                           test eax, eax	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400b8bb	            0x740f	                            je 0x400b8cc	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400b8bd	    0x8b0500000000	            mov eax, dword [0x0400b8c3] 	      6889	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400b8c3	          0x83c801	                               or eax, 1	      6889	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400b8c6	    0x890500000000	            mov dword [0x0400b8cc], eax 	      6889	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400b8cc	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x400b8cf	        0x4883c014	                           add rax, 0x14	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x400b8d3	    0x488b04c50000	                  mov rax, qword [rax*8]	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x400b8db	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x400b8df	           0xfb6c0	                           movzx eax, al	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x400b8e2	          0x83e004	                              and eax, 4	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x400b8e5	            0x85c0	                           test eax, eax	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x400b8e7	            0x740f	                            je 0x400b8f8	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x400b8e9	    0x8b0500000000	            mov eax, dword [0x0400b8ef] 	      6891	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x400b8ef	          0x83c801	                               or eax, 1	      6891	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x400b8f2	    0x890500000000	            mov dword [0x0400b8f8], eax 	      6891	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x400b8f8	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400b8fb	        0x4883c014	                           add rax, 0x14	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400b8ff	    0x488b04c50000	                  mov rax, qword [rax*8]	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400b907	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400b90b	           0xfb6c0	                           movzx eax, al	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400b90e	          0x83e001	                              and eax, 1	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400b911	            0x85c0	                           test eax, eax	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400b913	            0x740f	                            je 0x400b924	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400b915	    0x8b0500000000	            mov eax, dword [0x0400b91b] 	      6893	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400b91b	          0x83c804	                               or eax, 4	      6893	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400b91e	    0x890500000000	            mov dword [0x0400b924], eax 	      6893	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400b924	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400b927	        0x4883c014	                           add rax, 0x14	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400b92b	    0x488b04c50000	                  mov rax, qword [rax*8]	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400b933	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400b937	           0xfb6c0	                           movzx eax, al	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400b93a	          0x83e004	                              and eax, 4	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400b93d	            0x85c0	                           test eax, eax	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400b93f	            0x740f	                            je 0x400b950	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400b941	    0x8b0500000000	            mov eax, dword [0x0400b947] 	      6895	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400b947	          0x83c804	                               or eax, 4	      6895	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400b94a	    0x890500000000	            mov dword [0x0400b950], eax 	      6895	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400b950	    0x8b0500000000	            mov eax, dword [0x0400b956] 	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400b956	          0x83f802	                              cmp eax, 2	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400b959	     0xf849f110000	                            je 0x400cafe	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400b95f	    0x8b0500000000	            mov eax, dword [0x0400b965] 	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400b965	          0x83e004	                              and eax, 4	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400b968	            0x85c0	                           test eax, eax	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400b96a	     0xf848e110000	                            je 0x400cafe	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400b970	     0xfb605000000	           movzx eax, byte [0x0400b977] 	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400b977	          0xc0e803	                               shr al, 3	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400b97a	          0x83e001	                              and eax, 1	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400b97d	           0xfb6c0	                           movzx eax, al	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400b980	            0x4898	                                    cdqe	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400b982	        0x4883c00e	                            add rax, 0xe	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400b986	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400b98e	          0xc0e804	                               shr al, 4	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400b991	          0x83e001	                              and eax, 1	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400b994	            0x84c0	                             test al, al	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400b996	            0x7514	                           jne 0x400b9ac	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400b998	      0xba00000000	                              mov edx, 0	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x400b99d	      0xbef41a0000	                         mov esi, 0x1af4	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x400b9a2	      0xbf00000000	                              mov edi, 0	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x400b9a7	      0xe800000000	                          call 0x400b9ac	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x400b9ac	    0x8b0500000000	            mov eax, dword [0x0400b9b2] 	      6901	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400b9b2	          0x83e0fb	                     and eax, 0xfffffffb	      6901	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400b9b5	    0x890500000000	            mov dword [0x0400b9bb], eax 	      6901	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400b9bb	      0xbff0000000	                           mov edi, 0xf0	      6902	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_24
0x400b9c0	      0xe81c61ffff	                     call sym.add_prefix	      6902	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_24
0x400b9c5	      0xe934110000	                           jmp 0x400cafe	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400b9ca	    0x8b0500000000	            mov eax, dword [0x0400b9d0] 	      6909	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400b9d0	            0x85c0	                           test eax, eax	      6909	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400b9d2	     0xf84d30a0000	                            je 0x400c4ab	      6909	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400b9d8	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400b9df	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x400b9e6	            0xeb24	                           jmp 0x400ba0c	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x400b9e8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x400b9eb	        0x4883c00e	                            add rax, 0xe	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x400b9ef	    0x488b04c50000	                  mov rax, qword [rax*8]	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x400b9f7	      0xbe03000000	                              mov esi, 3	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x400b9fc	          0x4889c7	                            mov rdi, rax	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x400b9ff	      0xe82851ffff	             call sym.operand_type_check	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x400ba04	            0x85c0	                           test eax, eax	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x400ba06	            0x7511	                           jne 0x400ba19	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x400ba08	        0x8345ac01	               add dword [rbp - 0x54], 1	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x400ba0c	    0x8b0500000000	            mov eax, dword [0x0400ba12] 	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x400ba12	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x400ba15	            0x77d1	                            ja 0x400b9e8	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x400ba17	            0xeb01	                           jmp 0x400ba1a	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x400ba19	              0x90	                                     nop	      6916	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29
0x400ba1a	    0x8b0500000000	            mov eax, dword [0x0400ba20] 	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x400ba20	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x400ba23	            0x7714	                            ja 0x400ba39	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x400ba25	      0xba00000000	                              mov edx, 0	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x400ba2a	      0xbe051b0000	                         mov esi, 0x1b05	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x400ba2f	      0xbf00000000	                              mov edi, 0	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x400ba34	      0xe800000000	                          call 0x400ba39	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x400ba39	     0xfb605000000	           movzx eax, byte [0x0400ba40] 	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x400ba40	          0x83e030	                           and eax, 0x30	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x400ba43	            0x84c0	                             test al, al	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x400ba45	     0xf8485010000	                            je 0x400bbd0	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x400ba4b	    0x488b05000000	            mov rax, qword [0x0400ba52] 	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x400ba52	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x400ba56	            0x3cfd	                            cmp al, 0xfd	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x400ba58	            0x740f	                            je 0x400ba69	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x400ba5a	    0x488b05000000	            mov rax, qword [0x0400ba61] 	      6922	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x400ba61	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6922	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x400ba65	            0x3cfc	                            cmp al, 0xfc	      6922	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x400ba67	            0x7514	                           jne 0x400ba7d	      6922	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x400ba69	      0xba00000000	                              mov edx, 0	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x400ba6e	      0xbe0b1b0000	                         mov esi, 0x1b0b	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x400ba73	      0xbf00000000	                              mov edi, 0	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x400ba78	      0xe800000000	                          call 0x400ba7d	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x400ba7d	    0xc70500000000	               mov dword [0x0400ba87], 4	      6925	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x400ba87	    0x488b05000000	            mov rax, qword [0x0400ba8e] 	      6926	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400ba8e	          0x4885c0	                           test rax, rax	      6926	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400ba91	     0xf85dd000000	                           jne 0x400bb74	      6926	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400ba97	    0xc70500000000	               mov dword [0x0400baa1], 5	      6928	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400baa1	    0x8b0500000000	            mov eax, dword [0x0400baa7] 	      6929	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400baa7	    0x890500000000	            mov dword [0x0400baad], eax 	      6929	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400baad	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6930	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400bab0	        0x4883c00e	                            add rax, 0xe	      6930	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400bab4	     0xfb614c50000	                 movzx edx, byte [rax*8]	      6930	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400babc	          0x83e2fe	                     and edx, 0xfffffffe	      6930	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400babf	    0x8814c5000000	                    mov byte [rax*8], dl	      6930	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400bac6	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6931	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400bac9	        0x4883c00e	                            add rax, 0xe	      6931	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400bacd	     0xfb614c50000	                 movzx edx, byte [rax*8]	      6931	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400bad5	          0x83e2fd	                     and edx, 0xfffffffd	      6931	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400bad8	    0x8814c5000000	                    mov byte [rax*8], dl	      6931	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400badf	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6932	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400bae2	        0x4883c00e	                            add rax, 0xe	      6932	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400bae6	     0xfb614c50000	                 movzx edx, byte [rax*8]	      6932	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400baee	          0x83e2ef	                     and edx, 0xffffffef	      6932	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400baf1	    0x8814c5000000	                    mov byte [rax*8], dl	      6932	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400baf8	    0x8b0500000000	            mov eax, dword [0x0400bafe] 	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bafe	          0x83f802	                              cmp eax, 2	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb01	            0x750b	                           jne 0x400bb0e	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb03	     0xfb605000000	           movzx eax, byte [0x0400bb0a] 	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb0a	            0x84c0	                             test al, al	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb0c	            0x7434	                            je 0x400bb42	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb0e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb11	        0x4883c00e	                            add rax, 0xe	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb15	     0xfb614c50000	                 movzx edx, byte [rax*8]	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb1d	          0x83ca04	                               or edx, 4	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb20	    0x8814c5000000	                    mov byte [rax*8], dl	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb27	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb2a	        0x4883c00e	                            add rax, 0xe	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb2e	     0xfb614c50000	                 movzx edx, byte [rax*8]	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb36	          0x83e2f7	                     and edx, 0xfffffff7	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb39	    0x8814c5000000	                    mov byte [rax*8], dl	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb40	            0xeb32	                           jmp 0x400bb74	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400bb42	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6941	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x400bb45	        0x4883c00e	                            add rax, 0xe	      6941	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x400bb49	     0xfb614c50000	                 movzx edx, byte [rax*8]	      6941	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x400bb51	          0x83e2fb	                     and edx, 0xfffffffb	      6941	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x400bb54	    0x8814c5000000	                    mov byte [rax*8], dl	      6941	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x400bb5b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6942	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x400bb5e	        0x4883c00e	                            add rax, 0xe	      6942	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x400bb62	     0xfb614c50000	                 movzx edx, byte [rax*8]	      6942	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x400bb6a	          0x83ca08	                               or edx, 8	      6942	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x400bb6d	    0x8814c5000000	                    mov byte [rax*8], dl	      6942	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x400bb74	    0x488b05000000	            mov rax, qword [0x0400bb7b] 	      6945	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x400bb7b	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6945	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x400bb7f	           0xfb6c0	                           movzx eax, al	      6945	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x400bb82	    0x890500000000	            mov dword [0x0400bb88], eax 	      6945	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x400bb88	    0x488b05000000	            mov rax, qword [0x0400bb8f] 	      6946	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x400bb8f	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6946	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x400bb93	           0xfb6c0	                           movzx eax, al	      6946	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x400bb96	          0x83e001	                              and eax, 1	      6946	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x400bb99	            0x85c0	                           test eax, eax	      6946	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x400bb9b	            0x740f	                            je 0x400bbac	      6946	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x400bb9d	    0x8b0500000000	            mov eax, dword [0x0400bba3] 	      6947	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x400bba3	          0x83c802	                               or eax, 2	      6947	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x400bba6	    0x890500000000	            mov dword [0x0400bbac], eax 	      6947	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x400bbac	    0x488b05000000	            mov rax, qword [0x0400bbb3] 	      6948	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x400bbb3	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6948	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x400bbb7	           0xfb6c0	                           movzx eax, al	      6948	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x400bbba	          0x83e004	                              and eax, 4	      6948	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x400bbbd	            0x85c0	                           test eax, eax	      6948	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x400bbbf	            0x740f	                            je 0x400bbd0	      6948	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x400bbc1	    0x8b0500000000	            mov eax, dword [0x0400bbc7] 	      6949	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x400bbc7	          0x83c802	                               or eax, 2	      6949	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x400bbca	    0x890500000000	            mov dword [0x0400bbd0], eax 	      6949	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x400bbd0	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400bbd8	    0x488b05000000	            mov rax, qword [0x0400bbdf] 	      6954	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36
0x400bbdf	          0x4885c0	                           test rax, rax	      6954	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36
0x400bbe2	     0xf85c4020000	                           jne 0x400beac	      6954	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36
0x400bbe8	    0xc70500000000	               mov dword [0x0400bbf2], 0	      6956	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36
0x400bbf2	    0x8b0500000000	            mov eax, dword [0x0400bbf8] 	      6957	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_37
0x400bbf8	            0x85c0	                           test eax, eax	      6957	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_37
0x400bbfa	            0x7507	                           jne 0x400bc03	      6957	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_37
0x400bbfc	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      6958	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_37
0x400bc03	    0x488b05000000	            mov rax, qword [0x0400bc0a] 	      6959	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38
0x400bc0a	          0x4885c0	                           test rax, rax	      6959	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38
0x400bc0d	     0xf8535010000	                           jne 0x400bd48	      6959	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38
0x400bc13	     0xfb605000000	           movzx eax, byte [0x0400bc1a] 	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x400bc1a	          0x83e030	                           and eax, 0x30	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x400bc1d	            0x84c0	                             test al, al	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x400bc1f	            0x7414	                            je 0x400bc35	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x400bc21	      0xba00000000	                              mov edx, 0	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x400bc26	      0xbe331b0000	                         mov esi, 0x1b33	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x400bc2b	      0xbf00000000	                              mov edi, 0	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x400bc30	      0xe800000000	                          call 0x400bc35	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x400bc35	    0x8b0500000000	            mov eax, dword [0x0400bc3b] 	      6965	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc3b	          0x83f802	                              cmp eax, 2	      6965	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc3e	            0x7551	                           jne 0x400bc91	      6965	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc40	    0xc70500000000	               mov dword [0x0400bc4a], 4	      6971	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc4a	    0xc70500000000	               mov dword [0x0400bc54], 5	      6972	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc54	    0xc70500000000	               mov dword [0x0400bc5e], 4	      6973	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc5e	     0xfb605000000	           movzx eax, byte [0x0400bc65] 	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc65	            0x84c0	                             test al, al	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc67	            0x7514	                           jne 0x400bc7d	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc69	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc71	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc75	          0x83c808	                               or eax, 8	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc78	          0x8845e2	               mov byte [rbp - 0x1e], al	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc7b	            0xeb6c	                           jmp 0x400bce9	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc7d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc85	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc89	          0x83c804	                               or eax, 4	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc8c	          0x8845e2	               mov byte [rbp - 0x1e], al	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc8f	            0xeb58	                           jmp 0x400bce9	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400bc91	    0x8b0500000000	            mov eax, dword [0x0400bc97] 	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bc97	          0x83f801	                              cmp eax, 1	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bc9a	           0xf94c2	                                 sete dl	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bc9d	     0xfb605000000	           movzx eax, byte [0x0400bca4] 	      6977	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bca4	            0x84c0	                             test al, al	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bca6	           0xf95c0	                                setne al	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bca9	            0x31d0	                            xor eax, edx	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bcab	            0x84c0	                             test al, al	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bcad	            0x741e	                            je 0x400bccd	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bcaf	    0xc70500000000	               mov dword [0x0400bcb9], 6	      6979	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bcb9	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bcc1	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bcc5	          0x83c802	                               or eax, 2	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bcc8	          0x8845e2	               mov byte [rbp - 0x1e], al	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bccb	            0xeb1c	                           jmp 0x400bce9	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400bccd	    0xc70500000000	               mov dword [0x0400bcd7], 5	      6984	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x400bcd7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x400bcdf	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x400bce3	          0x83c804	                               or eax, 4	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x400bce6	          0x8845e2	               mov byte [rbp - 0x1e], al	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x400bce9	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x400bcec	        0x488d580e	                    lea rbx, [rax + 0xe]	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x400bcf0	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x400bcf3	        0x4883c00e	                            add rax, 0xe	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x400bcf7	    0x488b04c50000	                  mov rax, qword [rax*8]	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x400bcff	    0x488b35000000	            mov rsi, qword [0x0400bd06] 	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x400bd06	          0x4889c7	                            mov rdi, rax	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x400bd09	      0xe82a4dffff	           call sym.operand_type_and_not	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x400bd0e	    0x488904dd0000	                  mov qword [rbx*8], rax	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x400bd16	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400bd19	        0x488d580e	                    lea rbx, [rax + 0xe]	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400bd1d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400bd21	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400bd24	        0x4883c00e	                            add rax, 0xe	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400bd28	    0x488b04c50000	                  mov rax, qword [rax*8]	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400bd30	          0x4889d6	                            mov rsi, rdx	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400bd33	          0x4889c7	                            mov rdi, rax	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400bd36	      0xe8514dffff	                call sym.operand_type_or	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400bd3b	    0x488904dd0000	                  mov qword [rbx*8], rax	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400bd43	      0xe9cc060000	                           jmp 0x400c414	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400bd48	     0xfb605000000	           movzx eax, byte [0x0400bd4f] 	      6990	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41
0x400bd4f	          0x83e030	                           and eax, 0x30	      6990	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41
0x400bd52	            0x84c0	                             test al, al	      6990	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41
0x400bd54	     0xf85ba060000	                           jne 0x400c414	      6990	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41
0x400bd5a	    0x488b05000000	            mov rax, qword [0x0400bd61] 	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400bd61	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400bd65	            0x3cfd	                            cmp al, 0xfd	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400bd67	            0x740f	                            je 0x400bd78	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400bd69	    0x488b05000000	            mov rax, qword [0x0400bd70] 	      6994	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400bd70	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6994	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400bd74	            0x3cfc	                            cmp al, 0xfc	      6994	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400bd76	            0x750c	                           jne 0x400bd84	      6994	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400bd78	    0xc70500000000	               mov dword [0x0400bd82], 4	      6995	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400bd82	            0xeb14	                           jmp 0x400bd98	      6995	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400bd84	    0x488b05000000	            mov rax, qword [0x0400bd8b] 	      6997	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bd8b	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6997	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bd8f	           0xfb6c0	                           movzx eax, al	      6997	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bd92	    0x890500000000	            mov dword [0x0400bd98], eax 	      6997	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bd98	    0xc70500000000	               mov dword [0x0400bda2], 5	      6998	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bda2	    0x8b0500000000	            mov eax, dword [0x0400bda8] 	      6999	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bda8	    0x890500000000	            mov dword [0x0400bdae], eax 	      6999	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdae	    0xc70500000000	               mov dword [0x0400bdb8], 4	      7000	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdb8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7001	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdbb	        0x4883c00e	                            add rax, 0xe	      7001	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdbf	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7001	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdc7	          0x83e2fe	                     and edx, 0xfffffffe	      7001	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdca	    0x8814c5000000	                    mov byte [rax*8], dl	      7001	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdd1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7002	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdd4	        0x4883c00e	                            add rax, 0xe	      7002	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdd8	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7002	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bde0	          0x83e2fd	                     and edx, 0xfffffffd	      7002	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bde3	    0x8814c5000000	                    mov byte [rax*8], dl	      7002	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdea	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7003	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bded	        0x4883c00e	                            add rax, 0xe	      7003	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdf1	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7003	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdf9	          0x83e2ef	                     and edx, 0xffffffef	      7003	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400bdfc	    0x8814c5000000	                    mov byte [rax*8], dl	      7003	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400be03	    0x8b0500000000	            mov eax, dword [0x0400be09] 	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be09	          0x83f802	                              cmp eax, 2	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be0c	            0x750b	                           jne 0x400be19	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be0e	     0xfb605000000	           movzx eax, byte [0x0400be15] 	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be15	            0x84c0	                             test al, al	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be17	            0x7434	                            je 0x400be4d	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be19	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be1c	        0x4883c00e	                            add rax, 0xe	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be20	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be28	          0x83ca04	                               or edx, 4	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be2b	    0x8814c5000000	                    mov byte [rax*8], dl	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be32	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7008	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be35	        0x4883c00e	                            add rax, 0xe	      7008	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be39	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7008	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be41	          0x83e2f7	                     and edx, 0xfffffff7	      7008	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be44	    0x8814c5000000	                    mov byte [rax*8], dl	      7008	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be4b	            0xeb32	                           jmp 0x400be7f	      7008	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400be4d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7012	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x400be50	        0x4883c00e	                            add rax, 0xe	      7012	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x400be54	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7012	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x400be5c	          0x83e2fb	                     and edx, 0xfffffffb	      7012	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x400be5f	    0x8814c5000000	                    mov byte [rax*8], dl	      7012	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x400be66	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7013	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x400be69	        0x4883c00e	                            add rax, 0xe	      7013	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x400be6d	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7013	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x400be75	          0x83ca08	                               or edx, 8	      7013	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x400be78	    0x8814c5000000	                    mov byte [rax*8], dl	      7013	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x400be7f	    0x488b05000000	            mov rax, qword [0x0400be86] 	      7015	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x400be86	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7015	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x400be8a	           0xfb6c0	                           movzx eax, al	      7015	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x400be8d	          0x83e001	                              and eax, 1	      7015	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x400be90	            0x85c0	                           test eax, eax	      7015	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x400be92	     0xf847c050000	                            je 0x400c414	      7015	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x400be98	    0x8b0500000000	            mov eax, dword [0x0400be9e] 	      7016	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x400be9e	          0x83c802	                               or eax, 2	      7016	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x400bea1	    0x890500000000	            mov dword [0x0400bea7], eax 	      7016	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x400bea7	      0xe968050000	                           jmp 0x400c414	      7016	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x400beac	    0x488b05000000	            mov rax, qword [0x0400beb3] 	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400beb3	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400beb7	            0x3cff	                            cmp al, 0xff	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400beb9	            0x7413	                            je 0x400bece	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bebb	    0x488b05000000	            mov rax, qword [0x0400bec2] 	      7021	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bec2	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7021	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bec6	            0x3cfe	                            cmp al, 0xfe	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bec8	     0xf85e4000000	                           jne 0x400bfb2	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bece	     0xfb605000000	           movzx eax, byte [0x0400bed5] 	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x400bed5	          0x83e030	                           and eax, 0x30	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x400bed8	            0x84c0	                             test al, al	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x400beda	            0x7414	                            je 0x400bef0	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x400bedc	      0xba00000000	                              mov edx, 0	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x400bee1	      0xbe6f1b0000	                         mov esi, 0x1b6f	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x400bee6	      0xbf00000000	                              mov edi, 0	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x400beeb	      0xe800000000	                          call 0x400bef0	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x400bef0	    0xc70500000000	               mov dword [0x0400befa], 5	      7024	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400befa	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7025	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400befd	        0x4883c00e	                            add rax, 0xe	      7025	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf01	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7025	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf09	          0x83e2fe	                     and edx, 0xfffffffe	      7025	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf0c	    0x8814c5000000	                    mov byte [rax*8], dl	      7025	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf13	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7026	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf16	        0x4883c00e	                            add rax, 0xe	      7026	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf1a	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7026	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf22	          0x83e2fd	                     and edx, 0xfffffffd	      7026	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf25	    0x8814c5000000	                    mov byte [rax*8], dl	      7026	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf2c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7027	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf2f	        0x4883c00e	                            add rax, 0xe	      7027	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf33	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7027	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf3b	          0x83e2fb	                     and edx, 0xfffffffb	      7027	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf3e	    0x8814c5000000	                    mov byte [rax*8], dl	      7027	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf45	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7028	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf48	        0x4883c00e	                            add rax, 0xe	      7028	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf4c	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7028	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf54	          0x83ca08	                               or edx, 8	      7028	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf57	    0x8814c5000000	                    mov byte [rax*8], dl	      7028	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf5e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7029	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf61	        0x4883c00e	                            add rax, 0xe	      7029	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf65	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7029	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf6d	          0x83e2ef	                     and edx, 0xffffffef	      7029	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf70	    0x8814c5000000	                    mov byte [rax*8], dl	      7029	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf77	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf7a	        0x4883c030	                           add rax, 0x30	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf7e	    0x8b0485000000	                  mov eax, dword [rax*4]	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf85	          0x83c801	                               or eax, 1	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf88	            0x89c2	                            mov edx, eax	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf8a	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf8d	        0x4883c030	                           add rax, 0x30	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf91	    0x891485000000	                  mov dword [rax*4], edx	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400bf98	    0x8b0500000000	            mov eax, dword [0x0400bf9e] 	      7031	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	IF_46
0x400bf9e	            0x85c0	                           test eax, eax	      7031	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	IF_46
0x400bfa0	     0xf856e040000	                           jne 0x400c414	      7031	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	IF_46
0x400bfa6	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      7032	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	IF_46
0x400bfad	      0xe962040000	                           jmp 0x400c414	      7031	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	IF_46
0x400bfb2	    0x488b05000000	            mov rax, qword [0x0400bfb9] 	      7034	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47
0x400bfb9	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      7034	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47
0x400bfbd	          0x83e040	                           and eax, 0x40	      7034	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47
0x400bfc0	            0x84c0	                             test al, al	      7034	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47
0x400bfc2	     0xf842b010000	                            je 0x400c0f3	      7034	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47
0x400bfc8	     0xfb605000000	           movzx eax, byte [0x0400bfcf] 	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x400bfcf	          0x83e030	                           and eax, 0x30	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x400bfd2	            0x84c0	                             test al, al	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x400bfd4	            0x7414	                            je 0x400bfea	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x400bfd6	      0xba00000000	                              mov edx, 0	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x400bfdb	      0xbe7c1b0000	                         mov esi, 0x1b7c	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x400bfe0	      0xbf00000000	                              mov edi, 0	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x400bfe5	      0xe800000000	                          call 0x400bfea	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x400bfea	    0x488b05000000	            mov rax, qword [0x0400bff1] 	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400bff1	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400bff5	           0xfb6c0	                           movzx eax, al	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400bff8	          0x83f803	                              cmp eax, 3	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400bffb	            0x740a	                            je 0x400c007	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400bffd	          0x83f805	                              cmp eax, 5	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c000	            0x743c	                            je 0x400c03e	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c002	      0xe9b0000000	                           jmp 0x400c0b7	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c007	    0x488b05000000	            mov rax, qword [0x0400c00e] 	      7040	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x400c00e	          0x4885c0	                           test rax, rax	      7040	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x400c011	            0x750f	                           jne 0x400c022	      7040	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x400c013	    0xc70500000000	               mov dword [0x0400c01d], 7	      7041	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x400c01d	      0xe9af000000	                           jmp 0x400c0d1	      7044	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400c022	    0x488b05000000	            mov rax, qword [0x0400c029] 	      7043	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400c029	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7043	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400c02d	           0xfb6c0	                           movzx eax, al	      7043	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400c030	          0x83e806	                              sub eax, 6	      7043	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400c033	    0x890500000000	            mov dword [0x0400c039], eax 	      7043	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400c039	      0xe993000000	                           jmp 0x400c0d1	      7044	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400c03e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400c046	    0x488b05000000	            mov rax, qword [0x0400c04d] 	      7047	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x400c04d	          0x4885c0	                           test rax, rax	      7047	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x400c050	            0x754c	                           jne 0x400c09e	      7047	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x400c052	    0xc70500000000	               mov dword [0x0400c05c], 6	      7049	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x400c05c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x400c05f	        0x4883c00e	                            add rax, 0xe	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x400c063	    0x488b04c50000	                  mov rax, qword [rax*8]	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x400c06b	      0xbe02000000	                              mov esi, 2	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x400c070	          0x4889c7	                            mov rdi, rax	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x400c073	      0xe8b44affff	             call sym.operand_type_check	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x400c078	            0x85c0	                           test eax, eax	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x400c07a	            0x7554	                           jne 0x400c0d0	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x400c07c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7053	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50
0x400c07f	        0x4883c00e	                            add rax, 0xe	      7053	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50
0x400c083	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7053	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50
0x400c08b	          0x83ca01	                               or edx, 1	      7053	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50
0x400c08e	    0x8814c5000000	                    mov byte [rax*8], dl	      7053	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50
0x400c095	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      7054	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50
0x400c09c	            0xeb32	                           jmp 0x400c0d0	      7059	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c09e	    0x488b05000000	            mov rax, qword [0x0400c0a5] 	      7058	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_22
0x400c0a5	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7058	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_22
0x400c0a9	           0xfb6c0	                           movzx eax, al	      7058	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_22
0x400c0ac	          0x83e804	                              sub eax, 4	      7058	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_22
0x400c0af	    0x890500000000	            mov dword [0x0400c0b5], eax 	      7058	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_22
0x400c0b5	            0xeb19	                           jmp 0x400c0d0	      7059	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c0b7	    0x488b05000000	            mov rax, qword [0x0400c0be] 	      7061	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c0be	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7061	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c0c2	           0xfb6c0	                           movzx eax, al	      7061	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c0c5	          0x83e802	                              sub eax, 2	      7061	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c0c8	    0x890500000000	            mov dword [0x0400c0ce], eax 	      7061	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c0ce	            0xeb01	                           jmp 0x400c0d1	      7061	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c0d0	              0x90	                                     nop	      7059	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400c0d1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7063	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_34
0x400c0d4	        0x4883c00e	                            add rax, 0xe	      7063	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_34
0x400c0d8	    0x488b04c50000	                  mov rax, qword [rax*8]	      7063	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_34
0x400c0e0	          0x4889c7	                            mov rdi, rax	      7063	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_34
0x400c0e3	      0xe87455ffff	            call sym.mode_from_disp_size	      7063	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_34
0x400c0e8	    0x890500000000	            mov dword [0x0400c0ee], eax 	      7063	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_34
0x400c0ee	      0xe921030000	                           jmp 0x400c414	      7063	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_34
0x400c0f3	    0x8b0500000000	            mov eax, dword [0x0400c0f9] 	      7067	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c0f9	          0x83f802	                              cmp eax, 2	      7067	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c0fc	     0xf85c7000000	                           jne 0x400c1c9	      7067	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c102	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x400c105	        0x4883c00e	                            add rax, 0xe	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x400c109	    0x488b04c50000	                  mov rax, qword [rax*8]	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x400c111	      0xbe02000000	                              mov esi, 2	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x400c116	          0x4889c7	                            mov rdi, rax	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x400c119	      0xe80e4affff	             call sym.operand_type_check	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x400c11e	            0x85c0	                           test eax, eax	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x400c120	     0xf84a3000000	                            je 0x400c1c9	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x400c126	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7070	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c129	        0x4883c00e	                            add rax, 0xe	      7070	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c12d	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7070	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c135	          0x83e2fd	                     and edx, 0xfffffffd	      7070	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c138	    0x8814c5000000	                    mov byte [rax*8], dl	      7070	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c13f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7071	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c142	        0x4883c00e	                            add rax, 0xe	      7071	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c146	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7071	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c14e	          0x83e2ef	                     and edx, 0xffffffef	      7071	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c151	    0x8814c5000000	                    mov byte [rax*8], dl	      7071	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400c158	     0xfb605000000	           movzx eax, byte [0x0400c15f] 	      7072	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c15f	            0x84c0	                             test al, al	      7072	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c161	            0x7534	                           jne 0x400c197	      7072	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c163	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7074	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c166	        0x4883c00e	                            add rax, 0xe	      7074	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c16a	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7074	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c172	          0x83e2fb	                     and edx, 0xfffffffb	      7074	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c175	    0x8814c5000000	                    mov byte [rax*8], dl	      7074	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c17c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c17f	        0x4883c00e	                            add rax, 0xe	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c183	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c18b	          0x83ca08	                               or edx, 8	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c18e	    0x8814c5000000	                    mov byte [rax*8], dl	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c195	            0xeb32	                           jmp 0x400c1c9	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400c197	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7079	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x400c19a	        0x4883c00e	                            add rax, 0xe	      7079	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x400c19e	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7079	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x400c1a6	          0x83ca04	                               or edx, 4	      7079	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x400c1a9	    0x8814c5000000	                    mov byte [rax*8], dl	      7079	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x400c1b0	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7080	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x400c1b3	        0x4883c00e	                            add rax, 0xe	      7080	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x400c1b7	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7080	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x400c1bf	          0x83e2f7	                     and edx, 0xfffffff7	      7080	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x400c1c2	    0x8814c5000000	                    mov byte [rax*8], dl	      7080	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x400c1c9	     0xfb605000000	           movzx eax, byte [0x0400c1d0] 	      7084	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x400c1d0	          0x83e030	                           and eax, 0x30	      7084	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x400c1d3	            0x84c0	                             test al, al	      7084	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x400c1d5	            0x7514	                           jne 0x400c1eb	      7084	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x400c1d7	    0x488b05000000	            mov rax, qword [0x0400c1de] 	      7085	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x400c1de	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7085	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x400c1e2	           0xfb6c0	                           movzx eax, al	      7085	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x400c1e5	    0x890500000000	            mov dword [0x0400c1eb], eax 	      7085	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x400c1eb	    0x488b05000000	            mov rax, qword [0x0400c1f2] 	      7086	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x400c1f2	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7086	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x400c1f6	           0xfb6c0	                           movzx eax, al	      7086	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x400c1f9	          0x83e001	                              and eax, 1	      7086	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x400c1fc	            0x85c0	                           test eax, eax	      7086	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x400c1fe	            0x740f	                            je 0x400c20f	      7086	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x400c200	    0x8b0500000000	            mov eax, dword [0x0400c206] 	      7087	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x400c206	          0x83c801	                               or eax, 1	      7087	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x400c209	    0x890500000000	            mov dword [0x0400c20f], eax 	      7087	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x400c20f	    0x488b05000000	            mov rax, qword [0x0400c216] 	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x400c216	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x400c21a	           0xfb6c0	                           movzx eax, al	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x400c21d	    0x890500000000	            mov dword [0x0400c223], eax 	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x400c223	    0x488b05000000	            mov rax, qword [0x0400c22a] 	      7091	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c22a	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7091	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c22e	           0xfb6c0	                           movzx eax, al	      7091	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c231	          0x83e001	                              and eax, 1	      7091	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c234	            0x85c0	                           test eax, eax	      7091	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c236	            0x7526	                           jne 0x400c25e	      7091	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c238	    0x488b05000000	            mov rax, qword [0x0400c23f] 	      7092	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c23f	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7092	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c243	            0x3c05	                               cmp al, 5	      7092	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c245	            0x740f	                            je 0x400c256	      7092	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c247	    0x488b05000000	            mov rax, qword [0x0400c24e] 	      7093	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c24e	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7093	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c252	            0x3c04	                               cmp al, 4	      7093	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c254	            0x7508	                           jne 0x400c25e	      7093	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c256	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      7094	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400c25e	    0x488b05000000	            mov rax, qword [0x0400c265] 	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c265	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c269	            0x3c05	                               cmp al, 5	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c26b	            0x752a	                           jne 0x400c297	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c26d	    0x8b0500000000	            mov eax, dword [0x0400c273] 	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c273	            0x85c0	                           test eax, eax	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c275	            0x7520	                           jne 0x400c297	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c277	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      7097	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c27e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7098	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c281	        0x4883c00e	                            add rax, 0xe	      7098	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c285	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7098	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c28d	          0x83ca01	                               or edx, 1	      7098	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c290	    0x8814c5000000	                    mov byte [rax*8], dl	      7098	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400c297	    0x8b0500000000	            mov eax, dword [0x0400c29d] 	      7100	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x400c29d	    0x890500000000	            mov dword [0x0400c2a3], eax 	      7100	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x400c2a3	    0x488b05000000	            mov rax, qword [0x0400c2aa] 	      7101	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x400c2aa	          0x4885c0	                           test rax, rax	      7101	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x400c2ad	            0x752e	                           jne 0x400c2dd	      7101	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x400c2af	     0xfb605000000	           movzx eax, byte [0x0400c2b6] 	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x400c2b6	          0x83e030	                           and eax, 0x30	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x400c2b9	            0x84c0	                             test al, al	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x400c2bb	            0x7414	                            je 0x400c2d1	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x400c2bd	      0xba00000000	                              mov edx, 0	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x400c2c2	      0xbebf1b0000	                         mov esi, 0x1bbf	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x400c2c7	      0xbf00000000	                              mov edi, 0	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x400c2cc	      0xe800000000	                          call 0x400c2d1	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x400c2d1	    0xc70500000000	               mov dword [0x0400c2db], 4	      7109	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x400c2db	            0xeb7a	                           jmp 0x400c357	      7109	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x400c2dd	     0xfb605000000	           movzx eax, byte [0x0400c2e4] 	      7111	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58
0x400c2e4	          0x83e030	                           and eax, 0x30	      7111	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58
0x400c2e7	            0x84c0	                             test al, al	      7111	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58
0x400c2e9	            0x756c	                           jne 0x400c357	      7111	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58
0x400c2eb	    0x488b05000000	            mov rax, qword [0x0400c2f2] 	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x400c2f2	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x400c2f6	            0x3cfd	                            cmp al, 0xfd	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x400c2f8	            0x740f	                            je 0x400c309	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x400c2fa	    0x488b05000000	            mov rax, qword [0x0400c301] 	      7114	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x400c301	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7114	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x400c305	            0x3cfc	                            cmp al, 0xfc	      7114	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x400c307	            0x750c	                           jne 0x400c315	      7114	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x400c309	    0xc70500000000	               mov dword [0x0400c313], 4	      7115	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x400c313	            0xeb14	                           jmp 0x400c329	      7115	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x400c315	    0x488b05000000	            mov rax, qword [0x0400c31c] 	      7117	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	ELSE_26
0x400c31c	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7117	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	ELSE_26
0x400c320	           0xfb6c0	                           movzx eax, al	      7117	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	ELSE_26
0x400c323	    0x890500000000	            mov dword [0x0400c329], eax 	      7117	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	ELSE_26
0x400c329	    0xc70500000000	               mov dword [0x0400c333], 4	      7118	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58
0x400c333	    0x488b05000000	            mov rax, qword [0x0400c33a] 	      7119	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x400c33a	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7119	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x400c33e	           0xfb6c0	                           movzx eax, al	      7119	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x400c341	          0x83e001	                              and eax, 1	      7119	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x400c344	            0x85c0	                           test eax, eax	      7119	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x400c346	            0x740f	                            je 0x400c357	      7119	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x400c348	    0x8b0500000000	            mov eax, dword [0x0400c34e] 	      7120	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x400c34e	          0x83c802	                               or eax, 2	      7120	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x400c351	    0x890500000000	            mov dword [0x0400c357], eax 	      7120	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x400c357	    0x8b0500000000	            mov eax, dword [0x0400c35d] 	      7123	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c35d	            0x85c0	                           test eax, eax	      7123	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c35f	            0x7436	                            je 0x400c397	      7123	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c361	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c364	        0x4883c034	                           add rax, 0x34	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c368	    0x8b0485000000	                  mov eax, dword [rax*4]	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c36f	      0x3d79010000	                          cmp eax, 0x179	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c374	            0x7415	                            je 0x400c38b	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c376	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7125	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c379	        0x4883c034	                           add rax, 0x34	      7125	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c37d	    0x8b0485000000	                  mov eax, dword [rax*4]	      7125	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c384	      0x3d95010000	                          cmp eax, 0x195	      7125	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c389	            0x750c	                           jne 0x400c397	      7125	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c38b	    0xc70500000000	               mov dword [0x0400c395], 0	      7126	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c395	            0xeb7d	                           jmp 0x400c414	      7126	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x400c397	        0x837da800	               cmp dword [rbp - 0x58], 0	      7129	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400c39b	            0x755a	                           jne 0x400c3f7	      7129	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400c39d	    0x8b0500000000	            mov eax, dword [0x0400c3a3] 	      7130	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400c3a3	            0x85c0	                           test eax, eax	      7130	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400c3a5	            0x7550	                           jne 0x400c3f7	      7130	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400c3a7	    0x8b0500000000	            mov eax, dword [0x0400c3ad] 	      7131	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400c3ad	            0x85c0	                           test eax, eax	      7131	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400c3af	            0x7446	                            je 0x400c3f7	      7131	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400c3b1	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      7133	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400c3b8	    0x8b0500000000	            mov eax, dword [0x0400c3be] 	      7134	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x400c3be	          0x83f801	                              cmp eax, 1	      7134	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x400c3c1	            0x751b	                           jne 0x400c3de	      7134	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x400c3c3	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7135	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x400c3c6	        0x4883c00e	                            add rax, 0xe	      7135	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x400c3ca	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7135	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x400c3d2	          0x83ca01	                               or edx, 1	      7135	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x400c3d5	    0x8814c5000000	                    mov byte [rax*8], dl	      7135	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x400c3dc	            0xeb19	                           jmp 0x400c3f7	      7135	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x400c3de	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7137	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	ELSE_28
0x400c3e1	        0x4883c00e	                            add rax, 0xe	      7137	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	ELSE_28
0x400c3e5	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7137	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	ELSE_28
0x400c3ed	          0x83ca04	                               or edx, 4	      7137	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	ELSE_28
0x400c3f0	    0x8814c5000000	                    mov byte [rax*8], dl	      7137	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	ELSE_28
0x400c3f7	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7139	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	CALL_37
0x400c3fa	        0x4883c00e	                            add rax, 0xe	      7139	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	CALL_37
0x400c3fe	    0x488b04c50000	                  mov rax, qword [rax*8]	      7139	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	CALL_37
0x400c406	          0x4889c7	                            mov rdi, rax	      7139	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	CALL_37
0x400c409	      0xe84e52ffff	            call sym.mode_from_disp_size	      7139	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	CALL_37
0x400c40e	    0x890500000000	            mov dword [0x0400c414], eax 	      7139	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	CALL_37
0x400c414	        0x837da800	               cmp dword [rbp - 0x58], 0	      7143	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c418	     0xf8485000000	                            je 0x400c4a3	      7143	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c41e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400c421	        0x4883c014	                           add rax, 0x14	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400c425	    0x488b04c50000	                  mov rax, qword [rax*8]	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400c42d	          0x4885c0	                           test rax, rax	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400c430	            0x7414	                            je 0x400c446	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400c432	      0xba00000000	                              mov edx, 0	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400c437	      0xbeed1b0000	                         mov esi, 0x1bed	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400c43c	      0xbf00000000	                              mov edi, 0	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400c441	      0xe800000000	                          call 0x400c446	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400c446	    0x8b0500000000	            mov eax, dword [0x0400c44c] 	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c44c	          0x8d5001	                      lea edx, [rax + 1]	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c44f	    0x891500000000	            mov dword [0x0400c455], edx 	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c455	            0x89c0	                            mov eax, eax	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c457	        0x48c1e005	                              shl rax, 5	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c45b	    0x480500000000	                              add rax, 0	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c461	        0x488945d0	             mov qword [rbp - 0x30], rax	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c465	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7151	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c468	        0x488d5014	                   lea rdx, [rax + 0x14]	      7151	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c46c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7151	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c470	    0x488904d50000	                  mov qword [rdx*8], rax	      7151	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c478	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7152	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c47c	        0xc6401802	                mov byte [rax + 0x18], 2	      7152	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c480	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7153	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c484	    0x48c740100000	               mov qword [rax + 0x10], 0	      7153	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c48c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7154	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c490	    0x48c700000000	                      mov qword [rax], 0	      7154	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c497	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7155	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c49b	    0x48c740080000	                  mov qword [rax + 8], 0	      7155	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400c4a3	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7158	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400c4a6	          0x8945a4	             mov dword [rbp - 0x5c], eax	      7158	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400c4a9	            0xeb07	                           jmp 0x400c4b2	      7158	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400c4ab	    0xc745a4ffffff	     mov dword [rbp - 0x5c], 0xffffffff 	      7161	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29
0x400c4b2	     0xfb605000000	           movzx eax, byte [0x0400c4b9] 	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x400c4b9	          0x83e00c	                            and eax, 0xc	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x400c4bc	            0x3c04	                               cmp al, 4	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x400c4be	     0xf8503010000	                           jne 0x400c5c7	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x400c4c4	      0xbe01000000	                              mov esi, 1	      7165	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66	CALL_39
0x400c4c9	    0x488b3d000000	            mov rdi, qword [0x0400c4d0] 	      7165	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66	CALL_39
0x400c4d0	      0xe85746ffff	             call sym.operand_type_check	      7165	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66	CALL_39
0x400c4d5	            0x85c0	                           test eax, eax	      7165	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66	CALL_39
0x400c4d7	            0x740d	                            je 0x400c4e6	      7165	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66	CALL_39
0x400c4d9	    0x48c705000000	               mov qword [0x0400c4e4], 0	      7166	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66
0x400c4e4	            0xeb2c	                           jmp 0x400c512	      7166	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66
0x400c4e6	     0xfb605000000	           movzx eax, byte [0x0400c4ed] 	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x400c4ed	          0x83e060	                           and eax, 0x60	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x400c4f0	            0x3c20	                            cmp al, 0x20	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x400c4f2	            0x7510	                           jne 0x400c504	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x400c4f4	    0x488b05000000	            mov rax, qword [0x0400c4fb] 	      7172	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x400c4fb	    0x488905000000	            mov qword [0x0400c502], rax 	      7172	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x400c502	            0xeb0e	                           jmp 0x400c512	      7172	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x400c504	    0x488b05000000	            mov rax, qword [0x0400c50b] 	      7174	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	ELSE_31
0x400c50b	    0x488905000000	            mov qword [0x0400c512], rax 	      7174	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	ELSE_31
0x400c512	    0x488b05000000	            mov rax, qword [0x0400c519] 	      7179	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x400c519	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7179	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x400c51d	           0xfb6c0	                           movzx eax, al	      7179	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x400c520	    0x890500000000	            mov dword [0x0400c526], eax 	      7179	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x400c526	    0x488b05000000	            mov rax, qword [0x0400c52d] 	      7180	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x400c52d	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7180	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x400c531	           0xfb6c0	                           movzx eax, al	      7180	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x400c534	          0x83e001	                              and eax, 1	      7180	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x400c537	            0x85c0	                           test eax, eax	      7180	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x400c539	            0x740f	                            je 0x400c54a	      7180	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x400c53b	    0x8b0500000000	            mov eax, dword [0x0400c541] 	      7181	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x400c541	          0x83c804	                               or eax, 4	      7181	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x400c544	    0x890500000000	            mov dword [0x0400c54a], eax 	      7181	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x400c54a	    0x8b0500000000	            mov eax, dword [0x0400c550] 	      7184	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69
0x400c550	            0x85c0	                           test eax, eax	      7184	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69
0x400c552	     0xf858b050000	                           jne 0x400cae3	      7184	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69
0x400c558	    0xc70500000000	               mov dword [0x0400c562], 3	      7186	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69
0x400c562	     0xfb605000000	           movzx eax, byte [0x0400c569] 	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x400c569	          0x83e060	                           and eax, 0x60	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x400c56c	            0x3c20	                            cmp al, 0x20	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x400c56e	            0x7516	                           jne 0x400c586	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x400c570	    0x488b05000000	            mov rax, qword [0x0400c577] 	      7189	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x400c577	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7189	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x400c57b	           0xfb6c0	                           movzx eax, al	      7189	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x400c57e	    0x890500000000	            mov dword [0x0400c584], eax 	      7189	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x400c584	            0xeb14	                           jmp 0x400c59a	      7189	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x400c586	    0x488b05000000	            mov rax, qword [0x0400c58d] 	      7191	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	ELSE_32
0x400c58d	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7191	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	ELSE_32
0x400c591	           0xfb6c0	                           movzx eax, al	      7191	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	ELSE_32
0x400c594	    0x890500000000	            mov dword [0x0400c59a], eax 	      7191	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	ELSE_32
0x400c59a	    0x488b05000000	            mov rax, qword [0x0400c5a1] 	      7193	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x400c5a1	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7193	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x400c5a5	           0xfb6c0	                           movzx eax, al	      7193	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x400c5a8	          0x83e001	                              and eax, 1	      7193	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x400c5ab	            0x85c0	                           test eax, eax	      7193	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x400c5ad	     0xf8430050000	                            je 0x400cae3	      7193	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x400c5b3	    0x8b0500000000	            mov eax, dword [0x0400c5b9] 	      7194	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x400c5b9	          0x83c801	                               or eax, 1	      7194	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x400c5bc	    0x890500000000	            mov dword [0x0400c5c2], eax 	      7194	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x400c5c2	      0xe91c050000	                           jmp 0x400cae3	      7194	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x400c5c7	     0xfb605000000	           movzx eax, byte [0x0400c5ce] 	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x400c5ce	          0x83e018	                           and eax, 0x18	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x400c5d1	            0x3c18	                            cmp al, 0x18	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x400c5d3	            0x7567	                           jne 0x400c63c	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x400c5d5	    0x488b05000000	            mov rax, qword [0x0400c5dc] 	      7199	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x400c5dc	    0x488905000000	            mov qword [0x0400c5e3], rax 	      7199	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x400c5e3	    0x8b0500000000	            mov eax, dword [0x0400c5e9] 	      7200	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x400c5e9	            0x85c0	                           test eax, eax	      7200	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x400c5eb	     0xf85f2040000	                           jne 0x400cae3	      7200	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x400c5f1	    0xc70500000000	               mov dword [0x0400c5fb], 3	      7202	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x400c5fb	    0x488b05000000	            mov rax, qword [0x0400c602] 	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x400c602	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x400c606	           0xfb6c0	                           movzx eax, al	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x400c609	    0x890500000000	            mov dword [0x0400c60f], eax 	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x400c60f	    0x488b05000000	            mov rax, qword [0x0400c616] 	      7204	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400c616	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7204	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400c61a	           0xfb6c0	                           movzx eax, al	      7204	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400c61d	          0x83e001	                              and eax, 1	      7204	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400c620	            0x85c0	                           test eax, eax	      7204	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400c622	     0xf84bb040000	                            je 0x400cae3	      7204	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400c628	    0x8b0500000000	            mov eax, dword [0x0400c62e] 	      7205	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400c62e	          0x83c801	                               or eax, 1	      7205	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400c631	    0x890500000000	            mov dword [0x0400c637], eax 	      7205	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400c637	      0xe9a7040000	                           jmp 0x400cae3	      7205	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400c63c	    0x8b0500000000	            mov eax, dword [0x0400c642] 	      7212	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75
0x400c642	            0x85c0	                           test eax, eax	      7212	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75
0x400c644	     0xf8499040000	                            je 0x400cae3	      7212	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75
0x400c64a	    0xc745b4ffffff	     mov dword [rbp - 0x4c], 0xffffffff 	      7215	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75
0x400c651	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x400c658	      0xe907010000	                           jmp 0x400c764	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x400c65d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c660	        0x4883c00e	                            add rax, 0xe	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c664	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c66c	          0x83e001	                              and eax, 1	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c66f	            0x84c0	                             test al, al	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c671	     0xf85fc000000	                           jne 0x400c773	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c677	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c67a	        0x4883c00e	                            add rax, 0xe	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c67e	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c686	            0xd0e8	                               shr al, 1	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c688	          0x83e001	                              and eax, 1	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c68b	            0x84c0	                             test al, al	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c68d	     0xf85e0000000	                           jne 0x400c773	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c693	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c696	        0x4883c00e	                            add rax, 0xe	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c69a	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6a2	          0xc0e802	                               shr al, 2	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6a5	          0x83e001	                              and eax, 1	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6a8	            0x84c0	                             test al, al	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6aa	     0xf85c3000000	                           jne 0x400c773	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6b0	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6b3	        0x4883c00e	                            add rax, 0xe	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6b7	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6bf	            0xd0e8	                               shr al, 1	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6c1	          0x83e001	                              and eax, 1	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6c4	            0x84c0	                             test al, al	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6c6	     0xf85a7000000	                           jne 0x400c773	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6cc	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6cf	        0x4883c00e	                            add rax, 0xe	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6d3	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6db	          0xc0e803	                               shr al, 3	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6de	          0x83e001	                              and eax, 1	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6e1	            0x84c0	                             test al, al	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6e3	     0xf858a000000	                           jne 0x400c773	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6e9	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6ec	        0x4883c00e	                            add rax, 0xe	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6f0	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6f8	          0xc0e807	                               shr al, 7	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6fb	            0x84c0	                             test al, al	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6fd	            0x7574	                           jne 0x400c773	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c6ff	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c702	        0x4883c00e	                            add rax, 0xe	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c706	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c70e	          0x83e001	                              and eax, 1	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c711	            0x84c0	                             test al, al	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c713	            0x755e	                           jne 0x400c773	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c715	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c718	        0x4883c00e	                            add rax, 0xe	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c71c	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c724	          0xc0e804	                               shr al, 4	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c727	          0x83e001	                              and eax, 1	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c72a	            0x84c0	                             test al, al	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c72c	            0x7545	                           jne 0x400c773	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c72e	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c731	        0x4883c00e	                            add rax, 0xe	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c735	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c73d	          0xc0e805	                               shr al, 5	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c740	          0x83e001	                              and eax, 1	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c743	            0x84c0	                             test al, al	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c745	            0x752c	                           jne 0x400c773	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c747	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c74a	        0x4883c00e	                            add rax, 0xe	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c74e	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c756	          0xc0e806	                               shr al, 6	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c759	          0x83e001	                              and eax, 1	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c75c	            0x84c0	                             test al, al	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c75e	            0x7513	                           jne 0x400c773	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400c760	        0x8345b001	               add dword [rbp - 0x50], 1	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x400c764	    0x8b0500000000	            mov eax, dword [0x0400c76a] 	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x400c76a	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x400c76d	     0xf87eafeffff	                            ja 0x400c65d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x400c773	        0x837db800	               cmp dword [rbp - 0x48], 0	      7230	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x400c777	            0x740b	                            je 0x400c784	      7230	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x400c779	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      7231	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x400c77c	          0x8945b0	             mov dword [rbp - 0x50], eax	      7231	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x400c77f	      0xe9a8010000	                           jmp 0x400c92c	      7231	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x400c784	     0xfb605000000	           movzx eax, byte [0x0400c78b] 	      7232	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78
0x400c78b	          0x83e018	                           and eax, 0x18	      7232	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78
0x400c78e	            0x3c08	                               cmp al, 8	      7232	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78
0x400c790	     0xf85ec000000	                           jne 0x400c882	      7232	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78
0x400c796	        0x837da4ff	cmp dword [rbp - 0x5c], 0xffffffffffffffff	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x400c79a	            0x7514	                           jne 0x400c7b0	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x400c79c	      0xba00000000	                              mov edx, 0	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x400c7a1	      0xbe441c0000	                         mov esi, 0x1c44	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x400c7a6	      0xbf00000000	                              mov edi, 0	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x400c7ab	      0xe800000000	                          call 0x400c7b0	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x400c7b0	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7238	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x400c7b3	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      7238	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x400c7b6	            0x762f	                           jbe 0x400c7e7	      7238	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x400c7b8	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7240	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x400c7bb	          0x8d5001	                      lea edx, [rax + 1]	      7240	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x400c7be	          0x8955b0	             mov dword [rbp - 0x50], edx	      7240	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x400c7c1	          0x8945b4	             mov dword [rbp - 0x4c], eax	      7240	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x400c7c4	    0x8b0500000000	            mov eax, dword [0x0400c7ca] 	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x400c7ca	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x400c7cd	     0xf8759010000	                            ja 0x400c92c	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x400c7d3	      0xba00000000	                              mov edx, 0	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x400c7d8	      0xbe491c0000	                         mov esi, 0x1c49	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x400c7dd	      0xbf00000000	                              mov edi, 0	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x400c7e2	      0xe800000000	                          call 0x400c7e7	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x400c7e7	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c7ea	        0x4883c006	                              add rax, 6	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c7ee	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c7f6	          0xc0e806	                               shr al, 6	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c7f9	          0x83e001	                              and eax, 1	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c7fc	            0x84c0	                             test al, al	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c7fe	            0x7556	                           jne 0x400c856	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c800	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c803	          0x83c001	                              add eax, 1	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c806	            0x89c0	                            mov eax, eax	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c808	        0x4883c006	                              add rax, 6	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c80c	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c814	          0xc0e806	                               shr al, 6	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c817	          0x83e001	                              and eax, 1	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c81a	            0x84c0	                             test al, al	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c81c	            0x7438	                            je 0x400c856	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c81e	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7250	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c821	          0x8945b4	             mov dword [rbp - 0x4c], eax	      7250	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c824	        0x8345b002	               add dword [rbp - 0x50], 2	      7251	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x400c828	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c82b	          0x83c001	                              add eax, 1	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c82e	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c831	            0x750f	                           jne 0x400c842	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c833	    0x8b0500000000	            mov eax, dword [0x0400c839] 	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c839	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c83c	     0xf87e9000000	                            ja 0x400c92b	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c842	      0xba00000000	                              mov edx, 0	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c847	      0xbe551c0000	                         mov esi, 0x1c55	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c84c	      0xbf00000000	                              mov edi, 0	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c851	      0xe800000000	                          call 0x400c856	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c856	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7257	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37
0x400c859	          0x83c001	                              add eax, 1	      7257	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37
0x400c85c	          0x8945b4	             mov dword [rbp - 0x4c], eax	      7257	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37
0x400c85f	    0x8b0500000000	            mov eax, dword [0x0400c865] 	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x400c865	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x400c868	     0xf87be000000	                            ja 0x400c92c	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x400c86e	      0xba00000000	                              mov edx, 0	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x400c873	      0xbe5a1c0000	                         mov esi, 0x1c5a	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x400c878	      0xbf00000000	                              mov edi, 0	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x400c87d	      0xe800000000	                          call 0x400c882	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x400c882	     0xfb605000000	           movzx eax, byte [0x0400c889] 	      7262	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81
0x400c889	          0x83e018	                           and eax, 0x18	      7262	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81
0x400c88c	            0x3c10	                            cmp al, 0x10	      7262	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81
0x400c88e	            0x757c	                           jne 0x400c90c	      7262	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81
0x400c890	    0x8b0500000000	            mov eax, dword [0x0400c896] 	      7266	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x400c896	            0x85c0	                           test eax, eax	      7266	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x400c898	            0x752f	                           jne 0x400c8c9	      7266	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x400c89a	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x400c89d	          0x8d5002	                      lea edx, [rax + 2]	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x400c8a0	    0x8b0500000000	            mov eax, dword [0x0400c8a6] 	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x400c8a6	            0x39c2	                            cmp edx, eax	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x400c8a8	            0x7414	                            je 0x400c8be	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x400c8aa	      0xba00000000	                              mov edx, 0	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x400c8af	      0xbe651c0000	                         mov esi, 0x1c65	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x400c8b4	      0xbf00000000	                              mov edi, 0	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x400c8b9	      0xe800000000	                          call 0x400c8be	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x400c8be	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7270	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x400c8c1	          0x83c001	                              add eax, 1	      7270	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x400c8c4	          0x8945b4	             mov dword [rbp - 0x4c], eax	      7270	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x400c8c7	            0xeb63	                           jmp 0x400c92c	      7270	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x400c8c9	    0x8b0500000000	            mov eax, dword [0x0400c8cf] 	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8cf	          0x83c002	                              add eax, 2	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8d2	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8d5	            0x7613	                           jbe 0x400c8ea	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8d7	    0x8b0500000000	            mov eax, dword [0x0400c8dd] 	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8dd	    0x8b1500000000	            mov edx, dword [0x0400c8e3] 	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8e3	          0x83c202	                              add edx, 2	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8e6	            0x39d0	                            cmp eax, edx	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8e8	            0x7414	                            je 0x400c8fe	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8ea	      0xba00000000	                              mov edx, 0	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8ef	      0xbe6c1c0000	                         mov esi, 0x1c6c	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8f4	      0xbf00000000	                              mov edi, 0	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8f9	      0xe800000000	                          call 0x400c8fe	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x400c8fe	    0x8b0500000000	            mov eax, dword [0x0400c904] 	      7277	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39
0x400c904	          0x83c001	                              add eax, 1	      7277	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39
0x400c907	          0x8945b4	             mov dword [rbp - 0x4c], eax	      7277	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39
0x400c90a	            0xeb20	                           jmp 0x400c92c	      7277	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39
0x400c90c	    0x8b0500000000	            mov eax, dword [0x0400c912] 	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x400c912	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x400c915	            0x7715	                            ja 0x400c92c	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x400c917	      0xba00000000	                              mov edx, 0	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x400c91c	      0xbe711c0000	                         mov esi, 0x1c71	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x400c921	      0xbf00000000	                              mov edi, 0	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x400c926	      0xe800000000	                          call 0x400c92b	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x400c92b	              0x90	                                     nop	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x400c92c	        0x837db4ff	cmp dword [rbp - 0x4c], 0xffffffffffffffff	      7283	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c930	     0xf8492000000	                            je 0x400c9c8	      7283	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c936	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7285	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c939	        0x4883c006	                              add rax, 6	      7285	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c93d	        0x48c1e003	                              shl rax, 3	      7285	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c941	    0x480500000000	                              add rax, 0	      7285	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c947	        0x4883c004	                              add rax, 4	      7285	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c94b	        0x488945d8	             mov qword [rbp - 0x28], rax	      7285	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c94f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c953	           0xfb600	                   movzx eax, byte [rax]	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c956	          0x83e001	                              and eax, 1	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c959	            0x84c0	                             test al, al	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c95b	            0x741e	                            je 0x400c97b	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c95d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c961	         0xfb64003	               movzx eax, byte [rax + 3]	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c965	          0x83e080	                     and eax, 0xffffff80	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c968	            0x84c0	                             test al, al	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c96a	            0x7546	                           jne 0x400c9b2	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c96c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c970	         0xfb64004	               movzx eax, byte [rax + 4]	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c974	          0x83e002	                              and eax, 2	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c977	            0x84c0	                             test al, al	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c979	            0x7537	                           jne 0x400c9b2	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c97b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7289	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c97f	           0xfb600	                   movzx eax, byte [rax]	      7289	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c982	          0x83e004	                              and eax, 4	      7289	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c985	            0x84c0	                             test al, al	      7289	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c987	            0x7529	                           jne 0x400c9b2	      7289	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x400c989	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x400c98d	      0xbe00000000	                              mov esi, 0	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x400c992	          0x4889c7	                            mov rdi, rax	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x400c995	      0xe8893bffff	             call sym.operand_type_equal	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x400c99a	            0x85c0	                           test eax, eax	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x400c99c	            0x7514	                           jne 0x400c9b2	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x400c99e	      0xba00000000	                              mov edx, 0	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x400c9a3	      0xbe7b1c0000	                         mov esi, 0x1c7b	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x400c9a8	      0xbf00000000	                              mov edi, 0	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x400c9ad	      0xe800000000	                          call 0x400c9b2	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x400c9b2	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7293	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c9b5	        0x4883c014	                           add rax, 0x14	      7293	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c9b9	    0x488b04c50000	                  mov rax, qword [rax*8]	      7293	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c9c1	    0x488905000000	            mov qword [0x0400c9c8], rax 	      7293	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400c9c8	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7297	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85
0x400c9cb	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      7297	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85
0x400c9ce	     0xf84fb000000	                            je 0x400cacf	      7297	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85
0x400c9d4	    0x8b0500000000	            mov eax, dword [0x0400c9da] 	      7301	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x400c9da	      0x3dffff0000	                         cmp eax, 0xffff	      7301	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x400c9df	            0x747a	                            je 0x400ca5b	      7301	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x400c9e1	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x400c9e4	        0x4883c014	                           add rax, 0x14	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x400c9e8	    0x488b04c50000	                  mov rax, qword [rax*8]	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x400c9f0	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x400c9f4	           0xfb6c0	                           movzx eax, al	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x400c9f7	    0x890500000000	            mov dword [0x0400c9fd], eax 	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x400c9fd	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x400ca00	        0x4883c014	                           add rax, 0x14	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x400ca04	    0x488b04c50000	                  mov rax, qword [rax*8]	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x400ca0c	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x400ca10	           0xfb6c0	                           movzx eax, al	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x400ca13	          0x83e001	                              and eax, 1	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x400ca16	            0x85c0	                           test eax, eax	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x400ca18	            0x740f	                            je 0x400ca29	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x400ca1a	    0x8b0500000000	            mov eax, dword [0x0400ca20] 	      7305	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x400ca20	          0x83c801	                               or eax, 1	      7305	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x400ca23	    0x890500000000	            mov dword [0x0400ca29], eax 	      7305	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x400ca29	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca2c	        0x4883c014	                           add rax, 0x14	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca30	    0x488b04c50000	                  mov rax, qword [rax*8]	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca38	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca3c	           0xfb6c0	                           movzx eax, al	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca3f	          0x83e004	                              and eax, 4	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca42	            0x85c0	                           test eax, eax	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca44	     0xf8485000000	                            je 0x400cacf	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca4a	    0x8b0500000000	            mov eax, dword [0x0400ca50] 	      7307	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca50	          0x83c801	                               or eax, 1	      7307	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca53	    0x890500000000	            mov dword [0x0400ca59], eax 	      7307	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca59	            0xeb74	                           jmp 0x400cacf	      7307	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x400ca5b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7311	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41
0x400ca5e	        0x4883c014	                           add rax, 0x14	      7311	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41
0x400ca62	    0x488b04c50000	                  mov rax, qword [rax*8]	      7311	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41
0x400ca6a	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7311	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41
0x400ca6e	           0xfb6c0	                           movzx eax, al	      7311	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41
0x400ca71	    0x890500000000	            mov dword [0x0400ca77], eax 	      7311	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41
0x400ca77	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400ca7a	        0x4883c014	                           add rax, 0x14	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400ca7e	    0x488b04c50000	                  mov rax, qword [rax*8]	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400ca86	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400ca8a	           0xfb6c0	                           movzx eax, al	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400ca8d	          0x83e001	                              and eax, 1	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400ca90	            0x85c0	                           test eax, eax	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400ca92	            0x740f	                            je 0x400caa3	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400ca94	    0x8b0500000000	            mov eax, dword [0x0400ca9a] 	      7313	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400ca9a	          0x83c804	                               or eax, 4	      7313	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400ca9d	    0x890500000000	            mov dword [0x0400caa3], eax 	      7313	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400caa3	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400caa6	        0x4883c014	                           add rax, 0x14	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400caaa	    0x488b04c50000	                  mov rax, qword [rax*8]	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400cab2	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400cab6	           0xfb6c0	                           movzx eax, al	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400cab9	          0x83e004	                              and eax, 4	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400cabc	            0x85c0	                           test eax, eax	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400cabe	            0x740f	                            je 0x400cacf	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400cac0	    0x8b0500000000	            mov eax, dword [0x0400cac6] 	      7315	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400cac6	          0x83c804	                               or eax, 4	      7315	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400cac9	    0x890500000000	            mov dword [0x0400cacf], eax 	      7315	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400cacf	    0x8b0500000000	            mov eax, dword [0x0400cad5] 	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x400cad5	            0x85c0	                           test eax, eax	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x400cad7	            0x750a	                           jne 0x400cae3	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x400cad9	    0xc70500000000	               mov dword [0x0400cae3], 3	      7323	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x400cae3	    0x8b0500000000	            mov eax, dword [0x0400cae9] 	      7327	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x400cae9	      0x3dffff0000	                         cmp eax, 0xffff	      7327	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x400caee	            0x740f	                            je 0x400caff	      7327	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x400caf0	    0x8b0500000000	            mov eax, dword [0x0400caf6] 	      7328	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x400caf6	    0x890500000000	            mov dword [0x0400cafc], eax 	      7328	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x400cafc	            0xeb01	                           jmp 0x400caff	      7328	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x400cafe	              0x90	                                     nop	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400caff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7330	tc-i386.c	FUNCTION_87
0x400cb03	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      7331	tc-i386.c	FUNCTION_87
0x400cb07	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      7331	tc-i386.c	FUNCTION_87
0x400cb10	            0x7405	                            je 0x400cb17	      7331	tc-i386.c	FUNCTION_87
0x400cb12	      0xe800000000	                          call 0x400cb17	      7331	tc-i386.c	FUNCTION_87
0x400cb17	        0x4883c468	                           add rsp, 0x68	      7331	tc-i386.c	FUNCTION_87
0x400cb1b	              0x5b	                                 pop rbx	      7331	tc-i386.c	FUNCTION_87
0x400cb1c	              0x5d	                                 pop rbp	      7331	tc-i386.c	FUNCTION_87
0x400cb1d	              0xc3	                                     ret	      7331	tc-i386.c	FUNCTION_87
i386_intel_parse_name	CALL,3:FOR,1:WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,0:DO,0	64
0x4014498	              0x55	                                push rbp	       198	tc-i386-intel.c	FUNCTION_145
0x4014499	          0x4889e5	                            mov rbp, rsp	       198	tc-i386-intel.c	FUNCTION_145
0x401449c	        0x4883ec20	                           sub rsp, 0x20	       198	tc-i386-intel.c	FUNCTION_145
0x40144a0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       198	tc-i386-intel.c	FUNCTION_145
0x40144a4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       198	tc-i386-intel.c	FUNCTION_145
0x40144a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       201	tc-i386-intel.c	FUNCTION_145	IF_1	CALL_1
0x40144ac	      0xbe00000000	                              mov esi, 0	       201	tc-i386-intel.c	FUNCTION_145	IF_1	CALL_1
0x40144b1	          0x4889c7	                            mov rdi, rax	       201	tc-i386-intel.c	FUNCTION_145	IF_1	CALL_1
0x40144b4	      0xe800000000	                          call 0x40144b9	       201	tc-i386-intel.c	FUNCTION_145	IF_1	CALL_1
0x40144b9	            0x85c0	                           test eax, eax	       201	tc-i386-intel.c	FUNCTION_145	IF_1	CALL_1
0x40144bb	            0x7516	                           jne 0x40144d3	       201	tc-i386-intel.c	FUNCTION_145	IF_1	CALL_1
0x40144bd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       203	tc-i386-intel.c	FUNCTION_145	IF_1	CALL_2
0x40144c1	          0x4889c7	                            mov rdi, rax	       203	tc-i386-intel.c	FUNCTION_145	IF_1	CALL_2
0x40144c4	      0xe800000000	                          call 0x40144c9	       203	tc-i386-intel.c	FUNCTION_145	IF_1	CALL_2
0x40144c9	      0xb801000000	                              mov eax, 1	       204	tc-i386-intel.c	FUNCTION_145	IF_1
0x40144ce	      0xe9b7000000	                           jmp 0x401458a	       204	tc-i386-intel.c	FUNCTION_145	IF_1
0x40144d3	    0xc745fc000000	                  mov dword [rbp - 4], 0	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x40144da	      0xe984000000	                           jmp 0x4014563	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x40144df	          0x8b55fc	                mov edx, dword [rbp - 4]	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x40144e2	          0x4889d0	                            mov rax, rdx	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x40144e5	          0x4801c0	                            add rax, rax	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x40144e8	          0x4801d0	                            add rax, rdx	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x40144eb	        0x48c1e003	                              shl rax, 3	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x40144ef	    0x480500000000	                              add rax, 0	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x40144f5	          0x488b00	                    mov rax, qword [rax]	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x40144f8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x40144fc	          0x4889d6	                            mov rsi, rdx	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x40144ff	          0x4889c7	                            mov rdi, rax	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x4014502	      0xe800000000	                          call 0x4014507	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x4014507	            0x85c0	                           test eax, eax	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x4014509	            0x7554	                           jne 0x401455f	       208	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2	CALL_3
0x401450b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       210	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x401450f	        0xc6401802	                mov byte [rax + 0x18], 2	       210	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x4014513	    0x8b0500000000	            mov eax, dword [0x04014519] 	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x4014519	            0x89c1	                            mov ecx, eax	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x401451b	          0x8b55fc	                mov edx, dword [rbp - 4]	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x401451e	          0x4889d0	                            mov rax, rdx	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x4014521	          0x4801c0	                            add rax, rax	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x4014524	          0x4801d0	                            add rax, rdx	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x4014527	        0x48c1e002	                              shl rax, 2	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x401452b	          0x4801c8	                            add rax, rcx	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x401452e	     0xfb784000000	             movzx eax, word [rax + rax]	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x4014536	           0xfb7d0	                           movzx edx, ax	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x4014539	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x401453d	        0x48895010	             mov qword [rax + 0x10], rdx	       211	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x4014541	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       212	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x4014545	    0x48c700000000	                      mov qword [rax], 0	       212	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x401454c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       213	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x4014550	    0x48c740080000	                  mov qword [rax + 8], 0	       213	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x4014558	      0xb801000000	                              mov eax, 1	       214	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x401455d	            0xeb2b	                           jmp 0x401458a	       214	tc-i386-intel.c	FUNCTION_145	FOR_1	IF_2
0x401455f	        0x8345fc01	                  add dword [rbp - 4], 1	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x4014563	          0x8b55fc	                mov edx, dword [rbp - 4]	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x4014566	          0x4889d0	                            mov rax, rdx	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x4014569	          0x4801c0	                            add rax, rax	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x401456c	          0x4801d0	                            add rax, rdx	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x401456f	        0x48c1e003	                              shl rax, 3	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x4014573	    0x480500000000	                              add rax, 0	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x4014579	          0x488b00	                    mov rax, qword [rax]	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x401457c	          0x4885c0	                           test rax, rax	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x401457f	     0xf855affffff	                           jne 0x40144df	       207	tc-i386-intel.c	FUNCTION_145	FOR_1
0x4014585	      0xb800000000	                              mov eax, 0	       217	tc-i386-intel.c	FUNCTION_145
0x401458a	              0xc9	                                   leave	       218	tc-i386-intel.c	FUNCTION_145
0x401458b	              0xc3	                                     ret	       218	tc-i386-intel.c	FUNCTION_145
operand_type_register_match	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,4:ELSE,0:DO,0	199
0x40013ab	              0x55	                                push rbp	      2082	tc-i386.c	FUNCTION_27
0x40013ac	          0x4889e5	                            mov rbp, rsp	      2082	tc-i386.c	FUNCTION_27
0x40013af	        0x4883ec40	                           sub rsp, 0x40	      2082	tc-i386.c	FUNCTION_27
0x40013b3	        0x48897df0	             mov qword [rbp - 0x10], rdi	      2082	tc-i386.c	FUNCTION_27
0x40013b7	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2082	tc-i386.c	FUNCTION_27
0x40013bb	        0x488955d0	             mov qword [rbp - 0x30], rdx	      2082	tc-i386.c	FUNCTION_27
0x40013bf	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      2082	tc-i386.c	FUNCTION_27
0x40013c3	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      2083	tc-i386.c	FUNCTION_27	IF_1
0x40013c7	          0x83e001	                              and eax, 1	      2083	tc-i386.c	FUNCTION_27	IF_1
0x40013ca	            0x84c0	                             test al, al	      2083	tc-i386.c	FUNCTION_27	IF_1
0x40013cc	            0x7540	                           jne 0x400140e	      2083	tc-i386.c	FUNCTION_27	IF_1
0x40013ce	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      2084	tc-i386.c	FUNCTION_27	IF_1
0x40013d2	          0x83e004	                              and eax, 4	      2084	tc-i386.c	FUNCTION_27	IF_1
0x40013d5	            0x84c0	                             test al, al	      2084	tc-i386.c	FUNCTION_27	IF_1
0x40013d7	            0x7535	                           jne 0x400140e	      2084	tc-i386.c	FUNCTION_27	IF_1
0x40013d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2085	tc-i386.c	FUNCTION_27	IF_1	CALL_1
0x40013dd	      0xbe03000000	                              mov esi, 3	      2085	tc-i386.c	FUNCTION_27	IF_1	CALL_1
0x40013e2	          0x4889c7	                            mov rdi, rax	      2085	tc-i386.c	FUNCTION_27	IF_1	CALL_1
0x40013e5	      0xe842f7ffff	             call sym.operand_type_check	      2085	tc-i386.c	FUNCTION_27	IF_1	CALL_1
0x40013ea	            0x85c0	                           test eax, eax	      2085	tc-i386.c	FUNCTION_27	IF_1	CALL_1
0x40013ec	            0x7416	                            je 0x4001404	      2085	tc-i386.c	FUNCTION_27	IF_1	CALL_1
0x40013ee	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2086	tc-i386.c	FUNCTION_27	IF_1
0x40013f2	          0x83e040	                           and eax, 0x40	      2086	tc-i386.c	FUNCTION_27	IF_1
0x40013f5	            0x84c0	                             test al, al	      2086	tc-i386.c	FUNCTION_27	IF_1
0x40013f7	            0x750b	                           jne 0x4001404	      2086	tc-i386.c	FUNCTION_27	IF_1
0x40013f9	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      2087	tc-i386.c	FUNCTION_27	IF_1
0x40013fd	          0x83e004	                              and eax, 4	      2087	tc-i386.c	FUNCTION_27	IF_1
0x4001400	            0x84c0	                             test al, al	      2087	tc-i386.c	FUNCTION_27	IF_1
0x4001402	            0x750a	                           jne 0x400140e	      2087	tc-i386.c	FUNCTION_27	IF_1
0x4001404	      0xb801000000	                              mov eax, 1	      2088	tc-i386.c	FUNCTION_27	IF_1
0x4001409	      0xe905020000	                           jmp 0x4001613	      2088	tc-i386.c	FUNCTION_27	IF_1
0x400140e	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	      2090	tc-i386.c	FUNCTION_27	IF_2
0x4001412	          0x83e001	                              and eax, 1	      2090	tc-i386.c	FUNCTION_27	IF_2
0x4001415	            0x84c0	                             test al, al	      2090	tc-i386.c	FUNCTION_27	IF_2
0x4001417	            0x7540	                           jne 0x4001459	      2090	tc-i386.c	FUNCTION_27	IF_2
0x4001419	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	      2091	tc-i386.c	FUNCTION_27	IF_2
0x400141d	          0x83e004	                              and eax, 4	      2091	tc-i386.c	FUNCTION_27	IF_2
0x4001420	            0x84c0	                             test al, al	      2091	tc-i386.c	FUNCTION_27	IF_2
0x4001422	            0x7535	                           jne 0x4001459	      2091	tc-i386.c	FUNCTION_27	IF_2
0x4001424	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2092	tc-i386.c	FUNCTION_27	IF_2	CALL_2
0x4001428	      0xbe03000000	                              mov esi, 3	      2092	tc-i386.c	FUNCTION_27	IF_2	CALL_2
0x400142d	          0x4889c7	                            mov rdi, rax	      2092	tc-i386.c	FUNCTION_27	IF_2	CALL_2
0x4001430	      0xe8f7f6ffff	             call sym.operand_type_check	      2092	tc-i386.c	FUNCTION_27	IF_2	CALL_2
0x4001435	            0x85c0	                           test eax, eax	      2092	tc-i386.c	FUNCTION_27	IF_2	CALL_2
0x4001437	            0x7416	                            je 0x400144f	      2092	tc-i386.c	FUNCTION_27	IF_2	CALL_2
0x4001439	         0xfb645d4	            movzx eax, byte [rbp - 0x2c]	      2093	tc-i386.c	FUNCTION_27	IF_2
0x400143d	          0x83e040	                           and eax, 0x40	      2093	tc-i386.c	FUNCTION_27	IF_2
0x4001440	            0x84c0	                             test al, al	      2093	tc-i386.c	FUNCTION_27	IF_2
0x4001442	            0x750b	                           jne 0x400144f	      2093	tc-i386.c	FUNCTION_27	IF_2
0x4001444	         0xfb645c0	            movzx eax, byte [rbp - 0x40]	      2094	tc-i386.c	FUNCTION_27	IF_2
0x4001448	          0x83e004	                              and eax, 4	      2094	tc-i386.c	FUNCTION_27	IF_2
0x400144b	            0x84c0	                             test al, al	      2094	tc-i386.c	FUNCTION_27	IF_2
0x400144d	            0x750a	                           jne 0x4001459	      2094	tc-i386.c	FUNCTION_27	IF_2
0x400144f	      0xb801000000	                              mov eax, 1	      2095	tc-i386.c	FUNCTION_27	IF_2
0x4001454	      0xe9ba010000	                           jmp 0x4001613	      2095	tc-i386.c	FUNCTION_27	IF_2
0x4001459	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	      2097	tc-i386.c	FUNCTION_27	IF_3
0x400145d	          0xc0e805	                               shr al, 5	      2097	tc-i386.c	FUNCTION_27	IF_3
0x4001460	            0x89c2	                            mov edx, eax	      2097	tc-i386.c	FUNCTION_27	IF_3
0x4001462	          0x83e201	                              and edx, 1	      2097	tc-i386.c	FUNCTION_27	IF_3
0x4001465	         0xfb645d3	            movzx eax, byte [rbp - 0x2d]	      2097	tc-i386.c	FUNCTION_27	IF_3
0x4001469	          0xc0e805	                               shr al, 5	      2097	tc-i386.c	FUNCTION_27	IF_3
0x400146c	          0x83e001	                              and eax, 1	      2097	tc-i386.c	FUNCTION_27	IF_3
0x400146f	            0x38c2	                              cmp dl, al	      2097	tc-i386.c	FUNCTION_27	IF_3
0x4001471	     0xf85a2000000	                           jne 0x4001519	      2097	tc-i386.c	FUNCTION_27	IF_3
0x4001477	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	      2098	tc-i386.c	FUNCTION_27	IF_3
0x400147b	          0xc0e806	                               shr al, 6	      2098	tc-i386.c	FUNCTION_27	IF_3
0x400147e	            0x89c2	                            mov edx, eax	      2098	tc-i386.c	FUNCTION_27	IF_3
0x4001480	          0x83e201	                              and edx, 1	      2098	tc-i386.c	FUNCTION_27	IF_3
0x4001483	         0xfb645d3	            movzx eax, byte [rbp - 0x2d]	      2098	tc-i386.c	FUNCTION_27	IF_3
0x4001487	          0xc0e806	                               shr al, 6	      2098	tc-i386.c	FUNCTION_27	IF_3
0x400148a	          0x83e001	                              and eax, 1	      2098	tc-i386.c	FUNCTION_27	IF_3
0x400148d	            0x38c2	                              cmp dl, al	      2098	tc-i386.c	FUNCTION_27	IF_3
0x400148f	     0xf8584000000	                           jne 0x4001519	      2098	tc-i386.c	FUNCTION_27	IF_3
0x4001495	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	      2099	tc-i386.c	FUNCTION_27	IF_3
0x4001499	          0xc0e807	                               shr al, 7	      2099	tc-i386.c	FUNCTION_27	IF_3
0x400149c	            0x89c2	                            mov edx, eax	      2099	tc-i386.c	FUNCTION_27	IF_3
0x400149e	         0xfb645d3	            movzx eax, byte [rbp - 0x2d]	      2099	tc-i386.c	FUNCTION_27	IF_3
0x40014a2	          0xc0e807	                               shr al, 7	      2099	tc-i386.c	FUNCTION_27	IF_3
0x40014a5	            0x38c2	                              cmp dl, al	      2099	tc-i386.c	FUNCTION_27	IF_3
0x40014a7	            0x7570	                           jne 0x4001519	      2099	tc-i386.c	FUNCTION_27	IF_3
0x40014a9	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2100	tc-i386.c	FUNCTION_27	IF_3
0x40014ad	            0xd0e8	                               shr al, 1	      2100	tc-i386.c	FUNCTION_27	IF_3
0x40014af	            0x89c2	                            mov edx, eax	      2100	tc-i386.c	FUNCTION_27	IF_3
0x40014b1	          0x83e201	                              and edx, 1	      2100	tc-i386.c	FUNCTION_27	IF_3
0x40014b4	         0xfb645d4	            movzx eax, byte [rbp - 0x2c]	      2100	tc-i386.c	FUNCTION_27	IF_3
0x40014b8	            0xd0e8	                               shr al, 1	      2100	tc-i386.c	FUNCTION_27	IF_3
0x40014ba	          0x83e001	                              and eax, 1	      2100	tc-i386.c	FUNCTION_27	IF_3
0x40014bd	            0x38c2	                              cmp dl, al	      2100	tc-i386.c	FUNCTION_27	IF_3
0x40014bf	            0x7558	                           jne 0x4001519	      2100	tc-i386.c	FUNCTION_27	IF_3
0x40014c1	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2101	tc-i386.c	FUNCTION_27	IF_3
0x40014c5	          0xc0e803	                               shr al, 3	      2101	tc-i386.c	FUNCTION_27	IF_3
0x40014c8	            0x89c2	                            mov edx, eax	      2101	tc-i386.c	FUNCTION_27	IF_3
0x40014ca	          0x83e201	                              and edx, 1	      2101	tc-i386.c	FUNCTION_27	IF_3
0x40014cd	         0xfb645d4	            movzx eax, byte [rbp - 0x2c]	      2101	tc-i386.c	FUNCTION_27	IF_3
0x40014d1	          0xc0e803	                               shr al, 3	      2101	tc-i386.c	FUNCTION_27	IF_3
0x40014d4	          0x83e001	                              and eax, 1	      2101	tc-i386.c	FUNCTION_27	IF_3
0x40014d7	            0x38c2	                              cmp dl, al	      2101	tc-i386.c	FUNCTION_27	IF_3
0x40014d9	            0x753e	                           jne 0x4001519	      2101	tc-i386.c	FUNCTION_27	IF_3
0x40014db	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2102	tc-i386.c	FUNCTION_27	IF_3
0x40014df	          0xc0e804	                               shr al, 4	      2102	tc-i386.c	FUNCTION_27	IF_3
0x40014e2	            0x89c2	                            mov edx, eax	      2102	tc-i386.c	FUNCTION_27	IF_3
0x40014e4	          0x83e201	                              and edx, 1	      2102	tc-i386.c	FUNCTION_27	IF_3
0x40014e7	         0xfb645d4	            movzx eax, byte [rbp - 0x2c]	      2102	tc-i386.c	FUNCTION_27	IF_3
0x40014eb	          0xc0e804	                               shr al, 4	      2102	tc-i386.c	FUNCTION_27	IF_3
0x40014ee	          0x83e001	                              and eax, 1	      2102	tc-i386.c	FUNCTION_27	IF_3
0x40014f1	            0x38c2	                              cmp dl, al	      2102	tc-i386.c	FUNCTION_27	IF_3
0x40014f3	            0x7524	                           jne 0x4001519	      2102	tc-i386.c	FUNCTION_27	IF_3
0x40014f5	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2103	tc-i386.c	FUNCTION_27	IF_3
0x40014f9	          0xc0e805	                               shr al, 5	      2103	tc-i386.c	FUNCTION_27	IF_3
0x40014fc	            0x89c2	                            mov edx, eax	      2103	tc-i386.c	FUNCTION_27	IF_3
0x40014fe	          0x83e201	                              and edx, 1	      2103	tc-i386.c	FUNCTION_27	IF_3
0x4001501	         0xfb645d4	            movzx eax, byte [rbp - 0x2c]	      2103	tc-i386.c	FUNCTION_27	IF_3
0x4001505	          0xc0e805	                               shr al, 5	      2103	tc-i386.c	FUNCTION_27	IF_3
0x4001508	          0x83e001	                              and eax, 1	      2103	tc-i386.c	FUNCTION_27	IF_3
0x400150b	            0x38c2	                              cmp dl, al	      2103	tc-i386.c	FUNCTION_27	IF_3
0x400150d	            0x750a	                           jne 0x4001519	      2103	tc-i386.c	FUNCTION_27	IF_3
0x400150f	      0xb801000000	                              mov eax, 1	      2104	tc-i386.c	FUNCTION_27	IF_3
0x4001514	      0xe9fa000000	                           jmp 0x4001613	      2104	tc-i386.c	FUNCTION_27	IF_3
0x4001519	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      2106	tc-i386.c	FUNCTION_27	IF_4
0x400151d	          0xc0e805	                               shr al, 5	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4001520	          0x83e001	                              and eax, 1	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4001523	           0xfb6d0	                           movzx edx, al	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4001526	         0xfb645c3	            movzx eax, byte [rbp - 0x3d]	      2106	tc-i386.c	FUNCTION_27	IF_4
0x400152a	          0xc0e805	                               shr al, 5	      2106	tc-i386.c	FUNCTION_27	IF_4
0x400152d	          0x83e001	                              and eax, 1	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4001530	           0xfb6c0	                           movzx eax, al	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4001533	            0x21d0	                            and eax, edx	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4001535	            0x85c0	                           test eax, eax	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4001537	     0xf85c7000000	                           jne 0x4001604	      2106	tc-i386.c	FUNCTION_27	IF_4
0x400153d	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4001541	          0xc0e806	                               shr al, 6	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4001544	          0x83e001	                              and eax, 1	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4001547	           0xfb6d0	                           movzx edx, al	      2107	tc-i386.c	FUNCTION_27	IF_4
0x400154a	         0xfb645c3	            movzx eax, byte [rbp - 0x3d]	      2107	tc-i386.c	FUNCTION_27	IF_4
0x400154e	          0xc0e806	                               shr al, 6	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4001551	          0x83e001	                              and eax, 1	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4001554	           0xfb6c0	                           movzx eax, al	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4001557	            0x21d0	                            and eax, edx	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4001559	            0x85c0	                           test eax, eax	      2107	tc-i386.c	FUNCTION_27	IF_4
0x400155b	     0xf85a3000000	                           jne 0x4001604	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4001561	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      2108	tc-i386.c	FUNCTION_27	IF_4
0x4001565	          0xc0e807	                               shr al, 7	      2108	tc-i386.c	FUNCTION_27	IF_4
0x4001568	           0xfb6d0	                           movzx edx, al	      2108	tc-i386.c	FUNCTION_27	IF_4
0x400156b	         0xfb645c3	            movzx eax, byte [rbp - 0x3d]	      2108	tc-i386.c	FUNCTION_27	IF_4
0x400156f	          0xc0e807	                               shr al, 7	      2108	tc-i386.c	FUNCTION_27	IF_4
0x4001572	           0xfb6c0	                           movzx eax, al	      2108	tc-i386.c	FUNCTION_27	IF_4
0x4001575	            0x21d0	                            and eax, edx	      2108	tc-i386.c	FUNCTION_27	IF_4
0x4001577	            0x85c0	                           test eax, eax	      2108	tc-i386.c	FUNCTION_27	IF_4
0x4001579	     0xf8585000000	                           jne 0x4001604	      2108	tc-i386.c	FUNCTION_27	IF_4
0x400157f	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4001583	            0xd0e8	                               shr al, 1	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4001585	          0x83e001	                              and eax, 1	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4001588	           0xfb6d0	                           movzx edx, al	      2109	tc-i386.c	FUNCTION_27	IF_4
0x400158b	         0xfb645c4	            movzx eax, byte [rbp - 0x3c]	      2109	tc-i386.c	FUNCTION_27	IF_4
0x400158f	            0xd0e8	                               shr al, 1	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4001591	          0x83e001	                              and eax, 1	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4001594	           0xfb6c0	                           movzx eax, al	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4001597	            0x21d0	                            and eax, edx	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4001599	            0x85c0	                           test eax, eax	      2109	tc-i386.c	FUNCTION_27	IF_4
0x400159b	            0x7567	                           jne 0x4001604	      2109	tc-i386.c	FUNCTION_27	IF_4
0x400159d	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	      2110	tc-i386.c	FUNCTION_27	IF_4
0x40015a1	          0xc0e803	                               shr al, 3	      2110	tc-i386.c	FUNCTION_27	IF_4
0x40015a4	          0x83e001	                              and eax, 1	      2110	tc-i386.c	FUNCTION_27	IF_4
0x40015a7	           0xfb6d0	                           movzx edx, al	      2110	tc-i386.c	FUNCTION_27	IF_4
0x40015aa	         0xfb645c4	            movzx eax, byte [rbp - 0x3c]	      2110	tc-i386.c	FUNCTION_27	IF_4
0x40015ae	          0xc0e803	                               shr al, 3	      2110	tc-i386.c	FUNCTION_27	IF_4
0x40015b1	          0x83e001	                              and eax, 1	      2110	tc-i386.c	FUNCTION_27	IF_4
0x40015b4	           0xfb6c0	                           movzx eax, al	      2110	tc-i386.c	FUNCTION_27	IF_4
0x40015b7	            0x21d0	                            and eax, edx	      2110	tc-i386.c	FUNCTION_27	IF_4
0x40015b9	            0x85c0	                           test eax, eax	      2110	tc-i386.c	FUNCTION_27	IF_4
0x40015bb	            0x7547	                           jne 0x4001604	      2110	tc-i386.c	FUNCTION_27	IF_4
0x40015bd	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	      2111	tc-i386.c	FUNCTION_27	IF_4
0x40015c1	          0xc0e804	                               shr al, 4	      2111	tc-i386.c	FUNCTION_27	IF_4
0x40015c4	          0x83e001	                              and eax, 1	      2111	tc-i386.c	FUNCTION_27	IF_4
0x40015c7	           0xfb6d0	                           movzx edx, al	      2111	tc-i386.c	FUNCTION_27	IF_4
0x40015ca	         0xfb645c4	            movzx eax, byte [rbp - 0x3c]	      2111	tc-i386.c	FUNCTION_27	IF_4
0x40015ce	          0xc0e804	                               shr al, 4	      2111	tc-i386.c	FUNCTION_27	IF_4
0x40015d1	          0x83e001	                              and eax, 1	      2111	tc-i386.c	FUNCTION_27	IF_4
0x40015d4	           0xfb6c0	                           movzx eax, al	      2111	tc-i386.c	FUNCTION_27	IF_4
0x40015d7	            0x21d0	                            and eax, edx	      2111	tc-i386.c	FUNCTION_27	IF_4
0x40015d9	            0x85c0	                           test eax, eax	      2111	tc-i386.c	FUNCTION_27	IF_4
0x40015db	            0x7527	                           jne 0x4001604	      2111	tc-i386.c	FUNCTION_27	IF_4
0x40015dd	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	      2112	tc-i386.c	FUNCTION_27	IF_4
0x40015e1	          0xc0e805	                               shr al, 5	      2112	tc-i386.c	FUNCTION_27	IF_4
0x40015e4	          0x83e001	                              and eax, 1	      2112	tc-i386.c	FUNCTION_27	IF_4
0x40015e7	           0xfb6d0	                           movzx edx, al	      2112	tc-i386.c	FUNCTION_27	IF_4
0x40015ea	         0xfb645c4	            movzx eax, byte [rbp - 0x3c]	      2112	tc-i386.c	FUNCTION_27	IF_4
0x40015ee	          0xc0e805	                               shr al, 5	      2112	tc-i386.c	FUNCTION_27	IF_4
0x40015f1	          0x83e001	                              and eax, 1	      2112	tc-i386.c	FUNCTION_27	IF_4
0x40015f4	           0xfb6c0	                           movzx eax, al	      2112	tc-i386.c	FUNCTION_27	IF_4
0x40015f7	            0x21d0	                            and eax, edx	      2112	tc-i386.c	FUNCTION_27	IF_4
0x40015f9	            0x85c0	                           test eax, eax	      2112	tc-i386.c	FUNCTION_27	IF_4
0x40015fb	            0x7507	                           jne 0x4001604	      2112	tc-i386.c	FUNCTION_27	IF_4
0x40015fd	      0xb801000000	                              mov eax, 1	      2113	tc-i386.c	FUNCTION_27	IF_4
0x4001602	            0xeb0f	                           jmp 0x4001613	      2113	tc-i386.c	FUNCTION_27	IF_4
0x4001604	    0xc70500000000	               mov dword [0x0400160e], 2	      2115	tc-i386.c	FUNCTION_27
0x400160e	      0xb800000000	                              mov eax, 0	      2117	tc-i386.c	FUNCTION_27
0x4001613	              0xc9	                                   leave	      2118	tc-i386.c	FUNCTION_27
0x4001614	              0xc3	                                     ret	      2118	tc-i386.c	FUNCTION_27
cpu_flags_and	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,0:ELSE,0:DO,0	40
0x4000668	              0x55	                                push rbp	      1625	tc-i386.c	FUNCTION_13
0x4000669	          0x4889e5	                            mov rbp, rsp	      1625	tc-i386.c	FUNCTION_13
0x400066c	        0x4883ec30	                           sub rsp, 0x30	      1625	tc-i386.c	FUNCTION_13
0x4000670	          0x4889f8	                            mov rax, rdi	      1625	tc-i386.c	FUNCTION_13
0x4000673	          0x4989f0	                             mov r8, rsi	      1625	tc-i386.c	FUNCTION_13
0x4000676	          0x4889c6	                            mov rsi, rax	      1625	tc-i386.c	FUNCTION_13
0x4000679	          0x4889d7	                            mov rdi, rdx	      1625	tc-i386.c	FUNCTION_13
0x400067c	          0x4c89c7	                             mov rdi, r8	      1625	tc-i386.c	FUNCTION_13
0x400067f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1625	tc-i386.c	FUNCTION_13
0x4000683	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1625	tc-i386.c	FUNCTION_13
0x4000687	        0x488955d0	             mov qword [rbp - 0x30], rdx	      1625	tc-i386.c	FUNCTION_13
0x400068b	        0x48894dd8	             mov qword [rbp - 0x28], rcx	      1625	tc-i386.c	FUNCTION_13
0x400068f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1625	tc-i386.c	FUNCTION_13
0x4000698	        0x488945f8	                mov qword [rbp - 8], rax	      1625	tc-i386.c	FUNCTION_13
0x400069c	            0x31c0	                            xor eax, eax	      1625	tc-i386.c	FUNCTION_13
0x400069e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1629	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006a1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1629	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006a4	            0x21d0	                            and eax, edx	      1629	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006a6	          0x8945ec	             mov dword [rbp - 0x14], eax	      1629	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006a9	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006ac	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006af	            0x21d0	                            and eax, edx	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006b1	          0x8945e8	             mov dword [rbp - 0x18], eax	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006b4	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1635	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006b7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1635	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006ba	            0x21d0	                            and eax, edx	      1635	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006bc	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1635	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006bf	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1638	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006c2	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1638	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006c5	            0x21d0	                            and eax, edx	      1638	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006c7	          0x8945e0	             mov dword [rbp - 0x20], eax	      1638	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006ca	              0x90	                                     nop	      1639	tc-i386.c	FUNCTION_13	SWITCH_1
0x40006cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1643	tc-i386.c	FUNCTION_13
0x40006cf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1643	tc-i386.c	FUNCTION_13
0x40006d3	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1644	tc-i386.c	FUNCTION_13
0x40006d7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1644	tc-i386.c	FUNCTION_13
0x40006e0	            0x7405	                            je 0x40006e7	      1644	tc-i386.c	FUNCTION_13
0x40006e2	      0xe800000000	                          call 0x40006e7	      1644	tc-i386.c	FUNCTION_13
0x40006e7	              0xc9	                                   leave	      1644	tc-i386.c	FUNCTION_13
0x40006e8	              0xc3	                                     ret	      1644	tc-i386.c	FUNCTION_13
operand_type_xor	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,0:ELSE,0:DO,0	24
0x4000adc	              0x55	                                push rbp	      1815	tc-i386.c	FUNCTION_20
0x4000add	          0x4889e5	                            mov rbp, rsp	      1815	tc-i386.c	FUNCTION_20
0x4000ae0	        0x4883ec30	                           sub rsp, 0x30	      1815	tc-i386.c	FUNCTION_20
0x4000ae4	        0x48897de0	             mov qword [rbp - 0x20], rdi	      1815	tc-i386.c	FUNCTION_20
0x4000ae8	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1815	tc-i386.c	FUNCTION_20
0x4000aec	    0x64488b042528	                mov rax, qword fs:[0x28]	      1815	tc-i386.c	FUNCTION_20
0x4000af5	        0x488945f8	                mov qword [rbp - 8], rax	      1815	tc-i386.c	FUNCTION_20
0x4000af9	            0x31c0	                            xor eax, eax	      1815	tc-i386.c	FUNCTION_20
0x4000afb	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1822	tc-i386.c	FUNCTION_20	SWITCH_1
0x4000afe	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1822	tc-i386.c	FUNCTION_20	SWITCH_1
0x4000b01	            0x31d0	                            xor eax, edx	      1822	tc-i386.c	FUNCTION_20	SWITCH_1
0x4000b03	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1822	tc-i386.c	FUNCTION_20	SWITCH_1
0x4000b06	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1825	tc-i386.c	FUNCTION_20	SWITCH_1
0x4000b09	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1825	tc-i386.c	FUNCTION_20	SWITCH_1
0x4000b0c	            0x31d0	                            xor eax, edx	      1825	tc-i386.c	FUNCTION_20	SWITCH_1
0x4000b0e	          0x8945e0	             mov dword [rbp - 0x20], eax	      1825	tc-i386.c	FUNCTION_20	SWITCH_1
0x4000b11	              0x90	                                     nop	      1826	tc-i386.c	FUNCTION_20	SWITCH_1
0x4000b12	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1830	tc-i386.c	FUNCTION_20
0x4000b16	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1831	tc-i386.c	FUNCTION_20
0x4000b1a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1831	tc-i386.c	FUNCTION_20
0x4000b23	            0x7405	                            je 0x4000b2a	      1831	tc-i386.c	FUNCTION_20
0x4000b25	      0xe800000000	                          call 0x4000b2a	      1831	tc-i386.c	FUNCTION_20
0x4000b2a	              0xc9	                                   leave	      1831	tc-i386.c	FUNCTION_20
0x4000b2b	              0xc3	                                     ret	      1831	tc-i386.c	FUNCTION_20
optimize_disp	CALL,6:FOR,1:WHILE,0:functions,0:SWITCH,0:IF,10:ELSE,3:DO,0	276
0x4006a44	              0x55	                                push rbp	      4895	tc-i386.c	FUNCTION_74
0x4006a45	          0x4889e5	                            mov rbp, rsp	      4895	tc-i386.c	FUNCTION_74
0x4006a48	            0x4154	                                push r12	      4895	tc-i386.c	FUNCTION_74
0x4006a4a	              0x53	                                push rbx	      4895	tc-i386.c	FUNCTION_74
0x4006a4b	        0x4883ec10	                           sub rsp, 0x10	      4895	tc-i386.c	FUNCTION_74
0x4006a4f	    0x8b0500000000	            mov eax, dword [0x04006a55] 	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x4006a55	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x4006a58	      0xe938040000	                           jmp 0x4006e95	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x4006a5d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006a60	            0x4898	                                    cdqe	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006a62	        0x4883c00e	                            add rax, 0xe	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006a66	    0x488b04c50000	                  mov rax, qword [rax*8]	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006a6e	      0xbe02000000	                              mov esi, 2	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006a73	          0x4889c7	                            mov rdi, rax	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006a76	      0xe8b1a0ffff	             call sym.operand_type_check	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006a7b	            0x85c0	                           test eax, eax	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006a7d	     0xf8412040000	                            je 0x4006e95	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x4006a83	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006a86	            0x4898	                                    cdqe	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006a88	        0x4883c014	                           add rax, 0x14	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006a8c	    0x488b04c50000	                  mov rax, qword [rax*8]	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006a94	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006a98	            0x3c02	                               cmp al, 2	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006a9a	     0xf85bd020000	                           jne 0x4006d5d	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006aa0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4903	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006aa3	            0x4898	                                    cdqe	      4903	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006aa5	        0x4883c014	                           add rax, 0x14	      4903	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006aa9	    0x488b04c50000	                  mov rax, qword [rax*8]	      4903	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006ab1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4903	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006ab5	        0x488945e8	             mov qword [rbp - 0x18], rax	      4903	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x4006ab9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006abc	            0x4898	                                    cdqe	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006abe	        0x4883c00e	                            add rax, 0xe	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006ac2	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006aca	            0xd0e8	                               shr al, 1	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006acc	          0x83e001	                              and eax, 1	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006acf	            0x84c0	                             test al, al	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006ad1	            0x743c	                            je 0x4006b0f	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006ad3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4906	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006ad7	        0x66b80000	                               mov ax, 0	      4906	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006adb	          0x4885c0	                           test rax, rax	      4906	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006ade	            0x752f	                           jne 0x4006b0f	      4906	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006ae0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4911	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006ae4	           0xfb7c0	                           movzx eax, ax	      4911	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006ae7	          0x80f480	                            xor ah, 0x80	      4911	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006aea	    0x482d00800000	                         sub rax, 0x8000	      4911	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006af0	        0x488945e8	             mov qword [rbp - 0x18], rax	      4911	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006af4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4912	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006af7	            0x4898	                                    cdqe	      4912	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006af9	        0x4883c00e	                            add rax, 0xe	      4912	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006afd	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4912	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006b05	          0x83e2ef	                     and edx, 0xffffffef	      4912	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006b08	    0x8814c5000000	                    mov byte [rax*8], dl	      4912	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x4006b0f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b12	            0x4898	                                    cdqe	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b14	        0x4883c00e	                            add rax, 0xe	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b18	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b20	          0xc0e802	                               shr al, 2	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b23	          0x83e001	                              and eax, 1	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b26	            0x84c0	                             test al, al	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b28	            0x744a	                            je 0x4006b74	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b2a	    0x48b800000000	          movabs rax, 0xffffffff00000000	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b34	        0x482345e8	             and rax, qword [rbp - 0x18]	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b38	          0x4885c0	                           test rax, rax	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b3b	            0x7537	                           jne 0x4006b74	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b3d	      0xb8ffffffff	                     mov eax, 0xffffffff	      4922	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b42	        0x482145e8	             and qword [rbp - 0x18], rax	      4922	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b46	      0xb800000080	                     mov eax, 0x80000000	      4923	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b4b	        0x483345e8	             xor rax, qword [rbp - 0x18]	      4923	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b4f	    0x480500000080	             add rax, 0xffffffff80000000	      4923	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b55	        0x488945e8	             mov qword [rbp - 0x18], rax	      4923	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b59	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4924	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b5c	            0x4898	                                    cdqe	      4924	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b5e	        0x4883c00e	                            add rax, 0xe	      4924	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b62	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4924	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b6a	          0x83e2ef	                     and edx, 0xffffffef	      4924	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b6d	    0x8814c5000000	                    mov byte [rax*8], dl	      4924	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x4006b74	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006b79	     0xf85cf000000	                           jne 0x4006c4e	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006b7f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006b82	            0x4898	                                    cdqe	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006b84	        0x4883c00e	                            add rax, 0xe	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006b88	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006b90	          0xc0e806	                               shr al, 6	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006b93	          0x83e001	                              and eax, 1	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006b96	            0x84c0	                             test al, al	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006b98	     0xf84b0000000	                            je 0x4006c4e	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006b9e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4929	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006ba1	            0x4898	                                    cdqe	      4929	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006ba3	        0x4883c00e	                            add rax, 0xe	      4929	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006ba7	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4929	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006baf	          0x83e2fe	                     and edx, 0xfffffffe	      4929	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bb2	    0x8814c5000000	                    mov byte [rax*8], dl	      4929	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bb9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4930	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bbc	            0x4898	                                    cdqe	      4930	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bbe	        0x4883c00e	                            add rax, 0xe	      4930	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bc2	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4930	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bca	          0x83e2fd	                     and edx, 0xfffffffd	      4930	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bcd	    0x8814c5000000	                    mov byte [rax*8], dl	      4930	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bd4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4931	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bd7	            0x4898	                                    cdqe	      4931	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bd9	        0x4883c00e	                            add rax, 0xe	      4931	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bdd	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4931	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006be5	          0x83e2fb	                     and edx, 0xfffffffb	      4931	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006be8	    0x8814c5000000	                    mov byte [rax*8], dl	      4931	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bef	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4932	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bf2	            0x4898	                                    cdqe	      4932	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bf4	        0x4883c00e	                            add rax, 0xe	      4932	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006bf8	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4932	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c00	          0x83e2f7	                     and edx, 0xfffffff7	      4932	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c03	    0x8814c5000000	                    mov byte [rax*8], dl	      4932	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c0a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4933	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c0d	            0x4898	                                    cdqe	      4933	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c0f	        0x4883c00e	                            add rax, 0xe	      4933	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c13	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4933	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c1b	          0x83e2ef	                     and edx, 0xffffffef	      4933	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c1e	    0x8814c5000000	                    mov byte [rax*8], dl	      4933	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c25	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4934	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c28	            0x4898	                                    cdqe	      4934	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c2a	        0x4883c014	                           add rax, 0x14	      4934	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c2e	    0x48c704c50000	                    mov qword [rax*8], 0	      4934	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c3a	    0x8b0500000000	            mov eax, dword [0x04006c40] 	      4935	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c40	          0x83e801	                              sub eax, 1	      4935	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c43	    0x890500000000	            mov dword [0x04006c49], eax 	      4935	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c49	      0xe987000000	                           jmp 0x4006cd5	      4935	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x4006c4e	    0x8b0500000000	            mov eax, dword [0x04006c54] 	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x4006c54	          0x83f802	                              cmp eax, 2	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x4006c57	            0x757c	                           jne 0x4006cd5	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x4006c59	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x4006c5d	          0x4889c7	                            mov rdi, rax	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x4006c60	      0xe8aeaaffff	            call sym.fits_in_signed_long	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x4006c65	            0x85c0	                           test eax, eax	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x4006c67	            0x7436	                            je 0x4006c9f	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x4006c69	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c6c	            0x4898	                                    cdqe	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c6e	        0x4883c00e	                            add rax, 0xe	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c72	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c7a	          0x83e2ef	                     and edx, 0xffffffef	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c7d	    0x8814c5000000	                    mov byte [rax*8], dl	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c84	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4942	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c87	            0x4898	                                    cdqe	      4942	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c89	        0x4883c00e	                            add rax, 0xe	      4942	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c8d	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4942	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c95	          0x83ca08	                               or edx, 8	      4942	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c98	    0x8814c5000000	                    mov byte [rax*8], dl	      4942	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x4006c9f	     0xfb605000000	           movzx eax, byte [0x04006ca6] 	      4944	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x4006ca6	            0x84c0	                             test al, al	      4944	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x4006ca8	            0x742b	                            je 0x4006cd5	      4944	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x4006caa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x4006cae	          0x4889c7	                            mov rdi, rax	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x4006cb1	      0xe881aaffff	          call sym.fits_in_unsigned_long	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x4006cb6	            0x85c0	                           test eax, eax	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x4006cb8	            0x741b	                            je 0x4006cd5	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x4006cba	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4946	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x4006cbd	            0x4898	                                    cdqe	      4946	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x4006cbf	        0x4883c00e	                            add rax, 0xe	      4946	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x4006cc3	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4946	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x4006ccb	          0x83ca04	                               or edx, 4	      4946	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x4006cce	    0x8814c5000000	                    mov byte [rax*8], dl	      4946	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x4006cd5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006cd8	            0x4898	                                    cdqe	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006cda	        0x4883c00e	                            add rax, 0xe	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006cde	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006ce6	          0xc0e802	                               shr al, 2	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006ce9	          0x83e001	                              and eax, 1	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006cec	            0x84c0	                             test al, al	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006cee	            0x7539	                           jne 0x4006d29	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006cf0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006cf3	            0x4898	                                    cdqe	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006cf5	        0x4883c00e	                            add rax, 0xe	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006cf9	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d01	          0xc0e803	                               shr al, 3	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d04	          0x83e001	                              and eax, 1	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d07	            0x84c0	                             test al, al	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d09	            0x751e	                           jne 0x4006d29	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d0b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d0e	            0x4898	                                    cdqe	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d10	        0x4883c00e	                            add rax, 0xe	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d14	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d1c	            0xd0e8	                               shr al, 1	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d1e	          0x83e001	                              and eax, 1	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d21	            0x84c0	                             test al, al	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d23	     0xf846c010000	                            je 0x4006e95	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x4006d2d	          0x4889c7	                            mov rdi, rax	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x4006d30	      0xe81baaffff	                  call sym.fits_in_disp8	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x4006d35	            0x85c0	                           test eax, eax	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x4006d37	     0xf8458010000	                            je 0x4006e95	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x4006d3d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d40	            0x4898	                                    cdqe	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d42	        0x4883c00e	                            add rax, 0xe	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d46	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d4e	          0x83ca01	                               or edx, 1	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d51	    0x8814c5000000	                    mov byte [rax*8], dl	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d58	      0xe938010000	                           jmp 0x4006e95	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x4006d5d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d60	            0x4898	                                    cdqe	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d62	        0x4883c034	                           add rax, 0x34	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d66	    0x8b0485000000	                  mov eax, dword [rax*4]	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d6d	      0x3d79010000	                          cmp eax, 0x179	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d72	            0x741b	                            je 0x4006d8f	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d74	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4955	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d77	            0x4898	                                    cdqe	      4955	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d79	        0x4883c034	                           add rax, 0x34	      4955	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d7d	    0x8b0485000000	                  mov eax, dword [rax*4]	      4955	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d84	      0x3d95010000	                          cmp eax, 0x195	      4955	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d89	     0xf85eb000000	                           jne 0x4006e7a	      4955	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006d8f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006d92	            0x4898	                                    cdqe	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006d94	        0x4883c034	                           add rax, 0x34	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006d98	    0x448b24850000	                 mov r12d, dword [rax*4]	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006da0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006da3	            0x4898	                                    cdqe	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006da5	        0x4883c014	                           add rax, 0x14	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006da9	    0x488b1cc50000	                  mov rbx, qword [rax*8]	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006db1	      0xbf00000000	                              mov edi, 0	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006db6	      0xe800000000	                          call 0x4006dbb	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006dbb	          0x4889c2	                            mov rdx, rax	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006dbe	    0x488b05000000	            mov rax, qword [0x04006dc5] 	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006dc5	        0x4883c07c	                           add rax, 0x7c	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006dc9	          0x4829c2	                            sub rdx, rax	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006dcc	          0x4889d0	                            mov rax, rdx	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006dcf	            0x89c6	                            mov esi, eax	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006dd1	    0x488b05000000	            mov rax, qword [0x04006dd8] 	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006dd8	          0x4589e1	                           mov r9d, r12d	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006ddb	    0x41b800000000	                              mov r8d, 0	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006de1	          0x4889d9	                            mov rcx, rbx	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006de4	      0xba00000000	                              mov edx, 0	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006de9	          0x4889c7	                            mov rdi, rax	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006dec	      0xe800000000	                          call 0x4006df1	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x4006df1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4959	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006df4	            0x4898	                                    cdqe	      4959	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006df6	        0x4883c00e	                            add rax, 0xe	      4959	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006dfa	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4959	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e02	          0x83e2fe	                     and edx, 0xfffffffe	      4959	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e05	    0x8814c5000000	                    mov byte [rax*8], dl	      4959	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e0c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4960	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e0f	            0x4898	                                    cdqe	      4960	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e11	        0x4883c00e	                            add rax, 0xe	      4960	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e15	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4960	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e1d	          0x83e2fd	                     and edx, 0xfffffffd	      4960	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e20	    0x8814c5000000	                    mov byte [rax*8], dl	      4960	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e27	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4961	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e2a	            0x4898	                                    cdqe	      4961	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e2c	        0x4883c00e	                            add rax, 0xe	      4961	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e30	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4961	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e38	          0x83e2fb	                     and edx, 0xfffffffb	      4961	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e3b	    0x8814c5000000	                    mov byte [rax*8], dl	      4961	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e42	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4962	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e45	            0x4898	                                    cdqe	      4962	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e47	        0x4883c00e	                            add rax, 0xe	      4962	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e4b	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4962	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e53	          0x83e2f7	                     and edx, 0xfffffff7	      4962	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e56	    0x8814c5000000	                    mov byte [rax*8], dl	      4962	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e5d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e60	            0x4898	                                    cdqe	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e62	        0x4883c00e	                            add rax, 0xe	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e66	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e6e	          0x83e2ef	                     and edx, 0xffffffef	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e71	    0x8814c5000000	                    mov byte [rax*8], dl	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e78	            0xeb1b	                           jmp 0x4006e95	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x4006e7a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4967	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_3
0x4006e7d	            0x4898	                                    cdqe	      4967	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_3
0x4006e7f	        0x4883c00e	                            add rax, 0xe	      4967	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_3
0x4006e83	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4967	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_3
0x4006e8b	          0x83e2ef	                     and edx, 0xffffffef	      4967	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_3
0x4006e8e	    0x8814c5000000	                    mov byte [rax*8], dl	      4967	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_3
0x4006e95	        0x836de401	               sub dword [rbp - 0x1c], 1	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x4006e99	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x4006e9d	     0xf89bafbffff	                           jns 0x4006a5d	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x4006ea3	              0x90	                                     nop	      4969	tc-i386.c	FUNCTION_74	ELSE_3
0x4006ea4	        0x4883c410	                           add rsp, 0x10	      4969	tc-i386.c	FUNCTION_74	ELSE_3
0x4006ea8	              0x5b	                                 pop rbx	      4969	tc-i386.c	FUNCTION_74	ELSE_3
0x4006ea9	            0x415c	                                 pop r12	      4969	tc-i386.c	FUNCTION_74	ELSE_3
0x4006eab	              0x5d	                                 pop rbp	      4969	tc-i386.c	FUNCTION_74	ELSE_3
0x4006eac	              0xc3	                                     ret	      4969	tc-i386.c	FUNCTION_74	ELSE_3
set_check	CALL,11:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,5:ELSE,5:DO,0	89
0x4002024	              0x55	                                push rbp	      2501	tc-i386.c	FUNCTION_47
0x4002025	          0x4889e5	                            mov rbp, rsp	      2501	tc-i386.c	FUNCTION_47
0x4002028	        0x4883ec40	                           sub rsp, 0x40	      2501	tc-i386.c	FUNCTION_47
0x400202c	          0x897dcc	             mov dword [rbp - 0x34], edi	      2501	tc-i386.c	FUNCTION_47
0x400202f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2501	tc-i386.c	FUNCTION_47
0x4002038	        0x488945f8	                mov qword [rbp - 8], rax	      2501	tc-i386.c	FUNCTION_47
0x400203c	            0x31c0	                            xor eax, eax	      2501	tc-i386.c	FUNCTION_47
0x400203e	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2505	tc-i386.c	FUNCTION_47	IF_1
0x4002042	            0x7412	                            je 0x4002056	      2505	tc-i386.c	FUNCTION_47	IF_1
0x4002044	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2507	tc-i386.c	FUNCTION_47	IF_1
0x400204c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2508	tc-i386.c	FUNCTION_47	IF_1
0x4002054	            0xeb10	                           jmp 0x4002066	      2508	tc-i386.c	FUNCTION_47	IF_1
0x4002056	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2512	tc-i386.c	FUNCTION_47	ELSE_1
0x400205e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2513	tc-i386.c	FUNCTION_47	ELSE_1
0x4002066	    0x488b05000000	            mov rax, qword [0x0400206d] 	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x400206d	           0xfb600	                   movzx eax, byte [rax]	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4002070	            0x3c20	                            cmp al, 0x20	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4002072	            0x7512	                           jne 0x4002086	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4002074	    0x488b05000000	            mov rax, qword [0x0400207b] 	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x400207b	        0x4883c001	                              add rax, 1	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x400207f	    0x488905000000	            mov qword [0x04002086], rax 	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4002086	    0x488b05000000	            mov rax, qword [0x0400208d] 	      2518	tc-i386.c	FUNCTION_47	IF_2
0x400208d	           0xfb600	                   movzx eax, byte [rax]	      2518	tc-i386.c	FUNCTION_47	IF_2
0x4002090	           0xfb6c0	                           movzx eax, al	      2518	tc-i386.c	FUNCTION_47	IF_2
0x4002093	            0x4898	                                    cdqe	      2518	tc-i386.c	FUNCTION_47	IF_2
0x4002095	     0xfb680000000	                   movzx eax, byte [rax]	      2518	tc-i386.c	FUNCTION_47	IF_2
0x400209c	            0x84c0	                             test al, al	      2518	tc-i386.c	FUNCTION_47	IF_2
0x400209e	     0xf85a5000000	                           jne 0x4002149	      2518	tc-i386.c	FUNCTION_47	IF_2
0x40020a4	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2521	tc-i386.c	FUNCTION_47	IF_2	CALL_2
0x40020a8	          0x4889c7	                            mov rdi, rax	      2521	tc-i386.c	FUNCTION_47	IF_2	CALL_2
0x40020ab	      0xe800000000	                          call 0x40020b0	      2521	tc-i386.c	FUNCTION_47	IF_2	CALL_2
0x40020b0	           0xfbec0	                           movsx eax, al	      2521	tc-i386.c	FUNCTION_47	IF_2	CALL_2
0x40020b3	          0x8945dc	             mov dword [rbp - 0x24], eax	      2521	tc-i386.c	FUNCTION_47	IF_2	CALL_2
0x40020b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40020ba	      0xbe00000000	                              mov esi, 0	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40020bf	          0x4889c7	                            mov rdi, rax	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40020c2	      0xe800000000	                          call 0x40020c7	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40020c7	            0x85c0	                           test eax, eax	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40020c9	            0x750c	                           jne 0x40020d7	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40020cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2524	tc-i386.c	FUNCTION_47	IF_2	IF_3
0x40020cf	    0xc70000000000	                      mov dword [rax], 0	      2524	tc-i386.c	FUNCTION_47	IF_2	IF_3
0x40020d5	            0xeb63	                           jmp 0x400213a	      2524	tc-i386.c	FUNCTION_47	IF_2	IF_3
0x40020d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40020db	      0xbe00000000	                              mov esi, 0	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40020e0	          0x4889c7	                            mov rdi, rax	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40020e3	      0xe800000000	                          call 0x40020e8	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40020e8	            0x85c0	                           test eax, eax	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40020ea	            0x750c	                           jne 0x40020f8	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40020ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2526	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4
0x40020f0	    0xc70001000000	                      mov dword [rax], 1	      2526	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4
0x40020f6	            0xeb42	                           jmp 0x400213a	      2526	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4
0x40020f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x40020fc	      0xbe00000000	                              mov esi, 0	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x4002101	          0x4889c7	                            mov rdi, rax	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x4002104	      0xe800000000	                          call 0x4002109	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x4002109	            0x85c0	                           test eax, eax	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x400210b	            0x750c	                           jne 0x4002119	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x400210d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2528	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5
0x4002111	    0xc70002000000	                      mov dword [rax], 2	      2528	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5
0x4002117	            0xeb21	                           jmp 0x400213a	      2528	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5
0x4002119	      0xbf00000000	                              mov edi, 0	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x400211e	      0xe800000000	                          call 0x4002123	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4002123	          0x4889c2	                            mov rdx, rax	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4002126	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x400212a	          0x4889c6	                            mov rsi, rax	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x400212d	          0x4889d7	                            mov rdi, rdx	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4002130	      0xb800000000	                              mov eax, 0	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4002135	      0xe800000000	                          call 0x400213a	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x400213a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x400213d	           0xfbec0	                           movsx eax, al	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x4002140	            0x89c7	                            mov edi, eax	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x4002142	      0xe800000000	                          call 0x4002147	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x4002147	            0xeb21	                           jmp 0x400216a	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x4002149	      0xbf00000000	                              mov edi, 0	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x400214e	      0xe800000000	                          call 0x4002153	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x4002153	          0x4889c2	                            mov rdx, rax	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x4002156	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x400215a	          0x4889c6	                            mov rsi, rax	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x400215d	          0x4889d7	                            mov rdi, rdx	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x4002160	      0xb800000000	                              mov eax, 0	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x4002165	      0xe800000000	                          call 0x400216a	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x400216a	      0xe800000000	                          call 0x400216f	      2536	tc-i386.c	FUNCTION_47	CALL_11
0x400216f	              0x90	                                     nop	      2537	tc-i386.c	FUNCTION_47
0x4002170	        0x488b45f8	                mov rax, qword [rbp - 8]	      2537	tc-i386.c	FUNCTION_47
0x4002174	    0x644833042528	                xor rax, qword fs:[0x28]	      2537	tc-i386.c	FUNCTION_47
0x400217d	            0x7405	                            je 0x4002184	      2537	tc-i386.c	FUNCTION_47
0x400217f	      0xe800000000	                          call 0x4002184	      2537	tc-i386.c	FUNCTION_47
0x4002184	              0xc9	                                   leave	      2537	tc-i386.c	FUNCTION_47
0x4002185	              0xc3	                                     ret	      2537	tc-i386.c	FUNCTION_47
swap_operands	CALL,3:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,1:ELSE,0:DO,0	38
0x40063b4	              0x55	                                push rbp	      4718	tc-i386.c	FUNCTION_72
0x40063b5	          0x4889e5	                            mov rbp, rsp	      4718	tc-i386.c	FUNCTION_72
0x40063b8	        0x4883ec10	                           sub rsp, 0x10	      4718	tc-i386.c	FUNCTION_72
0x40063bc	    0x8b0500000000	            mov eax, dword [0x040063c2] 	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40063c2	          0x83f802	                              cmp eax, 2	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40063c5	            0x7242	                            jb 0x4006409	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40063c7	          0x83f803	                              cmp eax, 3	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40063ca	            0x761a	                           jbe 0x40063e6	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40063cc	          0x83f805	                              cmp eax, 5	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40063cf	            0x7738	                            ja 0x4006409	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40063d1	    0x8b0500000000	            mov eax, dword [0x040063d7] 	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x40063d7	          0x83e802	                              sub eax, 2	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x40063da	            0x89c6	                            mov esi, eax	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x40063dc	      0xbf01000000	                              mov edi, 1	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x40063e1	      0xe8e9fdffff	                call sym.swap_2_operands	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x40063e6	    0x8b0500000000	            mov eax, dword [0x040063ec] 	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x40063ec	          0x83e801	                              sub eax, 1	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x40063ef	            0x89c6	                            mov esi, eax	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x40063f1	      0xbf00000000	                              mov edi, 0	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x40063f6	      0xe8d4fdffff	                call sym.swap_2_operands	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x40063fb	              0x90	                                     nop	      4728	tc-i386.c	FUNCTION_72	SWITCH_1
0x40063fc	    0x8b0500000000	            mov eax, dword [0x04006402] 	      4733	tc-i386.c	FUNCTION_72	IF_1
0x4006402	          0x83f802	                              cmp eax, 2	      4733	tc-i386.c	FUNCTION_72	IF_1
0x4006405	            0x753a	                           jne 0x4006441	      4733	tc-i386.c	FUNCTION_72	IF_1
0x4006407	            0xeb14	                           jmp 0x400641d	      4733	tc-i386.c	FUNCTION_72	IF_1
0x4006409	      0xba00000000	                              mov edx, 0	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x400640e	      0xbe7a120000	                         mov esi, 0x127a	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x4006413	      0xbf00000000	                              mov edi, 0	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x4006418	      0xe800000000	                          call 0x400641d	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x400641d	    0x488b05000000	            mov rax, qword [0x04006424] 	      4736	tc-i386.c	FUNCTION_72	IF_1
0x4006424	        0x488945f8	                mov qword [rbp - 8], rax	      4736	tc-i386.c	FUNCTION_72	IF_1
0x4006428	    0x488b05000000	            mov rax, qword [0x0400642f] 	      4737	tc-i386.c	FUNCTION_72	IF_1
0x400642f	    0x488905000000	            mov qword [0x04006436], rax 	      4737	tc-i386.c	FUNCTION_72	IF_1
0x4006436	        0x488b45f8	                mov rax, qword [rbp - 8]	      4738	tc-i386.c	FUNCTION_72	IF_1
0x400643a	    0x488905000000	            mov qword [0x04006441], rax 	      4738	tc-i386.c	FUNCTION_72	IF_1
0x4006441	              0x90	                                     nop	      4740	tc-i386.c	FUNCTION_72
0x4006442	              0xc9	                                   leave	      4740	tc-i386.c	FUNCTION_72
0x4006443	              0xc3	                                     ret	      4740	tc-i386.c	FUNCTION_72
match_reg_size	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	82
0x4000c6b	              0x55	                                push rbp	      1909	tc-i386.c	FUNCTION_22
0x4000c6c	          0x4889e5	                            mov rbp, rsp	      1909	tc-i386.c	FUNCTION_22
0x4000c6f	        0x48897df8	                mov qword [rbp - 8], rdi	      1909	tc-i386.c	FUNCTION_22
0x4000c73	          0x8975f4	              mov dword [rbp - 0xc], esi	      1909	tc-i386.c	FUNCTION_22
0x4000c76	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1910	tc-i386.c	FUNCTION_22
0x4000c79	        0x4883c00e	                            add rax, 0xe	      1910	tc-i386.c	FUNCTION_22
0x4000c7d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1910	tc-i386.c	FUNCTION_22
0x4000c85	          0xc0e805	                               shr al, 5	      1910	tc-i386.c	FUNCTION_22
0x4000c88	          0x83e001	                              and eax, 1	      1910	tc-i386.c	FUNCTION_22
0x4000c8b	            0x84c0	                             test al, al	      1910	tc-i386.c	FUNCTION_22
0x4000c8d	            0x741e	                            je 0x4000cad	      1910	tc-i386.c	FUNCTION_22
0x4000c8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1911	tc-i386.c	FUNCTION_22
0x4000c93	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1911	tc-i386.c	FUNCTION_22
0x4000c96	        0x4883c206	                              add rdx, 6	      1911	tc-i386.c	FUNCTION_22
0x4000c9a	       0xfb644d007	      movzx eax, byte [rax + rdx*8 + 7] 	      1911	tc-i386.c	FUNCTION_22
0x4000c9f	          0xc0e805	                               shr al, 5	      1911	tc-i386.c	FUNCTION_22
0x4000ca2	          0x83e001	                              and eax, 1	      1911	tc-i386.c	FUNCTION_22
0x4000ca5	            0x84c0	                             test al, al	      1911	tc-i386.c	FUNCTION_22
0x4000ca7	     0xf84cf000000	                            je 0x4000d7c	      1911	tc-i386.c	FUNCTION_22
0x4000cad	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1912	tc-i386.c	FUNCTION_22
0x4000cb0	        0x4883c00e	                            add rax, 0xe	      1912	tc-i386.c	FUNCTION_22
0x4000cb4	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1912	tc-i386.c	FUNCTION_22
0x4000cbc	          0xc0e806	                               shr al, 6	      1912	tc-i386.c	FUNCTION_22
0x4000cbf	          0x83e001	                              and eax, 1	      1912	tc-i386.c	FUNCTION_22
0x4000cc2	            0x84c0	                             test al, al	      1912	tc-i386.c	FUNCTION_22
0x4000cc4	            0x741e	                            je 0x4000ce4	      1912	tc-i386.c	FUNCTION_22
0x4000cc6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1913	tc-i386.c	FUNCTION_22
0x4000cca	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1913	tc-i386.c	FUNCTION_22
0x4000ccd	        0x4883c206	                              add rdx, 6	      1913	tc-i386.c	FUNCTION_22
0x4000cd1	       0xfb644d007	      movzx eax, byte [rax + rdx*8 + 7] 	      1913	tc-i386.c	FUNCTION_22
0x4000cd6	          0xc0e806	                               shr al, 6	      1913	tc-i386.c	FUNCTION_22
0x4000cd9	          0x83e001	                              and eax, 1	      1913	tc-i386.c	FUNCTION_22
0x4000cdc	            0x84c0	                             test al, al	      1913	tc-i386.c	FUNCTION_22
0x4000cde	     0xf8498000000	                            je 0x4000d7c	      1913	tc-i386.c	FUNCTION_22
0x4000ce4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1914	tc-i386.c	FUNCTION_22
0x4000ce7	        0x4883c00e	                            add rax, 0xe	      1914	tc-i386.c	FUNCTION_22
0x4000ceb	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1914	tc-i386.c	FUNCTION_22
0x4000cf3	          0xc0e807	                               shr al, 7	      1914	tc-i386.c	FUNCTION_22
0x4000cf6	            0x84c0	                             test al, al	      1914	tc-i386.c	FUNCTION_22
0x4000cf8	            0x7417	                            je 0x4000d11	      1914	tc-i386.c	FUNCTION_22
0x4000cfa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1915	tc-i386.c	FUNCTION_22
0x4000cfe	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1915	tc-i386.c	FUNCTION_22
0x4000d01	        0x4883c206	                              add rdx, 6	      1915	tc-i386.c	FUNCTION_22
0x4000d05	       0xfb644d007	      movzx eax, byte [rax + rdx*8 + 7] 	      1915	tc-i386.c	FUNCTION_22
0x4000d0a	          0xc0e807	                               shr al, 7	      1915	tc-i386.c	FUNCTION_22
0x4000d0d	            0x84c0	                             test al, al	      1915	tc-i386.c	FUNCTION_22
0x4000d0f	            0x746b	                            je 0x4000d7c	      1915	tc-i386.c	FUNCTION_22
0x4000d11	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1916	tc-i386.c	FUNCTION_22
0x4000d14	        0x4883c00e	                            add rax, 0xe	      1916	tc-i386.c	FUNCTION_22
0x4000d18	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1916	tc-i386.c	FUNCTION_22
0x4000d20	            0xd0e8	                               shr al, 1	      1916	tc-i386.c	FUNCTION_22
0x4000d22	          0x83e001	                              and eax, 1	      1916	tc-i386.c	FUNCTION_22
0x4000d25	            0x84c0	                             test al, al	      1916	tc-i386.c	FUNCTION_22
0x4000d27	            0x7419	                            je 0x4000d42	      1916	tc-i386.c	FUNCTION_22
0x4000d29	        0x488b45f8	                mov rax, qword [rbp - 8]	      1917	tc-i386.c	FUNCTION_22
0x4000d2d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1917	tc-i386.c	FUNCTION_22
0x4000d30	        0x4883c206	                              add rdx, 6	      1917	tc-i386.c	FUNCTION_22
0x4000d34	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      1917	tc-i386.c	FUNCTION_22
0x4000d39	            0xd0e8	                               shr al, 1	      1917	tc-i386.c	FUNCTION_22
0x4000d3b	          0x83e001	                              and eax, 1	      1917	tc-i386.c	FUNCTION_22
0x4000d3e	            0x84c0	                             test al, al	      1917	tc-i386.c	FUNCTION_22
0x4000d40	            0x743a	                            je 0x4000d7c	      1917	tc-i386.c	FUNCTION_22
0x4000d42	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1918	tc-i386.c	FUNCTION_22
0x4000d45	        0x4883c00e	                            add rax, 0xe	      1918	tc-i386.c	FUNCTION_22
0x4000d49	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1918	tc-i386.c	FUNCTION_22
0x4000d51	          0xc0e802	                               shr al, 2	      1918	tc-i386.c	FUNCTION_22
0x4000d54	          0x83e001	                              and eax, 1	      1918	tc-i386.c	FUNCTION_22
0x4000d57	            0x84c0	                             test al, al	      1910	tc-i386.c	FUNCTION_22
0x4000d59	            0x741a	                            je 0x4000d75	      1910	tc-i386.c	FUNCTION_22
0x4000d5b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1919	tc-i386.c	FUNCTION_22
0x4000d5f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1919	tc-i386.c	FUNCTION_22
0x4000d62	        0x4883c206	                              add rdx, 6	      1919	tc-i386.c	FUNCTION_22
0x4000d66	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      1919	tc-i386.c	FUNCTION_22
0x4000d6b	          0xc0e802	                               shr al, 2	      1919	tc-i386.c	FUNCTION_22
0x4000d6e	          0x83e001	                              and eax, 1	      1919	tc-i386.c	FUNCTION_22
0x4000d71	            0x84c0	                             test al, al	      1919	tc-i386.c	FUNCTION_22
0x4000d73	            0x7407	                            je 0x4000d7c	      1919	tc-i386.c	FUNCTION_22
0x4000d75	      0xb801000000	                              mov eax, 1	      1910	tc-i386.c	FUNCTION_22
0x4000d7a	            0xeb05	                           jmp 0x4000d81	      1910	tc-i386.c	FUNCTION_22
0x4000d7c	      0xb800000000	                              mov eax, 0	      1910	tc-i386.c	FUNCTION_22
0x4000d81	              0x5d	                                 pop rbp	      1920	tc-i386.c	FUNCTION_22
0x4000d82	              0xc3	                                     ret	      1920	tc-i386.c	FUNCTION_22
fits_in_signed_word	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	10
0x40016f3	              0x55	                                push rbp	      2167	tc-i386.c	FUNCTION_33
0x40016f4	          0x4889e5	                            mov rbp, rsp	      2167	tc-i386.c	FUNCTION_33
0x40016f7	        0x48897df8	                mov qword [rbp - 8], rdi	      2167	tc-i386.c	FUNCTION_33
0x40016fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2168	tc-i386.c	FUNCTION_33
0x40016ff	    0x480500800000	                         add rax, 0x8000	      2168	tc-i386.c	FUNCTION_33
0x4001705	    0x483dffff0000	                         cmp rax, 0xffff	      2168	tc-i386.c	FUNCTION_33
0x400170b	           0xf96c0	                                setbe al	      2168	tc-i386.c	FUNCTION_33
0x400170e	           0xfb6c0	                           movzx eax, al	      2168	tc-i386.c	FUNCTION_33
0x4001711	              0x5d	                                 pop rbp	      2169	tc-i386.c	FUNCTION_33
0x4001712	              0xc3	                                     ret	      2169	tc-i386.c	FUNCTION_33
i386_arch	CALL,6:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,6:ELSE,3:DO,0	44
0x400289b	              0x55	                                push rbp	      2712	tc-i386.c	FUNCTION_50
0x400289c	          0x4889e5	                            mov rbp, rsp	      2712	tc-i386.c	FUNCTION_50
0x400289f	    0x8b0500000000	            mov eax, dword [0x040028a5] 	      2713	tc-i386.c	FUNCTION_50	IF_1
0x40028a5	          0x83f80a	                            cmp eax, 0xa	      2713	tc-i386.c	FUNCTION_50	IF_1
0x40028a8	            0x7529	                           jne 0x40028d3	      2713	tc-i386.c	FUNCTION_50	IF_1
0x40028aa	    0x8b0500000000	            mov eax, dword [0x040028b0] 	      2716	tc-i386.c	FUNCTION_50	IF_1	IF_2
0x40028b0	          0x83f802	                              cmp eax, 2	      2715	tc-i386.c	FUNCTION_50	IF_1	IF_2
0x40028b3	            0x7417	                            je 0x40028cc	      2715	tc-i386.c	FUNCTION_50	IF_1	IF_2
0x40028b5	      0xbf00000000	                              mov edi, 0	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x40028ba	      0xe800000000	                          call 0x40028bf	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x40028bf	          0x4889c7	                            mov rdi, rax	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x40028c2	      0xb800000000	                              mov eax, 0	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x40028c7	      0xe800000000	                          call 0x40028cc	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x40028cc	      0xb809000000	                              mov eax, 9	      2718	tc-i386.c	FUNCTION_50	IF_1
0x40028d1	            0xeb6d	                           jmp 0x4002940	      2718	tc-i386.c	FUNCTION_50	IF_1
0x40028d3	    0x8b0500000000	            mov eax, dword [0x040028d9] 	      2720	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x40028d9	          0x83f80b	                            cmp eax, 0xb	      2720	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x40028dc	            0x7529	                           jne 0x4002907	      2720	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x40028de	    0x8b0500000000	            mov eax, dword [0x040028e4] 	      2723	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	IF_4
0x40028e4	          0x83f802	                              cmp eax, 2	      2722	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	IF_4
0x40028e7	            0x7417	                            je 0x4002900	      2722	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	IF_4
0x40028e9	      0xbf00000000	                              mov edi, 0	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x40028ee	      0xe800000000	                          call 0x40028f3	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x40028f3	          0x4889c7	                            mov rdi, rax	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x40028f6	      0xb800000000	                              mov eax, 0	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x40028fb	      0xe800000000	                          call 0x4002900	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x4002900	      0xb80a000000	                            mov eax, 0xa	      2725	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x4002905	            0xeb39	                           jmp 0x4002940	      2725	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x4002907	    0x8b0500000000	            mov eax, dword [0x0400290d] 	      2727	tc-i386.c	FUNCTION_50	ELSE_2	IF_5
0x400290d	          0x83f80c	                            cmp eax, 0xc	      2727	tc-i386.c	FUNCTION_50	ELSE_2	IF_5
0x4002910	            0x7529	                           jne 0x400293b	      2727	tc-i386.c	FUNCTION_50	ELSE_2	IF_5
0x4002912	    0x8b0500000000	            mov eax, dword [0x04002918] 	      2730	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	IF_6
0x4002918	          0x83f802	                              cmp eax, 2	      2729	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	IF_6
0x400291b	            0x7517	                           jne 0x4002934	      2729	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	IF_6
0x400291d	      0xbf00000000	                              mov edi, 0	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x4002922	      0xe800000000	                          call 0x4002927	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x4002927	          0x4889c7	                            mov rdi, rax	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x400292a	      0xb800000000	                              mov eax, 0	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x400292f	      0xe800000000	                          call 0x4002934	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x4002934	      0xb80b000000	                            mov eax, 0xb	      2732	tc-i386.c	FUNCTION_50	ELSE_2	IF_5
0x4002939	            0xeb05	                           jmp 0x4002940	      2732	tc-i386.c	FUNCTION_50	ELSE_2	IF_5
0x400293b	      0xb808000000	                              mov eax, 8	      2735	tc-i386.c	FUNCTION_50	ELSE_3
0x4002940	              0x5d	                                 pop rbp	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x4002941	              0xc3	                                     ret	      2736	tc-i386.c	FUNCTION_50	ELSE_3
i386_immediate	CALL,10:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,8:ELSE,0:DO,0	130
0x400eb13	              0x55	                                push rbp	      8641	tc-i386.c	FUNCTION_103
0x400eb14	          0x4889e5	                            mov rbp, rsp	      8641	tc-i386.c	FUNCTION_103
0x400eb17	              0x53	                                push rbx	      8641	tc-i386.c	FUNCTION_103
0x400eb18	        0x4883ec48	                           sub rsp, 0x48	      8641	tc-i386.c	FUNCTION_103
0x400eb1c	        0x48897db8	             mov qword [rbp - 0x48], rdi	      8641	tc-i386.c	FUNCTION_103
0x400eb20	    0x64488b042528	                mov rax, qword fs:[0x28]	      8641	tc-i386.c	FUNCTION_103
0x400eb29	        0x488945e8	             mov qword [rbp - 0x18], rax	      8641	tc-i386.c	FUNCTION_103
0x400eb2d	            0x31c0	                            xor eax, eax	      8641	tc-i386.c	FUNCTION_103
0x400eb2f	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      8644	tc-i386.c	FUNCTION_103
0x400eb37	        0x488d45e0	                   lea rax, [rbp - 0x20]	      8648	tc-i386.c	FUNCTION_103	CALL_1
0x400eb3b	      0xbeffffffff	                     mov esi, 0xffffffff	      8648	tc-i386.c	FUNCTION_103	CALL_1
0x400eb40	          0x4889c7	                            mov rdi, rax	      8648	tc-i386.c	FUNCTION_103	CALL_1
0x400eb43	      0xe8b919ffff	               call sym.operand_type_set	      8648	tc-i386.c	FUNCTION_103	CALL_1
0x400eb48	    0x8b0500000000	            mov eax, dword [0x0400eb4e] 	      8650	tc-i386.c	FUNCTION_103	IF_1
0x400eb4e	          0x83f802	                              cmp eax, 2	      8650	tc-i386.c	FUNCTION_103	IF_1
0x400eb51	            0x7526	                           jne 0x400eb79	      8650	tc-i386.c	FUNCTION_103	IF_1
0x400eb53	      0xbf00000000	                              mov edi, 0	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x400eb58	      0xe800000000	                          call 0x400eb5d	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x400eb5d	      0xbe02000000	                              mov esi, 2	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x400eb62	          0x4889c7	                            mov rdi, rax	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x400eb65	      0xb800000000	                              mov eax, 0	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x400eb6a	      0xe800000000	                          call 0x400eb6f	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x400eb6f	      0xb800000000	                              mov eax, 0	      8654	tc-i386.c	FUNCTION_103	IF_1
0x400eb74	      0xe99f010000	                           jmp 0x400ed18	      8654	tc-i386.c	FUNCTION_103	IF_1
0x400eb79	    0x8b0500000000	            mov eax, dword [0x0400eb7f] 	      8657	tc-i386.c	FUNCTION_103
0x400eb7f	          0x8d5001	                      lea edx, [rax + 1]	      8657	tc-i386.c	FUNCTION_103
0x400eb82	    0x891500000000	            mov dword [0x0400eb88], edx 	      8657	tc-i386.c	FUNCTION_103
0x400eb88	            0x89c0	                            mov eax, eax	      8657	tc-i386.c	FUNCTION_103
0x400eb8a	        0x48c1e005	                              shl rax, 5	      8657	tc-i386.c	FUNCTION_103
0x400eb8e	    0x480500000000	                              add rax, 0	      8657	tc-i386.c	FUNCTION_103
0x400eb94	        0x488945c8	             mov qword [rbp - 0x38], rax	      8657	tc-i386.c	FUNCTION_103
0x400eb98	    0x8b0500000000	            mov eax, dword [0x0400eb9e] 	      8658	tc-i386.c	FUNCTION_103
0x400eb9e	            0x4898	                                    cdqe	      8658	tc-i386.c	FUNCTION_103
0x400eba0	        0x488d5014	                   lea rdx, [rax + 0x14]	      8658	tc-i386.c	FUNCTION_103
0x400eba4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8658	tc-i386.c	FUNCTION_103
0x400eba8	    0x488904d50000	                  mov qword [rdx*8], rax	      8658	tc-i386.c	FUNCTION_103
0x400ebb0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8660	tc-i386.c	FUNCTION_103	IF_2
0x400ebb4	           0xfb600	                   movzx eax, byte [rax]	      8660	tc-i386.c	FUNCTION_103	IF_2
0x400ebb7	            0x3c20	                            cmp al, 0x20	      8660	tc-i386.c	FUNCTION_103	IF_2
0x400ebb9	            0x7505	                           jne 0x400ebc0	      8660	tc-i386.c	FUNCTION_103	IF_2
0x400ebbb	      0x488345b801	               add qword [rbp - 0x48], 1	      8661	tc-i386.c	FUNCTION_103	IF_2
0x400ebc0	    0x488b05000000	            mov rax, qword [0x0400ebc7] 	      8663	tc-i386.c	FUNCTION_103
0x400ebc7	        0x488945d0	             mov qword [rbp - 0x30], rax	      8663	tc-i386.c	FUNCTION_103
0x400ebcb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8664	tc-i386.c	FUNCTION_103
0x400ebcf	    0x488905000000	            mov qword [0x0400ebd6], rax 	      8664	tc-i386.c	FUNCTION_103
0x400ebd6	    0x8b0500000000	            mov eax, dword [0x0400ebdc] 	      8666	tc-i386.c	FUNCTION_103
0x400ebdc	            0x4898	                                    cdqe	      8666	tc-i386.c	FUNCTION_103
0x400ebde	        0x4883c034	                           add rax, 0x34	      8666	tc-i386.c	FUNCTION_103
0x400ebe2	        0x48c1e002	                              shl rax, 2	      8666	tc-i386.c	FUNCTION_103
0x400ebe6	    0x480500000000	                              add rax, 0	      8666	tc-i386.c	FUNCTION_103
0x400ebec	        0x488d480c	                    lea rcx, [rax + 0xc]	      8666	tc-i386.c	FUNCTION_103
0x400ebf0	        0x488d45e0	                   lea rax, [rbp - 0x20]	      8666	tc-i386.c	FUNCTION_103
0x400ebf4	          0x4889c2	                            mov rdx, rax	      8666	tc-i386.c	FUNCTION_103
0x400ebf7	      0xbe00000000	                              mov esi, 0	      8666	tc-i386.c	FUNCTION_103
0x400ebfc	          0x4889cf	                            mov rdi, rcx	      8666	tc-i386.c	FUNCTION_103
0x400ebff	      0xe806f6ffff	                        call sym.lex_got	      8666	tc-i386.c	FUNCTION_103
0x400ec04	        0x488945d8	             mov qword [rbp - 0x28], rax	      8666	tc-i386.c	FUNCTION_103
0x400ec08	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      8667	tc-i386.c	FUNCTION_103	IF_3
0x400ec0d	            0x740b	                            je 0x400ec1a	      8667	tc-i386.c	FUNCTION_103	IF_3
0x400ec0f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8668	tc-i386.c	FUNCTION_103	IF_3
0x400ec13	    0x488905000000	            mov qword [0x0400ec1a], rax 	      8668	tc-i386.c	FUNCTION_103	IF_3
0x400ec1a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x400ec1e	      0xba01000000	                              mov edx, 1	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x400ec23	          0x4889c6	                            mov rsi, rax	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x400ec26	      0xbf00000000	                              mov edi, 0	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x400ec2b	      0xe800000000	                          call 0x400ec30	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x400ec30	        0x488945c0	             mov qword [rbp - 0x40], rax	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x400ec34	    0x488b05000000	            mov rax, qword [0x0400ec3b] 	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400ec3b	           0xfb600	                   movzx eax, byte [rax]	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400ec3e	            0x3c20	                            cmp al, 0x20	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400ec40	            0x7512	                           jne 0x400ec54	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400ec42	    0x488b05000000	            mov rax, qword [0x0400ec49] 	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400ec49	        0x4883c001	                              add rax, 1	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400ec4d	    0x488905000000	            mov qword [0x0400ec54], rax 	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400ec54	    0x488b05000000	            mov rax, qword [0x0400ec5b] 	      8675	tc-i386.c	FUNCTION_103	IF_4
0x400ec5b	           0xfb600	                   movzx eax, byte [rax]	      8675	tc-i386.c	FUNCTION_103	IF_4
0x400ec5e	            0x3c7b	                            cmp al, 0x7b	      8675	tc-i386.c	FUNCTION_103	IF_4
0x400ec60	            0x7531	                           jne 0x400ec93	      8675	tc-i386.c	FUNCTION_103	IF_4
0x400ec62	    0x488b05000000	            mov rax, qword [0x0400ec69] 	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x400ec69	      0xbe00000000	                              mov esi, 0	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x400ec6e	          0x4889c7	                            mov rdi, rax	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x400ec71	      0xe876faffff	            call sym.check_VecOperations	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x400ec76	    0x488905000000	            mov qword [0x0400ec7d], rax 	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x400ec7d	    0x488b05000000	            mov rax, qword [0x0400ec84] 	      8679	tc-i386.c	FUNCTION_103	IF_4	IF_5
0x400ec84	          0x4885c0	                           test rax, rax	      8679	tc-i386.c	FUNCTION_103	IF_4	IF_5
0x400ec87	            0x750a	                           jne 0x400ec93	      8679	tc-i386.c	FUNCTION_103	IF_4	IF_5
0x400ec89	      0xb800000000	                              mov eax, 0	      8680	tc-i386.c	FUNCTION_103	IF_4	IF_5
0x400ec8e	      0xe985000000	                           jmp 0x400ed18	      8680	tc-i386.c	FUNCTION_103	IF_4	IF_5
0x400ec93	    0x488b05000000	            mov rax, qword [0x0400ec9a] 	      8683	tc-i386.c	FUNCTION_103	IF_6
0x400ec9a	           0xfb600	                   movzx eax, byte [rax]	      8683	tc-i386.c	FUNCTION_103	IF_6
0x400ec9d	            0x84c0	                             test al, al	      8683	tc-i386.c	FUNCTION_103	IF_6
0x400ec9f	            0x7421	                            je 0x400ecc2	      8683	tc-i386.c	FUNCTION_103	IF_6
0x400eca1	    0x488b1d000000	            mov rbx, qword [0x0400eca8] 	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400eca8	      0xbf00000000	                              mov edi, 0	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400ecad	      0xe800000000	                          call 0x400ecb2	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400ecb2	          0x4889de	                            mov rsi, rbx	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400ecb5	          0x4889c7	                            mov rdi, rax	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400ecb8	      0xb800000000	                              mov eax, 0	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400ecbd	      0xe800000000	                          call 0x400ecc2	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400ecc2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8686	tc-i386.c	FUNCTION_103
0x400ecc6	    0x488905000000	            mov qword [0x0400eccd], rax 	      8686	tc-i386.c	FUNCTION_103
0x400eccd	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      8687	tc-i386.c	FUNCTION_103	IF_7
0x400ecd2	            0x742c	                            je 0x400ed00	      8687	tc-i386.c	FUNCTION_103	IF_7
0x400ecd4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8689	tc-i386.c	FUNCTION_103	IF_7	CALL_9
0x400ecd8	          0x4889c7	                            mov rdi, rax	      8689	tc-i386.c	FUNCTION_103	IF_7	CALL_9
0x400ecdb	      0xe800000000	                          call 0x400ece0	      8689	tc-i386.c	FUNCTION_103	IF_7	CALL_9
0x400ece0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400ece4	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400ece8	            0x3c02	                               cmp al, 2	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400ecea	            0x740c	                            je 0x400ecf8	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400ecec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400ecf0	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400ecf4	            0x3c05	                               cmp al, 5	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400ecf6	            0x7508	                           jne 0x400ed00	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400ecf8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8692	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400ecfc	        0xc6401800	                mov byte [rax + 0x18], 0	      8692	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400ed00	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x400ed04	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x400ed08	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x400ed0c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x400ed10	          0x4889c7	                            mov rdi, rax	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x400ed13	      0xe81b000000	        call sym.i386_finalize_immediate	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x400ed18	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      8696	tc-i386.c	FUNCTION_103
0x400ed1c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      8696	tc-i386.c	FUNCTION_103
0x400ed25	            0x7405	                            je 0x400ed2c	      8696	tc-i386.c	FUNCTION_103
0x400ed27	      0xe800000000	                          call 0x400ed2c	      8696	tc-i386.c	FUNCTION_103
0x400ed2c	        0x4883c448	                           add rsp, 0x48	      8696	tc-i386.c	FUNCTION_103
0x400ed30	              0x5b	                                 pop rbx	      8696	tc-i386.c	FUNCTION_103
0x400ed31	              0x5d	                                 pop rbp	      8696	tc-i386.c	FUNCTION_103
0x400ed32	              0xc3	                                     ret	      8696	tc-i386.c	FUNCTION_103
disp_size	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,3:ELSE,2:DO,0	32
0x400d7d1	              0x55	                                push rbp	      7818	tc-i386.c	FUNCTION_93
0x400d7d2	          0x4889e5	                            mov rbp, rsp	      7818	tc-i386.c	FUNCTION_93
0x400d7d5	          0x897dec	             mov dword [rbp - 0x14], edi	      7818	tc-i386.c	FUNCTION_93
0x400d7d8	    0xc745fc040000	                  mov dword [rbp - 4], 4	      7819	tc-i386.c	FUNCTION_93
0x400d7df	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400d7e2	        0x4883c00e	                            add rax, 0xe	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400d7e6	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400d7ee	          0xc0e804	                               shr al, 4	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400d7f1	          0x83e001	                              and eax, 1	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400d7f4	            0x84c0	                             test al, al	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400d7f6	            0x7409	                            je 0x400d801	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400d7f8	    0xc745fc080000	                  mov dword [rbp - 4], 8	      7822	tc-i386.c	FUNCTION_93	IF_1
0x400d7ff	            0xeb3e	                           jmp 0x400d83f	      7822	tc-i386.c	FUNCTION_93	IF_1
0x400d801	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400d804	        0x4883c00e	                            add rax, 0xe	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400d808	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400d810	          0x83e001	                              and eax, 1	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400d813	            0x84c0	                             test al, al	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400d815	            0x7409	                            je 0x400d820	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400d817	    0xc745fc010000	                  mov dword [rbp - 4], 1	      7824	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400d81e	            0xeb1f	                           jmp 0x400d83f	      7824	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400d820	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400d823	        0x4883c00e	                            add rax, 0xe	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400d827	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400d82f	            0xd0e8	                               shr al, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400d831	          0x83e001	                              and eax, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400d834	            0x84c0	                             test al, al	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400d836	            0x7407	                            je 0x400d83f	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400d838	    0xc745fc020000	                  mov dword [rbp - 4], 2	      7826	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400d83f	          0x8b45fc	                mov eax, dword [rbp - 4]	      7827	tc-i386.c	FUNCTION_93
0x400d842	              0x5d	                                 pop rbp	      7828	tc-i386.c	FUNCTION_93
0x400d843	              0xc3	                                     ret	      7828	tc-i386.c	FUNCTION_93
set_allow_index_reg	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	8
0x4002011	              0x55	                                push rbp	      2495	tc-i386.c	FUNCTION_46
0x4002012	          0x4889e5	                            mov rbp, rsp	      2495	tc-i386.c	FUNCTION_46
0x4002015	          0x897dfc	                mov dword [rbp - 4], edi	      2495	tc-i386.c	FUNCTION_46
0x4002018	          0x8b45fc	                mov eax, dword [rbp - 4]	      2496	tc-i386.c	FUNCTION_46
0x400201b	    0x890500000000	            mov dword [0x04002021], eax 	      2496	tc-i386.c	FUNCTION_46
0x4002021	              0x90	                                     nop	      2497	tc-i386.c	FUNCTION_46
0x4002022	              0x5d	                                 pop rbp	      2497	tc-i386.c	FUNCTION_46
0x4002023	              0xc3	                                     ret	      2497	tc-i386.c	FUNCTION_46
i386_print_statistics	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	17
0x4002e4b	              0x55	                                push rbp	      2918	tc-i386.c	FUNCTION_53
0x4002e4c	          0x4889e5	                            mov rbp, rsp	      2918	tc-i386.c	FUNCTION_53
0x4002e4f	        0x4883ec10	                           sub rsp, 0x10	      2918	tc-i386.c	FUNCTION_53
0x4002e53	        0x48897df8	                mov qword [rbp - 8], rdi	      2918	tc-i386.c	FUNCTION_53
0x4002e57	    0x488b15000000	            mov rdx, qword [0x04002e5e] 	      2919	tc-i386.c	FUNCTION_53	CALL_1
0x4002e5e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2919	tc-i386.c	FUNCTION_53	CALL_1
0x4002e62	      0xbe00000000	                              mov esi, 0	      2919	tc-i386.c	FUNCTION_53	CALL_1
0x4002e67	          0x4889c7	                            mov rdi, rax	      2919	tc-i386.c	FUNCTION_53	CALL_1
0x4002e6a	      0xe800000000	                          call 0x4002e6f	      2919	tc-i386.c	FUNCTION_53	CALL_1
0x4002e6f	    0x488b15000000	            mov rdx, qword [0x04002e76] 	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x4002e76	        0x488b45f8	                mov rax, qword [rbp - 8]	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x4002e7a	      0xbe00000000	                              mov esi, 0	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x4002e7f	          0x4889c7	                            mov rdi, rax	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x4002e82	      0xe800000000	                          call 0x4002e87	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x4002e87	              0x90	                                     nop	      2921	tc-i386.c	FUNCTION_53
0x4002e88	              0xc9	                                   leave	      2921	tc-i386.c	FUNCTION_53
0x4002e89	              0xc3	                                     ret	      2921	tc-i386.c	FUNCTION_53
fits_in_signed_byte	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	10
0x40016a5	              0x55	                                push rbp	      2149	tc-i386.c	ELSE_2	FUNCTION_30
0x40016a6	          0x4889e5	                            mov rbp, rsp	      2149	tc-i386.c	ELSE_2	FUNCTION_30
0x40016a9	        0x48897df8	                mov qword [rbp - 8], rdi	      2149	tc-i386.c	ELSE_2	FUNCTION_30
0x40016ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      2150	tc-i386.c	ELSE_2	FUNCTION_30
0x40016b1	        0x4883e880	             sub rax, 0xffffffffffffff80	      2150	tc-i386.c	ELSE_2	FUNCTION_30
0x40016b5	    0x483dff000000	                           cmp rax, 0xff	      2150	tc-i386.c	ELSE_2	FUNCTION_30
0x40016bb	           0xf96c0	                                setbe al	      2150	tc-i386.c	ELSE_2	FUNCTION_30
0x40016be	           0xfb6c0	                           movzx eax, al	      2150	tc-i386.c	ELSE_2	FUNCTION_30
0x40016c1	              0x5d	                                 pop rbp	      2151	tc-i386.c	ELSE_2	FUNCTION_30
0x40016c2	              0xc3	                                     ret	      2151	tc-i386.c	ELSE_2	FUNCTION_30
i386_intel_simplify_symbol	CALL,3:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	20
0x4014a21	              0x55	                                push rbp	       322	tc-i386-intel.c	FUNCTION_149
0x4014a22	          0x4889e5	                            mov rbp, rsp	       322	tc-i386-intel.c	FUNCTION_149
0x4014a25	        0x4883ec20	                           sub rsp, 0x20	       322	tc-i386-intel.c	FUNCTION_149
0x4014a29	        0x48897de8	             mov qword [rbp - 0x18], rdi	       322	tc-i386-intel.c	FUNCTION_149
0x4014a2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       323	tc-i386-intel.c	FUNCTION_149	CALL_2
0x4014a31	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_149	CALL_2
0x4014a34	      0xe800000000	                          call 0x4014a39	       323	tc-i386-intel.c	FUNCTION_149	CALL_2
0x4014a39	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_149	CALL_2
0x4014a3c	      0xe826000000	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_149	CALL_2
0x4014a41	          0x8945fc	                mov dword [rbp - 4], eax	       323	tc-i386-intel.c	FUNCTION_149	CALL_2
0x4014a44	        0x837dfc02	                  cmp dword [rbp - 4], 2	       325	tc-i386-intel.c	FUNCTION_149	IF_1
0x4014a48	            0x7518	                           jne 0x4014a62	       325	tc-i386-intel.c	FUNCTION_149	IF_1
0x4014a4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       327	tc-i386-intel.c	FUNCTION_149	IF_1	CALL_3
0x4014a4e	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_149	IF_1	CALL_3
0x4014a53	          0x4889c7	                            mov rdi, rax	       327	tc-i386-intel.c	FUNCTION_149	IF_1	CALL_3
0x4014a56	      0xe800000000	                          call 0x4014a5b	       327	tc-i386-intel.c	FUNCTION_149	IF_1	CALL_3
0x4014a5b	    0xc745fc010000	                  mov dword [rbp - 4], 1	       328	tc-i386-intel.c	FUNCTION_149	IF_1
0x4014a62	          0x8b45fc	                mov eax, dword [rbp - 4]	       330	tc-i386-intel.c	FUNCTION_149
0x4014a65	              0xc9	                                   leave	       331	tc-i386-intel.c	FUNCTION_149
0x4014a66	              0xc3	                                     ret	       331	tc-i386-intel.c	FUNCTION_149
signed_cons	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	15
0x400e6b5	              0x55	                                push rbp	      8461	tc-i386.c	FUNCTION_100
0x400e6b6	          0x4889e5	                            mov rbp, rsp	      8461	tc-i386.c	FUNCTION_100
0x400e6b9	        0x4883ec10	                           sub rsp, 0x10	      8461	tc-i386.c	FUNCTION_100
0x400e6bd	          0x897dfc	                mov dword [rbp - 4], edi	      8461	tc-i386.c	FUNCTION_100
0x400e6c0	    0x8b0500000000	            mov eax, dword [0x0400e6c6] 	      8462	tc-i386.c	FUNCTION_100	IF_1
0x400e6c6	          0x83f802	                              cmp eax, 2	      8462	tc-i386.c	FUNCTION_100	IF_1
0x400e6c9	            0x750a	                           jne 0x400e6d5	      8462	tc-i386.c	FUNCTION_100	IF_1
0x400e6cb	    0xc70500000000	               mov dword [0x0400e6d5], 1	      8463	tc-i386.c	FUNCTION_100	IF_1
0x400e6d5	          0x8b45fc	                mov eax, dword [rbp - 4]	      8464	tc-i386.c	FUNCTION_100	CALL_1
0x400e6d8	            0x89c7	                            mov edi, eax	      8464	tc-i386.c	FUNCTION_100	CALL_1
0x400e6da	      0xe800000000	                          call 0x400e6df	      8464	tc-i386.c	FUNCTION_100	CALL_1
0x400e6df	    0xc70500000000	     mov dword [0x0400e6e9], 0xffffffff 	      8465	tc-i386.c	FUNCTION_100
0x400e6e9	              0x90	                                     nop	      8466	tc-i386.c	FUNCTION_100
0x400e6ea	              0xc9	                                   leave	      8466	tc-i386.c	FUNCTION_100
0x400e6eb	              0xc3	                                     ret	      8466	tc-i386.c	FUNCTION_100
operand_type_all_zero	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,2:ELSE,0:DO,0	16
0x40004d7	              0x55	                                push rbp	      1506	tc-i386.c	FUNCTION_7
0x40004d8	          0x4889e5	                            mov rbp, rsp	      1506	tc-i386.c	FUNCTION_7
0x40004db	        0x48897df8	                mov qword [rbp - 8], rdi	      1506	tc-i386.c	FUNCTION_7
0x40004df	        0x488b45f8	                mov rax, qword [rbp - 8]	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x40004e3	          0x8b4004	                mov eax, dword [rax + 4]	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x40004e6	            0x85c0	                           test eax, eax	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x40004e8	            0x7407	                            je 0x40004f1	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x40004ea	      0xb800000000	                              mov eax, 0	      1515	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x40004ef	            0xeb0e	                           jmp 0x40004ff	      1515	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x40004f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1518	tc-i386.c	FUNCTION_7	SWITCH_1
0x40004f5	            0x8b00	                    mov eax, dword [rax]	      1518	tc-i386.c	FUNCTION_7	SWITCH_1
0x40004f7	            0x85c0	                           test eax, eax	      1518	tc-i386.c	FUNCTION_7	SWITCH_1
0x40004f9	           0xf94c0	                                 sete al	      1518	tc-i386.c	FUNCTION_7	SWITCH_1
0x40004fc	           0xfb6c0	                           movzx eax, al	      1518	tc-i386.c	FUNCTION_7	SWITCH_1
0x40004ff	              0x5d	                                 pop rbp	      1522	tc-i386.c	FUNCTION_7
0x4000500	              0xc3	                                     ret	      1522	tc-i386.c	FUNCTION_7
operand_type_set	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,0:ELSE,0:DO,0	14
0x4000501	              0x55	                                push rbp	      1526	tc-i386.c	FUNCTION_8
0x4000502	          0x4889e5	                            mov rbp, rsp	      1526	tc-i386.c	FUNCTION_8
0x4000505	        0x48897df8	                mov qword [rbp - 8], rdi	      1526	tc-i386.c	FUNCTION_8
0x4000509	          0x8975f4	              mov dword [rbp - 0xc], esi	      1526	tc-i386.c	FUNCTION_8
0x400050c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1533	tc-i386.c	FUNCTION_8	SWITCH_1
0x4000510	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1533	tc-i386.c	FUNCTION_8	SWITCH_1
0x4000513	          0x895004	                mov dword [rax + 4], edx	      1533	tc-i386.c	FUNCTION_8	SWITCH_1
0x4000516	        0x488b45f8	                mov rax, qword [rbp - 8]	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400051a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400051d	            0x8910	                    mov dword [rax], edx	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400051f	              0x90	                                     nop	      1538	tc-i386.c	FUNCTION_8	SWITCH_1
0x4000520	              0x90	                                     nop	      1542	tc-i386.c	FUNCTION_8
0x4000521	              0x5d	                                 pop rbp	      1542	tc-i386.c	FUNCTION_8
0x4000522	              0xc3	                                     ret	      1542	tc-i386.c	FUNCTION_8
register_number	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,0:DO,0	24
0x4001615	              0x55	                                push rbp	      2122	tc-i386.c	FUNCTION_28
0x4001616	          0x4889e5	                            mov rbp, rsp	      2122	tc-i386.c	FUNCTION_28
0x4001619	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2122	tc-i386.c	FUNCTION_28
0x400161d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2123	tc-i386.c	FUNCTION_28
0x4001621	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x4001625	           0xfb6c0	                           movzx eax, al	      2123	tc-i386.c	FUNCTION_28
0x4001628	          0x8945fc	                mov dword [rbp - 4], eax	      2123	tc-i386.c	FUNCTION_28
0x400162b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2125	tc-i386.c	FUNCTION_28	IF_1
0x400162f	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001633	           0xfb6c0	                           movzx eax, al	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001636	          0x83e001	                              and eax, 1	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001639	            0x85c0	                           test eax, eax	      2125	tc-i386.c	FUNCTION_28	IF_1
0x400163b	            0x7404	                            je 0x4001641	      2125	tc-i386.c	FUNCTION_28	IF_1
0x400163d	        0x8345fc08	                  add dword [rbp - 4], 8	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001641	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4001645	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4001649	           0xfb6c0	                           movzx eax, al	      2128	tc-i386.c	FUNCTION_28	IF_2
0x400164c	          0x83e004	                              and eax, 4	      2128	tc-i386.c	FUNCTION_28	IF_2
0x400164f	            0x85c0	                           test eax, eax	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4001651	            0x7404	                            je 0x4001657	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4001653	        0x8345fc10	               add dword [rbp - 4], 0x10	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4001657	          0x8b45fc	                mov eax, dword [rbp - 4]	      2131	tc-i386.c	FUNCTION_28
0x400165a	              0x5d	                                 pop rbp	      2132	tc-i386.c	FUNCTION_28
0x400165b	              0xc3	                                     ret	      2132	tc-i386.c	FUNCTION_28
offset_in_range	CALL,5:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,3:ELSE,0:DO,0	95
0x4001981	              0x55	                                push rbp	      2272	tc-i386.c	FUNCTION_39
0x4001982	          0x4889e5	                            mov rbp, rsp	      2272	tc-i386.c	FUNCTION_39
0x4001985	        0x4883c480	             add rsp, 0xffffffffffffff80	      2272	tc-i386.c	FUNCTION_39
0x4001989	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2272	tc-i386.c	FUNCTION_39
0x400198d	          0x897584	             mov dword [rbp - 0x7c], esi	      2272	tc-i386.c	FUNCTION_39
0x4001990	    0x64488b042528	                mov rax, qword fs:[0x28]	      2272	tc-i386.c	FUNCTION_39
0x4001999	        0x488945f8	                mov qword [rbp - 8], rax	      2272	tc-i386.c	FUNCTION_39
0x400199d	            0x31c0	                            xor eax, eax	      2272	tc-i386.c	FUNCTION_39
0x400199f	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019a2	          0x83f802	                              cmp eax, 2	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019a5	            0x7422	                            je 0x40019c9	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019a7	          0x83f802	                              cmp eax, 2	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019aa	            0x7f07	                            jg 0x40019b3	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019ac	          0x83f801	                              cmp eax, 1	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019af	            0x740e	                            je 0x40019bf	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019b1	            0xeb35	                           jmp 0x40019e8	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019b3	          0x83f804	                              cmp eax, 4	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019b6	            0x741b	                            je 0x40019d3	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019b8	          0x83f808	                              cmp eax, 8	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019bb	            0x7421	                            je 0x40019de	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019bd	            0xeb29	                           jmp 0x40019e8	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019bf	    0x48c74598ff00	           mov qword [rbp - 0x68], 0xff 	      2277	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019c7	            0xeb33	                           jmp 0x40019fc	      2277	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019c9	    0x48c74598ffff	          mov qword [rbp - 0x68], 0xffff	      2278	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019d1	            0xeb29	                           jmp 0x40019fc	      2278	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019d3	      0xb8ffffffff	                     mov eax, 0xffffffff	      2279	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019d8	        0x48894598	             mov qword [rbp - 0x68], rax	      2279	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019dc	            0xeb1e	                           jmp 0x40019fc	      2279	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019de	    0x48c74598ffff	mov qword [rbp - 0x68], 0xffffffffffffffff	      2281	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019e6	            0xeb14	                           jmp 0x40019fc	      2281	tc-i386.c	FUNCTION_39	SWITCH_1
0x40019e8	      0xba00000000	                              mov edx, 0	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x40019ed	      0xbeeb080000	                          mov esi, 0x8eb	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x40019f2	      0xbf00000000	                              mov edi, 0	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x40019f7	      0xe800000000	                          call 0x40019fc	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x40019fc	    0x8b0500000000	            mov eax, dword [0x04001a02] 	      2288	tc-i386.c	FUNCTION_39	IF_1
0x4001a02	          0x83f802	                              cmp eax, 2	      2288	tc-i386.c	FUNCTION_39	IF_1
0x4001a05	            0x750b	                           jne 0x4001a12	      2288	tc-i386.c	FUNCTION_39	IF_1
0x4001a07	     0xfb605000000	           movzx eax, byte [0x04001a0e] 	      2289	tc-i386.c	FUNCTION_39	IF_1
0x4001a0e	            0x84c0	                             test al, al	      2289	tc-i386.c	FUNCTION_39	IF_1
0x4001a10	            0x742c	                            je 0x4001a3e	      2289	tc-i386.c	FUNCTION_39	IF_1
0x4001a12	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4001a16	    0x48b800000000	          movabs rax, 0xffffffff00000000	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4001a20	          0x4821d0	                            and rax, rdx	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4001a23	          0x4885c0	                           test rax, rax	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4001a26	            0x7516	                           jne 0x4001a3e	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4001a28	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2291	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4001a2c	      0xb800000080	                     mov eax, 0x80000000	      2291	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4001a31	          0x4831d0	                            xor rax, rdx	      2291	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4001a34	    0x480500000080	             add rax, 0xffffffff80000000	      2291	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4001a3a	        0x48894588	             mov qword [rbp - 0x78], rax	      2291	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4001a3e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a42	          0x48f7d0	                                 not rax	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a45	          0x4889c2	                            mov rdx, rax	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a48	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a4c	          0x4821d0	                            and rax, rdx	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a4f	          0x4885c0	                           test rax, rax	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a52	            0x746f	                            je 0x4001ac3	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a54	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a58	          0x48f7d0	                                 not rax	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a5b	          0x4889c2	                            mov rdx, rax	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a5e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a62	          0x4821c2	                            and rdx, rax	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a65	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a69	          0x48f7d0	                                 not rax	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a6c	          0x4839c2	                            cmp rdx, rax	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a6f	            0x7452	                            je 0x4001ac3	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4001a71	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2298	tc-i386.c	FUNCTION_39	IF_3	CALL_2
0x4001a75	        0x488d45a0	                   lea rax, [rbp - 0x60]	      2298	tc-i386.c	FUNCTION_39	IF_3	CALL_2
0x4001a79	          0x4889d6	                            mov rsi, rdx	      2298	tc-i386.c	FUNCTION_39	IF_3	CALL_2
0x4001a7c	          0x4889c7	                            mov rdi, rax	      2298	tc-i386.c	FUNCTION_39	IF_3	CALL_2
0x4001a7f	      0xe800000000	                          call 0x4001a84	      2298	tc-i386.c	FUNCTION_39	IF_3	CALL_2
0x4001a84	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4001a88	        0x48234598	             and rax, qword [rbp - 0x68]	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4001a8c	          0x4889c2	                            mov rdx, rax	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4001a8f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4001a93	          0x4889d6	                            mov rsi, rdx	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4001a96	          0x4889c7	                            mov rdi, rax	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4001a99	      0xe800000000	                          call 0x4001a9e	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4001a9e	      0xbf00000000	                              mov edi, 0	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4001aa3	      0xe800000000	                          call 0x4001aa8	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4001aa8	          0x4889c1	                            mov rcx, rax	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4001aab	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4001aaf	        0x488d45a0	                   lea rax, [rbp - 0x60]	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4001ab3	          0x4889c6	                            mov rsi, rax	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4001ab6	          0x4889cf	                            mov rdi, rcx	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4001ab9	      0xb800000000	                              mov eax, 0	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4001abe	      0xe800000000	                          call 0x4001ac3	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4001ac3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2302	tc-i386.c	FUNCTION_39
0x4001ac7	        0x48234598	             and rax, qword [rbp - 0x68]	      2302	tc-i386.c	FUNCTION_39
0x4001acb	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2303	tc-i386.c	FUNCTION_39
0x4001acf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2303	tc-i386.c	FUNCTION_39
0x4001ad8	            0x7405	                            je 0x4001adf	      2303	tc-i386.c	FUNCTION_39
0x4001ada	      0xe800000000	                          call 0x4001adf	      2303	tc-i386.c	FUNCTION_39
0x4001adf	              0xc9	                                   leave	      2303	tc-i386.c	FUNCTION_39
0x4001ae0	              0xc3	                                     ret	      2303	tc-i386.c	FUNCTION_39
operand_type_or	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,0:ELSE,0:DO,0	24
0x4000a8c	              0x55	                                push rbp	      1795	tc-i386.c	FUNCTION_19
0x4000a8d	          0x4889e5	                            mov rbp, rsp	      1795	tc-i386.c	FUNCTION_19
0x4000a90	        0x4883ec30	                           sub rsp, 0x30	      1795	tc-i386.c	FUNCTION_19
0x4000a94	        0x48897de0	             mov qword [rbp - 0x20], rdi	      1795	tc-i386.c	FUNCTION_19
0x4000a98	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1795	tc-i386.c	FUNCTION_19
0x4000a9c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1795	tc-i386.c	FUNCTION_19
0x4000aa5	        0x488945f8	                mov qword [rbp - 8], rax	      1795	tc-i386.c	FUNCTION_19
0x4000aa9	            0x31c0	                            xor eax, eax	      1795	tc-i386.c	FUNCTION_19
0x4000aab	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1802	tc-i386.c	FUNCTION_19	SWITCH_1
0x4000aae	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1802	tc-i386.c	FUNCTION_19	SWITCH_1
0x4000ab1	             0x9d0	                             or eax, edx	      1802	tc-i386.c	FUNCTION_19	SWITCH_1
0x4000ab3	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1802	tc-i386.c	FUNCTION_19	SWITCH_1
0x4000ab6	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1805	tc-i386.c	FUNCTION_19	SWITCH_1
0x4000ab9	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1805	tc-i386.c	FUNCTION_19	SWITCH_1
0x4000abc	             0x9d0	                             or eax, edx	      1805	tc-i386.c	FUNCTION_19	SWITCH_1
0x4000abe	          0x8945e0	             mov dword [rbp - 0x20], eax	      1805	tc-i386.c	FUNCTION_19	SWITCH_1
0x4000ac1	              0x90	                                     nop	      1806	tc-i386.c	FUNCTION_19	SWITCH_1
0x4000ac2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1810	tc-i386.c	FUNCTION_19
0x4000ac6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1811	tc-i386.c	FUNCTION_19
0x4000aca	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1811	tc-i386.c	FUNCTION_19
0x4000ad3	            0x7405	                            je 0x4000ada	      1811	tc-i386.c	FUNCTION_19
0x4000ad5	      0xe800000000	                          call 0x4000ada	      1811	tc-i386.c	FUNCTION_19
0x4000ada	              0xc9	                                   leave	      1811	tc-i386.c	FUNCTION_19
0x4000adb	              0xc3	                                     ret	      1811	tc-i386.c	FUNCTION_19
i386_finalize_immediate	CALL,8:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,7:ELSE,4:DO,0	127
0x400ed33	              0x55	                                push rbp	      8701	tc-i386.c	FUNCTION_104
0x400ed34	          0x4889e5	                            mov rbp, rsp	      8701	tc-i386.c	FUNCTION_104
0x400ed37	              0x53	                                push rbx	      8701	tc-i386.c	FUNCTION_104
0x400ed38	        0x4883ec28	                           sub rsp, 0x28	      8701	tc-i386.c	FUNCTION_104
0x400ed3c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8701	tc-i386.c	FUNCTION_104
0x400ed40	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8701	tc-i386.c	FUNCTION_104
0x400ed44	        0x488955d0	             mov qword [rbp - 0x30], rdx	      8701	tc-i386.c	FUNCTION_104
0x400ed48	        0x48894dd8	             mov qword [rbp - 0x28], rcx	      8701	tc-i386.c	FUNCTION_104
0x400ed4c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed50	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed54	            0x3c01	                               cmp al, 1	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed56	            0x7418	                            je 0x400ed70	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed5c	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed60	            0x84c0	                             test al, al	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed62	            0x740c	                            je 0x400ed70	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed64	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed68	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed6c	            0x3c06	                               cmp al, 6	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed6e	            0x7532	                           jne 0x400eda2	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400ed70	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      8704	tc-i386.c	FUNCTION_104	IF_1	IF_2
0x400ed75	            0x7421	                            je 0x400ed98	      8704	tc-i386.c	FUNCTION_104	IF_1	IF_2
0x400ed77	      0xbf00000000	                              mov edi, 0	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x400ed7c	      0xe800000000	                          call 0x400ed81	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x400ed81	          0x4889c2	                            mov rdx, rax	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x400ed84	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x400ed88	          0x4889c6	                            mov rsi, rax	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x400ed8b	          0x4889d7	                            mov rdi, rdx	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x400ed8e	      0xb800000000	                              mov eax, 0	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x400ed93	      0xe800000000	                          call 0x400ed98	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x400ed98	      0xb800000000	                              mov eax, 0	      8707	tc-i386.c	FUNCTION_104	IF_1
0x400ed9d	      0xe99f010000	                           jmp 0x400ef41	      8707	tc-i386.c	FUNCTION_104	IF_1
0x400eda2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8709	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x400eda6	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8709	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x400edaa	            0x3c02	                               cmp al, 2	      8709	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x400edac	            0x7577	                           jne 0x400ee25	      8709	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x400edae	    0x8b0500000000	            mov eax, dword [0x0400edb4] 	      8712	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x400edb4	            0x4898	                                    cdqe	      8712	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x400edb6	        0x4883c00e	                            add rax, 0xe	      8712	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x400edba	     0xfb614c50000	                 movzx edx, byte [rax*8]	      8712	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x400edc2	          0x83ca80	                      or edx, 0xffffff80	      8712	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x400edc5	    0x8814c5000000	                    mov byte [rax*8], dl	      8712	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x400edcc	    0x8b0500000000	            mov eax, dword [0x0400edd2] 	      8714	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400edd2	          0x83f802	                              cmp eax, 2	      8714	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400edd5	     0xf8461010000	                            je 0x400ef3c	      8714	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400eddb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400eddf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ede3	          0x4889c2	                            mov rdx, rax	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ede6	    0x48b800000000	          movabs rax, 0xffffffff00000000	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400edf0	          0x4821d0	                            and rax, rdx	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400edf3	          0x4885c0	                           test rax, rax	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400edf6	     0xf8540010000	                           jne 0x400ef3c	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400edfc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ee00	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ee04	          0x4889c2	                            mov rdx, rax	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ee07	      0xb800000080	                     mov eax, 0x80000000	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ee0c	          0x4831d0	                            xor rax, rdx	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ee0f	    0x480500000080	             add rax, 0xffffffff80000000	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ee15	          0x4889c2	                            mov rdx, rax	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ee18	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ee1c	        0x48895010	             mov qword [rax + 0x10], rdx	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ee20	      0xe917010000	                           jmp 0x400ef3c	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400ee25	    0x8b0500000000	            mov eax, dword [0x0400ee2b] 	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x400ee2b	            0x85c0	                           test eax, eax	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x400ee2d	            0x753f	                           jne 0x400ee6e	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x400ee2f	    0x488b05000000	            mov rax, qword [0x0400ee36] 	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x400ee36	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x400ee3a	            0x7532	                           jne 0x400ee6e	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x400ee3c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      8734	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	IF_7
0x400ee41	            0x7421	                            je 0x400ee64	      8734	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	IF_7
0x400ee43	      0xbf00000000	                              mov edi, 0	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x400ee48	      0xe800000000	                          call 0x400ee4d	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x400ee4d	          0x4889c2	                            mov rdx, rax	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x400ee50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x400ee54	          0x4889c6	                            mov rsi, rax	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x400ee57	          0x4889d7	                            mov rdi, rdx	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x400ee5a	      0xb800000000	                              mov eax, 0	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x400ee5f	      0xe800000000	                          call 0x400ee64	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x400ee64	      0xb800000000	                              mov eax, 0	      8736	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x400ee69	      0xe9d3000000	                           jmp 0x400ef41	      8736	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x400ee6e	    0x8b0500000000	            mov eax, dword [0x0400ee74] 	      8743	tc-i386.c	FUNCTION_104	ELSE_4
0x400ee74	            0x4898	                                    cdqe	      8743	tc-i386.c	FUNCTION_104	ELSE_4
0x400ee76	        0x4883c00e	                            add rax, 0xe	      8743	tc-i386.c	FUNCTION_104	ELSE_4
0x400ee7a	     0xfb614c50000	                 movzx edx, byte [rax*8]	      8743	tc-i386.c	FUNCTION_104	ELSE_4
0x400ee82	          0x83ca04	                               or edx, 4	      8743	tc-i386.c	FUNCTION_104	ELSE_4
0x400ee85	    0x8814c5000000	                    mov byte [rax*8], dl	      8743	tc-i386.c	FUNCTION_104	ELSE_4
0x400ee8c	    0x8b0500000000	            mov eax, dword [0x0400ee92] 	      8744	tc-i386.c	FUNCTION_104	ELSE_4
0x400ee92	            0x4898	                                    cdqe	      8744	tc-i386.c	FUNCTION_104	ELSE_4
0x400ee94	        0x4883c00e	                            add rax, 0xe	      8744	tc-i386.c	FUNCTION_104	ELSE_4
0x400ee98	     0xfb614c50000	                 movzx edx, byte [rax*8]	      8744	tc-i386.c	FUNCTION_104	ELSE_4
0x400eea0	          0x83ca10	                            or edx, 0x10	      8744	tc-i386.c	FUNCTION_104	ELSE_4
0x400eea3	    0x8814c5000000	                    mov byte [rax*8], dl	      8744	tc-i386.c	FUNCTION_104	ELSE_4
0x400eeaa	    0x8b0500000000	            mov eax, dword [0x0400eeb0] 	      8745	tc-i386.c	FUNCTION_104	ELSE_4
0x400eeb0	            0x4898	                                    cdqe	      8745	tc-i386.c	FUNCTION_104	ELSE_4
0x400eeb2	        0x4883c00e	                            add rax, 0xe	      8745	tc-i386.c	FUNCTION_104	ELSE_4
0x400eeb6	     0xfb614c50000	                 movzx edx, byte [rax*8]	      8745	tc-i386.c	FUNCTION_104	ELSE_4
0x400eebe	          0x83ca20	                            or edx, 0x20	      8745	tc-i386.c	FUNCTION_104	ELSE_4
0x400eec1	    0x8814c5000000	                    mov byte [rax*8], dl	      8745	tc-i386.c	FUNCTION_104	ELSE_4
0x400eec8	    0x8b0500000000	            mov eax, dword [0x0400eece] 	      8746	tc-i386.c	FUNCTION_104	ELSE_4
0x400eece	            0x4898	                                    cdqe	      8746	tc-i386.c	FUNCTION_104	ELSE_4
0x400eed0	        0x4883c00e	                            add rax, 0xe	      8746	tc-i386.c	FUNCTION_104	ELSE_4
0x400eed4	     0xfb614c50000	                 movzx edx, byte [rax*8]	      8746	tc-i386.c	FUNCTION_104	ELSE_4
0x400eedc	          0x83ca40	                            or edx, 0x40	      8746	tc-i386.c	FUNCTION_104	ELSE_4
0x400eedf	    0x8814c5000000	                    mov byte [rax*8], dl	      8746	tc-i386.c	FUNCTION_104	ELSE_4
0x400eee6	    0x8b0500000000	            mov eax, dword [0x0400eeec] 	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x400eeec	            0x4898	                                    cdqe	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x400eeee	        0x4883c00e	                            add rax, 0xe	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x400eef2	     0xfb614c50000	                 movzx edx, byte [rax*8]	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x400eefa	          0x83ca80	                      or edx, 0xffffff80	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x400eefd	    0x8814c5000000	                    mov byte [rax*8], dl	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x400ef04	    0x8b1500000000	            mov edx, dword [0x0400ef0a] 	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef0a	    0x8b0500000000	            mov eax, dword [0x0400ef10] 	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef10	          0x4863d2	                         movsxd rdx, edx	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef13	        0x488d5a0e	                    lea rbx, [rdx + 0xe]	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef17	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef1b	            0x4898	                                    cdqe	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef1d	        0x4883c00e	                            add rax, 0xe	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef21	    0x488b04c50000	                  mov rax, qword [rax*8]	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef29	          0x4889d6	                            mov rsi, rdx	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef2c	          0x4889c7	                            mov rdi, rax	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef2f	      0xe8b41affff	               call sym.operand_type_and	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef34	    0x488904dd0000	                  mov qword [rbx*8], rax	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400ef3c	      0xb801000000	                              mov eax, 1	      8752	tc-i386.c	FUNCTION_104
0x400ef41	        0x4883c428	                           add rsp, 0x28	      8753	tc-i386.c	FUNCTION_104
0x400ef45	              0x5b	                                 pop rbx	      8753	tc-i386.c	FUNCTION_104
0x400ef46	              0x5d	                                 pop rbp	      8753	tc-i386.c	FUNCTION_104
0x400ef47	              0xc3	                                     ret	      8753	tc-i386.c	FUNCTION_104
md_parse_option	CALL,103:FOR,6:WHILE,0:functions,0:SWITCH,1:IF,53:ELSE,34:DO,1	829
0x4012053	              0x55	                                push rbp	     10459	tc-i386.c	FUNCTION_124
0x4012054	          0x4889e5	                            mov rbp, rsp	     10459	tc-i386.c	FUNCTION_124
0x4012057	        0x4883c480	             add rsp, 0xffffffffffffff80	     10459	tc-i386.c	FUNCTION_124
0x401205b	          0x897d8c	             mov dword [rbp - 0x74], edi	     10459	tc-i386.c	FUNCTION_124
0x401205e	        0x48897580	             mov qword [rbp - 0x80], rsi	     10459	tc-i386.c	FUNCTION_124
0x4012062	    0x64488b042528	                mov rax, qword fs:[0x28]	     10459	tc-i386.c	FUNCTION_124
0x401206b	        0x488945f8	                mov qword [rbp - 8], rax	     10459	tc-i386.c	FUNCTION_124
0x401206f	            0x31c0	                            xor eax, eax	     10459	tc-i386.c	FUNCTION_124
0x4012071	          0x8b458c	             mov eax, dword [rbp - 0x74]	     10463	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012074	          0x83e84f	                           sub eax, 0x4f	     10463	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012077	      0x3deb000000	                           cmp eax, 0xeb	     10463	tc-i386.c	FUNCTION_124	SWITCH_1
0x401207c	     0xf87a60d0000	                            ja 0x4012e28	     10463	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012082	            0x89c0	                            mov eax, eax	     10463	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012084	    0x488b04c50000	                  mov rax, qword [rax*8]	     10463	tc-i386.c	FUNCTION_124	SWITCH_1
0x401208c	            0xffe0	                                 jmp rax	     10463	tc-i386.c	FUNCTION_124	SWITCH_1
0x401208e	    0xc70500000000	               mov dword [0x04012098], 0	     10466	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012098	      0xe9960d0000	                           jmp 0x4012e33	     10467	tc-i386.c	FUNCTION_124	SWITCH_1
0x401209d	    0xc70500000000	               mov dword [0x040120a7], 1	     10470	tc-i386.c	FUNCTION_124	SWITCH_1
0x40120a7	      0xe9870d0000	                           jmp 0x4012e33	     10471	tc-i386.c	FUNCTION_124	SWITCH_1
0x40120ac	      0xe800000000	                          call 0x40120b1	     10481	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_1
0x40120b1	      0xe97d0d0000	                           jmp 0x4012e33	     10482	tc-i386.c	FUNCTION_124	SWITCH_1
0x40120b6	    0xc70500000000	               mov dword [0x040120c0], 1	     10494	tc-i386.c	FUNCTION_124	SWITCH_1
0x40120c0	      0xe96e0d0000	                           jmp 0x4012e33	     10495	tc-i386.c	FUNCTION_124	SWITCH_1
0x40120c5	      0xe800000000	                          call 0x40120ca	     10503	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_2
0x40120ca	        0x488945b8	             mov qword [rbp - 0x48], rax	     10503	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_2
0x40120ce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10504	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1
0x40120d2	        0x488945a8	             mov qword [rbp - 0x58], rax	     10504	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1
0x40120d6	      0xe98f000000	                           jmp 0x401216a	     10504	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1
0x40120db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     10505	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_3
0x40120df	          0x488b00	                    mov rax, qword [rax]	     10505	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_3
0x40120e2	      0xba0c000000	                            mov edx, 0xc	     10505	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_3
0x40120e7	      0xbe00000000	                              mov esi, 0	     10505	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_3
0x40120ec	          0x4889c7	                            mov rdi, rax	     10505	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_3
0x40120ef	      0xe800000000	                          call 0x40120f4	     10505	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_3
0x40120f4	            0x85c0	                           test eax, eax	     10505	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_3
0x40120f6	            0x7460	                            je 0x4012158	     10505	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_3
0x40120f8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     10506	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_4
0x40120fc	          0x488b00	                    mov rax, qword [rax]	     10506	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_4
0x40120ff	      0xbe00000000	                              mov esi, 0	     10506	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_4
0x4012104	          0x4889c7	                            mov rdi, rax	     10506	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_4
0x4012107	      0xe800000000	                          call 0x401210c	     10506	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_4
0x401210c	            0x85c0	                           test eax, eax	     10506	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_4
0x401210e	            0x7448	                            je 0x4012158	     10506	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_4
0x4012110	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     10507	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_5
0x4012114	          0x488b00	                    mov rax, qword [rax]	     10507	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_5
0x4012117	      0xbe00000000	                              mov esi, 0	     10507	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_5
0x401211c	          0x4889c7	                            mov rdi, rax	     10507	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_5
0x401211f	      0xe800000000	                          call 0x4012124	     10507	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_5
0x4012124	            0x85c0	                           test eax, eax	     10507	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_5
0x4012126	            0x7430	                            je 0x4012158	     10507	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_5
0x4012128	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     10508	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_6
0x401212c	          0x488b00	                    mov rax, qword [rax]	     10508	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_6
0x401212f	      0xbe00000000	                              mov esi, 0	     10508	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_6
0x4012134	          0x4889c7	                            mov rdi, rax	     10508	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_6
0x4012137	      0xe800000000	                          call 0x401213c	     10508	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_6
0x401213c	            0x85c0	                           test eax, eax	     10508	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_6
0x401213e	            0x7418	                            je 0x4012158	     10508	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_6
0x4012140	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     10509	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_7
0x4012144	          0x488b00	                    mov rax, qword [rax]	     10509	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_7
0x4012147	      0xbe00000000	                              mov esi, 0	     10509	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_7
0x401214c	          0x4889c7	                            mov rdi, rax	     10509	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_7
0x401214f	      0xe800000000	                          call 0x4012154	     10509	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_7
0x4012154	            0x85c0	                           test eax, eax	     10509	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_7
0x4012156	            0x750d	                           jne 0x4012165	     10509	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1	CALL_7
0x4012158	    0x48c705000000	               mov qword [0x04012163], 0	     10511	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1
0x4012163	            0xeb15	                           jmp 0x401217a	     10512	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1	IF_1
0x4012165	      0x488345a808	               add qword [rbp - 0x58], 8	     10504	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1
0x401216a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     10504	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1
0x401216e	          0x488b00	                    mov rax, qword [rax]	     10504	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1
0x4012171	          0x4885c0	                           test rax, rax	     10504	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1
0x4012174	     0xf8561ffffff	                           jne 0x40120db	     10504	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_1
0x401217a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	     10514	tc-i386.c	FUNCTION_124	SWITCH_1	IF_2
0x401217e	          0x488b00	                    mov rax, qword [rax]	     10514	tc-i386.c	FUNCTION_124	SWITCH_1	IF_2
0x4012181	          0x4885c0	                           test rax, rax	     10514	tc-i386.c	FUNCTION_124	SWITCH_1	IF_2
0x4012184	            0x7517	                           jne 0x401219d	     10514	tc-i386.c	FUNCTION_124	SWITCH_1	IF_2
0x4012186	      0xbf00000000	                              mov edi, 0	     10515	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_9
0x401218b	      0xe800000000	                          call 0x4012190	     10515	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_9
0x4012190	          0x4889c7	                            mov rdi, rax	     10515	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_9
0x4012193	      0xb800000000	                              mov eax, 0	     10515	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_9
0x4012198	      0xe800000000	                          call 0x401219d	     10515	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_9
0x401219d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10516	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_10
0x40121a1	          0x4889c7	                            mov rdi, rax	     10516	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_10
0x40121a4	      0xe800000000	                          call 0x40121a9	     10516	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_10
0x40121a9	      0xe9850c0000	                           jmp 0x4012e33	     10518	tc-i386.c	FUNCTION_124	SWITCH_1
0x40121ae	      0xe800000000	                          call 0x40121b3	     10527	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	CALL_11
0x40121b3	        0x488945c0	             mov qword [rbp - 0x40], rax	     10527	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	CALL_11
0x40121b7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10528	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2
0x40121bb	        0x488945b0	             mov qword [rbp - 0x50], rax	     10528	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2
0x40121bf	            0xeb2f	                           jmp 0x40121f0	     10528	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2
0x40121c1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	     10529	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2	IF_4	CALL_12
0x40121c5	          0x488b00	                    mov rax, qword [rax]	     10529	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2	IF_4	CALL_12
0x40121c8	      0xba0c000000	                            mov edx, 0xc	     10529	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2	IF_4	CALL_12
0x40121cd	      0xbe00000000	                              mov esi, 0	     10529	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2	IF_4	CALL_12
0x40121d2	          0x4889c7	                            mov rdi, rax	     10529	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2	IF_4	CALL_12
0x40121d5	      0xe800000000	                          call 0x40121da	     10529	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2	IF_4	CALL_12
0x40121da	            0x85c0	                           test eax, eax	     10529	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2	IF_4	CALL_12
0x40121dc	            0x750d	                           jne 0x40121eb	     10529	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2	IF_4	CALL_12
0x40121de	    0x48c705000000	               mov qword [0x040121e9], 0	     10531	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2	IF_4
0x40121e9	            0xeb11	                           jmp 0x40121fc	     10532	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2	IF_4
0x40121eb	      0x488345b008	               add qword [rbp - 0x50], 8	     10528	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2
0x40121f0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	     10528	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2
0x40121f4	          0x488b00	                    mov rax, qword [rax]	     10528	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2
0x40121f7	          0x4885c0	                           test rax, rax	     10528	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2
0x40121fa	            0x75c5	                           jne 0x40121c1	     10528	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	FOR_2
0x40121fc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	     10534	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	IF_5
0x4012200	          0x488b00	                    mov rax, qword [rax]	     10534	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	IF_5
0x4012203	          0x4885c0	                           test rax, rax	     10534	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	IF_5
0x4012206	            0x7517	                           jne 0x401221f	     10534	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	IF_5
0x4012208	      0xbf00000000	                              mov edi, 0	     10535	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	CALL_14
0x401220d	      0xe800000000	                          call 0x4012212	     10535	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	CALL_14
0x4012212	          0x4889c7	                            mov rdi, rax	     10535	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	CALL_14
0x4012215	      0xb800000000	                              mov eax, 0	     10535	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	CALL_14
0x401221a	      0xe800000000	                          call 0x401221f	     10535	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	CALL_14
0x401221f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10536	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	CALL_15
0x4012223	          0x4889c7	                            mov rdi, rax	     10536	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	CALL_15
0x4012226	      0xe800000000	                          call 0x401222b	     10536	tc-i386.c	FUNCTION_124	SWITCH_1	IF_3	CALL_15
0x401222b	      0xe9030c0000	                           jmp 0x4012e33	     10540	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012230	    0x48c705000000	               mov qword [0x0401223b], 0	     10544	tc-i386.c	FUNCTION_124	SWITCH_1
0x401223b	      0xe9f30b0000	                           jmp 0x4012e33	     10545	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012240	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10565	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_20
0x4012244	          0x4889c7	                            mov rdi, rax	     10565	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_20
0x4012247	      0xe800000000	                          call 0x401224c	     10565	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_20
0x401224c	        0x488945c8	             mov qword [rbp - 0x38], rax	     10565	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_20
0x4012250	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10566	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012254	        0x48894598	             mov qword [rbp - 0x68], rax	     10566	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012258	        0x488b4598	             mov rax, qword [rbp - 0x68]	     10568	tc-i386.c	FUNCTION_124	SWITCH_1	IF_7
0x401225c	           0xfb600	                   movzx eax, byte [rax]	     10568	tc-i386.c	FUNCTION_124	SWITCH_1	IF_7
0x401225f	            0x3c2b	                            cmp al, 0x2b	     10568	tc-i386.c	FUNCTION_124	SWITCH_1	IF_7
0x4012261	            0x7505	                           jne 0x4012268	     10568	tc-i386.c	FUNCTION_124	SWITCH_1	IF_7
0x4012263	      0x4883459801	               add qword [rbp - 0x68], 1	     10569	tc-i386.c	FUNCTION_124	SWITCH_1	IF_7
0x4012268	        0x488b4598	             mov rax, qword [rbp - 0x68]	     10572	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_8
0x401226c	           0xfb600	                   movzx eax, byte [rax]	     10572	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_8
0x401226f	            0x3c2e	                            cmp al, 0x2e	     10572	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_8
0x4012271	            0x7521	                           jne 0x4012294	     10572	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_8
0x4012273	      0xbf00000000	                              mov edi, 0	     10573	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_22
0x4012278	      0xe800000000	                          call 0x401227d	     10573	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_22
0x401227d	          0x4889c2	                            mov rdx, rax	     10573	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_22
0x4012280	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10573	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_22
0x4012284	          0x4889c6	                            mov rsi, rax	     10573	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_22
0x4012287	          0x4889d7	                            mov rdi, rdx	     10573	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_22
0x401228a	      0xb800000000	                              mov eax, 0	     10573	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_22
0x401228f	      0xe800000000	                          call 0x4012294	     10573	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_22
0x4012294	        0x488b4598	             mov rax, qword [rbp - 0x68]	     10574	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_23
0x4012298	      0xbe2b000000	                           mov esi, 0x2b	     10574	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_23
0x401229d	          0x4889c7	                            mov rdi, rax	     10574	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_23
0x40122a0	      0xe800000000	                          call 0x40122a5	     10574	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_23
0x40122a5	        0x488945a0	             mov qword [rbp - 0x60], rax	     10574	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_23
0x40122a9	      0x48837da000	               cmp qword [rbp - 0x60], 0	     10575	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_9
0x40122ae	            0x740f	                            je 0x40122bf	     10575	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_9
0x40122b0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	     10576	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_9
0x40122b4	        0x488d5001	                      lea rdx, [rax + 1]	     10576	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_9
0x40122b8	        0x488955a0	             mov qword [rbp - 0x60], rdx	     10576	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_9
0x40122bc	          0xc60000	                       mov byte [rax], 0	     10576	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_9
0x40122bf	    0xc74594000000	               mov dword [rbp - 0x6c], 0	     10577	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	CALL_24
0x40122c6	      0xe9ec020000	                           jmp 0x40125b7	     10577	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	CALL_24
0x40122cb	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122ce	          0x4889d0	                            mov rax, rdx	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122d1	        0x48c1e002	                              shl rax, 2	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122d5	          0x4801d0	                            add rax, rdx	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122d8	        0x48c1e003	                              shl rax, 3	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122dc	    0x480500000000	                              add rax, 0	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122e2	          0x488b10	                    mov rdx, qword [rax]	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122e5	        0x488b4598	             mov rax, qword [rbp - 0x68]	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122e9	          0x4889d6	                            mov rsi, rdx	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122ec	          0x4889c7	                            mov rdi, rax	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122ef	      0xe800000000	                          call 0x40122f4	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122f4	            0x85c0	                           test eax, eax	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122f6	     0xf8506010000	                           jne 0x4012402	     10579	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	CALL_25
0x40122fc	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10582	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x40122ff	          0x4889d0	                            mov rax, rdx	     10582	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x4012302	        0x48c1e002	                              shl rax, 2	     10582	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x4012306	          0x4801d0	                            add rax, rdx	     10582	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x4012309	        0x48c1e003	                              shl rax, 3	     10582	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x401230d	    0x480500000000	                              add rax, 0	     10582	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x4012313	           0xfb600	                   movzx eax, byte [rax]	     10582	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x4012316	          0xc0e802	                               shr al, 2	     10582	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x4012319	          0x83e001	                              and eax, 1	     10582	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x401231c	            0x84c0	                             test al, al	     10582	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x401231e	     0xf848e020000	                            je 0x40125b2	     10582	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x4012324	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10585	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012327	          0x4889d0	                            mov rax, rdx	     10585	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401232a	        0x48c1e002	                              shl rax, 2	     10585	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401232e	          0x4801d0	                            add rax, rdx	     10585	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012331	        0x48c1e003	                              shl rax, 3	     10585	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012335	    0x480500000000	                              add rax, 0	     10585	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401233b	          0x488b00	                    mov rax, qword [rax]	     10585	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401233e	    0x488905000000	            mov qword [0x04012345], rax 	     10585	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012345	    0x48c705000000	               mov qword [0x04012350], 0	     10586	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012350	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10587	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012353	          0x4889d0	                            mov rax, rdx	     10587	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012356	        0x48c1e002	                              shl rax, 2	     10587	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401235a	          0x4801d0	                            add rax, rdx	     10587	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401235d	        0x48c1e003	                              shl rax, 3	     10587	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012361	    0x480500000000	                              add rax, 0	     10587	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012367	        0x488b5008	                mov rdx, qword [rax + 8]	     10587	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401236b	          0x488b00	                    mov rax, qword [rax]	     10587	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401236e	    0x488905000000	            mov qword [0x04012375], rax 	     10587	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012375	    0x488915000000	            mov qword [0x0401237c], rdx 	     10587	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401237c	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10588	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401237f	          0x4889d0	                            mov rax, rdx	     10588	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012382	        0x48c1e002	                              shl rax, 2	     10588	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012386	          0x4801d0	                            add rax, rdx	     10588	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012389	        0x48c1e003	                              shl rax, 3	     10588	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401238d	    0x480500000000	                              add rax, 0	     10588	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012393	            0x8b00	                    mov eax, dword [rax]	     10588	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012395	    0x890500000000	            mov dword [0x0401239b], eax 	     10588	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401239b	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10589	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x401239e	          0x4889d0	                            mov rax, rdx	     10589	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x40123a1	        0x48c1e002	                              shl rax, 2	     10589	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x40123a5	          0x4801d0	                            add rax, rdx	     10589	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x40123a8	        0x48c1e003	                              shl rax, 3	     10589	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x40123ac	    0x480500000000	                              add rax, 0	     10589	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x40123b2	        0x488b5008	                mov rdx, qword [rax + 8]	     10589	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x40123b6	          0x488b00	                    mov rax, qword [rax]	     10589	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x40123b9	    0x488905000000	            mov qword [0x040123c0], rax 	     10589	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x40123c0	    0x488915000000	            mov qword [0x040123c7], rdx 	     10589	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x40123c7	    0x8b0500000000	            mov eax, dword [0x040123cd] 	     10590	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_12
0x40123cd	            0x85c0	                           test eax, eax	     10590	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_12
0x40123cf	     0xf85f1010000	                           jne 0x40125c6	     10590	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_12
0x40123d5	    0x8b0500000000	            mov eax, dword [0x040123db] 	     10592	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_12
0x40123db	    0x890500000000	            mov dword [0x040123e1], eax 	     10592	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_12
0x40123e1	    0x488b05000000	            mov rax, qword [0x040123e8] 	     10593	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_12
0x40123e8	    0x488b15000000	            mov rdx, qword [0x040123ef] 	     10593	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_12
0x40123ef	    0x488905000000	            mov qword [0x040123f6], rax 	     10593	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_12
0x40123f6	    0x488915000000	            mov qword [0x040123fd], rdx 	     10593	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_12
0x40123fd	      0xe9c4010000	                           jmp 0x40125c6	     10595	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x4012402	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10597	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x4012405	          0x4889d0	                            mov rax, rdx	     10597	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x4012408	        0x48c1e002	                              shl rax, 2	     10597	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x401240c	          0x4801d0	                            add rax, rdx	     10597	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x401240f	        0x48c1e003	                              shl rax, 3	     10597	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x4012413	    0x480500000000	                              add rax, 0	     10597	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x4012419	          0x488b00	                    mov rax, qword [rax]	     10597	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x401241c	           0xfb600	                   movzx eax, byte [rax]	     10597	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x401241f	            0x3c2e	                            cmp al, 0x2e	     10597	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x4012421	     0xf858c010000	                           jne 0x40125b3	     10597	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x4012427	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x401242a	          0x4889d0	                            mov rax, rdx	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x401242d	        0x48c1e002	                              shl rax, 2	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x4012431	          0x4801d0	                            add rax, rdx	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x4012434	        0x48c1e003	                              shl rax, 3	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x4012438	    0x480500000000	                              add rax, 0	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x401243e	          0x488b00	                    mov rax, qword [rax]	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x4012441	        0x488d5001	                      lea rdx, [rax + 1]	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x4012445	        0x488b4598	             mov rax, qword [rbp - 0x68]	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x4012449	          0x4889d6	                            mov rsi, rdx	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x401244c	          0x4889c7	                            mov rdi, rax	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x401244f	      0xe800000000	                          call 0x4012454	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x4012454	            0x85c0	                           test eax, eax	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x4012456	     0xf8557010000	                           jne 0x40125b3	     10598	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_26
0x401245c	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x401245f	          0x4889d0	                            mov rax, rdx	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x4012462	        0x48c1e002	                              shl rax, 2	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x4012466	          0x4801d0	                            add rax, rdx	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x4012469	        0x48c1e003	                              shl rax, 3	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x401246d	    0x480500000000	                              add rax, 0	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x4012473	        0x488b5008	                mov rdx, qword [rax + 8]	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x4012477	          0x488b00	                    mov rax, qword [rax]	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x401247a	    0x488b3d000000	            mov rdi, qword [0x04012481] 	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x4012481	    0x488b35000000	            mov rsi, qword [0x04012488] 	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x4012488	          0x4889d1	                            mov rcx, rdx	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x401248b	          0x4889c2	                            mov rdx, rax	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x401248e	      0xe856e2feff	                   call sym.cpu_flags_or	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x4012493	        0x488945e0	             mov qword [rbp - 0x20], rax	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x4012497	        0x488955e8	             mov qword [rbp - 0x18], rdx	     10603	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	CALL_27
0x401249b	        0x488d45e0	                   lea rax, [rbp - 0x20]	     10606	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_28
0x401249f	      0xbe00000000	                              mov esi, 0	     10606	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_28
0x40124a4	          0x4889c7	                            mov rdi, rax	     10606	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_28
0x40124a7	      0xe800e1feff	                call sym.cpu_flags_equal	     10606	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_28
0x40124ac	            0x85c0	                           test eax, eax	     10606	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_28
0x40124ae	     0xf85b6000000	                           jne 0x401256a	     10606	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_28
0x40124b4	    0x488b05000000	            mov rax, qword [0x040124bb] 	     10608	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15
0x40124bb	          0x4885c0	                           test rax, rax	     10608	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15
0x40124be	            0x7453	                            je 0x4012513	     10608	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15
0x40124c0	    0x488b05000000	            mov rax, qword [0x040124c7] 	     10610	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15
0x40124c7	        0x488945d0	             mov qword [rbp - 0x30], rax	     10610	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15
0x40124cb	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124ce	          0x4889d0	                            mov rax, rdx	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124d1	        0x48c1e002	                              shl rax, 2	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124d5	          0x4801d0	                            add rax, rdx	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124d8	        0x48c1e003	                              shl rax, 3	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124dc	    0x480500000000	                              add rax, 0	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124e2	          0x488b08	                    mov rcx, qword [rax]	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124e5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124e9	      0xba00000000	                              mov edx, 0	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124ee	          0x4889ce	                            mov rsi, rcx	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124f1	          0x4889c7	                            mov rdi, rax	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124f4	      0xb800000000	                              mov eax, 0	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124f9	      0xe800000000	                          call 0x40124fe	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x40124fe	    0x488905000000	            mov qword [0x04012505], rax 	     10611	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_29
0x4012505	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10614	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_30
0x4012509	          0x4889c7	                            mov rdi, rax	     10614	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_30
0x401250c	      0xe800000000	                          call 0x4012511	     10614	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_30
0x4012511	            0xeb29	                           jmp 0x401253c	     10614	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	IF_15	CALL_30
0x4012513	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10617	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_31
0x4012516	          0x4889d0	                            mov rax, rdx	     10617	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_31
0x4012519	        0x48c1e002	                              shl rax, 2	     10617	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_31
0x401251d	          0x4801d0	                            add rax, rdx	     10617	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_31
0x4012520	        0x48c1e003	                              shl rax, 3	     10617	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_31
0x4012524	    0x480500000000	                              add rax, 0	     10617	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_31
0x401252a	          0x488b00	                    mov rax, qword [rax]	     10617	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_31
0x401252d	          0x4889c7	                            mov rdi, rax	     10617	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_31
0x4012530	      0xe800000000	                          call 0x4012535	     10617	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_31
0x4012535	    0x488905000000	            mov qword [0x0401253c], rax 	     10617	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14	CALL_31
0x401253c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10618	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14
0x4012540	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     10618	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14
0x4012544	    0x488905000000	            mov qword [0x0401254b], rax 	     10618	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14
0x401254b	    0x488915000000	            mov qword [0x04012552], rdx 	     10618	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14
0x4012552	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10619	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14
0x4012556	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     10619	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14
0x401255a	    0x488905000000	            mov qword [0x04012561], rax 	     10619	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14
0x4012561	    0x488915000000	            mov qword [0x04012568], rdx 	     10619	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	IF_14
0x4012568	            0xeb5d	                           jmp 0x40125c7	     10625	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x401256a	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x401256d	          0x4889d0	                            mov rax, rdx	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x4012570	        0x48c1e002	                              shl rax, 2	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x4012574	          0x4801d0	                            add rax, rdx	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x4012577	        0x48c1e003	                              shl rax, 3	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x401257b	    0x480500000000	                              add rax, 0	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x4012581	        0x488b5008	                mov rdx, qword [rax + 8]	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x4012585	          0x488b00	                    mov rax, qword [rax]	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x4012588	    0x488b3d000000	            mov rdi, qword [0x0401258f] 	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x401258f	    0x488b35000000	            mov rsi, qword [0x04012596] 	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x4012596	          0x4889d1	                            mov rcx, rdx	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x4012599	          0x4889c2	                            mov rdx, rax	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x401259c	      0xe848e1feff	                   call sym.cpu_flags_or	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x40125a1	    0x488905000000	            mov qword [0x040125a8], rax 	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x40125a8	    0x488915000000	            mov qword [0x040125af], rdx 	     10623	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13	ELSE_4	CALL_32
0x40125af	              0x90	                                     nop	     10625	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x40125b0	            0xeb15	                           jmp 0x40125c7	     10625	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	ELSE_2	IF_13
0x40125b2	              0x90	                                     nop	     10583	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10	IF_11
0x40125b3	        0x83459401	               add dword [rbp - 0x6c], 1	     10577	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	CALL_24
0x40125b7	    0x817d94830000	           cmp dword [rbp - 0x6c], 0x83 	     10577	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	CALL_24
0x40125be	     0xf8607fdffff	                           jbe 0x40122cb	     10577	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	CALL_24
0x40125c4	            0xeb01	                           jmp 0x40125c7	     10577	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	CALL_24
0x40125c6	              0x90	                                     nop	     10595	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	FOR_4	IF_10
0x40125c7	    0x817d94830000	           cmp dword [rbp - 0x6c], 0x83 	     10629	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	CALL_33
0x40125ce	     0xf8624010000	                           jbe 0x40126f8	     10629	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	CALL_33
0x40125d4	    0xc74594000000	               mov dword [rbp - 0x6c], 0	     10632	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	CALL_34
0x40125db	      0xe9fe000000	                           jmp 0x40126de	     10632	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	CALL_34
0x40125e0	          0x8b4594	             mov eax, dword [rbp - 0x6c]	     10633	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_35
0x40125e3	        0x48c1e005	                              shl rax, 5	     10633	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_35
0x40125e7	    0x480500000000	                              add rax, 0	     10633	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_35
0x40125ed	          0x488b10	                    mov rdx, qword [rax]	     10633	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_35
0x40125f0	        0x488b4598	             mov rax, qword [rbp - 0x68]	     10633	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_35
0x40125f4	          0x4889d6	                            mov rsi, rdx	     10633	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_35
0x40125f7	          0x4889c7	                            mov rdi, rax	     10633	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_35
0x40125fa	      0xe800000000	                          call 0x40125ff	     10633	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_35
0x40125ff	            0x85c0	                           test eax, eax	     10633	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_35
0x4012601	     0xf85d3000000	                           jne 0x40126da	     10633	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_35
0x4012607	          0x8b4594	             mov eax, dword [rbp - 0x6c]	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x401260a	        0x48c1e005	                              shl rax, 5	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x401260e	    0x480500000000	                              add rax, 0	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x4012614	        0x488b5014	            mov rdx, qword [rax + 0x14] 	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x4012618	        0x488b400c	              mov rax, qword [rax + 0xc]	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x401261c	    0x488b3d000000	            mov rdi, qword [0x04012623] 	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x4012623	    0x488b35000000	            mov rsi, qword [0x0401262a] 	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x401262a	          0x4889d1	                            mov rcx, rdx	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x401262d	          0x4889c2	                            mov rdx, rax	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x4012630	      0xe835e1feff	              call sym.cpu_flags_and_not	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x4012635	        0x488945e0	             mov qword [rbp - 0x20], rax	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x4012639	        0x488955e8	             mov qword [rbp - 0x18], rdx	     10637	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	CALL_36
0x401263d	        0x488d45e0	                   lea rax, [rbp - 0x20]	     10639	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	CALL_37
0x4012641	      0xbe00000000	                              mov esi, 0	     10639	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	CALL_37
0x4012646	          0x4889c7	                            mov rdi, rax	     10639	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	CALL_37
0x4012649	      0xe85edffeff	                call sym.cpu_flags_equal	     10639	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	CALL_37
0x401264e	            0x85c0	                           test eax, eax	     10639	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	CALL_37
0x4012650	     0xf8594000000	                           jne 0x40126ea	     10639	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	CALL_37
0x4012656	    0x488b05000000	            mov rax, qword [0x0401265d] 	     10641	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19
0x401265d	          0x4885c0	                           test rax, rax	     10641	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19
0x4012660	            0x7436	                            je 0x4012698	     10641	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19
0x4012662	    0x488b05000000	            mov rax, qword [0x04012669] 	     10643	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19
0x4012669	        0x488945d8	             mov qword [rbp - 0x28], rax	     10643	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19
0x401266d	        0x488b4598	             mov rax, qword [rbp - 0x68]	     10644	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19	CALL_38
0x4012671	      0xbe00000000	                              mov esi, 0	     10644	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19	CALL_38
0x4012676	          0x4889c7	                            mov rdi, rax	     10644	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19	CALL_38
0x4012679	      0xb800000000	                              mov eax, 0	     10644	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19	CALL_38
0x401267e	      0xe800000000	                          call 0x4012683	     10644	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19	CALL_38
0x4012683	    0x488905000000	            mov qword [0x0401268a], rax 	     10644	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19	CALL_38
0x401268a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10646	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19	CALL_39
0x401268e	          0x4889c7	                            mov rdi, rax	     10646	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19	CALL_39
0x4012691	      0xe800000000	                          call 0x4012696	     10646	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19	CALL_39
0x4012696	            0xeb13	                           jmp 0x40126ab	     10646	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	IF_19	CALL_39
0x4012698	        0x488b4598	             mov rax, qword [rbp - 0x68]	     10649	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	CALL_40
0x401269c	          0x4889c7	                            mov rdi, rax	     10649	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	CALL_40
0x401269f	      0xe800000000	                          call 0x40126a4	     10649	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	CALL_40
0x40126a4	    0x488905000000	            mov qword [0x040126ab], rax 	     10649	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18	CALL_40
0x40126ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10650	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18
0x40126af	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     10650	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18
0x40126b3	    0x488905000000	            mov qword [0x040126ba], rax 	     10650	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18
0x40126ba	    0x488915000000	            mov qword [0x040126c1], rdx 	     10650	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18
0x40126c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10651	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18
0x40126c5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     10651	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18
0x40126c9	    0x488905000000	            mov qword [0x040126d0], rax 	     10651	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18
0x40126d0	    0x488915000000	            mov qword [0x040126d7], rdx 	     10651	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17	IF_18
0x40126d7	              0x90	                                     nop	     10653	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17
0x40126d8	            0xeb10	                           jmp 0x40126ea	     10653	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17
0x40126da	        0x83459401	               add dword [rbp - 0x6c], 1	     10632	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	CALL_34
0x40126de	        0x837d9420	           cmp dword [rbp - 0x6c], 0x20 	     10632	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	CALL_34
0x40126e2	     0xf86f8feffff	                           jbe 0x40125e0	     10632	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	CALL_34
0x40126e8	            0xeb01	                           jmp 0x40126eb	     10632	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	CALL_34
0x40126ea	              0x90	                                     nop	     10653	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	FOR_5	IF_17
0x40126eb	        0x837d9420	           cmp dword [rbp - 0x6c], 0x20 	     10656	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	IF_20	CALL_41
0x40126ef	            0x7607	                           jbe 0x40126f8	     10656	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	IF_20	CALL_41
0x40126f1	    0xc74594840000	           mov dword [rbp - 0x6c], 0x84 	     10657	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_16	CALL_42
0x40126f8	    0x817d94830000	           cmp dword [rbp - 0x6c], 0x83 	     10660	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_21	CALL_43
0x40126ff	            0x7621	                           jbe 0x4012722	     10660	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	IF_21	CALL_43
0x4012701	      0xbf00000000	                              mov edi, 0	     10661	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_45
0x4012706	      0xe800000000	                          call 0x401270b	     10661	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_45
0x401270b	          0x4889c2	                            mov rdx, rax	     10661	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_45
0x401270e	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10661	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_45
0x4012712	          0x4889c6	                            mov rsi, rax	     10661	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_45
0x4012715	          0x4889d7	                            mov rdi, rdx	     10661	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_45
0x4012718	      0xb800000000	                              mov eax, 0	     10661	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_45
0x401271d	      0xe800000000	                          call 0x4012722	     10661	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1	CALL_45
0x4012722	        0x488b45a0	             mov rax, qword [rbp - 0x60]	     10663	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1
0x4012726	        0x48894598	             mov qword [rbp - 0x68], rax	     10663	tc-i386.c	FUNCTION_124	SWITCH_1	DO_1
0x401272a	      0x48837da000	               cmp qword [rbp - 0x60], 0	     10665	tc-i386.c	FUNCTION_124	SWITCH_1
0x401272f	     0xf8533fbffff	                           jne 0x4012268	     10665	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012735	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10666	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_46
0x4012739	          0x4889c7	                            mov rdi, rax	     10666	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_46
0x401273c	      0xe800000000	                          call 0x4012741	     10666	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_46
0x4012741	      0xe9ed060000	                           jmp 0x4012e33	     10667	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012746	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10670	tc-i386.c	FUNCTION_124	SWITCH_1	IF_22
0x401274a	           0xfb600	                   movzx eax, byte [rax]	     10670	tc-i386.c	FUNCTION_124	SWITCH_1	IF_22
0x401274d	            0x3c2e	                            cmp al, 0x2e	     10670	tc-i386.c	FUNCTION_124	SWITCH_1	IF_22
0x401274f	            0x7521	                           jne 0x4012772	     10670	tc-i386.c	FUNCTION_124	SWITCH_1	IF_22
0x4012751	      0xbf00000000	                              mov edi, 0	     10671	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_48
0x4012756	      0xe800000000	                          call 0x401275b	     10671	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_48
0x401275b	          0x4889c2	                            mov rdx, rax	     10671	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_48
0x401275e	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10671	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_48
0x4012762	          0x4889c6	                            mov rsi, rax	     10671	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_48
0x4012765	          0x4889d7	                            mov rdi, rdx	     10671	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_48
0x4012768	      0xb800000000	                              mov eax, 0	     10671	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_48
0x401276d	      0xe800000000	                          call 0x4012772	     10671	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_48
0x4012772	    0xc74594000000	               mov dword [rbp - 0x6c], 0	     10672	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	CALL_49
0x4012779	      0xe988000000	                           jmp 0x4012806	     10672	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	CALL_49
0x401277e	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x4012781	          0x4889d0	                            mov rax, rdx	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x4012784	        0x48c1e002	                              shl rax, 2	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x4012788	          0x4801d0	                            add rax, rdx	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x401278b	        0x48c1e003	                              shl rax, 3	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x401278f	    0x480500000000	                              add rax, 0	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x4012795	          0x488b10	                    mov rdx, qword [rax]	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x4012798	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x401279c	          0x4889d6	                            mov rsi, rdx	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x401279f	          0x4889c7	                            mov rdi, rax	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x40127a2	      0xe800000000	                          call 0x40127a7	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x40127a7	            0x85c0	                           test eax, eax	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x40127a9	            0x7557	                           jne 0x4012802	     10674	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23	CALL_50
0x40127ab	    0xc70500000000	               mov dword [0x040127b5], 1	     10676	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127b5	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10677	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127b8	          0x4889d0	                            mov rax, rdx	     10677	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127bb	        0x48c1e002	                              shl rax, 2	     10677	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127bf	          0x4801d0	                            add rax, rdx	     10677	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127c2	        0x48c1e003	                              shl rax, 3	     10677	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127c6	    0x480500000000	                              add rax, 0	     10677	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127cc	            0x8b00	                    mov eax, dword [rax]	     10677	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127ce	    0x890500000000	            mov dword [0x040127d4], eax 	     10677	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127d4	          0x8b5594	             mov edx, dword [rbp - 0x6c]	     10678	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127d7	          0x4889d0	                            mov rax, rdx	     10678	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127da	        0x48c1e002	                              shl rax, 2	     10678	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127de	          0x4801d0	                            add rax, rdx	     10678	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127e1	        0x48c1e003	                              shl rax, 3	     10678	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127e5	    0x480500000000	                              add rax, 0	     10678	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127eb	        0x488b5008	                mov rdx, qword [rax + 8]	     10678	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127ef	          0x488b00	                    mov rax, qword [rax]	     10678	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127f2	    0x488905000000	            mov qword [0x040127f9], rax 	     10678	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x40127f9	    0x488915000000	            mov qword [0x04012800], rdx 	     10678	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x4012800	            0xeb11	                           jmp 0x4012813	     10679	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	IF_23
0x4012802	        0x83459401	               add dword [rbp - 0x6c], 1	     10672	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	CALL_49
0x4012806	    0x817d94830000	           cmp dword [rbp - 0x6c], 0x83 	     10672	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	CALL_49
0x401280d	     0xf866bffffff	                           jbe 0x401277e	     10672	tc-i386.c	FUNCTION_124	SWITCH_1	FOR_6	CALL_49
0x4012813	    0x817d94830000	           cmp dword [rbp - 0x6c], 0x83 	     10682	tc-i386.c	FUNCTION_124	SWITCH_1	IF_24	CALL_51
0x401281a	     0xf8612060000	                           jbe 0x4012e32	     10682	tc-i386.c	FUNCTION_124	SWITCH_1	IF_24	CALL_51
0x4012820	      0xbf00000000	                              mov edi, 0	     10683	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_53
0x4012825	      0xe800000000	                          call 0x401282a	     10683	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_53
0x401282a	          0x4889c2	                            mov rdx, rax	     10683	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_53
0x401282d	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10683	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_53
0x4012831	          0x4889c6	                            mov rsi, rax	     10683	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_53
0x4012834	          0x4889d7	                            mov rdi, rdx	     10683	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_53
0x4012837	      0xb800000000	                              mov eax, 0	     10683	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_53
0x401283c	      0xe800000000	                          call 0x4012841	     10683	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_53
0x4012841	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10687	tc-i386.c	FUNCTION_124	SWITCH_1	IF_25	CALL_54
0x4012845	      0xbe00000000	                              mov esi, 0	     10687	tc-i386.c	FUNCTION_124	SWITCH_1	IF_25	CALL_54
0x401284a	          0x4889c7	                            mov rdi, rax	     10687	tc-i386.c	FUNCTION_124	SWITCH_1	IF_25	CALL_54
0x401284d	      0xe800000000	                          call 0x4012852	     10687	tc-i386.c	FUNCTION_124	SWITCH_1	IF_25	CALL_54
0x4012852	            0x85c0	                           test eax, eax	     10687	tc-i386.c	FUNCTION_124	SWITCH_1	IF_25	CALL_54
0x4012854	            0x750f	                           jne 0x4012865	     10687	tc-i386.c	FUNCTION_124	SWITCH_1	IF_25	CALL_54
0x4012856	    0xc70500000000	               mov dword [0x04012860], 0	     10688	tc-i386.c	FUNCTION_124	SWITCH_1	IF_25
0x4012860	      0xe9ce050000	                           jmp 0x4012e33	     10693	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012865	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10689	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_6	IF_26	CALL_55
0x4012869	      0xbe00000000	                              mov esi, 0	     10689	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_6	IF_26	CALL_55
0x401286e	          0x4889c7	                            mov rdi, rax	     10689	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_6	IF_26	CALL_55
0x4012871	      0xe800000000	                          call 0x4012876	     10689	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_6	IF_26	CALL_55
0x4012876	            0x85c0	                           test eax, eax	     10689	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_6	IF_26	CALL_55
0x4012878	            0x750f	                           jne 0x4012889	     10689	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_6	IF_26	CALL_55
0x401287a	    0xc70500000000	               mov dword [0x04012884], 1	     10690	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_6	IF_26
0x4012884	      0xe9aa050000	                           jmp 0x4012e33	     10693	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012889	      0xbf00000000	                              mov edi, 0	     10692	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_57
0x401288e	      0xe800000000	                          call 0x4012893	     10692	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_57
0x4012893	          0x4889c2	                            mov rdx, rax	     10692	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_57
0x4012896	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10692	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_57
0x401289a	          0x4889c6	                            mov rsi, rax	     10692	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_57
0x401289d	          0x4889d7	                            mov rdi, rdx	     10692	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_57
0x40128a0	      0xb800000000	                              mov eax, 0	     10692	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_57
0x40128a5	      0xe800000000	                          call 0x40128aa	     10692	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_57
0x40128aa	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10696	tc-i386.c	FUNCTION_124	SWITCH_1	IF_27	CALL_58
0x40128ae	      0xbe00000000	                              mov esi, 0	     10696	tc-i386.c	FUNCTION_124	SWITCH_1	IF_27	CALL_58
0x40128b3	          0x4889c7	                            mov rdi, rax	     10696	tc-i386.c	FUNCTION_124	SWITCH_1	IF_27	CALL_58
0x40128b6	      0xe800000000	                          call 0x40128bb	     10696	tc-i386.c	FUNCTION_124	SWITCH_1	IF_27	CALL_58
0x40128bb	            0x85c0	                           test eax, eax	     10696	tc-i386.c	FUNCTION_124	SWITCH_1	IF_27	CALL_58
0x40128bd	            0x750f	                           jne 0x40128ce	     10696	tc-i386.c	FUNCTION_124	SWITCH_1	IF_27	CALL_58
0x40128bf	    0xc70500000000	               mov dword [0x040128c9], 0	     10697	tc-i386.c	FUNCTION_124	SWITCH_1	IF_27
0x40128c9	      0xe965050000	                           jmp 0x4012e33	     10702	tc-i386.c	FUNCTION_124	SWITCH_1
0x40128ce	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10698	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_8	IF_28	CALL_59
0x40128d2	      0xbe00000000	                              mov esi, 0	     10698	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_8	IF_28	CALL_59
0x40128d7	          0x4889c7	                            mov rdi, rax	     10698	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_8	IF_28	CALL_59
0x40128da	      0xe800000000	                          call 0x40128df	     10698	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_8	IF_28	CALL_59
0x40128df	            0x85c0	                           test eax, eax	     10698	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_8	IF_28	CALL_59
0x40128e1	            0x750f	                           jne 0x40128f2	     10698	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_8	IF_28	CALL_59
0x40128e3	    0xc70500000000	               mov dword [0x040128ed], 1	     10699	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_8	IF_28
0x40128ed	      0xe941050000	                           jmp 0x4012e33	     10702	tc-i386.c	FUNCTION_124	SWITCH_1
0x40128f2	      0xbf00000000	                              mov edi, 0	     10701	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_61
0x40128f7	      0xe800000000	                          call 0x40128fc	     10701	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_61
0x40128fc	          0x4889c2	                            mov rdx, rax	     10701	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_61
0x40128ff	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10701	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_61
0x4012903	          0x4889c6	                            mov rsi, rax	     10701	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_61
0x4012906	          0x4889d7	                            mov rdi, rdx	     10701	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_61
0x4012909	      0xb800000000	                              mov eax, 0	     10701	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_61
0x401290e	      0xe800000000	                          call 0x4012913	     10701	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_61
0x4012913	    0xc70500000000	               mov dword [0x0401291d], 1	     10705	tc-i386.c	FUNCTION_124	SWITCH_1
0x401291d	      0xe911050000	                           jmp 0x4012e33	     10706	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012922	    0xc70500000000	               mov dword [0x0401292c], 1	     10709	tc-i386.c	FUNCTION_124	SWITCH_1
0x401292c	      0xe902050000	                           jmp 0x4012e33	     10710	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012931	    0xc70500000000	               mov dword [0x0401293b], 1	     10713	tc-i386.c	FUNCTION_124	SWITCH_1
0x401293b	      0xe9f3040000	                           jmp 0x4012e33	     10714	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012940	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10717	tc-i386.c	FUNCTION_124	SWITCH_1	IF_29	CALL_62
0x4012944	      0xbe00000000	                              mov esi, 0	     10717	tc-i386.c	FUNCTION_124	SWITCH_1	IF_29	CALL_62
0x4012949	          0x4889c7	                            mov rdi, rax	     10717	tc-i386.c	FUNCTION_124	SWITCH_1	IF_29	CALL_62
0x401294c	      0xe800000000	                          call 0x4012951	     10717	tc-i386.c	FUNCTION_124	SWITCH_1	IF_29	CALL_62
0x4012951	            0x85c0	                           test eax, eax	     10717	tc-i386.c	FUNCTION_124	SWITCH_1	IF_29	CALL_62
0x4012953	            0x750f	                           jne 0x4012964	     10717	tc-i386.c	FUNCTION_124	SWITCH_1	IF_29	CALL_62
0x4012955	    0xc70500000000	               mov dword [0x0401295f], 2	     10718	tc-i386.c	FUNCTION_124	SWITCH_1	IF_29
0x401295f	      0xe9cf040000	                           jmp 0x4012e33	     10725	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012964	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10719	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_10	IF_30	CALL_63
0x4012968	      0xbe00000000	                              mov esi, 0	     10719	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_10	IF_30	CALL_63
0x401296d	          0x4889c7	                            mov rdi, rax	     10719	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_10	IF_30	CALL_63
0x4012970	      0xe800000000	                          call 0x4012975	     10719	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_10	IF_30	CALL_63
0x4012975	            0x85c0	                           test eax, eax	     10719	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_10	IF_30	CALL_63
0x4012977	            0x750f	                           jne 0x4012988	     10719	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_10	IF_30	CALL_63
0x4012979	    0xc70500000000	               mov dword [0x04012983], 1	     10720	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_10	IF_30
0x4012983	      0xe9ab040000	                           jmp 0x4012e33	     10725	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012988	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10721	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_11	IF_31	CALL_64
0x401298c	      0xbe00000000	                              mov esi, 0	     10721	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_11	IF_31	CALL_64
0x4012991	          0x4889c7	                            mov rdi, rax	     10721	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_11	IF_31	CALL_64
0x4012994	      0xe800000000	                          call 0x4012999	     10721	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_11	IF_31	CALL_64
0x4012999	            0x85c0	                           test eax, eax	     10721	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_11	IF_31	CALL_64
0x401299b	            0x750f	                           jne 0x40129ac	     10721	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_11	IF_31	CALL_64
0x401299d	    0xc70500000000	               mov dword [0x040129a7], 0	     10722	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_11	IF_31
0x40129a7	      0xe987040000	                           jmp 0x4012e33	     10725	tc-i386.c	FUNCTION_124	SWITCH_1
0x40129ac	      0xbf00000000	                              mov edi, 0	     10724	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_66
0x40129b1	      0xe800000000	                          call 0x40129b6	     10724	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_66
0x40129b6	          0x4889c2	                            mov rdx, rax	     10724	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_66
0x40129b9	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10724	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_66
0x40129bd	          0x4889c6	                            mov rsi, rax	     10724	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_66
0x40129c0	          0x4889d7	                            mov rdi, rdx	     10724	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_66
0x40129c3	      0xb800000000	                              mov eax, 0	     10724	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_66
0x40129c8	      0xe800000000	                          call 0x40129cd	     10724	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_66
0x40129cd	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10728	tc-i386.c	FUNCTION_124	SWITCH_1	IF_32	CALL_67
0x40129d1	      0xbe00000000	                              mov esi, 0	     10728	tc-i386.c	FUNCTION_124	SWITCH_1	IF_32	CALL_67
0x40129d6	          0x4889c7	                            mov rdi, rax	     10728	tc-i386.c	FUNCTION_124	SWITCH_1	IF_32	CALL_67
0x40129d9	      0xe800000000	                          call 0x40129de	     10728	tc-i386.c	FUNCTION_124	SWITCH_1	IF_32	CALL_67
0x40129de	            0x85c0	                           test eax, eax	     10728	tc-i386.c	FUNCTION_124	SWITCH_1	IF_32	CALL_67
0x40129e0	            0x750f	                           jne 0x40129f1	     10728	tc-i386.c	FUNCTION_124	SWITCH_1	IF_32	CALL_67
0x40129e2	    0xc70500000000	               mov dword [0x040129ec], 2	     10729	tc-i386.c	FUNCTION_124	SWITCH_1	IF_32
0x40129ec	      0xe942040000	                           jmp 0x4012e33	     10736	tc-i386.c	FUNCTION_124	SWITCH_1
0x40129f1	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10730	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_13	IF_33	CALL_68
0x40129f5	      0xbe00000000	                              mov esi, 0	     10730	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_13	IF_33	CALL_68
0x40129fa	          0x4889c7	                            mov rdi, rax	     10730	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_13	IF_33	CALL_68
0x40129fd	      0xe800000000	                          call 0x4012a02	     10730	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_13	IF_33	CALL_68
0x4012a02	            0x85c0	                           test eax, eax	     10730	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_13	IF_33	CALL_68
0x4012a04	            0x750f	                           jne 0x4012a15	     10730	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_13	IF_33	CALL_68
0x4012a06	    0xc70500000000	               mov dword [0x04012a10], 1	     10731	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_13	IF_33
0x4012a10	      0xe91e040000	                           jmp 0x4012e33	     10736	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012a15	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10732	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_14	IF_34	CALL_69
0x4012a19	      0xbe00000000	                              mov esi, 0	     10732	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_14	IF_34	CALL_69
0x4012a1e	          0x4889c7	                            mov rdi, rax	     10732	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_14	IF_34	CALL_69
0x4012a21	      0xe800000000	                          call 0x4012a26	     10732	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_14	IF_34	CALL_69
0x4012a26	            0x85c0	                           test eax, eax	     10732	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_14	IF_34	CALL_69
0x4012a28	            0x750f	                           jne 0x4012a39	     10732	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_14	IF_34	CALL_69
0x4012a2a	    0xc70500000000	               mov dword [0x04012a34], 0	     10733	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_14	IF_34
0x4012a34	      0xe9fa030000	                           jmp 0x4012e33	     10736	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012a39	      0xbf00000000	                              mov edi, 0	     10735	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_71
0x4012a3e	      0xe800000000	                          call 0x4012a43	     10735	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_71
0x4012a43	          0x4889c2	                            mov rdx, rax	     10735	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_71
0x4012a46	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10735	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_71
0x4012a4a	          0x4889c6	                            mov rsi, rax	     10735	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_71
0x4012a4d	          0x4889d7	                            mov rdi, rdx	     10735	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_71
0x4012a50	      0xb800000000	                              mov eax, 0	     10735	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_71
0x4012a55	      0xe800000000	                          call 0x4012a5a	     10735	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_71
0x4012a5a	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10739	tc-i386.c	FUNCTION_124	SWITCH_1	IF_35	CALL_72
0x4012a5e	      0xbe00000000	                              mov esi, 0	     10739	tc-i386.c	FUNCTION_124	SWITCH_1	IF_35	CALL_72
0x4012a63	          0x4889c7	                            mov rdi, rax	     10739	tc-i386.c	FUNCTION_124	SWITCH_1	IF_35	CALL_72
0x4012a66	      0xe800000000	                          call 0x4012a6b	     10739	tc-i386.c	FUNCTION_124	SWITCH_1	IF_35	CALL_72
0x4012a6b	            0x85c0	                           test eax, eax	     10739	tc-i386.c	FUNCTION_124	SWITCH_1	IF_35	CALL_72
0x4012a6d	            0x750f	                           jne 0x4012a7e	     10739	tc-i386.c	FUNCTION_124	SWITCH_1	IF_35	CALL_72
0x4012a6f	    0xc70500000000	               mov dword [0x04012a79], 0	     10740	tc-i386.c	FUNCTION_124	SWITCH_1	IF_35
0x4012a79	      0xe9b5030000	                           jmp 0x4012e33	     10745	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012a7e	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10741	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_16	IF_36	CALL_73
0x4012a82	      0xbe00000000	                              mov esi, 0	     10741	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_16	IF_36	CALL_73
0x4012a87	          0x4889c7	                            mov rdi, rax	     10741	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_16	IF_36	CALL_73
0x4012a8a	      0xe800000000	                          call 0x4012a8f	     10741	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_16	IF_36	CALL_73
0x4012a8f	            0x85c0	                           test eax, eax	     10741	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_16	IF_36	CALL_73
0x4012a91	            0x750f	                           jne 0x4012aa2	     10741	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_16	IF_36	CALL_73
0x4012a93	    0xc70500000000	               mov dword [0x04012a9d], 1	     10742	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_16	IF_36
0x4012a9d	      0xe991030000	                           jmp 0x4012e33	     10745	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012aa2	      0xbf00000000	                              mov edi, 0	     10744	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_75
0x4012aa7	      0xe800000000	                          call 0x4012aac	     10744	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_75
0x4012aac	          0x4889c2	                            mov rdx, rax	     10744	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_75
0x4012aaf	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10744	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_75
0x4012ab3	          0x4889c6	                            mov rsi, rax	     10744	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_75
0x4012ab6	          0x4889d7	                            mov rdi, rdx	     10744	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_75
0x4012ab9	      0xb800000000	                              mov eax, 0	     10744	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_75
0x4012abe	      0xe800000000	                          call 0x4012ac3	     10744	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_75
0x4012ac3	    0xc70500000000	               mov dword [0x04012acd], 1	     10748	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012acd	      0xe961030000	                           jmp 0x4012e33	     10749	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012ad2	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10752	tc-i386.c	FUNCTION_124	SWITCH_1	IF_37	CALL_76
0x4012ad6	      0xbe00000000	                              mov esi, 0	     10752	tc-i386.c	FUNCTION_124	SWITCH_1	IF_37	CALL_76
0x4012adb	          0x4889c7	                            mov rdi, rax	     10752	tc-i386.c	FUNCTION_124	SWITCH_1	IF_37	CALL_76
0x4012ade	      0xe800000000	                          call 0x4012ae3	     10752	tc-i386.c	FUNCTION_124	SWITCH_1	IF_37	CALL_76
0x4012ae3	            0x85c0	                           test eax, eax	     10752	tc-i386.c	FUNCTION_124	SWITCH_1	IF_37	CALL_76
0x4012ae5	            0x750f	                           jne 0x4012af6	     10752	tc-i386.c	FUNCTION_124	SWITCH_1	IF_37	CALL_76
0x4012ae7	    0xc70500000000	               mov dword [0x04012af1], 0	     10753	tc-i386.c	FUNCTION_124	SWITCH_1	IF_37
0x4012af1	      0xe93d030000	                           jmp 0x4012e33	     10760	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012af6	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10754	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_18	IF_38	CALL_77
0x4012afa	      0xbe00000000	                              mov esi, 0	     10754	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_18	IF_38	CALL_77
0x4012aff	          0x4889c7	                            mov rdi, rax	     10754	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_18	IF_38	CALL_77
0x4012b02	      0xe800000000	                          call 0x4012b07	     10754	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_18	IF_38	CALL_77
0x4012b07	            0x85c0	                           test eax, eax	     10754	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_18	IF_38	CALL_77
0x4012b09	            0x750f	                           jne 0x4012b1a	     10754	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_18	IF_38	CALL_77
0x4012b0b	    0xc70500000000	               mov dword [0x04012b15], 1	     10755	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_18	IF_38
0x4012b15	      0xe919030000	                           jmp 0x4012e33	     10760	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012b1a	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10756	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_19	IF_39	CALL_78
0x4012b1e	      0xbe00000000	                              mov esi, 0	     10756	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_19	IF_39	CALL_78
0x4012b23	          0x4889c7	                            mov rdi, rax	     10756	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_19	IF_39	CALL_78
0x4012b26	      0xe800000000	                          call 0x4012b2b	     10756	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_19	IF_39	CALL_78
0x4012b2b	            0x85c0	                           test eax, eax	     10756	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_19	IF_39	CALL_78
0x4012b2d	            0x750f	                           jne 0x4012b3e	     10756	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_19	IF_39	CALL_78
0x4012b2f	    0xc70500000000	               mov dword [0x04012b39], 2	     10757	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_19	IF_39
0x4012b39	      0xe9f5020000	                           jmp 0x4012e33	     10760	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012b3e	      0xbf00000000	                              mov edi, 0	     10759	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_80
0x4012b43	      0xe800000000	                          call 0x4012b48	     10759	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_80
0x4012b48	          0x4889c2	                            mov rdx, rax	     10759	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_80
0x4012b4b	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10759	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_80
0x4012b4f	          0x4889c6	                            mov rsi, rax	     10759	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_80
0x4012b52	          0x4889d7	                            mov rdi, rdx	     10759	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_80
0x4012b55	      0xb800000000	                              mov eax, 0	     10759	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_80
0x4012b5a	      0xe800000000	                          call 0x4012b5f	     10759	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_80
0x4012b5f	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10763	tc-i386.c	FUNCTION_124	SWITCH_1	IF_40	CALL_81
0x4012b63	      0xbe00000000	                              mov esi, 0	     10763	tc-i386.c	FUNCTION_124	SWITCH_1	IF_40	CALL_81
0x4012b68	          0x4889c7	                            mov rdi, rax	     10763	tc-i386.c	FUNCTION_124	SWITCH_1	IF_40	CALL_81
0x4012b6b	      0xe800000000	                          call 0x4012b70	     10763	tc-i386.c	FUNCTION_124	SWITCH_1	IF_40	CALL_81
0x4012b70	            0x85c0	                           test eax, eax	     10763	tc-i386.c	FUNCTION_124	SWITCH_1	IF_40	CALL_81
0x4012b72	            0x750f	                           jne 0x4012b83	     10763	tc-i386.c	FUNCTION_124	SWITCH_1	IF_40	CALL_81
0x4012b74	    0xc70500000000	               mov dword [0x04012b7e], 0	     10764	tc-i386.c	FUNCTION_124	SWITCH_1	IF_40
0x4012b7e	      0xe9b0020000	                           jmp 0x4012e33	     10773	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012b83	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10765	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_21	IF_41	CALL_82
0x4012b87	      0xbe00000000	                              mov esi, 0	     10765	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_21	IF_41	CALL_82
0x4012b8c	          0x4889c7	                            mov rdi, rax	     10765	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_21	IF_41	CALL_82
0x4012b8f	      0xe800000000	                          call 0x4012b94	     10765	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_21	IF_41	CALL_82
0x4012b94	            0x85c0	                           test eax, eax	     10765	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_21	IF_41	CALL_82
0x4012b96	            0x750f	                           jne 0x4012ba7	     10765	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_21	IF_41	CALL_82
0x4012b98	    0xc70500000000	               mov dword [0x04012ba2], 1	     10766	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_21	IF_41
0x4012ba2	      0xe98c020000	                           jmp 0x4012e33	     10773	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012ba7	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10767	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_22	IF_42	CALL_83
0x4012bab	      0xbe00000000	                              mov esi, 0	     10767	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_22	IF_42	CALL_83
0x4012bb0	          0x4889c7	                            mov rdi, rax	     10767	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_22	IF_42	CALL_83
0x4012bb3	      0xe800000000	                          call 0x4012bb8	     10767	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_22	IF_42	CALL_83
0x4012bb8	            0x85c0	                           test eax, eax	     10767	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_22	IF_42	CALL_83
0x4012bba	            0x750f	                           jne 0x4012bcb	     10767	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_22	IF_42	CALL_83
0x4012bbc	    0xc70500000000	               mov dword [0x04012bc6], 2	     10768	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_22	IF_42
0x4012bc6	      0xe968020000	                           jmp 0x4012e33	     10773	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012bcb	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10769	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_23	IF_43	CALL_84
0x4012bcf	      0xbe00000000	                              mov esi, 0	     10769	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_23	IF_43	CALL_84
0x4012bd4	          0x4889c7	                            mov rdi, rax	     10769	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_23	IF_43	CALL_84
0x4012bd7	      0xe800000000	                          call 0x4012bdc	     10769	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_23	IF_43	CALL_84
0x4012bdc	            0x85c0	                           test eax, eax	     10769	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_23	IF_43	CALL_84
0x4012bde	            0x750f	                           jne 0x4012bef	     10769	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_23	IF_43	CALL_84
0x4012be0	    0xc70500000000	               mov dword [0x04012bea], 3	     10770	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_23	IF_43
0x4012bea	      0xe944020000	                           jmp 0x4012e33	     10773	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012bef	      0xbf00000000	                              mov edi, 0	     10772	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_86
0x4012bf4	      0xe800000000	                          call 0x4012bf9	     10772	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_86
0x4012bf9	          0x4889c2	                            mov rdx, rax	     10772	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_86
0x4012bfc	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10772	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_86
0x4012c00	          0x4889c6	                            mov rsi, rax	     10772	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_86
0x4012c03	          0x4889d7	                            mov rdi, rdx	     10772	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_86
0x4012c06	      0xb800000000	                              mov eax, 0	     10772	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_86
0x4012c0b	      0xe800000000	                          call 0x4012c10	     10772	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_86
0x4012c10	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10776	tc-i386.c	FUNCTION_124	SWITCH_1	IF_44	CALL_87
0x4012c14	      0xbe00000000	                              mov esi, 0	     10776	tc-i386.c	FUNCTION_124	SWITCH_1	IF_44	CALL_87
0x4012c19	          0x4889c7	                            mov rdi, rax	     10776	tc-i386.c	FUNCTION_124	SWITCH_1	IF_44	CALL_87
0x4012c1c	      0xe800000000	                          call 0x4012c21	     10776	tc-i386.c	FUNCTION_124	SWITCH_1	IF_44	CALL_87
0x4012c21	            0x85c0	                           test eax, eax	     10776	tc-i386.c	FUNCTION_124	SWITCH_1	IF_44	CALL_87
0x4012c23	            0x750f	                           jne 0x4012c34	     10776	tc-i386.c	FUNCTION_124	SWITCH_1	IF_44	CALL_87
0x4012c25	    0xc70500000000	               mov dword [0x04012c2f], 0	     10777	tc-i386.c	FUNCTION_124	SWITCH_1	IF_44
0x4012c2f	      0xe9ff010000	                           jmp 0x4012e33	     10782	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012c34	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10778	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_25	IF_45	CALL_88
0x4012c38	      0xbe00000000	                              mov esi, 0	     10778	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_25	IF_45	CALL_88
0x4012c3d	          0x4889c7	                            mov rdi, rax	     10778	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_25	IF_45	CALL_88
0x4012c40	      0xe800000000	                          call 0x4012c45	     10778	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_25	IF_45	CALL_88
0x4012c45	            0x85c0	                           test eax, eax	     10778	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_25	IF_45	CALL_88
0x4012c47	            0x750f	                           jne 0x4012c58	     10778	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_25	IF_45	CALL_88
0x4012c49	    0xc70500000000	               mov dword [0x04012c53], 1	     10779	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_25	IF_45
0x4012c53	      0xe9db010000	                           jmp 0x4012e33	     10782	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012c58	      0xbf00000000	                              mov edi, 0	     10781	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_90
0x4012c5d	      0xe800000000	                          call 0x4012c62	     10781	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_90
0x4012c62	          0x4889c2	                            mov rdx, rax	     10781	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_90
0x4012c65	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10781	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_90
0x4012c69	          0x4889c6	                            mov rsi, rax	     10781	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_90
0x4012c6c	          0x4889d7	                            mov rdi, rdx	     10781	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_90
0x4012c6f	      0xb800000000	                              mov eax, 0	     10781	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_90
0x4012c74	      0xe800000000	                          call 0x4012c79	     10781	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_90
0x4012c79	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10791	tc-i386.c	FUNCTION_124	SWITCH_1	IF_46	CALL_91
0x4012c7d	      0xbe00000000	                              mov esi, 0	     10791	tc-i386.c	FUNCTION_124	SWITCH_1	IF_46	CALL_91
0x4012c82	          0x4889c7	                            mov rdi, rax	     10791	tc-i386.c	FUNCTION_124	SWITCH_1	IF_46	CALL_91
0x4012c85	      0xe800000000	                          call 0x4012c8a	     10791	tc-i386.c	FUNCTION_124	SWITCH_1	IF_46	CALL_91
0x4012c8a	            0x85c0	                           test eax, eax	     10791	tc-i386.c	FUNCTION_124	SWITCH_1	IF_46	CALL_91
0x4012c8c	            0x750f	                           jne 0x4012c9d	     10791	tc-i386.c	FUNCTION_124	SWITCH_1	IF_46	CALL_91
0x4012c8e	    0xc70500000000	               mov dword [0x04012c98], 1	     10792	tc-i386.c	FUNCTION_124	SWITCH_1	IF_46
0x4012c98	      0xe996010000	                           jmp 0x4012e33	     10797	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012c9d	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10793	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_27	IF_47	CALL_92
0x4012ca1	      0xbe00000000	                              mov esi, 0	     10793	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_27	IF_47	CALL_92
0x4012ca6	          0x4889c7	                            mov rdi, rax	     10793	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_27	IF_47	CALL_92
0x4012ca9	      0xe800000000	                          call 0x4012cae	     10793	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_27	IF_47	CALL_92
0x4012cae	            0x85c0	                           test eax, eax	     10793	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_27	IF_47	CALL_92
0x4012cb0	            0x750f	                           jne 0x4012cc1	     10793	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_27	IF_47	CALL_92
0x4012cb2	    0xc70500000000	               mov dword [0x04012cbc], 0	     10794	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_27	IF_47
0x4012cbc	      0xe972010000	                           jmp 0x4012e33	     10797	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012cc1	      0xbf00000000	                              mov edi, 0	     10796	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_94
0x4012cc6	      0xe800000000	                          call 0x4012ccb	     10796	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_94
0x4012ccb	          0x4889c2	                            mov rdx, rax	     10796	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_94
0x4012cce	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10796	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_94
0x4012cd2	          0x4889c6	                            mov rsi, rax	     10796	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_94
0x4012cd5	          0x4889d7	                            mov rdi, rdx	     10796	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_94
0x4012cd8	      0xb800000000	                              mov eax, 0	     10796	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_94
0x4012cdd	      0xe800000000	                          call 0x4012ce2	     10796	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_94
0x4012ce2	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10800	tc-i386.c	FUNCTION_124	SWITCH_1	IF_48	CALL_95
0x4012ce6	      0xbe00000000	                              mov esi, 0	     10800	tc-i386.c	FUNCTION_124	SWITCH_1	IF_48	CALL_95
0x4012ceb	          0x4889c7	                            mov rdi, rax	     10800	tc-i386.c	FUNCTION_124	SWITCH_1	IF_48	CALL_95
0x4012cee	      0xe800000000	                          call 0x4012cf3	     10800	tc-i386.c	FUNCTION_124	SWITCH_1	IF_48	CALL_95
0x4012cf3	            0x85c0	                           test eax, eax	     10800	tc-i386.c	FUNCTION_124	SWITCH_1	IF_48	CALL_95
0x4012cf5	            0x750f	                           jne 0x4012d06	     10800	tc-i386.c	FUNCTION_124	SWITCH_1	IF_48	CALL_95
0x4012cf7	    0xc70500000000	               mov dword [0x04012d01], 1	     10801	tc-i386.c	FUNCTION_124	SWITCH_1	IF_48
0x4012d01	      0xe92d010000	                           jmp 0x4012e33	     10806	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012d06	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10802	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_29	IF_49	CALL_96
0x4012d0a	      0xbe00000000	                              mov esi, 0	     10802	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_29	IF_49	CALL_96
0x4012d0f	          0x4889c7	                            mov rdi, rax	     10802	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_29	IF_49	CALL_96
0x4012d12	      0xe800000000	                          call 0x4012d17	     10802	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_29	IF_49	CALL_96
0x4012d17	            0x85c0	                           test eax, eax	     10802	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_29	IF_49	CALL_96
0x4012d19	            0x750f	                           jne 0x4012d2a	     10802	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_29	IF_49	CALL_96
0x4012d1b	    0xc70500000000	               mov dword [0x04012d25], 0	     10803	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_29	IF_49
0x4012d25	      0xe909010000	                           jmp 0x4012e33	     10806	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012d2a	      0xbf00000000	                              mov edi, 0	     10805	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_98
0x4012d2f	      0xe800000000	                          call 0x4012d34	     10805	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_98
0x4012d34	          0x4889c2	                            mov rdx, rax	     10805	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_98
0x4012d37	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10805	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_98
0x4012d3b	          0x4889c6	                            mov rsi, rax	     10805	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_98
0x4012d3e	          0x4889d7	                            mov rdi, rdx	     10805	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_98
0x4012d41	      0xb800000000	                              mov eax, 0	     10805	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_98
0x4012d46	      0xe800000000	                          call 0x4012d4b	     10805	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_98
0x4012d4b	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10809	tc-i386.c	FUNCTION_124	SWITCH_1	IF_50	CALL_99
0x4012d4f	      0xbe00000000	                              mov esi, 0	     10809	tc-i386.c	FUNCTION_124	SWITCH_1	IF_50	CALL_99
0x4012d54	          0x4889c7	                            mov rdi, rax	     10809	tc-i386.c	FUNCTION_124	SWITCH_1	IF_50	CALL_99
0x4012d57	      0xe800000000	                          call 0x4012d5c	     10809	tc-i386.c	FUNCTION_124	SWITCH_1	IF_50	CALL_99
0x4012d5c	            0x85c0	                           test eax, eax	     10809	tc-i386.c	FUNCTION_124	SWITCH_1	IF_50	CALL_99
0x4012d5e	            0x750f	                           jne 0x4012d6f	     10809	tc-i386.c	FUNCTION_124	SWITCH_1	IF_50	CALL_99
0x4012d60	    0xc70500000000	               mov dword [0x04012d6a], 1	     10810	tc-i386.c	FUNCTION_124	SWITCH_1	IF_50
0x4012d6a	      0xe9c4000000	                           jmp 0x4012e33	     10815	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012d6f	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10811	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_31	IF_51	CALL_100
0x4012d73	      0xbe00000000	                              mov esi, 0	     10811	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_31	IF_51	CALL_100
0x4012d78	          0x4889c7	                            mov rdi, rax	     10811	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_31	IF_51	CALL_100
0x4012d7b	      0xe800000000	                          call 0x4012d80	     10811	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_31	IF_51	CALL_100
0x4012d80	            0x85c0	                           test eax, eax	     10811	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_31	IF_51	CALL_100
0x4012d82	            0x750f	                           jne 0x4012d93	     10811	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_31	IF_51	CALL_100
0x4012d84	    0xc70500000000	               mov dword [0x04012d8e], 0	     10812	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_31	IF_51
0x4012d8e	      0xe9a0000000	                           jmp 0x4012e33	     10815	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012d93	      0xbf00000000	                              mov edi, 0	     10814	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_102
0x4012d98	      0xe800000000	                          call 0x4012d9d	     10814	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_102
0x4012d9d	          0x4889c2	                            mov rdx, rax	     10814	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_102
0x4012da0	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10814	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_102
0x4012da4	          0x4889c6	                            mov rsi, rax	     10814	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_102
0x4012da7	          0x4889d7	                            mov rdi, rdx	     10814	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_102
0x4012daa	      0xb800000000	                              mov eax, 0	     10814	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_102
0x4012daf	      0xe800000000	                          call 0x4012db4	     10814	tc-i386.c	FUNCTION_124	SWITCH_1	CALL_102
0x4012db4	    0xc70500000000	               mov dword [0x04012dbe], 0	     10818	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012dbe	            0xeb73	                           jmp 0x4012e33	     10819	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012dc0	    0xc70500000000	               mov dword [0x04012dca], 1	     10822	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012dca	            0xeb67	                           jmp 0x4012e33	     10823	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012dcc	      0x48837d8000	               cmp qword [rbp - 0x80], 0	     10826	tc-i386.c	FUNCTION_124	SWITCH_1	IF_52
0x4012dd1	            0x7516	                           jne 0x4012de9	     10826	tc-i386.c	FUNCTION_124	SWITCH_1	IF_52
0x4012dd3	    0xc70500000000	               mov dword [0x04012ddd], 1	     10828	tc-i386.c	FUNCTION_124	SWITCH_1	IF_52
0x4012ddd	    0xc70500000000	               mov dword [0x04012de7], 0	     10830	tc-i386.c	FUNCTION_124	SWITCH_1	IF_52
0x4012de7	            0xeb4a	                           jmp 0x4012e33	     10844	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012de9	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10832	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_33	IF_53
0x4012ded	           0xfb600	                   movzx eax, byte [rax]	     10832	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_33	IF_53
0x4012df0	            0x3c73	                            cmp al, 0x73	     10832	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_33	IF_53
0x4012df2	            0x7516	                           jne 0x4012e0a	     10832	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_33	IF_53
0x4012df4	    0xc70500000000	               mov dword [0x04012dfe], 1	     10834	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_33	IF_53
0x4012dfe	    0xc70500000000	     mov dword [0x04012e08], 0xffffffff 	     10836	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_33	IF_53
0x4012e08	            0xeb29	                           jmp 0x4012e33	     10844	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012e0a	        0x488b4580	             mov rax, qword [rbp - 0x80]	     10840	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_34	CALL_103
0x4012e0e	          0x4889c7	                            mov rdi, rax	     10840	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_34	CALL_103
0x4012e11	      0xe800000000	                          call 0x4012e16	     10840	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_34	CALL_103
0x4012e16	    0x890500000000	            mov dword [0x04012e1c], eax 	     10840	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_34	CALL_103
0x4012e1c	    0xc70500000000	               mov dword [0x04012e26], 0	     10842	tc-i386.c	FUNCTION_124	SWITCH_1	ELSE_34
0x4012e26	            0xeb0b	                           jmp 0x4012e33	     10844	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012e28	      0xb800000000	                              mov eax, 0	     10847	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012e2d	            0xeb09	                           jmp 0x4012e38	     10847	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012e2f	              0x90	                                     nop	     10477	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012e30	            0xeb01	                           jmp 0x4012e33	     10477	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012e32	              0x90	                                     nop	     10684	tc-i386.c	FUNCTION_124	SWITCH_1
0x4012e33	      0xb801000000	                              mov eax, 1	     10849	tc-i386.c	FUNCTION_124
0x4012e38	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10850	tc-i386.c	FUNCTION_124
0x4012e3c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10850	tc-i386.c	FUNCTION_124
0x4012e45	            0x7405	                            je 0x4012e4c	     10850	tc-i386.c	FUNCTION_124
0x4012e47	      0xe800000000	                          call 0x4012e4c	     10850	tc-i386.c	FUNCTION_124
0x4012e4c	              0xc9	                                   leave	     10850	tc-i386.c	FUNCTION_124
0x4012e4d	              0xc3	                                     ret	     10850	tc-i386.c	FUNCTION_124
cpu_flags_or	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,0:ELSE,0:DO,0	40
0x40006e9	              0x55	                                push rbp	      1648	tc-i386.c	FUNCTION_14
0x40006ea	          0x4889e5	                            mov rbp, rsp	      1648	tc-i386.c	FUNCTION_14
0x40006ed	        0x4883ec30	                           sub rsp, 0x30	      1648	tc-i386.c	FUNCTION_14
0x40006f1	          0x4889f8	                            mov rax, rdi	      1648	tc-i386.c	FUNCTION_14
0x40006f4	          0x4989f0	                             mov r8, rsi	      1648	tc-i386.c	FUNCTION_14
0x40006f7	          0x4889c6	                            mov rsi, rax	      1648	tc-i386.c	FUNCTION_14
0x40006fa	          0x4889d7	                            mov rdi, rdx	      1648	tc-i386.c	FUNCTION_14
0x40006fd	          0x4c89c7	                             mov rdi, r8	      1648	tc-i386.c	FUNCTION_14
0x4000700	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1648	tc-i386.c	FUNCTION_14
0x4000704	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1648	tc-i386.c	FUNCTION_14
0x4000708	        0x488955d0	             mov qword [rbp - 0x30], rdx	      1648	tc-i386.c	FUNCTION_14
0x400070c	        0x48894dd8	             mov qword [rbp - 0x28], rcx	      1648	tc-i386.c	FUNCTION_14
0x4000710	    0x64488b042528	                mov rax, qword fs:[0x28]	      1648	tc-i386.c	FUNCTION_14
0x4000719	        0x488945f8	                mov qword [rbp - 8], rax	      1648	tc-i386.c	FUNCTION_14
0x400071d	            0x31c0	                            xor eax, eax	      1648	tc-i386.c	FUNCTION_14
0x400071f	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1652	tc-i386.c	FUNCTION_14	SWITCH_1
0x4000722	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1652	tc-i386.c	FUNCTION_14	SWITCH_1
0x4000725	             0x9d0	                             or eax, edx	      1652	tc-i386.c	FUNCTION_14	SWITCH_1
0x4000727	          0x8945ec	             mov dword [rbp - 0x14], eax	      1652	tc-i386.c	FUNCTION_14	SWITCH_1
0x400072a	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1655	tc-i386.c	FUNCTION_14	SWITCH_1
0x400072d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1655	tc-i386.c	FUNCTION_14	SWITCH_1
0x4000730	             0x9d0	                             or eax, edx	      1655	tc-i386.c	FUNCTION_14	SWITCH_1
0x4000732	          0x8945e8	             mov dword [rbp - 0x18], eax	      1655	tc-i386.c	FUNCTION_14	SWITCH_1
0x4000735	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1658	tc-i386.c	FUNCTION_14	SWITCH_1
0x4000738	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1658	tc-i386.c	FUNCTION_14	SWITCH_1
0x400073b	             0x9d0	                             or eax, edx	      1658	tc-i386.c	FUNCTION_14	SWITCH_1
0x400073d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1658	tc-i386.c	FUNCTION_14	SWITCH_1
0x4000740	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1661	tc-i386.c	FUNCTION_14	SWITCH_1
0x4000743	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1661	tc-i386.c	FUNCTION_14	SWITCH_1
0x4000746	             0x9d0	                             or eax, edx	      1661	tc-i386.c	FUNCTION_14	SWITCH_1
0x4000748	          0x8945e0	             mov dword [rbp - 0x20], eax	      1661	tc-i386.c	FUNCTION_14	SWITCH_1
0x400074b	              0x90	                                     nop	      1662	tc-i386.c	FUNCTION_14	SWITCH_1
0x400074c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1666	tc-i386.c	FUNCTION_14
0x4000750	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1666	tc-i386.c	FUNCTION_14
0x4000754	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1667	tc-i386.c	FUNCTION_14
0x4000758	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1667	tc-i386.c	FUNCTION_14
0x4000761	            0x7405	                            je 0x4000768	      1667	tc-i386.c	FUNCTION_14
0x4000763	      0xe800000000	                          call 0x4000768	      1667	tc-i386.c	FUNCTION_14
0x4000768	              0xc9	                                   leave	      1667	tc-i386.c	FUNCTION_14
0x4000769	              0xc3	                                     ret	      1667	tc-i386.c	FUNCTION_14
parse_operands	CALL,19:FOR,0:WHILE,2:functions,0:SWITCH,0:IF,19:ELSE,6:DO,0	245
0x4005e46	              0x55	                                push rbp	      4559	tc-i386.c	FUNCTION_70
0x4005e47	          0x4889e5	                            mov rbp, rsp	      4559	tc-i386.c	FUNCTION_70
0x4005e4a	            0x4154	                                push r12	      4559	tc-i386.c	FUNCTION_70
0x4005e4c	              0x53	                                push rbx	      4559	tc-i386.c	FUNCTION_70
0x4005e4d	        0x4883ec30	                           sub rsp, 0x30	      4559	tc-i386.c	FUNCTION_70
0x4005e51	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4559	tc-i386.c	FUNCTION_70
0x4005e55	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4559	tc-i386.c	FUNCTION_70
0x4005e59	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      4563	tc-i386.c	FUNCTION_70
0x4005e60	      0xe94e030000	                           jmp 0x40061b3	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x4005e65	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4571	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x4005e69	           0xfb600	                   movzx eax, byte [rax]	      4571	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x4005e6c	            0x3c20	                            cmp al, 0x20	      4571	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x4005e6e	            0x7505	                           jne 0x4005e75	      4571	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x4005e70	      0x488345c801	               add qword [rbp - 0x38], 1	      4572	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x4005e75	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e79	           0xfb600	                   movzx eax, byte [rax]	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e7c	           0xfb6c0	                           movzx eax, al	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e7f	            0x4898	                                    cdqe	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e81	     0xfb680000000	                   movzx eax, byte [rax]	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e88	            0x84c0	                             test al, al	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e8a	            0x7559	                           jne 0x4005ee5	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e8c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e90	           0xfb600	                   movzx eax, byte [rax]	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e93	            0x84c0	                             test al, al	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e95	            0x744e	                            je 0x4005ee5	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e97	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e9b	           0xfb600	                   movzx eax, byte [rax]	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005e9e	            0x3c22	                            cmp al, 0x22	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005ea0	            0x7443	                            je 0x4005ee5	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005ea2	    0x8b0500000000	            mov eax, dword [0x04005ea8] 	      4577	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005ea8	          0x8d5801	                      lea ebx, [rax + 1]	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005eab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4576	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_3
0x4005eaf	           0xfb600	                   movzx eax, byte [rax]	      4576	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_3
0x4005eb2	           0xfbec0	                           movsx eax, al	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005eb5	            0x89c7	                            mov edi, eax	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005eb7	      0xe8ceb80000	                 call sym.output_invalid	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005ebc	          0x4989c4	                            mov r12, rax	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005ebf	      0xbf00000000	                              mov edi, 0	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005ec4	      0xe800000000	                          call 0x4005ec9	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005ec9	            0x89da	                            mov edx, ebx	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005ecb	          0x4c89e6	                            mov rsi, r12	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005ece	          0x4889c7	                            mov rdi, rax	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005ed1	      0xb800000000	                              mov eax, 0	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005ed6	      0xe800000000	                          call 0x4005edb	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4005edb	      0xb800000000	                              mov eax, 0	      4578	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005ee0	      0xe9e1020000	                           jmp 0x40061c6	      4578	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4005ee5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4580	tc-i386.c	FUNCTION_70	WHILE_1
0x4005ee9	        0x488945e8	             mov qword [rbp - 0x18], rax	      4580	tc-i386.c	FUNCTION_70	WHILE_1
0x4005eed	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4581	tc-i386.c	FUNCTION_70	WHILE_1
0x4005ef4	      0xe92c010000	                           jmp 0x4006025	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x4005ef9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x4005efd	           0xfb600	                   movzx eax, byte [rax]	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x4005f00	            0x84c0	                             test al, al	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x4005f02	            0x7564	                           jne 0x4005f68	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x4005f04	        0x837de000	               cmp dword [rbp - 0x20], 0	      4586	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4
0x4005f08	     0xf8432010000	                            je 0x4006040	      4586	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4
0x4005f0e	    0x8b0500000000	            mov eax, dword [0x04005f14] 	      4588	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5
0x4005f14	            0x85c0	                           test eax, eax	      4588	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5
0x4005f16	            0x7524	                           jne 0x4005f3c	      4588	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5
0x4005f18	    0x8b0500000000	            mov eax, dword [0x04005f1e] 	      4590	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5
0x4005f1e	          0x8d5801	                      lea ebx, [rax + 1]	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x4005f21	      0xbf00000000	                              mov edi, 0	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x4005f26	      0xe800000000	                          call 0x4005f2b	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x4005f2b	            0x89de	                            mov esi, ebx	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x4005f2d	          0x4889c7	                            mov rdi, rax	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x4005f30	      0xb800000000	                              mov eax, 0	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x4005f35	      0xe800000000	                          call 0x4005f3a	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x4005f3a	            0xeb22	                           jmp 0x4005f5e	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x4005f3c	    0x8b0500000000	            mov eax, dword [0x04005f42] 	      4593	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1
0x4005f42	          0x8d5801	                      lea ebx, [rax + 1]	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x4005f45	      0xbf00000000	                              mov edi, 0	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x4005f4a	      0xe800000000	                          call 0x4005f4f	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x4005f4f	            0x89de	                            mov esi, ebx	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x4005f51	          0x4889c7	                            mov rdi, rax	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x4005f54	      0xb800000000	                              mov eax, 0	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x4005f59	      0xe800000000	                          call 0x4005f5e	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x4005f5e	      0xb800000000	                              mov eax, 0	      4594	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4
0x4005f63	      0xe95e020000	                           jmp 0x40061c6	      4594	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4
0x4005f68	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f6c	           0xfb600	                   movzx eax, byte [rax]	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f6f	           0xfb6c0	                           movzx eax, al	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f72	            0x4898	                                    cdqe	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f74	     0xfb680000000	                   movzx eax, byte [rax]	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f7b	            0x84c0	                             test al, al	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f7d	            0x7559	                           jne 0x4005fd8	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f7f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f83	           0xfb600	                   movzx eax, byte [rax]	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f86	            0x3c20	                            cmp al, 0x20	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f88	            0x744e	                            je 0x4005fd8	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f8e	           0xfb600	                   movzx eax, byte [rax]	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f91	            0x3c22	                            cmp al, 0x22	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f93	            0x7443	                            je 0x4005fd8	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f95	    0x8b0500000000	            mov eax, dword [0x04005f9b] 	      4603	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005f9b	          0x8d5801	                      lea ebx, [rax + 1]	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005f9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4602	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x4005fa2	           0xfb600	                   movzx eax, byte [rax]	      4602	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_10
0x4005fa5	           0xfbec0	                           movsx eax, al	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005fa8	            0x89c7	                            mov edi, eax	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005faa	      0xe8dbb70000	                 call sym.output_invalid	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005faf	          0x4989c4	                            mov r12, rax	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005fb2	      0xbf00000000	                              mov edi, 0	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005fb7	      0xe800000000	                          call 0x4005fbc	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005fbc	            0x89da	                            mov edx, ebx	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005fbe	          0x4c89e6	                            mov rsi, r12	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005fc1	          0x4889c7	                            mov rdi, rax	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005fc4	      0xb800000000	                              mov eax, 0	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005fc9	      0xe800000000	                          call 0x4005fce	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4005fce	      0xb800000000	                              mov eax, 0	      4604	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005fd3	      0xe9ee010000	                           jmp 0x40061c6	      4604	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4005fd8	    0x8b0500000000	            mov eax, dword [0x04005fde] 	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x4005fde	            0x85c0	                           test eax, eax	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x4005fe0	            0x7520	                           jne 0x4006002	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x4005fe2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4608	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_8
0x4005fe6	           0xfb600	                   movzx eax, byte [rax]	      4608	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_8
0x4005fe9	            0x3c28	                            cmp al, 0x28	      4608	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_8
0x4005feb	            0x7504	                           jne 0x4005ff1	      4608	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_8
0x4005fed	        0x8345e001	               add dword [rbp - 0x20], 1	      4609	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_8
0x4005ff1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4610	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x4005ff5	           0xfb600	                   movzx eax, byte [rax]	      4610	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x4005ff8	            0x3c29	                            cmp al, 0x29	      4610	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x4005ffa	            0x7524	                           jne 0x4006020	      4610	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x4005ffc	        0x836de001	               sub dword [rbp - 0x20], 1	      4611	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x4006000	            0xeb1e	                           jmp 0x4006020	      4611	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x4006002	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4615	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x4006006	           0xfb600	                   movzx eax, byte [rax]	      4615	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x4006009	            0x3c5b	                            cmp al, 0x5b	      4615	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x400600b	            0x7504	                           jne 0x4006011	      4615	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x400600d	        0x8345e001	               add dword [rbp - 0x20], 1	      4616	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x4006011	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4617	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x4006015	           0xfb600	                   movzx eax, byte [rax]	      4617	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x4006018	            0x3c5d	                            cmp al, 0x5d	      4617	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x400601a	            0x7504	                           jne 0x4006020	      4617	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x400601c	        0x836de001	               sub dword [rbp - 0x20], 1	      4618	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x4006020	      0x488345c801	               add qword [rbp - 0x38], 1	      4620	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x4006025	        0x837de000	               cmp dword [rbp - 0x20], 0	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x4006029	     0xf85cafeffff	                           jne 0x4005ef9	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x400602f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x4006033	           0xfb600	                   movzx eax, byte [rax]	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x4006036	            0x3c2c	                            cmp al, 0x2c	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x4006038	     0xf85bbfeffff	                           jne 0x4005ef9	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x400603e	            0xeb01	                           jmp 0x4006041	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x4006040	              0x90	                                     nop	      4597	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	ELSE_2
0x4006041	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4622	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4006045	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4622	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4006049	     0xf84f2000000	                            je 0x4006141	      4622	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400604f	    0x8b0500000000	            mov eax, dword [0x04006055] 	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4006055	          0x8d5001	                      lea edx, [rax + 1]	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4006058	    0x891500000000	            mov dword [0x0400605e], edx 	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400605e	    0x890500000000	            mov dword [0x04006064], eax 	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4006064	    0x8b0500000000	            mov eax, dword [0x0400606a] 	      4626	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13
0x400606a	          0x83f805	                              cmp eax, 5	      4626	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13
0x400606d	            0x7626	                           jbe 0x4006095	      4626	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13
0x400606f	      0xbf00000000	                              mov edi, 0	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x4006074	      0xe800000000	                          call 0x4006079	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x4006079	      0xbe05000000	                              mov esi, 5	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x400607e	          0x4889c7	                            mov rdi, rax	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x4006081	      0xb800000000	                              mov eax, 0	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x4006086	      0xe800000000	                          call 0x400608b	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x400608b	      0xb800000000	                              mov eax, 0	      4630	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13
0x4006090	      0xe931010000	                           jmp 0x40061c6	      4630	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13
0x4006095	    0x8b0500000000	            mov eax, dword [0x0400609b] 	      4632	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400609b	            0x4898	                                    cdqe	      4632	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400609d	        0x4883c00e	                            add rax, 0xe	      4632	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060a1	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4632	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060a9	          0x83ca40	                            or edx, 0x40	      4632	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060ac	    0x8814c5000000	                    mov byte [rax*8], dl	      4632	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060b3	    0x488b05000000	            mov rax, qword [0x040060ba] 	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060ba	        0x488d5001	                      lea rdx, [rax + 1]	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060be	    0x488915000000	            mov qword [0x040060c5], rdx 	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060c5	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060c9	           0xfb612	                   movzx edx, byte [rdx]	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060cc	            0x8810	                      mov byte [rax], dl	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060d2	          0xc60000	                       mov byte [rax], 0	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40060d5	    0x8b0500000000	            mov eax, dword [0x040060db] 	      4636	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14
0x40060db	            0x85c0	                           test eax, eax	      4636	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14
0x40060dd	            0x7421	                            je 0x4006100	      4636	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14
0x40060df	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x40060e3	          0x4889c7	                            mov rdi, rax	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x40060e6	      0xe852d3ffff	            call sym.intel_float_operand	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x40060eb	            0x89c2	                            mov edx, eax	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x40060ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x40060f1	            0x89d6	                            mov esi, edx	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x40060f3	          0x4889c7	                            mov rdi, rax	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x40060f6	      0xe8acf00000	             call sym.i386_intel_operand	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x40060fb	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4637	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14
0x40060fe	            0xeb0f	                           jmp 0x400610f	      4637	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14
0x4006100	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4641	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	CALL_15
0x4006104	          0x4889c7	                            mov rdi, rax	      4641	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	CALL_15
0x4006107	      0xe873a10000	               call sym.i386_att_operand	      4641	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	CALL_15
0x400610c	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4641	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	CALL_15
0x400610f	    0x488b05000000	            mov rax, qword [0x04006116] 	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4006116	        0x4883e801	                              sub rax, 1	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400611a	    0x488905000000	            mov qword [0x04006121], rax 	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4006121	    0x488b05000000	            mov rax, qword [0x04006128] 	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4006128	           0xfb610	                   movzx edx, byte [rax]	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400612b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400612f	            0x8810	                      mov byte [rax], dl	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4006131	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4644	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_15
0x4006135	            0x755a	                           jne 0x4006191	      4644	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_15
0x4006137	      0xb800000000	                              mov eax, 0	      4645	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_15
0x400613c	      0xe985000000	                           jmp 0x40061c6	      4645	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_15
0x4006141	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4649	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16
0x4006145	            0x7421	                            je 0x4006168	      4649	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16
0x4006147	            0xeb01	                           jmp 0x400614a	      4649	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16
0x4006149	              0x90	                                     nop	      4668	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x400614a	      0xbf00000000	                              mov edi, 0	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x400614f	      0xe800000000	                          call 0x4006154	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x4006154	          0x4889c7	                            mov rdi, rax	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x4006157	      0xb800000000	                              mov eax, 0	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x400615c	      0xe800000000	                          call 0x4006161	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x4006161	      0xb800000000	                              mov eax, 0	      4653	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16
0x4006166	            0xeb5e	                           jmp 0x40061c6	      4653	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16
0x4006168	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4655	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x400616c	           0xfb600	                   movzx eax, byte [rax]	      4655	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x400616f	            0x3c2c	                            cmp al, 0x2c	      4655	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x4006171	            0x751e	                           jne 0x4006191	      4655	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x4006173	      0xbf00000000	                              mov edi, 0	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x4006178	      0xe800000000	                          call 0x400617d	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x400617d	          0x4889c7	                            mov rdi, rax	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x4006180	      0xb800000000	                              mov eax, 0	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x4006185	      0xe800000000	                          call 0x400618a	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x400618a	      0xb800000000	                              mov eax, 0	      4658	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x400618f	            0xeb35	                           jmp 0x40061c6	      4658	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x4006191	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4663	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x4006195	           0xfb600	                   movzx eax, byte [rax]	      4663	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x4006198	            0x3c2c	                            cmp al, 0x2c	      4663	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400619a	            0x7517	                           jne 0x40061b3	      4663	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400619c	      0x488345c801	               add qword [rbp - 0x38], 1	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x40061a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x40061a5	           0xfb600	                   movzx eax, byte [rax]	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x40061a8	            0x84c0	                             test al, al	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x40061aa	            0x749d	                            je 0x4006149	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x40061ac	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      4670	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x40061b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x40061b7	           0xfb600	                   movzx eax, byte [rax]	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x40061ba	            0x84c0	                             test al, al	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x40061bc	     0xf85a3fcffff	                           jne 0x4005e65	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x40061c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4673	tc-i386.c	FUNCTION_70
0x40061c6	        0x4883c430	                           add rsp, 0x30	      4674	tc-i386.c	FUNCTION_70
0x40061ca	              0x5b	                                 pop rbx	      4674	tc-i386.c	FUNCTION_70
0x40061cb	            0x415c	                                 pop r12	      4674	tc-i386.c	FUNCTION_70
0x40061cd	              0x5d	                                 pop rbp	      4674	tc-i386.c	FUNCTION_70
0x40061ce	              0xc3	                                     ret	      4674	tc-i386.c	FUNCTION_70
tc_i386_fix_adjustable	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,4:ELSE,0:DO,0	173
0x4003189	              0x55	                                push rbp	      3198	tc-i386.c	FUNCTION_60
0x400318a	          0x4889e5	                            mov rbp, rsp	      3198	tc-i386.c	FUNCTION_60
0x400318d	        0x4883ec10	                           sub rsp, 0x10	      3198	tc-i386.c	FUNCTION_60
0x4003191	        0x48897df8	                mov qword [rbp - 8], rdi	      3198	tc-i386.c	FUNCTION_60
0x4003195	    0x8b0500000000	            mov eax, dword [0x0400319b] 	      3205	tc-i386.c	FUNCTION_60	IF_2
0x400319b	            0x85c0	                           test eax, eax	      3205	tc-i386.c	FUNCTION_60	IF_2
0x400319d	            0x7434	                            je 0x40031d3	      3205	tc-i386.c	FUNCTION_60	IF_2
0x400319f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x40031a3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x40031a7	          0x4889c7	                            mov rdi, rax	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x40031aa	      0xe800000000	                          call 0x40031af	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x40031af	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x40031b2	      0x2500008000	                       and eax, 0x800000	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x40031b7	            0x85c0	                           test eax, eax	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x40031b9	            0x7418	                            je 0x40031d3	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x40031bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3207	tc-i386.c	FUNCTION_60	IF_2
0x40031bf	           0xfb600	                   movzx eax, byte [rax]	      3207	tc-i386.c	FUNCTION_60	IF_2
0x40031c2	          0x83e001	                              and eax, 1	      3207	tc-i386.c	FUNCTION_60	IF_2
0x40031c5	            0x84c0	                             test al, al	      3207	tc-i386.c	FUNCTION_60	IF_2
0x40031c7	            0x740a	                            je 0x40031d3	      3207	tc-i386.c	FUNCTION_60	IF_2
0x40031c9	      0xb800000000	                              mov eax, 0	      3208	tc-i386.c	FUNCTION_60	IF_2
0x40031ce	      0xe968020000	                           jmp 0x400343b	      3208	tc-i386.c	FUNCTION_60	IF_2
0x40031d3	    0x488b05000000	            mov rax, qword [0x040031da] 	      3212	tc-i386.c	FUNCTION_60	IF_3
0x40031da	          0x4885c0	                           test rax, rax	      3212	tc-i386.c	FUNCTION_60	IF_3
0x40031dd	            0x742a	                            je 0x4003209	      3212	tc-i386.c	FUNCTION_60	IF_3
0x40031df	        0x488b45f8	                mov rax, qword [rbp - 8]	      3212	tc-i386.c	FUNCTION_60	IF_3
0x40031e3	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3212	tc-i386.c	FUNCTION_60	IF_3
0x40031e7	    0x488b05000000	            mov rax, qword [0x040031ee] 	      3212	tc-i386.c	FUNCTION_60	IF_3
0x40031ee	          0x4839c2	                            cmp rdx, rax	      3212	tc-i386.c	FUNCTION_60	IF_3
0x40031f1	            0x7516	                           jne 0x4003209	      3212	tc-i386.c	FUNCTION_60	IF_3
0x40031f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      3213	tc-i386.c	FUNCTION_60	IF_3
0x40031f7	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3213	tc-i386.c	FUNCTION_60	IF_3
0x40031fa	          0x83f809	                              cmp eax, 9	      3213	tc-i386.c	FUNCTION_60	IF_3
0x40031fd	            0x750a	                           jne 0x4003209	      3213	tc-i386.c	FUNCTION_60	IF_3
0x40031ff	      0xb800000000	                              mov eax, 0	      3214	tc-i386.c	FUNCTION_60	IF_3
0x4003204	      0xe932020000	                           jmp 0x400343b	      3214	tc-i386.c	FUNCTION_60	IF_3
0x4003209	        0x488b45f8	                mov rax, qword [rbp - 8]	      3218	tc-i386.c	FUNCTION_60	IF_4
0x400320d	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3218	tc-i386.c	FUNCTION_60	IF_4
0x4003210	          0x83f824	                           cmp eax, 0x24	      3218	tc-i386.c	FUNCTION_60	IF_4
0x4003213	     0xf8416020000	                            je 0x400342f	      3218	tc-i386.c	FUNCTION_60	IF_4
0x4003219	        0x488b45f8	                mov rax, qword [rbp - 8]	      3219	tc-i386.c	FUNCTION_60	IF_4
0x400321d	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3219	tc-i386.c	FUNCTION_60	IF_4
0x4003220	          0x83f825	                           cmp eax, 0x25	      3219	tc-i386.c	FUNCTION_60	IF_4
0x4003223	     0xf8406020000	                            je 0x400342f	      3219	tc-i386.c	FUNCTION_60	IF_4
0x4003229	        0x488b45f8	                mov rax, qword [rbp - 8]	      3220	tc-i386.c	FUNCTION_60	IF_4
0x400322d	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3220	tc-i386.c	FUNCTION_60	IF_4
0x4003230	      0x3d6a010000	                          cmp eax, 0x16a	      3220	tc-i386.c	FUNCTION_60	IF_4
0x4003235	     0xf84f4010000	                            je 0x400342f	      3220	tc-i386.c	FUNCTION_60	IF_4
0x400323b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3221	tc-i386.c	FUNCTION_60	IF_4
0x400323f	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3221	tc-i386.c	FUNCTION_60	IF_4
0x4003242	      0x3d65010000	                          cmp eax, 0x165	      3221	tc-i386.c	FUNCTION_60	IF_4
0x4003247	     0xf84e2010000	                            je 0x400342f	      3221	tc-i386.c	FUNCTION_60	IF_4
0x400324d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3222	tc-i386.c	FUNCTION_60	IF_4
0x4003251	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3222	tc-i386.c	FUNCTION_60	IF_4
0x4003254	      0x3d64010000	                          cmp eax, 0x164	      3222	tc-i386.c	FUNCTION_60	IF_4
0x4003259	     0xf84d0010000	                            je 0x400342f	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400325f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3223	tc-i386.c	FUNCTION_60	IF_4
0x4003263	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3223	tc-i386.c	FUNCTION_60	IF_4
0x4003266	      0x3d7c010000	                          cmp eax, 0x17c	      3223	tc-i386.c	FUNCTION_60	IF_4
0x400326b	     0xf84be010000	                            je 0x400342f	      3223	tc-i386.c	FUNCTION_60	IF_4
0x4003271	        0x488b45f8	                mov rax, qword [rbp - 8]	      3224	tc-i386.c	FUNCTION_60	IF_4
0x4003275	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3224	tc-i386.c	FUNCTION_60	IF_4
0x4003278	      0x3d70010000	                          cmp eax, 0x170	      3224	tc-i386.c	FUNCTION_60	IF_4
0x400327d	     0xf84ac010000	                            je 0x400342f	      3224	tc-i386.c	FUNCTION_60	IF_4
0x4003283	        0x488b45f8	                mov rax, qword [rbp - 8]	      3225	tc-i386.c	FUNCTION_60	IF_4
0x4003287	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3225	tc-i386.c	FUNCTION_60	IF_4
0x400328a	      0x3d71010000	                          cmp eax, 0x171	      3225	tc-i386.c	FUNCTION_60	IF_4
0x400328f	     0xf849a010000	                            je 0x400342f	      3225	tc-i386.c	FUNCTION_60	IF_4
0x4003295	        0x488b45f8	                mov rax, qword [rbp - 8]	      3226	tc-i386.c	FUNCTION_60	IF_4
0x4003299	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3226	tc-i386.c	FUNCTION_60	IF_4
0x400329c	      0x3d72010000	                          cmp eax, 0x172	      3226	tc-i386.c	FUNCTION_60	IF_4
0x40032a1	     0xf8488010000	                            je 0x400342f	      3226	tc-i386.c	FUNCTION_60	IF_4
0x40032a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3227	tc-i386.c	FUNCTION_60	IF_4
0x40032ab	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3227	tc-i386.c	FUNCTION_60	IF_4
0x40032ae	      0x3d73010000	                          cmp eax, 0x173	      3227	tc-i386.c	FUNCTION_60	IF_4
0x40032b3	     0xf8476010000	                            je 0x400342f	      3227	tc-i386.c	FUNCTION_60	IF_4
0x40032b9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3228	tc-i386.c	FUNCTION_60	IF_4
0x40032bd	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3228	tc-i386.c	FUNCTION_60	IF_4
0x40032c0	      0x3d6d010000	                          cmp eax, 0x16d	      3228	tc-i386.c	FUNCTION_60	IF_4
0x40032c5	     0xf8464010000	                            je 0x400342f	      3228	tc-i386.c	FUNCTION_60	IF_4
0x40032cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3229	tc-i386.c	FUNCTION_60	IF_4
0x40032cf	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3229	tc-i386.c	FUNCTION_60	IF_4
0x40032d2	      0x3d6e010000	                          cmp eax, 0x16e	      3229	tc-i386.c	FUNCTION_60	IF_4
0x40032d7	     0xf8452010000	                            je 0x400342f	      3229	tc-i386.c	FUNCTION_60	IF_4
0x40032dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3230	tc-i386.c	FUNCTION_60	IF_4
0x40032e1	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3230	tc-i386.c	FUNCTION_60	IF_4
0x40032e4	      0x3d74010000	                          cmp eax, 0x174	      3230	tc-i386.c	FUNCTION_60	IF_4
0x40032e9	     0xf8440010000	                            je 0x400342f	      3230	tc-i386.c	FUNCTION_60	IF_4
0x40032ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      3231	tc-i386.c	FUNCTION_60	IF_4
0x40032f3	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3231	tc-i386.c	FUNCTION_60	IF_4
0x40032f6	      0x3d6f010000	                          cmp eax, 0x16f	      3231	tc-i386.c	FUNCTION_60	IF_4
0x40032fb	     0xf842e010000	                            je 0x400342f	      3231	tc-i386.c	FUNCTION_60	IF_4
0x4003301	        0x488b45f8	                mov rax, qword [rbp - 8]	      3232	tc-i386.c	FUNCTION_60	IF_4
0x4003305	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3232	tc-i386.c	FUNCTION_60	IF_4
0x4003308	      0x3d78010000	                          cmp eax, 0x178	      3232	tc-i386.c	FUNCTION_60	IF_4
0x400330d	     0xf841c010000	                            je 0x400342f	      3232	tc-i386.c	FUNCTION_60	IF_4
0x4003313	        0x488b45f8	                mov rax, qword [rbp - 8]	      3233	tc-i386.c	FUNCTION_60	IF_4
0x4003317	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3233	tc-i386.c	FUNCTION_60	IF_4
0x400331a	      0x3d79010000	                          cmp eax, 0x179	      3233	tc-i386.c	FUNCTION_60	IF_4
0x400331f	     0xf840a010000	                            je 0x400342f	      3233	tc-i386.c	FUNCTION_60	IF_4
0x4003325	        0x488b45f8	                mov rax, qword [rbp - 8]	      3234	tc-i386.c	FUNCTION_60	IF_4
0x4003329	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3234	tc-i386.c	FUNCTION_60	IF_4
0x400332c	      0x3d7e010000	                          cmp eax, 0x17e	      3234	tc-i386.c	FUNCTION_60	IF_4
0x4003331	     0xf84f8000000	                            je 0x400342f	      3234	tc-i386.c	FUNCTION_60	IF_4
0x4003337	        0x488b45f8	                mov rax, qword [rbp - 8]	      3235	tc-i386.c	FUNCTION_60	IF_4
0x400333b	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3235	tc-i386.c	FUNCTION_60	IF_4
0x400333e	      0x3d7d010000	                          cmp eax, 0x17d	      3235	tc-i386.c	FUNCTION_60	IF_4
0x4003343	     0xf84e6000000	                            je 0x400342f	      3235	tc-i386.c	FUNCTION_60	IF_4
0x4003349	        0x488b45f8	                mov rax, qword [rbp - 8]	      3236	tc-i386.c	FUNCTION_60	IF_4
0x400334d	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3236	tc-i386.c	FUNCTION_60	IF_4
0x4003350	      0x3d83010000	                          cmp eax, 0x183	      3236	tc-i386.c	FUNCTION_60	IF_4
0x4003355	     0xf84d4000000	                            je 0x400342f	      3236	tc-i386.c	FUNCTION_60	IF_4
0x400335b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3237	tc-i386.c	FUNCTION_60	IF_4
0x400335f	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3237	tc-i386.c	FUNCTION_60	IF_4
0x4003362	      0x3d9a010000	                          cmp eax, 0x19a	      3237	tc-i386.c	FUNCTION_60	IF_4
0x4003367	     0xf84c2000000	                            je 0x400342f	      3237	tc-i386.c	FUNCTION_60	IF_4
0x400336d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3238	tc-i386.c	FUNCTION_60	IF_4
0x4003371	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3238	tc-i386.c	FUNCTION_60	IF_4
0x4003374	      0x3d9b010000	                          cmp eax, 0x19b	      3238	tc-i386.c	FUNCTION_60	IF_4
0x4003379	     0xf84b0000000	                            je 0x400342f	      3238	tc-i386.c	FUNCTION_60	IF_4
0x400337f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3239	tc-i386.c	FUNCTION_60	IF_4
0x4003383	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3239	tc-i386.c	FUNCTION_60	IF_4
0x4003386	      0x3d88010000	                          cmp eax, 0x188	      3239	tc-i386.c	FUNCTION_60	IF_4
0x400338b	     0xf849e000000	                            je 0x400342f	      3239	tc-i386.c	FUNCTION_60	IF_4
0x4003391	        0x488b45f8	                mov rax, qword [rbp - 8]	      3240	tc-i386.c	FUNCTION_60	IF_4
0x4003395	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3240	tc-i386.c	FUNCTION_60	IF_4
0x4003398	      0x3d89010000	                          cmp eax, 0x189	      3240	tc-i386.c	FUNCTION_60	IF_4
0x400339d	     0xf848c000000	                            je 0x400342f	      3240	tc-i386.c	FUNCTION_60	IF_4
0x40033a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      3241	tc-i386.c	FUNCTION_60	IF_4
0x40033a7	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3241	tc-i386.c	FUNCTION_60	IF_4
0x40033aa	      0x3d8a010000	                          cmp eax, 0x18a	      3241	tc-i386.c	FUNCTION_60	IF_4
0x40033af	            0x747e	                            je 0x400342f	      3241	tc-i386.c	FUNCTION_60	IF_4
0x40033b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3242	tc-i386.c	FUNCTION_60	IF_4
0x40033b5	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3242	tc-i386.c	FUNCTION_60	IF_4
0x40033b8	      0x3d86010000	                          cmp eax, 0x186	      3242	tc-i386.c	FUNCTION_60	IF_4
0x40033bd	            0x7470	                            je 0x400342f	      3242	tc-i386.c	FUNCTION_60	IF_4
0x40033bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3243	tc-i386.c	FUNCTION_60	IF_4
0x40033c3	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3243	tc-i386.c	FUNCTION_60	IF_4
0x40033c6	      0x3d8b010000	                          cmp eax, 0x18b	      3243	tc-i386.c	FUNCTION_60	IF_4
0x40033cb	            0x7462	                            je 0x400342f	      3243	tc-i386.c	FUNCTION_60	IF_4
0x40033cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3244	tc-i386.c	FUNCTION_60	IF_4
0x40033d1	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3244	tc-i386.c	FUNCTION_60	IF_4
0x40033d4	      0x3d8c010000	                          cmp eax, 0x18c	      3244	tc-i386.c	FUNCTION_60	IF_4
0x40033d9	            0x7454	                            je 0x400342f	      3244	tc-i386.c	FUNCTION_60	IF_4
0x40033db	        0x488b45f8	                mov rax, qword [rbp - 8]	      3245	tc-i386.c	FUNCTION_60	IF_4
0x40033df	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3245	tc-i386.c	FUNCTION_60	IF_4
0x40033e2	      0x3d87010000	                          cmp eax, 0x187	      3245	tc-i386.c	FUNCTION_60	IF_4
0x40033e7	            0x7446	                            je 0x400342f	      3245	tc-i386.c	FUNCTION_60	IF_4
0x40033e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3246	tc-i386.c	FUNCTION_60	IF_4
0x40033ed	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3246	tc-i386.c	FUNCTION_60	IF_4
0x40033f0	      0x3d8d010000	                          cmp eax, 0x18d	      3246	tc-i386.c	FUNCTION_60	IF_4
0x40033f5	            0x7438	                            je 0x400342f	      3246	tc-i386.c	FUNCTION_60	IF_4
0x40033f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3247	tc-i386.c	FUNCTION_60	IF_4
0x40033fb	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3247	tc-i386.c	FUNCTION_60	IF_4
0x40033fe	      0x3d94010000	                          cmp eax, 0x194	      3247	tc-i386.c	FUNCTION_60	IF_4
0x4003403	            0x742a	                            je 0x400342f	      3247	tc-i386.c	FUNCTION_60	IF_4
0x4003405	        0x488b45f8	                mov rax, qword [rbp - 8]	      3248	tc-i386.c	FUNCTION_60	IF_4
0x4003409	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3248	tc-i386.c	FUNCTION_60	IF_4
0x400340c	      0x3d95010000	                          cmp eax, 0x195	      3248	tc-i386.c	FUNCTION_60	IF_4
0x4003411	            0x741c	                            je 0x400342f	      3248	tc-i386.c	FUNCTION_60	IF_4
0x4003413	        0x488b45f8	                mov rax, qword [rbp - 8]	      3249	tc-i386.c	FUNCTION_60	IF_4
0x4003417	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3249	tc-i386.c	FUNCTION_60	IF_4
0x400341a	      0x3da3050000	                          cmp eax, 0x5a3	      3249	tc-i386.c	FUNCTION_60	IF_4
0x400341f	            0x740e	                            je 0x400342f	      3249	tc-i386.c	FUNCTION_60	IF_4
0x4003421	        0x488b45f8	                mov rax, qword [rbp - 8]	      3250	tc-i386.c	FUNCTION_60	IF_4
0x4003425	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3250	tc-i386.c	FUNCTION_60	IF_4
0x4003428	      0x3da4050000	                          cmp eax, 0x5a4	      3250	tc-i386.c	FUNCTION_60	IF_4
0x400342d	            0x7507	                           jne 0x4003436	      3250	tc-i386.c	FUNCTION_60	IF_4
0x400342f	      0xb800000000	                              mov eax, 0	      3251	tc-i386.c	FUNCTION_60	IF_4
0x4003434	            0xeb05	                           jmp 0x400343b	      3251	tc-i386.c	FUNCTION_60	IF_4
0x4003436	      0xb801000000	                              mov eax, 1	      3253	tc-i386.c	FUNCTION_60
0x400343b	              0xc9	                                   leave	      3254	tc-i386.c	FUNCTION_60
0x400343c	              0xc3	                                     ret	      3254	tc-i386.c	FUNCTION_60
set_cpu_arch	CALL,36:FOR,2:WHILE,0:functions,0:SWITCH,0:IF,15:ELSE,7:DO,0	359
0x400228a	              0x55	                                push rbp	      2580	tc-i386.c	FUNCTION_49
0x400228b	          0x4889e5	                            mov rbp, rsp	      2580	tc-i386.c	FUNCTION_49
0x400228e	              0x53	                                push rbx	      2580	tc-i386.c	FUNCTION_49
0x400228f	        0x4883ec68	                           sub rsp, 0x68	      2580	tc-i386.c	FUNCTION_49
0x4002293	          0x897d9c	             mov dword [rbp - 0x64], edi	      2580	tc-i386.c	FUNCTION_49
0x4002296	    0x64488b042528	                mov rax, qword fs:[0x28]	      2580	tc-i386.c	FUNCTION_49
0x400229f	        0x488945e8	             mov qword [rbp - 0x18], rax	      2580	tc-i386.c	FUNCTION_49
0x40022a3	            0x31c0	                            xor eax, eax	      2580	tc-i386.c	FUNCTION_49
0x40022a5	    0x488b05000000	            mov rax, qword [0x040022ac] 	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40022ac	           0xfb600	                   movzx eax, byte [rax]	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40022af	            0x3c20	                            cmp al, 0x20	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40022b1	            0x7512	                           jne 0x40022c5	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40022b3	    0x488b05000000	            mov rax, qword [0x040022ba] 	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40022ba	        0x4883c001	                              add rax, 1	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40022be	    0x488905000000	            mov qword [0x040022c5], rax 	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40022c5	    0x488b05000000	            mov rax, qword [0x040022cc] 	      2583	tc-i386.c	FUNCTION_49	IF_1
0x40022cc	           0xfb600	                   movzx eax, byte [rax]	      2583	tc-i386.c	FUNCTION_49	IF_1
0x40022cf	           0xfb6c0	                           movzx eax, al	      2583	tc-i386.c	FUNCTION_49	IF_1
0x40022d2	            0x4898	                                    cdqe	      2583	tc-i386.c	FUNCTION_49	IF_1
0x40022d4	     0xfb680000000	                   movzx eax, byte [rax]	      2583	tc-i386.c	FUNCTION_49	IF_1
0x40022db	            0x84c0	                             test al, al	      2583	tc-i386.c	FUNCTION_49	IF_1
0x40022dd	     0xf85c3040000	                           jne 0x40027a6	      2583	tc-i386.c	FUNCTION_49	IF_1
0x40022e3	        0x488d45b8	                   lea rax, [rbp - 0x48]	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40022e7	          0x4889c7	                            mov rdi, rax	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40022ea	      0xe800000000	                          call 0x40022ef	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40022ef	           0xfbec0	                           movsx eax, al	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40022f2	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40022f5	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x40022fc	      0xe909030000	                           jmp 0x400260a	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4002301	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002304	          0x4889d0	                            mov rax, rdx	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002307	        0x48c1e002	                              shl rax, 2	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x400230b	          0x4801d0	                            add rax, rdx	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x400230e	        0x48c1e003	                              shl rax, 3	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002312	    0x480500000000	                              add rax, 0	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002318	          0x488b10	                    mov rdx, qword [rax]	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x400231b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x400231f	          0x4889d6	                            mov rsi, rdx	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002322	          0x4889c7	                            mov rdi, rax	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002325	      0xe800000000	                          call 0x400232a	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x400232a	            0x85c0	                           test eax, eax	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x400232c	     0xf85d4020000	                           jne 0x4002606	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002332	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x4002336	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x4002339	          0x4889d0	                            mov rax, rdx	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x400233c	        0x48c1e002	                              shl rax, 2	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x4002340	          0x4801d0	                            add rax, rdx	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x4002343	        0x48c1e003	                              shl rax, 3	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x4002347	    0x480500000000	                              add rax, 0	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x400234d	          0x488b10	                    mov rdx, qword [rax]	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x4002350	        0x488b4008	                mov rax, qword [rax + 8]	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x4002354	          0x4889d6	                            mov rsi, rdx	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x4002357	          0x4889c2	                            mov rdx, rax	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x400235a	          0x4889cf	                            mov rdi, rcx	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x400235d	      0xe824feffff	      call sym.check_cpu_arch_compatible	      2594	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_5
0x4002362	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2596	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002366	           0xfb600	                   movzx eax, byte [rax]	      2596	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002369	            0x3c2e	                            cmp al, 0x2e	      2596	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400236b	     0xf842b010000	                            je 0x400249c	      2596	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002371	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2598	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002374	          0x4889d0	                            mov rax, rdx	      2598	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002377	        0x48c1e002	                              shl rax, 2	      2598	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400237b	          0x4801d0	                            add rax, rdx	      2598	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400237e	        0x48c1e003	                              shl rax, 3	      2598	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002382	    0x480500000000	                              add rax, 0	      2598	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002388	          0x488b00	                    mov rax, qword [rax]	      2598	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400238b	    0x488905000000	            mov qword [0x04002392], rax 	      2598	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002392	    0x48c705000000	               mov qword [0x0400239d], 0	      2599	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400239d	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40023a0	          0x4889d0	                            mov rax, rdx	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40023a3	        0x48c1e002	                              shl rax, 2	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40023a7	          0x4801d0	                            add rax, rdx	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40023aa	        0x48c1e003	                              shl rax, 3	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40023ae	    0x480500000000	                              add rax, 0	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40023b4	        0x488b5008	                mov rdx, qword [rax + 8]	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40023b8	          0x488b00	                    mov rax, qword [rax]	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40023bb	    0x488905000000	            mov qword [0x040023c2], rax 	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40023c2	    0x488915000000	            mov qword [0x040023c9], rdx 	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40023c9	    0x8b0500000000	            mov eax, dword [0x040023cf] 	      2601	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40023cf	          0x83f802	                              cmp eax, 2	      2601	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40023d2	            0x7522	                           jne 0x40023f6	      2601	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40023d4	     0xfb605000000	           movzx eax, byte [0x040023db] 	      2603	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40023db	          0x83c840	                            or eax, 0x40	      2603	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40023de	    0x880500000000	               mov byte [0x040023e4], al	      2603	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40023e4	     0xfb605000000	           movzx eax, byte [0x040023eb] 	      2604	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40023eb	          0x83e07f	                           and eax, 0x7f	      2604	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40023ee	    0x880500000000	               mov byte [0x040023f4], al	      2604	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40023f4	            0xeb20	                           jmp 0x4002416	      2604	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40023f6	     0xfb605000000	           movzx eax, byte [0x040023fd] 	      2608	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x40023fd	          0x83e0bf	                     and eax, 0xffffffbf	      2608	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x4002400	    0x880500000000	               mov byte [0x04002406], al	      2608	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x4002406	     0xfb605000000	           movzx eax, byte [0x0400240d] 	      2609	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x400240d	          0x83c880	                      or eax, 0xffffff80	      2609	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x4002410	    0x880500000000	               mov byte [0x04002416], al	      2609	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x4002416	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002419	          0x4889d0	                            mov rax, rdx	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400241c	        0x48c1e002	                              shl rax, 2	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002420	          0x4801d0	                            add rax, rdx	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002423	        0x48c1e003	                              shl rax, 3	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002427	    0x480500000000	                              add rax, 0	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400242d	            0x8b00	                    mov eax, dword [rax]	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400242f	    0x890500000000	            mov dword [0x04002435], eax 	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002435	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002438	          0x4889d0	                            mov rax, rdx	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400243b	        0x48c1e002	                              shl rax, 2	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400243f	          0x4801d0	                            add rax, rdx	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002442	        0x48c1e003	                              shl rax, 3	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002446	    0x480500000000	                              add rax, 0	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400244c	        0x488b5008	                mov rdx, qword [rax + 8]	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002450	          0x488b00	                    mov rax, qword [rax]	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002453	    0x488905000000	            mov qword [0x0400245a], rax 	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400245a	    0x488915000000	            mov qword [0x04002461], rdx 	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002461	    0x8b0500000000	            mov eax, dword [0x04002467] 	      2613	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002467	            0x85c0	                           test eax, eax	      2613	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002469	     0xf85aa010000	                           jne 0x4002619	      2613	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x400246f	    0x8b0500000000	            mov eax, dword [0x04002475] 	      2615	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002475	    0x890500000000	            mov dword [0x0400247b], eax 	      2615	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x400247b	    0x488b05000000	            mov rax, qword [0x04002482] 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002482	    0x488b15000000	            mov rdx, qword [0x04002489] 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002489	    0x488905000000	            mov qword [0x04002490], rax 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002490	    0x488915000000	            mov qword [0x04002497], rdx 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002497	      0xe97d010000	                           jmp 0x4002619	      2618	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400249c	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x400249f	          0x4889d0	                            mov rax, rdx	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024a2	        0x48c1e002	                              shl rax, 2	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024a6	          0x4801d0	                            add rax, rdx	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024a9	        0x48c1e003	                              shl rax, 3	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024ad	    0x480500000000	                              add rax, 0	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024b3	        0x488b5008	                mov rdx, qword [rax + 8]	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024b7	          0x488b00	                    mov rax, qword [rax]	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024ba	    0x488b3d000000	            mov rdi, qword [0x040024c1] 	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024c1	    0x488b35000000	            mov rsi, qword [0x040024c8] 	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024c8	          0x4889d1	                            mov rcx, rdx	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024cb	          0x4889c2	                            mov rdx, rax	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024ce	      0xe816e2ffff	                   call sym.cpu_flags_or	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024d3	        0x488945d0	             mov qword [rbp - 0x30], rax	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024d7	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2621	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_6
0x40024db	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2624	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_7
0x40024df	      0xbe00000000	                              mov esi, 0	      2624	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_7
0x40024e4	          0x4889c7	                            mov rdi, rax	      2624	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_7
0x40024e7	      0xe8c0e0ffff	                call sym.cpu_flags_equal	      2624	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_7
0x40024ec	            0x85c0	                           test eax, eax	      2624	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_7
0x40024ee	     0xf85b6000000	                           jne 0x40025aa	      2624	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_7
0x40024f4	    0x488b05000000	            mov rax, qword [0x040024fb] 	      2626	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7
0x40024fb	          0x4885c0	                           test rax, rax	      2626	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7
0x40024fe	            0x7453	                            je 0x4002553	      2626	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7
0x4002500	    0x488b05000000	            mov rax, qword [0x04002507] 	      2628	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7
0x4002507	        0x488945c0	             mov qword [rbp - 0x40], rax	      2628	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7
0x400250b	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x400250e	          0x4889d0	                            mov rax, rdx	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4002511	        0x48c1e002	                              shl rax, 2	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4002515	          0x4801d0	                            add rax, rdx	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4002518	        0x48c1e003	                              shl rax, 3	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x400251c	    0x480500000000	                              add rax, 0	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4002522	          0x488b08	                    mov rcx, qword [rax]	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4002525	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4002529	      0xba00000000	                              mov edx, 0	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x400252e	          0x4889ce	                            mov rsi, rcx	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4002531	          0x4889c7	                            mov rdi, rax	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4002534	      0xb800000000	                              mov eax, 0	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4002539	      0xe800000000	                          call 0x400253e	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x400253e	    0x488905000000	            mov qword [0x04002545], rax 	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4002545	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2632	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_9
0x4002549	          0x4889c7	                            mov rdi, rax	      2632	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_9
0x400254c	      0xe800000000	                          call 0x4002551	      2632	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_9
0x4002551	            0xeb29	                           jmp 0x400257c	      2632	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_9
0x4002553	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4002556	          0x4889d0	                            mov rax, rdx	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4002559	        0x48c1e002	                              shl rax, 2	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x400255d	          0x4801d0	                            add rax, rdx	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4002560	        0x48c1e003	                              shl rax, 3	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4002564	    0x480500000000	                              add rax, 0	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x400256a	          0x488b00	                    mov rax, qword [rax]	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x400256d	          0x4889c7	                            mov rdi, rax	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4002570	      0xe800000000	                          call 0x4002575	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4002575	    0x488905000000	            mov qword [0x0400257c], rax 	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x400257c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4002580	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4002584	    0x488905000000	            mov qword [0x0400258b], rax 	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x400258b	    0x488915000000	            mov qword [0x04002592], rdx 	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4002592	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4002596	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x400259a	    0x488905000000	            mov qword [0x040025a1], rax 	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x40025a1	    0x488915000000	            mov qword [0x040025a8], rdx 	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x40025a8	            0xeb45	                           jmp 0x40025ef	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x40025aa	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025ad	          0x4889d0	                            mov rax, rdx	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025b0	        0x48c1e002	                              shl rax, 2	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025b4	          0x4801d0	                            add rax, rdx	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025b7	        0x48c1e003	                              shl rax, 3	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025bb	    0x480500000000	                              add rax, 0	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025c1	        0x488b5008	                mov rdx, qword [rax + 8]	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025c5	          0x488b00	                    mov rax, qword [rax]	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025c8	    0x488b3d000000	            mov rdi, qword [0x040025cf] 	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025cf	    0x488b35000000	            mov rsi, qword [0x040025d6] 	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025d6	          0x4889d1	                            mov rcx, rdx	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025d9	          0x4889c2	                            mov rdx, rax	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025dc	      0xe808e1ffff	                   call sym.cpu_flags_or	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025e1	    0x488905000000	            mov qword [0x040025e8], rax 	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025e8	    0x488915000000	            mov qword [0x040025ef], rdx 	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x40025ef	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2643	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_12
0x40025f2	           0xfbec0	                           movsx eax, al	      2643	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_12
0x40025f5	            0x89c7	                            mov edi, eax	      2643	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_12
0x40025f7	      0xe800000000	                          call 0x40025fc	      2643	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_12
0x40025fc	      0xe800000000	                          call 0x4002601	      2644	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_13
0x4002601	      0xe97a020000	                           jmp 0x4002880	      2645	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2
0x4002606	        0x8345b001	               add dword [rbp - 0x50], 1	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x400260a	    0x817db0830000	           cmp dword [rbp - 0x50], 0x83 	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4002611	     0xf86eafcffff	                           jbe 0x4002301	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4002617	            0xeb01	                           jmp 0x400261a	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4002619	              0x90	                                     nop	      2618	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400261a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x400261e	           0xfb600	                   movzx eax, byte [rax]	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002621	            0x3c2e	                            cmp al, 0x2e	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002623	     0xf8548010000	                           jne 0x4002771	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002629	    0x817db0830000	           cmp dword [rbp - 0x50], 0x83 	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002630	     0xf863b010000	                           jbe 0x4002771	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002636	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x400263d	      0xe91e010000	                           jmp 0x4002760	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x4002642	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4002645	        0x48c1e005	                              shl rax, 5	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4002649	    0x480500000000	                              add rax, 0	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x400264f	          0x488b00	                    mov rax, qword [rax]	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4002652	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4002656	        0x4883c201	                              add rdx, 1	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x400265a	          0x4889c6	                            mov rsi, rax	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x400265d	          0x4889d7	                            mov rdi, rdx	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4002660	      0xe800000000	                          call 0x4002665	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4002665	            0x85c0	                           test eax, eax	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4002667	     0xf85ef000000	                           jne 0x400275c	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x400266d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x4002670	        0x48c1e005	                              shl rax, 5	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x4002674	    0x480500000000	                              add rax, 0	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x400267a	        0x488b5014	            mov rdx, qword [rax + 0x14] 	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x400267e	        0x488b400c	              mov rax, qword [rax + 0xc]	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x4002682	    0x488b3d000000	            mov rdi, qword [0x04002689] 	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x4002689	    0x488b35000000	            mov rsi, qword [0x04002690] 	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x4002690	          0x4889d1	                            mov rcx, rdx	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x4002693	          0x4889c2	                            mov rdx, rax	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x4002696	      0xe8cfe0ffff	              call sym.cpu_flags_and_not	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x400269b	        0x488945d0	             mov qword [rbp - 0x30], rax	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x400269f	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2655	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_17
0x40026a3	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2657	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_18
0x40026a7	      0xbe00000000	                              mov esi, 0	      2657	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_18
0x40026ac	          0x4889c7	                            mov rdi, rax	      2657	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_18
0x40026af	      0xe8f8deffff	                call sym.cpu_flags_equal	      2657	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_18
0x40026b4	            0x85c0	                           test eax, eax	      2657	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_18
0x40026b6	     0xf8588000000	                           jne 0x4002744	      2657	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_18
0x40026bc	    0x488b05000000	            mov rax, qword [0x040026c3] 	      2659	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11
0x40026c3	          0x4885c0	                           test rax, rax	      2659	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11
0x40026c6	            0x743d	                            je 0x4002705	      2659	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11
0x40026c8	    0x488b05000000	            mov rax, qword [0x040026cf] 	      2661	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11
0x40026cf	        0x488945c8	             mov qword [rbp - 0x38], rax	      2661	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11
0x40026d3	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x40026d7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x40026db	      0xba00000000	                              mov edx, 0	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x40026e0	          0x4889ce	                            mov rsi, rcx	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x40026e3	          0x4889c7	                            mov rdi, rax	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x40026e6	      0xb800000000	                              mov eax, 0	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x40026eb	      0xe800000000	                          call 0x40026f0	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x40026f0	    0x488905000000	            mov qword [0x040026f7], rax 	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x40026f7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2664	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_20
0x40026fb	          0x4889c7	                            mov rdi, rax	      2664	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_20
0x40026fe	      0xe800000000	                          call 0x4002703	      2664	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_20
0x4002703	            0xeb13	                           jmp 0x4002718	      2664	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_20
0x4002705	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2667	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_21
0x4002709	          0x4889c7	                            mov rdi, rax	      2667	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_21
0x400270c	      0xe800000000	                          call 0x4002711	      2667	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_21
0x4002711	    0x488905000000	            mov qword [0x04002718], rax 	      2667	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_21
0x4002718	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x400271c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002720	    0x488905000000	            mov qword [0x04002727], rax 	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002727	    0x488915000000	            mov qword [0x0400272e], rdx 	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x400272e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002732	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002736	    0x488905000000	            mov qword [0x0400273d], rax 	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x400273d	    0x488915000000	            mov qword [0x04002744], rdx 	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002744	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2671	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_22
0x4002747	           0xfbec0	                           movsx eax, al	      2671	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_22
0x400274a	            0x89c7	                            mov edi, eax	      2671	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_22
0x400274c	      0xe800000000	                          call 0x4002751	      2671	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_22
0x4002751	      0xe800000000	                          call 0x4002756	      2672	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_23
0x4002756	              0x90	                                     nop	      2673	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9
0x4002757	      0xe924010000	                           jmp 0x4002880	      2673	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9
0x400275c	        0x8345b001	               add dword [rbp - 0x50], 1	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x4002760	        0x837db020	           cmp dword [rbp - 0x50], 0x20 	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x4002764	     0xf86d8feffff	                           jbe 0x4002642	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x400276a	    0xc745b0840000	           mov dword [rbp - 0x50], 0x84 	      2676	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_24
0x4002771	    0x817db0830000	           cmp dword [rbp - 0x50], 0x83 	      2679	tc-i386.c	FUNCTION_49	IF_1	IF_12	CALL_25
0x4002778	            0x761e	                           jbe 0x4002798	      2679	tc-i386.c	FUNCTION_49	IF_1	IF_12	CALL_25
0x400277a	        0x488b5db8	             mov rbx, qword [rbp - 0x48]	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x400277e	      0xbf00000000	                              mov edi, 0	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002783	      0xe800000000	                          call 0x4002788	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002788	          0x4889de	                            mov rsi, rbx	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x400278b	          0x4889c7	                            mov rdi, rax	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x400278e	      0xb800000000	                              mov eax, 0	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002793	      0xe800000000	                          call 0x4002798	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002798	    0x488b05000000	            mov rax, qword [0x0400279f] 	      2682	tc-i386.c	FUNCTION_49	IF_1
0x400279f	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2682	tc-i386.c	FUNCTION_49	IF_1
0x40027a2	            0x8810	                      mov byte [rax], dl	      2682	tc-i386.c	FUNCTION_49	IF_1
0x40027a4	            0xeb17	                           jmp 0x40027bd	      2682	tc-i386.c	FUNCTION_49	IF_1
0x40027a6	      0xbf00000000	                              mov edi, 0	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x40027ab	      0xe800000000	                          call 0x40027b0	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x40027b0	          0x4889c7	                            mov rdi, rax	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x40027b3	      0xb800000000	                              mov eax, 0	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x40027b8	      0xe800000000	                          call 0x40027bd	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x40027bd	    0xc70500000000	               mov dword [0x040027c7], 0	      2687	tc-i386.c	FUNCTION_49
0x40027c7	    0x488b05000000	            mov rax, qword [0x040027ce] 	      2688	tc-i386.c	FUNCTION_49	IF_13
0x40027ce	           0xfb600	                   movzx eax, byte [rax]	      2688	tc-i386.c	FUNCTION_49	IF_13
0x40027d1	            0x3c2c	                            cmp al, 0x2c	      2688	tc-i386.c	FUNCTION_49	IF_13
0x40027d3	     0xf85a2000000	                           jne 0x400287b	      2688	tc-i386.c	FUNCTION_49	IF_13
0x40027d9	    0x488b05000000	            mov rax, qword [0x040027e0] 	      2689	tc-i386.c	FUNCTION_49	IF_13
0x40027e0	        0x4883c001	                              add rax, 1	      2689	tc-i386.c	FUNCTION_49	IF_13
0x40027e4	           0xfb600	                   movzx eax, byte [rax]	      2689	tc-i386.c	FUNCTION_49	IF_13
0x40027e7	           0xfb6c0	                           movzx eax, al	      2689	tc-i386.c	FUNCTION_49	IF_13
0x40027ea	            0x4898	                                    cdqe	      2689	tc-i386.c	FUNCTION_49	IF_13
0x40027ec	     0xfb680000000	                   movzx eax, byte [rax]	      2689	tc-i386.c	FUNCTION_49	IF_13
0x40027f3	            0x84c0	                             test al, al	      2689	tc-i386.c	FUNCTION_49	IF_13
0x40027f5	     0xf8580000000	                           jne 0x400287b	      2689	tc-i386.c	FUNCTION_49	IF_13
0x40027fb	    0x488b05000000	            mov rax, qword [0x04002802] 	      2694	tc-i386.c	FUNCTION_49	IF_13
0x4002802	        0x4883c001	                              add rax, 1	      2694	tc-i386.c	FUNCTION_49	IF_13
0x4002806	    0x488905000000	            mov qword [0x0400280d], rax 	      2694	tc-i386.c	FUNCTION_49	IF_13
0x400280d	        0x488d45b8	                   lea rax, [rbp - 0x48]	      2695	tc-i386.c	FUNCTION_49	IF_13	CALL_30
0x4002811	          0x4889c7	                            mov rdi, rax	      2695	tc-i386.c	FUNCTION_49	IF_13	CALL_30
0x4002814	      0xe800000000	                          call 0x4002819	      2695	tc-i386.c	FUNCTION_49	IF_13	CALL_30
0x4002819	          0x8845af	               mov byte [rbp - 0x51], al	      2695	tc-i386.c	FUNCTION_49	IF_13	CALL_30
0x400281c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002820	      0xbe00000000	                              mov esi, 0	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002825	          0x4889c7	                            mov rdi, rax	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002828	      0xe800000000	                          call 0x400282d	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x400282d	            0x85c0	                           test eax, eax	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x400282f	            0x750c	                           jne 0x400283d	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002831	    0xc70500000000	               mov dword [0x0400283b], 1	      2698	tc-i386.c	FUNCTION_49	IF_13	IF_14
0x400283b	            0xeb33	                           jmp 0x4002870	      2698	tc-i386.c	FUNCTION_49	IF_13	IF_14
0x400283d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002841	      0xbe00000000	                              mov esi, 0	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002846	          0x4889c7	                            mov rdi, rax	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002849	      0xe800000000	                          call 0x400284e	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x400284e	            0x85c0	                           test eax, eax	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002850	            0x741e	                            je 0x4002870	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002852	        0x488b5db8	             mov rbx, qword [rbp - 0x48]	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002856	      0xbf00000000	                              mov edi, 0	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x400285b	      0xe800000000	                          call 0x4002860	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002860	          0x4889de	                            mov rsi, rbx	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002863	          0x4889c7	                            mov rdi, rax	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002866	      0xb800000000	                              mov eax, 0	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x400286b	      0xe800000000	                          call 0x4002870	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002870	         0xfbe45af	            movsx eax, byte [rbp - 0x51]	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x4002874	            0x89c7	                            mov edi, eax	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x4002876	      0xe800000000	                          call 0x400287b	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x400287b	      0xe800000000	                          call 0x4002880	      2707	tc-i386.c	FUNCTION_49	CALL_36
0x4002880	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2708	tc-i386.c	FUNCTION_49
0x4002884	    0x644833042528	                xor rax, qword fs:[0x28]	      2708	tc-i386.c	FUNCTION_49
0x400288d	            0x7405	                            je 0x4002894	      2708	tc-i386.c	FUNCTION_49
0x400288f	      0xe800000000	                          call 0x4002894	      2708	tc-i386.c	FUNCTION_49
0x4002894	        0x4883c468	                           add rsp, 0x68	      2708	tc-i386.c	FUNCTION_49
0x4002898	              0x5b	                                 pop rbx	      2708	tc-i386.c	FUNCTION_49
0x4002899	              0x5d	                                 pop rbp	      2708	tc-i386.c	FUNCTION_49
0x400289a	              0xc3	                                     ret	      2708	tc-i386.c	FUNCTION_49
optimize_encoding	CALL,5:FOR,1:WHILE,0:functions,0:SWITCH,0:IF,12:ELSE,6:DO,0	351
0x40043e0	              0x55	                                push rbp	      3784	tc-i386.c	FUNCTION_67
0x40043e1	          0x4889e5	                            mov rbp, rsp	      3784	tc-i386.c	FUNCTION_67
0x40043e4	        0x4883ec10	                           sub rsp, 0x10	      3784	tc-i386.c	FUNCTION_67
0x40043e8	    0x8b0500000000	            mov eax, dword [0x040043ee] 	      3787	tc-i386.c	FUNCTION_67	IF_1
0x40043ee	            0x85c0	                           test eax, eax	      3787	tc-i386.c	FUNCTION_67	IF_1
0x40043f0	     0xf8458010000	                            je 0x400454e	      3787	tc-i386.c	FUNCTION_67	IF_1
0x40043f6	    0x8b0500000000	            mov eax, dword [0x040043fc] 	      3788	tc-i386.c	FUNCTION_67	IF_1
0x40043fc	          0x83f801	                              cmp eax, 1	      3788	tc-i386.c	FUNCTION_67	IF_1
0x40043ff	     0xf8549010000	                           jne 0x400454e	      3788	tc-i386.c	FUNCTION_67	IF_1
0x4004405	    0x8b0500000000	            mov eax, dword [0x0400440b] 	      3789	tc-i386.c	FUNCTION_67	IF_1
0x400440b	          0x83f801	                              cmp eax, 1	      3789	tc-i386.c	FUNCTION_67	IF_1
0x400440e	     0xf853a010000	                           jne 0x400454e	      3789	tc-i386.c	FUNCTION_67	IF_1
0x4004414	     0xfb605000000	           movzx eax, byte [0x0400441b] 	      3790	tc-i386.c	FUNCTION_67	IF_1
0x400441b	          0x83e020	                           and eax, 0x20	      3790	tc-i386.c	FUNCTION_67	IF_1
0x400441e	            0x84c0	                             test al, al	      3790	tc-i386.c	FUNCTION_67	IF_1
0x4004420	     0xf8528010000	                           jne 0x400454e	      3790	tc-i386.c	FUNCTION_67	IF_1
0x4004426	    0x488b05000000	            mov rax, qword [0x0400442d] 	      3791	tc-i386.c	FUNCTION_67	IF_1
0x400442d	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3791	tc-i386.c	FUNCTION_67	IF_1
0x4004431	            0x3c02	                               cmp al, 2	      3791	tc-i386.c	FUNCTION_67	IF_1
0x4004433	     0xf8515010000	                           jne 0x400454e	      3791	tc-i386.c	FUNCTION_67	IF_1
0x4004439	    0x488b05000000	            mov rax, qword [0x04004440] 	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x4004440	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x4004444	          0x4889c7	                            mov rdi, rax	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x4004447	      0xe846bdffff	                   call sym.fits_in_imm7	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x400444c	            0x85c0	                           test eax, eax	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x400444e	     0xf84fa000000	                            je 0x400454e	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x4004454	    0x8b0500000000	            mov eax, dword [0x0400445a] 	      3793	tc-i386.c	FUNCTION_67	IF_1
0x400445a	      0x3da8000000	                           cmp eax, 0xa8	      3793	tc-i386.c	FUNCTION_67	IF_1
0x400445f	            0x750d	                           jne 0x400446e	      3793	tc-i386.c	FUNCTION_67	IF_1
0x4004461	    0x8b0500000000	            mov eax, dword [0x04004467] 	      3794	tc-i386.c	FUNCTION_67	IF_1
0x4004467	      0x3dffff0000	                         cmp eax, 0xffff	      3794	tc-i386.c	FUNCTION_67	IF_1
0x400446c	            0x741f	                            je 0x400448d	      3794	tc-i386.c	FUNCTION_67	IF_1
0x400446e	    0x8b0500000000	            mov eax, dword [0x04004474] 	      3795	tc-i386.c	FUNCTION_67	IF_1
0x4004474	      0x3df6000000	                           cmp eax, 0xf6	      3795	tc-i386.c	FUNCTION_67	IF_1
0x4004479	     0xf85cf000000	                           jne 0x400454e	      3795	tc-i386.c	FUNCTION_67	IF_1
0x400447f	    0x8b0500000000	            mov eax, dword [0x04004485] 	      3796	tc-i386.c	FUNCTION_67	IF_1
0x4004485	            0x85c0	                           test eax, eax	      3796	tc-i386.c	FUNCTION_67	IF_1
0x4004487	     0xf85c1000000	                           jne 0x400454e	      3796	tc-i386.c	FUNCTION_67	IF_1
0x400448d	    0x488b05000000	            mov rax, qword [0x04004494] 	      3801	tc-i386.c	FUNCTION_67	IF_1
0x4004494	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      3801	tc-i386.c	FUNCTION_67	IF_1
0x4004498	           0xfb6c0	                           movzx eax, al	      3801	tc-i386.c	FUNCTION_67	IF_1
0x400449b	          0x8945fc	                mov dword [rbp - 4], eax	      3801	tc-i386.c	FUNCTION_67	IF_1
0x400449e	    0x8b0500000000	            mov eax, dword [0x040044a4] 	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x40044a4	          0x83f802	                              cmp eax, 2	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x40044a7	            0x740a	                            je 0x40044b3	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x40044a9	        0x837dfc03	                  cmp dword [rbp - 4], 3	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x40044ad	     0xf8754050000	                            ja 0x4004a07	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x40044b3	     0xfb605000000	           movzx eax, byte [0x040044ba] 	      3804	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x40044ba	          0x83c820	                            or eax, 0x20	      3804	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x40044bd	    0x880500000000	               mov byte [0x040044c3], al	      3804	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x40044c3	    0xc60500000000	                mov byte [0x040044ca], 0	      3806	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x40044ca	        0x837dfc03	                  cmp dword [rbp - 4], 3	      3807	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x40044ce	     0xf8633050000	                           jbe 0x4004a07	      3807	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x40044d4	    0x488b05000000	            mov rax, qword [0x040044db] 	      3808	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x40044db	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3808	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x40044df	           0xfb6c0	                           movzx eax, al	      3808	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x40044e2	          0x83e001	                              and eax, 1	      3808	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x40044e5	            0x85c0	                           test eax, eax	      3808	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x40044e7	     0xf851a050000	                           jne 0x4004a07	      3808	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x40044ed	     0xfb605000000	           movzx eax, byte [0x040044f4] 	      3811	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x40044f4	          0x83e040	                           and eax, 0x40	      3811	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x40044f7	            0x84c0	                             test al, al	      3811	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x40044f9	            0x7409	                            je 0x4004504	      3811	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x40044fb	    0xc745f8100000	               mov dword [rbp - 8], 0x10	      3812	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x4004502	            0xeb1e	                           jmp 0x4004522	      3812	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x4004504	     0xfb605000000	           movzx eax, byte [0x0400450b] 	      3813	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x400450b	          0x83e080	                     and eax, 0xffffff80	      3813	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x400450e	            0x84c0	                             test al, al	      3813	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x4004510	            0x7409	                            je 0x400451b	      3813	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x4004512	    0xc745f8200000	               mov dword [rbp - 8], 0x20	      3814	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x4004519	            0xeb07	                           jmp 0x4004522	      3814	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x400451b	    0xc745f8300000	               mov dword [rbp - 8], 0x30	      3816	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4004522	    0x488b0d000000	            mov rcx, qword [0x04004529] 	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4004529	          0x8b45f8	                mov eax, dword [rbp - 8]	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x400452c	          0x4863d0	                         movsxd rdx, eax	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x400452f	          0x4889d0	                            mov rax, rdx	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4004532	          0x4801c0	                            add rax, rax	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4004535	          0x4801d0	                            add rax, rdx	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4004538	        0x48c1e003	                              shl rax, 3	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x400453c	          0x48f7d8	                                 neg rax	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x400453f	          0x4801c8	                            add rax, rcx	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4004542	    0x488905000000	            mov qword [0x04004549], rax 	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4004549	      0xe9b9040000	                           jmp 0x4004a07	      3797	tc-i386.c	FUNCTION_67	IF_1
0x400454e	    0x8b0500000000	            mov eax, dword [0x04004554] 	      3821	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004554	          0x83f802	                              cmp eax, 2	      3821	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004557	     0xf8585020000	                           jne 0x40047e2	      3821	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400455d	     0xfb605000000	           movzx eax, byte [0x04004564] 	      3822	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004564	          0x83e002	                              and eax, 2	      3822	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004567	            0x84c0	                             test al, al	      3822	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004569	     0xf84ea000000	                            je 0x4004659	      3822	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400456f	    0x8b0500000000	            mov eax, dword [0x04004575] 	      3823	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004575	          0x83f801	                              cmp eax, 1	      3823	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004578	     0xf85db000000	                           jne 0x4004659	      3823	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400457e	    0x8b0500000000	            mov eax, dword [0x04004584] 	      3824	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004584	          0x83f801	                              cmp eax, 1	      3824	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004587	     0xf85cc000000	                           jne 0x4004659	      3824	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400458d	    0x488b05000000	            mov rax, qword [0x04004594] 	      3825	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004594	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3825	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004598	            0x3c02	                               cmp al, 2	      3825	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400459a	     0xf85b9000000	                           jne 0x4004659	      3825	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40045a0	    0x8b0500000000	            mov eax, dword [0x040045a6] 	      3826	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40045a6	      0x3db0000000	                           cmp eax, 0xb0	      3826	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40045ab	            0x7528	                           jne 0x40045d5	      3826	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40045ad	    0x8b0500000000	            mov eax, dword [0x040045b3] 	      3827	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40045b3	      0x3dffff0000	                         cmp eax, 0xffff	      3827	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40045b8	            0x751b	                           jne 0x40045d5	      3827	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40045ba	    0x488b05000000	            mov rax, qword [0x040045c1] 	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x40045c1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x40045c5	          0x4889c7	                            mov rdi, rax	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x40045c8	      0xe86ad1ffff	          call sym.fits_in_unsigned_long	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x40045cd	            0x85c0	                           test eax, eax	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x40045cf	     0xf8515010000	                           jne 0x40046ea	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x40045d5	    0x488b05000000	            mov rax, qword [0x040045dc] 	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40045dc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40045e0	          0x4889c7	                            mov rdi, rax	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40045e3	      0xe8c5bbffff	                  call sym.fits_in_imm31	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40045e8	            0x85c0	                           test eax, eax	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40045ea	            0x746d	                            je 0x4004659	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40045ec	    0x8b0500000000	            mov eax, dword [0x040045f2] 	      3830	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40045f2	          0x83f824	                           cmp eax, 0x24	      3830	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40045f5	            0x740d	                            je 0x4004604	      3830	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40045f7	    0x8b0500000000	            mov eax, dword [0x040045fd] 	      3831	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40045fd	      0x3da8000000	                           cmp eax, 0xa8	      3831	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004602	            0x7511	                           jne 0x4004615	      3831	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004604	    0x8b0500000000	            mov eax, dword [0x0400460a] 	      3832	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400460a	      0x3dffff0000	                         cmp eax, 0xffff	      3832	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400460f	     0xf84d5000000	                            je 0x40046ea	      3832	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004615	    0x8b0500000000	            mov eax, dword [0x0400461b] 	      3833	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400461b	      0x3d80000000	                           cmp eax, 0x80	      3833	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004620	            0x750f	                           jne 0x4004631	      3833	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004622	    0x8b0500000000	            mov eax, dword [0x04004628] 	      3834	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004628	          0x83f804	                              cmp eax, 4	      3834	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400462b	     0xf84b9000000	                            je 0x40046ea	      3834	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004631	    0x8b0500000000	            mov eax, dword [0x04004637] 	      3835	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004637	      0x3df6000000	                           cmp eax, 0xf6	      3835	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400463c	            0x740d	                            je 0x400464b	      3835	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400463e	    0x8b0500000000	            mov eax, dword [0x04004644] 	      3836	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004644	      0x3dc6000000	                           cmp eax, 0xc6	      3836	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004649	            0x750e	                           jne 0x4004659	      3836	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400464b	    0x8b0500000000	            mov eax, dword [0x04004651] 	      3837	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004651	            0x85c0	                           test eax, eax	      3837	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004653	     0xf8491000000	                            je 0x40046ea	      3837	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004659	     0xfb605000000	           movzx eax, byte [0x04004660] 	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004660	          0x83e002	                              and eax, 2	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004663	            0x84c0	                             test al, al	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004665	     0xf8477010000	                            je 0x40047e2	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400466b	    0x8b0500000000	            mov eax, dword [0x04004671] 	      3839	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004671	          0x83f802	                              cmp eax, 2	      3839	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004674	            0x7536	                           jne 0x40046ac	      3839	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004676	    0x488b15000000	            mov rdx, qword [0x0400467d] 	      3840	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400467d	    0x488b05000000	            mov rax, qword [0x04004684] 	      3840	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004684	          0x4839c2	                            cmp rdx, rax	      3840	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004687	            0x7523	                           jne 0x40046ac	      3840	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004689	    0x8b0500000000	            mov eax, dword [0x0400468f] 	      3841	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400468f	          0x83f830	                           cmp eax, 0x30	      3841	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004692	            0x740b	                            je 0x400469f	      3841	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4004694	    0x8b0500000000	            mov eax, dword [0x0400469a] 	      3842	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400469a	          0x83f828	                           cmp eax, 0x28	      3842	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400469d	            0x750d	                           jne 0x40046ac	      3842	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400469f	    0x8b0500000000	            mov eax, dword [0x040046a5] 	      3843	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046a5	      0x3dffff0000	                         cmp eax, 0xffff	      3843	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046aa	            0x743e	                            je 0x40046ea	      3843	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046ac	    0x8b0500000000	            mov eax, dword [0x040046b2] 	      3844	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046b2	          0x83f801	                              cmp eax, 1	      3844	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046b5	     0xf8527010000	                           jne 0x40047e2	      3844	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046bb	    0x8b0500000000	            mov eax, dword [0x040046c1] 	      3845	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046c1	          0x83f801	                              cmp eax, 1	      3845	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046c4	     0xf8518010000	                           jne 0x40047e2	      3845	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046ca	    0x8b0500000000	            mov eax, dword [0x040046d0] 	      3846	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046d0	          0x83f830	                           cmp eax, 0x30	      3846	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046d3	     0xf8509010000	                           jne 0x40047e2	      3846	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046d9	    0x8b0500000000	            mov eax, dword [0x040046df] 	      3847	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046df	      0x3dffff0000	                         cmp eax, 0xffff	      3847	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046e4	     0xf85f8000000	                           jne 0x40047e2	      3847	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046ea	     0xfb605000000	           movzx eax, byte [0x040046f1] 	      3857	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046f1	          0x83c840	                            or eax, 0x40	      3857	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046f4	    0x880500000000	               mov byte [0x040046fa], al	      3857	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40046fa	    0x8b0500000000	            mov eax, dword [0x04004700] 	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004700	      0x3db0000000	                           cmp eax, 0xb0	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004705	            0x7411	                            je 0x4004718	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004707	    0x8b0500000000	            mov eax, dword [0x0400470d] 	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400470d	      0x3dc6000000	                           cmp eax, 0xc6	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004712	     0xf85f2020000	                           jne 0x4004a0a	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004718	     0xfb605000000	           movzx eax, byte [0x0400471f] 	      3864	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400471f	          0x83c820	                            or eax, 0x20	      3864	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004722	    0x880500000000	               mov byte [0x04004728], al	      3864	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004728	     0xfb605000000	           movzx eax, byte [0x0400472f] 	      3865	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400472f	          0x83e0bf	                     and eax, 0xffffffbf	      3865	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004732	    0x880500000000	               mov byte [0x04004738], al	      3865	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004738	     0xfb605000000	           movzx eax, byte [0x0400473f] 	      3866	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400473f	          0x83e07f	                           and eax, 0x7f	      3866	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004742	    0x880500000000	               mov byte [0x04004748], al	      3866	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004748	     0xfb605000000	           movzx eax, byte [0x0400474f] 	      3867	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400474f	          0x83c820	                            or eax, 0x20	      3867	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004752	    0x880500000000	               mov byte [0x04004758], al	      3867	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004758	     0xfb605000000	           movzx eax, byte [0x0400475f] 	      3868	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400475f	          0x83e0bf	                     and eax, 0xffffffbf	      3868	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004762	    0x880500000000	               mov byte [0x04004768], al	      3868	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004768	     0xfb605000000	           movzx eax, byte [0x0400476f] 	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400476f	          0x83e07f	                           and eax, 0x7f	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004772	    0x880500000000	               mov byte [0x04004778], al	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004778	     0xfb605000000	           movzx eax, byte [0x0400477f] 	      3870	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400477f	          0x83c880	                      or eax, 0xffffff80	      3870	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004782	    0x880500000000	               mov byte [0x04004788], al	      3870	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004788	     0xfb605000000	           movzx eax, byte [0x0400478f] 	      3871	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400478f	          0x83e0fd	                     and eax, 0xfffffffd	      3871	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004792	    0x880500000000	               mov byte [0x04004798], al	      3871	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004798	    0x8b0500000000	            mov eax, dword [0x0400479e] 	      3872	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400479e	      0x3dc6000000	                           cmp eax, 0xc6	      3872	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40047a3	     0xf8561020000	                           jne 0x4004a0a	      3872	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40047a9	    0xc70500000000	           mov dword [0x040047b3], 0xb0 	      3877	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40047b3	    0xc70500000000	         mov dword [0x040047bd], 0xffff 	      3878	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40047bd	     0xfb605000000	           movzx eax, byte [0x040047c4] 	      3879	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40047c4	          0x83c810	                            or eax, 0x10	      3879	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40047c7	    0x880500000000	               mov byte [0x040047cd], al	      3879	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40047cd	     0xfb605000000	           movzx eax, byte [0x040047d4] 	      3880	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40047d4	          0x83e0f7	                     and eax, 0xfffffff7	      3880	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40047d7	    0x880500000000	               mov byte [0x040047dd], al	      3880	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40047dd	      0xe928020000	                           jmp 0x4004a0a	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x40047e2	    0x8b0500000000	            mov eax, dword [0x040047e8] 	      3884	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40047e8	          0x83f801	                              cmp eax, 1	      3884	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40047eb	     0xf8e1a020000	                           jle 0x4004a0b	      3884	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40047f1	    0x8b0500000000	            mov eax, dword [0x040047f7] 	      3885	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40047f7	          0x83f803	                              cmp eax, 3	      3885	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40047fa	     0xf850b020000	                           jne 0x4004a0b	      3885	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004800	    0x488b15000000	            mov rdx, qword [0x04004807] 	      3886	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004807	    0x488b05000000	            mov rax, qword [0x0400480e] 	      3886	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400480e	          0x4839c2	                            cmp rdx, rax	      3886	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004811	     0xf85f4010000	                           jne 0x4004a0b	      3886	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004817	     0xfb605000000	           movzx eax, byte [0x0400481e] 	      3887	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400481e	          0x83e008	                              and eax, 8	      3887	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004821	            0x84c0	                             test al, al	      3887	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004823	     0xf85e2010000	                           jne 0x4004a0b	      3887	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004829	     0xfb605000000	           movzx eax, byte [0x04004830] 	      3888	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004830	          0x83e006	                              and eax, 6	      3888	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004833	            0x84c0	                             test al, al	      3888	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004835	            0x756b	                           jne 0x40048a2	      3888	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004837	    0x488b05000000	            mov rax, qword [0x0400483e] 	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400483e	          0x4885c0	                           test rax, rax	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004841	            0x7412	                            je 0x4004855	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004843	    0x488b05000000	            mov rax, qword [0x0400484a] 	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400484a	          0x8b4008	                mov eax, dword [rax + 8]	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400484d	            0x85c0	                           test eax, eax	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400484f	     0xf84b6010000	                            je 0x4004a0b	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004855	    0x488b05000000	            mov rax, qword [0x0400485c] 	      3890	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400485c	          0x4885c0	                           test rax, rax	      3890	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400485f	     0xf85a6010000	                           jne 0x4004a0b	      3890	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004865	      0xbf00000000	                              mov edi, 0	      3891	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	CALL_4
0x400486a	      0xe8eef1ffff	               call sym.is_evex_encoding	      3891	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	CALL_4
0x400486f	            0x85c0	                           test eax, eax	      3891	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	CALL_4
0x4004871	     0xf8494010000	                            je 0x4004a0b	      3891	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	CALL_4
0x4004877	    0x8b0500000000	            mov eax, dword [0x0400487d] 	      3892	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400487d	          0x83f803	                              cmp eax, 3	      3892	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004880	            0x7520	                           jne 0x40048a2	      3892	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004882	     0xfb605000000	           movzx eax, byte [0x04004889] 	      3893	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004889	          0x83e008	                              and eax, 8	      3893	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400488c	            0x84c0	                             test al, al	      3893	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400488e	            0x7512	                           jne 0x40048a2	      3893	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004890	     0xfb605000000	           movzx eax, byte [0x04004897] 	      3894	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004897	          0x83e008	                              and eax, 8	      3894	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400489a	            0x84c0	                             test al, al	      3894	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400489c	     0xf8469010000	                            je 0x4004a0b	      3894	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048a2	    0x8b0500000000	            mov eax, dword [0x040048a8] 	      3895	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048a8	          0x83f855	                           cmp eax, 0x55	      3895	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048ab	            0x7477	                            je 0x4004924	      3895	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048ad	    0x8b0500000000	            mov eax, dword [0x040048b3] 	      3896	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048b3	      0x3d55660000	                         cmp eax, 0x6655	      3896	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048b8	            0x746a	                            je 0x4004924	      3896	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048ba	    0x8b0500000000	            mov eax, dword [0x040048c0] 	      3897	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048c0	      0x3ddf660000	                         cmp eax, 0x66df	      3897	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048c5	            0x745d	                            je 0x4004924	      3897	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048c7	    0x8b0500000000	            mov eax, dword [0x040048cd] 	      3898	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048cd	          0x83f857	                           cmp eax, 0x57	      3898	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048d0	            0x7452	                            je 0x4004924	      3898	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048d2	    0x8b0500000000	            mov eax, dword [0x040048d8] 	      3899	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048d8	      0x3d57660000	                         cmp eax, 0x6657	      3899	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048dd	            0x7445	                            je 0x4004924	      3899	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048df	    0x8b0500000000	            mov eax, dword [0x040048e5] 	      3900	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048e5	      0x3def660000	                         cmp eax, 0x66ef	      3900	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048ea	            0x7438	                            je 0x4004924	      3900	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048ec	    0x8b0500000000	            mov eax, dword [0x040048f2] 	      3901	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048f2	      0x3df8660000	                         cmp eax, 0x66f8	      3901	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048f7	            0x742b	                            je 0x4004924	      3901	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048f9	    0x8b0500000000	            mov eax, dword [0x040048ff] 	      3902	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40048ff	      0x3df9660000	                         cmp eax, 0x66f9	      3902	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004904	            0x741e	                            je 0x4004924	      3902	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004906	    0x8b0500000000	            mov eax, dword [0x0400490c] 	      3903	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400490c	      0x3dfa660000	                         cmp eax, 0x66fa	      3903	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004911	            0x7411	                            je 0x4004924	      3903	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004913	    0x8b0500000000	            mov eax, dword [0x04004919] 	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004919	      0x3dfb660000	                         cmp eax, 0x66fb	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400491e	     0xf85e7000000	                           jne 0x4004a0b	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004924	    0x8b0500000000	            mov eax, dword [0x0400492a] 	      3905	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400492a	      0x3dffff0000	                         cmp eax, 0xffff	      3905	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400492f	     0xf85d6000000	                           jne 0x4004a0b	      3905	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4004935	      0xbf00000000	                              mov edi, 0	      3936	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	CALL_5
0x400493a	      0xe81ef1ffff	               call sym.is_evex_encoding	      3936	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	CALL_5
0x400493f	            0x85c0	                           test eax, eax	      3936	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	CALL_5
0x4004941	            0x7458	                            je 0x400499b	      3936	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	CALL_5
0x4004943	    0x8b0500000000	            mov eax, dword [0x04004949] 	      3938	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x4004949	          0x83f803	                              cmp eax, 3	      3938	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400494c	            0x7515	                           jne 0x4004963	      3938	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400494e	     0xfb605000000	           movzx eax, byte [0x04004955] 	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x4004955	          0x83e0f8	                     and eax, 0xfffffff8	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x4004958	          0x83c802	                               or eax, 2	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400495b	    0x880500000000	               mov byte [0x04004961], al	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x4004961	            0xeb4b	                           jmp 0x40049ae	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x4004963	     0xfb605000000	           movzx eax, byte [0x0400496a] 	      3942	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x400496a	          0x83e0f9	                     and eax, 0xfffffff9	      3942	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x400496d	          0x83c802	                               or eax, 2	      3942	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4004970	    0x880500000000	               mov byte [0x04004976], al	      3942	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4004976	     0xfb605000000	           movzx eax, byte [0x0400497d] 	      3943	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x400497d	          0x83e09f	                     and eax, 0xffffff9f	      3943	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4004980	          0x83c820	                            or eax, 0x20	      3943	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4004983	    0x880500000000	               mov byte [0x04004989], al	      3943	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4004989	     0xfb605000000	           movzx eax, byte [0x04004990] 	      3944	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4004990	          0x83e0f8	                     and eax, 0xfffffff8	      3944	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4004993	    0x880500000000	               mov byte [0x04004999], al	      3944	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4004999	            0xeb13	                           jmp 0x40049ae	      3944	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x400499b	     0xfb605000000	           movzx eax, byte [0x040049a2] 	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x40049a2	          0x83e0f9	                     and eax, 0xfffffff9	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x40049a5	          0x83c802	                               or eax, 2	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x40049a8	    0x880500000000	               mov byte [0x040049ae], al	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x40049ae	     0xfb605000000	           movzx eax, byte [0x040049b5] 	      3950	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12
0x40049b5	          0x83e006	                              and eax, 6	      3950	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12
0x40049b8	            0x84c0	                             test al, al	      3950	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12
0x40049ba	            0x744f	                            je 0x4004a0b	      3950	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12
0x40049bc	    0xc745f8000000	                  mov dword [rbp - 8], 0	      3951	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049c3	            0xeb3a	                           jmp 0x40049ff	      3951	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049c5	          0x8b45f8	                mov eax, dword [rbp - 8]	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049c8	            0x4898	                                    cdqe	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049ca	        0x4883c00e	                            add rax, 0xe	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049ce	     0xfb614c50000	                 movzx edx, byte [rax*8]	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049d6	          0x83ca08	                               or edx, 8	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049d9	    0x8814c5000000	                    mov byte [rax*8], dl	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049e0	          0x8b45f8	                mov eax, dword [rbp - 8]	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049e3	            0x4898	                                    cdqe	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049e5	        0x4883c00e	                            add rax, 0xe	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049e9	     0xfb614c50000	                 movzx edx, byte [rax*8]	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049f1	          0x83e2ef	                     and edx, 0xffffffef	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049f4	    0x8814c5000000	                    mov byte [rax*8], dl	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049fb	        0x8345f801	                  add dword [rbp - 8], 1	      3951	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40049ff	        0x837df802	                  cmp dword [rbp - 8], 2	      3951	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x4004a03	            0x7ec0	                           jle 0x40049c5	      3951	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x4004a05	            0xeb04	                           jmp 0x4004a0b	      3957	tc-i386.c	FUNCTION_67
0x4004a07	              0x90	                                     nop	      3797	tc-i386.c	FUNCTION_67	IF_1
0x4004a08	            0xeb01	                           jmp 0x4004a0b	      3797	tc-i386.c	FUNCTION_67	IF_1
0x4004a0a	              0x90	                                     nop	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4004a0b	              0x90	                                     nop	      3957	tc-i386.c	FUNCTION_67
0x4004a0c	              0xc9	                                   leave	      3957	tc-i386.c	FUNCTION_67
0x4004a0d	              0xc3	                                     ret	      3957	tc-i386.c	FUNCTION_67
tc_gen_reloc	CALL,26:FOR,0:WHILE,0:functions,0:SWITCH,5:IF,13:ELSE,6:DO,0	404
0x4013b2d	              0x55	                                push rbp	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4013b2e	          0x4889e5	                            mov rbp, rsp	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4013b31	              0x53	                                push rbx	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4013b32	        0x4883ec38	                           sub rsp, 0x38	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4013b36	        0x48897dc8	             mov qword [rbp - 0x38], rdi	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4013b3a	        0x488975c0	             mov qword [rbp - 0x40], rsi	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4013b3e	    0x64488b042528	                mov rax, qword fs:[0x28]	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4013b47	        0x488945e8	             mov qword [rbp - 0x18], rax	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4013b4b	            0x31c0	                            xor eax, eax	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4013b4d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b51	          0x8b4050	            mov eax, dword [rax + 0x50] 	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b54	      0x3d79010000	                          cmp eax, 0x179	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b59	            0x7766	                            ja 0x4013bc1	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b5b	      0x3d78010000	                          cmp eax, 0x178	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b60	     0xf839f010000	                           jae 0x4013d05	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b66	      0x3d65010000	                          cmp eax, 0x165	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b6b	            0x772b	                            ja 0x4013b98	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b6d	      0x3d64010000	                          cmp eax, 0x164	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b72	     0xf838d010000	                           jae 0x4013d05	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b78	          0x83f824	                           cmp eax, 0x24	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b7b	     0xf82b0010000	                            jb 0x4013d31	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b81	          0x83f825	                           cmp eax, 0x25	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b84	     0xf86a7000000	                           jbe 0x4013c31	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b8a	          0x83f83e	                           cmp eax, 0x3e	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b8d	     0xf8472010000	                            je 0x4013d05	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b93	      0xe999010000	                           jmp 0x4013d31	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b98	      0x3d6a010000	                          cmp eax, 0x16a	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b9d	     0xf828e010000	                            jb 0x4013d31	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013ba3	      0x3d6b010000	                          cmp eax, 0x16b	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013ba8	     0xf8657010000	                           jbe 0x4013d05	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bae	      0x2d6d010000	                          sub eax, 0x16d	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bb3	          0x83f807	                              cmp eax, 7	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bb6	     0xf8775010000	                            ja 0x4013d31	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bbc	      0xe944010000	                           jmp 0x4013d05	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bc1	      0x3d95010000	                          cmp eax, 0x195	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bc6	            0x7740	                            ja 0x4013c08	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bc8	      0x3d86010000	                          cmp eax, 0x186	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bcd	     0xf8332010000	                           jae 0x4013d05	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bd3	      0x3d83010000	                          cmp eax, 0x183	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bd8	     0xf8427010000	                            je 0x4013d05	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bde	      0x3d83010000	                          cmp eax, 0x183	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013be3	            0x7713	                            ja 0x4013bf8	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013be5	      0x2d7c010000	                          sub eax, 0x17c	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bea	          0x83f802	                              cmp eax, 2	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bed	     0xf873e010000	                            ja 0x4013d31	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bf3	      0xe90d010000	                           jmp 0x4013d05	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bf8	      0x3d84010000	                          cmp eax, 0x184	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013bfd	     0xf8411010000	                            je 0x4013d14	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013c03	      0xe929010000	                           jmp 0x4013d31	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013c08	      0x3d9a010000	                          cmp eax, 0x19a	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013c0d	     0xf821e010000	                            jb 0x4013d31	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013c13	      0x3d9b010000	                          cmp eax, 0x19b	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013c18	     0xf86e7000000	                           jbe 0x4013d05	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013c1e	      0x2da3050000	                          sub eax, 0x5a3	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013c23	          0x83f801	                              cmp eax, 1	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013c26	     0xf8705010000	                            ja 0x4013d31	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013c2c	      0xe9d4000000	                           jmp 0x4013d05	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013c31	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c35	        0x488b4018	            mov rax, qword [rax + 0x18] 	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c39	          0x4889c7	                            mov rdi, rax	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c3c	      0xe800000000	                          call 0x4013c41	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c41	            0x85c0	                           test eax, eax	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c43	     0xf84bc000000	                            je 0x4013d05	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c49	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c4d	        0x488b4018	            mov rax, qword [rax + 0x18] 	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c51	          0x4889c7	                            mov rdi, rax	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c54	      0xe800000000	                          call 0x4013c59	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c59	            0x85c0	                           test eax, eax	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c5b	     0xf85a4000000	                           jne 0x4013d05	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c61	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c65	        0x488b4018	            mov rax, qword [rax + 0x18] 	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c69	          0x4889c7	                            mov rdi, rax	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c6c	      0xe800000000	                          call 0x4013c71	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c71	        0x488b5038	            mov rdx, qword [rax + 0x38] 	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c75	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c79	        0x488b4028	            mov rax, qword [rax + 0x28] 	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c7d	          0x4801d0	                            add rax, rdx	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c80	        0x488945d8	             mov qword [rbp - 0x28], rax	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c84	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11305	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c88	          0x8b4050	            mov eax, dword [rax + 0x50] 	     11305	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c8b	          0x83f824	                           cmp eax, 0x24	     11305	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c8e	            0x753b	                           jne 0x4013ccb	     11305	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c94	          0x4889c7	                            mov rdi, rax	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c97	      0xe89bdafeff	          call sym.fits_in_unsigned_long	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c9c	            0x85c0	                           test eax, eax	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013c9e	            0x752b	                           jne 0x4013ccb	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013ca0	      0xbf00000000	                              mov edi, 0	     11308	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013ca5	      0xe800000000	                          call 0x4013caa	     11308	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013caa	          0x4889c2	                            mov rdx, rax	     11308	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cad	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cb1	          0x8b4868	            mov ecx, dword [rax + 0x68] 	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cb4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cb8	        0x488b4060	            mov rax, qword [rax + 0x60] 	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cbc	            0x89ce	                            mov esi, ecx	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cbe	          0x4889c7	                            mov rdi, rax	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cc1	      0xb800000000	                              mov eax, 0	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cc6	      0xe800000000	                          call 0x4013ccb	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013ccb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11309	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013ccf	    0x48c740180000	               mov qword [rax + 0x18], 0	     11309	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cd7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11310	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cdb	    0x48c740200000	               mov qword [rax + 0x20], 0	     11310	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013ce3	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013ce7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013ceb	      0xba00000000	                              mov edx, 0	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cf0	          0x4889ce	                            mov rsi, rcx	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cf3	          0x4889c7	                            mov rdi, rax	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cf6	      0xe800000000	                          call 0x4013cfb	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013cfb	      0xb800000000	                              mov eax, 0	     11312	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013d00	      0xe928040000	                           jmp 0x401412d	     11312	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013d05	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11359	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2	CALL_8
0x4013d09	          0x8b4050	            mov eax, dword [rax + 0x50] 	     11359	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2	CALL_8
0x4013d0c	          0x8945d4	             mov dword [rbp - 0x2c], eax	     11359	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2	CALL_8
0x4013d0f	      0xe951010000	                           jmp 0x4013e65	     11360	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2	CALL_9
0x4013d14	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11362	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d18	           0xfb600	                   movzx eax, byte [rax]	     11362	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d1b	          0x83e001	                              and eax, 1	     11362	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d1e	            0x84c0	                             test al, al	     11362	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d20	            0x750f	                           jne 0x4013d31	     11362	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d22	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11365	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d26	          0x8b4050	            mov eax, dword [rax + 0x50] 	     11365	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d29	          0x8945d4	             mov dword [rbp - 0x2c], eax	     11365	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d2c	      0xe934010000	                           jmp 0x4013e65	     11366	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d31	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11370	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d35	           0xfb600	                   movzx eax, byte [rax]	     11370	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d38	          0x83e001	                              and eax, 1	     11370	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d3b	            0x84c0	                             test al, al	     11370	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d3d	     0xf8499000000	                            je 0x4013ddc	     11370	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4013d43	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d47	         0xfb64002	               movzx eax, byte [rax + 2]	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d4b	           0xfb6c0	                           movzx eax, al	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d4e	          0x83f802	                              cmp eax, 2	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d51	            0x7464	                            je 0x4013db7	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d53	          0x83f802	                              cmp eax, 2	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d56	            0x7f07	                            jg 0x4013d5f	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d58	          0x83f801	                              cmp eax, 1	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d5b	            0x744e	                            je 0x4013dab	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d5d	            0xeb0a	                           jmp 0x4013d69	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d5f	          0x83f804	                              cmp eax, 4	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d62	            0x745f	                            je 0x4013dc3	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d64	          0x83f808	                              cmp eax, 8	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d67	            0x7466	                            je 0x4013dcf	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4013d69	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11377	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3	CALL_10
0x4013d6d	         0xfb64002	               movzx eax, byte [rax + 2]	     11377	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3	CALL_10
0x4013d71	           0xfb6d8	                           movzx ebx, al	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d74	      0xbf00000000	                              mov edi, 0	     11376	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d79	      0xe800000000	                          call 0x4013d7e	     11376	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d7e	          0x4889c2	                            mov rdx, rax	     11376	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d81	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d85	          0x8b7068	            mov esi, dword [rax + 0x68] 	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d88	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d8c	        0x488b4060	            mov rax, qword [rax + 0x60] 	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d90	            0x89d9	                            mov ecx, ebx	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d92	          0x4889c7	                            mov rdi, rax	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d95	      0xb800000000	                              mov eax, 0	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d9a	      0xe800000000	                          call 0x4013d9f	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013d9f	    0xc745d4090000	               mov dword [rbp - 0x2c], 9	     11378	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3	CALL_11
0x4013da6	      0xe9b9000000	                           jmp 0x4013e64	     11379	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013dab	    0xc745d40d0000	            mov dword [rbp - 0x2c], 0xd 	     11380	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013db2	      0xe9ad000000	                           jmp 0x4013e64	     11380	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013db7	    0xc745d40b0000	            mov dword [rbp - 0x2c], 0xb 	     11381	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013dbe	      0xe9a1000000	                           jmp 0x4013e64	     11381	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013dc3	    0xc745d4090000	               mov dword [rbp - 0x2c], 9	     11382	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013dca	      0xe995000000	                           jmp 0x4013e64	     11382	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013dcf	    0xc745d4080000	               mov dword [rbp - 0x2c], 8	     11384	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013dd6	              0x90	                                     nop	     11384	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013dd7	      0xe988000000	                           jmp 0x4013e64	     11384	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4013ddc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013de0	         0xfb64002	               movzx eax, byte [rax + 2]	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013de4	           0xfb6c0	                           movzx eax, al	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013de7	          0x83f802	                              cmp eax, 2	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013dea	            0x745e	                            je 0x4013e4a	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013dec	          0x83f802	                              cmp eax, 2	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013def	            0x7f07	                            jg 0x4013df8	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013df1	          0x83f801	                              cmp eax, 1	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013df4	            0x744b	                            je 0x4013e41	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013df6	            0xeb0a	                           jmp 0x4013e02	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013df8	          0x83f804	                              cmp eax, 4	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013dfb	            0x7456	                            je 0x4013e53	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013dfd	          0x83f808	                              cmp eax, 8	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013e00	            0x745a	                            je 0x4013e5c	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013e02	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11395	tc-i386.c	FUNCTION_134	IF_5
0x4013e06	         0xfb64002	               movzx eax, byte [rax + 2]	     11395	tc-i386.c	FUNCTION_134	IF_5
0x4013e0a	           0xfb6d8	                           movzx ebx, al	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4013e0d	      0xbf00000000	                              mov edi, 0	     11394	tc-i386.c	FUNCTION_134	IF_5
0x4013e12	      0xe800000000	                          call 0x4013e17	     11394	tc-i386.c	FUNCTION_134	IF_5
0x4013e17	          0x4889c2	                            mov rdx, rax	     11394	tc-i386.c	FUNCTION_134	IF_5
0x4013e1a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4013e1e	          0x8b7068	            mov esi, dword [rax + 0x68] 	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4013e21	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4013e25	        0x488b4060	            mov rax, qword [rax + 0x60] 	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4013e29	            0x89d9	                            mov ecx, ebx	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4013e2b	          0x4889c7	                            mov rdi, rax	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4013e2e	      0xb800000000	                              mov eax, 0	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4013e33	      0xe800000000	                          call 0x4013e38	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4013e38	    0xc745d4020000	               mov dword [rbp - 0x2c], 2	     11396	tc-i386.c	FUNCTION_134	IF_5
0x4013e3f	            0xeb23	                           jmp 0x4013e64	     11397	tc-i386.c	FUNCTION_134	IF_5
0x4013e41	    0xc745d4070000	               mov dword [rbp - 0x2c], 7	     11398	tc-i386.c	FUNCTION_134	IF_5
0x4013e48	            0xeb1a	                           jmp 0x4013e64	     11398	tc-i386.c	FUNCTION_134	IF_5
0x4013e4a	    0xc745d4050000	               mov dword [rbp - 0x2c], 5	     11399	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4013e51	            0xeb11	                           jmp 0x4013e64	     11399	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4013e53	    0xc745d4020000	               mov dword [rbp - 0x2c], 2	     11400	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4013e5a	            0xeb08	                           jmp 0x4013e64	     11400	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4013e5c	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	     11402	tc-i386.c	FUNCTION_134	IF_5	ELSE_2
0x4013e63	              0x90	                                     nop	     11402	tc-i386.c	FUNCTION_134	IF_5	ELSE_2
0x4013e64	              0x90	                                     nop	     11406	tc-i386.c	FUNCTION_134	ELSE_2	IF_7
0x4013e65	        0x837dd402	               cmp dword [rbp - 0x2c], 2	     11409	tc-i386.c	FUNCTION_134	ELSE_2	IF_7
0x4013e69	            0x740f	                            je 0x4013e7a	     11409	tc-i386.c	FUNCTION_134	ELSE_2	IF_7
0x4013e6b	        0x837dd409	               cmp dword [rbp - 0x2c], 9	     11410	tc-i386.c	FUNCTION_134
0x4013e6f	            0x7409	                            je 0x4013e7a	     11410	tc-i386.c	FUNCTION_134
0x4013e71	    0x817dd4840100	          cmp dword [rbp - 0x2c], 0x184 	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4013e78	            0x753a	                           jne 0x4013eb4	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4013e7a	    0x488b05000000	            mov rax, qword [0x04013e81] 	     11412	tc-i386.c	FUNCTION_134	CALL_13
0x4013e81	          0x4885c0	                           test rax, rax	     11412	tc-i386.c	FUNCTION_134	CALL_13
0x4013e84	            0x742e	                            je 0x4013eb4	     11412	tc-i386.c	FUNCTION_134	CALL_13
0x4013e86	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11413	tc-i386.c	FUNCTION_134	CALL_14
0x4013e8a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	     11413	tc-i386.c	FUNCTION_134	CALL_14
0x4013e8e	    0x488b05000000	            mov rax, qword [0x04013e95] 	     11413	tc-i386.c	FUNCTION_134	CALL_14
0x4013e95	          0x4839c2	                            cmp rdx, rax	     11413	tc-i386.c	FUNCTION_134	CALL_14
0x4013e98	            0x751a	                           jne 0x4013eb4	     11413	tc-i386.c	FUNCTION_134	CALL_14
0x4013e9a	    0x8b0500000000	            mov eax, dword [0x04013ea0] 	     11415	tc-i386.c	FUNCTION_134
0x4013ea0	            0x85c0	                           test eax, eax	     11415	tc-i386.c	FUNCTION_134
0x4013ea2	            0x7509	                           jne 0x4013ead	     11415	tc-i386.c	FUNCTION_134
0x4013ea4	    0xc745d46b0100	          mov dword [rbp - 0x2c], 0x16b 	     11416	tc-i386.c	FUNCTION_134
0x4013eab	            0xeb07	                           jmp 0x4013eb4	     11416	tc-i386.c	FUNCTION_134
0x4013ead	    0xc745d48e0100	          mov dword [rbp - 0x2c], 0x18e 	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4013eb4	        0x837dd401	               cmp dword [rbp - 0x2c], 1	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4013eb8	            0x7406	                            je 0x4013ec0	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4013eba	        0x837dd408	               cmp dword [rbp - 0x2c], 8	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4013ebe	            0x7527	                           jne 0x4013ee7	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4013ec0	    0x488b05000000	            mov rax, qword [0x04013ec7] 	     11421	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4013ec7	          0x4885c0	                           test rax, rax	     11421	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4013eca	            0x741b	                            je 0x4013ee7	     11421	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4013ecc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11422	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4013ed0	        0x488b5018	            mov rdx, qword [rax + 0x18] 	     11422	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4013ed4	    0x488b05000000	            mov rax, qword [0x04013edb] 	     11422	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4013edb	          0x4839c2	                            cmp rdx, rax	     11422	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4013ede	            0x7507	                           jne 0x4013ee7	     11422	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4013ee0	    0xc745d4910100	          mov dword [rbp - 0x2c], 0x191 	     11424	tc-i386.c	FUNCTION_134	IF_8	ELSE_3	IF_10	CALL_15
0x4013ee7	      0xbf20000000	                           mov edi, 0x20	     11427	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4013eec	      0xe800000000	                          call 0x4013ef1	     11427	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4013ef1	        0x488945e0	             mov qword [rbp - 0x20], rax	     11427	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4013ef5	      0xbf08000000	                              mov edi, 8	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4013efa	      0xe800000000	                          call 0x4013eff	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4013eff	          0x4889c2	                            mov rdx, rax	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4013f02	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4013f06	          0x488910	                    mov qword [rax], rdx	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4013f09	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11429	tc-i386.c	FUNCTION_134	IF_8
0x4013f0d	          0x488b18	                    mov rbx, qword [rax]	     11429	tc-i386.c	FUNCTION_134	IF_8
0x4013f10	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11429	tc-i386.c	FUNCTION_134	IF_8
0x4013f14	        0x488b4018	            mov rax, qword [rax + 0x18] 	     11429	tc-i386.c	FUNCTION_134	IF_8
0x4013f18	          0x4889c7	                            mov rdi, rax	     11429	tc-i386.c	FUNCTION_134	IF_8
0x4013f1b	      0xe800000000	                          call 0x4013f20	     11429	tc-i386.c	FUNCTION_134	IF_8
0x4013f20	          0x488903	                    mov qword [rbx], rax	     11429	tc-i386.c	FUNCTION_134	IF_8
0x4013f23	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4013f27	        0x488b4008	                mov rax, qword [rax + 8]	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4013f2b	          0x488b10	                    mov rdx, qword [rax]	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4013f2e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4013f32	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4013f36	          0x4801c2	                            add rdx, rax	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4013f39	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4013f3d	        0x48895008	                mov qword [rax + 8], rdx	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4013f41	    0x8b0500000000	            mov eax, dword [0x04013f47] 	     11433	tc-i386.c	FUNCTION_134	ELSE_5	IF_11
0x4013f47	            0x85c0	                           test eax, eax	     11433	tc-i386.c	FUNCTION_134	ELSE_5	IF_11
0x4013f49	            0x752f	                           jne 0x4013f7a	     11433	tc-i386.c	FUNCTION_134	ELSE_5	IF_11
0x4013f4b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11437	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f4f	          0x8b4050	            mov eax, dword [rax + 0x50] 	     11437	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f52	      0x3da4050000	                          cmp eax, 0x5a4	     11437	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f57	            0x7510	                           jne 0x4013f69	     11437	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f59	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11438	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f5d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	     11438	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f61	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11438	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f65	        0x48895008	                mov qword [rax + 8], rdx	     11438	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11444	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f6d	    0x48c740100000	               mov qword [rax + 0x10], 0	     11444	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f75	      0xe90a010000	                           jmp 0x4014084	     11444	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f7a	    0x8b0500000000	            mov eax, dword [0x04013f80] 	     11449	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f80	            0x85c0	                           test eax, eax	     11449	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f82	            0x746c	                            je 0x4013ff0	     11449	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f84	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f87	      0x3d87010000	                          cmp eax, 0x187	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f8c	            0x770e	                            ja 0x4013f9c	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f8e	      0x3d86010000	                          cmp eax, 0x186	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f93	            0x731f	                           jae 0x4013fb4	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f95	          0x83f808	                              cmp eax, 8	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f98	            0x741a	                            je 0x4013fb4	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013f9a	            0xeb53	                           jmp 0x4013fef	     11466	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013f9c	      0x3d8d010000	                          cmp eax, 0x18d	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013fa1	            0x7411	                            je 0x4013fb4	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013fa3	      0x3d8d010000	                          cmp eax, 0x18d	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013fa8	            0x7245	                            jb 0x4013fef	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013faa	      0x2d8f010000	                          sub eax, 0x18f	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013faf	          0x83f804	                              cmp eax, 4	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013fb2	            0x773b	                            ja 0x4013fef	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4013fb4	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fb7	            0x89c7	                            mov edi, eax	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fb9	      0xe800000000	                          call 0x4013fbe	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fbe	          0x4889c3	                            mov rbx, rax	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fc1	      0xbf00000000	                              mov edi, 0	     11462	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fc6	      0xe800000000	                          call 0x4013fcb	     11462	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fcb	          0x4889c2	                            mov rdx, rax	     11462	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fd2	          0x8b7068	            mov esi, dword [rax + 0x68] 	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fd5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fd9	        0x488b4060	            mov rax, qword [rax + 0x60] 	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fdd	          0x4889d9	                            mov rcx, rbx	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fe0	          0x4889c7	                            mov rdi, rax	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fe3	      0xb800000000	                              mov eax, 0	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fe8	      0xe800000000	                          call 0x4013fed	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fed	            0xeb01	                           jmp 0x4013ff0	     11464	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013fef	              0x90	                                     nop	     11466	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013ff0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11469	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013ff4	           0xfb600	                   movzx eax, byte [rax]	     11469	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013ff7	          0x83e001	                              and eax, 1	     11469	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013ffa	            0x84c0	                             test al, al	     11469	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013ffc	            0x7512	                           jne 0x4014010	     11469	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4013ffe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4014002	        0x488b5028	            mov rdx, qword [rax + 0x28] 	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4014006	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x401400a	        0x48895010	             mov qword [rax + 0x10], rdx	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x401400e	            0xeb74	                           jmp 0x4014084	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4014010	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4014013	      0x2d7d010000	                          sub eax, 0x17d	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4014018	          0x83f81e	                           cmp eax, 0x1e	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x401401b	            0x772c	                            ja 0x4014049	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x401401d	            0x89c0	                            mov eax, eax	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x401401f	    0x488b04c50000	                  mov rax, qword [rax*8]	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4014027	            0xffe0	                                 jmp rax	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4014029	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x401402d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4014031	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4014035	         0xfb64002	               movzx eax, byte [rax + 2]	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4014039	           0xfb6c0	                           movzx eax, al	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x401403c	          0x4829c2	                            sub rdx, rax	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x401403f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4014043	        0x48895010	             mov qword [rax + 0x10], rdx	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4014047	            0xeb3b	                           jmp 0x4014084	     11485	tc-i386.c	FUNCTION_134	IF_13
0x4014049	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11487	tc-i386.c	FUNCTION_134	IF_13	CALL_26
0x401404d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	     11487	tc-i386.c	FUNCTION_134	IF_13	CALL_26
0x4014051	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11488	tc-i386.c	FUNCTION_134	IF_13
0x4014055	         0xfb64002	               movzx eax, byte [rax + 2]	     11488	tc-i386.c	FUNCTION_134	IF_13
0x4014059	           0xfb6c0	                           movzx eax, al	     11488	tc-i386.c	FUNCTION_134	IF_13
0x401405c	          0x4829c2	                            sub rdx, rax	     11488	tc-i386.c	FUNCTION_134	IF_13
0x401405f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11489	tc-i386.c	FUNCTION_134
0x4014063	        0x488b4058	            mov rax, qword [rax + 0x58] 	     11489	tc-i386.c	FUNCTION_134
0x4014067	        0x488d1c02	                    lea rbx, [rdx + rax]	     11489	tc-i386.c	FUNCTION_134
0x401406b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11490	tc-i386.c	FUNCTION_134
0x401406f	          0x4889c7	                            mov rdi, rax	     11490	tc-i386.c	FUNCTION_134
0x4014072	      0xe800000000	                          call 0x4014077	     11490	tc-i386.c	FUNCTION_134
0x4014077	        0x488d1403	                    lea rdx, [rbx + rax]	     11490	tc-i386.c	FUNCTION_134
0x401407b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11487	tc-i386.c	FUNCTION_134	IF_13	CALL_26
0x401407f	        0x48895010	             mov qword [rax + 0x10], rdx	     11487	tc-i386.c	FUNCTION_134	IF_13	CALL_26
0x4014083	              0x90	                                     nop	     11491	tc-i386.c	FUNCTION_134
0x4014084	    0x488b05000000	            mov rax, qword [0x0401408b] 	     11495	tc-i386.c	
0x401408b	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	     11495	tc-i386.c	
0x401408e	            0x89d6	                            mov esi, edx	     11495	tc-i386.c	
0x4014090	          0x4889c7	                            mov rdi, rax	     11495	tc-i386.c	
0x4014093	      0xe800000000	                          call 0x4014098	     11495	tc-i386.c	
0x4014098	          0x4889c2	                            mov rdx, rax	     11495	tc-i386.c	
0x401409b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11495	tc-i386.c	
0x401409f	        0x48895018	             mov qword [rax + 0x18], rdx	     11495	tc-i386.c	
0x40140a3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11496	tc-i386.c	
0x40140a7	        0x488b4018	            mov rax, qword [rax + 0x18] 	     11496	tc-i386.c	
0x40140ab	          0x4885c0	                           test rax, rax	     11496	tc-i386.c	
0x40140ae	            0x7579	                           jne 0x4014129	     11496	tc-i386.c	
0x40140b0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11498	tc-i386.c	FUNCTION_135
0x40140b3	            0x89c7	                            mov edi, eax	     11498	tc-i386.c	FUNCTION_135
0x40140b5	      0xe800000000	                          call 0x40140ba	     11498	tc-i386.c	FUNCTION_135
0x40140ba	          0x4889c3	                            mov rbx, rax	     11498	tc-i386.c	FUNCTION_135
0x40140bd	      0xbf00000000	                              mov edi, 0	     11499	tc-i386.c	FUNCTION_135
0x40140c2	      0xe800000000	                          call 0x40140c7	     11499	tc-i386.c	FUNCTION_135
0x40140c7	          0x4889c2	                            mov rdx, rax	     11499	tc-i386.c	FUNCTION_135
0x40140ca	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11498	tc-i386.c	FUNCTION_135
0x40140ce	          0x8b7068	            mov esi, dword [rax + 0x68] 	     11498	tc-i386.c	FUNCTION_135
0x40140d1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11498	tc-i386.c	FUNCTION_135
0x40140d5	        0x488b4060	            mov rax, qword [rax + 0x60] 	     11498	tc-i386.c	FUNCTION_135
0x40140d9	          0x4889d9	                            mov rcx, rbx	     11498	tc-i386.c	FUNCTION_135
0x40140dc	          0x4889c7	                            mov rdi, rax	     11498	tc-i386.c	FUNCTION_135
0x40140df	      0xb800000000	                              mov eax, 0	     11498	tc-i386.c	FUNCTION_135
0x40140e4	      0xe800000000	                          call 0x40140e9	     11498	tc-i386.c	FUNCTION_135
0x40140e9	    0x488b05000000	            mov rax, qword [0x040140f0] 	     11502	tc-i386.c	FUNCTION_135
0x40140f0	      0xbe02000000	                              mov esi, 2	     11502	tc-i386.c	FUNCTION_135
0x40140f5	          0x4889c7	                            mov rdi, rax	     11502	tc-i386.c	FUNCTION_135
0x40140f8	      0xe800000000	                          call 0x40140fd	     11502	tc-i386.c	FUNCTION_135
0x40140fd	          0x4889c2	                            mov rdx, rax	     11502	tc-i386.c	FUNCTION_135
0x4014100	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11502	tc-i386.c	FUNCTION_135
0x4014104	        0x48895018	             mov qword [rax + 0x18], rdx	     11502	tc-i386.c	FUNCTION_135
0x4014108	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11503	tc-i386.c	FUNCTION_135
0x401410c	        0x488b4018	            mov rax, qword [rax + 0x18] 	     11503	tc-i386.c	FUNCTION_135
0x4014110	          0x4885c0	                           test rax, rax	     11503	tc-i386.c	FUNCTION_135
0x4014113	            0x7514	                           jne 0x4014129	     11503	tc-i386.c	FUNCTION_135
0x4014115	      0xba00000000	                              mov edx, 0	     11503	tc-i386.c	FUNCTION_135
0x401411a	      0xbeef2c0000	                         mov esi, 0x2cef	     11503	tc-i386.c	FUNCTION_135
0x401411f	      0xbf00000000	                              mov edi, 0	     11503	tc-i386.c	FUNCTION_135
0x4014124	      0xe800000000	                          call 0x4014129	     11503	tc-i386.c	FUNCTION_135
0x4014129	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11506	tc-i386.c	FUNCTION_135	CALL_1
0x401412d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	     11507	tc-i386.c	FUNCTION_135
0x4014131	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     11507	tc-i386.c	FUNCTION_135
0x401413a	            0x7405	                            je 0x4014141	     11507	tc-i386.c	FUNCTION_135
0x401413c	      0xe800000000	                          call 0x4014141	     11507	tc-i386.c	FUNCTION_135
0x4014141	        0x4883c438	                           add rsp, 0x38	     11507	tc-i386.c	FUNCTION_135
0x4014145	              0x5b	                                 pop rbx	     11507	tc-i386.c	FUNCTION_135
0x4014146	              0x5d	                                 pop rbp	     11507	tc-i386.c	FUNCTION_135
0x4014147	              0xc3	                                     ret	     11507	tc-i386.c	FUNCTION_135
i386_att_operand	CALL,44:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,53:ELSE,10:DO,1	679
0x401027f	              0x55	                                push rbp	      9341	tc-i386.c	FUNCTION_112
0x4010280	          0x4889e5	                            mov rbp, rsp	      9341	tc-i386.c	FUNCTION_112
0x4010283	            0x4154	                                push r12	      9341	tc-i386.c	FUNCTION_112
0x4010285	              0x53	                                push rbx	      9341	tc-i386.c	FUNCTION_112
0x4010286	        0x4883ec70	                           sub rsp, 0x70	      9341	tc-i386.c	FUNCTION_112
0x401028a	        0x48897d88	             mov qword [rbp - 0x78], rdi	      9341	tc-i386.c	FUNCTION_112
0x401028e	    0x64488b042528	                mov rax, qword fs:[0x28]	      9341	tc-i386.c	FUNCTION_112
0x4010297	        0x488945e8	             mov qword [rbp - 0x18], rax	      9341	tc-i386.c	FUNCTION_112
0x401029b	            0x31c0	                            xor eax, eax	      9341	tc-i386.c	FUNCTION_112
0x401029d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9344	tc-i386.c	FUNCTION_112
0x40102a1	        0x488945a0	             mov qword [rbp - 0x60], rax	      9344	tc-i386.c	FUNCTION_112
0x40102a5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9346	tc-i386.c	FUNCTION_112	IF_1
0x40102a9	           0xfb600	                   movzx eax, byte [rax]	      9346	tc-i386.c	FUNCTION_112	IF_1
0x40102ac	            0x3c20	                            cmp al, 0x20	      9346	tc-i386.c	FUNCTION_112	IF_1
0x40102ae	            0x7505	                           jne 0x40102b5	      9346	tc-i386.c	FUNCTION_112	IF_1
0x40102b0	      0x488345a001	               add qword [rbp - 0x60], 1	      9347	tc-i386.c	FUNCTION_112	IF_1
0x40102b5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9351	tc-i386.c	FUNCTION_112	IF_2
0x40102b9	           0xfb600	                   movzx eax, byte [rax]	      9351	tc-i386.c	FUNCTION_112	IF_2
0x40102bc	            0x3c2a	                            cmp al, 0x2a	      9351	tc-i386.c	FUNCTION_112	IF_2
0x40102be	            0x7533	                           jne 0x40102f3	      9351	tc-i386.c	FUNCTION_112	IF_2
0x40102c0	      0x488345a001	               add qword [rbp - 0x60], 1	      9353	tc-i386.c	FUNCTION_112	IF_2
0x40102c5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9354	tc-i386.c	FUNCTION_112	IF_2	IF_3
0x40102c9	           0xfb600	                   movzx eax, byte [rax]	      9354	tc-i386.c	FUNCTION_112	IF_2	IF_3
0x40102cc	            0x3c20	                            cmp al, 0x20	      9354	tc-i386.c	FUNCTION_112	IF_2	IF_3
0x40102ce	            0x7505	                           jne 0x40102d5	      9354	tc-i386.c	FUNCTION_112	IF_2	IF_3
0x40102d0	      0x488345a001	               add qword [rbp - 0x60], 1	      9355	tc-i386.c	FUNCTION_112	IF_2	IF_3
0x40102d5	    0x8b0500000000	            mov eax, dword [0x040102db] 	      9356	tc-i386.c	FUNCTION_112	IF_2
0x40102db	            0x4898	                                    cdqe	      9356	tc-i386.c	FUNCTION_112	IF_2
0x40102dd	        0x4883c00e	                            add rax, 0xe	      9356	tc-i386.c	FUNCTION_112	IF_2
0x40102e1	     0xfb614c50000	                 movzx edx, byte [rax*8]	      9356	tc-i386.c	FUNCTION_112	IF_2
0x40102e9	          0x83ca02	                               or edx, 2	      9356	tc-i386.c	FUNCTION_112	IF_2
0x40102ec	    0x8814c5000000	                    mov byte [rax*8], dl	      9356	tc-i386.c	FUNCTION_112	IF_2
0x40102f3	        0x488d5598	                   lea rdx, [rbp - 0x68]	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x40102f7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x40102fb	          0x4889d6	                            mov rsi, rdx	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x40102fe	          0x4889c7	                            mov rdi, rax	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x4010301	      0xe878190000	                 call sym.parse_register	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x4010306	        0x488945b8	             mov qword [rbp - 0x48], rax	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x401030a	      0x48837db800	               cmp qword [rbp - 0x48], 0	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x401030f	     0xf84d1020000	                            je 0x40105e6	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x4010315	        0x488b4598	             mov rax, qword [rbp - 0x68]	      9366	tc-i386.c	FUNCTION_112	IF_4
0x4010319	        0x488945a0	             mov qword [rbp - 0x60], rax	      9366	tc-i386.c	FUNCTION_112	IF_4
0x401031d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9367	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x4010321	           0xfb600	                   movzx eax, byte [rax]	      9367	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x4010324	            0x3c20	                            cmp al, 0x20	      9367	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x4010326	            0x7505	                           jne 0x401032d	      9367	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x4010328	      0x488345a001	               add qword [rbp - 0x60], 1	      9368	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x401032d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9369	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4010331	           0xfb600	                   movzx eax, byte [rax]	      9369	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4010334	            0x3c3a	                            cmp al, 0x3a	      9369	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4010336	     0xf85ab010000	                           jne 0x40104e7	      9369	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x401033c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9370	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4010340	         0xfb64008	               movzx eax, byte [rax + 8]	      9370	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4010344	          0x83e080	                     and eax, 0xffffff80	      9370	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4010347	            0x84c0	                             test al, al	      9370	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4010349	            0x7513	                           jne 0x401035e	      9370	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x401034b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9371	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x401034f	         0xfb64009	               movzx eax, byte [rax + 9]	      9371	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4010353	          0x83e001	                              and eax, 1	      9371	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4010356	            0x84c0	                             test al, al	      9371	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4010358	     0xf8489010000	                            je 0x40104e7	      9371	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x401035e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4010362	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4010366	           0xfb6c0	                           movzx eax, al	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4010369	          0x83f805	                              cmp eax, 5	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x401036c	     0xf87aa000000	                            ja 0x401041c	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4010372	            0x89c0	                            mov eax, eax	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4010374	    0x488b04c50000	                  mov rax, qword [rax*8]	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x401037c	            0xffe0	                                 jmp rax	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x401037e	    0x8b0500000000	            mov eax, dword [0x04010384] 	      9376	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4010384	            0x89c0	                            mov eax, eax	      9376	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4010386	        0x4883c020	                           add rax, 0x20	      9376	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x401038a	    0x48c704c50000	                    mov qword [rax*8], 0	      9376	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4010396	      0xe981000000	                           jmp 0x401041c	      9377	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x401039b	    0x8b0500000000	            mov eax, dword [0x040103a1] 	      9379	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103a1	            0x89c0	                            mov eax, eax	      9379	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103a3	        0x4883c020	                           add rax, 0x20	      9379	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103a7	    0x48c704c50000	                    mov qword [rax*8], 0	      9379	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103b3	            0xeb67	                           jmp 0x401041c	      9380	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103b5	    0x8b0500000000	            mov eax, dword [0x040103bb] 	      9382	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103bb	            0x89c0	                            mov eax, eax	      9382	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103bd	        0x4883c020	                           add rax, 0x20	      9382	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103c1	    0x48c704c50000	                    mov qword [rax*8], 0	      9382	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103cd	            0xeb4d	                           jmp 0x401041c	      9383	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103cf	    0x8b0500000000	            mov eax, dword [0x040103d5] 	      9385	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103d5	            0x89c0	                            mov eax, eax	      9385	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103d7	        0x4883c020	                           add rax, 0x20	      9385	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103db	    0x48c704c50000	                    mov qword [rax*8], 0	      9385	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103e7	            0xeb33	                           jmp 0x401041c	      9386	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103e9	    0x8b0500000000	            mov eax, dword [0x040103ef] 	      9388	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103ef	            0x89c0	                            mov eax, eax	      9388	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103f1	        0x4883c020	                           add rax, 0x20	      9388	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40103f5	    0x48c704c50000	                    mov qword [rax*8], 0	      9388	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4010401	            0xeb19	                           jmp 0x401041c	      9389	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4010403	    0x8b0500000000	            mov eax, dword [0x04010409] 	      9391	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4010409	            0x89c0	                            mov eax, eax	      9391	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x401040b	        0x4883c020	                           add rax, 0x20	      9391	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x401040f	    0x48c704c50000	                    mov qword [rax*8], 0	      9391	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x401041b	              0x90	                                     nop	      9392	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x401041c	      0x488345a001	               add qword [rbp - 0x60], 1	      9396	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4010421	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9397	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x4010425	           0xfb600	                   movzx eax, byte [rax]	      9397	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x4010428	            0x3c20	                            cmp al, 0x20	      9397	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x401042a	            0x7505	                           jne 0x4010431	      9397	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x401042c	      0x488345a001	               add qword [rbp - 0x60], 1	      9398	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x4010431	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010435	           0xfb600	                   movzx eax, byte [rax]	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010438	           0xfb6c0	                           movzx eax, al	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x401043b	            0x4898	                                    cdqe	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x401043d	     0xfb680000000	                   movzx eax, byte [rax]	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010444	            0x84c0	                             test al, al	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010446	            0x7558	                           jne 0x40104a0	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010448	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9401	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x401044c	           0xfb600	                   movzx eax, byte [rax]	      9401	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x401044f	           0xfb6c0	                           movzx eax, al	      9401	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010452	            0x4898	                                    cdqe	      9401	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010454	     0xfb680000000	                   movzx eax, byte [rax]	      9401	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x401045b	            0x84c0	                             test al, al	      9401	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x401045d	            0x7541	                           jne 0x40104a0	      9401	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x401045f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9402	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010463	           0xfb600	                   movzx eax, byte [rax]	      9402	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010466	            0x3c28	                            cmp al, 0x28	      9402	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010468	            0x7436	                            je 0x40104a0	      9402	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x401046a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x401046e	           0xfb600	                   movzx eax, byte [rax]	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010471	            0x3c2a	                            cmp al, 0x2a	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010473	            0x742b	                            je 0x40104a0	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4010475	      0xbf00000000	                              mov edi, 0	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x401047a	      0xe800000000	                          call 0x401047f	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x401047f	          0x4889c2	                            mov rdx, rax	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x4010482	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x4010486	          0x4889c6	                            mov rsi, rax	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x4010489	          0x4889d7	                            mov rdi, rdx	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x401048c	      0xb800000000	                              mov eax, 0	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x4010491	      0xe800000000	                          call 0x4010496	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x4010496	      0xb800000000	                              mov eax, 0	      9406	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x401049b	      0xe940080000	                           jmp 0x4010ce0	      9406	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40104a0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9409	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104a4	           0xfb600	                   movzx eax, byte [rax]	      9409	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104a7	            0x3c2a	                            cmp al, 0x2a	      9409	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104a9	     0xf8537020000	                           jne 0x40106e6	      9409	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104af	      0x488345a001	               add qword [rbp - 0x60], 1	      9411	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104b4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9412	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9	IF_10
0x40104b8	           0xfb600	                   movzx eax, byte [rax]	      9412	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9	IF_10
0x40104bb	            0x3c20	                            cmp al, 0x20	      9412	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9	IF_10
0x40104bd	            0x7505	                           jne 0x40104c4	      9412	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9	IF_10
0x40104bf	      0x488345a001	               add qword [rbp - 0x60], 1	      9413	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9	IF_10
0x40104c4	    0x8b0500000000	            mov eax, dword [0x040104ca] 	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104ca	            0x4898	                                    cdqe	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104cc	        0x4883c00e	                            add rax, 0xe	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104d0	     0xfb614c50000	                 movzx edx, byte [rax*8]	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104d8	          0x83ca02	                               or edx, 2	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104db	    0x8814c5000000	                    mov byte [rax*8], dl	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104e2	      0xe900020000	                           jmp 0x40106e7	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40104e7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9420	tc-i386.c	FUNCTION_112	IF_4	IF_11
0x40104eb	           0xfb600	                   movzx eax, byte [rax]	      9420	tc-i386.c	FUNCTION_112	IF_4	IF_11
0x40104ee	            0x3c7b	                            cmp al, 0x7b	      9420	tc-i386.c	FUNCTION_112	IF_4	IF_11
0x40104f0	            0x7526	                           jne 0x4010518	      9420	tc-i386.c	FUNCTION_112	IF_4	IF_11
0x40104f2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x40104f6	      0xbe00000000	                              mov esi, 0	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x40104fb	          0x4889c7	                            mov rdi, rax	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x40104fe	      0xe8e9e1ffff	            call sym.check_VecOperations	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x4010503	        0x488945a0	             mov qword [rbp - 0x60], rax	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x4010507	      0x48837da000	               cmp qword [rbp - 0x60], 0	      9423	tc-i386.c	FUNCTION_112	IF_4	IF_11	IF_12
0x401050c	            0x750a	                           jne 0x4010518	      9423	tc-i386.c	FUNCTION_112	IF_4	IF_11	IF_12
0x401050e	      0xb800000000	                              mov eax, 0	      9424	tc-i386.c	FUNCTION_112	IF_4	IF_11	IF_12
0x4010513	      0xe9c8070000	                           jmp 0x4010ce0	      9424	tc-i386.c	FUNCTION_112	IF_4	IF_11	IF_12
0x4010518	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9427	tc-i386.c	FUNCTION_112	IF_4	IF_13
0x401051c	           0xfb600	                   movzx eax, byte [rax]	      9427	tc-i386.c	FUNCTION_112	IF_4	IF_13
0x401051f	            0x84c0	                             test al, al	      9427	tc-i386.c	FUNCTION_112	IF_4	IF_13
0x4010521	            0x742b	                            je 0x401054e	      9427	tc-i386.c	FUNCTION_112	IF_4	IF_13
0x4010523	      0xbf00000000	                              mov edi, 0	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4010528	      0xe800000000	                          call 0x401052d	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x401052d	          0x4889c2	                            mov rdx, rax	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4010530	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4010534	          0x4889c6	                            mov rsi, rax	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4010537	          0x4889d7	                            mov rdi, rdx	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x401053a	      0xb800000000	                              mov eax, 0	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x401053f	      0xe800000000	                          call 0x4010544	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4010544	      0xb800000000	                              mov eax, 0	      9430	tc-i386.c	FUNCTION_112	IF_4	IF_13
0x4010549	      0xe992070000	                           jmp 0x4010ce0	      9430	tc-i386.c	FUNCTION_112	IF_4	IF_13
0x401054e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4010552	        0x488b4008	                mov rax, qword [rax + 8]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4010556	        0x488945e0	             mov qword [rbp - 0x20], rax	      9432	tc-i386.c	FUNCTION_112	IF_4
0x401055a	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      9433	tc-i386.c	FUNCTION_112	IF_4
0x401055e	          0x83e0bf	                     and eax, 0xffffffbf	      9433	tc-i386.c	FUNCTION_112	IF_4
0x4010561	          0x8845e2	               mov byte [rbp - 0x1e], al	      9433	tc-i386.c	FUNCTION_112	IF_4
0x4010564	    0x8b1500000000	            mov edx, dword [0x0401056a] 	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x401056a	    0x8b0500000000	            mov eax, dword [0x04010570] 	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x4010570	          0x4863d2	                         movsxd rdx, edx	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x4010573	        0x488d5a0e	                    lea rbx, [rdx + 0xe]	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x4010577	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x401057b	            0x4898	                                    cdqe	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x401057d	        0x4883c00e	                            add rax, 0xe	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x4010581	    0x488b04c50000	                  mov rax, qword [rax*8]	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x4010589	          0x4889d6	                            mov rsi, rdx	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x401058c	          0x4889c7	                            mov rdi, rax	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x401058f	      0xe8f804ffff	                call sym.operand_type_or	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x4010594	    0x488904dd0000	                  mov qword [rbx*8], rax	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x401059c	    0x8b0500000000	            mov eax, dword [0x040105a2] 	      9436	tc-i386.c	FUNCTION_112	IF_4
0x40105a2	            0x4898	                                    cdqe	      9436	tc-i386.c	FUNCTION_112	IF_4
0x40105a4	        0x4883c00e	                            add rax, 0xe	      9436	tc-i386.c	FUNCTION_112	IF_4
0x40105a8	     0xfb614c50000	                 movzx edx, byte [rax*8]	      9436	tc-i386.c	FUNCTION_112	IF_4
0x40105b0	          0x83e2bf	                     and edx, 0xffffffbf	      9436	tc-i386.c	FUNCTION_112	IF_4
0x40105b3	    0x8814c5000000	                    mov byte [rax*8], dl	      9436	tc-i386.c	FUNCTION_112	IF_4
0x40105ba	    0x8b0500000000	            mov eax, dword [0x040105c0] 	      9437	tc-i386.c	FUNCTION_112	IF_4
0x40105c0	            0x4898	                                    cdqe	      9437	tc-i386.c	FUNCTION_112	IF_4
0x40105c2	        0x488d5014	                   lea rdx, [rax + 0x14]	      9437	tc-i386.c	FUNCTION_112	IF_4
0x40105c6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9437	tc-i386.c	FUNCTION_112	IF_4
0x40105ca	    0x488904d50000	                  mov qword [rdx*8], rax	      9437	tc-i386.c	FUNCTION_112	IF_4
0x40105d2	    0x8b0500000000	            mov eax, dword [0x040105d8] 	      9438	tc-i386.c	FUNCTION_112	IF_4
0x40105d8	          0x83c001	                              add eax, 1	      9438	tc-i386.c	FUNCTION_112	IF_4
0x40105db	    0x890500000000	            mov dword [0x040105e1], eax 	      9438	tc-i386.c	FUNCTION_112	IF_4
0x40105e1	      0xe9f5060000	                           jmp 0x4010cdb	      9438	tc-i386.c	FUNCTION_112	IF_4
0x40105e6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9440	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x40105ea	           0xfb600	                   movzx eax, byte [rax]	      9440	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x40105ed	            0x3c25	                            cmp al, 0x25	      9440	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x40105ef	            0x752b	                           jne 0x401061c	      9440	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x40105f1	      0xbf00000000	                              mov edi, 0	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40105f6	      0xe800000000	                          call 0x40105fb	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40105fb	          0x4889c2	                            mov rdx, rax	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40105fe	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4010602	          0x4889c6	                            mov rsi, rax	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4010605	          0x4889d7	                            mov rdi, rdx	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4010608	      0xb800000000	                              mov eax, 0	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x401060d	      0xe800000000	                          call 0x4010612	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4010612	      0xb800000000	                              mov eax, 0	      9443	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x4010617	      0xe9c4060000	                           jmp 0x4010ce0	      9443	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x401061c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9445	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x4010620	           0xfb600	                   movzx eax, byte [rax]	      9445	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x4010623	            0x3c24	                            cmp al, 0x24	      9445	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x4010625	            0x7561	                           jne 0x4010688	      9445	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x4010627	      0x488345a001	               add qword [rbp - 0x60], 1	      9447	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x401062c	    0x8b0500000000	            mov eax, dword [0x04010632] 	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4010632	            0x4898	                                    cdqe	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4010634	        0x4883c00e	                            add rax, 0xe	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4010638	     0xfb604c50000	                 movzx eax, byte [rax*8]	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4010640	            0xd0e8	                               shr al, 1	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4010642	          0x83e001	                              and eax, 1	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4010645	            0x84c0	                             test al, al	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4010647	            0x7421	                            je 0x401066a	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4010649	      0xbf00000000	                              mov edi, 0	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x401064e	      0xe800000000	                          call 0x4010653	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x4010653	          0x4889c7	                            mov rdi, rax	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x4010656	      0xb800000000	                              mov eax, 0	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x401065b	      0xe800000000	                          call 0x4010660	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x4010660	      0xb800000000	                              mov eax, 0	      9451	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4010665	      0xe976060000	                           jmp 0x4010ce0	      9451	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x401066a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9453	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_17	CALL_12
0x401066e	          0x4889c7	                            mov rdi, rax	      9453	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_17	CALL_12
0x4010671	      0xe89de4ffff	                 call sym.i386_immediate	      9453	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_17	CALL_12
0x4010676	            0x85c0	                           test eax, eax	      9453	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_17	CALL_12
0x4010678	     0xf855d060000	                           jne 0x4010cdb	      9453	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_17	CALL_12
0x401067e	      0xb800000000	                              mov eax, 0	      9454	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_17
0x4010683	      0xe958060000	                           jmp 0x4010ce0	      9454	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_17
0x4010688	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x401068c	          0x4889c7	                            mov rdi, rax	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x401068f	      0xe875f8ffff	               call sym.RC_SAE_immediate	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x4010694	            0x85c0	                           test eax, eax	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x4010696	     0xf853f060000	                           jne 0x4010cdb	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x401069c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106a0	           0xfb600	                   movzx eax, byte [rax]	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106a3	           0xfb6c0	                           movzx eax, al	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106a6	            0x4898	                                    cdqe	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106a8	     0xfb680000000	                   movzx eax, byte [rax]	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106af	            0x84c0	                             test al, al	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106b1	            0x7534	                           jne 0x40106e7	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106b3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9462	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106b7	           0xfb600	                   movzx eax, byte [rax]	      9462	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106ba	           0xfb6c0	                           movzx eax, al	      9462	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106bd	            0x4898	                                    cdqe	      9462	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106bf	     0xfb680000000	                   movzx eax, byte [rax]	      9462	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106c6	            0x84c0	                             test al, al	      9462	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106c8	            0x751d	                           jne 0x40106e7	      9462	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106ca	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9463	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106ce	           0xfb600	                   movzx eax, byte [rax]	      9463	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106d1	            0x3c22	                            cmp al, 0x22	      9463	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106d3	            0x7412	                            je 0x40106e7	      9463	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106d5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106d9	           0xfb600	                   movzx eax, byte [rax]	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106dc	            0x3c28	                            cmp al, 0x28	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106de	     0xf85b0050000	                           jne 0x4010c94	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106e4	            0xeb01	                           jmp 0x40106e7	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40106e6	              0x90	                                     nop	      9416	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x40106e7	    0x8b0500000000	            mov eax, dword [0x040106ed] 	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x40106ed	          0x83f801	                              cmp eax, 1	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x40106f0	            0x7513	                           jne 0x4010705	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x40106f2	      0xe84cfaffff	         call sym.maybe_adjust_templates	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x40106f7	            0x85c0	                           test eax, eax	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x40106f9	            0x750a	                           jne 0x4010705	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x40106fb	      0xb800000000	                              mov eax, 0	      9476	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20
0x4010700	      0xe9db050000	                           jmp 0x4010ce0	      9476	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20
0x4010705	    0x8b0500000000	            mov eax, dword [0x0401070b] 	      9477	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x401070b	          0x83f801	                              cmp eax, 1	      9477	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x401070e	            0x7515	                           jne 0x4010725	      9477	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4010710	    0x488b05000000	            mov rax, qword [0x04010717] 	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4010717	          0x488b00	                    mov rax, qword [rax]	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x401071a	         0xfb6402b	           movzx eax, byte [rax + 0x2b] 	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x401071e	          0x83e001	                              and eax, 1	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4010721	            0x84c0	                             test al, al	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4010723	            0x740b	                            je 0x4010730	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4010725	    0x8b0500000000	            mov eax, dword [0x0401072b] 	      9479	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x401072b	          0x83f802	                              cmp eax, 2	      9479	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x401072e	            0x7531	                           jne 0x4010761	      9479	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4010730	    0x488b05000000	            mov rax, qword [0x04010737] 	      9482	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4010737	          0x488b00	                    mov rax, qword [rax]	      9482	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x401073a	          0x488b18	                    mov rbx, qword [rax]	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x401073d	      0xbf00000000	                              mov edi, 0	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x4010742	      0xe800000000	                          call 0x4010747	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x4010747	          0x4889de	                            mov rsi, rbx	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x401074a	          0x4889c7	                            mov rdi, rax	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x401074d	      0xb800000000	                              mov eax, 0	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x4010752	      0xe800000000	                          call 0x4010757	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x4010757	      0xb800000000	                              mov eax, 0	      9483	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x401075c	      0xe97f050000	                           jmp 0x4010ce0	      9483	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4010761	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x4010765	          0x4889c7	                            mov rdi, rax	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x4010768	      0xe800000000	                          call 0x401076d	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x401076d	          0x4889c2	                            mov rdx, rax	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x4010770	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x4010774	          0x4801d0	                            add rax, rdx	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x4010777	        0x488945a8	             mov qword [rbp - 0x58], rax	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x401077b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x401077f	      0xbe7b000000	                           mov esi, 0x7b	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x4010784	          0x4889c7	                            mov rdi, rax	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x4010787	      0xe800000000	                          call 0x401078c	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x401078c	        0x488945c0	             mov qword [rbp - 0x40], rax	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x4010790	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x4010795	            0x7434	                            je 0x40107cb	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x4010797	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x401079b	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x401079f	            0x732a	                           jae 0x40107cb	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x40107a1	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40107a5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40107a9	          0x4889d6	                            mov rsi, rdx	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40107ac	          0x4889c7	                            mov rdi, rax	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40107af	      0xe838dfffff	            call sym.check_VecOperations	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40107b4	          0x4885c0	                           test rax, rax	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40107b7	            0x750a	                           jne 0x40107c3	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40107b9	      0xb800000000	                              mov eax, 0	      9497	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23
0x40107be	      0xe91d050000	                           jmp 0x4010ce0	      9497	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23
0x40107c3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9498	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x40107c7	        0x488945a8	             mov qword [rbp - 0x58], rax	      9498	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x40107cb	      0x48836da801	               sub qword [rbp - 0x58], 1	      9501	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40107d0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9502	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x40107d4	           0xfb600	                   movzx eax, byte [rax]	      9502	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x40107d7	            0x3c20	                            cmp al, 0x20	      9502	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x40107d9	            0x7505	                           jne 0x40107e0	      9502	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x40107db	      0x48836da801	               sub qword [rbp - 0x58], 1	      9503	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x40107e0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9506	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40107e4	        0x488945c8	             mov qword [rbp - 0x38], rax	      9506	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40107e8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9507	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40107ec	        0x4883c001	                              add rax, 1	      9507	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40107f0	        0x488945b0	             mov qword [rbp - 0x50], rax	      9507	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40107f4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9509	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x40107f8	           0xfb600	                   movzx eax, byte [rax]	      9509	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x40107fb	            0x3c29	                            cmp al, 0x29	      9509	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x40107fd	     0xf853d030000	                           jne 0x4010b40	      9509	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4010803	    0xc74594010000	               mov dword [rbp - 0x6c], 1	      9512	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x401080a	      0x48836da801	               sub qword [rbp - 0x58], 1	      9517	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1
0x401080f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9518	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x4010813	           0xfb600	                   movzx eax, byte [rax]	      9518	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x4010816	            0x3c29	                            cmp al, 0x29	      9518	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x4010818	            0x7504	                           jne 0x401081e	      9518	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x401081a	        0x83459401	               add dword [rbp - 0x6c], 1	      9519	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x401081e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9520	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4010822	           0xfb600	                   movzx eax, byte [rax]	      9520	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4010825	            0x3c28	                            cmp al, 0x28	      9520	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4010827	            0x7504	                           jne 0x401082d	      9520	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4010829	        0x836d9401	               sub dword [rbp - 0x6c], 1	      9521	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x401082d	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      9523	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4010831	            0x75d7	                           jne 0x401080a	      9523	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4010833	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9525	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4010837	        0x488945d0	             mov qword [rbp - 0x30], rax	      9525	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x401083b	      0x488345a801	               add qword [rbp - 0x58], 1	      9528	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4010840	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9529	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x4010844	           0xfb600	                   movzx eax, byte [rax]	      9529	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x4010847	            0x3c20	                            cmp al, 0x20	      9529	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x4010849	            0x7505	                           jne 0x4010850	      9529	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x401084b	      0x488345a801	               add qword [rbp - 0x58], 1	      9530	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x4010850	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9532	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4010854	           0xfb600	                   movzx eax, byte [rax]	      9532	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4010857	            0x3c2c	                            cmp al, 0x2c	      9532	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4010859	            0x742a	                            je 0x4010885	      9532	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x401085b	        0x488d5598	                   lea rdx, [rbp - 0x68]	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x401085f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x4010863	          0x4889d6	                            mov rsi, rdx	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x4010866	          0x4889c7	                            mov rdi, rax	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x4010869	      0xe810140000	                 call sym.parse_register	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x401086e	    0x488905000000	            mov qword [0x04010875], rax 	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x4010875	    0x488b05000000	            mov rax, qword [0x0401087c] 	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x401087c	          0x4885c0	                           test rax, rax	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x401087f	     0xf845f020000	                            je 0x4010ae4	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x4010885	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9536	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4010889	        0x488945b0	             mov qword [rbp - 0x50], rax	      9536	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x401088d	    0x8b0500000000	            mov eax, dword [0x04010893] 	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4010893	            0x4898	                                    cdqe	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4010895	        0x4883c00e	                            add rax, 0xe	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4010899	     0xfb614c50000	                 movzx edx, byte [rax*8]	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x40108a1	          0x83ca40	                            or edx, 0x40	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x40108a4	    0x8814c5000000	                    mov byte [rax*8], dl	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x40108ab	    0x488b05000000	            mov rax, qword [0x040108b2] 	      9540	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30
0x40108b2	          0x4885c0	                           test rax, rax	      9540	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30
0x40108b5	            0x7418	                            je 0x40108cf	      9540	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30
0x40108b7	        0x488b4598	             mov rax, qword [rbp - 0x68]	      9542	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30
0x40108bb	        0x488945a8	             mov qword [rbp - 0x58], rax	      9542	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30
0x40108bf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9543	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x40108c3	           0xfb600	                   movzx eax, byte [rax]	      9543	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x40108c6	            0x3c20	                            cmp al, 0x20	      9543	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x40108c8	            0x7505	                           jne 0x40108cf	      9543	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x40108ca	      0x488345a801	               add qword [rbp - 0x58], 1	      9544	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x40108cf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9548	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x40108d3	           0xfb600	                   movzx eax, byte [rax]	      9548	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x40108d6	            0x3c2c	                            cmp al, 0x2c	      9548	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x40108d8	     0xf85cc010000	                           jne 0x4010aaa	      9548	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x40108de	      0x488345a801	               add qword [rbp - 0x58], 1	      9550	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x40108e3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9551	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_33
0x40108e7	           0xfb600	                   movzx eax, byte [rax]	      9551	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_33
0x40108ea	            0x3c20	                            cmp al, 0x20	      9551	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_33
0x40108ec	            0x7505	                           jne 0x40108f3	      9551	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_33
0x40108ee	      0x488345a801	               add qword [rbp - 0x58], 1	      9552	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_33
0x40108f3	        0x488d5598	                   lea rdx, [rbp - 0x68]	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x40108f7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x40108fb	          0x4889d6	                            mov rsi, rdx	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x40108fe	          0x4889c7	                            mov rdi, rax	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x4010901	      0xe878130000	                 call sym.parse_register	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x4010906	    0x488905000000	            mov qword [0x0401090d], rax 	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x401090d	    0x488b05000000	            mov rax, qword [0x04010914] 	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x4010914	          0x4885c0	                           test rax, rax	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x4010917	            0x747b	                            je 0x4010994	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x4010919	        0x488b4598	             mov rax, qword [rbp - 0x68]	      9557	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34
0x401091d	        0x488945a8	             mov qword [rbp - 0x58], rax	      9557	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34
0x4010921	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9558	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x4010925	           0xfb600	                   movzx eax, byte [rax]	      9558	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x4010928	            0x3c20	                            cmp al, 0x20	      9558	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x401092a	            0x7505	                           jne 0x4010931	      9558	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x401092c	      0x488345a801	               add qword [rbp - 0x58], 1	      9559	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x4010931	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9560	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36
0x4010935	           0xfb600	                   movzx eax, byte [rax]	      9560	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36
0x4010938	            0x3c2c	                            cmp al, 0x2c	      9560	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36
0x401093a	            0x751e	                           jne 0x401095a	      9560	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36
0x401093c	      0x488345a801	               add qword [rbp - 0x58], 1	      9562	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36
0x4010941	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9563	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x4010945	           0xfb600	                   movzx eax, byte [rax]	      9563	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x4010948	            0x3c20	                            cmp al, 0x20	      9563	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x401094a	     0xf859f000000	                           jne 0x40109ef	      9563	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x4010950	      0x488345a801	               add qword [rbp - 0x58], 1	      9564	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x4010955	      0xe995000000	                           jmp 0x40109ef	      9564	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x401095a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9566	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x401095e	           0xfb600	                   movzx eax, byte [rax]	      9566	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x4010961	            0x3c29	                            cmp al, 0x29	      9566	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x4010963	     0xf8486000000	                            je 0x40109ef	      9566	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x4010969	      0xbf00000000	                              mov edi, 0	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x401096e	      0xe800000000	                          call 0x4010973	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x4010973	          0x4889c2	                            mov rdx, rax	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x4010976	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x401097a	          0x4889c6	                            mov rsi, rax	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x401097d	          0x4889d7	                            mov rdi, rdx	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x4010980	      0xb800000000	                              mov eax, 0	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x4010985	      0xe800000000	                          call 0x401098a	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x401098a	      0xb800000000	                              mov eax, 0	      9571	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x401098f	      0xe94c030000	                           jmp 0x4010ce0	      9571	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x4010994	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9574	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x4010998	           0xfb600	                   movzx eax, byte [rax]	      9574	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x401099b	            0x3c25	                            cmp al, 0x25	      9574	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x401099d	            0x7550	                           jne 0x40109ef	      9574	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x401099f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9576	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_24
0x40109a3	      0xbe2c000000	                           mov esi, 0x2c	      9576	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_24
0x40109a8	          0x4889c7	                            mov rdi, rax	      9576	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_24
0x40109ab	      0xe800000000	                          call 0x40109b0	      9576	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_24
0x40109b0	        0x48894598	             mov qword [rbp - 0x68], rax	      9576	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_24
0x40109b4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      9577	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	IF_40
0x40109b8	          0x4885c0	                           test rax, rax	      9577	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	IF_40
0x40109bb	            0x7407	                            je 0x40109c4	      9577	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	IF_40
0x40109bd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      9578	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	IF_40
0x40109c1	          0xc60000	                       mov byte [rax], 0	      9578	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	IF_40
0x40109c4	      0xbf00000000	                              mov edi, 0	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x40109c9	      0xe800000000	                          call 0x40109ce	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x40109ce	          0x4889c2	                            mov rdx, rax	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x40109d1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x40109d5	          0x4889c6	                            mov rsi, rax	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x40109d8	          0x4889d7	                            mov rdi, rdx	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x40109db	      0xb800000000	                              mov eax, 0	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x40109e0	      0xe800000000	                          call 0x40109e5	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x40109e5	      0xb800000000	                              mov eax, 0	      9580	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x40109ea	      0xe9f1020000	                           jmp 0x4010ce0	      9580	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x40109ef	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x40109f3	           0xfb600	                   movzx eax, byte [rax]	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x40109f6	            0x3c29	                            cmp al, 0x29	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x40109f8	            0x7473	                            je 0x4010a6d	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x40109fa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9586	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	CALL_27
0x40109fe	          0x4889c7	                            mov rdi, rax	      9586	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	CALL_27
0x4010a01	      0xe842e5ffff	                     call sym.i386_scale	      9586	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	CALL_27
0x4010a06	        0x488945d8	             mov qword [rbp - 0x28], rax	      9586	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	CALL_27
0x4010a0a	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      9588	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_42
0x4010a0f	            0x750a	                           jne 0x4010a1b	      9588	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_42
0x4010a11	      0xb800000000	                              mov eax, 0	      9589	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_42
0x4010a16	      0xe9c5020000	                           jmp 0x4010ce0	      9589	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_42
0x4010a1b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9591	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x4010a1f	        0x488945a8	             mov qword [rbp - 0x58], rax	      9591	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x4010a23	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9592	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_43
0x4010a27	           0xfb600	                   movzx eax, byte [rax]	      9592	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_43
0x4010a2a	            0x3c20	                            cmp al, 0x20	      9592	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_43
0x4010a2c	            0x7505	                           jne 0x4010a33	      9592	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_43
0x4010a2e	      0x488345a801	               add qword [rbp - 0x58], 1	      9593	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_43
0x4010a33	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9594	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4010a37	           0xfb600	                   movzx eax, byte [rax]	      9594	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4010a3a	            0x3c29	                            cmp al, 0x29	      9594	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4010a3c	     0xf84fd000000	                            je 0x4010b3f	      9594	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4010a42	      0xbf00000000	                              mov edi, 0	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4010a47	      0xe800000000	                          call 0x4010a4c	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4010a4c	          0x4889c2	                            mov rdx, rax	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4010a4f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4010a53	          0x4889c6	                            mov rsi, rax	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4010a56	          0x4889d7	                            mov rdi, rdx	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4010a59	      0xb800000000	                              mov eax, 0	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4010a5e	      0xe800000000	                          call 0x4010a63	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4010a63	      0xb800000000	                              mov eax, 0	      9599	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4010a68	      0xe973020000	                           jmp 0x4010ce0	      9599	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4010a6d	    0x488b05000000	            mov rax, qword [0x04010a74] 	      9602	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45
0x4010a74	          0x4885c0	                           test rax, rax	      9602	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45
0x4010a77	     0xf85c2000000	                           jne 0x4010b3f	      9602	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45
0x4010a7d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9606	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45
0x4010a81	           0xfb600	                   movzx eax, byte [rax]	      9606	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45
0x4010a84	           0xfbed8	                           movsx ebx, al	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4010a87	      0xbf00000000	                              mov edi, 0	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4010a8c	      0xe800000000	                          call 0x4010a91	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4010a91	            0x89de	                            mov esi, ebx	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4010a93	          0x4889c7	                            mov rdi, rax	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4010a96	      0xb800000000	                              mov eax, 0	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4010a9b	      0xe800000000	                          call 0x4010aa0	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4010aa0	      0xb800000000	                              mov eax, 0	      9607	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45
0x4010aa5	      0xe936020000	                           jmp 0x4010ce0	      9607	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45
0x4010aaa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9610	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46
0x4010aae	           0xfb600	                   movzx eax, byte [rax]	      9610	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46
0x4010ab1	            0x3c29	                            cmp al, 0x29	      9610	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46
0x4010ab3	     0xf8486000000	                            je 0x4010b3f	      9610	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46
0x4010ab9	      0xbf00000000	                              mov edi, 0	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4010abe	      0xe800000000	                          call 0x4010ac3	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4010ac3	          0x4889c2	                            mov rdx, rax	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4010ac6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4010aca	          0x4889c6	                            mov rsi, rax	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4010acd	          0x4889d7	                            mov rdi, rdx	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4010ad0	      0xb800000000	                              mov eax, 0	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4010ad5	      0xe800000000	                          call 0x4010ada	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4010ada	      0xb800000000	                              mov eax, 0	      9615	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46
0x4010adf	      0xe9fc010000	                           jmp 0x4010ce0	      9615	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46
0x4010ae4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9618	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4010ae8	           0xfb600	                   movzx eax, byte [rax]	      9618	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4010aeb	            0x3c25	                            cmp al, 0x25	      9618	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4010aed	            0x7551	                           jne 0x4010b40	      9618	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4010aef	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x4010af3	      0xbe2c000000	                           mov esi, 0x2c	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x4010af8	          0x4889c7	                            mov rdi, rax	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x4010afb	      0xe800000000	                          call 0x4010b00	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x4010b00	        0x48894598	             mov qword [rbp - 0x68], rax	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x4010b04	        0x488b4598	             mov rax, qword [rbp - 0x68]	      9621	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	IF_48
0x4010b08	          0x4885c0	                           test rax, rax	      9621	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	IF_48
0x4010b0b	            0x7407	                            je 0x4010b14	      9621	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	IF_48
0x4010b0d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      9622	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	IF_48
0x4010b11	          0xc60000	                       mov byte [rax], 0	      9622	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	IF_48
0x4010b14	      0xbf00000000	                              mov edi, 0	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4010b19	      0xe800000000	                          call 0x4010b1e	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4010b1e	          0x4889c2	                            mov rdx, rax	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4010b21	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4010b25	          0x4889c6	                            mov rsi, rax	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4010b28	          0x4889d7	                            mov rdi, rdx	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4010b2b	      0xb800000000	                              mov eax, 0	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4010b30	      0xe800000000	                          call 0x4010b35	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4010b35	      0xb800000000	                              mov eax, 0	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4010b3a	      0xe9a1010000	                           jmp 0x4010ce0	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4010b3f	              0x90	                                     nop	      9548	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x4010b40	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x4010b44	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x4010b48	            0x7421	                            je 0x4010b6b	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x4010b4a	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      9633	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50	CALL_37
0x4010b4e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9633	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50	CALL_37
0x4010b52	          0x4889d6	                            mov rsi, rdx	      9633	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50	CALL_37
0x4010b55	          0x4889c7	                            mov rdi, rax	      9633	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50	CALL_37
0x4010b58	      0xe82fe5ffff	              call sym.i386_displacement	      9633	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50	CALL_37
0x4010b5d	            0x85c0	                           test eax, eax	      9633	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50	CALL_37
0x4010b5f	            0x750a	                           jne 0x4010b6b	      9633	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50	CALL_37
0x4010b61	      0xb800000000	                              mov eax, 0	      9635	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50
0x4010b66	      0xe975010000	                           jmp 0x4010ce0	      9635	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50
0x4010b6b	    0x488b05000000	            mov rax, qword [0x04010b72] 	      9639	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010b72	          0x4885c0	                           test rax, rax	      9639	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010b75	     0xf84b3000000	                            je 0x4010c2e	      9639	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010b7b	    0x488b05000000	            mov rax, qword [0x04010b82] 	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4010b82	        0x4883c008	                              add rax, 8	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4010b86	      0xbe00000000	                              mov esi, 0	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4010b8b	          0x4889c7	                            mov rdi, rax	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4010b8e	      0xe890f9feff	             call sym.operand_type_equal	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4010b93	            0x85c0	                           test eax, eax	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4010b95	     0xf8493000000	                            je 0x4010c2e	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4010b9b	    0x488b05000000	            mov rax, qword [0x04010ba2] 	      9642	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010ba2	          0x4885c0	                           test rax, rax	      9642	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010ba5	     0xf8583000000	                           jne 0x4010c2e	      9642	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bab	    0x8b0500000000	            mov eax, dword [0x04010bb1] 	      9643	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bb1	            0x85c0	                           test eax, eax	      9643	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bb3	            0x7579	                           jne 0x4010c2e	      9643	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bb5	    0x8b0500000000	            mov eax, dword [0x04010bbb] 	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bbb	            0x89c0	                            mov eax, eax	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bbd	        0x4883c020	                           add rax, 0x20	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bc1	    0x488b04c50000	                  mov rax, qword [rax*8]	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bc9	          0x4885c0	                           test rax, rax	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bcc	            0x7560	                           jne 0x4010c2e	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bce	    0x8b0500000000	            mov eax, dword [0x04010bd4] 	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4010bd4	            0x4898	                                    cdqe	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4010bd6	        0x4883c00e	                            add rax, 0xe	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4010bda	    0x488b04c50000	                  mov rax, qword [rax*8]	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4010be2	      0xbe02000000	                              mov esi, 2	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4010be7	          0x4889c7	                            mov rdi, rax	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4010bea	      0xe83dfffeff	             call sym.operand_type_check	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4010bef	            0x85c0	                           test eax, eax	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4010bf1	            0x753b	                           jne 0x4010c2e	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4010bf3	    0x8b0500000000	            mov eax, dword [0x04010bf9] 	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bf9	          0x4863d0	                         movsxd rdx, eax	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010bfc	        0x4883c20e	                            add rdx, 0xe	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010c00	    0x48c704d50000	                    mov qword [rdx*8], 0	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010c0c	            0x4898	                                    cdqe	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010c0e	        0x4883c00e	                            add rax, 0xe	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010c12	     0xfb614c50000	                 movzx edx, byte [rax*8]	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010c1a	          0x83ca80	                      or edx, 0xffffff80	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010c1d	    0x8814c5000000	                    mov byte [rax*8], dl	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010c24	      0xb801000000	                              mov eax, 1	      9648	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010c29	      0xe9b2000000	                           jmp 0x4010ce0	      9648	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4010c2e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4010c32	          0x4889c7	                            mov rdi, rax	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4010c35	      0xe825edffff	               call sym.i386_index_check	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4010c3a	            0x85c0	                           test eax, eax	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4010c3c	            0x750a	                           jne 0x4010c48	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4010c3e	      0xb800000000	                              mov eax, 0	      9652	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52
0x4010c43	      0xe998000000	                           jmp 0x4010ce0	      9652	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52
0x4010c48	    0x8b0500000000	            mov eax, dword [0x04010c4e] 	      9653	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4010c4e	            0x4898	                                    cdqe	      9653	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4010c50	        0x4883c00e	                            add rax, 0xe	      9653	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4010c54	     0xfb614c50000	                 movzx edx, byte [rax*8]	      9653	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4010c5c	          0x83ca10	                            or edx, 0x10	      9653	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4010c5f	    0x8814c5000000	                    mov byte [rax*8], dl	      9653	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4010c66	    0x8b0500000000	            mov eax, dword [0x04010c6c] 	      9654	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_53
0x4010c6c	            0x85c0	                           test eax, eax	      9654	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_53
0x4010c6e	            0x7513	                           jne 0x4010c83	      9654	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_53
0x4010c70	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x4010c74	          0x4889c7	                            mov rdi, rax	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x4010c77	      0xe800000000	                          call 0x4010c7c	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x4010c7c	    0x488905000000	            mov qword [0x04010c83], rax 	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x4010c83	    0x8b0500000000	            mov eax, dword [0x04010c89] 	      9656	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4010c89	          0x83c001	                              add eax, 1	      9656	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4010c8c	    0x890500000000	            mov dword [0x04010c92], eax 	      9656	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4010c92	            0xeb47	                           jmp 0x4010cdb	      9465	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4010c94	    0x8b0500000000	            mov eax, dword [0x04010c9a] 	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010c9a	          0x8d5801	                      lea ebx, [rax + 1]	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010c9d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9662	tc-i386.c	FUNCTION_112	ELSE_10	CALL_44
0x4010ca1	           0xfb600	                   movzx eax, byte [rax]	      9662	tc-i386.c	FUNCTION_112	ELSE_10	CALL_44
0x4010ca4	           0xfbec0	                           movsx eax, al	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010ca7	            0x89c7	                            mov edi, eax	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010ca9	      0xe8dc0a0000	                 call sym.output_invalid	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010cae	          0x4989c4	                            mov r12, rax	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010cb1	      0xbf00000000	                              mov edi, 0	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010cb6	      0xe800000000	                          call 0x4010cbb	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010cbb	          0x4889c7	                            mov rdi, rax	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010cbe	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010cc2	          0x4889c1	                            mov rcx, rax	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010cc5	            0x89da	                            mov edx, ebx	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010cc7	          0x4c89e6	                            mov rsi, r12	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010cca	      0xb800000000	                              mov eax, 0	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010ccf	      0xe800000000	                          call 0x4010cd4	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4010cd4	      0xb800000000	                              mov eax, 0	      9665	tc-i386.c	FUNCTION_112	ELSE_10
0x4010cd9	            0xeb05	                           jmp 0x4010ce0	      9665	tc-i386.c	FUNCTION_112	ELSE_10
0x4010cdb	      0xb801000000	                              mov eax, 1	      9667	tc-i386.c	FUNCTION_112
0x4010ce0	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      9668	tc-i386.c	FUNCTION_112
0x4010ce4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9668	tc-i386.c	FUNCTION_112
0x4010ced	            0x7405	                            je 0x4010cf4	      9668	tc-i386.c	FUNCTION_112
0x4010cef	      0xe800000000	                          call 0x4010cf4	      9668	tc-i386.c	FUNCTION_112
0x4010cf4	        0x4883c470	                           add rsp, 0x70	      9668	tc-i386.c	FUNCTION_112
0x4010cf8	              0x5b	                                 pop rbx	      9668	tc-i386.c	FUNCTION_112
0x4010cf9	            0x415c	                                 pop r12	      9668	tc-i386.c	FUNCTION_112
0x4010cfb	              0x5d	                                 pop rbp	      9668	tc-i386.c	FUNCTION_112
0x4010cfc	              0xc3	                                     ret	      9668	tc-i386.c	FUNCTION_112
add_prefix	CALL,3:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,5:ELSE,2:DO,0	120
0x4001ae1	              0x55	                                push rbp	      2325	tc-i386.c	FUNCTION_40
0x4001ae2	          0x4889e5	                            mov rbp, rsp	      2325	tc-i386.c	FUNCTION_40
0x4001ae5	        0x4883ec20	                           sub rsp, 0x20	      2325	tc-i386.c	FUNCTION_40
0x4001ae9	          0x897dec	             mov dword [rbp - 0x14], edi	      2325	tc-i386.c	FUNCTION_40
0x4001aec	    0xc745f8040000	                  mov dword [rbp - 8], 4	      2326	tc-i386.c	FUNCTION_40
0x4001af3	        0x837dec3f	           cmp dword [rbp - 0x14], 0x3f 	      2329	tc-i386.c	FUNCTION_40	IF_1
0x4001af7	            0x7674	                           jbe 0x4001b6d	      2329	tc-i386.c	FUNCTION_40	IF_1
0x4001af9	        0x837dec4f	           cmp dword [rbp - 0x14], 0x4f 	      2329	tc-i386.c	FUNCTION_40	IF_1
0x4001afd	            0x776e	                            ja 0x4001b6d	      2329	tc-i386.c	FUNCTION_40	IF_1
0x4001aff	    0x8b0500000000	            mov eax, dword [0x04001b05] 	      2330	tc-i386.c	FUNCTION_40	IF_1
0x4001b05	          0x83f802	                              cmp eax, 2	      2330	tc-i386.c	FUNCTION_40	IF_1
0x4001b08	            0x7563	                           jne 0x4001b6d	      2330	tc-i386.c	FUNCTION_40	IF_1
0x4001b0a	     0xfb605000000	           movzx eax, byte [0x04001b11] 	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b11	           0xfb6c0	                           movzx eax, al	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b14	          0x2345ec	             and eax, dword [rbp - 0x14]	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b17	          0x83e008	                              and eax, 8	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b1a	            0x85c0	                           test eax, eax	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b1c	            0x753c	                           jne 0x4001b5a	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b1e	     0xfb605000000	           movzx eax, byte [0x04001b25] 	      2333	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b25	           0xfb6c0	                           movzx eax, al	      2333	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b28	          0x2345ec	             and eax, dword [rbp - 0x14]	      2333	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b2b	          0x83e004	                              and eax, 4	      2333	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b2e	            0x85c0	                           test eax, eax	      2333	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b30	            0x7528	                           jne 0x4001b5a	      2333	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b32	     0xfb605000000	           movzx eax, byte [0x04001b39] 	      2334	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b39	           0xfb6c0	                           movzx eax, al	      2334	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b3c	          0x2345ec	             and eax, dword [rbp - 0x14]	      2334	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b3f	          0x83e002	                              and eax, 2	      2334	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b42	            0x85c0	                           test eax, eax	      2334	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b44	            0x7514	                           jne 0x4001b5a	      2334	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b46	     0xfb605000000	           movzx eax, byte [0x04001b4d] 	      2335	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b4d	           0xfb6c0	                           movzx eax, al	      2335	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b50	          0x2345ec	             and eax, dword [rbp - 0x14]	      2335	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b53	          0x83e001	                              and eax, 1	      2335	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b56	            0x85c0	                           test eax, eax	      2335	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b58	            0x7407	                            je 0x4001b61	      2335	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b5a	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2336	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4001b61	    0xc745fc060000	                  mov dword [rbp - 4], 6	      2337	tc-i386.c	FUNCTION_40	IF_1
0x4001b68	      0xe9cf000000	                           jmp 0x4001c3c	      2337	tc-i386.c	FUNCTION_40	IF_1
0x4001b6d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b70	          0x83f865	                           cmp eax, 0x65	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b73	            0x7722	                            ja 0x4001b97	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b75	          0x83f864	                           cmp eax, 0x64	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b78	            0x736a	                           jae 0x4001be4	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b7a	          0x83f82e	                           cmp eax, 0x2e	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b7d	            0x7465	                            je 0x4001be4	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b7f	          0x83f82e	                           cmp eax, 0x2e	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b82	            0x7707	                            ja 0x4001b8b	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b84	          0x83f826	                           cmp eax, 0x26	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b87	            0x745b	                            je 0x4001be4	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b89	            0xeb3e	                           jmp 0x4001bc9	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b8b	          0x83f836	                           cmp eax, 0x36	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b8e	            0x7454	                            je 0x4001be4	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b90	          0x83f83e	                           cmp eax, 0x3e	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b93	            0x7448	                            je 0x4001bdd	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b95	            0xeb32	                           jmp 0x4001bc9	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b97	      0x3d9b000000	                           cmp eax, 0x9b	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b9c	            0x746f	                            je 0x4001c0d	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001b9e	      0x3d9b000000	                           cmp eax, 0x9b	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001ba3	            0x770c	                            ja 0x4001bb1	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001ba5	          0x83f866	                           cmp eax, 0x66	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001ba8	            0x7475	                            je 0x4001c1f	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001baa	          0x83f867	                           cmp eax, 0x67	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bad	            0x7467	                            je 0x4001c16	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001baf	            0xeb18	                           jmp 0x4001bc9	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bb1	      0x3df0000000	                           cmp eax, 0xf0	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bb6	            0x7445	                            je 0x4001bfd	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bb8	      0x3df0000000	                           cmp eax, 0xf0	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bbd	            0x720a	                            jb 0x4001bc9	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bbf	      0x2df2000000	                           sub eax, 0xf2	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bc4	          0x83f801	                              cmp eax, 1	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bc7	            0x7624	                           jbe 0x4001bed	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bc9	      0xba00000000	                              mov edx, 0	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x4001bce	      0xbe28090000	                          mov esi, 0x928	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x4001bd3	      0xbf00000000	                              mov edi, 0	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x4001bd8	      0xe800000000	                          call 0x4001bdd	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x4001bdd	    0xc745f8030000	                  mov dword [rbp - 8], 3	      2347	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001be4	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2354	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001beb	            0xeb3a	                           jmp 0x4001c27	      2355	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bed	    0xc745fc040000	                  mov dword [rbp - 4], 4	      2359	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bf4	    0xc745f8020000	                  mov dword [rbp - 8], 2	      2360	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bfb	            0xeb2a	                           jmp 0x4001c27	      2361	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001bfd	    0xc745fc050000	                  mov dword [rbp - 4], 5	      2364	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001c04	    0xc745f8010000	                  mov dword [rbp - 8], 1	      2365	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001c0b	            0xeb1a	                           jmp 0x4001c27	      2366	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001c0d	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2369	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001c14	            0xeb11	                           jmp 0x4001c27	      2370	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001c16	    0xc745fc020000	                  mov dword [rbp - 4], 2	      2373	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001c1d	            0xeb08	                           jmp 0x4001c27	      2374	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001c1f	    0xc745fc030000	                  mov dword [rbp - 4], 3	      2377	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001c26	              0x90	                                     nop	      2378	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4001c27	          0x8b45fc	                mov eax, dword [rbp - 4]	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x4001c2a	     0xfb680000000	                   movzx eax, byte [rax]	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x4001c31	            0x84c0	                             test al, al	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x4001c33	            0x7407	                            je 0x4001c3c	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x4001c35	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2381	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x4001c3c	        0x837df800	                  cmp dword [rbp - 8], 0	      2384	tc-i386.c	FUNCTION_40	IF_4
0x4001c40	            0x7437	                            je 0x4001c79	      2384	tc-i386.c	FUNCTION_40	IF_4
0x4001c42	          0x8b45fc	                mov eax, dword [rbp - 4]	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4001c45	     0xfb680000000	                   movzx eax, byte [rax]	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4001c4c	            0x84c0	                             test al, al	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4001c4e	            0x750f	                           jne 0x4001c5f	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4001c50	    0x8b0500000000	            mov eax, dword [0x04001c56] 	      2387	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4001c56	          0x83c001	                              add eax, 1	      2387	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4001c59	    0x890500000000	            mov dword [0x04001c5f], eax 	      2387	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4001c5f	          0x8b45fc	                mov eax, dword [rbp - 4]	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4001c62	     0xfb690000000	                   movzx edx, byte [rax]	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4001c69	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4001c6c	             0x9c2	                             or edx, eax	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4001c6e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4001c71	    0x889000000000	                      mov byte [rax], dl	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4001c77	            0xeb17	                           jmp 0x4001c90	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4001c79	      0xbf00000000	                              mov edi, 0	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4001c7e	      0xe800000000	                          call 0x4001c83	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4001c83	          0x4889c7	                            mov rdi, rax	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4001c86	      0xb800000000	                              mov eax, 0	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4001c8b	      0xe800000000	                          call 0x4001c90	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4001c90	          0x8b45f8	                mov eax, dword [rbp - 8]	      2393	tc-i386.c	FUNCTION_40
0x4001c93	              0xc9	                                   leave	      2394	tc-i386.c	FUNCTION_40
0x4001c94	              0xc3	                                     ret	      2394	tc-i386.c	FUNCTION_40
md_apply_fix	CALL,14:FOR,0:WHILE,0:functions,0:SWITCH,2:IF,12:ELSE,3:DO,0	225
0x4011425	              0x55	                                push rbp	      9964	tc-i386.c	FUNCTION_117
0x4011426	          0x4889e5	                            mov rbp, rsp	      9964	tc-i386.c	FUNCTION_117
0x4011429	        0x4883ec40	                           sub rsp, 0x40	      9964	tc-i386.c	FUNCTION_117
0x401142d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      9964	tc-i386.c	FUNCTION_117
0x4011431	        0x488975d0	             mov qword [rbp - 0x30], rsi	      9964	tc-i386.c	FUNCTION_117
0x4011435	        0x488955c8	             mov qword [rbp - 0x38], rdx	      9964	tc-i386.c	FUNCTION_117
0x4011439	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9965	tc-i386.c	FUNCTION_117
0x401143d	        0x488b4008	                mov rax, qword [rax + 8]	      9965	tc-i386.c	FUNCTION_117
0x4011441	        0x488d507c	                   lea rdx, [rax + 0x7c]	      9965	tc-i386.c	FUNCTION_117
0x4011445	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9965	tc-i386.c	FUNCTION_117
0x4011449	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9965	tc-i386.c	FUNCTION_117
0x401144d	          0x4801d0	                            add rax, rdx	      9965	tc-i386.c	FUNCTION_117
0x4011450	        0x488945f0	             mov qword [rbp - 0x10], rax	      9965	tc-i386.c	FUNCTION_117
0x4011454	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9966	tc-i386.c	FUNCTION_117
0x4011458	          0x488b00	                    mov rax, qword [rax]	      9966	tc-i386.c	FUNCTION_117
0x401145b	        0x488945e8	             mov qword [rbp - 0x18], rax	      9966	tc-i386.c	FUNCTION_117
0x401145f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9969	tc-i386.c	FUNCTION_117	IF_1
0x4011463	           0xfb600	                   movzx eax, byte [rax]	      9969	tc-i386.c	FUNCTION_117	IF_1
0x4011466	          0x83e001	                              and eax, 1	      9969	tc-i386.c	FUNCTION_117	IF_1
0x4011469	            0x84c0	                             test al, al	      9969	tc-i386.c	FUNCTION_117	IF_1
0x401146b	            0x745e	                            je 0x40114cb	      9969	tc-i386.c	FUNCTION_117	IF_1
0x401146d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x4011471	          0x8b4050	            mov eax, dword [rax + 0x50] 	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x4011474	          0x83f805	                              cmp eax, 5	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x4011477	            0x7439	                            je 0x40114b2	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x4011479	          0x83f805	                              cmp eax, 5	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x401147c	            0x770c	                            ja 0x401148a	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x401147e	          0x83f801	                              cmp eax, 1	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x4011481	            0x7415	                            je 0x4011498	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x4011483	          0x83f802	                              cmp eax, 2	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x4011486	            0x741d	                            je 0x40114a5	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x4011488	            0xeb41	                           jmp 0x40114cb	      9974	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x401148a	          0x83f807	                              cmp eax, 7	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x401148d	            0x7430	                            je 0x40114bf	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x401148f	      0x3d84010000	                          cmp eax, 0x184	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x4011494	            0x740f	                            je 0x40114a5	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x4011496	            0xeb33	                           jmp 0x40114cb	      9974	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x4011498	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9977	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x401149c	    0xc74050080000	               mov dword [rax + 0x50], 8	      9977	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x40114a3	            0xeb26	                           jmp 0x40114cb	      9978	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x40114a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9981	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x40114a9	    0xc74050090000	               mov dword [rax + 0x50], 9	      9981	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x40114b0	            0xeb19	                           jmp 0x40114cb	      9982	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x40114b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9984	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x40114b6	    0xc740500b0000	            mov dword [rax + 0x50], 0xb 	      9984	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x40114bd	            0xeb0c	                           jmp 0x40114cb	      9985	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x40114bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9987	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x40114c3	    0xc740500d0000	            mov dword [rax + 0x50], 0xd 	      9987	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x40114ca	              0x90	                                     nop	      9988	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x40114cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9992	tc-i386.c	FUNCTION_117	IF_2
0x40114cf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9992	tc-i386.c	FUNCTION_117	IF_2
0x40114d3	          0x4885c0	                           test rax, rax	      9992	tc-i386.c	FUNCTION_117	IF_2
0x40114d6	     0xf84c8000000	                            je 0x40115a4	      9992	tc-i386.c	FUNCTION_117	IF_2
0x40114dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9993	tc-i386.c	FUNCTION_117	IF_2
0x40114e0	          0x8b4050	            mov eax, dword [rax + 0x50] 	      9993	tc-i386.c	FUNCTION_117	IF_2
0x40114e3	          0x83f809	                              cmp eax, 9	      9993	tc-i386.c	FUNCTION_117	IF_2
0x40114e6	            0x7428	                            je 0x4011510	      9993	tc-i386.c	FUNCTION_117	IF_2
0x40114e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9994	tc-i386.c	FUNCTION_117	IF_2
0x40114ec	          0x8b4050	            mov eax, dword [rax + 0x50] 	      9994	tc-i386.c	FUNCTION_117	IF_2
0x40114ef	          0x83f808	                              cmp eax, 8	      9994	tc-i386.c	FUNCTION_117	IF_2
0x40114f2	            0x741c	                            je 0x4011510	      9994	tc-i386.c	FUNCTION_117	IF_2
0x40114f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9995	tc-i386.c	FUNCTION_117	IF_2
0x40114f8	          0x8b4050	            mov eax, dword [rax + 0x50] 	      9995	tc-i386.c	FUNCTION_117	IF_2
0x40114fb	          0x83f80b	                            cmp eax, 0xb	      9995	tc-i386.c	FUNCTION_117	IF_2
0x40114fe	            0x7410	                            je 0x4011510	      9995	tc-i386.c	FUNCTION_117	IF_2
0x4011500	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9996	tc-i386.c	FUNCTION_117	IF_2
0x4011504	          0x8b4050	            mov eax, dword [rax + 0x50] 	      9996	tc-i386.c	FUNCTION_117	IF_2
0x4011507	          0x83f80d	                            cmp eax, 0xd	      9996	tc-i386.c	FUNCTION_117	IF_2
0x401150a	     0xf8594000000	                           jne 0x40115a4	      9996	tc-i386.c	FUNCTION_117	IF_2
0x4011510	    0x8b0500000000	            mov eax, dword [0x04011516] 	      9997	tc-i386.c	FUNCTION_117	IF_2
0x4011516	            0x85c0	                           test eax, eax	      9997	tc-i386.c	FUNCTION_117	IF_2
0x4011518	     0xf8586000000	                           jne 0x40115a4	      9997	tc-i386.c	FUNCTION_117	IF_2
0x401151e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x4011522	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x4011526	          0x4889c2	                            mov rdx, rax	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x4011529	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x401152d	        0x488b4008	                mov rax, qword [rax + 8]	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x4011531	          0x488b00	                    mov rax, qword [rax]	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x4011534	          0x4801d0	                            add rax, rdx	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x4011537	        0x480145e8	            add qword [rbp - 0x18], rax 	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x401153b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10014	tc-i386.c	FUNCTION_117	IF_2	IF_4	CALL_1
0x401153f	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10014	tc-i386.c	FUNCTION_117	IF_2	IF_4	CALL_1
0x4011543	          0x4889c7	                            mov rdi, rax	     10014	tc-i386.c	FUNCTION_117	IF_2	IF_4	CALL_1
0x4011546	      0xe800000000	                          call 0x401154b	     10014	tc-i386.c	FUNCTION_117	IF_2	IF_4	CALL_1
0x401154b	        0x488945f8	                mov qword [rbp - 8], rax	     10014	tc-i386.c	FUNCTION_117	IF_2	IF_4	CALL_1
0x401154f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10016	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x4011553	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	     10016	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x4011557	            0x741e	                            je 0x4011577	     10016	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x4011559	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10017	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_2
0x401155d	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10017	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_2
0x4011561	          0x4889c7	                            mov rdi, rax	     10017	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_2
0x4011564	      0xe800000000	                          call 0x4011569	     10017	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_2
0x4011569	            0x85c0	                           test eax, eax	     10017	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_2
0x401156b	            0x7437	                            je 0x40115a4	     10017	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_2
0x401156d	    0x48817df80000	                  cmp qword [rbp - 8], 0	     10018	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x4011575	            0x742d	                            je 0x40115a4	     10018	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x4011577	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x401157b	          0x4889c7	                            mov rdi, rax	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x401157e	      0xe800000000	                          call 0x4011583	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x4011583	            0x85c0	                           test eax, eax	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x4011585	            0x751d	                           jne 0x40115a4	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x4011587	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x401158b	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x401158f	          0x4889c2	                            mov rdx, rax	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x4011592	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x4011596	        0x488b4008	                mov rax, qword [rax + 8]	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x401159a	          0x488b00	                    mov rax, qword [rax]	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x401159d	          0x4801d0	                            add rax, rdx	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x40115a0	        0x480145e8	            add qword [rbp - 0x18], rax 	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x40115a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10060	tc-i386.c	FUNCTION_117	IF_9
0x40115a8	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10060	tc-i386.c	FUNCTION_117	IF_9
0x40115ac	          0x4885c0	                           test rax, rax	     10060	tc-i386.c	FUNCTION_117	IF_9
0x40115af	     0xf8439010000	                            je 0x40116ee	     10060	tc-i386.c	FUNCTION_117	IF_9
0x40115b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115b9	          0x8b4050	            mov eax, dword [rax + 0x50] 	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115bc	      0x3d7e010000	                          cmp eax, 0x17e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115c1	     0xf84ce000000	                            je 0x4011695	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115c7	      0x3d7e010000	                          cmp eax, 0x17e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115cc	            0x7774	                            ja 0x4011642	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115ce	      0x3d71010000	                          cmp eax, 0x171	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115d3	            0x7731	                            ja 0x4011606	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115d5	      0x3d70010000	                          cmp eax, 0x170	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115da	     0xf83bf000000	                           jae 0x401169f	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115e0	      0x3d6e010000	                          cmp eax, 0x16e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115e5	     0xf87bc000000	                            ja 0x40116a7	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115eb	      0x3d6d010000	                          cmp eax, 0x16d	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115f0	     0xf83a9000000	                           jae 0x401169f	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115f6	      0x3d65010000	                          cmp eax, 0x165	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40115fb	     0xf8494000000	                            je 0x4011695	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011601	      0xe9e7000000	                           jmp 0x40116ed	     10105	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011606	      0x3d74010000	                          cmp eax, 0x174	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401160b	     0xf8496000000	                            je 0x40116a7	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011611	      0x3d74010000	                          cmp eax, 0x174	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011616	            0x7717	                            ja 0x401162f	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011618	      0x3d72010000	                          cmp eax, 0x172	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401161d	     0xf8484000000	                            je 0x40116a7	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011623	      0x3d73010000	                          cmp eax, 0x173	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011628	            0x7475	                            je 0x401169f	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401162a	      0xe9be000000	                           jmp 0x40116ed	     10105	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401162f	      0x3d78010000	                          cmp eax, 0x178	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011634	            0x7469	                            je 0x401169f	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011636	      0x3d79010000	                          cmp eax, 0x179	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401163b	            0x747c	                            je 0x40116b9	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401163d	      0xe9ab000000	                           jmp 0x40116ed	     10105	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011642	      0x3d8b010000	                          cmp eax, 0x18b	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011647	            0x7456	                            je 0x401169f	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011649	      0x3d8b010000	                          cmp eax, 0x18b	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401164e	            0x771b	                            ja 0x401166b	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011650	      0x3d89010000	                          cmp eax, 0x189	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011655	            0x7750	                            ja 0x40116a7	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011657	      0x3d88010000	                          cmp eax, 0x188	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401165c	            0x7341	                           jae 0x401169f	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401165e	      0x3d86010000	                          cmp eax, 0x186	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011663	     0xf8284000000	                            jb 0x40116ed	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011669	            0xeb3c	                           jmp 0x40116a7	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401166b	      0x3d95010000	                          cmp eax, 0x195	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011670	            0x7447	                            je 0x40116b9	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011672	      0x3d95010000	                          cmp eax, 0x195	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011677	            0x7710	                            ja 0x4011689	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011679	      0x3d8c010000	                          cmp eax, 0x18c	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401167e	            0x7427	                            je 0x40116a7	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011680	      0x3d94010000	                          cmp eax, 0x194	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011685	            0x7418	                            je 0x401169f	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011687	            0xeb64	                           jmp 0x40116ed	     10105	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011689	      0x2da3050000	                          sub eax, 0x5a3	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401168e	          0x83f801	                              cmp eax, 1	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011691	            0x775a	                            ja 0x40116ed	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011693	            0xeb4a	                           jmp 0x40116df	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x4011695	    0x48c745e8fcff	mov qword [rbp - 0x18], 0xfffffffffffffffc	     10067	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401169d	            0xeb4f	                           jmp 0x40116ee	     10068	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x401169f	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     10080	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10089	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_11
0x40116ab	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10089	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_11
0x40116af	          0x4889c7	                            mov rdi, rax	     10089	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_11
0x40116b2	      0xe800000000	                          call 0x40116b7	     10089	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_11
0x40116b7	            0xeb35	                           jmp 0x40116ee	     10090	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116b9	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     10094	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10095	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_12
0x40116c5	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10095	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_12
0x40116c9	          0x4889c7	                            mov rdi, rax	     10095	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_12
0x40116cc	      0xe800000000	                          call 0x40116d1	     10095	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_12
0x40116d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10096	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116d5	           0xfb610	                   movzx edx, byte [rax]	     10096	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116d8	          0x83e2df	                     and edx, 0xffffffdf	     10096	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116db	            0x8810	                      mov byte [rax], dl	     10096	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116dd	            0xeb7d	                           jmp 0x401175c	     10097	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10101	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116e3	           0xfb610	                   movzx edx, byte [rax]	     10101	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116e6	          0x83e2df	                     and edx, 0xffffffdf	     10101	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116e9	            0x8810	                      mov byte [rax], dl	     10101	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116eb	            0xeb6f	                           jmp 0x401175c	     10102	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116ed	              0x90	                                     nop	     10105	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x40116ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10108	tc-i386.c	FUNCTION_117
0x40116f2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     10108	tc-i386.c	FUNCTION_117
0x40116f6	          0x488910	                    mov qword [rax], rdx	     10108	tc-i386.c	FUNCTION_117
0x40116f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10112	tc-i386.c	FUNCTION_117	IF_10
0x40116fd	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10112	tc-i386.c	FUNCTION_117	IF_10
0x4011701	          0x4885c0	                           test rax, rax	     10112	tc-i386.c	FUNCTION_117	IF_10
0x4011704	            0x750e	                           jne 0x4011714	     10112	tc-i386.c	FUNCTION_117	IF_10
0x4011706	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10113	tc-i386.c	FUNCTION_117	IF_10
0x401170a	           0xfb610	                   movzx edx, byte [rax]	     10113	tc-i386.c	FUNCTION_117	IF_10
0x401170d	          0x83ca20	                            or edx, 0x20	     10113	tc-i386.c	FUNCTION_117	IF_10
0x4011710	            0x8810	                      mov byte [rax], dl	     10113	tc-i386.c	FUNCTION_117	IF_10
0x4011712	            0xeb2a	                           jmp 0x401173e	     10113	tc-i386.c	FUNCTION_117	IF_10
0x4011714	    0x8b0500000000	            mov eax, dword [0x0401171a] 	     10124	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x401171a	            0x85c0	                           test eax, eax	     10124	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x401171c	            0x7420	                            je 0x401173e	     10124	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x401171e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10126	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x4011722	           0xfb610	                   movzx edx, byte [rax]	     10126	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x4011725	          0x83ca40	                            or edx, 0x40	     10126	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x4011728	            0x8810	                      mov byte [rax], dl	     10126	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x401172a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10128	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x401172e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     10128	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x4011732	        0x48895058	             mov qword [rax + 0x58], rdx	     10128	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x4011736	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     10129	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x401173e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x4011742	         0xfb64002	               movzx eax, byte [rax + 2]	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x4011746	           0xfb6d0	                           movzx edx, al	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x4011749	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x401174d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x4011751	          0x4889ce	                            mov rsi, rcx	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x4011754	          0x4889c7	                            mov rdi, rax	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x4011757	      0xe800000000	                          call 0x401175c	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x401175c	              0xc9	                                   leave	     10133	tc-i386.c	FUNCTION_117
0x401175d	              0xc3	                                     ret	     10133	tc-i386.c	FUNCTION_117
cpu_flags_all_zero	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,3:ELSE,0:DO,0	28
0x400055e	              0x55	                                push rbp	      1568	tc-i386.c	FUNCTION_10
0x400055f	          0x4889e5	                            mov rbp, rsp	      1568	tc-i386.c	FUNCTION_10
0x4000562	        0x48897df8	                mov qword [rbp - 8], rdi	      1568	tc-i386.c	FUNCTION_10
0x4000566	        0x488b45f8	                mov rax, qword [rbp - 8]	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x400056a	          0x8b400c	              mov eax, dword [rax + 0xc]	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x400056d	            0x85c0	                           test eax, eax	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x400056f	            0x7407	                            je 0x4000578	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4000571	      0xb800000000	                              mov eax, 0	      1573	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4000576	            0xeb32	                           jmp 0x40005aa	      1573	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4000578	        0x488b45f8	                mov rax, qword [rbp - 8]	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x400057c	          0x8b4008	                mov eax, dword [rax + 8]	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x400057f	            0x85c0	                           test eax, eax	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4000581	            0x7407	                            je 0x400058a	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4000583	      0xb800000000	                              mov eax, 0	      1577	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4000588	            0xeb20	                           jmp 0x40005aa	      1577	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x400058a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x400058e	          0x8b4004	                mov eax, dword [rax + 4]	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x4000591	            0x85c0	                           test eax, eax	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x4000593	            0x7407	                            je 0x400059c	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x4000595	      0xb800000000	                              mov eax, 0	      1581	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x400059a	            0xeb0e	                           jmp 0x40005aa	      1581	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x400059c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1584	tc-i386.c	FUNCTION_10	SWITCH_1
0x40005a0	            0x8b00	                    mov eax, dword [rax]	      1584	tc-i386.c	FUNCTION_10	SWITCH_1
0x40005a2	            0x85c0	                           test eax, eax	      1584	tc-i386.c	FUNCTION_10	SWITCH_1
0x40005a4	           0xf94c0	                                 sete al	      1584	tc-i386.c	FUNCTION_10	SWITCH_1
0x40005a7	           0xfb6c0	                           movzx eax, al	      1584	tc-i386.c	FUNCTION_10	SWITCH_1
0x40005aa	              0x5d	                                 pop rbp	      1588	tc-i386.c	FUNCTION_10
0x40005ab	              0xc3	                                     ret	      1588	tc-i386.c	FUNCTION_10
update_code_flag	CALL,3:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,5:ELSE,3:DO,0	78
0x4001c95	              0x55	                                push rbp	      2398	tc-i386.c	FUNCTION_41
0x4001c96	          0x4889e5	                            mov rbp, rsp	      2398	tc-i386.c	FUNCTION_41
0x4001c99	              0x53	                                push rbx	      2398	tc-i386.c	FUNCTION_41
0x4001c9a	        0x4883ec28	                           sub rsp, 0x28	      2398	tc-i386.c	FUNCTION_41
0x4001c9e	          0x897ddc	             mov dword [rbp - 0x24], edi	      2398	tc-i386.c	FUNCTION_41
0x4001ca1	          0x8975d8	             mov dword [rbp - 0x28], esi	      2398	tc-i386.c	FUNCTION_41
0x4001ca4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2401	tc-i386.c	FUNCTION_41
0x4001ca7	    0x890500000000	            mov dword [0x04001cad], eax 	      2401	tc-i386.c	FUNCTION_41
0x4001cad	    0x8b0500000000	            mov eax, dword [0x04001cb3] 	      2402	tc-i386.c	FUNCTION_41	IF_1
0x4001cb3	          0x83f802	                              cmp eax, 2	      2402	tc-i386.c	FUNCTION_41	IF_1
0x4001cb6	            0x7522	                           jne 0x4001cda	      2402	tc-i386.c	FUNCTION_41	IF_1
0x4001cb8	     0xfb605000000	           movzx eax, byte [0x04001cbf] 	      2404	tc-i386.c	FUNCTION_41	IF_1
0x4001cbf	          0x83c840	                            or eax, 0x40	      2404	tc-i386.c	FUNCTION_41	IF_1
0x4001cc2	    0x880500000000	               mov byte [0x04001cc8], al	      2404	tc-i386.c	FUNCTION_41	IF_1
0x4001cc8	     0xfb605000000	           movzx eax, byte [0x04001ccf] 	      2405	tc-i386.c	FUNCTION_41	IF_1
0x4001ccf	          0x83e07f	                           and eax, 0x7f	      2405	tc-i386.c	FUNCTION_41	IF_1
0x4001cd2	    0x880500000000	               mov byte [0x04001cd8], al	      2405	tc-i386.c	FUNCTION_41	IF_1
0x4001cd8	            0xeb20	                           jmp 0x4001cfa	      2405	tc-i386.c	FUNCTION_41	IF_1
0x4001cda	     0xfb605000000	           movzx eax, byte [0x04001ce1] 	      2409	tc-i386.c	FUNCTION_41	ELSE_1
0x4001ce1	          0x83e0bf	                     and eax, 0xffffffbf	      2409	tc-i386.c	FUNCTION_41	ELSE_1
0x4001ce4	    0x880500000000	               mov byte [0x04001cea], al	      2409	tc-i386.c	FUNCTION_41	ELSE_1
0x4001cea	     0xfb605000000	           movzx eax, byte [0x04001cf1] 	      2410	tc-i386.c	FUNCTION_41	ELSE_1
0x4001cf1	          0x83c880	                      or eax, 0xffffff80	      2410	tc-i386.c	FUNCTION_41	ELSE_1
0x4001cf4	    0x880500000000	               mov byte [0x04001cfa], al	      2410	tc-i386.c	FUNCTION_41	ELSE_1
0x4001cfa	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      2412	tc-i386.c	FUNCTION_41	IF_2
0x4001cfe	            0x755d	                           jne 0x4001d5d	      2412	tc-i386.c	FUNCTION_41	IF_2
0x4001d00	     0xfb605000000	           movzx eax, byte [0x04001d07] 	      2412	tc-i386.c	FUNCTION_41	IF_2
0x4001d07	          0x83e002	                              and eax, 2	      2412	tc-i386.c	FUNCTION_41	IF_2
0x4001d0a	            0x84c0	                             test al, al	      2412	tc-i386.c	FUNCTION_41	IF_2
0x4001d0c	            0x754f	                           jne 0x4001d5d	      2412	tc-i386.c	FUNCTION_41	IF_2
0x4001d0e	        0x837dd800	               cmp dword [rbp - 0x28], 0	      2414	tc-i386.c	FUNCTION_41	IF_2	IF_3
0x4001d12	            0x740a	                            je 0x4001d1e	      2414	tc-i386.c	FUNCTION_41	IF_2	IF_3
0x4001d14	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2415	tc-i386.c	FUNCTION_41	IF_2	IF_3
0x4001d1c	            0xeb08	                           jmp 0x4001d26	      2415	tc-i386.c	FUNCTION_41	IF_2	IF_3
0x4001d1e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2417	tc-i386.c	FUNCTION_41	IF_2	ELSE_2
0x4001d26	    0x488b05000000	            mov rax, qword [0x04001d2d] 	      2419	tc-i386.c	FUNCTION_41	IF_2
0x4001d2d	          0x4885c0	                           test rax, rax	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d30	            0x7409	                            je 0x4001d3b	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d32	    0x488b1d000000	            mov rbx, qword [0x04001d39] 	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d39	            0xeb07	                           jmp 0x4001d42	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d3b	    0x488b1d000000	            mov rbx, qword [0x04001d42] 	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d42	      0xbf00000000	                              mov edi, 0	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d47	      0xe800000000	                          call 0x4001d4c	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d4c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d50	          0x4889de	                            mov rsi, rbx	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d53	          0x4889c7	                            mov rdi, rax	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d56	      0xb800000000	                              mov eax, 0	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d5b	            0xffd2	                                call rdx	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4001d5d	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4001d61	            0x755d	                           jne 0x4001dc0	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4001d63	     0xfb605000000	           movzx eax, byte [0x04001d6a] 	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4001d6a	          0x83e004	                              and eax, 4	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4001d6d	            0x84c0	                             test al, al	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4001d6f	            0x754f	                           jne 0x4001dc0	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4001d71	        0x837dd800	               cmp dword [rbp - 0x28], 0	      2423	tc-i386.c	FUNCTION_41	IF_4	IF_5
0x4001d75	            0x740a	                            je 0x4001d81	      2423	tc-i386.c	FUNCTION_41	IF_4	IF_5
0x4001d77	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2424	tc-i386.c	FUNCTION_41	IF_4	IF_5
0x4001d7f	            0xeb08	                           jmp 0x4001d89	      2424	tc-i386.c	FUNCTION_41	IF_4	IF_5
0x4001d81	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2426	tc-i386.c	FUNCTION_41	IF_4	ELSE_3
0x4001d89	    0x488b05000000	            mov rax, qword [0x04001d90] 	      2428	tc-i386.c	FUNCTION_41	IF_4
0x4001d90	          0x4885c0	                           test rax, rax	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001d93	            0x7409	                            je 0x4001d9e	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001d95	    0x488b1d000000	            mov rbx, qword [0x04001d9c] 	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001d9c	            0xeb07	                           jmp 0x4001da5	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001d9e	    0x488b1d000000	            mov rbx, qword [0x04001da5] 	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001da5	      0xbf00000000	                              mov edi, 0	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001daa	      0xe800000000	                          call 0x4001daf	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001daf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001db3	          0x4889de	                            mov rsi, rbx	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001db6	          0x4889c7	                            mov rdi, rax	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001db9	      0xb800000000	                              mov eax, 0	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001dbe	            0xffd2	                                call rdx	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4001dc0	    0xc60500000000	                mov byte [0x04001dc7], 0	      2430	tc-i386.c	FUNCTION_41
0x4001dc7	              0x90	                                     nop	      2431	tc-i386.c	FUNCTION_41
0x4001dc8	        0x4883c428	                           add rsp, 0x28	      2431	tc-i386.c	FUNCTION_41
0x4001dcc	              0x5b	                                 pop rbx	      2431	tc-i386.c	FUNCTION_41
0x4001dcd	              0x5d	                                 pop rbp	      2431	tc-i386.c	FUNCTION_41
0x4001dce	              0xc3	                                     ret	      2431	tc-i386.c	FUNCTION_41
match_simd_size	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	54
0x4000d83	              0x55	                                push rbp	      1927	tc-i386.c	FUNCTION_23
0x4000d84	          0x4889e5	                            mov rbp, rsp	      1927	tc-i386.c	FUNCTION_23
0x4000d87	        0x48897df8	                mov qword [rbp - 8], rdi	      1927	tc-i386.c	FUNCTION_23
0x4000d8b	          0x8975f4	              mov dword [rbp - 0xc], esi	      1927	tc-i386.c	FUNCTION_23
0x4000d8e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1928	tc-i386.c	FUNCTION_23
0x4000d91	        0x4883c00e	                            add rax, 0xe	      1928	tc-i386.c	FUNCTION_23
0x4000d95	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1928	tc-i386.c	FUNCTION_23
0x4000d9d	          0xc0e803	                               shr al, 3	      1928	tc-i386.c	FUNCTION_23
0x4000da0	          0x83e001	                              and eax, 1	      1928	tc-i386.c	FUNCTION_23
0x4000da3	            0x84c0	                             test al, al	      1928	tc-i386.c	FUNCTION_23
0x4000da5	            0x741a	                            je 0x4000dc1	      1928	tc-i386.c	FUNCTION_23
0x4000da7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1929	tc-i386.c	FUNCTION_23
0x4000dab	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1929	tc-i386.c	FUNCTION_23
0x4000dae	        0x4883c206	                              add rdx, 6	      1929	tc-i386.c	FUNCTION_23
0x4000db2	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      1929	tc-i386.c	FUNCTION_23
0x4000db7	          0xc0e803	                               shr al, 3	      1929	tc-i386.c	FUNCTION_23
0x4000dba	          0x83e001	                              and eax, 1	      1929	tc-i386.c	FUNCTION_23
0x4000dbd	            0x84c0	                             test al, al	      1929	tc-i386.c	FUNCTION_23
0x4000dbf	            0x746d	                            je 0x4000e2e	      1929	tc-i386.c	FUNCTION_23
0x4000dc1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1930	tc-i386.c	FUNCTION_23
0x4000dc4	        0x4883c00e	                            add rax, 0xe	      1930	tc-i386.c	FUNCTION_23
0x4000dc8	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1930	tc-i386.c	FUNCTION_23
0x4000dd0	          0xc0e804	                               shr al, 4	      1930	tc-i386.c	FUNCTION_23
0x4000dd3	          0x83e001	                              and eax, 1	      1930	tc-i386.c	FUNCTION_23
0x4000dd6	            0x84c0	                             test al, al	      1930	tc-i386.c	FUNCTION_23
0x4000dd8	            0x741a	                            je 0x4000df4	      1930	tc-i386.c	FUNCTION_23
0x4000dda	        0x488b45f8	                mov rax, qword [rbp - 8]	      1931	tc-i386.c	FUNCTION_23
0x4000dde	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1931	tc-i386.c	FUNCTION_23
0x4000de1	        0x4883c206	                              add rdx, 6	      1931	tc-i386.c	FUNCTION_23
0x4000de5	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      1931	tc-i386.c	FUNCTION_23
0x4000dea	          0xc0e804	                               shr al, 4	      1931	tc-i386.c	FUNCTION_23
0x4000ded	          0x83e001	                              and eax, 1	      1931	tc-i386.c	FUNCTION_23
0x4000df0	            0x84c0	                             test al, al	      1931	tc-i386.c	FUNCTION_23
0x4000df2	            0x743a	                            je 0x4000e2e	      1931	tc-i386.c	FUNCTION_23
0x4000df4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1932	tc-i386.c	FUNCTION_23
0x4000df7	        0x4883c00e	                            add rax, 0xe	      1932	tc-i386.c	FUNCTION_23
0x4000dfb	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1932	tc-i386.c	FUNCTION_23
0x4000e03	          0xc0e805	                               shr al, 5	      1932	tc-i386.c	FUNCTION_23
0x4000e06	          0x83e001	                              and eax, 1	      1932	tc-i386.c	FUNCTION_23
0x4000e09	            0x84c0	                             test al, al	      1928	tc-i386.c	FUNCTION_23
0x4000e0b	            0x741a	                            je 0x4000e27	      1928	tc-i386.c	FUNCTION_23
0x4000e0d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1933	tc-i386.c	FUNCTION_23
0x4000e11	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1933	tc-i386.c	FUNCTION_23
0x4000e14	        0x4883c206	                              add rdx, 6	      1933	tc-i386.c	FUNCTION_23
0x4000e18	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      1933	tc-i386.c	FUNCTION_23
0x4000e1d	          0xc0e805	                               shr al, 5	      1933	tc-i386.c	FUNCTION_23
0x4000e20	          0x83e001	                              and eax, 1	      1933	tc-i386.c	FUNCTION_23
0x4000e23	            0x84c0	                             test al, al	      1933	tc-i386.c	FUNCTION_23
0x4000e25	            0x7407	                            je 0x4000e2e	      1933	tc-i386.c	FUNCTION_23
0x4000e27	      0xb801000000	                              mov eax, 1	      1928	tc-i386.c	FUNCTION_23
0x4000e2c	            0xeb05	                           jmp 0x4000e33	      1928	tc-i386.c	FUNCTION_23
0x4000e2e	      0xb800000000	                              mov eax, 0	      1928	tc-i386.c	FUNCTION_23
0x4000e33	              0x5d	                                 pop rbp	      1934	tc-i386.c	FUNCTION_23
0x4000e34	              0xc3	                                     ret	      1934	tc-i386.c	FUNCTION_23
md_section_align	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	7
0x40139b5	              0x55	                                push rbp	     11201	tc-i386.c	FUNCTION_130
0x40139b6	          0x4889e5	                            mov rbp, rsp	     11201	tc-i386.c	FUNCTION_130
0x40139b9	        0x48897df8	                mov qword [rbp - 8], rdi	     11201	tc-i386.c	FUNCTION_130
0x40139bd	        0x488975f0	             mov qword [rbp - 0x10], rsi	     11201	tc-i386.c	FUNCTION_130
0x40139c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11217	tc-i386.c	
0x40139c5	              0x5d	                                 pop rbp	     11218	tc-i386.c	FUNCTION_132
0x40139c6	              0xc3	                                     ret	     11218	tc-i386.c	FUNCTION_132
cpu_flags_check_cpu64	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	26
0x4000619	              0x55	                                push rbp	      1618	tc-i386.c	FUNCTION_12
0x400061a	          0x4889e5	                            mov rbp, rsp	      1618	tc-i386.c	FUNCTION_12
0x400061d	          0x4889f8	                            mov rax, rdi	      1618	tc-i386.c	FUNCTION_12
0x4000620	          0x4889f1	                            mov rcx, rsi	      1618	tc-i386.c	FUNCTION_12
0x4000623	          0x4889ca	                            mov rdx, rcx	      1618	tc-i386.c	FUNCTION_12
0x4000626	        0x488945f0	             mov qword [rbp - 0x10], rax	      1618	tc-i386.c	FUNCTION_12
0x400062a	        0x488955f8	                mov qword [rbp - 8], rdx	      1618	tc-i386.c	FUNCTION_12
0x400062e	    0x8b0500000000	            mov eax, dword [0x04000634] 	      1619	tc-i386.c	FUNCTION_12
0x4000634	          0x83f802	                              cmp eax, 2	      1619	tc-i386.c	FUNCTION_12
0x4000637	            0x750b	                           jne 0x4000644	      1619	tc-i386.c	FUNCTION_12
0x4000639	         0xfb645fc	               movzx eax, byte [rbp - 4]	      1619	tc-i386.c	FUNCTION_12
0x400063d	          0x83e080	                     and eax, 0xffffff80	      1619	tc-i386.c	FUNCTION_12
0x4000640	            0x84c0	                             test al, al	      1619	tc-i386.c	FUNCTION_12
0x4000642	            0x751d	                           jne 0x4000661	      1619	tc-i386.c	FUNCTION_12
0x4000644	    0x8b0500000000	            mov eax, dword [0x0400064a] 	      1620	tc-i386.c	FUNCTION_12
0x400064a	          0x83f802	                              cmp eax, 2	      1619	tc-i386.c	FUNCTION_12
0x400064d	            0x740b	                            je 0x400065a	      1619	tc-i386.c	FUNCTION_12
0x400064f	         0xfb645fc	               movzx eax, byte [rbp - 4]	      1620	tc-i386.c	FUNCTION_12
0x4000653	          0x83e040	                           and eax, 0x40	      1620	tc-i386.c	FUNCTION_12
0x4000656	            0x84c0	                             test al, al	      1620	tc-i386.c	FUNCTION_12
0x4000658	            0x7507	                           jne 0x4000661	      1620	tc-i386.c	FUNCTION_12
0x400065a	      0xb801000000	                              mov eax, 1	      1619	tc-i386.c	FUNCTION_12
0x400065f	            0xeb05	                           jmp 0x4000666	      1619	tc-i386.c	FUNCTION_12
0x4000661	      0xb800000000	                              mov eax, 0	      1619	tc-i386.c	FUNCTION_12
0x4000666	              0x5d	                                 pop rbp	      1621	tc-i386.c	FUNCTION_12
0x4000667	              0xc3	                                     ret	      1621	tc-i386.c	FUNCTION_12
swap_2_operands	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,9:ELSE,3:DO,0	123
0x40061cf	              0x55	                                push rbp	      4678	tc-i386.c	FUNCTION_71
0x40061d0	          0x4889e5	                            mov rbp, rsp	      4678	tc-i386.c	FUNCTION_71
0x40061d3	        0x4883ec40	                           sub rsp, 0x40	      4678	tc-i386.c	FUNCTION_71
0x40061d7	          0x897dcc	             mov dword [rbp - 0x34], edi	      4678	tc-i386.c	FUNCTION_71
0x40061da	          0x8975c8	             mov dword [rbp - 0x38], esi	      4678	tc-i386.c	FUNCTION_71
0x40061dd	    0x64488b042528	                mov rax, qword fs:[0x28]	      4678	tc-i386.c	FUNCTION_71
0x40061e6	        0x488945f8	                mov qword [rbp - 8], rax	      4678	tc-i386.c	FUNCTION_71
0x40061ea	            0x31c0	                            xor eax, eax	      4678	tc-i386.c	FUNCTION_71
0x40061ec	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      4683	tc-i386.c	FUNCTION_71
0x40061ef	            0x4898	                                    cdqe	      4683	tc-i386.c	FUNCTION_71
0x40061f1	        0x4883c00e	                            add rax, 0xe	      4683	tc-i386.c	FUNCTION_71
0x40061f5	    0x488b04c50000	                  mov rax, qword [rax*8]	      4683	tc-i386.c	FUNCTION_71
0x40061fd	        0x488945f0	             mov qword [rbp - 0x10], rax	      4683	tc-i386.c	FUNCTION_71
0x4006201	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      4684	tc-i386.c	FUNCTION_71
0x4006204	            0x4898	                                    cdqe	      4684	tc-i386.c	FUNCTION_71
0x4006206	        0x488d500e	                    lea rdx, [rax + 0xe]	      4684	tc-i386.c	FUNCTION_71
0x400620a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4684	tc-i386.c	FUNCTION_71
0x400620d	            0x4898	                                    cdqe	      4684	tc-i386.c	FUNCTION_71
0x400620f	        0x4883c00e	                            add rax, 0xe	      4684	tc-i386.c	FUNCTION_71
0x4006213	    0x488b04c50000	                  mov rax, qword [rax*8]	      4684	tc-i386.c	FUNCTION_71
0x400621b	    0x488904d50000	                  mov qword [rdx*8], rax	      4684	tc-i386.c	FUNCTION_71
0x4006223	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4685	tc-i386.c	FUNCTION_71
0x4006226	            0x4898	                                    cdqe	      4685	tc-i386.c	FUNCTION_71
0x4006228	        0x488d500e	                    lea rdx, [rax + 0xe]	      4685	tc-i386.c	FUNCTION_71
0x400622c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4685	tc-i386.c	FUNCTION_71
0x4006230	    0x488904d50000	                  mov qword [rdx*8], rax	      4685	tc-i386.c	FUNCTION_71
0x4006238	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      4686	tc-i386.c	FUNCTION_71
0x400623b	            0x4898	                                    cdqe	      4686	tc-i386.c	FUNCTION_71
0x400623d	        0x4883c014	                           add rax, 0x14	      4686	tc-i386.c	FUNCTION_71
0x4006241	    0x488b04c50000	                  mov rax, qword [rax*8]	      4686	tc-i386.c	FUNCTION_71
0x4006249	        0x488945e0	             mov qword [rbp - 0x20], rax	      4686	tc-i386.c	FUNCTION_71
0x400624d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      4687	tc-i386.c	FUNCTION_71
0x4006250	            0x4898	                                    cdqe	      4687	tc-i386.c	FUNCTION_71
0x4006252	        0x488d5014	                   lea rdx, [rax + 0x14]	      4687	tc-i386.c	FUNCTION_71
0x4006256	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4687	tc-i386.c	FUNCTION_71
0x4006259	            0x4898	                                    cdqe	      4687	tc-i386.c	FUNCTION_71
0x400625b	        0x4883c014	                           add rax, 0x14	      4687	tc-i386.c	FUNCTION_71
0x400625f	    0x488b04c50000	                  mov rax, qword [rax*8]	      4687	tc-i386.c	FUNCTION_71
0x4006267	    0x488904d50000	                  mov qword [rdx*8], rax	      4687	tc-i386.c	FUNCTION_71
0x400626f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4688	tc-i386.c	FUNCTION_71
0x4006272	            0x4898	                                    cdqe	      4688	tc-i386.c	FUNCTION_71
0x4006274	        0x488d5014	                   lea rdx, [rax + 0x14]	      4688	tc-i386.c	FUNCTION_71
0x4006278	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4688	tc-i386.c	FUNCTION_71
0x400627c	    0x488904d50000	                  mov qword [rdx*8], rax	      4688	tc-i386.c	FUNCTION_71
0x4006284	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      4689	tc-i386.c	FUNCTION_71
0x4006287	            0x4898	                                    cdqe	      4689	tc-i386.c	FUNCTION_71
0x4006289	        0x4883c034	                           add rax, 0x34	      4689	tc-i386.c	FUNCTION_71
0x400628d	    0x8b0485000000	                  mov eax, dword [rax*4]	      4689	tc-i386.c	FUNCTION_71
0x4006294	          0x8945dc	             mov dword [rbp - 0x24], eax	      4689	tc-i386.c	FUNCTION_71
0x4006297	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4690	tc-i386.c	FUNCTION_71
0x400629a	            0x4898	                                    cdqe	      4690	tc-i386.c	FUNCTION_71
0x400629c	        0x4883c034	                           add rax, 0x34	      4690	tc-i386.c	FUNCTION_71
0x40062a0	    0x8b0485000000	                  mov eax, dword [rax*4]	      4690	tc-i386.c	FUNCTION_71
0x40062a7	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      4690	tc-i386.c	FUNCTION_71
0x40062aa	          0x4863d2	                         movsxd rdx, edx	      4690	tc-i386.c	FUNCTION_71
0x40062ad	        0x4883c234	                           add rdx, 0x34	      4690	tc-i386.c	FUNCTION_71
0x40062b1	    0x890495000000	                  mov dword [rdx*4], eax	      4690	tc-i386.c	FUNCTION_71
0x40062b8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4691	tc-i386.c	FUNCTION_71
0x40062bb	            0x4898	                                    cdqe	      4691	tc-i386.c	FUNCTION_71
0x40062bd	        0x488d5034	                   lea rdx, [rax + 0x34]	      4691	tc-i386.c	FUNCTION_71
0x40062c1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4691	tc-i386.c	FUNCTION_71
0x40062c4	    0x890495000000	                  mov dword [rdx*4], eax	      4691	tc-i386.c	FUNCTION_71
0x40062cb	    0x488b05000000	            mov rax, qword [0x040062d2] 	      4693	tc-i386.c	FUNCTION_71	IF_1
0x40062d2	          0x4885c0	                           test rax, rax	      4693	tc-i386.c	FUNCTION_71	IF_1
0x40062d5	            0x743a	                            je 0x4006311	      4693	tc-i386.c	FUNCTION_71	IF_1
0x40062d7	    0x488b05000000	            mov rax, qword [0x040062de] 	      4695	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x40062de	          0x8b400c	              mov eax, dword [rax + 0xc]	      4695	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x40062e1	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      4695	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x40062e4	            0x750f	                           jne 0x40062f5	      4695	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x40062e6	    0x488b05000000	            mov rax, qword [0x040062ed] 	      4696	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x40062ed	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      4696	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x40062f0	          0x89500c	              mov dword [rax + 0xc], edx	      4696	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x40062f3	            0xeb1c	                           jmp 0x4006311	      4696	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x40062f5	    0x488b05000000	            mov rax, qword [0x040062fc] 	      4697	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x40062fc	          0x8b400c	              mov eax, dword [rax + 0xc]	      4697	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x40062ff	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      4697	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x4006302	            0x750d	                           jne 0x4006311	      4697	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x4006304	    0x488b05000000	            mov rax, qword [0x0400630b] 	      4698	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x400630b	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      4698	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x400630e	          0x89500c	              mov dword [rax + 0xc], edx	      4698	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x4006311	    0x488b05000000	            mov rax, qword [0x04006318] 	      4700	tc-i386.c	FUNCTION_71	IF_4
0x4006318	          0x4885c0	                           test rax, rax	      4700	tc-i386.c	FUNCTION_71	IF_4
0x400631b	            0x743a	                            je 0x4006357	      4700	tc-i386.c	FUNCTION_71	IF_4
0x400631d	    0x488b05000000	            mov rax, qword [0x04006324] 	      4702	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4006324	          0x8b4004	                mov eax, dword [rax + 4]	      4702	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4006327	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      4702	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x400632a	            0x750f	                           jne 0x400633b	      4702	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x400632c	    0x488b05000000	            mov rax, qword [0x04006333] 	      4703	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4006333	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      4703	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4006336	          0x895004	                mov dword [rax + 4], edx	      4703	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4006339	            0xeb1c	                           jmp 0x4006357	      4703	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x400633b	    0x488b05000000	            mov rax, qword [0x04006342] 	      4704	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x4006342	          0x8b4004	                mov eax, dword [rax + 4]	      4704	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x4006345	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      4704	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x4006348	            0x750d	                           jne 0x4006357	      4704	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x400634a	    0x488b05000000	            mov rax, qword [0x04006351] 	      4705	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x4006351	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      4705	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x4006354	          0x895004	                mov dword [rax + 4], edx	      4705	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x4006357	    0x488b05000000	            mov rax, qword [0x0400635e] 	      4707	tc-i386.c	FUNCTION_71	IF_7
0x400635e	          0x4885c0	                           test rax, rax	      4707	tc-i386.c	FUNCTION_71	IF_7
0x4006361	            0x743a	                            je 0x400639d	      4707	tc-i386.c	FUNCTION_71	IF_7
0x4006363	    0x488b05000000	            mov rax, qword [0x0400636a] 	      4709	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x400636a	          0x8b4004	                mov eax, dword [rax + 4]	      4709	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x400636d	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      4709	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x4006370	            0x750f	                           jne 0x4006381	      4709	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x4006372	    0x488b05000000	            mov rax, qword [0x04006379] 	      4710	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x4006379	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      4710	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x400637c	          0x895004	                mov dword [rax + 4], edx	      4710	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x400637f	            0xeb1c	                           jmp 0x400639d	      4714	tc-i386.c	FUNCTION_71
0x4006381	    0x488b05000000	            mov rax, qword [0x04006388] 	      4711	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x4006388	          0x8b4004	                mov eax, dword [rax + 4]	      4711	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x400638b	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      4711	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x400638e	            0x750d	                           jne 0x400639d	      4711	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x4006390	    0x488b05000000	            mov rax, qword [0x04006397] 	      4712	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x4006397	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      4712	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x400639a	          0x895004	                mov dword [rax + 4], edx	      4712	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x400639d	              0x90	                                     nop	      4714	tc-i386.c	FUNCTION_71
0x400639e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4714	tc-i386.c	FUNCTION_71
0x40063a2	    0x644833042528	                xor rax, qword fs:[0x28]	      4714	tc-i386.c	FUNCTION_71
0x40063ab	            0x7405	                            je 0x40063b2	      4714	tc-i386.c	FUNCTION_71
0x40063ad	      0xe800000000	                          call 0x40063b2	      4714	tc-i386.c	FUNCTION_71
0x40063b2	              0xc9	                                   leave	      4714	tc-i386.c	FUNCTION_71
0x40063b3	              0xc3	                                     ret	      4714	tc-i386.c	FUNCTION_71
md_operand	CALL,4:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,2:ELSE,1:DO,0	87
0x4011ee4	              0x55	                                push rbp	     10349	tc-i386.c	FUNCTION_123
0x4011ee5	          0x4889e5	                            mov rbp, rsp	     10349	tc-i386.c	FUNCTION_123
0x4011ee8	        0x4883ec30	                           sub rsp, 0x30	     10349	tc-i386.c	FUNCTION_123
0x4011eec	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     10349	tc-i386.c	FUNCTION_123
0x4011ef0	    0x64488b042528	                mov rax, qword fs:[0x28]	     10349	tc-i386.c	FUNCTION_123
0x4011ef9	        0x488945f8	                mov qword [rbp - 8], rax	     10349	tc-i386.c	FUNCTION_123
0x4011efd	            0x31c0	                            xor eax, eax	     10349	tc-i386.c	FUNCTION_123
0x4011eff	    0x488b05000000	            mov rax, qword [0x04011f06] 	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011f06	           0xfb600	                   movzx eax, byte [rax]	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011f09	           0xfbec0	                           movsx eax, al	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011f0c	          0x83f825	                           cmp eax, 0x25	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011f0f	            0x740a	                            je 0x4011f1b	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011f11	          0x83f85b	                           cmp eax, 0x5b	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011f14	            0x746e	                            je 0x4011f84	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011f16	      0xe921010000	                           jmp 0x401203c	     10384	tc-i386.c	FUNCTION_123
0x4011f1b	    0x488b05000000	            mov rax, qword [0x04011f22] 	     10356	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_1
0x4011f22	        0x488d55e8	                   lea rdx, [rbp - 0x18]	     10356	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_1
0x4011f26	          0x4889d6	                            mov rsi, rdx	     10356	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_1
0x4011f29	          0x4889c7	                            mov rdi, rax	     10356	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_1
0x4011f2c	      0xe8c6f8ffff	            call sym.parse_real_register	     10356	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_1
0x4011f31	        0x488945f0	             mov qword [rbp - 0x10], rax	     10356	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_1
0x4011f35	      0x48837df000	               cmp qword [rbp - 0x10], 0	     10357	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f3a	     0xf84fb000000	                            je 0x401203b	     10357	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f40	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10359	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f44	        0xc6401805	                mov byte [rax + 0x18], 5	     10359	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f48	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f4c	      0xba00000000	                              mov edx, 0	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f51	          0x4829d0	                            sub rax, rdx	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f54	        0x48c1f803	                              sar rax, 3	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f58	          0x4889c2	                            mov rdx, rax	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f5b	    0x48b8abaaaaaa	          movabs rax, 0xaaaaaaaaaaaaaaab	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f65	        0x480fafc2	                           imul rax, rdx	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f69	          0x4889c2	                            mov rdx, rax	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f6c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f70	        0x48895010	             mov qword [rax + 0x10], rdx	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10361	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f78	    0x488905000000	            mov qword [0x04011f7f], rax 	     10361	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x4011f7f	      0xe9b7000000	                           jmp 0x401203b	     10363	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011f84	    0x8b0500000000	            mov eax, dword [0x04011f8a] 	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x4011f8a	            0x85c0	                           test eax, eax	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x4011f8c	            0x7514	                           jne 0x4011fa2	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x4011f8e	      0xba00000000	                              mov edx, 0	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x4011f93	      0xbe7e280000	                         mov esi, 0x287e	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x4011f98	      0xbf00000000	                              mov edi, 0	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x4011f9d	      0xe800000000	                          call 0x4011fa2	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x4011fa2	    0x488b05000000	            mov rax, qword [0x04011fa9] 	     10367	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011fa9	        0x488d5001	                      lea rdx, [rax + 1]	     10367	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011fad	    0x488915000000	            mov qword [0x04011fb4], rdx 	     10367	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011fb4	        0x488945e8	             mov qword [rbp - 0x18], rax	     10367	tc-i386.c	FUNCTION_123	SWITCH_1
0x4011fb8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x4011fbc	      0xba01000000	                              mov edx, 1	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x4011fc1	          0x4889c6	                            mov rsi, rax	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x4011fc4	      0xbf00000000	                              mov edi, 0	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x4011fc9	      0xe800000000	                          call 0x4011fce	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x4011fce	    0x488b05000000	            mov rax, qword [0x04011fd5] 	     10369	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4011fd5	           0xfb600	                   movzx eax, byte [rax]	     10369	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4011fd8	            0x3c5d	                            cmp al, 0x5d	     10369	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4011fda	            0x754a	                           jne 0x4012026	     10369	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4011fdc	    0x488b05000000	            mov rax, qword [0x04011fe3] 	     10371	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4011fe3	        0x4883c001	                              add rax, 1	     10371	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4011fe7	    0x488905000000	            mov qword [0x04011fee], rax 	     10371	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4011fee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x4011ff2	          0x4889c7	                            mov rdi, rax	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x4011ff5	      0xe800000000	                          call 0x4011ffa	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x4011ffa	          0x4889c2	                            mov rdx, rax	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x4011ffd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x4012001	        0x48895008	                mov qword [rax + 8], rdx	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x4012005	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10373	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4012009	    0x48c700000000	                      mov qword [rax], 0	     10373	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4012010	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10374	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4012014	    0x48c740100000	               mov qword [rax + 0x10], 0	     10374	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x401201c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10375	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4012020	        0xc640181d	            mov byte [rax + 0x18], 0x1d 	     10375	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x4012024	            0xeb16	                           jmp 0x401203c	     10382	tc-i386.c	FUNCTION_123	SWITCH_1
0x4012026	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10379	tc-i386.c	FUNCTION_123	SWITCH_1	ELSE_1
0x401202a	        0xc6401801	                mov byte [rax + 0x18], 1	     10379	tc-i386.c	FUNCTION_123	SWITCH_1	ELSE_1
0x401202e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10380	tc-i386.c	FUNCTION_123	SWITCH_1	ELSE_1
0x4012032	    0x488905000000	            mov qword [0x04012039], rax 	     10380	tc-i386.c	FUNCTION_123	SWITCH_1	ELSE_1
0x4012039	            0xeb01	                           jmp 0x401203c	     10382	tc-i386.c	FUNCTION_123	SWITCH_1
0x401203b	              0x90	                                     nop	     10363	tc-i386.c	FUNCTION_123	SWITCH_1
0x401203c	              0x90	                                     nop	     10384	tc-i386.c	FUNCTION_123
0x401203d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10384	tc-i386.c	FUNCTION_123
0x4012041	    0x644833042528	                xor rax, qword fs:[0x28]	     10384	tc-i386.c	FUNCTION_123
0x401204a	            0x7405	                            je 0x4012051	     10384	tc-i386.c	FUNCTION_123
0x401204c	      0xe800000000	                          call 0x4012051	     10384	tc-i386.c	FUNCTION_123
0x4012051	              0xc9	                                   leave	     10384	tc-i386.c	FUNCTION_123
0x4012052	              0xc3	                                     ret	     10384	tc-i386.c	FUNCTION_123
check_word_reg	CALL,6:FOR,1:WHILE,0:functions,0:SWITCH,0:IF,4:ELSE,2:DO,0	179
0x4009fec	              0x55	                                push rbp	      6284	tc-i386.c	FUNCTION_83
0x4009fed	          0x4889e5	                            mov rbp, rsp	      6284	tc-i386.c	FUNCTION_83
0x4009ff0	            0x4157	                                push r15	      6284	tc-i386.c	FUNCTION_83
0x4009ff2	            0x4156	                                push r14	      6284	tc-i386.c	FUNCTION_83
0x4009ff4	            0x4155	                                push r13	      6284	tc-i386.c	FUNCTION_83
0x4009ff6	            0x4154	                                push r12	      6284	tc-i386.c	FUNCTION_83
0x4009ff8	              0x53	                                push rbx	      6284	tc-i386.c	FUNCTION_83
0x4009ff9	        0x4883ec18	                           sub rsp, 0x18	      6284	tc-i386.c	FUNCTION_83
0x4009ffd	    0x8b0500000000	            mov eax, dword [0x0400a003] 	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x400a003	          0x8945cc	             mov dword [rbp - 0x34], eax	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x400a006	      0xe96d020000	                           jmp 0x400a278	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x400a00b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400a00e	            0x4898	                                    cdqe	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400a010	        0x4883c00e	                            add rax, 0xe	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400a014	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400a01c	          0x83e001	                              and eax, 1	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400a01f	            0x84c0	                             test al, al	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400a021	            0x7505	                           jne 0x400a028	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400a023	      0xe950020000	                           jmp 0x400a278	      6289	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400a028	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a02b	            0x4898	                                    cdqe	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a02d	        0x4883c00e	                            add rax, 0xe	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a031	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a039	          0xc0e805	                               shr al, 5	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a03c	          0x83e001	                              and eax, 1	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a03f	            0x84c0	                             test al, al	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a041	     0xf84c4000000	                            je 0x400a10b	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a047	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a04a	            0x4898	                                    cdqe	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a04c	        0x4883c006	                              add rax, 6	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a050	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a058	          0x83e001	                              and eax, 1	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a05b	            0x84c0	                             test al, al	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a05d	            0x751f	                           jne 0x400a07e	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a05f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a062	            0x4898	                                    cdqe	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a064	        0x4883c006	                              add rax, 6	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a068	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a070	          0xc0e805	                               shr al, 5	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a073	          0x83e001	                              and eax, 1	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a076	            0x84c0	                             test al, al	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a078	     0xf848d000000	                            je 0x400a10b	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a07e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a081	            0x4898	                                    cdqe	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a083	        0x4883c006	                              add rax, 6	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a087	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a08f	          0xc0e806	                               shr al, 6	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a092	          0x83e001	                              and eax, 1	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a095	            0x84c0	                             test al, al	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a097	            0x7518	                           jne 0x400a0b1	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a099	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6296	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a09c	            0x4898	                                    cdqe	      6296	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a09e	        0x4883c006	                              add rax, 6	      6296	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a0a2	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6296	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a0aa	          0xc0e807	                               shr al, 7	      6296	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a0ad	            0x84c0	                             test al, al	      6296	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a0af	            0x745a	                            je 0x400a10b	      6296	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a0b1	     0xfb605000000	           movzx eax, byte [0x0400a0b8] 	      6302	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a0b8	        0x440fbef0	                          movsx r14d, al	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0bc	    0x4c8b2d000000	            mov r13, qword [0x0400a0c3] 	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0c3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6300	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a0c6	            0x4898	                                    cdqe	      6300	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a0c8	        0x4883c014	                           add rax, 0x14	      6300	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a0cc	    0x488b04c50000	                  mov rax, qword [rax*8]	      6300	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a0d4	          0x4c8b20	                    mov r12, qword [rax]	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0d7	    0x488b1d000000	            mov rbx, qword [0x0400a0de] 	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0de	      0xbf00000000	                              mov edi, 0	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0e3	      0xe800000000	                          call 0x400a0e8	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0e8	          0x4589f0	                           mov r8d, r14d	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0eb	          0x4c89e9	                            mov rcx, r13	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0ee	          0x4c89e2	                            mov rdx, r12	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0f1	          0x4889de	                            mov rsi, rbx	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0f4	          0x4889c7	                            mov rdi, rax	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0f7	      0xb800000000	                              mov eax, 0	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a0fc	      0xe800000000	                          call 0x400a101	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400a101	      0xb800000000	                              mov eax, 0	      6303	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a106	      0xe980010000	                           jmp 0x400a28b	      6303	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400a10b	    0x8b0500000000	            mov eax, dword [0x0400a111] 	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a111	            0x85c0	                           test eax, eax	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a113	            0x740f	                            je 0x400a124	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a115	    0x8b0500000000	            mov eax, dword [0x0400a11b] 	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a11b	          0x83f802	                              cmp eax, 2	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a11e	     0xf8554010000	                           jne 0x400a278	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a124	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a127	            0x4898	                                    cdqe	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a129	        0x4883c00e	                            add rax, 0xe	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a12d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a135	          0xc0e807	                               shr al, 7	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a138	            0x84c0	                             test al, al	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a13a	            0x751e	                           jne 0x400a15a	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a13c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a13f	            0x4898	                                    cdqe	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a141	        0x4883c00e	                            add rax, 0xe	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a145	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a14d	            0xd0e8	                               shr al, 1	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a14f	          0x83e001	                              and eax, 1	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a152	            0x84c0	                             test al, al	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a154	     0xf841e010000	                            je 0x400a278	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a15a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a15d	            0x4898	                                    cdqe	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a15f	        0x4883c006	                              add rax, 6	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a163	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a16b	          0x83e001	                              and eax, 1	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a16e	            0x84c0	                             test al, al	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a170	            0x751f	                           jne 0x400a191	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a172	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a175	            0x4898	                                    cdqe	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a177	        0x4883c006	                              add rax, 6	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a17b	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a183	          0xc0e805	                               shr al, 5	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a186	          0x83e001	                              and eax, 1	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a189	            0x84c0	                             test al, al	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a18b	     0xf84e7000000	                            je 0x400a278	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a191	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a194	            0x4898	                                    cdqe	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a196	        0x4883c006	                              add rax, 6	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a19a	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a1a2	          0xc0e806	                               shr al, 6	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a1a5	          0x83e001	                              and eax, 1	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a1a8	            0x84c0	                             test al, al	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a1aa	     0xf84c8000000	                            je 0x400a278	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a1b0	    0x8b0500000000	            mov eax, dword [0x0400a1b6] 	      6315	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400a1b6	          0x83f802	                              cmp eax, 2	      6315	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400a1b9	            0x7550	                           jne 0x400a20b	      6315	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400a1bb	     0xfb605000000	           movzx eax, byte [0x0400a1c2] 	      6319	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400a1c2	        0x440fbee8	                          movsx r13d, al	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400a1c6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6318	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400a1c9	            0x4898	                                    cdqe	      6318	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400a1cb	        0x4883c014	                           add rax, 0x14	      6318	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400a1cf	    0x488b04c50000	                  mov rax, qword [rax*8]	      6318	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400a1d7	          0x4c8b20	                    mov r12, qword [rax]	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400a1da	    0x488b1d000000	            mov rbx, qword [0x0400a1e1] 	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400a1e1	      0xbf00000000	                              mov edi, 0	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400a1e6	      0xe800000000	                          call 0x400a1eb	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400a1eb	          0x4489e9	                           mov ecx, r13d	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400a1ee	          0x4c89e2	                            mov rdx, r12	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400a1f1	          0x4889de	                            mov rsi, rbx	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400a1f4	          0x4889c7	                            mov rdi, rax	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400a1f7	      0xb800000000	                              mov eax, 0	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400a1fc	      0xe800000000	                          call 0x400a201	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400a201	      0xb800000000	                              mov eax, 0	      6320	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400a206	      0xe980000000	                           jmp 0x400a28b	      6320	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400a20b	     0xfb605000000	           movzx eax, byte [0x0400a212] 	      6326	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a212	        0x440fbef8	                          movsx r15d, al	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a216	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6326	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a219	            0x4898	                                    cdqe	      6326	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a21b	        0x4883c014	                           add rax, 0x14	      6326	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a21f	    0x488b04c50000	                  mov rax, qword [rax*8]	      6326	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a227	          0x4c8b30	                    mov r14, qword [rax]	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a22a	    0x4c8b2d000000	            mov r13, qword [0x0400a231] 	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a231	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6325	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a234	            0x4898	                                    cdqe	      6325	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a236	        0x4883c014	                           add rax, 0x14	      6325	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a23a	    0x488b04c50000	                  mov rax, qword [rax*8]	      6325	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a242	    0x482d80010000	                          sub rax, 0x180	      6325	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400a248	          0x4c8b20	                    mov r12, qword [rax]	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a24b	    0x488b1d000000	            mov rbx, qword [0x0400a252] 	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a252	      0xbf00000000	                              mov edi, 0	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a257	      0xe800000000	                          call 0x400a25c	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a25c	          0x4589f9	                           mov r9d, r15d	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a25f	          0x4d89f0	                             mov r8, r14	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a262	          0x4c89e9	                            mov rcx, r13	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a265	          0x4c89e2	                            mov rdx, r12	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a268	          0x4889de	                            mov rsi, rbx	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a26b	          0x4889c7	                            mov rdi, rax	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a26e	      0xb800000000	                              mov eax, 0	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a273	      0xe800000000	                          call 0x400a278	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400a278	        0x836dcc01	               sub dword [rbp - 0x34], 1	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x400a27c	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x400a280	     0xf8985fdffff	                           jns 0x400a00b	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x400a286	      0xb801000000	                              mov eax, 1	      6329	tc-i386.c	FUNCTION_83
0x400a28b	        0x4883c418	                           add rsp, 0x18	      6330	tc-i386.c	FUNCTION_83
0x400a28f	              0x5b	                                 pop rbx	      6330	tc-i386.c	FUNCTION_83
0x400a290	            0x415c	                                 pop r12	      6330	tc-i386.c	FUNCTION_83
0x400a292	            0x415d	                                 pop r13	      6330	tc-i386.c	FUNCTION_83
0x400a294	            0x415e	                                 pop r14	      6330	tc-i386.c	FUNCTION_83
0x400a296	            0x415f	                                 pop r15	      6330	tc-i386.c	FUNCTION_83
0x400a298	              0x5d	                                 pop rbp	      6330	tc-i386.c	FUNCTION_83
0x400a299	              0xc3	                                     ret	      6330	tc-i386.c	FUNCTION_83
check_VecOperands	CALL,27:FOR,4:WHILE,0:functions,0:SWITCH,1:IF,31:ELSE,4:DO,0	645
0x4006ead	              0x55	                                push rbp	      4975	tc-i386.c	ELSE_3	FUNCTION_75
0x4006eae	          0x4889e5	                            mov rbp, rsp	      4975	tc-i386.c	ELSE_3	FUNCTION_75
0x4006eb1	              0x53	                                push rbx	      4975	tc-i386.c	ELSE_3	FUNCTION_75
0x4006eb2	        0x4883ec68	                           sub rsp, 0x68	      4975	tc-i386.c	ELSE_3	FUNCTION_75
0x4006eb6	        0x48897d98	             mov qword [rbp - 0x68], rdi	      4975	tc-i386.c	ELSE_3	FUNCTION_75
0x4006eba	    0x64488b042528	                mov rax, qword fs:[0x28]	      4975	tc-i386.c	ELSE_3	FUNCTION_75
0x4006ec3	        0x488945e8	             mov qword [rbp - 0x18], rax	      4975	tc-i386.c	ELSE_3	FUNCTION_75
0x4006ec7	            0x31c0	                            xor eax, eax	      4975	tc-i386.c	ELSE_3	FUNCTION_75
0x4006ec9	    0x488b05000000	            mov rax, qword [0x04006ed0] 	      4985	tc-i386.c	ELSE_3	FUNCTION_75	CALL_1
0x4006ed0	    0x488b15000000	            mov rdx, qword [0x04006ed7] 	      4985	tc-i386.c	ELSE_3	FUNCTION_75	CALL_1
0x4006ed7	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      4985	tc-i386.c	ELSE_3	FUNCTION_75	CALL_1
0x4006edb	        0x488b7918	            mov rdi, qword [rcx + 0x18] 	      4985	tc-i386.c	ELSE_3	FUNCTION_75	CALL_1
0x4006edf	        0x488b7120	            mov rsi, qword [rcx + 0x20] 	      4985	tc-i386.c	ELSE_3	FUNCTION_75	CALL_1
0x4006ee3	          0x4889d1	                            mov rcx, rdx	      4985	tc-i386.c	ELSE_3	FUNCTION_75	CALL_1
0x4006ee6	          0x4889c2	                            mov rdx, rax	      4985	tc-i386.c	ELSE_3	FUNCTION_75	CALL_1
0x4006ee9	      0xe87a97ffff	                  call sym.cpu_flags_and	      4985	tc-i386.c	ELSE_3	FUNCTION_75	CALL_1
0x4006eee	        0x488945d0	             mov qword [rbp - 0x30], rax	      4985	tc-i386.c	ELSE_3	FUNCTION_75	CALL_1
0x4006ef2	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4985	tc-i386.c	ELSE_3	FUNCTION_75	CALL_1
0x4006ef6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4986	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	CALL_2
0x4006efa	          0x4889c7	                            mov rdi, rax	      4986	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	CALL_2
0x4006efd	      0xe85c96ffff	             call sym.cpu_flags_all_zero	      4986	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	CALL_2
0x4006f02	            0x85c0	                           test eax, eax	      4986	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	CALL_2
0x4006f04	     0xf859a000000	                           jne 0x4006fa4	      4986	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	CALL_2
0x4006f0a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4987	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x4006f0e	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	      4987	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x4006f12	          0x83e008	                              and eax, 8	      4987	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x4006f15	            0x84c0	                             test al, al	      4987	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x4006f17	     0xf8587000000	                           jne 0x4006fa4	      4987	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x4006f1d	     0xfb605000000	           movzx eax, byte [0x04006f24] 	      4988	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x4006f24	          0x83e008	                              and eax, 8	      4988	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x4006f27	            0x84c0	                             test al, al	      4988	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x4006f29	            0x7579	                           jne 0x4006fa4	      4988	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x4006f2b	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x4006f32	            0xeb64	                           jmp 0x4006f98	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x4006f34	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f38	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f3b	        0x4883c206	                              add rdx, 6	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f3f	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f44	          0xc0e805	                               shr al, 5	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f47	          0x83e001	                              and eax, 1	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f4a	            0x84c0	                             test al, al	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f4c	            0x7446	                            je 0x4006f94	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f4e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f51	        0x4883c00e	                            add rax, 0xe	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f55	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f5d	          0xc0e804	                               shr al, 4	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f60	          0x83e001	                              and eax, 1	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f63	            0x84c0	                             test al, al	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f65	            0x7519	                           jne 0x4006f80	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f67	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      4994	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f6a	        0x4883c00e	                            add rax, 0xe	      4994	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f6e	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4994	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f76	          0xc0e803	                               shr al, 3	      4994	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f79	          0x83e001	                              and eax, 1	      4994	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f7c	            0x84c0	                             test al, al	      4994	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f7e	            0x7414	                            je 0x4006f94	      4994	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f80	    0xc70500000000	               mov dword [0x04006f8a], 8	      4996	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f8a	      0xb801000000	                              mov eax, 1	      4997	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f8f	      0xe9ee080000	                           jmp 0x4007882	      4997	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x4006f94	        0x8345a801	               add dword [rbp - 0x58], 1	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x4006f98	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x4006f9c	          0x8b4008	                mov eax, dword [rax + 8]	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x4006f9f	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x4006fa2	            0x7790	                            ja 0x4006f34	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x4006fa4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5003	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fa8	         0xfb6402e	           movzx eax, byte [rax + 0x2e] 	      5003	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fac	          0x83e030	                           and eax, 0x30	      5003	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006faf	            0x84c0	                             test al, al	      5003	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fb1	            0x7556	                           jne 0x4007009	      5003	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fb3	    0x488b05000000	            mov rax, qword [0x04006fba] 	      5004	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fba	          0x4885c0	                           test rax, rax	      5004	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fbd	            0x744a	                            je 0x4007009	      5004	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fbf	    0x488b05000000	            mov rax, qword [0x04006fc6] 	      5005	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fc6	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      5005	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fca	          0x83e008	                              and eax, 8	      5005	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fcd	            0x84c0	                             test al, al	      5005	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fcf	            0x7524	                           jne 0x4006ff5	      5005	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fd1	    0x488b05000000	            mov rax, qword [0x04006fd8] 	      5006	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fd8	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      5006	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fdc	          0x83e010	                           and eax, 0x10	      5006	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fdf	            0x84c0	                             test al, al	      5006	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fe1	            0x7512	                           jne 0x4006ff5	      5006	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fe3	    0x488b05000000	            mov rax, qword [0x04006fea] 	      5007	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fea	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      5007	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fee	          0x83e020	                           and eax, 0x20	      5007	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006ff1	            0x84c0	                             test al, al	      5007	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006ff3	            0x7414	                            je 0x4007009	      5007	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006ff5	    0xc70500000000	            mov dword [0x04006fff], 0xb 	      5009	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4006fff	      0xb801000000	                              mov eax, 1	      5010	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4007004	      0xe979080000	                           jmp 0x4007882	      5010	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x4007009	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400700d	         0xfb64030	           movzx eax, byte [rax + 0x30] 	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x4007011	          0x83e008	                              and eax, 8	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x4007014	            0x84c0	                             test al, al	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x4007016	            0x7432	                            je 0x400704a	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x4007018	    0x488b05000000	            mov rax, qword [0x0400701f] 	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400701f	          0x4885c0	                           test rax, rax	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x4007022	            0x7412	                            je 0x4007036	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x4007024	    0x488b05000000	            mov rax, qword [0x0400702b] 	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400702b	          0x488b00	                    mov rax, qword [rax]	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400702e	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x4007032	            0x84c0	                             test al, al	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x4007034	            0x7514	                           jne 0x400704a	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x4007036	    0xc70500000000	           mov dword [0x04007040], 0x11 	      5017	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x4007040	      0xb801000000	                              mov eax, 1	      5018	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x4007045	      0xe938080000	                           jmp 0x4007882	      5018	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400704a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5023	tc-i386.c	ELSE_3	FUNCTION_75	IF_5
0x400704e	         0xfb6402e	           movzx eax, byte [rax + 0x2e] 	      5023	tc-i386.c	ELSE_3	FUNCTION_75	IF_5
0x4007052	          0x83e030	                           and eax, 0x30	      5023	tc-i386.c	ELSE_3	FUNCTION_75	IF_5
0x4007055	            0x84c0	                             test al, al	      5023	tc-i386.c	ELSE_3	FUNCTION_75	IF_5
0x4007057	     0xf84f5020000	                            je 0x4007352	      5023	tc-i386.c	ELSE_3	FUNCTION_75	IF_5
0x400705d	    0x488b05000000	            mov rax, qword [0x04007064] 	      5025	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007064	          0x4885c0	                           test rax, rax	      5025	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007067	            0x7463	                            je 0x40070cc	      5025	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007069	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400706d	         0xfb6402e	           movzx eax, byte [rax + 0x2e] 	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007071	          0x83e030	                           and eax, 0x30	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007074	            0x3c10	                            cmp al, 0x10	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007076	            0x7512	                           jne 0x400708a	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007078	    0x488b05000000	            mov rax, qword [0x0400707f] 	      5027	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400707f	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      5027	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007083	          0x83e008	                              and eax, 8	      5027	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007086	            0x84c0	                             test al, al	      5027	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007088	            0x7556	                           jne 0x40070e0	      5027	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400708a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5028	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400708e	         0xfb6402e	           movzx eax, byte [rax + 0x2e] 	      5028	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007092	          0x83e030	                           and eax, 0x30	      5028	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007095	            0x3c20	                            cmp al, 0x20	      5028	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007097	            0x7512	                           jne 0x40070ab	      5028	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x4007099	    0x488b05000000	            mov rax, qword [0x040070a0] 	      5029	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070a0	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      5029	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070a4	          0x83e010	                           and eax, 0x10	      5029	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070a7	            0x84c0	                             test al, al	      5029	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070a9	            0x7535	                           jne 0x40070e0	      5029	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070ab	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5030	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070af	         0xfb6402e	           movzx eax, byte [rax + 0x2e] 	      5030	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070b3	          0x83e030	                           and eax, 0x30	      5030	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070b6	            0x3c30	                            cmp al, 0x30	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070b8	            0x7512	                           jne 0x40070cc	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070ba	    0x488b05000000	            mov rax, qword [0x040070c1] 	      5031	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070c1	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      5031	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070c5	          0x83e020	                           and eax, 0x20	      5031	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070c8	            0x84c0	                             test al, al	      5031	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070ca	            0x7514	                           jne 0x40070e0	      5031	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070cc	    0xc70500000000	               mov dword [0x040070d6], 9	      5033	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070d6	      0xb801000000	                              mov eax, 1	      5034	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070db	      0xe9a2070000	                           jmp 0x4007882	      5034	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x40070e0	    0x8b0500000000	            mov eax, dword [0x040070e6] 	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x40070e6	          0x83f802	                              cmp eax, 2	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x40070e9	            0x7420	                            je 0x400710b	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x40070eb	    0x488b05000000	            mov rax, qword [0x040070f2] 	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x40070f2	          0x4885c0	                           test rax, rax	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x40070f5	            0x7514	                           jne 0x400710b	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x40070f7	      0xba00000000	                              mov edx, 0	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x40070fc	      0xbead130000	                         mov esi, 0x13ad	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x4007101	      0xbf00000000	                              mov edi, 0	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x4007106	      0xe800000000	                          call 0x400710b	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400710b	    0x8b0500000000	            mov eax, dword [0x04007111] 	      5038	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7
0x4007111	          0x83f802	                              cmp eax, 2	      5038	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7
0x4007114	     0xf8579010000	                           jne 0x4007293	      5038	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7
0x400711a	    0x488b05000000	            mov rax, qword [0x04007121] 	      5038	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7
0x4007121	          0x4885c0	                           test rax, rax	      5038	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7
0x4007124	     0xf8569010000	                           jne 0x4007293	      5038	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7
0x400712a	     0xfb605000000	           movzx eax, byte [0x04007131] 	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x4007131	          0x83e004	                              and eax, 4	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x4007134	            0x84c0	                             test al, al	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x4007136	            0x7514	                           jne 0x400714c	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x4007138	      0xba00000000	                              mov edx, 0	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400713d	      0xbeb0130000	                         mov esi, 0x13b0	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x4007142	      0xbf00000000	                              mov edi, 0	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x4007147	      0xe800000000	                          call 0x400714c	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400714c	     0xfb605000000	           movzx eax, byte [0x04007153] 	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x4007153	          0x83e008	                              and eax, 8	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x4007156	            0x84c0	                             test al, al	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x4007158	            0x7522	                           jne 0x400717c	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400715a	     0xfb605000000	           movzx eax, byte [0x04007161] 	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x4007161	          0x83e010	                           and eax, 0x10	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x4007164	            0x84c0	                             test al, al	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x4007166	            0x7514	                           jne 0x400717c	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x4007168	      0xba00000000	                              mov edx, 0	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400716d	      0xbeb2130000	                         mov esi, 0x13b2	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x4007172	      0xbf00000000	                              mov edi, 0	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x4007177	      0xe800000000	                          call 0x400717c	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400717c	     0xfb605000000	           movzx eax, byte [0x04007183] 	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x4007183	          0x83e004	                              and eax, 4	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x4007186	            0x84c0	                             test al, al	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x4007188	            0x7514	                           jne 0x400719e	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400718a	      0xba00000000	                              mov edx, 0	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400718f	      0xbeb3130000	                         mov esi, 0x13b3	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x4007194	      0xbf00000000	                              mov edi, 0	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x4007199	      0xe800000000	                          call 0x400719e	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400719e	     0xfb605000000	           movzx eax, byte [0x040071a5] 	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071a5	          0x83e008	                              and eax, 8	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071a8	            0x84c0	                             test al, al	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071aa	            0x7522	                           jne 0x40071ce	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071ac	     0xfb605000000	           movzx eax, byte [0x040071b3] 	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071b3	          0x83e010	                           and eax, 0x10	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071b6	            0x84c0	                             test al, al	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071b8	            0x7514	                           jne 0x40071ce	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071ba	      0xba00000000	                              mov edx, 0	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071bf	      0xbeb5130000	                         mov esi, 0x13b5	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071c4	      0xbf00000000	                              mov edi, 0	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071c9	      0xe800000000	                          call 0x40071ce	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x40071ce	    0x8b0500000000	            mov eax, dword [0x040071d4] 	      5046	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_8
0x40071d4	            0x85c0	                           test eax, eax	      5046	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_8
0x40071d6	            0x750a	                           jne 0x40071e2	      5046	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_8
0x40071d8	      0xb800000000	                              mov eax, 0	      5047	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_8
0x40071dd	      0xe9a0060000	                           jmp 0x4007882	      5047	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_8
0x40071e2	    0x488b05000000	            mov rax, qword [0x040071e9] 	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x40071e9	          0x4889c7	                            mov rdi, rax	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x40071ec	      0xe824a4ffff	                call sym.register_number	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x40071f1	            0x89c3	                            mov ebx, eax	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x40071f3	    0x488b05000000	            mov rax, qword [0x040071fa] 	      5049	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_9
0x40071fa	          0x4889c7	                            mov rdi, rax	      5049	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_9
0x40071fd	      0xe813a4ffff	                call sym.register_number	      5049	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_9
0x4007202	            0x39c3	                            cmp ebx, eax	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x4007204	            0x7452	                            je 0x4007258	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x4007206	    0x488b05000000	            mov rax, qword [0x0400720d] 	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x400720d	          0x4889c7	                            mov rdi, rax	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x4007210	      0xe800a4ffff	                call sym.register_number	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x4007215	            0x89c3	                            mov ebx, eax	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x4007217	    0x488b05000000	            mov rax, qword [0x0400721e] 	      5051	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_11
0x400721e	          0x4889c7	                            mov rdi, rax	      5051	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_11
0x4007221	      0xe8efa3ffff	                call sym.register_number	      5051	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_11
0x4007226	            0x39c3	                            cmp ebx, eax	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x4007228	            0x742e	                            je 0x4007258	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x400722a	    0x488b05000000	            mov rax, qword [0x04007231] 	      5052	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_12
0x4007231	          0x4889c7	                            mov rdi, rax	      5052	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_12
0x4007234	      0xe8dca3ffff	                call sym.register_number	      5052	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_12
0x4007239	            0x89c3	                            mov ebx, eax	      5052	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_12
0x400723b	    0x488b05000000	            mov rax, qword [0x04007242] 	      5053	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_13
0x4007242	          0x4889c7	                            mov rdi, rax	      5053	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_13
0x4007245	      0xe8cba3ffff	                call sym.register_number	      5053	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_13
0x400724a	            0x39c3	                            cmp ebx, eax	      5052	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_12
0x400724c	            0x740a	                            je 0x4007258	      5052	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_12
0x400724e	      0xb800000000	                              mov eax, 0	      5054	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9
0x4007253	      0xe92a060000	                           jmp 0x4007882	      5054	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9
0x4007258	    0x8b0500000000	            mov eax, dword [0x0400725e] 	      5055	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x400725e	          0x83f802	                              cmp eax, 2	      5055	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x4007261	            0x7514	                           jne 0x4007277	      5055	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x4007263	    0xc70500000000	            mov dword [0x0400726d], 0xa 	      5057	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x400726d	      0xb801000000	                              mov eax, 1	      5058	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x4007272	      0xe90b060000	                           jmp 0x4007882	      5058	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x4007277	      0xbf00000000	                              mov edi, 0	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400727c	      0xe800000000	                          call 0x4007281	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x4007281	          0x4889c7	                            mov rdi, rax	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x4007284	      0xb800000000	                              mov eax, 0	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x4007289	      0xe800000000	                          call 0x400728e	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400728e	      0xe9bf000000	                           jmp 0x4007352	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x4007293	    0x8b0500000000	            mov eax, dword [0x04007299] 	      5062	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11
0x4007299	          0x83f801	                              cmp eax, 1	      5062	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11
0x400729c	     0xf85b0000000	                           jne 0x4007352	      5062	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11
0x40072a2	    0x488b05000000	            mov rax, qword [0x040072a9] 	      5062	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11
0x40072a9	          0x4885c0	                           test rax, rax	      5062	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11
0x40072ac	     0xf84a0000000	                            je 0x4007352	      5062	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11
0x40072b2	     0xfb605000000	           movzx eax, byte [0x040072b9] 	      5064	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072b9	          0x83e004	                              and eax, 4	      5064	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072bc	            0x84c0	                             test al, al	      5064	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072be	     0xf848e000000	                            je 0x4007352	      5064	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072c4	     0xfb605000000	           movzx eax, byte [0x040072cb] 	      5065	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072cb	          0x83e008	                              and eax, 8	      5065	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072ce	            0x84c0	                             test al, al	      5065	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072d0	            0x751c	                           jne 0x40072ee	      5065	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072d2	     0xfb605000000	           movzx eax, byte [0x040072d9] 	      5066	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072d9	          0x83e010	                           and eax, 0x10	      5066	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072dc	            0x84c0	                             test al, al	      5066	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072de	            0x750e	                           jne 0x40072ee	      5066	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072e0	     0xfb605000000	           movzx eax, byte [0x040072e7] 	      5067	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072e7	          0x83e020	                           and eax, 0x20	      5067	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072ea	            0x84c0	                             test al, al	      5067	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072ec	            0x7464	                            je 0x4007352	      5067	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x40072ee	    0x488b05000000	            mov rax, qword [0x040072f5] 	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x40072f5	          0x4889c7	                            mov rdi, rax	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x40072f8	      0xe818a3ffff	                call sym.register_number	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x40072fd	            0x89c3	                            mov ebx, eax	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x40072ff	    0x488b05000000	            mov rax, qword [0x04007306] 	      5069	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_17
0x4007306	          0x4889c7	                            mov rdi, rax	      5069	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_17
0x4007309	      0xe807a3ffff	                call sym.register_number	      5069	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_17
0x400730e	            0x39c3	                            cmp ebx, eax	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x4007310	            0x7540	                           jne 0x4007352	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x4007312	    0x8b0500000000	            mov eax, dword [0x04007318] 	      5071	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x4007318	          0x83f802	                              cmp eax, 2	      5071	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x400731b	            0x7514	                           jne 0x4007331	      5071	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x400731d	    0xc70500000000	            mov dword [0x04007327], 0xa 	      5073	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x4007327	      0xb801000000	                              mov eax, 1	      5074	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x400732c	      0xe951050000	                           jmp 0x4007882	      5074	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x4007331	    0x8b0500000000	            mov eax, dword [0x04007337] 	      5076	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_14
0x4007337	            0x85c0	                           test eax, eax	      5076	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_14
0x4007339	            0x7417	                            je 0x4007352	      5076	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_14
0x400733b	      0xbf00000000	                              mov edi, 0	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x4007340	      0xe800000000	                          call 0x4007345	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x4007345	          0x4889c7	                            mov rdi, rax	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x4007348	      0xb800000000	                              mov eax, 0	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400734d	      0xe800000000	                          call 0x4007352	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x4007352	    0x488b05000000	            mov rax, qword [0x04007359] 	      5084	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x4007359	          0x4885c0	                           test rax, rax	      5084	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400735c	     0xf84f7010000	                            je 0x4007559	      5084	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x4007362	    0x488b05000000	            mov rax, qword [0x04007369] 	      5090	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x4007369	          0x8b4004	                mov eax, dword [rax + 4]	      5090	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400736c	          0x8945a8	             mov dword [rbp - 0x58], eax	      5090	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400736f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x4007373	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x4007377	          0x83e020	                           and eax, 0x20	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400737a	            0x84c0	                             test al, al	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400737c	            0x747f	                            je 0x40073fd	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400737e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x4007381	        0x4883c00e	                            add rax, 0xe	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x4007385	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400738d	          0xc0e804	                               shr al, 4	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x4007390	          0x83e001	                              and eax, 1	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x4007393	            0x84c0	                             test al, al	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x4007395	            0x7466	                            je 0x40073fd	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x4007397	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400739a	        0x4883c00e	                            add rax, 0xe	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400739e	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073a6	          0xc0e806	                               shr al, 6	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073a9	          0x83e001	                              and eax, 1	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073ac	            0x84c0	                             test al, al	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073ae	            0x7561	                           jne 0x4007411	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073b0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073b4	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073b7	        0x4883c206	                              add rdx, 6	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073bb	       0xfb644d007	      movzx eax, byte [rax + rdx*8 + 7] 	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073c0	          0xc0e807	                               shr al, 7	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073c3	            0x84c0	                             test al, al	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073c5	            0x7418	                            je 0x40073df	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073c7	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5095	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073ca	        0x4883c00e	                            add rax, 0xe	      5095	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073ce	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5095	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073d6	          0xc0e807	                               shr al, 7	      5095	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073d9	            0x84c0	                             test al, al	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073db	            0x7420	                            je 0x40073fd	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073dd	            0xeb32	                           jmp 0x4007411	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073df	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5096	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073e2	        0x4883c00e	                            add rax, 0xe	      5096	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073e6	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5096	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073ee	            0xd0e8	                               shr al, 1	      5096	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073f0	          0x83e001	                              and eax, 1	      5096	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073f3	            0x84c0	                             test al, al	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073f5	            0x751a	                           jne 0x4007411	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073f7	            0xeb04	                           jmp 0x40073fd	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x40073f9	              0x90	                                     nop	      5124	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_17
0x40073fa	            0xeb01	                           jmp 0x40073fd	      5124	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_17
0x40073fc	              0x90	                                     nop	      5138	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19
0x40073fd	    0xc70500000000	            mov dword [0x04007407], 0xc 	      5099	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x4007407	      0xb801000000	                              mov eax, 1	      5100	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400740c	      0xe971040000	                           jmp 0x4007882	      5100	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x4007411	        0x488d45b0	                   lea rax, [rbp - 0x50]	      5103	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_20
0x4007415	      0xbe00000000	                              mov esi, 0	      5103	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_20
0x400741a	          0x4889c7	                            mov rdi, rax	      5103	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_20
0x400741d	      0xe8df90ffff	               call sym.operand_type_set	      5103	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_20
0x4007422	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007426	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007429	        0x4883c206	                              add rdx, 6	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400742d	       0xfb644d007	      movzx eax, byte [rax + rdx*8 + 7] 	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007432	          0xc0e807	                               shr al, 7	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007435	            0x84c0	                             test al, al	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007437	            0x7407	                            je 0x4007440	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007439	      0xba04000000	                              mov edx, 4	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400743e	            0xeb05	                           jmp 0x4007445	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007440	      0xba08000000	                              mov edx, 8	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007445	    0x488b05000000	            mov rax, qword [0x0400744c] 	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400744c	            0x8b00	                    mov eax, dword [rax]	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400744e	           0xfafc2	                           imul eax, edx	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007451	          0x83f810	                           cmp eax, 0x10	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007454	            0x7424	                            je 0x400747a	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007456	          0x83f810	                           cmp eax, 0x10	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007459	            0x7f07	                            jg 0x4007462	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400745b	          0x83f808	                              cmp eax, 8	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400745e	            0x740e	                            je 0x400746e	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007460	            0xeb9b	                           jmp 0x40073fd	      5119	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007462	          0x83f820	                           cmp eax, 0x20	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007465	            0x741f	                            je 0x4007486	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007467	          0x83f840	                           cmp eax, 0x40	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400746a	            0x7426	                            je 0x4007492	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400746c	            0xeb8f	                           jmp 0x40073fd	      5119	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400746e	         0xfb645b4	            movzx eax, byte [rbp - 0x4c]	      5107	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007472	          0x83c802	                               or eax, 2	      5107	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007475	          0x8845b4	               mov byte [rbp - 0x4c], al	      5107	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007478	            0xeb23	                           jmp 0x400749d	      5108	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400747a	         0xfb645b4	            movzx eax, byte [rbp - 0x4c]	      5110	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400747e	          0x83c808	                               or eax, 8	      5110	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007481	          0x8845b4	               mov byte [rbp - 0x4c], al	      5110	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007484	            0xeb17	                           jmp 0x400749d	      5111	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007486	         0xfb645b4	            movzx eax, byte [rbp - 0x4c]	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400748a	          0x83c810	                            or eax, 0x10	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400748d	          0x8845b4	               mov byte [rbp - 0x4c], al	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007490	            0xeb0b	                           jmp 0x400749d	      5114	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007492	         0xfb645b4	            movzx eax, byte [rbp - 0x4c]	      5116	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007496	          0x83c820	                            or eax, 0x20	      5116	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x4007499	          0x8845b4	               mov byte [rbp - 0x4c], al	      5116	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400749c	              0x90	                                     nop	      5117	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400749d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5122	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_21
0x40074a1	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      5122	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_21
0x40074a4	        0x4883c206	                              add rdx, 6	      5122	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_21
0x40074a8	      0x488b54d004	       mov rdx, qword [rax + rdx*8 + 4] 	      5122	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_21
0x40074ad	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5122	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_21
0x40074b1	          0x4889d6	                            mov rsi, rdx	      5122	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_21
0x40074b4	          0x4889c7	                            mov rdi, rax	      5122	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_21
0x40074b7	      0xe82c95ffff	               call sym.operand_type_and	      5122	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_21
0x40074bc	        0x488945c0	             mov qword [rbp - 0x40], rax	      5122	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	CALL_21
0x40074c0	        0x488d45c0	                   lea rax, [rbp - 0x40]	      5123	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_17	CALL_22
0x40074c4	          0x4889c7	                            mov rdi, rax	      5123	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_17	CALL_22
0x40074c7	      0xe80b90ffff	          call sym.operand_type_all_zero	      5123	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_17	CALL_22
0x40074cc	            0x85c0	                           test eax, eax	      5123	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_17	CALL_22
0x40074ce	     0xf8525ffffff	                           jne 0x40073f9	      5123	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_17	CALL_22
0x40074d4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5126	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x40074d8	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      5126	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x40074dc	          0x83e040	                           and eax, 0x40	      5126	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x40074df	            0x84c0	                             test al, al	      5126	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x40074e1	     0xf844b010000	                            je 0x4007632	      5126	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x40074e7	         0xfb645b2	            movzx eax, byte [rbp - 0x4e]	      5130	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x40074eb	          0x83c840	                            or eax, 0x40	      5130	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x40074ee	          0x8845b2	               mov byte [rbp - 0x4e], al	      5130	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x40074f1	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x40074f8	            0xeb4f	                           jmp 0x4007549	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x40074fa	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      5133	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19
0x40074fd	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      5133	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19
0x4007500	            0x7443	                            je 0x4007545	      5133	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19
0x4007502	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x4007506	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x4007509	        0x4883c206	                              add rdx, 6	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400750d	      0x488b4cd004	       mov rcx, qword [rax + rdx*8 + 4] 	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x4007512	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x4007516	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400751a	          0x8b75ac	             mov esi, dword [rbp - 0x54]	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400751d	        0x4883c606	                              add rsi, 6	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x4007521	      0x488b74f004	       mov rsi, qword [rax + rsi*8 + 4] 	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x4007526	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x4007529	        0x4883c00e	                            add rax, 0xe	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400752d	    0x488b04c50000	                  mov rax, qword [rax*8]	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x4007535	          0x4889c7	                            mov rdi, rax	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x4007538	      0xe86e9effff	    call sym.operand_type_register_match	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400753d	            0x85c0	                           test eax, eax	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400753f	     0xf84b7feffff	                            je 0x40073fc	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x4007545	        0x8345ac01	               add dword [rbp - 0x54], 1	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x4007549	    0x8b0500000000	            mov eax, dword [0x0400754f] 	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400754f	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x4007552	            0x77a6	                            ja 0x40074fa	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x4007554	      0xe9d9000000	                           jmp 0x4007632	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x4007559	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400755d	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x4007561	          0x83e020	                           and eax, 0x20	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x4007564	            0x84c0	                             test al, al	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x4007566	     0xf84bf000000	                            je 0x400762b	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400756c	    0x8b0500000000	            mov eax, dword [0x04007572] 	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x4007572	            0x85c0	                           test eax, eax	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x4007574	     0xf84b1000000	                            je 0x400762b	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400757a	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x4007581	            0xeb24	                           jmp 0x40075a7	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x4007583	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x4007586	        0x4883c00e	                            add rax, 0xe	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400758a	    0x488b04c50000	                  mov rax, qword [rax*8]	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x4007592	      0xbe03000000	                              mov esi, 3	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x4007597	          0x4889c7	                            mov rdi, rax	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400759a	      0xe88d95ffff	             call sym.operand_type_check	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400759f	            0x85c0	                           test eax, eax	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x40075a1	            0x7511	                           jne 0x40075b4	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x40075a3	        0x8345a801	               add dword [rbp - 0x58], 1	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x40075a7	    0x8b0500000000	            mov eax, dword [0x040075ad] 	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x40075ad	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x40075b0	            0x77d1	                            ja 0x4007583	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x40075b2	            0xeb01	                           jmp 0x40075b5	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x40075b4	              0x90	                                     nop	      5149	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21
0x40075b5	    0x8b0500000000	            mov eax, dword [0x040075bb] 	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x40075bb	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x40075be	            0x7714	                            ja 0x40075d4	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x40075c0	      0xba00000000	                              mov edx, 0	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x40075c5	      0xbe1e140000	                         mov esi, 0x141e	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x40075ca	      0xbf00000000	                              mov edi, 0	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x40075cf	      0xe800000000	                          call 0x40075d4	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x40075d4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075d8	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075db	        0x4883c206	                              add rdx, 6	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075df	       0xfb644d007	      movzx eax, byte [rax + rdx*8 + 7] 	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075e4	          0xc0e807	                               shr al, 7	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075e7	            0x84c0	                             test al, al	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075e9	            0x7414	                            je 0x40075ff	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075eb	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5153	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075ee	        0x4883c00e	                            add rax, 0xe	      5153	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075f2	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5153	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075fa	          0xc0e807	                               shr al, 7	      5153	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075fd	            0xeb14	                           jmp 0x4007613	      5153	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x40075ff	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5154	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x4007602	        0x4883c00e	                            add rax, 0xe	      5154	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x4007606	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5154	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400760e	            0xd0e8	                               shr al, 1	      5154	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x4007610	          0x83e001	                              and eax, 1	      5154	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x4007613	            0x84c0	                             test al, al	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x4007615	            0x741b	                            je 0x4007632	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x4007617	    0xc70500000000	            mov dword [0x04007621], 0xe 	      5156	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x4007621	      0xb801000000	                              mov eax, 1	      5157	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x4007626	      0xe957020000	                           jmp 0x4007882	      5157	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400762b	    0xc745a8040000	               mov dword [rbp - 0x58], 4	      5161	tc-i386.c	FUNCTION_75
0x4007632	    0x488b05000000	            mov rax, qword [0x04007639] 	      5164	tc-i386.c	FUNCTION_75	IF_23
0x4007639	          0x4885c0	                           test rax, rax	      5164	tc-i386.c	FUNCTION_75	IF_23
0x400763c	            0x7440	                            je 0x400767e	      5164	tc-i386.c	FUNCTION_75	IF_23
0x400763e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5165	tc-i386.c	FUNCTION_75	IF_23
0x4007642	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      5165	tc-i386.c	FUNCTION_75	IF_23
0x4007646	          0x83e018	                           and eax, 0x18	      5165	tc-i386.c	FUNCTION_75	IF_23
0x4007649	            0x84c0	                             test al, al	      5165	tc-i386.c	FUNCTION_75	IF_23
0x400764b	            0x741d	                            je 0x400766a	      5165	tc-i386.c	FUNCTION_75	IF_23
0x400764d	    0x488b05000000	            mov rax, qword [0x04007654] 	      5166	tc-i386.c	FUNCTION_75	IF_23
0x4007654	          0x8b4008	                mov eax, dword [rax + 8]	      5166	tc-i386.c	FUNCTION_75	IF_23
0x4007657	            0x85c0	                           test eax, eax	      5166	tc-i386.c	FUNCTION_75	IF_23
0x4007659	            0x7423	                            je 0x400767e	      5166	tc-i386.c	FUNCTION_75	IF_23
0x400765b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5167	tc-i386.c	FUNCTION_75	IF_23
0x400765f	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      5167	tc-i386.c	FUNCTION_75	IF_23
0x4007663	          0x83e018	                           and eax, 0x18	      5167	tc-i386.c	FUNCTION_75	IF_23
0x4007666	            0x3c10	                            cmp al, 0x10	      5167	tc-i386.c	FUNCTION_75	IF_23
0x4007668	            0x7514	                           jne 0x400767e	      5167	tc-i386.c	FUNCTION_75	IF_23
0x400766a	    0xc70500000000	            mov dword [0x04007674], 0xf 	      5169	tc-i386.c	FUNCTION_75	IF_23
0x4007674	      0xb801000000	                              mov eax, 1	      5170	tc-i386.c	FUNCTION_75	IF_23
0x4007679	      0xe904020000	                           jmp 0x4007882	      5170	tc-i386.c	FUNCTION_75	IF_23
0x400767e	    0x488b05000000	            mov rax, qword [0x04007685] 	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x4007685	          0x4885c0	                           test rax, rax	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x4007688	            0x742b	                            je 0x40076b5	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400768a	    0x488b05000000	            mov rax, qword [0x04007691] 	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x4007691	          0x8b400c	              mov eax, dword [rax + 0xc]	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x4007694	    0x8b1500000000	            mov edx, dword [0x0400769a] 	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400769a	          0x83ea01	                              sub edx, 1	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400769d	            0x39d0	                            cmp eax, edx	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400769f	            0x7414	                            je 0x40076b5	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x40076a1	    0xc70500000000	           mov dword [0x040076ab], 0x10 	      5176	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x40076ab	      0xb801000000	                              mov eax, 1	      5177	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x40076b0	      0xe9cd010000	                           jmp 0x4007882	      5177	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x40076b5	    0x488b05000000	            mov rax, qword [0x040076bc] 	      5181	tc-i386.c	FUNCTION_75	ELSE_3	IF_25
0x40076bc	          0x4885c0	                           test rax, rax	      5181	tc-i386.c	FUNCTION_75	ELSE_3	IF_25
0x40076bf	     0xf8493000000	                            je 0x4007758	      5181	tc-i386.c	FUNCTION_75	ELSE_3	IF_25
0x40076c5	    0x488b05000000	            mov rax, qword [0x040076cc] 	      5183	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076cc	            0x8b00	                    mov eax, dword [rax]	      5183	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076ce	          0x83f804	                              cmp eax, 4	      5183	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076d1	            0x740f	                            je 0x40076e2	      5183	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076d3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5184	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076d7	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      5184	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076db	          0x83e040	                           and eax, 0x40	      5184	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076de	            0x84c0	                             test al, al	      5184	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076e0	            0x742c	                            je 0x400770e	      5184	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076e2	    0x488b05000000	            mov rax, qword [0x040076e9] 	      5185	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076e9	            0x8b00	                    mov eax, dword [rax]	      5185	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076eb	          0x83f804	                              cmp eax, 4	      5185	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076ee	            0x7532	                           jne 0x4007722	      5185	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076f0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076f4	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076f8	          0x83e040	                           and eax, 0x40	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076fb	            0x84c0	                             test al, al	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076fd	            0x750f	                           jne 0x400770e	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x40076ff	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5187	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x4007703	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      5187	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x4007707	          0x83e080	                     and eax, 0xffffff80	      5187	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400770a	            0x84c0	                             test al, al	      5187	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400770c	            0x7514	                           jne 0x4007722	      5187	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400770e	    0xc70500000000	           mov dword [0x04007718], 0x12 	      5189	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x4007718	      0xb801000000	                              mov eax, 1	      5190	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400771d	      0xe960010000	                           jmp 0x4007882	      5190	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x4007722	    0x8b0500000000	            mov eax, dword [0x04007728] 	      5195	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x4007728	          0x83f801	                              cmp eax, 1	      5195	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400772b	            0x762b	                           jbe 0x4007758	      5195	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400772d	    0x488b05000000	            mov rax, qword [0x04007734] 	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x4007734	          0x8b4004	                mov eax, dword [rax + 4]	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x4007737	    0x8b1500000000	            mov edx, dword [0x0400773d] 	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400773d	          0x83ea01	                              sub edx, 1	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x4007740	            0x39d0	                            cmp eax, edx	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x4007742	            0x7414	                            je 0x4007758	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x4007744	    0xc70500000000	           mov dword [0x0400774e], 0x13 	      5198	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400774e	      0xb801000000	                              mov eax, 1	      5199	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x4007753	      0xe92a010000	                           jmp 0x4007882	      5199	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x4007758	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5204	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x400775c	         0xfb64030	           movzx eax, byte [rax + 0x30] 	      5204	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x4007760	          0x83e007	                              and eax, 7	      5204	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x4007763	            0x84c0	                             test al, al	      5204	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x4007765	     0xf8408010000	                            je 0x4007873	      5204	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x400776b	    0x8b0500000000	            mov eax, dword [0x04007771] 	      5205	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x4007771	          0x83f802	                              cmp eax, 2	      5205	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x4007774	     0xf84f9000000	                            je 0x4007873	      5205	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x400777a	    0x488b05000000	            mov rax, qword [0x04007781] 	      5207	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x4007781	          0x4885c0	                           test rax, rax	      5207	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x4007784	            0x742b	                            je 0x40077b1	      5207	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x4007786	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400778a	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400778d	        0x4883c206	                              add rdx, 6	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x4007791	       0xfb644d007	      movzx eax, byte [rax + rdx*8 + 7] 	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x4007796	          0xc0e807	                               shr al, 7	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x4007799	            0x84c0	                             test al, al	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400779b	            0x7407	                            je 0x40077a4	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400779d	      0xb802000000	                              mov eax, 2	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x40077a2	            0xeb05	                           jmp 0x40077a9	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x40077a4	      0xb803000000	                              mov eax, 3	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x40077a9	    0x890500000000	            mov dword [0x040077af], eax 	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x40077af	            0xeb14	                           jmp 0x40077c5	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x40077b1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x40077b5	         0xfb64030	           movzx eax, byte [rax + 0x30] 	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x40077b9	          0x83e007	                              and eax, 7	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x40077bc	           0xfb6c0	                           movzx eax, al	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x40077bf	    0x890500000000	            mov dword [0x040077c5], eax 	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x40077c5	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x40077cc	      0xe993000000	                           jmp 0x4007864	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x40077d1	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x40077d4	        0x4883c00e	                            add rax, 0xe	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x40077d8	    0x488b04c50000	                  mov rax, qword [rax*8]	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x40077e0	      0xbe02000000	                              mov esi, 2	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x40077e5	          0x4889c7	                            mov rdi, rax	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x40077e8	      0xe83f93ffff	             call sym.operand_type_check	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x40077ed	            0x85c0	                           test eax, eax	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x40077ef	            0x746f	                            je 0x4007860	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x40077f1	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x40077f4	        0x4883c014	                           add rax, 0x14	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x40077f8	    0x488b04c50000	                  mov rax, qword [rax*8]	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x4007800	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x4007804	            0x3c02	                               cmp al, 2	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x4007806	            0x7558	                           jne 0x4007860	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x4007808	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400780b	        0x4883c014	                           add rax, 0x14	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400780f	    0x488b04c50000	                  mov rax, qword [rax*8]	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x4007817	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400781b	          0x4889c7	                            mov rdi, rax	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400781e	      0xe82d9fffff	                  call sym.fits_in_disp8	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x4007823	            0x85c0	                           test eax, eax	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x4007825	            0x7420	                            je 0x4007847	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x4007827	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5218	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x400782a	        0x4883c00e	                            add rax, 0xe	      5218	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x400782e	     0xfb614c50000	                 movzx edx, byte [rax*8]	      5218	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x4007836	          0x83ca01	                               or edx, 1	      5218	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x4007839	    0x8814c5000000	                    mov byte [rax*8], dl	      5218	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x4007840	      0xb800000000	                              mov eax, 0	      5219	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x4007845	            0xeb3b	                           jmp 0x4007882	      5219	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x4007847	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5221	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400784a	        0x4883c00e	                            add rax, 0xe	      5221	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400784e	     0xfb614c50000	                 movzx edx, byte [rax*8]	      5221	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x4007856	          0x83e2fe	                     and edx, 0xfffffffe	      5221	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x4007859	    0x8814c5000000	                    mov byte [rax*8], dl	      5221	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x4007860	        0x8345a801	               add dword [rbp - 0x58], 1	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x4007864	    0x8b0500000000	            mov eax, dword [0x0400786a] 	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400786a	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400786d	     0xf875effffff	                            ja 0x40077d1	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x4007873	    0xc70500000000	               mov dword [0x0400787d], 0	      5225	tc-i386.c	FUNCTION_75	ELSE_3
0x400787d	      0xb800000000	                              mov eax, 0	      5227	tc-i386.c	FUNCTION_75	ELSE_3
0x4007882	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      5228	tc-i386.c	FUNCTION_75	ELSE_3
0x4007886	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5228	tc-i386.c	FUNCTION_75	ELSE_3
0x400788f	            0x7405	                            je 0x4007896	      5228	tc-i386.c	FUNCTION_75	ELSE_3
0x4007891	      0xe800000000	                          call 0x4007896	      5228	tc-i386.c	FUNCTION_75	ELSE_3
0x4007896	        0x4883c468	                           add rsp, 0x68	      5228	tc-i386.c	FUNCTION_75	ELSE_3
0x400789a	              0x5b	                                 pop rbx	      5228	tc-i386.c	FUNCTION_75	ELSE_3
0x400789b	              0x5d	                                 pop rbp	      5228	tc-i386.c	FUNCTION_75	ELSE_3
0x400789c	              0xc3	                                     ret	      5228	tc-i386.c	FUNCTION_75	ELSE_3
output_invalid	CALL,3:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,1:DO,0	31
0x401178a	              0x55	                                push rbp	     10147	tc-i386.c	FUNCTION_119
0x401178b	          0x4889e5	                            mov rbp, rsp	     10147	tc-i386.c	FUNCTION_119
0x401178e	        0x4883ec10	                           sub rsp, 0x10	     10147	tc-i386.c	FUNCTION_119
0x4011792	          0x897dfc	                mov dword [rbp - 4], edi	     10147	tc-i386.c	FUNCTION_119
0x4011795	          0x8b45fc	                mov eax, dword [rbp - 4]	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x4011798	           0xfb6c0	                           movzx eax, al	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x401179b	            0x4898	                                    cdqe	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x401179d	     0xfb784000000	             movzx eax, word [rax + rax]	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x40117a5	           0xfb7c0	                           movzx eax, ax	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x40117a8	          0x83e010	                           and eax, 0x10	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x40117ab	            0x85c0	                           test eax, eax	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x40117ad	            0x7420	                            je 0x40117cf	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x40117af	          0x8b45fc	                mov eax, dword [rbp - 4]	     10149	tc-i386.c	FUNCTION_119	IF_1	CALL_2
0x40117b2	            0x89c1	                            mov ecx, eax	     10149	tc-i386.c	FUNCTION_119	IF_1	CALL_2
0x40117b4	      0xba00000000	                              mov edx, 0	     10149	tc-i386.c	FUNCTION_119	IF_1	CALL_2
0x40117b9	      0xbe08000000	                              mov esi, 8	     10149	tc-i386.c	FUNCTION_119	IF_1	CALL_2
0x40117be	      0xbf00000000	                              mov edi, 0	     10149	tc-i386.c	FUNCTION_119	IF_1	CALL_2
0x40117c3	      0xb800000000	                              mov eax, 0	     10149	tc-i386.c	FUNCTION_119	IF_1	CALL_2
0x40117c8	      0xe800000000	                          call 0x40117cd	     10149	tc-i386.c	FUNCTION_119	IF_1	CALL_2
0x40117cd	            0xeb21	                           jmp 0x40117f0	     10149	tc-i386.c	FUNCTION_119	IF_1	CALL_2
0x40117cf	          0x8b45fc	                mov eax, dword [rbp - 4]	     10152	tc-i386.c	FUNCTION_119	ELSE_1	CALL_3
0x40117d2	           0xfb6c0	                           movzx eax, al	     10152	tc-i386.c	FUNCTION_119	ELSE_1	CALL_3
0x40117d5	            0x89c1	                            mov ecx, eax	     10152	tc-i386.c	FUNCTION_119	ELSE_1	CALL_3
0x40117d7	      0xba00000000	                              mov edx, 0	     10152	tc-i386.c	FUNCTION_119	ELSE_1	CALL_3
0x40117dc	      0xbe08000000	                              mov esi, 8	     10152	tc-i386.c	FUNCTION_119	ELSE_1	CALL_3
0x40117e1	      0xbf00000000	                              mov edi, 0	     10152	tc-i386.c	FUNCTION_119	ELSE_1	CALL_3
0x40117e6	      0xb800000000	                              mov eax, 0	     10152	tc-i386.c	FUNCTION_119	ELSE_1	CALL_3
0x40117eb	      0xe800000000	                          call 0x40117f0	     10152	tc-i386.c	FUNCTION_119	ELSE_1	CALL_3
0x40117f0	      0xb800000000	                              mov eax, 0	     10154	tc-i386.c	FUNCTION_119
0x40117f5	              0xc9	                                   leave	     10155	tc-i386.c	FUNCTION_119
0x40117f6	              0xc3	                                     ret	     10155	tc-i386.c	FUNCTION_119
i386_mach	CALL,11:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,9:ELSE,6:DO,0	74
0x4002942	              0x55	                                push rbp	      2740	tc-i386.c	ELSE_3	FUNCTION_51
0x4002943	          0x4889e5	                            mov rbp, rsp	      2740	tc-i386.c	ELSE_3	FUNCTION_51
0x4002946	    0x488b05000000	            mov rax, qword [0x0400294d] 	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400294d	      0xba06000000	                              mov edx, 6	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x4002952	      0xbe00000000	                              mov esi, 0	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x4002957	          0x4889c7	                            mov rdi, rax	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400295a	      0xe800000000	                          call 0x400295f	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400295f	            0x85c0	                           test eax, eax	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x4002961	     0xf859c000000	                           jne 0x4002a03	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x4002967	    0x8b0500000000	            mov eax, dword [0x0400296d] 	      2743	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x400296d	          0x83f80a	                            cmp eax, 0xa	      2743	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x4002970	            0x7533	                           jne 0x40029a5	      2743	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x4002972	    0x488b05000000	            mov rax, qword [0x04002979] 	      2746	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	IF_3
0x4002979	        0x4883c006	                              add rax, 6	      2746	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	IF_3
0x400297d	           0xfb600	                   movzx eax, byte [rax]	      2746	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	IF_3
0x4002980	            0x84c0	                             test al, al	      2745	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	IF_3
0x4002982	            0x7417	                            je 0x400299b	      2745	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	IF_3
0x4002984	      0xbf00000000	                              mov edi, 0	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x4002989	      0xe800000000	                          call 0x400298e	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400298e	          0x4889c7	                            mov rdi, rax	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x4002991	      0xb800000000	                              mov eax, 0	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x4002996	      0xe800000000	                          call 0x400299b	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400299b	      0xb820000000	                           mov eax, 0x20	      2748	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x40029a0	      0xe9be000000	                           jmp 0x4002a63	      2748	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x40029a5	    0x8b0500000000	            mov eax, dword [0x040029ab] 	      2750	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4
0x40029ab	          0x83f80b	                            cmp eax, 0xb	      2750	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4
0x40029ae	            0x7533	                           jne 0x40029e3	      2750	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4
0x40029b0	    0x488b05000000	            mov rax, qword [0x040029b7] 	      2753	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	IF_5
0x40029b7	        0x4883c006	                              add rax, 6	      2753	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	IF_5
0x40029bb	           0xfb600	                   movzx eax, byte [rax]	      2753	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	IF_5
0x40029be	            0x84c0	                             test al, al	      2752	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	IF_5
0x40029c0	            0x7417	                            je 0x40029d9	      2752	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	IF_5
0x40029c2	      0xbf00000000	                              mov edi, 0	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x40029c7	      0xe800000000	                          call 0x40029cc	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x40029cc	          0x4889c7	                            mov rdi, rax	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x40029cf	      0xb800000000	                              mov eax, 0	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x40029d4	      0xe800000000	                          call 0x40029d9	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x40029d9	      0xb840000000	                           mov eax, 0x40	      2755	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4
0x40029de	      0xe980000000	                           jmp 0x4002a63	      2755	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4
0x40029e3	    0x488b05000000	            mov rax, qword [0x040029ea] 	      2757	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_2	IF_6
0x40029ea	        0x4883c006	                              add rax, 6	      2757	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_2	IF_6
0x40029ee	           0xfb600	                   movzx eax, byte [rax]	      2757	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_2	IF_6
0x40029f1	            0x84c0	                             test al, al	      2757	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_2	IF_6
0x40029f3	            0x7507	                           jne 0x40029fc	      2757	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_2	IF_6
0x40029f5	      0xb808000000	                              mov eax, 8	      2758	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_2	IF_6
0x40029fa	            0xeb67	                           jmp 0x4002a63	      2758	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_2	IF_6
0x40029fc	      0xb810000000	                           mov eax, 0x10	      2760	tc-i386.c	FUNCTION_51	IF_1
0x4002a01	            0xeb60	                           jmp 0x4002a63	      2760	tc-i386.c	FUNCTION_51	IF_1
0x4002a03	    0x488b05000000	            mov rax, qword [0x04002a0a] 	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x4002a0a	      0xbe00000000	                              mov esi, 0	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x4002a0f	          0x4889c7	                            mov rdi, rax	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x4002a12	      0xe800000000	                          call 0x4002a17	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x4002a17	            0x85c0	                           test eax, eax	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x4002a19	            0x7418	                            je 0x4002a33	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x4002a1b	    0x488b05000000	            mov rax, qword [0x04002a22] 	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x4002a22	      0xbe00000000	                              mov esi, 0	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x4002a27	          0x4889c7	                            mov rdi, rax	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x4002a2a	      0xe800000000	                          call 0x4002a2f	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x4002a2f	            0x85c0	                           test eax, eax	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x4002a31	            0x7519	                           jne 0x4002a4c	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x4002a33	    0x8b0500000000	            mov eax, dword [0x04002a39] 	      2765	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	IF_8
0x4002a39	          0x83f80c	                            cmp eax, 0xc	      2765	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	IF_8
0x4002a3c	            0x7507	                           jne 0x4002a45	      2765	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	IF_8
0x4002a3e	      0xb804010000	                          mov eax, 0x104	      2769	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	IF_8
0x4002a43	            0xeb1e	                           jmp 0x4002a63	      2769	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	IF_8
0x4002a45	      0xb804000000	                              mov eax, 4	      2772	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	ELSE_5
0x4002a4a	            0xeb17	                           jmp 0x4002a63	      2772	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	ELSE_5
0x4002a4c	      0xbf00000000	                              mov edi, 0	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x4002a51	      0xe800000000	                          call 0x4002a56	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x4002a56	          0x4889c7	                            mov rdi, rax	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x4002a59	      0xb800000000	                              mov eax, 0	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x4002a5e	      0xe800000000	                          call 0x4002a63	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x4002a63	              0x5d	                                 pop rbp	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x4002a64	              0xc3	                                     ret	      2776	tc-i386.c	FUNCTION_51	ELSE_3
fits_in_imm7	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	10
0x4000192	              0x55	                                push rbp	      1286	tc-i386.c	FUNCTION_4
0x4000193	          0x4889e5	                            mov rbp, rsp	      1286	tc-i386.c	FUNCTION_4
0x4000196	        0x48897df8	                mov qword [rbp - 8], rdi	      1286	tc-i386.c	FUNCTION_4
0x400019a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1287	tc-i386.c	FUNCTION_4
0x400019e	          0x83e07f	                           and eax, 0x7f	      1287	tc-i386.c	FUNCTION_4
0x40001a1	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1287	tc-i386.c	FUNCTION_4
0x40001a5	           0xf94c0	                                 sete al	      1287	tc-i386.c	FUNCTION_4
0x40001a8	           0xfb6c0	                           movzx eax, al	      1287	tc-i386.c	FUNCTION_4
0x40001ab	              0x5d	                                 pop rbp	      1288	tc-i386.c	FUNCTION_4
0x40001ac	              0xc3	                                     ret	      1288	tc-i386.c	FUNCTION_4
i386_addressing_mode	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,8:ELSE,2:DO,0	92
0x400f7f8	              0x55	                                push rbp	      9046	tc-i386.c	FUNCTION_108
0x400f7f9	          0x4889e5	                            mov rbp, rsp	      9046	tc-i386.c	FUNCTION_108
0x400f7fc	              0x53	                                push rbx	      9046	tc-i386.c	FUNCTION_108
0x400f7fd	        0x4883ec18	                           sub rsp, 0x18	      9046	tc-i386.c	FUNCTION_108
0x400f801	     0xfb605000000	           movzx eax, byte [0x0400f808] 	      9049	tc-i386.c	FUNCTION_108	IF_1
0x400f808	            0x84c0	                             test al, al	      9049	tc-i386.c	FUNCTION_108	IF_1
0x400f80a	            0x7416	                            je 0x400f822	      9049	tc-i386.c	FUNCTION_108	IF_1
0x400f80c	    0x8b0500000000	            mov eax, dword [0x0400f812] 	      9050	tc-i386.c	FUNCTION_108	IF_1
0x400f812	            0x85c0	                           test eax, eax	      9050	tc-i386.c	FUNCTION_108	IF_1
0x400f814	           0xf94c0	                                 sete al	      9050	tc-i386.c	FUNCTION_108	IF_1
0x400f817	           0xfb6c0	                           movzx eax, al	      9050	tc-i386.c	FUNCTION_108	IF_1
0x400f81a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      9050	tc-i386.c	FUNCTION_108	IF_1
0x400f81d	      0xe933010000	                           jmp 0x400f955	      9050	tc-i386.c	FUNCTION_108	IF_1
0x400f822	    0x8b0500000000	            mov eax, dword [0x0400f828] 	      9053	tc-i386.c	FUNCTION_108	ELSE_1
0x400f828	          0x8945e4	             mov dword [rbp - 0x1c], eax	      9053	tc-i386.c	FUNCTION_108	ELSE_1
0x400f82b	    0x8b0500000000	            mov eax, dword [0x0400f831] 	      9056	tc-i386.c	FUNCTION_108	ELSE_1	IF_2
0x400f831	            0x85c0	                           test eax, eax	      9056	tc-i386.c	FUNCTION_108	ELSE_1	IF_2
0x400f833	     0xf851c010000	                           jne 0x400f955	      9056	tc-i386.c	FUNCTION_108	ELSE_1	IF_2
0x400f839	    0x488b05000000	            mov rax, qword [0x0400f840] 	      9059	tc-i386.c	FUNCTION_108	ELSE_1	IF_2
0x400f840	        0x488945e8	             mov qword [rbp - 0x18], rax	      9059	tc-i386.c	FUNCTION_108	ELSE_1	IF_2
0x400f844	      0x48837de800	               cmp qword [rbp - 0x18], 0	      9061	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_3
0x400f849	            0x750b	                           jne 0x400f856	      9061	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_3
0x400f84b	    0x488b05000000	            mov rax, qword [0x0400f852] 	      9062	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_3
0x400f852	        0x488945e8	             mov qword [rbp - 0x18], rax	      9062	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_3
0x400f856	      0x48837de800	               cmp qword [rbp - 0x18], 0	      9064	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4
0x400f85b	     0xf84f4000000	                            je 0x400f955	      9064	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4
0x400f861	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9066	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f865	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      9066	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f869	            0x3cfe	                            cmp al, 0xfe	      9066	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f86b	            0x741b	                            je 0x400f888	      9066	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f86d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9067	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f871	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      9067	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f875	            0x3cfd	                            cmp al, 0xfd	      9067	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f877	            0x740f	                            je 0x400f888	      9067	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f879	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9068	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f87d	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      9068	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f881	          0x83e080	                     and eax, 0xffffff80	      9068	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f884	            0x84c0	                             test al, al	      9068	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f886	            0x7409	                            je 0x400f891	      9068	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f888	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      9069	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f88f	            0xeb21	                           jmp 0x400f8b2	      9069	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x400f891	    0x8b0500000000	            mov eax, dword [0x0400f897] 	      9070	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x400f897	          0x83f802	                              cmp eax, 2	      9070	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x400f89a	            0x7416	                            je 0x400f8b2	      9070	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x400f89c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9071	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x400f8a0	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      9071	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x400f8a4	          0x83e040	                           and eax, 0x40	      9071	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x400f8a7	            0x84c0	                             test al, al	      9071	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x400f8a9	            0x7407	                            je 0x400f8b2	      9071	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x400f8ab	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      9072	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x400f8b2	    0x8b0500000000	            mov eax, dword [0x0400f8b8] 	      9074	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x400f8b8	          0x3945e4	            cmp dword [rbp - 0x1c], eax 	      9074	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x400f8bb	     0xf8494000000	                            je 0x400f955	      9074	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x400f8c1	    0xc60500000000	            mov byte [0x0400f8c8], 0x67 	      9076	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x400f8c8	    0x8b0500000000	            mov eax, dword [0x0400f8ce] 	      9077	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x400f8ce	          0x83c001	                              add eax, 1	      9077	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x400f8d1	    0x890500000000	            mov dword [0x0400f8d7], eax 	      9077	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x400f8d7	    0x8b0500000000	            mov eax, dword [0x0400f8dd] 	      9084	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f8dd	          0x83f802	                              cmp eax, 2	      9084	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f8e0	            0x7473	                            je 0x400f955	      9084	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f8e2	    0x8b0500000000	            mov eax, dword [0x0400f8e8] 	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f8e8	            0x4898	                                    cdqe	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f8ea	        0x4883c00e	                            add rax, 0xe	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f8ee	     0xfb604c50000	                 movzx eax, byte [rax*8]	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f8f6	            0xd0e8	                               shr al, 1	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f8f8	          0x83e001	                              and eax, 1	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f8fb	            0x84c0	                             test al, al	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f8fd	            0x751e	                           jne 0x400f91d	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f8ff	    0x8b0500000000	            mov eax, dword [0x0400f905] 	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f905	            0x4898	                                    cdqe	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f907	        0x4883c00e	                            add rax, 0xe	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f90b	     0xfb604c50000	                 movzx eax, byte [rax*8]	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f913	          0xc0e802	                               shr al, 2	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f916	          0x83e001	                              and eax, 1	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f919	            0x84c0	                             test al, al	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f91b	            0x7438	                            je 0x400f955	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f91d	    0x8b1500000000	            mov edx, dword [0x0400f923] 	      9087	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x400f923	    0x8b0500000000	            mov eax, dword [0x0400f929] 	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x400f929	          0x4863d2	                         movsxd rdx, edx	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x400f92c	        0x488d5a0e	                    lea rbx, [rdx + 0xe]	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x400f930	            0x4898	                                    cdqe	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x400f932	        0x4883c00e	                            add rax, 0xe	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x400f936	    0x488b04c50000	                  mov rax, qword [rax*8]	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x400f93e	    0x488b35000000	            mov rsi, qword [0x0400f945] 	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x400f945	          0x4889c7	                            mov rdi, rax	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x400f948	      0xe88f11ffff	               call sym.operand_type_xor	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x400f94d	    0x488904dd0000	                  mov qword [rbx*8], rax	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x400f955	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9095	tc-i386.c	FUNCTION_108
0x400f958	        0x4883c418	                           add rsp, 0x18	      9096	tc-i386.c	FUNCTION_108
0x400f95c	              0x5b	                                 pop rbx	      9096	tc-i386.c	FUNCTION_108
0x400f95d	              0x5d	                                 pop rbp	      9096	tc-i386.c	FUNCTION_108
0x400f95e	              0xc3	                                     ret	      9096	tc-i386.c	FUNCTION_108
operand_type_equal	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,2:ELSE,0:DO,0	21
0x4000523	              0x55	                                push rbp	      1547	tc-i386.c	FUNCTION_9
0x4000524	          0x4889e5	                            mov rbp, rsp	      1547	tc-i386.c	FUNCTION_9
0x4000527	        0x48897df8	                mov qword [rbp - 8], rdi	      1547	tc-i386.c	FUNCTION_9
0x400052b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1547	tc-i386.c	FUNCTION_9
0x400052f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4000533	          0x8b5004	                mov edx, dword [rax + 4]	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4000536	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400053a	          0x8b4004	                mov eax, dword [rax + 4]	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400053d	            0x39c2	                            cmp edx, eax	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400053f	            0x7407	                            je 0x4000548	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4000541	      0xb800000000	                              mov eax, 0	      1556	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4000546	            0xeb14	                           jmp 0x400055c	      1556	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4000548	        0x488b45f8	                mov rax, qword [rbp - 8]	      1559	tc-i386.c	FUNCTION_9	SWITCH_1
0x400054c	            0x8b10	                    mov edx, dword [rax]	      1559	tc-i386.c	FUNCTION_9	SWITCH_1
0x400054e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1559	tc-i386.c	FUNCTION_9	SWITCH_1
0x4000552	            0x8b00	                    mov eax, dword [rax]	      1559	tc-i386.c	FUNCTION_9	SWITCH_1
0x4000554	            0x39c2	                            cmp edx, eax	      1559	tc-i386.c	FUNCTION_9	SWITCH_1
0x4000556	           0xf94c0	                                 sete al	      1559	tc-i386.c	FUNCTION_9	SWITCH_1
0x4000559	           0xfb6c0	                           movzx eax, al	      1559	tc-i386.c	FUNCTION_9	SWITCH_1
0x400055c	              0x5d	                                 pop rbp	      1564	tc-i386.c	FUNCTION_9
0x400055d	              0xc3	                                     ret	      1564	tc-i386.c	FUNCTION_9
is_evex_encoding	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	33
0x4003a5d	              0x55	                                push rbp	      3470	tc-i386.c	FUNCTION_63
0x4003a5e	          0x4889e5	                            mov rbp, rsp	      3470	tc-i386.c	FUNCTION_63
0x4003a61	        0x48897df8	                mov qword [rbp - 8], rdi	      3470	tc-i386.c	FUNCTION_63
0x4003a65	        0x488b45f8	                mov rax, qword [rbp - 8]	      3471	tc-i386.c	FUNCTION_63
0x4003a69	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      3471	tc-i386.c	FUNCTION_63
0x4003a6d	          0x83e007	                              and eax, 7	      3471	tc-i386.c	FUNCTION_63
0x4003a70	            0x84c0	                             test al, al	      3473	tc-i386.c	FUNCTION_63
0x4003a72	            0x753c	                           jne 0x4003ab0	      3473	tc-i386.c	FUNCTION_63
0x4003a74	        0x488b45f8	                mov rax, qword [rbp - 8]	      3472	tc-i386.c	FUNCTION_63
0x4003a78	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      3472	tc-i386.c	FUNCTION_63
0x4003a7c	          0x83e020	                           and eax, 0x20	      3472	tc-i386.c	FUNCTION_63
0x4003a7f	            0x84c0	                             test al, al	      3472	tc-i386.c	FUNCTION_63
0x4003a81	            0x752d	                           jne 0x4003ab0	      3472	tc-i386.c	FUNCTION_63
0x4003a83	        0x488b45f8	                mov rax, qword [rbp - 8]	      3472	tc-i386.c	FUNCTION_63
0x4003a87	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      3472	tc-i386.c	FUNCTION_63
0x4003a8b	          0x83e018	                           and eax, 0x18	      3472	tc-i386.c	FUNCTION_63
0x4003a8e	            0x84c0	                             test al, al	      3472	tc-i386.c	FUNCTION_63
0x4003a90	            0x751e	                           jne 0x4003ab0	      3472	tc-i386.c	FUNCTION_63
0x4003a92	        0x488b45f8	                mov rax, qword [rbp - 8]	      3473	tc-i386.c	FUNCTION_63
0x4003a96	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      3473	tc-i386.c	FUNCTION_63
0x4003a9a	          0x83e040	                           and eax, 0x40	      3473	tc-i386.c	FUNCTION_63
0x4003a9d	            0x84c0	                             test al, al	      3473	tc-i386.c	FUNCTION_63
0x4003a9f	            0x750f	                           jne 0x4003ab0	      3473	tc-i386.c	FUNCTION_63
0x4003aa1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3473	tc-i386.c	FUNCTION_63
0x4003aa5	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      3473	tc-i386.c	FUNCTION_63
0x4003aa9	          0x83e080	                     and eax, 0xffffff80	      3473	tc-i386.c	FUNCTION_63
0x4003aac	            0x84c0	                             test al, al	      3473	tc-i386.c	FUNCTION_63
0x4003aae	            0x7407	                            je 0x4003ab7	      3473	tc-i386.c	FUNCTION_63
0x4003ab0	      0xb801000000	                              mov eax, 1	      3473	tc-i386.c	FUNCTION_63
0x4003ab5	            0xeb05	                           jmp 0x4003abc	      3473	tc-i386.c	FUNCTION_63
0x4003ab7	      0xb800000000	                              mov eax, 0	      3473	tc-i386.c	FUNCTION_63
0x4003abc	              0x5d	                                 pop rbp	      3474	tc-i386.c	FUNCTION_63
0x4003abd	              0xc3	                                     ret	      3474	tc-i386.c	FUNCTION_63
maybe_adjust_templates	CALL,2:FOR,2:WHILE,0:functions,0:SWITCH,0:IF,5:ELSE,0:DO,0	78
0x4010143	              0x55	                                push rbp	      9297	tc-i386.c	FUNCTION_111
0x4010144	          0x4889e5	                            mov rbp, rsp	      9297	tc-i386.c	FUNCTION_111
0x4010147	        0x4883ec10	                           sub rsp, 0x10	      9297	tc-i386.c	FUNCTION_111
0x401014b	    0x8b0500000000	            mov eax, dword [0x04010151] 	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4010151	          0x83f801	                              cmp eax, 1	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4010154	            0x7414	                            je 0x401016a	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4010156	      0xba00000000	                              mov edx, 0	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x401015b	      0xbe54240000	                         mov esi, 0x2454	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4010160	      0xbf00000000	                              mov edi, 0	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4010165	      0xe800000000	                          call 0x401016a	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x401016a	    0x488b05000000	            mov rax, qword [0x04010171] 	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x4010171	          0x488b00	                    mov rax, qword [rax]	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x4010174	        0x488945f8	                mov qword [rbp - 8], rax	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x4010178	            0xeb14	                           jmp 0x401018e	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x401017a	        0x488b45f8	                mov rax, qword [rbp - 8]	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x401017e	         0xfb6402b	           movzx eax, byte [rax + 0x2b] 	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x4010182	          0x83e001	                              and eax, 1	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x4010185	            0x84c0	                             test al, al	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x4010187	            0x7518	                           jne 0x40101a1	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x4010189	      0x488345f860	               add qword [rbp - 8], 0x60	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x401018e	    0x488b05000000	            mov rax, qword [0x04010195] 	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x4010195	        0x488b4008	                mov rax, qword [rax + 8]	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x4010199	        0x483b45f8	                cmp rax, qword [rbp - 8]	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x401019d	            0x77db	                            ja 0x401017a	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x401019f	            0xeb01	                           jmp 0x40101a2	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40101a1	              0x90	                                     nop	      9304	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x40101a2	    0x488b05000000	            mov rax, qword [0x040101a9] 	      9306	tc-i386.c	FUNCTION_111	IF_2
0x40101a9	        0x488b4008	                mov rax, qword [rax + 8]	      9306	tc-i386.c	FUNCTION_111	IF_2
0x40101ad	        0x483b45f8	                cmp rax, qword [rbp - 8]	      9306	tc-i386.c	FUNCTION_111	IF_2
0x40101b1	     0xf86c1000000	                           jbe 0x4010278	      9306	tc-i386.c	FUNCTION_111	IF_2
0x40101b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      9311	tc-i386.c	FUNCTION_111	IF_2
0x40101bb	    0x488905000000	            mov qword [0x040101c2], rax 	      9311	tc-i386.c	FUNCTION_111	IF_2
0x40101c2	            0xeb14	                           jmp 0x40101d8	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x40101c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      9313	tc-i386.c	FUNCTION_111	IF_2	FOR_2	IF_3
0x40101c8	         0xfb6402b	           movzx eax, byte [rax + 0x2b] 	      9313	tc-i386.c	FUNCTION_111	IF_2	FOR_2	IF_3
0x40101cc	          0x83e001	                              and eax, 1	      9313	tc-i386.c	FUNCTION_111	IF_2	FOR_2	IF_3
0x40101cf	            0x84c0	                             test al, al	      9313	tc-i386.c	FUNCTION_111	IF_2	FOR_2	IF_3
0x40101d1	            0x7418	                            je 0x40101eb	      9313	tc-i386.c	FUNCTION_111	IF_2	FOR_2	IF_3
0x40101d3	      0x488345f860	               add qword [rbp - 8], 0x60	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x40101d8	    0x488b05000000	            mov rax, qword [0x040101df] 	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x40101df	        0x488b4008	                mov rax, qword [rax + 8]	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x40101e3	        0x483b45f8	                cmp rax, qword [rbp - 8]	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x40101e7	            0x77db	                            ja 0x40101c4	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x40101e9	            0xeb01	                           jmp 0x40101ec	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x40101eb	              0x90	                                     nop	      9314	tc-i386.c	FUNCTION_111	IF_2	FOR_2	IF_3
0x40101ec	        0x488b45f8	                mov rax, qword [rbp - 8]	      9315	tc-i386.c	FUNCTION_111	IF_2
0x40101f0	    0x488905000000	            mov qword [0x040101f7], rax 	      9315	tc-i386.c	FUNCTION_111	IF_2
0x40101f7	    0x488b15000000	            mov rdx, qword [0x040101fe] 	      9318	tc-i386.c	FUNCTION_111	IF_2
0x40101fe	    0x488b05000000	            mov rax, qword [0x04010205] 	      9318	tc-i386.c	FUNCTION_111	IF_2
0x4010205	          0x488b00	                    mov rax, qword [rax]	      9318	tc-i386.c	FUNCTION_111	IF_2
0x4010208	          0x4839c2	                            cmp rdx, rax	      9319	tc-i386.c	FUNCTION_111	IF_2
0x401020b	            0x7511	                           jne 0x401021e	      9319	tc-i386.c	FUNCTION_111	IF_2
0x401020d	    0x488b05000000	            mov rax, qword [0x04010214] 	      9319	tc-i386.c	FUNCTION_111	IF_2
0x4010214	        0x488b4008	                mov rax, qword [rax + 8]	      9319	tc-i386.c	FUNCTION_111	IF_2
0x4010218	        0x483b45f8	                cmp rax, qword [rbp - 8]	      9319	tc-i386.c	FUNCTION_111	IF_2
0x401021c	            0x7407	                            je 0x4010225	      9319	tc-i386.c	FUNCTION_111	IF_2
0x401021e	      0xb801000000	                              mov eax, 1	      9319	tc-i386.c	FUNCTION_111	IF_2
0x4010223	            0xeb05	                           jmp 0x401022a	      9319	tc-i386.c	FUNCTION_111	IF_2
0x4010225	      0xb800000000	                              mov eax, 0	      9319	tc-i386.c	FUNCTION_111	IF_2
0x401022a	          0x8945f4	              mov dword [rbp - 0xc], eax	      9318	tc-i386.c	FUNCTION_111	IF_2
0x401022d	    0x48c705000000	               mov qword [0x04010238], 0	      9321	tc-i386.c	FUNCTION_111	IF_2
0x4010238	        0x837df400	                cmp dword [rbp - 0xc], 0	      9323	tc-i386.c	FUNCTION_111	IF_2	IF_4
0x401023c	            0x743a	                            je 0x4010278	      9323	tc-i386.c	FUNCTION_111	IF_2	IF_4
0x401023e	    0xc70500000000	               mov dword [0x04010248], 0	      9325	tc-i386.c	FUNCTION_111	IF_2	IF_4
0x4010248	    0x488b05000000	            mov rax, qword [0x0401024f] 	      9326	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5
0x401024f	          0x4885c0	                           test rax, rax	      9326	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5
0x4010252	            0x741a	                            je 0x401026e	      9326	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5
0x4010254	    0x488b05000000	            mov rax, qword [0x0401025b] 	      9327	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5	CALL_2
0x401025b	          0x4889c7	                            mov rdi, rax	      9327	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5	CALL_2
0x401025e	      0xe8fcf6ffff	               call sym.i386_index_check	      9327	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5	CALL_2
0x4010263	            0x85c0	                           test eax, eax	      9327	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5	CALL_2
0x4010265	            0x7507	                           jne 0x401026e	      9327	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5	CALL_2
0x4010267	      0xb800000000	                              mov eax, 0	      9328	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5
0x401026c	            0xeb0f	                           jmp 0x401027d	      9328	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5
0x401026e	    0xc70500000000	               mov dword [0x04010278], 1	      9329	tc-i386.c	FUNCTION_111	IF_2	IF_4
0x4010278	      0xb801000000	                              mov eax, 1	      9333	tc-i386.c	FUNCTION_111
0x401027d	              0xc9	                                   leave	      9334	tc-i386.c	FUNCTION_111
0x401027e	              0xc3	                                     ret	      9334	tc-i386.c	FUNCTION_111
process_immext	CALL,10:FOR,2:WHILE,0:functions,0:SWITCH,0:IF,6:ELSE,0:DO,0	173
0x4003fbd	              0x55	                                push rbp	      3670	tc-i386.c	FUNCTION_65
0x4003fbe	          0x4889e5	                            mov rbp, rsp	      3670	tc-i386.c	FUNCTION_65
0x4003fc1	            0x4156	                                push r14	      3670	tc-i386.c	FUNCTION_65
0x4003fc3	            0x4155	                                push r13	      3670	tc-i386.c	FUNCTION_65
0x4003fc5	            0x4154	                                push r12	      3670	tc-i386.c	FUNCTION_65
0x4003fc7	              0x53	                                push rbx	      3670	tc-i386.c	FUNCTION_65
0x4003fc8	        0x4883ec10	                           sub rsp, 0x10	      3670	tc-i386.c	FUNCTION_65
0x4003fcc	     0xfb605000000	           movzx eax, byte [0x04003fd3] 	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4003fd3	          0x83e008	                              and eax, 8	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4003fd6	            0x84c0	                             test al, al	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4003fd8	            0x7512	                           jne 0x4003fec	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4003fda	     0xfb605000000	           movzx eax, byte [0x04003fe1] 	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4003fe1	          0x83e020	                           and eax, 0x20	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4003fe4	            0x84c0	                             test al, al	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4003fe6	     0xf8496000000	                            je 0x4004082	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4003fec	    0x8b0500000000	            mov eax, dword [0x04003ff2] 	      3674	tc-i386.c	FUNCTION_65	IF_1
0x4003ff2	            0x85c0	                           test eax, eax	      3674	tc-i386.c	FUNCTION_65	IF_1
0x4003ff4	     0xf8488000000	                            je 0x4004082	      3674	tc-i386.c	FUNCTION_65	IF_1
0x4003ffa	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4004001	            0xeb6a	                           jmp 0x400406d	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4004003	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x4004006	        0x4883c014	                           add rax, 0x14	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x400400a	    0x488b04c50000	                  mov rax, qword [rax*8]	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x4004012	          0x4889c7	                            mov rdi, rax	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x4004015	      0xe8fbd5ffff	                call sym.register_number	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x400401a	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x400401d	            0x744a	                            je 0x4004069	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x400401f	    0x4c8b35000000	            mov r14, qword [0x04004026] 	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4004026	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4004029	        0x448d6801	                     lea r13d, [rax + 1]	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x400402d	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3685	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2
0x4004030	        0x4883c014	                           add rax, 0x14	      3685	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2
0x4004034	    0x488b04c50000	                  mov rax, qword [rax*8]	      3685	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2
0x400403c	          0x4c8b20	                    mov r12, qword [rax]	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x400403f	    0x488b1d000000	            mov rbx, qword [0x04004046] 	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4004046	      0xbf00000000	                              mov edi, 0	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x400404b	      0xe800000000	                          call 0x4004050	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4004050	          0x4d89f0	                             mov r8, r14	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4004053	          0x4489e9	                           mov ecx, r13d	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4004056	          0x4c89e2	                            mov rdx, r12	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4004059	          0x4889de	                            mov rsi, rbx	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x400405c	          0x4889c7	                            mov rdi, rax	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x400405f	      0xb800000000	                              mov eax, 0	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4004064	      0xe800000000	                          call 0x4004069	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4004069	        0x8345d001	               add dword [rbp - 0x30], 1	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x400406d	    0x8b0500000000	            mov eax, dword [0x04004073] 	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4004073	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4004076	            0x778b	                            ja 0x4004003	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4004078	    0xc70500000000	               mov dword [0x04004082], 0	      3688	tc-i386.c	FUNCTION_65	IF_1
0x4004082	     0xfb605000000	           movzx eax, byte [0x04004089] 	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4004089	          0x83e040	                           and eax, 0x40	      3691	tc-i386.c	FUNCTION_65	IF_3
0x400408c	            0x84c0	                             test al, al	      3691	tc-i386.c	FUNCTION_65	IF_3
0x400408e	     0xf84e6000000	                            je 0x400417a	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4004094	    0x8b0500000000	            mov eax, dword [0x0400409a] 	      3691	tc-i386.c	FUNCTION_65	IF_3
0x400409a	            0x85c0	                           test eax, eax	      3691	tc-i386.c	FUNCTION_65	IF_3
0x400409c	     0xf84d8000000	                            je 0x400417a	      3691	tc-i386.c	FUNCTION_65	IF_3
0x40040a2	    0x8b0500000000	            mov eax, dword [0x040040a8] 	      3699	tc-i386.c	FUNCTION_65	IF_3	IF_4
0x40040a8	          0x83f803	                              cmp eax, 3	      3699	tc-i386.c	FUNCTION_65	IF_3	IF_4
0x40040ab	            0x7414	                            je 0x40040c1	      3699	tc-i386.c	FUNCTION_65	IF_3	IF_4
0x40040ad	      0xba00000000	                              mov edx, 0	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x40040b2	      0xbe740e0000	                          mov esi, 0xe74	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x40040b7	      0xbf00000000	                              mov edi, 0	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x40040bc	      0xe800000000	                          call 0x40040c1	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x40040c1	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      3702	tc-i386.c	FUNCTION_65	IF_3	FOR_2
0x40040c8	            0xeb20	                           jmp 0x40040ea	      3702	tc-i386.c	FUNCTION_65	IF_3	FOR_2
0x40040ca	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x40040cd	        0x4883c014	                           add rax, 0x14	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x40040d1	    0x488b04c50000	                  mov rax, qword [rax*8]	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x40040d9	          0x4889c7	                            mov rdi, rax	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x40040dc	      0xe834d5ffff	                call sym.register_number	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x40040e1	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x40040e4	            0x753f	                           jne 0x4004125	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x40040e6	        0x8345d401	               add dword [rbp - 0x2c], 1	      3702	tc-i386.c	FUNCTION_65	IF_3	FOR_2
0x40040ea	        0x837dd401	               cmp dword [rbp - 0x2c], 1	      3702	tc-i386.c	FUNCTION_65	IF_3	FOR_2
0x40040ee	            0x76da	                           jbe 0x40040ca	      3702	tc-i386.c	FUNCTION_65	IF_3	FOR_2
0x40040f0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x40040f3	        0x4883c014	                           add rax, 0x14	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x40040f7	    0x488b04c50000	                  mov rax, qword [rax*8]	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x40040ff	          0x4889c7	                            mov rdi, rax	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4004102	      0xe80ed5ffff	                call sym.register_number	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4004107	            0x89c1	                            mov ecx, eax	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4004109	    0x8b0500000000	            mov eax, dword [0x0400410f] 	      3708	tc-i386.c	FUNCTION_65	IF_3	IF_6
0x400410f	      0x3dfb000000	                           cmp eax, 0xfb	      3708	tc-i386.c	FUNCTION_65	IF_3	IF_6
0x4004114	           0xf94c0	                                 sete al	      3708	tc-i386.c	FUNCTION_65	IF_3	IF_6
0x4004117	           0xfb6d0	                           movzx edx, al	      3708	tc-i386.c	FUNCTION_65	IF_3	IF_6
0x400411a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3708	tc-i386.c	FUNCTION_65	IF_3	IF_6
0x400411d	             0x1d0	                            add eax, edx	      3708	tc-i386.c	FUNCTION_65	IF_3	IF_6
0x400411f	            0x39c1	                            cmp ecx, eax	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4004121	            0x744d	                            je 0x4004170	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4004123	            0xeb01	                           jmp 0x4004126	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4004125	              0x90	                                     nop	      3704	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5
0x4004126	    0x4c8b35000000	            mov r14, qword [0x0400412d] 	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x400412d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4004130	        0x448d6801	                     lea r13d, [rax + 1]	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4004134	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3712	tc-i386.c	FUNCTION_65	IF_3	IF_6
0x4004137	        0x4883c014	                           add rax, 0x14	      3712	tc-i386.c	FUNCTION_65	IF_3	IF_6
0x400413b	    0x488b04c50000	                  mov rax, qword [rax*8]	      3712	tc-i386.c	FUNCTION_65	IF_3	IF_6
0x4004143	          0x4c8b20	                    mov r12, qword [rax]	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4004146	    0x488b1d000000	            mov rbx, qword [0x0400414d] 	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x400414d	      0xbf00000000	                              mov edi, 0	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4004152	      0xe800000000	                          call 0x4004157	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4004157	          0x4d89f0	                             mov r8, r14	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x400415a	          0x4489e9	                           mov ecx, r13d	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x400415d	          0x4c89e2	                            mov rdx, r12	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4004160	          0x4889de	                            mov rsi, rbx	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4004163	          0x4889c7	                            mov rdi, rax	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4004166	      0xb800000000	                              mov eax, 0	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x400416b	      0xe800000000	                          call 0x4004170	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4004170	    0xc70500000000	               mov dword [0x0400417a], 0	      3716	tc-i386.c	FUNCTION_65	IF_3
0x400417a	    0x8b0500000000	            mov eax, dword [0x04004180] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4004180	          0x83f801	                              cmp eax, 1	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4004183	            0x7741	                            ja 0x40041c6	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4004185	    0x8b0500000000	            mov eax, dword [0x0400418b] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x400418b	          0x83f802	                              cmp eax, 2	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x400418e	            0x764a	                           jbe 0x40041da	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4004190	     0xfb605000000	           movzx eax, byte [0x04004197] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4004197	          0x83e006	                              and eax, 6	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x400419a	            0x84c0	                             test al, al	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x400419c	            0x751d	                           jne 0x40041bb	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x400419e	    0x8b0500000000	            mov eax, dword [0x040041a4] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041a4	      0x2500800300	                        and eax, 0x38000	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041a9	            0x85c0	                           test eax, eax	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041ab	            0x750e	                           jne 0x40041bb	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041ad	      0xbf00000000	                              mov edi, 0	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041b2	      0xe8a6f8ffff	               call sym.is_evex_encoding	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041b7	            0x85c0	                           test eax, eax	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041b9	            0x740b	                            je 0x40041c6	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041bb	    0x8b0500000000	            mov eax, dword [0x040041c1] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041c1	          0x83f804	                              cmp eax, 4	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041c4	            0x7614	                           jbe 0x40041da	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041c6	      0xba00000000	                              mov edx, 0	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041cb	      0xbe940e0000	                          mov esi, 0xe94	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041d0	      0xbf00000000	                              mov edi, 0	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041d5	      0xe800000000	                          call 0x40041da	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x40041da	    0x8b0500000000	            mov eax, dword [0x040041e0] 	      3734	tc-i386.c	FUNCTION_65
0x40041e0	          0x8d5001	                      lea edx, [rax + 1]	      3734	tc-i386.c	FUNCTION_65
0x40041e3	    0x891500000000	            mov dword [0x040041e9], edx 	      3734	tc-i386.c	FUNCTION_65
0x40041e9	            0x89c0	                            mov eax, eax	      3734	tc-i386.c	FUNCTION_65
0x40041eb	        0x48c1e005	                              shl rax, 5	      3734	tc-i386.c	FUNCTION_65
0x40041ef	    0x480500000000	                              add rax, 0	      3734	tc-i386.c	FUNCTION_65
0x40041f5	        0x488945d8	             mov qword [rbp - 0x28], rax	      3734	tc-i386.c	FUNCTION_65
0x40041f9	    0x8b0500000000	            mov eax, dword [0x040041ff] 	      3735	tc-i386.c	FUNCTION_65
0x40041ff	            0x89c0	                            mov eax, eax	      3735	tc-i386.c	FUNCTION_65
0x4004201	        0x488d5014	                   lea rdx, [rax + 0x14]	      3735	tc-i386.c	FUNCTION_65
0x4004205	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3735	tc-i386.c	FUNCTION_65
0x4004209	    0x488904d50000	                  mov qword [rdx*8], rax	      3735	tc-i386.c	FUNCTION_65
0x4004211	    0x8b0500000000	            mov eax, dword [0x04004217] 	      3736	tc-i386.c	FUNCTION_65
0x4004217	            0x89c2	                            mov edx, eax	      3736	tc-i386.c	FUNCTION_65
0x4004219	        0x4883c20e	                            add rdx, 0xe	      3736	tc-i386.c	FUNCTION_65
0x400421d	    0x48c704d50000	                    mov qword [rdx*8], 0	      3736	tc-i386.c	FUNCTION_65
0x4004229	            0x89c0	                            mov eax, eax	      3736	tc-i386.c	FUNCTION_65
0x400422b	        0x4883c00e	                            add rax, 0xe	      3736	tc-i386.c	FUNCTION_65
0x400422f	     0xfb614c50000	                 movzx edx, byte [rax*8]	      3736	tc-i386.c	FUNCTION_65
0x4004237	          0x83ca04	                               or edx, 4	      3736	tc-i386.c	FUNCTION_65
0x400423a	    0x8814c5000000	                    mov byte [rax*8], dl	      3736	tc-i386.c	FUNCTION_65
0x4004241	    0x8b0500000000	            mov eax, dword [0x04004247] 	      3737	tc-i386.c	FUNCTION_65
0x4004247	          0x83c001	                              add eax, 1	      3737	tc-i386.c	FUNCTION_65
0x400424a	    0x890500000000	            mov dword [0x04004250], eax 	      3737	tc-i386.c	FUNCTION_65
0x4004250	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3738	tc-i386.c	FUNCTION_65
0x4004254	        0xc6401802	                mov byte [rax + 0x18], 2	      3738	tc-i386.c	FUNCTION_65
0x4004258	    0x8b0500000000	            mov eax, dword [0x0400425e] 	      3739	tc-i386.c	FUNCTION_65
0x400425e	            0x89c2	                            mov edx, eax	      3739	tc-i386.c	FUNCTION_65
0x4004260	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3739	tc-i386.c	FUNCTION_65
0x4004264	        0x48895010	             mov qword [rax + 0x10], rdx	      3739	tc-i386.c	FUNCTION_65
0x4004268	    0xc70500000000	         mov dword [0x04004272], 0xffff 	      3740	tc-i386.c	FUNCTION_65
0x4004272	              0x90	                                     nop	      3741	tc-i386.c	FUNCTION_65
0x4004273	        0x4883c410	                           add rsp, 0x10	      3741	tc-i386.c	FUNCTION_65
0x4004277	              0x5b	                                 pop rbx	      3741	tc-i386.c	FUNCTION_65
0x4004278	            0x415c	                                 pop r12	      3741	tc-i386.c	FUNCTION_65
0x400427a	            0x415d	                                 pop r13	      3741	tc-i386.c	FUNCTION_65
0x400427c	            0x415e	                                 pop r14	      3741	tc-i386.c	FUNCTION_65
0x400427e	              0x5d	                                 pop rbp	      3741	tc-i386.c	FUNCTION_65
0x400427f	              0xc3	                                     ret	      3741	tc-i386.c	FUNCTION_65
match_mem_size	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	127
0x4000e35	              0x55	                                push rbp	      1941	tc-i386.c	FUNCTION_24
0x4000e36	          0x4889e5	                            mov rbp, rsp	      1941	tc-i386.c	FUNCTION_24
0x4000e39	        0x4883ec10	                           sub rsp, 0x10	      1941	tc-i386.c	FUNCTION_24
0x4000e3d	        0x48897df8	                mov qword [rbp - 8], rdi	      1941	tc-i386.c	FUNCTION_24
0x4000e41	          0x8975f4	              mov dword [rbp - 0xc], esi	      1941	tc-i386.c	FUNCTION_24
0x4000e44	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1942	tc-i386.c	FUNCTION_24	CALL_1
0x4000e47	        0x488b45f8	                mov rax, qword [rbp - 8]	      1942	tc-i386.c	FUNCTION_24	CALL_1
0x4000e4b	            0x89d6	                            mov esi, edx	      1942	tc-i386.c	FUNCTION_24	CALL_1
0x4000e4d	          0x4889c7	                            mov rdi, rax	      1942	tc-i386.c	FUNCTION_24	CALL_1
0x4000e50	      0xe816feffff	                 call sym.match_reg_size	      1942	tc-i386.c	FUNCTION_24	CALL_1
0x4000e55	            0x85c0	                           test eax, eax	      1943	tc-i386.c	FUNCTION_24
0x4000e57	     0xf8485010000	                            je 0x4000fe2	      1943	tc-i386.c	FUNCTION_24
0x4000e5d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1943	tc-i386.c	FUNCTION_24
0x4000e60	        0x4883c00e	                            add rax, 0xe	      1943	tc-i386.c	FUNCTION_24
0x4000e64	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1943	tc-i386.c	FUNCTION_24
0x4000e6c	          0xc0e806	                               shr al, 6	      1943	tc-i386.c	FUNCTION_24
0x4000e6f	          0x83e001	                              and eax, 1	      1943	tc-i386.c	FUNCTION_24
0x4000e72	            0x84c0	                             test al, al	      1943	tc-i386.c	FUNCTION_24
0x4000e74	            0x742a	                            je 0x4000ea0	      1943	tc-i386.c	FUNCTION_24
0x4000e76	    0x488b05000000	            mov rax, qword [0x04000e7d] 	      1944	tc-i386.c	FUNCTION_24
0x4000e7d	          0x4885c0	                           test rax, rax	      1944	tc-i386.c	FUNCTION_24
0x4000e80	            0x751e	                           jne 0x4000ea0	      1944	tc-i386.c	FUNCTION_24
0x4000e82	        0x488b45f8	                mov rax, qword [rbp - 8]	      1945	tc-i386.c	FUNCTION_24
0x4000e86	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1945	tc-i386.c	FUNCTION_24
0x4000e89	        0x4883c206	                              add rdx, 6	      1945	tc-i386.c	FUNCTION_24
0x4000e8d	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      1945	tc-i386.c	FUNCTION_24
0x4000e92	          0xc0e806	                               shr al, 6	      1945	tc-i386.c	FUNCTION_24
0x4000e95	          0x83e001	                              and eax, 1	      1945	tc-i386.c	FUNCTION_24
0x4000e98	            0x84c0	                             test al, al	      1945	tc-i386.c	FUNCTION_24
0x4000e9a	     0xf8442010000	                            je 0x4000fe2	      1945	tc-i386.c	FUNCTION_24
0x4000ea0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1946	tc-i386.c	FUNCTION_24
0x4000ea3	        0x4883c00e	                            add rax, 0xe	      1946	tc-i386.c	FUNCTION_24
0x4000ea7	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1946	tc-i386.c	FUNCTION_24
0x4000eaf	          0x83e001	                              and eax, 1	      1946	tc-i386.c	FUNCTION_24
0x4000eb2	            0x84c0	                             test al, al	      1946	tc-i386.c	FUNCTION_24
0x4000eb4	            0x741b	                            je 0x4000ed1	      1946	tc-i386.c	FUNCTION_24
0x4000eb6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1947	tc-i386.c	FUNCTION_24
0x4000eba	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1947	tc-i386.c	FUNCTION_24
0x4000ebd	        0x4883c206	                              add rdx, 6	      1947	tc-i386.c	FUNCTION_24
0x4000ec1	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      1947	tc-i386.c	FUNCTION_24
0x4000ec6	          0x83e001	                              and eax, 1	      1947	tc-i386.c	FUNCTION_24
0x4000ec9	            0x84c0	                             test al, al	      1947	tc-i386.c	FUNCTION_24
0x4000ecb	     0xf8411010000	                            je 0x4000fe2	      1947	tc-i386.c	FUNCTION_24
0x4000ed1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1952	tc-i386.c	FUNCTION_24
0x4000ed5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1952	tc-i386.c	FUNCTION_24
0x4000ed8	        0x4883c206	                              add rdx, 6	      1952	tc-i386.c	FUNCTION_24
0x4000edc	       0xfb644d004	      movzx eax, byte [rax + rdx*8 + 4] 	      1952	tc-i386.c	FUNCTION_24
0x4000ee1	          0xc0e802	                               shr al, 2	      1952	tc-i386.c	FUNCTION_24
0x4000ee4	          0x83e001	                              and eax, 1	      1952	tc-i386.c	FUNCTION_24
0x4000ee7	            0x84c0	                             test al, al	      1943	tc-i386.c	FUNCTION_24
0x4000ee9	     0xf84d7000000	                            je 0x4000fc6	      1943	tc-i386.c	FUNCTION_24
0x4000eef	        0x488b45f8	                mov rax, qword [rbp - 8]	      1953	tc-i386.c	FUNCTION_24
0x4000ef3	         0xfb6402f	           movzx eax, byte [rax + 0x2f] 	      1953	tc-i386.c	FUNCTION_24
0x4000ef7	          0x83e020	                           and eax, 0x20	      1953	tc-i386.c	FUNCTION_24
0x4000efa	            0x84c0	                             test al, al	      1953	tc-i386.c	FUNCTION_24
0x4000efc	     0xf85c4000000	                           jne 0x4000fc6	      1953	tc-i386.c	FUNCTION_24
0x4000f02	        0x488b45f8	                mov rax, qword [rbp - 8]	      1954	tc-i386.c	FUNCTION_24
0x4000f06	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1954	tc-i386.c	FUNCTION_24
0x4000f09	        0x4883c206	                              add rdx, 6	      1954	tc-i386.c	FUNCTION_24
0x4000f0d	       0xfb644d007	      movzx eax, byte [rax + rdx*8 + 7] 	      1954	tc-i386.c	FUNCTION_24
0x4000f12	          0xc0e805	                               shr al, 5	      1954	tc-i386.c	FUNCTION_24
0x4000f15	          0x83e001	                              and eax, 1	      1954	tc-i386.c	FUNCTION_24
0x4000f18	            0x84c0	                             test al, al	      1954	tc-i386.c	FUNCTION_24
0x4000f1a	            0x754a	                           jne 0x4000f66	      1954	tc-i386.c	FUNCTION_24
0x4000f1c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1955	tc-i386.c	FUNCTION_24
0x4000f20	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1955	tc-i386.c	FUNCTION_24
0x4000f23	        0x4883c206	                              add rdx, 6	      1955	tc-i386.c	FUNCTION_24
0x4000f27	       0xfb644d007	      movzx eax, byte [rax + rdx*8 + 7] 	      1955	tc-i386.c	FUNCTION_24
0x4000f2c	          0xc0e806	                               shr al, 6	      1955	tc-i386.c	FUNCTION_24
0x4000f2f	          0x83e001	                              and eax, 1	      1955	tc-i386.c	FUNCTION_24
0x4000f32	            0x84c0	                             test al, al	      1955	tc-i386.c	FUNCTION_24
0x4000f34	            0x7530	                           jne 0x4000f66	      1955	tc-i386.c	FUNCTION_24
0x4000f36	        0x488b45f8	                mov rax, qword [rbp - 8]	      1956	tc-i386.c	FUNCTION_24
0x4000f3a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1956	tc-i386.c	FUNCTION_24
0x4000f3d	        0x4883c206	                              add rdx, 6	      1956	tc-i386.c	FUNCTION_24
0x4000f41	       0xfb644d007	      movzx eax, byte [rax + rdx*8 + 7] 	      1956	tc-i386.c	FUNCTION_24
0x4000f46	          0xc0e807	                               shr al, 7	      1956	tc-i386.c	FUNCTION_24
0x4000f49	            0x84c0	                             test al, al	      1956	tc-i386.c	FUNCTION_24
0x4000f4b	            0x7519	                           jne 0x4000f66	      1956	tc-i386.c	FUNCTION_24
0x4000f4d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1957	tc-i386.c	FUNCTION_24
0x4000f51	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1957	tc-i386.c	FUNCTION_24
0x4000f54	        0x4883c206	                              add rdx, 6	      1957	tc-i386.c	FUNCTION_24
0x4000f58	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      1957	tc-i386.c	FUNCTION_24
0x4000f5d	            0xd0e8	                               shr al, 1	      1957	tc-i386.c	FUNCTION_24
0x4000f5f	          0x83e001	                              and eax, 1	      1957	tc-i386.c	FUNCTION_24
0x4000f62	            0x84c0	                             test al, al	      1957	tc-i386.c	FUNCTION_24
0x4000f64	            0x7460	                            je 0x4000fc6	      1957	tc-i386.c	FUNCTION_24
0x4000f66	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1958	tc-i386.c	FUNCTION_24
0x4000f69	        0x4883c00e	                            add rax, 0xe	      1958	tc-i386.c	FUNCTION_24
0x4000f6d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1958	tc-i386.c	FUNCTION_24
0x4000f75	          0xc0e803	                               shr al, 3	      1958	tc-i386.c	FUNCTION_24
0x4000f78	          0x83e001	                              and eax, 1	      1958	tc-i386.c	FUNCTION_24
0x4000f7b	            0x84c0	                             test al, al	      1960	tc-i386.c	FUNCTION_24
0x4000f7d	            0x7539	                           jne 0x4000fb8	      1960	tc-i386.c	FUNCTION_24
0x4000f7f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1959	tc-i386.c	FUNCTION_24
0x4000f82	        0x4883c00e	                            add rax, 0xe	      1959	tc-i386.c	FUNCTION_24
0x4000f86	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1959	tc-i386.c	FUNCTION_24
0x4000f8e	          0xc0e804	                               shr al, 4	      1959	tc-i386.c	FUNCTION_24
0x4000f91	          0x83e001	                              and eax, 1	      1959	tc-i386.c	FUNCTION_24
0x4000f94	            0x84c0	                             test al, al	      1959	tc-i386.c	FUNCTION_24
0x4000f96	            0x7520	                           jne 0x4000fb8	      1959	tc-i386.c	FUNCTION_24
0x4000f98	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1960	tc-i386.c	FUNCTION_24
0x4000f9b	        0x4883c00e	                            add rax, 0xe	      1960	tc-i386.c	FUNCTION_24
0x4000f9f	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1960	tc-i386.c	FUNCTION_24
0x4000fa7	          0xc0e805	                               shr al, 5	      1960	tc-i386.c	FUNCTION_24
0x4000faa	          0x83e001	                              and eax, 1	      1960	tc-i386.c	FUNCTION_24
0x4000fad	            0x84c0	                             test al, al	      1960	tc-i386.c	FUNCTION_24
0x4000faf	            0x7507	                           jne 0x4000fb8	      1960	tc-i386.c	FUNCTION_24
0x4000fb1	      0xb801000000	                              mov eax, 1	      1960	tc-i386.c	FUNCTION_24
0x4000fb6	            0xeb05	                           jmp 0x4000fbd	      1960	tc-i386.c	FUNCTION_24
0x4000fb8	      0xb800000000	                              mov eax, 0	      1960	tc-i386.c	FUNCTION_24
0x4000fbd	          0x83e001	                              and eax, 1	      1952	tc-i386.c	FUNCTION_24
0x4000fc0	            0x84c0	                             test al, al	      1943	tc-i386.c	FUNCTION_24
0x4000fc2	            0x741e	                            je 0x4000fe2	      1943	tc-i386.c	FUNCTION_24
0x4000fc4	            0xeb15	                           jmp 0x4000fdb	      1943	tc-i386.c	FUNCTION_24
0x4000fc6	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1961	tc-i386.c	FUNCTION_24	CALL_2
0x4000fc9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1961	tc-i386.c	FUNCTION_24	CALL_2
0x4000fcd	            0x89d6	                            mov esi, edx	      1961	tc-i386.c	FUNCTION_24	CALL_2
0x4000fcf	          0x4889c7	                            mov rdi, rax	      1961	tc-i386.c	FUNCTION_24	CALL_2
0x4000fd2	      0xe8acfdffff	                call sym.match_simd_size	      1961	tc-i386.c	FUNCTION_24	CALL_2
0x4000fd7	            0x85c0	                           test eax, eax	      1952	tc-i386.c	FUNCTION_24
0x4000fd9	            0x7407	                            je 0x4000fe2	      1952	tc-i386.c	FUNCTION_24
0x4000fdb	      0xb801000000	                              mov eax, 1	      1943	tc-i386.c	FUNCTION_24
0x4000fe0	            0xeb05	                           jmp 0x4000fe7	      1943	tc-i386.c	FUNCTION_24
0x4000fe2	      0xb800000000	                              mov eax, 0	      1943	tc-i386.c	FUNCTION_24
0x4000fe7	              0xc9	                                   leave	      1962	tc-i386.c	FUNCTION_24
0x4000fe8	              0xc3	                                     ret	      1962	tc-i386.c	FUNCTION_24
check_hle	CALL,10:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,3:ELSE,0:DO,0	88
0x4004280	              0x55	                                push rbp	      3746	tc-i386.c	FUNCTION_66
0x4004281	          0x4889e5	                            mov rbp, rsp	      3746	tc-i386.c	FUNCTION_66
0x4004284	            0x4154	                                push r12	      3746	tc-i386.c	FUNCTION_66
0x4004286	              0x53	                                push rbx	      3746	tc-i386.c	FUNCTION_66
0x4004287	     0xfb605000000	           movzx eax, byte [0x0400428e] 	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400428e	          0xc0e806	                               shr al, 6	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x4004291	           0xfb6c0	                           movzx eax, al	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x4004294	          0x83f801	                              cmp eax, 1	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x4004297	            0x7466	                            je 0x40042ff	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x4004299	          0x83f801	                              cmp eax, 1	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400429c	            0x7f06	                            jg 0x40042a4	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400429e	            0x85c0	                           test eax, eax	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x40042a0	            0x7428	                            je 0x40042ca	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x40042a2	            0xeb12	                           jmp 0x40042b6	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x40042a4	          0x83f802	                              cmp eax, 2	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x40042a7	     0xf8492000000	                            je 0x400433f	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x40042ad	          0x83f803	                              cmp eax, 3	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x40042b0	     0xf8493000000	                            je 0x4004349	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x40042b6	      0xba00000000	                              mov edx, 0	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x40042bb	      0xbea60e0000	                          mov esi, 0xea6	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x40042c0	      0xbf00000000	                              mov edi, 0	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x40042c5	      0xe800000000	                          call 0x40042ca	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x40042ca	    0x4c8b25000000	            mov r12, qword [0x040042d1] 	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40042d1	    0x488b1d000000	            mov rbx, qword [0x040042d8] 	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40042d8	      0xbf00000000	                              mov edi, 0	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40042dd	      0xe800000000	                          call 0x40042e2	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40042e2	          0x4c89e2	                            mov rdx, r12	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40042e5	          0x4889de	                            mov rsi, rbx	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40042e8	          0x4889c7	                            mov rdi, rax	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40042eb	      0xb800000000	                              mov eax, 0	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40042f0	      0xe800000000	                          call 0x40042f5	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40042f5	      0xb800000000	                              mov eax, 0	      3754	tc-i386.c	FUNCTION_66	SWITCH_1
0x40042fa	      0xe9dc000000	                           jmp 0x40043db	      3754	tc-i386.c	FUNCTION_66	SWITCH_1
0x40042ff	     0xfb605000000	           movzx eax, byte [0x04004306] 	      3756	tc-i386.c	FUNCTION_66	SWITCH_1	IF_1
0x4004306	            0x84c0	                             test al, al	      3756	tc-i386.c	FUNCTION_66	SWITCH_1	IF_1
0x4004308	            0x740a	                            je 0x4004314	      3756	tc-i386.c	FUNCTION_66	SWITCH_1	IF_1
0x400430a	      0xb801000000	                              mov eax, 1	      3757	tc-i386.c	FUNCTION_66	SWITCH_1	IF_1
0x400430f	      0xe9c7000000	                           jmp 0x40043db	      3757	tc-i386.c	FUNCTION_66	SWITCH_1	IF_1
0x4004314	    0x488b1d000000	            mov rbx, qword [0x0400431b] 	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x400431b	      0xbf00000000	                              mov edi, 0	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4004320	      0xe800000000	                          call 0x4004325	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4004325	          0x4889de	                            mov rsi, rbx	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4004328	          0x4889c7	                            mov rdi, rax	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x400432b	      0xb800000000	                              mov eax, 0	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4004330	      0xe800000000	                          call 0x4004335	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4004335	      0xb800000000	                              mov eax, 0	      3759	tc-i386.c	FUNCTION_66	SWITCH_1
0x400433a	      0xe99c000000	                           jmp 0x40043db	      3759	tc-i386.c	FUNCTION_66	SWITCH_1
0x400433f	      0xb801000000	                              mov eax, 1	      3761	tc-i386.c	FUNCTION_66	SWITCH_1
0x4004344	      0xe992000000	                           jmp 0x40043db	      3761	tc-i386.c	FUNCTION_66	SWITCH_1
0x4004349	     0xfb605000000	           movzx eax, byte [0x04004350] 	      3763	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2
0x4004350	            0x3cf3	                            cmp al, 0xf3	      3763	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2
0x4004352	            0x7428	                            je 0x400437c	      3763	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2
0x4004354	    0x488b1d000000	            mov rbx, qword [0x0400435b] 	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x400435b	      0xbf00000000	                              mov edi, 0	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4004360	      0xe800000000	                          call 0x4004365	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4004365	          0x4889de	                            mov rsi, rbx	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4004368	          0x4889c7	                            mov rdi, rax	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x400436b	      0xb800000000	                              mov eax, 0	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4004370	      0xe800000000	                          call 0x4004375	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4004375	      0xb800000000	                              mov eax, 0	      3767	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2
0x400437a	            0xeb5f	                           jmp 0x40043db	      3767	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2
0x400437c	    0x8b0500000000	            mov eax, dword [0x04004382] 	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x4004382	            0x85c0	                           test eax, eax	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x4004384	            0x7428	                            je 0x40043ae	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x4004386	    0x8b0500000000	            mov eax, dword [0x0400438c] 	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x400438c	          0x83e801	                              sub eax, 1	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x400438f	            0x89c0	                            mov eax, eax	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x4004391	        0x4883c00e	                            add rax, 0xe	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x4004395	    0x488b04c50000	                  mov rax, qword [rax*8]	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x400439d	      0xbe03000000	                              mov esi, 3	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x40043a2	          0x4889c7	                            mov rdi, rax	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x40043a5	      0xe882c7ffff	             call sym.operand_type_check	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x40043aa	            0x85c0	                           test eax, eax	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x40043ac	            0x7528	                           jne 0x40043d6	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x40043ae	    0x488b1d000000	            mov rbx, qword [0x040043b5] 	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x40043b5	      0xbf00000000	                              mov edi, 0	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x40043ba	      0xe800000000	                          call 0x40043bf	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x40043bf	          0x4889de	                            mov rsi, rbx	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x40043c2	          0x4889c7	                            mov rdi, rax	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x40043c5	      0xb800000000	                              mov eax, 0	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x40043ca	      0xe800000000	                          call 0x40043cf	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x40043cf	      0xb800000000	                              mov eax, 0	      3774	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x40043d4	            0xeb05	                           jmp 0x40043db	      3774	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x40043d6	      0xb801000000	                              mov eax, 1	      3776	tc-i386.c	FUNCTION_66	SWITCH_1
0x40043db	              0x5b	                                 pop rbx	      3778	tc-i386.c	FUNCTION_66
0x40043dc	            0x415c	                                 pop r12	      3778	tc-i386.c	FUNCTION_66
0x40043de	              0x5d	                                 pop rbp	      3778	tc-i386.c	FUNCTION_66
0x40043df	              0xc3	                                     ret	      3778	tc-i386.c	FUNCTION_66
imm_size	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,3:ELSE,2:DO,0	39
0x400d844	              0x55	                                push rbp	      7834	tc-i386.c	FUNCTION_94
0x400d845	          0x4889e5	                            mov rbp, rsp	      7834	tc-i386.c	FUNCTION_94
0x400d848	          0x897dec	             mov dword [rbp - 0x14], edi	      7834	tc-i386.c	FUNCTION_94
0x400d84b	    0xc745fc040000	                  mov dword [rbp - 4], 4	      7835	tc-i386.c	FUNCTION_94
0x400d852	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7836	tc-i386.c	FUNCTION_94	IF_1
0x400d855	        0x4883c00e	                            add rax, 0xe	      7836	tc-i386.c	FUNCTION_94	IF_1
0x400d859	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7836	tc-i386.c	FUNCTION_94	IF_1
0x400d861	          0xc0e807	                               shr al, 7	      7836	tc-i386.c	FUNCTION_94	IF_1
0x400d864	            0x84c0	                             test al, al	      7836	tc-i386.c	FUNCTION_94	IF_1
0x400d866	            0x7409	                            je 0x400d871	      7836	tc-i386.c	FUNCTION_94	IF_1
0x400d868	    0xc745fc080000	                  mov dword [rbp - 4], 8	      7837	tc-i386.c	FUNCTION_94	IF_1
0x400d86f	            0xeb5b	                           jmp 0x400d8cc	      7837	tc-i386.c	FUNCTION_94	IF_1
0x400d871	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d874	        0x4883c00e	                            add rax, 0xe	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d878	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d880	          0xc0e802	                               shr al, 2	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d883	          0x83e001	                              and eax, 1	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d886	            0x84c0	                             test al, al	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d888	            0x7519	                           jne 0x400d8a3	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d88a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d88d	        0x4883c00e	                            add rax, 0xe	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d891	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d899	          0xc0e803	                               shr al, 3	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d89c	          0x83e001	                              and eax, 1	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d89f	            0x84c0	                             test al, al	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d8a1	            0x7409	                            je 0x400d8ac	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d8a3	    0xc745fc010000	                  mov dword [rbp - 4], 1	      7839	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d8aa	            0xeb20	                           jmp 0x400d8cc	      7839	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400d8ac	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x400d8af	        0x4883c00e	                            add rax, 0xe	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x400d8b3	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x400d8bb	          0xc0e804	                               shr al, 4	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x400d8be	          0x83e001	                              and eax, 1	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x400d8c1	            0x84c0	                             test al, al	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x400d8c3	            0x7407	                            je 0x400d8cc	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x400d8c5	    0xc745fc020000	                  mov dword [rbp - 4], 2	      7841	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x400d8cc	          0x8b45fc	                mov eax, dword [rbp - 4]	      7842	tc-i386.c	FUNCTION_94
0x400d8cf	              0x5d	                                 pop rbp	      7843	tc-i386.c	FUNCTION_94
0x400d8d0	              0xc3	                                     ret	      7843	tc-i386.c	FUNCTION_94
process_operands	CALL,22:FOR,3:WHILE,0:functions,0:SWITCH,0:IF,24:ELSE,13:DO,0	560
0x400a679	              0x55	                                push rbp	      6418	tc-i386.c	FUNCTION_86
0x400a67a	          0x4889e5	                            mov rbp, rsp	      6418	tc-i386.c	FUNCTION_86
0x400a67d	            0x4157	                                push r15	      6418	tc-i386.c	FUNCTION_86
0x400a67f	            0x4156	                                push r14	      6418	tc-i386.c	FUNCTION_86
0x400a681	            0x4155	                                push r13	      6418	tc-i386.c	FUNCTION_86
0x400a683	            0x4154	                                push r12	      6418	tc-i386.c	FUNCTION_86
0x400a685	              0x53	                                push rbx	      6418	tc-i386.c	FUNCTION_86
0x400a686	        0x4883ec48	                           sub rsp, 0x48	      6418	tc-i386.c	FUNCTION_86
0x400a68a	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      6422	tc-i386.c	FUNCTION_86
0x400a692	     0xfb605000000	           movzx eax, byte [0x0400a699] 	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400a699	          0x83e040	                           and eax, 0x40	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400a69c	            0x84c0	                             test al, al	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400a69e	     0xf84ab030000	                            je 0x400aa4f	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400a6a4	     0xfb605000000	           movzx eax, byte [0x0400a6ab] 	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400a6ab	          0x83e018	                           and eax, 0x18	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400a6ae	            0x84c0	                             test al, al	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400a6b0	     0xf8499030000	                            je 0x400aa4f	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400a6b6	    0x8b0500000000	            mov eax, dword [0x0400a6bc] 	      6426	tc-i386.c	FUNCTION_86	IF_1
0x400a6bc	          0x8945b4	             mov dword [rbp - 0x4c], eax	      6426	tc-i386.c	FUNCTION_86	IF_1
0x400a6bf	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6427	tc-i386.c	FUNCTION_86	IF_1
0x400a6c2	          0x83e801	                              sub eax, 1	      6427	tc-i386.c	FUNCTION_86	IF_1
0x400a6c5	          0x8945b8	             mov dword [rbp - 0x48], eax	      6427	tc-i386.c	FUNCTION_86	IF_1
0x400a6c8	    0x8b0500000000	            mov eax, dword [0x0400a6ce] 	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6ce	            0x85c0	                           test eax, eax	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6d0	            0x742c	                            je 0x400a6fe	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6d2	        0x837db404	               cmp dword [rbp - 0x4c], 4	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6d6	            0x7726	                            ja 0x400a6fe	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6d8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6db	        0x4883c00e	                            add rax, 0xe	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6df	        0x48c1e003	                              shl rax, 3	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6e3	    0x480500000000	                              add rax, 0	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6e9	        0x4883c008	                              add rax, 8	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6ed	      0xbe00000000	                              mov esi, 0	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6f2	          0x4889c7	                            mov rdi, rax	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6f5	      0xe8295effff	             call sym.operand_type_equal	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6fa	            0x85c0	                           test eax, eax	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6fc	            0x7514	                           jne 0x400a712	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a6fe	      0xba00000000	                              mov edx, 0	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a703	      0xbe21190000	                         mov esi, 0x1921	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a708	      0xbf00000000	                              mov edi, 0	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a70d	      0xe800000000	                          call 0x400a712	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400a712	     0xfb605000000	           movzx eax, byte [0x0400a719] 	      6435	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400a719	          0x83e020	                           and eax, 0x20	      6435	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400a71c	            0x84c0	                             test al, al	      6435	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400a71e	     0xf84cb000000	                            je 0x400a7ef	      6435	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400a724	     0xfb605000000	           movzx eax, byte [0x0400a72b] 	      6436	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400a72b	          0x83e008	                              and eax, 8	      6436	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400a72e	            0x84c0	                             test al, al	      6436	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400a730	     0xf84b9000000	                            je 0x400a7ef	      6436	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400a736	     0xfb605000000	           movzx eax, byte [0x0400a73d] 	      6438	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a73d	          0x83e00c	                            and eax, 0xc	      6438	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a740	            0x3c08	                               cmp al, 8	      6438	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a742	            0x7525	                           jne 0x400a769	      6438	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a744	     0xfb605000000	           movzx eax, byte [0x0400a74b] 	      6442	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a74b	          0x83e0df	                     and eax, 0xffffffdf	      6442	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a74e	    0x880500000000	               mov byte [0x0400a754], al	      6442	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a754	     0xfb605000000	           movzx eax, byte [0x0400a75b] 	      6443	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a75b	          0x83c804	                               or eax, 4	      6443	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a75e	    0x880500000000	               mov byte [0x0400a764], al	      6443	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a764	      0xe943020000	                           jmp 0x400a9ac	      6444	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a769	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a770	            0xeb6d	                           jmp 0x400a7df	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a772	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a775	          0x83e801	                              sub eax, 1	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a778	            0x89c0	                            mov eax, eax	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a77a	        0x488d5014	                   lea rdx, [rax + 0x14]	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a77e	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a781	        0x4883c014	                           add rax, 0x14	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a785	    0x488b04c50000	                  mov rax, qword [rax*8]	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a78d	    0x488904d50000	                  mov qword [rdx*8], rax	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a795	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a798	          0x83e801	                              sub eax, 1	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a79b	            0x89c0	                            mov eax, eax	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a79d	        0x488d500e	                    lea rdx, [rax + 0xe]	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7a1	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7a4	        0x4883c00e	                            add rax, 0xe	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7a8	    0x488b04c50000	                  mov rax, qword [rax*8]	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7b0	    0x488904d50000	                  mov qword [rdx*8], rax	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7b8	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7bb	          0x83e801	                              sub eax, 1	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7be	            0x89c0	                            mov eax, eax	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7c0	        0x488d5006	                      lea rdx, [rax + 6]	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7c4	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7c7	        0x4883c006	                              add rax, 6	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7cb	    0x488b04c50000	                  mov rax, qword [rax*8]	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7d3	    0x488904d50000	                  mov qword [rdx*8], rax	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7db	        0x8345a401	               add dword [rbp - 0x5c], 1	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7df	    0x8b0500000000	            mov eax, dword [0x0400a7e5] 	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7e5	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7e8	            0x7788	                            ja 0x400a772	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400a7ea	      0xe944020000	                           jmp 0x400aa33	      6438	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a7ef	     0xfb605000000	           movzx eax, byte [0x0400a7f6] 	      6459	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a7f6	          0x83e020	                           and eax, 0x20	      6459	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a7f9	            0x84c0	                             test al, al	      6459	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a7fb	     0xf84ab010000	                            je 0x400a9ac	      6459	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a801	        0x837db403	               cmp dword [rbp - 0x4c], 3	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400a805	            0x770e	                            ja 0x400a815	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400a807	     0xfb605000000	           movzx eax, byte [0x0400a80e] 	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400a80e	          0x83e00c	                            and eax, 0xc	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400a811	            0x3c08	                               cmp al, 8	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400a813	            0x7414	                            je 0x400a829	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400a815	      0xba00000000	                              mov edx, 0	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400a81a	      0xbe3f190000	                         mov esi, 0x193f	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400a81f	      0xbf00000000	                              mov edi, 0	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400a824	      0xe800000000	                          call 0x400a829	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400a829	    0x8b0500000000	            mov eax, dword [0x0400a82f] 	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a82f	          0x8945a4	             mov dword [rbp - 0x5c], eax	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a832	            0xeb6d	                           jmp 0x400a8a1	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a834	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a837	          0x8d48ff	                      lea ecx, [rax - 1]	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a83a	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a83d	        0x488d5014	                   lea rdx, [rax + 0x14]	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a841	            0x89c8	                            mov eax, ecx	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a843	        0x4883c014	                           add rax, 0x14	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a847	    0x488b04c50000	                  mov rax, qword [rax*8]	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a84f	    0x488904d50000	                  mov qword [rdx*8], rax	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a857	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a85a	          0x8d48ff	                      lea ecx, [rax - 1]	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a85d	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a860	        0x488d500e	                    lea rdx, [rax + 0xe]	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a864	            0x89c8	                            mov eax, ecx	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a866	        0x4883c00e	                            add rax, 0xe	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a86a	    0x488b04c50000	                  mov rax, qword [rax*8]	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a872	    0x488904d50000	                  mov qword [rdx*8], rax	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a87a	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a87d	          0x8d48ff	                      lea ecx, [rax - 1]	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a880	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a883	        0x488d5006	                      lea rdx, [rax + 6]	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a887	            0x89c8	                            mov eax, ecx	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a889	        0x4883c006	                              add rax, 6	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a88d	    0x488b04c50000	                  mov rax, qword [rax*8]	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a895	    0x488904d50000	                  mov qword [rdx*8], rax	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a89d	        0x836da401	               sub dword [rbp - 0x5c], 1	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a8a1	        0x837da400	               cmp dword [rbp - 0x5c], 0	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a8a5	            0x758d	                           jne 0x400a834	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400a8a7	    0x488b05000000	            mov rax, qword [0x0400a8ae] 	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x400a8ae	      0xbe00000000	                              mov esi, 0	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x400a8b3	          0x4889c7	                            mov rdi, rax	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x400a8b6	      0xe800000000	                          call 0x400a8bb	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x400a8bb	    0x488905000000	            mov qword [0x0400a8c2], rax 	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x400a8c2	    0x48c705000000	               mov qword [0x0400a8cd], 0	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a8cd	     0xfb605000000	           movzx eax, byte [0x0400a8d4] 	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a8d4	          0x83c804	                               or eax, 4	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a8d7	    0x880500000000	               mov byte [0x0400a8dd], al	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a8dd	     0xfb605000000	           movzx eax, byte [0x0400a8e4] 	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a8e4	          0x83c808	                               or eax, 8	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a8e7	    0x880500000000	               mov byte [0x0400a8ed], al	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a8ed	    0x48c705000000	               mov qword [0x0400a8f8], 0	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a8f8	     0xfb605000000	           movzx eax, byte [0x0400a8ff] 	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a8ff	          0x83c804	                               or eax, 4	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a902	    0x880500000000	               mov byte [0x0400a908], al	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a908	     0xfb605000000	           movzx eax, byte [0x0400a90f] 	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a90f	          0x83c808	                               or eax, 8	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a912	    0x880500000000	               mov byte [0x0400a918], al	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a918	    0x8b0500000000	            mov eax, dword [0x0400a91e] 	      6478	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a91e	          0x83c002	                              add eax, 2	      6478	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a921	    0x890500000000	            mov dword [0x0400a927], eax 	      6478	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a927	    0x8b0500000000	            mov eax, dword [0x0400a92d] 	      6479	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a92d	          0x83c002	                              add eax, 2	      6479	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a930	    0x890500000000	            mov dword [0x0400a936], eax 	      6479	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a936	    0x8b0500000000	            mov eax, dword [0x0400a93c] 	      6480	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a93c	          0x83c002	                              add eax, 2	      6480	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a93f	    0x890500000000	            mov dword [0x0400a945], eax 	      6480	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a945	        0x8345b401	               add dword [rbp - 0x4c], 1	      6482	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a949	        0x8345b801	               add dword [rbp - 0x48], 1	      6483	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a94d	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a950	        0x488d5014	                   lea rdx, [rax + 0x14]	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a954	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a957	        0x4883c014	                           add rax, 0x14	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a95b	    0x488b04c50000	                  mov rax, qword [rax*8]	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a963	    0x488904d50000	                  mov qword [rdx*8], rax	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a96b	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6485	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a96e	        0x488d500e	                    lea rdx, [rax + 0xe]	      6485	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a972	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6485	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a975	        0x4883c00e	                            add rax, 0xe	      6485	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a979	    0x488b04c50000	                  mov rax, qword [rax*8]	      6485	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a981	    0x488904d50000	                  mov qword [rdx*8], rax	      6485	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a989	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a98c	        0x488d5006	                      lea rdx, [rax + 6]	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a990	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a993	        0x4883c006	                              add rax, 6	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a997	    0x488b04c50000	                  mov rax, qword [rax*8]	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a99f	    0x488904d50000	                  mov qword [rdx*8], rax	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a9a7	      0xe987000000	                           jmp 0x400aa33	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400a9ac	    0x8b0500000000	            mov eax, dword [0x0400a9b2] 	      6491	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9b2	          0x83c001	                              add eax, 1	      6491	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9b5	    0x890500000000	            mov dword [0x0400a9bb], eax 	      6491	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9bb	    0x8b0500000000	            mov eax, dword [0x0400a9c1] 	      6492	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9c1	          0x83c001	                              add eax, 1	      6492	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9c4	    0x890500000000	            mov dword [0x0400a9ca], eax 	      6492	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9ca	    0x8b0500000000	            mov eax, dword [0x0400a9d0] 	      6493	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9d0	          0x83c001	                              add eax, 1	      6493	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9d3	    0x890500000000	            mov dword [0x0400a9d9], eax 	      6493	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9d9	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9dc	        0x488d5014	                   lea rdx, [rax + 0x14]	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9e0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9e3	        0x4883c014	                           add rax, 0x14	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9e7	    0x488b04c50000	                  mov rax, qword [rax*8]	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9ef	    0x488904d50000	                  mov qword [rdx*8], rax	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9f7	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6496	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9fa	        0x488d500e	                    lea rdx, [rax + 0xe]	      6496	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400a9fe	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6496	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400aa01	        0x4883c00e	                            add rax, 0xe	      6496	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400aa05	    0x488b04c50000	                  mov rax, qword [rax*8]	      6496	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400aa0d	    0x488904d50000	                  mov qword [rdx*8], rax	      6496	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400aa15	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6497	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400aa18	        0x488d5006	                      lea rdx, [rax + 6]	      6497	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400aa1c	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6497	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400aa1f	        0x4883c006	                              add rax, 6	      6497	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400aa23	    0x488b04c50000	                  mov rax, qword [rax*8]	      6497	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400aa2b	    0x488904d50000	                  mov qword [rdx*8], rax	      6497	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400aa33	     0xfb605000000	           movzx eax, byte [0x0400aa3a] 	      6500	tc-i386.c	FUNCTION_86	IF_1	IF_5
0x400aa3a	          0x83e020	                           and eax, 0x20	      6500	tc-i386.c	FUNCTION_86	IF_1	IF_5
0x400aa3d	            0x84c0	                             test al, al	      6500	tc-i386.c	FUNCTION_86	IF_1	IF_5
0x400aa3f	     0xf84a5020000	                            je 0x400acea	      6500	tc-i386.c	FUNCTION_86	IF_1	IF_5
0x400aa45	      0xe87395ffff	                 call sym.process_immext	      6501	tc-i386.c	FUNCTION_86	IF_1	CALL_5
0x400aa4a	      0xe99b020000	                           jmp 0x400acea	      6425	tc-i386.c	FUNCTION_86	IF_1
0x400aa4f	     0xfb605000000	           movzx eax, byte [0x0400aa56] 	      6503	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400aa56	          0x83e020	                           and eax, 0x20	      6503	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400aa59	            0x84c0	                             test al, al	      6503	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400aa5b	     0xf84c5000000	                            je 0x400ab26	      6503	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400aa61	     0xfb605000000	           movzx eax, byte [0x0400aa68] 	      6504	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400aa68	          0x83e008	                              and eax, 8	      6504	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400aa6b	            0x84c0	                             test al, al	      6504	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400aa6d	     0xf84b3000000	                            je 0x400ab26	      6504	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400aa73	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aa7a	            0xeb6d	                           jmp 0x400aae9	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aa7c	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aa7f	          0x83e801	                              sub eax, 1	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aa82	            0x89c0	                            mov eax, eax	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aa84	        0x488d5014	                   lea rdx, [rax + 0x14]	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aa88	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aa8b	        0x4883c014	                           add rax, 0x14	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aa8f	    0x488b04c50000	                  mov rax, qword [rax*8]	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aa97	    0x488904d50000	                  mov qword [rdx*8], rax	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aa9f	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aaa2	          0x83e801	                              sub eax, 1	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aaa5	            0x89c0	                            mov eax, eax	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aaa7	        0x488d500e	                    lea rdx, [rax + 0xe]	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aaab	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aaae	        0x4883c00e	                            add rax, 0xe	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aab2	    0x488b04c50000	                  mov rax, qword [rax*8]	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aaba	    0x488904d50000	                  mov qword [rdx*8], rax	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aac2	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aac5	          0x83e801	                              sub eax, 1	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aac8	            0x89c0	                            mov eax, eax	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aaca	        0x488d5006	                      lea rdx, [rax + 6]	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aace	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aad1	        0x4883c006	                              add rax, 6	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aad5	    0x488b04c50000	                  mov rax, qword [rax*8]	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aadd	    0x488904d50000	                  mov qword [rdx*8], rax	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aae5	        0x8345a801	               add dword [rbp - 0x58], 1	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aae9	    0x8b0500000000	            mov eax, dword [0x0400aaef] 	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aaef	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aaf2	            0x7788	                            ja 0x400aa7c	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400aaf4	    0x8b0500000000	            mov eax, dword [0x0400aafa] 	      6518	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400aafa	          0x83e801	                              sub eax, 1	      6518	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400aafd	    0x890500000000	            mov dword [0x0400ab03], eax 	      6518	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400ab03	    0x8b0500000000	            mov eax, dword [0x0400ab09] 	      6519	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400ab09	          0x83e801	                              sub eax, 1	      6519	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400ab0c	    0x890500000000	            mov dword [0x0400ab12], eax 	      6519	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400ab12	    0x8b0500000000	            mov eax, dword [0x0400ab18] 	      6520	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400ab18	          0x83e801	                              sub eax, 1	      6520	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400ab1b	    0x890500000000	            mov dword [0x0400ab21], eax 	      6520	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400ab21	      0xe9c5010000	                           jmp 0x400aceb	      6505	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400ab26	     0xfb605000000	           movzx eax, byte [0x0400ab2d] 	      6522	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400ab2d	          0x83e010	                           and eax, 0x10	      6522	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400ab30	            0x84c0	                             test al, al	      6522	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400ab32	     0xf84dd000000	                            je 0x400ac15	      6522	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400ab38	    0x8b0500000000	            mov eax, dword [0x0400ab3e] 	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400ab3e	          0x83f801	                              cmp eax, 1	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400ab41	            0x760e	                           jbe 0x400ab51	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400ab43	     0xfb605000000	           movzx eax, byte [0x0400ab4a] 	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400ab4a	          0x83e004	                              and eax, 4	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400ab4d	            0x84c0	                             test al, al	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400ab4f	            0x7514	                           jne 0x400ab65	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400ab51	      0xba00000000	                              mov edx, 0	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400ab56	      0xbe7f190000	                         mov esi, 0x197f	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400ab5b	      0xbf00000000	                              mov edi, 0	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400ab60	      0xe800000000	                          call 0x400ab65	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400ab65	    0x488b05000000	            mov rax, qword [0x0400ab6c] 	      6528	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_7
0x400ab6c	          0x4889c7	                            mov rdi, rax	      6528	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_7
0x400ab6f	      0xe8a16affff	                call sym.register_number	      6528	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_7
0x400ab74	          0x8945bc	             mov dword [rbp - 0x44], eax	      6528	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_7
0x400ab77	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6529	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400ab7a	          0x83e0fc	                     and eax, 0xfffffffc	      6529	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400ab7d	          0x8945c0	             mov dword [rbp - 0x40], eax	      6529	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400ab80	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6530	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400ab83	          0x83c003	                              add eax, 3	      6530	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400ab86	          0x8945c4	             mov dword [rbp - 0x3c], eax	      6530	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400ab89	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6531	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8
0x400ab8c	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	      6531	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8
0x400ab8f	     0xf8456010000	                            je 0x400aceb	      6531	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8
0x400ab95	    0x488b05000000	            mov rax, qword [0x0400ab9c] 	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400ab9c	        0x48894598	             mov qword [rbp - 0x68], rax	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400aba0	    0x488b05000000	            mov rax, qword [0x0400aba7] 	      6536	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8
0x400aba7	          0x4c8b38	                    mov r15, qword [rax]	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abaa	    0x4c8b35000000	            mov r14, qword [0x0400abb1] 	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abb1	    0x488b05000000	            mov rax, qword [0x0400abb8] 	      6535	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8
0x400abb8	          0x488b08	                    mov rcx, qword [rax]	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abbb	        0x48894d90	             mov qword [rbp - 0x70], rcx	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abbf	    0x4c8b2d000000	            mov r13, qword [0x0400abc6] 	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abc6	    0x488b05000000	            mov rax, qword [0x0400abcd] 	      6534	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8
0x400abcd	          0x4c8b20	                    mov r12, qword [rax]	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abd0	    0x488b1d000000	            mov rbx, qword [0x0400abd7] 	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abd7	      0xbf00000000	                              mov edi, 0	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abdc	      0xe800000000	                          call 0x400abe1	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abe1	          0x4889c7	                            mov rdi, rax	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abe4	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abe7	          0xff7598	                 push qword [rbp - 0x68]	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abea	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abed	              0x50	                                push rax	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abee	            0x4157	                                push r15	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abf0	            0x4156	                                push r14	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abf2	          0x4189d1	                            mov r9d, edx	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abf5	        0x4c8b4590	              mov r8, qword [rbp - 0x70]	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abf9	          0x4c89e9	                            mov rcx, r13	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abfc	          0x4c89e2	                            mov rdx, r12	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400abff	          0x4889de	                            mov rsi, rbx	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400ac02	      0xb800000000	                              mov eax, 0	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400ac07	      0xe800000000	                          call 0x400ac0c	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400ac0c	        0x4883c420	                           add rsp, 0x20	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400ac10	      0xe9d6000000	                           jmp 0x400aceb	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400ac15	     0xfb605000000	           movzx eax, byte [0x0400ac1c] 	      6539	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ac1c	          0x83e010	                           and eax, 0x10	      6539	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ac1f	            0x84c0	                             test al, al	      6539	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ac21	     0xf84c4000000	                            je 0x400aceb	      6539	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ac27	      0xbe00000000	                              mov esi, 0	      6547	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	IF_10	CALL_10
0x400ac2c	    0x488b3d000000	            mov rdi, qword [0x0400ac33] 	      6547	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	IF_10	CALL_10
0x400ac33	      0xe8f45effff	             call sym.operand_type_check	      6547	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	IF_10	CALL_10
0x400ac38	            0x85c0	                           test eax, eax	      6547	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	IF_10	CALL_10
0x400ac3a	            0x7409	                            je 0x400ac45	      6547	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	IF_10	CALL_10
0x400ac3c	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      6548	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	IF_10
0x400ac43	            0xeb07	                           jmp 0x400ac4c	      6548	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	IF_10
0x400ac45	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      6550	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	ELSE_7
0x400ac4c	    0x8b0500000000	            mov eax, dword [0x0400ac52] 	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac52	          0x83f801	                              cmp eax, 1	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac55	            0x7519	                           jne 0x400ac70	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac57	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac5a	          0x83c001	                              add eax, 1	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac5d	            0x89c0	                            mov eax, eax	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac5f	        0x4883c014	                           add rax, 0x14	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac63	    0x488b04c50000	                  mov rax, qword [rax*8]	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac6b	          0x4885c0	                           test rax, rax	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac6e	            0x7414	                            je 0x400ac84	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac70	      0xba00000000	                              mov edx, 0	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac75	      0xbe99190000	                         mov esi, 0x1999	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac7a	      0xbf00000000	                              mov edi, 0	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac7f	      0xe800000000	                          call 0x400ac84	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400ac84	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ac87	          0x8d5001	                      lea edx, [rax + 1]	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ac8a	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ac8d	        0x4883c014	                           add rax, 0x14	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ac91	    0x488b04c50000	                  mov rax, qword [rax*8]	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ac99	            0x89d2	                            mov edx, edx	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ac9b	        0x4883c214	                           add rdx, 0x14	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ac9f	    0x488904d50000	                  mov qword [rdx*8], rax	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400aca7	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acaa	          0x83c001	                              add eax, 1	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acad	            0x89c0	                            mov eax, eax	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acaf	        0x488d500e	                    lea rdx, [rax + 0xe]	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acb3	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acb6	        0x4883c00e	                            add rax, 0xe	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acba	    0x488b04c50000	                  mov rax, qword [rax*8]	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acc2	    0x488904d50000	                  mov qword [rdx*8], rax	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acca	    0x8b0500000000	            mov eax, dword [0x0400acd0] 	      6556	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acd0	          0x83c001	                              add eax, 1	      6556	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acd3	    0x890500000000	            mov dword [0x0400acd9], eax 	      6556	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acd9	    0x8b0500000000	            mov eax, dword [0x0400acdf] 	      6557	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acdf	          0x83c001	                              add eax, 1	      6557	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ace2	    0x890500000000	            mov dword [0x0400ace8], eax 	      6557	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400ace8	            0xeb01	                           jmp 0x400aceb	      6557	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400acea	              0x90	                                     nop	      6425	tc-i386.c	FUNCTION_86	IF_1
0x400aceb	     0xfb605000000	           movzx eax, byte [0x0400acf2] 	      6560	tc-i386.c	FUNCTION_86	IF_11
0x400acf2	          0x83e010	                           and eax, 0x10	      6560	tc-i386.c	FUNCTION_86	IF_11
0x400acf5	            0x84c0	                             test al, al	      6560	tc-i386.c	FUNCTION_86	IF_11
0x400acf7	     0xf841d020000	                            je 0x400af1a	      6560	tc-i386.c	FUNCTION_86	IF_11
0x400acfd	     0xfb605000000	           movzx eax, byte [0x0400ad04] 	      6562	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad04	          0x83e080	                     and eax, 0xffffff80	      6562	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad07	            0x84c0	                             test al, al	      6562	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad09	            0x7512	                           jne 0x400ad1d	      6562	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad0b	     0xfb605000000	           movzx eax, byte [0x0400ad12] 	      6563	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad12	          0x83e001	                              and eax, 1	      6563	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad15	            0x84c0	                             test al, al	      6563	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad17	     0xf8491000000	                            je 0x400adae	      6563	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad1d	    0x8b0500000000	            mov eax, dword [0x0400ad23] 	      6565	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400ad23	          0x83f807	                              cmp eax, 7	      6565	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400ad26	            0x753a	                           jne 0x400ad62	      6565	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400ad28	    0x488b05000000	            mov rax, qword [0x0400ad2f] 	      6566	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400ad2f	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6566	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400ad33	            0x3c01	                               cmp al, 1	      6566	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400ad35	            0x752b	                           jne 0x400ad62	      6566	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400ad37	    0x488b1d000000	            mov rbx, qword [0x0400ad3e] 	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x400ad3e	      0xbf00000000	                              mov edi, 0	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x400ad43	      0xe800000000	                          call 0x400ad48	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x400ad48	          0x4889de	                            mov rsi, rbx	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x400ad4b	          0x4889c7	                            mov rdi, rax	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x400ad4e	      0xb800000000	                              mov eax, 0	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x400ad53	      0xe800000000	                          call 0x400ad58	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x400ad58	      0xb800000000	                              mov eax, 0	      6569	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400ad5d	      0xe97f020000	                           jmp 0x400afe1	      6569	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400ad62	    0x8b1500000000	            mov edx, dword [0x0400ad68] 	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad68	    0x488b05000000	            mov rax, qword [0x0400ad6f] 	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad6f	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad73	           0xfb6c0	                           movzx eax, al	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad76	          0xc1e003	                              shl eax, 3	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad79	             0x9d0	                             or eax, edx	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad7b	    0x890500000000	            mov dword [0x0400ad81], eax 	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400ad81	    0x488b05000000	            mov rax, qword [0x0400ad88] 	      6572	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400ad88	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6572	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400ad8c	           0xfb6c0	                           movzx eax, al	      6572	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400ad8f	          0x83e001	                              and eax, 1	      6572	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400ad92	            0x85c0	                           test eax, eax	      6572	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400ad94	     0xf84c9010000	                            je 0x400af63	      6572	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400ad9a	    0x8b0500000000	            mov eax, dword [0x0400ada0] 	      6573	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400ada0	          0x83c801	                               or eax, 1	      6573	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400ada3	    0x890500000000	            mov dword [0x0400ada9], eax 	      6573	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400ada9	      0xe9b5010000	                           jmp 0x400af63	      6572	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400adae	     0xfb605000000	           movzx eax, byte [0x0400adb5] 	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400adb5	          0x83e001	                              and eax, 1	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400adb8	            0x84c0	                             test al, al	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400adba	            0x740e	                            je 0x400adca	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400adbc	     0xfb605000000	           movzx eax, byte [0x0400adc3] 	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400adc3	          0x83e004	                              and eax, 4	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400adc6	            0x84c0	                             test al, al	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400adc8	            0x7515	                           jne 0x400addf	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400adca	      0xbe00000000	                              mov esi, 0	      6582	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15	CALL_14
0x400adcf	    0x488b3d000000	            mov rdi, qword [0x0400add6] 	      6582	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15	CALL_14
0x400add6	      0xe8515dffff	             call sym.operand_type_check	      6582	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15	CALL_14
0x400addb	            0x85c0	                           test eax, eax	      6582	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15	CALL_14
0x400addd	            0x7409	                            je 0x400ade8	      6582	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15	CALL_14
0x400addf	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      6583	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400ade6	            0xeb07	                           jmp 0x400adef	      6583	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400ade8	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      6585	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	ELSE_9
0x400adef	    0x8b1500000000	            mov edx, dword [0x0400adf5] 	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400adf5	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400adf8	        0x4883c014	                           add rax, 0x14	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400adfc	    0x488b04c50000	                  mov rax, qword [rax*8]	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400ae04	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400ae08	           0xfb6c0	                           movzx eax, al	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400ae0b	             0x9d0	                             or eax, edx	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400ae0d	    0x890500000000	            mov dword [0x0400ae13], eax 	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400ae13	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400ae16	        0x4883c014	                           add rax, 0x14	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400ae1a	    0x488b04c50000	                  mov rax, qword [rax*8]	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400ae22	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400ae26	           0xfb6c0	                           movzx eax, al	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400ae29	          0x83e001	                              and eax, 1	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400ae2c	            0x85c0	                           test eax, eax	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400ae2e	            0x740f	                            je 0x400ae3f	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400ae30	    0x8b0500000000	            mov eax, dword [0x0400ae36] 	      6589	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400ae36	          0x83c801	                               or eax, 1	      6589	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400ae39	    0x890500000000	            mov dword [0x0400ae3f], eax 	      6589	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400ae3f	    0x8b0500000000	            mov eax, dword [0x0400ae45] 	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400ae45	            0x85c0	                           test eax, eax	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400ae47	     0xf8516010000	                           jne 0x400af63	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400ae4d	     0xfb605000000	           movzx eax, byte [0x0400ae54] 	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400ae54	          0x83e001	                              and eax, 1	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400ae57	            0x84c0	                             test al, al	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400ae59	     0xf8404010000	                            je 0x400af63	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400ae5f	    0x8b0500000000	            mov eax, dword [0x0400ae65] 	      6594	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae65	          0x83f802	                              cmp eax, 2	      6594	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae68	            0x7576	                           jne 0x400aee0	      6594	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae6a	    0x8b0500000000	            mov eax, dword [0x0400ae70] 	      6599	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae70	            0x4898	                                    cdqe	      6599	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae72	        0x4883c014	                           add rax, 0x14	      6599	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae76	    0x488b04c50000	                  mov rax, qword [rax*8]	      6599	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae7e	          0x4c8b38	                    mov r15, qword [rax]	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400ae81	    0x4c8b35000000	            mov r14, qword [0x0400ae88] 	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400ae88	    0x8b0500000000	            mov eax, dword [0x0400ae8e] 	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae8e	            0x85c0	                           test eax, eax	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae90	           0xf94c0	                                 sete al	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae93	           0xfb6c0	                           movzx eax, al	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae96	            0x4898	                                    cdqe	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae98	        0x4883c014	                           add rax, 0x14	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400ae9c	    0x488b04c50000	                  mov rax, qword [rax*8]	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400aea4	          0x4c8b28	                    mov r13, qword [rax]	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aea7	    0x4c8b25000000	            mov r12, qword [0x0400aeae] 	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aeae	    0x488b1d000000	            mov rbx, qword [0x0400aeb5] 	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aeb5	      0xbf00000000	                              mov edi, 0	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aeba	      0xe800000000	                          call 0x400aebf	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aebf	          0x4d89f9	                             mov r9, r15	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aec2	          0x4d89f0	                             mov r8, r14	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aec5	          0x4c89e9	                            mov rcx, r13	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aec8	          0x4c89e2	                            mov rdx, r12	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aecb	          0x4889de	                            mov rsi, rbx	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aece	          0x4889c7	                            mov rdi, rax	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aed1	      0xb800000000	                              mov eax, 0	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aed6	      0xe800000000	                          call 0x400aedb	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aedb	      0xe983000000	                           jmp 0x400af63	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400aee0	    0x488b05000000	            mov rax, qword [0x0400aee7] 	      6605	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10
0x400aee7	          0x4c8b28	                    mov r13, qword [rax]	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400aeea	    0x4c8b25000000	            mov r12, qword [0x0400aef1] 	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400aef1	    0x488b1d000000	            mov rbx, qword [0x0400aef8] 	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400aef8	      0xbf00000000	                              mov edi, 0	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400aefd	      0xe800000000	                          call 0x400af02	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400af02	          0x4c89e9	                            mov rcx, r13	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400af05	          0x4c89e2	                            mov rdx, r12	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400af08	          0x4889de	                            mov rsi, rbx	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400af0b	          0x4889c7	                            mov rdi, rax	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400af0e	      0xb800000000	                              mov eax, 0	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400af13	      0xe800000000	                          call 0x400af18	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400af18	            0xeb49	                           jmp 0x400af63	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400af1a	     0xfb605000000	           movzx eax, byte [0x0400af21] 	      6610	tc-i386.c	FUNCTION_86	ELSE_11	IF_19
0x400af21	          0x83e008	                              and eax, 8	      6610	tc-i386.c	FUNCTION_86	ELSE_11	IF_19
0x400af24	            0x84c0	                             test al, al	      6610	tc-i386.c	FUNCTION_86	ELSE_11	IF_19
0x400af26	            0x740b	                            je 0x400af33	      6610	tc-i386.c	FUNCTION_86	ELSE_11	IF_19
0x400af28	      0xe8c3000000	               call sym.build_modrm_byte	      6616	tc-i386.c	FUNCTION_86	ELSE_11	IF_19	CALL_19
0x400af2d	        0x488945c8	             mov qword [rbp - 0x38], rax	      6616	tc-i386.c	FUNCTION_86	ELSE_11	IF_19	CALL_19
0x400af31	            0xeb30	                           jmp 0x400af63	      6616	tc-i386.c	FUNCTION_86	ELSE_11	IF_19	CALL_19
0x400af33	    0x8b0500000000	            mov eax, dword [0x0400af39] 	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400af39	          0x83e0fc	                     and eax, 0xfffffffc	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400af3c	      0x3da0000000	                           cmp eax, 0xa0	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400af41	            0x750a	                           jne 0x400af4d	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400af43	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      6620	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400af4b	            0xeb16	                           jmp 0x400af63	      6620	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400af4d	     0xfb605000000	           movzx eax, byte [0x0400af54] 	      6622	tc-i386.c	FUNCTION_86	ELSE_13	IF_21
0x400af54	          0x83e001	                              and eax, 1	      6622	tc-i386.c	FUNCTION_86	ELSE_13	IF_21
0x400af57	            0x84c0	                             test al, al	      6622	tc-i386.c	FUNCTION_86	ELSE_13	IF_21
0x400af59	            0x7408	                            je 0x400af63	      6622	tc-i386.c	FUNCTION_86	ELSE_13	IF_21
0x400af5b	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      6626	tc-i386.c	FUNCTION_86	ELSE_13	IF_21
0x400af63	    0x8b0500000000	            mov eax, dword [0x0400af69] 	      6629	tc-i386.c	FUNCTION_86	IF_22
0x400af69	      0x3d8d000000	                           cmp eax, 0x8d	      6629	tc-i386.c	FUNCTION_86	IF_22
0x400af6e	            0x7537	                           jne 0x400afa7	      6629	tc-i386.c	FUNCTION_86	IF_22
0x400af70	    0x488b05000000	            mov rax, qword [0x0400af77] 	      6630	tc-i386.c	FUNCTION_86	IF_22
0x400af77	          0x4885c0	                           test rax, rax	      6630	tc-i386.c	FUNCTION_86	IF_22
0x400af7a	            0x742b	                            je 0x400afa7	      6630	tc-i386.c	FUNCTION_86	IF_22
0x400af7c	    0x8b0500000000	            mov eax, dword [0x0400af82] 	      6631	tc-i386.c	FUNCTION_86	IF_22
0x400af82	            0x85c0	                           test eax, eax	      6631	tc-i386.c	FUNCTION_86	IF_22
0x400af84	            0x7521	                           jne 0x400afa7	      6631	tc-i386.c	FUNCTION_86	IF_22
0x400af86	    0x488b1d000000	            mov rbx, qword [0x0400af8d] 	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400af8d	      0xbf00000000	                              mov edi, 0	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400af92	      0xe800000000	                          call 0x400af97	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400af97	          0x4889de	                            mov rsi, rbx	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400af9a	          0x4889c7	                            mov rdi, rax	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400af9d	      0xb800000000	                              mov eax, 0	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400afa2	      0xe800000000	                          call 0x400afa7	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400afa7	    0x488b05000000	            mov rax, qword [0x0400afae] 	      6639	tc-i386.c	FUNCTION_86	IF_23
0x400afae	          0x4885c0	                           test rax, rax	      6639	tc-i386.c	FUNCTION_86	IF_23
0x400afb1	            0x7429	                            je 0x400afdc	      6639	tc-i386.c	FUNCTION_86	IF_23
0x400afb3	    0x488b05000000	            mov rax, qword [0x0400afba] 	      6639	tc-i386.c	FUNCTION_86	IF_23
0x400afba	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      6639	tc-i386.c	FUNCTION_86	IF_23
0x400afbe	            0x741c	                            je 0x400afdc	      6639	tc-i386.c	FUNCTION_86	IF_23
0x400afc0	    0x488b05000000	            mov rax, qword [0x0400afc7] 	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400afc7	          0x8b4008	                mov eax, dword [rax + 8]	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400afca	            0x89c7	                            mov edi, eax	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400afcc	      0xe8106bffff	                     call sym.add_prefix	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400afd1	            0x85c0	                           test eax, eax	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400afd3	            0x7507	                           jne 0x400afdc	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400afd5	      0xb800000000	                              mov eax, 0	      6642	tc-i386.c	FUNCTION_86	IF_23	IF_24
0x400afda	            0xeb05	                           jmp 0x400afe1	      6642	tc-i386.c	FUNCTION_86	IF_23	IF_24
0x400afdc	      0xb801000000	                              mov eax, 1	      6644	tc-i386.c	FUNCTION_86
0x400afe1	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      6645	tc-i386.c	FUNCTION_86
0x400afe5	              0x5b	                                 pop rbx	      6645	tc-i386.c	FUNCTION_86
0x400afe6	            0x415c	                                 pop r12	      6645	tc-i386.c	FUNCTION_86
0x400afe8	            0x415d	                                 pop r13	      6645	tc-i386.c	FUNCTION_86
0x400afea	            0x415e	                                 pop r14	      6645	tc-i386.c	FUNCTION_86
0x400afec	            0x415f	                                 pop r15	      6645	tc-i386.c	FUNCTION_86
0x400afee	              0x5d	                                 pop rbp	      6645	tc-i386.c	FUNCTION_86
0x400afef	              0xc3	                                     ret	      6645	tc-i386.c	FUNCTION_86
output_message	CALL,4:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,1:DO,0	84
0x4012e4e	              0x55	                                push rbp	     10858	tc-i386.c	FUNCTION_125
0x4012e4f	          0x4889e5	                            mov rbp, rsp	     10858	tc-i386.c	FUNCTION_125
0x4012e52	        0x4883ec40	                           sub rsp, 0x40	     10858	tc-i386.c	FUNCTION_125
0x4012e56	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10858	tc-i386.c	FUNCTION_125
0x4012e5a	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10858	tc-i386.c	FUNCTION_125
0x4012e5e	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10858	tc-i386.c	FUNCTION_125
0x4012e62	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10858	tc-i386.c	FUNCTION_125
0x4012e66	        0x4c8945c8	              mov qword [rbp - 0x38], r8	     10858	tc-i386.c	FUNCTION_125
0x4012e6a	        0x4c894dc0	              mov qword [rbp - 0x40], r9	     10858	tc-i386.c	FUNCTION_125
0x4012e6e	    0xc745fc510000	               mov dword [rbp - 4], 0x51	     10859	tc-i386.c	FUNCTION_125
0x4012e75	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10860	tc-i386.c	FUNCTION_125
0x4012e79	            0x8b00	                    mov eax, dword [rax]	     10860	tc-i386.c	FUNCTION_125
0x4012e7b	          0x8945f8	                mov dword [rbp - 8], eax	     10860	tc-i386.c	FUNCTION_125
0x4012e7e	          0x8b4510	            mov eax, dword [rbp + 0x10] 	     10863	tc-i386.c	FUNCTION_125
0x4012e81	          0x83c002	                              add eax, 2	     10863	tc-i386.c	FUNCTION_125
0x4012e84	          0x2945f8	                sub dword [rbp - 8], eax	     10863	tc-i386.c	FUNCTION_125
0x4012e87	        0x837df800	                  cmp dword [rbp - 8], 0	     10866	tc-i386.c	FUNCTION_125	IF_1
0x4012e8b	            0x784a	                            js 0x4012ed7	     10866	tc-i386.c	FUNCTION_125	IF_1
0x4012e8d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10868	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4012e91	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	     10868	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4012e95	            0x741e	                            je 0x4012eb5	     10868	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4012e97	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10870	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4012e9b	        0x488d5001	                      lea rdx, [rax + 1]	     10870	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4012e9f	        0x488955e0	             mov qword [rbp - 0x20], rdx	     10870	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4012ea3	          0xc6002c	                    mov byte [rax], 0x2c	     10870	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4012ea6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10871	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4012eaa	        0x488d5001	                      lea rdx, [rax + 1]	     10871	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4012eae	        0x488955e0	             mov qword [rbp - 0x20], rdx	     10871	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4012eb2	          0xc60020	                    mov byte [rax], 0x20	     10871	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4012eb5	          0x8b4510	            mov eax, dword [rbp + 0x10] 	     10873	tc-i386.c	FUNCTION_125	IF_1	CALL_1
0x4012eb8	          0x4863d0	                         movsxd rdx, eax	     10873	tc-i386.c	FUNCTION_125	IF_1	CALL_1
0x4012ebb	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	     10873	tc-i386.c	FUNCTION_125	IF_1	CALL_1
0x4012ebf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10873	tc-i386.c	FUNCTION_125	IF_1	CALL_1
0x4012ec3	          0x4889ce	                            mov rsi, rcx	     10873	tc-i386.c	FUNCTION_125	IF_1	CALL_1
0x4012ec6	          0x4889c7	                            mov rdi, rax	     10873	tc-i386.c	FUNCTION_125	IF_1	CALL_1
0x4012ec9	      0xe800000000	                          call 0x4012ece	     10873	tc-i386.c	FUNCTION_125	IF_1	CALL_1
0x4012ece	        0x488945e0	             mov qword [rbp - 0x20], rax	     10873	tc-i386.c	FUNCTION_125	IF_1	CALL_1
0x4012ed2	      0xe991000000	                           jmp 0x4012f68	     10873	tc-i386.c	FUNCTION_125	IF_1	CALL_1
0x4012ed7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10878	tc-i386.c	FUNCTION_125	ELSE_1
0x4012edb	        0x488d5001	                      lea rdx, [rax + 1]	     10878	tc-i386.c	FUNCTION_125	ELSE_1
0x4012edf	        0x488955e0	             mov qword [rbp - 0x20], rdx	     10878	tc-i386.c	FUNCTION_125	ELSE_1
0x4012ee3	          0xc6002c	                    mov byte [rax], 0x2c	     10878	tc-i386.c	FUNCTION_125	ELSE_1
0x4012ee6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10879	tc-i386.c	FUNCTION_125	ELSE_1
0x4012eea	          0xc60000	                       mov byte [rax], 0	     10879	tc-i386.c	FUNCTION_125	ELSE_1
0x4012eed	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10880	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x4012ef1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10880	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x4012ef5	      0xbe00000000	                              mov esi, 0	     10880	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x4012efa	          0x4889c7	                            mov rdi, rax	     10880	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x4012efd	      0xb800000000	                              mov eax, 0	     10880	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x4012f02	      0xe800000000	                          call 0x4012f07	     10880	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x4012f07	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10881	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f0b	        0x488945e0	             mov qword [rbp - 0x20], rax	     10881	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f0f	          0x8b45fc	                mov eax, dword [rbp - 4]	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f12	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f16	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f1a	          0x4829d1	                            sub rcx, rdx	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f1d	          0x4889ca	                            mov rdx, rcx	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f20	            0x29d0	                            sub eax, edx	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f22	            0x89c2	                            mov edx, eax	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f24	          0x8b4510	            mov eax, dword [rbp + 0x10] 	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f27	            0x29c2	                            sub edx, eax	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f29	            0x89d0	                            mov eax, edx	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f2b	          0x83e802	                              sub eax, 2	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f2e	          0x8945f8	                mov dword [rbp - 8], eax	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x4012f31	        0x837df800	                  cmp dword [rbp - 8], 0	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_3
0x4012f35	            0x7914	                           jns 0x4012f4b	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_3
0x4012f37	      0xba00000000	                              mov edx, 0	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_3
0x4012f3c	      0xbe842a0000	                         mov esi, 0x2a84	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_3
0x4012f41	      0xbf00000000	                              mov edi, 0	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_3
0x4012f46	      0xe800000000	                          call 0x4012f4b	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_3
0x4012f4b	          0x8b4510	            mov eax, dword [rbp + 0x10] 	     10886	tc-i386.c	FUNCTION_125	ELSE_1	CALL_4
0x4012f4e	          0x4863d0	                         movsxd rdx, eax	     10886	tc-i386.c	FUNCTION_125	ELSE_1	CALL_4
0x4012f51	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	     10886	tc-i386.c	FUNCTION_125	ELSE_1	CALL_4
0x4012f55	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10886	tc-i386.c	FUNCTION_125	ELSE_1	CALL_4
0x4012f59	          0x4889ce	                            mov rsi, rcx	     10886	tc-i386.c	FUNCTION_125	ELSE_1	CALL_4
0x4012f5c	          0x4889c7	                            mov rdi, rax	     10886	tc-i386.c	FUNCTION_125	ELSE_1	CALL_4
0x4012f5f	      0xe800000000	                          call 0x4012f64	     10886	tc-i386.c	FUNCTION_125	ELSE_1	CALL_4
0x4012f64	        0x488945e0	             mov qword [rbp - 0x20], rax	     10886	tc-i386.c	FUNCTION_125	ELSE_1	CALL_4
0x4012f68	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10889	tc-i386.c	FUNCTION_125
0x4012f6c	          0x8b55f8	                mov edx, dword [rbp - 8]	     10889	tc-i386.c	FUNCTION_125
0x4012f6f	            0x8910	                    mov dword [rax], edx	     10889	tc-i386.c	FUNCTION_125
0x4012f71	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10890	tc-i386.c	FUNCTION_125
0x4012f75	              0xc9	                                   leave	     10891	tc-i386.c	FUNCTION_125
0x4012f76	              0xc3	                                     ret	     10891	tc-i386.c	FUNCTION_125
update_imm	CALL,18:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,8:ELSE,5:DO,0	239
0x400a29a	              0x55	                                push rbp	      6334	tc-i386.c	FUNCTION_84
0x400a29b	          0x4889e5	                            mov rbp, rsp	      6334	tc-i386.c	FUNCTION_84
0x400a29e	        0x4883ec30	                           sub rsp, 0x30	      6334	tc-i386.c	FUNCTION_84
0x400a2a2	          0x897ddc	             mov dword [rbp - 0x24], edi	      6334	tc-i386.c	FUNCTION_84
0x400a2a5	    0x64488b042528	                mov rax, qword fs:[0x28]	      6334	tc-i386.c	FUNCTION_84
0x400a2ae	        0x488945f8	                mov qword [rbp - 8], rax	      6334	tc-i386.c	FUNCTION_84
0x400a2b2	            0x31c0	                            xor eax, eax	      6334	tc-i386.c	FUNCTION_84
0x400a2b4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6335	tc-i386.c	FUNCTION_84
0x400a2b7	        0x4883c00e	                            add rax, 0xe	      6335	tc-i386.c	FUNCTION_84
0x400a2bb	    0x488b04c50000	                  mov rax, qword [rax*8]	      6335	tc-i386.c	FUNCTION_84
0x400a2c3	        0x488945e0	             mov qword [rbp - 0x20], rax	      6335	tc-i386.c	FUNCTION_84
0x400a2c7	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6336	tc-i386.c	FUNCTION_84	IF_1
0x400a2cb	          0x83e004	                              and eax, 4	      6336	tc-i386.c	FUNCTION_84	IF_1
0x400a2ce	            0x84c0	                             test al, al	      6336	tc-i386.c	FUNCTION_84	IF_1
0x400a2d0	            0x753b	                           jne 0x400a30d	      6336	tc-i386.c	FUNCTION_84	IF_1
0x400a2d2	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6337	tc-i386.c	FUNCTION_84	IF_1
0x400a2d6	          0x83e008	                              and eax, 8	      6337	tc-i386.c	FUNCTION_84	IF_1
0x400a2d9	            0x84c0	                             test al, al	      6337	tc-i386.c	FUNCTION_84	IF_1
0x400a2db	            0x7530	                           jne 0x400a30d	      6337	tc-i386.c	FUNCTION_84	IF_1
0x400a2dd	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6338	tc-i386.c	FUNCTION_84	IF_1
0x400a2e1	          0x83e010	                           and eax, 0x10	      6338	tc-i386.c	FUNCTION_84	IF_1
0x400a2e4	            0x84c0	                             test al, al	      6338	tc-i386.c	FUNCTION_84	IF_1
0x400a2e6	            0x7525	                           jne 0x400a30d	      6338	tc-i386.c	FUNCTION_84	IF_1
0x400a2e8	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6339	tc-i386.c	FUNCTION_84	IF_1
0x400a2ec	          0x83e020	                           and eax, 0x20	      6339	tc-i386.c	FUNCTION_84	IF_1
0x400a2ef	            0x84c0	                             test al, al	      6339	tc-i386.c	FUNCTION_84	IF_1
0x400a2f1	            0x751a	                           jne 0x400a30d	      6339	tc-i386.c	FUNCTION_84	IF_1
0x400a2f3	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6340	tc-i386.c	FUNCTION_84	IF_1
0x400a2f7	          0x83e040	                           and eax, 0x40	      6340	tc-i386.c	FUNCTION_84	IF_1
0x400a2fa	            0x84c0	                             test al, al	      6340	tc-i386.c	FUNCTION_84	IF_1
0x400a2fc	            0x750f	                           jne 0x400a30d	      6340	tc-i386.c	FUNCTION_84	IF_1
0x400a2fe	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6341	tc-i386.c	FUNCTION_84	IF_1
0x400a302	          0x83e080	                     and eax, 0xffffff80	      6341	tc-i386.c	FUNCTION_84	IF_1
0x400a305	            0x84c0	                             test al, al	      6341	tc-i386.c	FUNCTION_84	IF_1
0x400a307	     0xf84c2020000	                            je 0x400a5cf	      6341	tc-i386.c	FUNCTION_84	IF_1
0x400a30d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400a311	      0xbe00000000	                              mov esi, 0	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400a316	          0x4889c7	                            mov rdi, rax	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400a319	      0xe80562ffff	             call sym.operand_type_equal	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400a31e	            0x85c0	                           test eax, eax	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400a320	     0xf85a9020000	                           jne 0x400a5cf	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400a326	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400a32a	      0xbe00000000	                              mov esi, 0	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400a32f	          0x4889c7	                            mov rdi, rax	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400a332	      0xe8ec61ffff	             call sym.operand_type_equal	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400a337	            0x85c0	                           test eax, eax	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400a339	     0xf8590020000	                           jne 0x400a5cf	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400a33f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400a343	      0xbe00000000	                              mov esi, 0	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400a348	          0x4889c7	                            mov rdi, rax	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400a34b	      0xe8d361ffff	             call sym.operand_type_equal	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400a350	            0x85c0	                           test eax, eax	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400a352	     0xf8577020000	                           jne 0x400a5cf	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400a358	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400a35c	      0xbe00000000	                              mov esi, 0	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400a361	          0x4889c7	                            mov rdi, rax	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400a364	      0xe8ba61ffff	             call sym.operand_type_equal	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400a369	            0x85c0	                           test eax, eax	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400a36b	     0xf855e020000	                           jne 0x400a5cf	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400a371	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400a375	      0xbe00000000	                              mov esi, 0	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400a37a	          0x4889c7	                            mov rdi, rax	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400a37d	      0xe8a161ffff	             call sym.operand_type_equal	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400a382	            0x85c0	                           test eax, eax	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400a384	     0xf8545020000	                           jne 0x400a5cf	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400a38a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6347	tc-i386.c	FUNCTION_84	IF_1	CALL_6
0x400a38e	      0xbe00000000	                              mov esi, 0	      6347	tc-i386.c	FUNCTION_84	IF_1	CALL_6
0x400a393	          0x4889c7	                            mov rdi, rax	      6347	tc-i386.c	FUNCTION_84	IF_1	CALL_6
0x400a396	      0xe88861ffff	             call sym.operand_type_equal	      6347	tc-i386.c	FUNCTION_84	IF_1	CALL_6
0x400a39b	            0x85c0	                           test eax, eax	      6347	tc-i386.c	FUNCTION_84	IF_1	CALL_6
0x400a39d	     0xf852c020000	                           jne 0x400a5cf	      6347	tc-i386.c	FUNCTION_84	IF_1	CALL_6
0x400a3a3	     0xfb605000000	           movzx eax, byte [0x0400a3aa] 	      6349	tc-i386.c	FUNCTION_84	IF_1	IF_2
0x400a3aa	            0x84c0	                             test al, al	      6349	tc-i386.c	FUNCTION_84	IF_1	IF_2
0x400a3ac	     0xf84fa000000	                            je 0x400a4ac	      6349	tc-i386.c	FUNCTION_84	IF_1	IF_2
0x400a3b2	        0x488d45f0	                   lea rax, [rbp - 0x10]	      6353	tc-i386.c	FUNCTION_84	IF_1	IF_2	CALL_7
0x400a3b6	      0xbe00000000	                              mov esi, 0	      6353	tc-i386.c	FUNCTION_84	IF_1	IF_2	CALL_7
0x400a3bb	          0x4889c7	                            mov rdi, rax	      6353	tc-i386.c	FUNCTION_84	IF_1	IF_2	CALL_7
0x400a3be	      0xe83e61ffff	               call sym.operand_type_set	      6353	tc-i386.c	FUNCTION_84	IF_1	IF_2	CALL_7
0x400a3c3	     0xfb605000000	           movzx eax, byte [0x0400a3ca] 	      6354	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3ca	            0x3c62	                            cmp al, 0x62	      6354	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3cc	            0x7545	                           jne 0x400a413	      6354	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3ce	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3d2	          0xc0e802	                               shr al, 2	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3d5	          0x83e001	                              and eax, 1	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3d8	          0x83e001	                              and eax, 1	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3db	    0x8d1485000000	                        lea edx, [rax*4]	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3e2	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3e6	          0x83e0fb	                     and eax, 0xfffffffb	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3e9	             0x9d0	                             or eax, edx	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3eb	          0x8845f1	                mov byte [rbp - 0xf], al	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3ee	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3f2	          0xc0e803	                               shr al, 3	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3f5	          0x83e001	                              and eax, 1	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3f8	          0x83e001	                              and eax, 1	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a3fb	    0x8d14c5000000	                        lea edx, [rax*8]	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a402	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a406	          0x83e0f7	                     and eax, 0xfffffff7	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a409	             0x9d0	                             or eax, edx	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a40b	          0x8845f1	                mov byte [rbp - 0xf], al	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a40e	      0xe98c000000	                           jmp 0x400a49f	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400a413	     0xfb605000000	           movzx eax, byte [0x0400a41a] 	      6359	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a41a	            0x3c77	                            cmp al, 0x77	      6359	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a41c	            0x7520	                           jne 0x400a43e	      6359	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a41e	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a422	          0xc0e804	                               shr al, 4	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a425	          0x83e001	                              and eax, 1	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a428	          0x83e001	                              and eax, 1	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a42b	          0xc1e004	                              shl eax, 4	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a42e	            0x89c2	                            mov edx, eax	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a430	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a434	          0x83e0ef	                     and eax, 0xffffffef	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a437	             0x9d0	                             or eax, edx	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a439	          0x8845f1	                mov byte [rbp - 0xf], al	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a43c	            0xeb61	                           jmp 0x400a49f	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400a43e	     0xfb605000000	           movzx eax, byte [0x0400a445] 	      6361	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a445	            0x3c71	                            cmp al, 0x71	      6361	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a447	            0x7538	                           jne 0x400a481	      6361	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a449	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a44d	          0xc0e807	                               shr al, 7	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a450	          0xc1e007	                              shl eax, 7	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a453	            0x89c2	                            mov edx, eax	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a455	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a459	          0x83e07f	                           and eax, 0x7f	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a45c	             0x9d0	                             or eax, edx	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a45e	          0x8845f1	                mov byte [rbp - 0xf], al	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a461	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a465	          0xc0e806	                               shr al, 6	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a468	          0x83e001	                              and eax, 1	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a46b	          0x83e001	                              and eax, 1	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a46e	          0xc1e006	                              shl eax, 6	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a471	            0x89c2	                            mov edx, eax	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a473	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a477	          0x83e0bf	                     and eax, 0xffffffbf	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a47a	             0x9d0	                             or eax, edx	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a47c	          0x8845f1	                mov byte [rbp - 0xf], al	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a47f	            0xeb1e	                           jmp 0x400a49f	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400a481	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a485	          0xc0e805	                               shr al, 5	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a488	          0x83e001	                              and eax, 1	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a48b	          0x83e001	                              and eax, 1	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a48e	          0xc1e005	                              shl eax, 5	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a491	            0x89c2	                            mov edx, eax	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a493	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a497	          0x83e0df	                     and eax, 0xffffffdf	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a49a	             0x9d0	                             or eax, edx	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a49c	          0x8845f1	                mov byte [rbp - 0xf], al	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a49f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6368	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a4a3	        0x488945e0	             mov qword [rbp - 0x20], rax	      6368	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a4a7	      0xe983000000	                           jmp 0x400a52f	      6368	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400a4ac	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6370	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_8
0x400a4b0	      0xbe00000000	                              mov esi, 0	      6370	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_8
0x400a4b5	          0x4889c7	                            mov rdi, rax	      6370	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_8
0x400a4b8	      0xe86660ffff	             call sym.operand_type_equal	      6370	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_8
0x400a4bd	            0x85c0	                           test eax, eax	      6370	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_8
0x400a4bf	            0x752a	                           jne 0x400a4eb	      6370	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_8
0x400a4c1	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6371	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_9
0x400a4c5	      0xbe00000000	                              mov esi, 0	      6371	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_9
0x400a4ca	          0x4889c7	                            mov rdi, rax	      6371	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_9
0x400a4cd	      0xe85160ffff	             call sym.operand_type_equal	      6371	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_9
0x400a4d2	            0x85c0	                           test eax, eax	      6371	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_9
0x400a4d4	            0x7515	                           jne 0x400a4eb	      6371	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_9
0x400a4d6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6372	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_10
0x400a4da	      0xbe00000000	                              mov esi, 0	      6372	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_10
0x400a4df	          0x4889c7	                            mov rdi, rax	      6372	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_10
0x400a4e2	      0xe83c60ffff	             call sym.operand_type_equal	      6372	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_10
0x400a4e7	            0x85c0	                           test eax, eax	      6372	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_10
0x400a4e9	            0x7444	                            je 0x400a52f	      6372	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_10
0x400a4eb	    0x8b0500000000	            mov eax, dword [0x0400a4f1] 	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a4f1	          0x83f801	                              cmp eax, 1	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a4f4	           0xf94c2	                                 sete dl	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a4f7	     0xfb605000000	           movzx eax, byte [0x0400a4fe] 	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a4fe	            0x84c0	                             test al, al	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a500	           0xf95c0	                                setne al	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a503	            0x31d0	                            xor eax, edx	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a505	            0x84c0	                             test al, al	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a507	            0x7414	                            je 0x400a51d	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a509	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a511	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a515	          0x83c810	                            or eax, 0x10	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a518	          0x8845e1	               mov byte [rbp - 0x1f], al	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a51b	            0xeb12	                           jmp 0x400a52f	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400a51d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6377	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	ELSE_5
0x400a525	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	      6377	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	ELSE_5
0x400a529	          0x83c840	                            or eax, 0x40	      6377	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	ELSE_5
0x400a52c	          0x8845e1	               mov byte [rbp - 0x1f], al	      6377	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	ELSE_5
0x400a52f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400a533	      0xbe00000000	                              mov esi, 0	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400a538	          0x4889c7	                            mov rdi, rax	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400a53b	      0xe8e35fffff	             call sym.operand_type_equal	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400a540	            0x85c0	                           test eax, eax	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400a542	     0xf8587000000	                           jne 0x400a5cf	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400a548	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6380	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_12
0x400a54c	      0xbe00000000	                              mov esi, 0	      6380	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_12
0x400a551	          0x4889c7	                            mov rdi, rax	      6380	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_12
0x400a554	      0xe8ca5fffff	             call sym.operand_type_equal	      6380	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_12
0x400a559	            0x85c0	                           test eax, eax	      6380	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_12
0x400a55b	            0x7572	                           jne 0x400a5cf	      6380	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_12
0x400a55d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6381	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_13
0x400a561	      0xbe00000000	                              mov esi, 0	      6381	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_13
0x400a566	          0x4889c7	                            mov rdi, rax	      6381	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_13
0x400a569	      0xe8b55fffff	             call sym.operand_type_equal	      6381	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_13
0x400a56e	            0x85c0	                           test eax, eax	      6381	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_13
0x400a570	            0x755d	                           jne 0x400a5cf	      6381	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_13
0x400a572	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6382	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_14
0x400a576	      0xbe00000000	                              mov esi, 0	      6382	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_14
0x400a57b	          0x4889c7	                            mov rdi, rax	      6382	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_14
0x400a57e	      0xe8a05fffff	             call sym.operand_type_equal	      6382	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_14
0x400a583	            0x85c0	                           test eax, eax	      6382	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_14
0x400a585	            0x7548	                           jne 0x400a5cf	      6382	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_14
0x400a587	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6383	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_15
0x400a58b	      0xbe00000000	                              mov esi, 0	      6383	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_15
0x400a590	          0x4889c7	                            mov rdi, rax	      6383	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_15
0x400a593	      0xe88b5fffff	             call sym.operand_type_equal	      6383	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_15
0x400a598	            0x85c0	                           test eax, eax	      6383	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_15
0x400a59a	            0x7533	                           jne 0x400a5cf	      6383	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_15
0x400a59c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6384	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_16
0x400a5a0	      0xbe00000000	                              mov esi, 0	      6384	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_16
0x400a5a5	          0x4889c7	                            mov rdi, rax	      6384	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_16
0x400a5a8	      0xe8765fffff	             call sym.operand_type_equal	      6384	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_16
0x400a5ad	            0x85c0	                           test eax, eax	      6384	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_16
0x400a5af	            0x751e	                           jne 0x400a5cf	      6384	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_16
0x400a5b1	      0xbf00000000	                              mov edi, 0	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400a5b6	      0xe800000000	                          call 0x400a5bb	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400a5bb	          0x4889c7	                            mov rdi, rax	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400a5be	      0xb800000000	                              mov eax, 0	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400a5c3	      0xe800000000	                          call 0x400a5c8	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400a5c8	      0xb800000000	                              mov eax, 0	      6388	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8
0x400a5cd	            0xeb18	                           jmp 0x400a5e7	      6388	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8
0x400a5cf	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6391	tc-i386.c	FUNCTION_84
0x400a5d2	        0x488d500e	                    lea rdx, [rax + 0xe]	      6391	tc-i386.c	FUNCTION_84
0x400a5d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6391	tc-i386.c	FUNCTION_84
0x400a5da	    0x488904d50000	                  mov qword [rdx*8], rax	      6391	tc-i386.c	FUNCTION_84
0x400a5e2	      0xb801000000	                              mov eax, 1	      6393	tc-i386.c	FUNCTION_84
0x400a5e7	        0x488b4df8	                mov rcx, qword [rbp - 8]	      6394	tc-i386.c	FUNCTION_84
0x400a5eb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6394	tc-i386.c	FUNCTION_84
0x400a5f4	            0x7405	                            je 0x400a5fb	      6394	tc-i386.c	FUNCTION_84
0x400a5f6	      0xe800000000	                          call 0x400a5fb	      6394	tc-i386.c	FUNCTION_84
0x400a5fb	              0xc9	                                   leave	      6394	tc-i386.c	FUNCTION_84
0x400a5fc	              0xc3	                                     ret	      6394	tc-i386.c	FUNCTION_84
RC_SAE_immediate	CALL,8:FOR,1:WHILE,0:functions,0:SWITCH,0:IF,6:ELSE,1:DO,0	139
0x400ff09	              0x55	                                push rbp	      9236	tc-i386.c	FUNCTION_110
0x400ff0a	          0x4889e5	                            mov rbp, rsp	      9236	tc-i386.c	FUNCTION_110
0x400ff0d	        0x4883ec30	                           sub rsp, 0x30	      9236	tc-i386.c	FUNCTION_110
0x400ff11	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      9236	tc-i386.c	FUNCTION_110
0x400ff15	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9238	tc-i386.c	FUNCTION_110
0x400ff19	        0x488945f0	             mov qword [rbp - 0x10], rax	      9238	tc-i386.c	FUNCTION_110
0x400ff1d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9241	tc-i386.c	FUNCTION_110	IF_1
0x400ff21	           0xfb600	                   movzx eax, byte [rax]	      9241	tc-i386.c	FUNCTION_110	IF_1
0x400ff24	            0x3c7b	                            cmp al, 0x7b	      9241	tc-i386.c	FUNCTION_110	IF_1
0x400ff26	            0x740a	                            je 0x400ff32	      9241	tc-i386.c	FUNCTION_110	IF_1
0x400ff28	      0xb800000000	                              mov eax, 0	      9242	tc-i386.c	FUNCTION_110	IF_1
0x400ff2d	      0xe90f020000	                           jmp 0x4010141	      9242	tc-i386.c	FUNCTION_110	IF_1
0x400ff32	      0x488345f001	               add qword [rbp - 0x10], 1	      9244	tc-i386.c	FUNCTION_110
0x400ff37	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      9245	tc-i386.c	FUNCTION_110
0x400ff3e	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      9246	tc-i386.c	FUNCTION_110	FOR_1	CALL_1
0x400ff45	      0xe9e4000000	                           jmp 0x401002e	      9246	tc-i386.c	FUNCTION_110	FOR_1	CALL_1
0x400ff4a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff4d	          0x4889d0	                            mov rax, rdx	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff50	          0x4801c0	                            add rax, rax	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff53	          0x4801d0	                            add rax, rdx	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff56	        0x48c1e003	                              shl rax, 3	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff5a	    0x480500000000	                              add rax, 0	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff60	            0x8b00	                    mov eax, dword [rax]	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff62	            0x89c6	                            mov esi, eax	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff64	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff67	          0x4889d0	                            mov rax, rdx	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff6a	          0x4801c0	                            add rax, rax	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff6d	          0x4801d0	                            add rax, rdx	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff70	        0x48c1e003	                              shl rax, 3	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff74	    0x480500000000	                              add rax, 0	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff7a	          0x488b08	                    mov rcx, qword [rax]	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff7d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff81	          0x4889f2	                            mov rdx, rsi	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff84	          0x4889ce	                            mov rsi, rcx	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff87	          0x4889c7	                            mov rdi, rax	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff8a	      0xe800000000	                          call 0x400ff8f	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff8f	            0x85c0	                           test eax, eax	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff91	     0xf8593000000	                           jne 0x401002a	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x400ff97	    0x488b05000000	            mov rax, qword [0x0400ff9e] 	      9250	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ff9e	          0x4885c0	                           test rax, rax	      9250	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffa1	            0x755c	                           jne 0x400ffff	      9250	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffa3	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffa6	          0x4889d0	                            mov rax, rdx	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffa9	          0x4801c0	                            add rax, rax	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffac	          0x4801d0	                            add rax, rdx	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffaf	        0x48c1e003	                              shl rax, 3	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffb3	    0x480500000000	                              add rax, 0	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffb9	            0x8b00	                    mov eax, dword [rax]	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffbb	    0x890500000000	            mov dword [0x0400ffc1], eax 	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffc1	    0x8b0500000000	            mov eax, dword [0x0400ffc7] 	      9253	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffc7	    0x890500000000	            mov dword [0x0400ffcd], eax 	      9253	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffcd	    0x48c705000000	               mov qword [0x0400ffd8], 0	      9254	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x400ffd8	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      9261	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x400ffdb	          0x4889d0	                            mov rax, rdx	      9261	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x400ffde	          0x4801c0	                            add rax, rax	      9261	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x400ffe1	          0x4801d0	                            add rax, rdx	      9261	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x400ffe4	        0x48c1e003	                              shl rax, 3	      9261	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x400ffe8	    0x480500000000	                              add rax, 0	      9261	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x400ffee	            0x8b00	                    mov eax, dword [rax]	      9261	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x400fff0	            0x89c0	                            mov eax, eax	      9261	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x400fff2	        0x480145f0	            add qword [rbp - 0x10], rax 	      9261	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x400fff6	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      9262	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x400fffd	            0xeb39	                           jmp 0x4010038	      9263	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x400ffff	      0xbf00000000	                              mov edi, 0	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4010004	      0xe800000000	                          call 0x4010009	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4010009	          0x4889c2	                            mov rdx, rax	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x401000c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4010010	          0x4889c6	                            mov rsi, rax	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4010013	          0x4889d7	                            mov rdi, rdx	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4010016	      0xb800000000	                              mov eax, 0	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x401001b	      0xe800000000	                          call 0x4010020	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4010020	      0xb800000000	                              mov eax, 0	      9259	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1
0x4010025	      0xe917010000	                           jmp 0x4010141	      9259	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1
0x401002a	        0x8345ec01	               add dword [rbp - 0x14], 1	      9246	tc-i386.c	FUNCTION_110	FOR_1	CALL_1
0x401002e	        0x837dec04	               cmp dword [rbp - 0x14], 4	      9246	tc-i386.c	FUNCTION_110	FOR_1	CALL_1
0x4010032	     0xf8612ffffff	                           jbe 0x400ff4a	      9246	tc-i386.c	FUNCTION_110	FOR_1	CALL_1
0x4010038	        0x837de800	               cmp dword [rbp - 0x18], 0	      9266	tc-i386.c	FUNCTION_110	IF_4
0x401003c	            0x750a	                           jne 0x4010048	      9266	tc-i386.c	FUNCTION_110	IF_4
0x401003e	      0xb800000000	                              mov eax, 0	      9267	tc-i386.c	FUNCTION_110	IF_4
0x4010043	      0xe9f9000000	                           jmp 0x4010141	      9267	tc-i386.c	FUNCTION_110	IF_4
0x4010048	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9269	tc-i386.c	FUNCTION_110	IF_5
0x401004c	        0x488d5001	                      lea rdx, [rax + 1]	      9269	tc-i386.c	FUNCTION_110	IF_5
0x4010050	        0x488955f0	             mov qword [rbp - 0x10], rdx	      9269	tc-i386.c	FUNCTION_110	IF_5
0x4010054	           0xfb600	                   movzx eax, byte [rax]	      9269	tc-i386.c	FUNCTION_110	IF_5
0x4010057	            0x3c7d	                            cmp al, 0x7d	      9269	tc-i386.c	FUNCTION_110	IF_5
0x4010059	            0x742b	                            je 0x4010086	      9269	tc-i386.c	FUNCTION_110	IF_5
0x401005b	      0xbf00000000	                              mov edi, 0	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4010060	      0xe800000000	                          call 0x4010065	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4010065	          0x4889c2	                            mov rdx, rax	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4010068	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x401006c	          0x4889c6	                            mov rsi, rax	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x401006f	          0x4889d7	                            mov rdi, rdx	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4010072	      0xb800000000	                              mov eax, 0	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4010077	      0xe800000000	                          call 0x401007c	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x401007c	      0xb800000000	                              mov eax, 0	      9272	tc-i386.c	FUNCTION_110	IF_5
0x4010081	      0xe9bb000000	                           jmp 0x4010141	      9272	tc-i386.c	FUNCTION_110	IF_5
0x4010086	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9275	tc-i386.c	FUNCTION_110	IF_6
0x401008a	           0xfb600	                   movzx eax, byte [rax]	      9275	tc-i386.c	FUNCTION_110	IF_6
0x401008d	            0x84c0	                             test al, al	      9275	tc-i386.c	FUNCTION_110	IF_6
0x401008f	            0x742b	                            je 0x40100bc	      9275	tc-i386.c	FUNCTION_110	IF_6
0x4010091	      0xbf00000000	                              mov edi, 0	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x4010096	      0xe800000000	                          call 0x401009b	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x401009b	          0x4889c2	                            mov rdx, rax	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x401009e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x40100a2	          0x4889c6	                            mov rsi, rax	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x40100a5	          0x4889d7	                            mov rdi, rdx	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x40100a8	      0xb800000000	                              mov eax, 0	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x40100ad	      0xe800000000	                          call 0x40100b2	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x40100b2	      0xb800000000	                              mov eax, 0	      9278	tc-i386.c	FUNCTION_110	IF_6
0x40100b7	      0xe985000000	                           jmp 0x4010141	      9278	tc-i386.c	FUNCTION_110	IF_6
0x40100bc	    0x8b0500000000	            mov eax, dword [0x040100c2] 	      9281	tc-i386.c	FUNCTION_110
0x40100c2	          0x8d5001	                      lea edx, [rax + 1]	      9281	tc-i386.c	FUNCTION_110
0x40100c5	    0x891500000000	            mov dword [0x040100cb], edx 	      9281	tc-i386.c	FUNCTION_110
0x40100cb	            0x89c0	                            mov eax, eax	      9281	tc-i386.c	FUNCTION_110
0x40100cd	        0x48c1e005	                              shl rax, 5	      9281	tc-i386.c	FUNCTION_110
0x40100d1	    0x480500000000	                              add rax, 0	      9281	tc-i386.c	FUNCTION_110
0x40100d7	        0x488945f8	                mov qword [rbp - 8], rax	      9281	tc-i386.c	FUNCTION_110
0x40100db	    0x8b0500000000	            mov eax, dword [0x040100e1] 	      9282	tc-i386.c	FUNCTION_110
0x40100e1	            0x4898	                                    cdqe	      9282	tc-i386.c	FUNCTION_110
0x40100e3	        0x488d5014	                   lea rdx, [rax + 0x14]	      9282	tc-i386.c	FUNCTION_110
0x40100e7	        0x488b45f8	                mov rax, qword [rbp - 8]	      9282	tc-i386.c	FUNCTION_110
0x40100eb	    0x488904d50000	                  mov qword [rdx*8], rax	      9282	tc-i386.c	FUNCTION_110
0x40100f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      9284	tc-i386.c	FUNCTION_110
0x40100f7	        0xc6401802	                mov byte [rax + 0x18], 2	      9284	tc-i386.c	FUNCTION_110
0x40100fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      9285	tc-i386.c	FUNCTION_110
0x40100ff	    0x48c740100000	               mov qword [rax + 0x10], 0	      9285	tc-i386.c	FUNCTION_110
0x4010107	        0x488b45f8	                mov rax, qword [rbp - 8]	      9286	tc-i386.c	FUNCTION_110
0x401010b	    0x48c700000000	                      mov qword [rax], 0	      9286	tc-i386.c	FUNCTION_110
0x4010112	        0x488b45f8	                mov rax, qword [rbp - 8]	      9287	tc-i386.c	FUNCTION_110
0x4010116	    0x48c740080000	                  mov qword [rax + 8], 0	      9287	tc-i386.c	FUNCTION_110
0x401011e	    0x8b0500000000	            mov eax, dword [0x04010124] 	      9289	tc-i386.c	FUNCTION_110
0x4010124	            0x4898	                                    cdqe	      9289	tc-i386.c	FUNCTION_110
0x4010126	        0x4883c00e	                            add rax, 0xe	      9289	tc-i386.c	FUNCTION_110
0x401012a	     0xfb614c50000	                 movzx edx, byte [rax*8]	      9289	tc-i386.c	FUNCTION_110
0x4010132	          0x83ca04	                               or edx, 4	      9289	tc-i386.c	FUNCTION_110
0x4010135	    0x8814c5000000	                    mov byte [rax*8], dl	      9289	tc-i386.c	FUNCTION_110
0x401013c	      0xb801000000	                              mov eax, 1	      9290	tc-i386.c	FUNCTION_110
0x4010141	              0xc9	                                   leave	      9291	tc-i386.c	FUNCTION_110
0x4010142	              0xc3	                                     ret	      9291	tc-i386.c	FUNCTION_110
check_qword_reg	CALL,4:FOR,1:WHILE,0:functions,0:SWITCH,0:IF,4:ELSE,3:DO,0	156
0x4009dab	              0x55	                                push rbp	      6233	tc-i386.c	FUNCTION_82
0x4009dac	          0x4889e5	                            mov rbp, rsp	      6233	tc-i386.c	FUNCTION_82
0x4009daf	            0x4156	                                push r14	      6233	tc-i386.c	FUNCTION_82
0x4009db1	            0x4155	                                push r13	      6233	tc-i386.c	FUNCTION_82
0x4009db3	            0x4154	                                push r12	      6233	tc-i386.c	FUNCTION_82
0x4009db5	              0x53	                                push rbx	      6233	tc-i386.c	FUNCTION_82
0x4009db6	        0x4883ec10	                           sub rsp, 0x10	      6233	tc-i386.c	FUNCTION_82
0x4009dba	    0x8b0500000000	            mov eax, dword [0x04009dc0] 	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x4009dc0	          0x8945dc	             mov dword [rbp - 0x24], eax	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x4009dc3	      0xe904020000	                           jmp 0x4009fcc	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x4009dc8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4009dcb	            0x4898	                                    cdqe	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4009dcd	        0x4883c00e	                            add rax, 0xe	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4009dd1	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4009dd9	          0x83e001	                              and eax, 1	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4009ddc	            0x84c0	                             test al, al	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4009dde	            0x7505	                           jne 0x4009de5	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4009de0	      0xe9e7010000	                           jmp 0x4009fcc	      6239	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4009de5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009de8	            0x4898	                                    cdqe	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009dea	        0x4883c00e	                            add rax, 0xe	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009dee	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009df6	          0xc0e805	                               shr al, 5	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009df9	          0x83e001	                              and eax, 1	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009dfc	            0x84c0	                             test al, al	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009dfe	     0xf84c4000000	                            je 0x4009ec8	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e04	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e07	            0x4898	                                    cdqe	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e09	        0x4883c006	                              add rax, 6	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e0d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e15	          0x83e001	                              and eax, 1	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e18	            0x84c0	                             test al, al	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e1a	            0x751f	                           jne 0x4009e3b	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e1c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e1f	            0x4898	                                    cdqe	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e21	        0x4883c006	                              add rax, 6	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e25	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e2d	          0xc0e805	                               shr al, 5	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e30	          0x83e001	                              and eax, 1	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e33	            0x84c0	                             test al, al	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e35	     0xf848d000000	                            je 0x4009ec8	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e3b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e3e	            0x4898	                                    cdqe	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e40	        0x4883c006	                              add rax, 6	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e44	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e4c	          0xc0e806	                               shr al, 6	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e4f	          0x83e001	                              and eax, 1	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e52	            0x84c0	                             test al, al	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e54	            0x7518	                           jne 0x4009e6e	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e56	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e59	            0x4898	                                    cdqe	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e5b	        0x4883c006	                              add rax, 6	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e5f	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e67	          0xc0e807	                               shr al, 7	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e6a	            0x84c0	                             test al, al	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e6c	            0x745a	                            je 0x4009ec8	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e6e	     0xfb605000000	           movzx eax, byte [0x04009e75] 	      6252	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e75	        0x440fbef0	                          movsx r14d, al	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009e79	    0x4c8b2d000000	            mov r13, qword [0x04009e80] 	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009e80	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6250	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e83	            0x4898	                                    cdqe	      6250	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e85	        0x4883c014	                           add rax, 0x14	      6250	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e89	    0x488b04c50000	                  mov rax, qword [rax*8]	      6250	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009e91	          0x4c8b20	                    mov r12, qword [rax]	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009e94	    0x488b1d000000	            mov rbx, qword [0x04009e9b] 	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009e9b	      0xbf00000000	                              mov edi, 0	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009ea0	      0xe800000000	                          call 0x4009ea5	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009ea5	          0x4589f0	                           mov r8d, r14d	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009ea8	          0x4c89e9	                            mov rcx, r13	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009eab	          0x4c89e2	                            mov rdx, r12	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009eae	          0x4889de	                            mov rsi, rbx	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009eb1	          0x4889c7	                            mov rdi, rax	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009eb4	      0xb800000000	                              mov eax, 0	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009eb9	      0xe800000000	                          call 0x4009ebe	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4009ebe	      0xb800000000	                              mov eax, 0	      6253	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009ec3	      0xe917010000	                           jmp 0x4009fdf	      6253	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4009ec8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009ecb	            0x4898	                                    cdqe	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009ecd	        0x4883c00e	                            add rax, 0xe	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009ed1	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009ed9	          0xc0e806	                               shr al, 6	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009edc	          0x83e001	                              and eax, 1	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009edf	            0x84c0	                             test al, al	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009ee1	            0x751c	                           jne 0x4009eff	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009ee3	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009ee6	            0x4898	                                    cdqe	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009ee8	        0x4883c00e	                            add rax, 0xe	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009eec	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009ef4	          0xc0e807	                               shr al, 7	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009ef7	            0x84c0	                             test al, al	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009ef9	     0xf84cd000000	                            je 0x4009fcc	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009eff	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f02	            0x4898	                                    cdqe	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f04	        0x4883c006	                              add rax, 6	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f08	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f10	          0x83e001	                              and eax, 1	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f13	            0x84c0	                             test al, al	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f15	            0x751f	                           jne 0x4009f36	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f17	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f1a	            0x4898	                                    cdqe	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f1c	        0x4883c006	                              add rax, 6	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f20	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f28	          0xc0e805	                               shr al, 5	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f2b	          0x83e001	                              and eax, 1	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f2e	            0x84c0	                             test al, al	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f30	     0xf8496000000	                            je 0x4009fcc	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f36	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f39	            0x4898	                                    cdqe	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f3b	        0x4883c006	                              add rax, 6	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f3f	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f47	            0xd0e8	                               shr al, 1	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f49	          0x83e001	                              and eax, 1	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f4c	            0x84c0	                             test al, al	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f4e	            0x747c	                            je 0x4009fcc	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4009f50	    0x8b0500000000	            mov eax, dword [0x04009f56] 	      6264	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f56	            0x85c0	                           test eax, eax	      6264	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f58	            0x7425	                            je 0x4009f7f	      6264	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f5a	     0xfb605000000	           movzx eax, byte [0x04009f61] 	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f61	          0x83e002	                              and eax, 2	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f64	            0x84c0	                             test al, al	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f66	            0x7417	                            je 0x4009f7f	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f68	     0xfb605000000	           movzx eax, byte [0x04009f6f] 	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f6f	          0x83e004	                              and eax, 4	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f72	            0x84c0	                             test al, al	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f74	            0x7509	                           jne 0x4009f7f	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f76	    0xc60500000000	            mov byte [0x04009f7d], 0x6c 	      6269	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f7d	            0xeb4d	                           jmp 0x4009fcc	      6269	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4009f7f	     0xfb605000000	           movzx eax, byte [0x04009f86] 	      6275	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3
0x4009f86	        0x440fbee8	                          movsx r13d, al	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4009f8a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6274	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3
0x4009f8d	            0x4898	                                    cdqe	      6274	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3
0x4009f8f	        0x4883c014	                           add rax, 0x14	      6274	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3
0x4009f93	    0x488b04c50000	                  mov rax, qword [rax*8]	      6274	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3
0x4009f9b	          0x4c8b20	                    mov r12, qword [rax]	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4009f9e	    0x488b1d000000	            mov rbx, qword [0x04009fa5] 	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4009fa5	      0xbf00000000	                              mov edi, 0	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4009faa	      0xe800000000	                          call 0x4009faf	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4009faf	          0x4489e9	                           mov ecx, r13d	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4009fb2	          0x4c89e2	                            mov rdx, r12	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4009fb5	          0x4889de	                            mov rsi, rbx	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4009fb8	          0x4889c7	                            mov rdi, rax	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4009fbb	      0xb800000000	                              mov eax, 0	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4009fc0	      0xe800000000	                          call 0x4009fc5	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4009fc5	      0xb800000000	                              mov eax, 0	      6276	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3
0x4009fca	            0xeb13	                           jmp 0x4009fdf	      6276	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3
0x4009fcc	        0x836ddc01	               sub dword [rbp - 0x24], 1	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x4009fd0	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x4009fd4	     0xf89eefdffff	                           jns 0x4009dc8	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x4009fda	      0xb801000000	                              mov eax, 1	      6279	tc-i386.c	FUNCTION_82
0x4009fdf	        0x4883c410	                           add rsp, 0x10	      6280	tc-i386.c	FUNCTION_82
0x4009fe3	              0x5b	                                 pop rbx	      6280	tc-i386.c	FUNCTION_82
0x4009fe4	            0x415c	                                 pop r12	      6280	tc-i386.c	FUNCTION_82
0x4009fe6	            0x415d	                                 pop r13	      6280	tc-i386.c	FUNCTION_82
0x4009fe8	            0x415e	                                 pop r14	      6280	tc-i386.c	FUNCTION_82
0x4009fea	              0x5d	                                 pop rbp	      6280	tc-i386.c	FUNCTION_82
0x4009feb	              0xc3	                                     ret	      6280	tc-i386.c	FUNCTION_82
set_16bit_gcc_code_flag	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	23
0x4001dec	              0x55	                                push rbp	      2441	tc-i386.c	FUNCTION_43
0x4001ded	          0x4889e5	                            mov rbp, rsp	      2441	tc-i386.c	FUNCTION_43
0x4001df0	        0x4883ec10	                           sub rsp, 0x10	      2441	tc-i386.c	FUNCTION_43
0x4001df4	          0x897dfc	                mov dword [rbp - 4], edi	      2441	tc-i386.c	FUNCTION_43
0x4001df7	          0x8b45fc	                mov eax, dword [rbp - 4]	      2442	tc-i386.c	FUNCTION_43
0x4001dfa	    0x890500000000	            mov dword [0x04001e00], eax 	      2442	tc-i386.c	FUNCTION_43
0x4001e00	    0x8b0500000000	            mov eax, dword [0x04001e06] 	      2443	tc-i386.c	FUNCTION_43	IF_1
0x4001e06	          0x83f801	                              cmp eax, 1	      2443	tc-i386.c	FUNCTION_43	IF_1
0x4001e09	            0x7414	                            je 0x4001e1f	      2443	tc-i386.c	FUNCTION_43	IF_1
0x4001e0b	      0xba00000000	                              mov edx, 0	      2444	tc-i386.c	FUNCTION_43	CALL_1
0x4001e10	      0xbe8c090000	                          mov esi, 0x98c	      2444	tc-i386.c	FUNCTION_43	CALL_1
0x4001e15	      0xbf00000000	                              mov edi, 0	      2444	tc-i386.c	FUNCTION_43	CALL_1
0x4001e1a	      0xe800000000	                          call 0x4001e1f	      2444	tc-i386.c	FUNCTION_43	CALL_1
0x4001e1f	     0xfb605000000	           movzx eax, byte [0x04001e26] 	      2445	tc-i386.c	FUNCTION_43
0x4001e26	          0x83e0bf	                     and eax, 0xffffffbf	      2445	tc-i386.c	FUNCTION_43
0x4001e29	    0x880500000000	               mov byte [0x04001e2f], al	      2445	tc-i386.c	FUNCTION_43
0x4001e2f	     0xfb605000000	           movzx eax, byte [0x04001e36] 	      2446	tc-i386.c	FUNCTION_43
0x4001e36	          0x83c880	                      or eax, 0xffffff80	      2446	tc-i386.c	FUNCTION_43
0x4001e39	    0x880500000000	               mov byte [0x04001e3f], al	      2446	tc-i386.c	FUNCTION_43
0x4001e3f	    0xc60500000000	            mov byte [0x04001e46], 0x6c 	      2447	tc-i386.c	FUNCTION_43
0x4001e46	              0x90	                                     nop	      2448	tc-i386.c	FUNCTION_43
0x4001e47	              0xc9	                                   leave	      2448	tc-i386.c	FUNCTION_43
0x4001e48	              0xc3	                                     ret	      2448	tc-i386.c	FUNCTION_43
parse_register	CALL,7:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,4:ELSE,1:DO,0	97
0x4011c7e	              0x55	                                push rbp	     10292	tc-i386.c	FUNCTION_121
0x4011c7f	          0x4889e5	                            mov rbp, rsp	     10292	tc-i386.c	FUNCTION_121
0x4011c82	        0x4883ec40	                           sub rsp, 0x40	     10292	tc-i386.c	FUNCTION_121
0x4011c86	        0x48897dc8	             mov qword [rbp - 0x38], rdi	     10292	tc-i386.c	FUNCTION_121
0x4011c8a	        0x488975c0	             mov qword [rbp - 0x40], rsi	     10292	tc-i386.c	FUNCTION_121
0x4011c8e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10295	tc-i386.c	FUNCTION_121	IF_1
0x4011c92	           0xfb600	                   movzx eax, byte [rax]	     10295	tc-i386.c	FUNCTION_121	IF_1
0x4011c95	            0x3c25	                            cmp al, 0x25	     10295	tc-i386.c	FUNCTION_121	IF_1
0x4011c97	            0x740a	                            je 0x4011ca3	     10295	tc-i386.c	FUNCTION_121	IF_1
0x4011c99	    0x8b0500000000	            mov eax, dword [0x04011c9f] 	     10295	tc-i386.c	FUNCTION_121	IF_1
0x4011c9f	            0x85c0	                           test eax, eax	     10295	tc-i386.c	FUNCTION_121	IF_1
0x4011ca1	            0x7419	                            je 0x4011cbc	     10295	tc-i386.c	FUNCTION_121	IF_1
0x4011ca3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10296	tc-i386.c	FUNCTION_121	CALL_1
0x4011ca7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     10296	tc-i386.c	FUNCTION_121	CALL_1
0x4011cab	          0x4889d6	                            mov rsi, rdx	     10296	tc-i386.c	FUNCTION_121	CALL_1
0x4011cae	          0x4889c7	                            mov rdi, rax	     10296	tc-i386.c	FUNCTION_121	CALL_1
0x4011cb1	      0xe841fbffff	            call sym.parse_real_register	     10296	tc-i386.c	FUNCTION_121	CALL_1
0x4011cb6	        0x488945e0	             mov qword [rbp - 0x20], rax	     10296	tc-i386.c	FUNCTION_121	CALL_1
0x4011cba	            0xeb08	                           jmp 0x4011cc4	     10296	tc-i386.c	FUNCTION_121	CALL_1
0x4011cbc	    0x48c745e00000	               mov qword [rbp - 0x20], 0	     10298	tc-i386.c	FUNCTION_121	ELSE_1
0x4011cc4	      0x48837de000	               cmp qword [rbp - 0x20], 0	     10299	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4011cc9	     0xf852c010000	                           jne 0x4011dfb	     10299	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4011ccf	    0x488b05000000	            mov rax, qword [0x04011cd6] 	     10301	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4011cd6	        0x488945e8	             mov qword [rbp - 0x18], rax	     10301	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4011cda	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10305	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4011cde	    0x488905000000	            mov qword [0x04011ce5], rax 	     10305	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4011ce5	        0x488d45c8	                   lea rax, [rbp - 0x38]	     10306	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x4011ce9	          0x4889c7	                            mov rdi, rax	     10306	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x4011cec	      0xe800000000	                          call 0x4011cf1	     10306	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x4011cf1	          0x8845df	               mov byte [rbp - 0x21], al	     10306	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x4011cf4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10307	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4011cf8	          0x4889c7	                            mov rdi, rax	     10307	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4011cfb	      0xe800000000	                          call 0x4011d00	     10307	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4011d00	        0x488945f0	             mov qword [rbp - 0x10], rax	     10307	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4011d04	      0x48837df000	               cmp qword [rbp - 0x10], 0	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4011d09	     0xf84d4000000	                            je 0x4011de3	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4011d0f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4011d13	          0x4889c7	                            mov rdi, rax	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4011d16	      0xe800000000	                          call 0x4011d1b	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4011d1b	          0x4889c2	                            mov rdx, rax	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4011d1e	    0x488b05000000	            mov rax, qword [0x04011d25] 	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4011d25	          0x4839c2	                            cmp rdx, rax	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4011d28	     0xf85b5000000	                           jne 0x4011de3	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4011d2e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10310	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_5
0x4011d32	          0x4889c7	                            mov rdi, rax	     10310	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_5
0x4011d35	      0xe800000000	                          call 0x4011d3a	     10310	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_5
0x4011d3a	        0x488945f8	                mov qword [rbp - 8], rax	     10310	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_5
0x4011d3e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4011d42	         0xfb64018	           movzx eax, byte [rax + 0x18] 	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4011d46	            0x3c05	                               cmp al, 5	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4011d48	            0x7414	                            je 0x4011d5e	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4011d4a	      0xba00000000	                              mov edx, 0	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4011d4f	      0xbe48280000	                         mov esi, 0x2848	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4011d54	      0xbf00000000	                              mov edi, 0	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4011d59	      0xe800000000	                          call 0x4011d5e	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4011d5e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d62	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d66	          0x4885c0	                           test rax, rax	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d69	            0x7818	                            js 0x4011d83	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d6b	        0x488b45f8	                mov rax, qword [rbp - 8]	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d6f	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d73	          0x4889c2	                            mov rdx, rax	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d76	    0x8b0500000000	            mov eax, dword [0x04011d7c] 	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d7c	            0x89c0	                            mov eax, eax	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d7e	          0x4839c2	                            cmp rdx, rax	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d81	            0x7214	                            jb 0x4011d97	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d83	      0xba00000000	                              mov edx, 0	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d88	      0xbe4a280000	                         mov esi, 0x284a	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d8d	      0xbf00000000	                              mov edi, 0	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d92	      0xe800000000	                          call 0x4011d97	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4011d97	        0x488b45f8	                mov rax, qword [rbp - 8]	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011d9b	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011d9f	          0x4889c2	                            mov rdx, rax	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011da2	          0x4889d0	                            mov rax, rdx	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011da5	          0x4801c0	                            add rax, rax	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011da8	          0x4801d0	                            add rax, rdx	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011dab	        0x48c1e003	                              shl rax, 3	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011daf	    0x480500000000	                              add rax, 0	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011db5	        0x488945e0	             mov qword [rbp - 0x20], rax	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011db9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10316	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x4011dbd	         0xfb64010	           movzx eax, byte [rax + 0x10] 	     10316	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x4011dc1	           0xfb6c0	                           movzx eax, al	     10316	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x4011dc4	          0x83e004	                              and eax, 4	     10316	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x4011dc7	            0x85c0	                           test eax, eax	     10316	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x4011dc9	            0x740a	                            je 0x4011dd5	     10316	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x4011dcb	    0xc70500000000	               mov dword [0x04011dd5], 3	     10317	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x4011dd5	    0x488b15000000	            mov rdx, qword [0x04011ddc] 	     10318	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011ddc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10318	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011de0	          0x488910	                    mov qword [rax], rdx	     10318	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4011de3	    0x488b05000000	            mov rax, qword [0x04011dea] 	     10320	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4011dea	         0xfb655df	            movzx edx, byte [rbp - 0x21]	     10320	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4011dee	            0x8810	                      mov byte [rax], dl	     10320	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4011df0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10321	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4011df4	    0x488905000000	            mov qword [0x04011dfb], rax 	     10321	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4011dfb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10323	tc-i386.c	FUNCTION_121
0x4011dff	              0xc9	                                   leave	     10324	tc-i386.c	FUNCTION_121
0x4011e00	              0xc3	                                     ret	     10324	tc-i386.c	FUNCTION_121
x86_64_section_word	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	22
0x401682c	              0x55	                                push rbp	     11625	tc-i386.c	FUNCTION_143	ELSE_1
0x401682d	          0x4889e5	                            mov rbp, rsp	     11625	tc-i386.c	FUNCTION_143	ELSE_1
0x4016830	        0x4883ec10	                           sub rsp, 0x10	     11625	tc-i386.c	FUNCTION_143	ELSE_1
0x4016834	        0x48897df8	                mov qword [rbp - 8], rdi	     11625	tc-i386.c	FUNCTION_143	ELSE_1
0x4016838	        0x488975f0	             mov qword [rbp - 0x10], rsi	     11625	tc-i386.c	FUNCTION_143	ELSE_1
0x401683c	      0x48837df005	               cmp qword [rbp - 0x10], 5	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4016841	            0x752c	                           jne 0x401686f	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4016843	    0x8b0500000000	            mov eax, dword [0x04016849] 	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4016849	          0x83f802	                              cmp eax, 2	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x401684c	            0x7521	                           jne 0x401686f	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x401684e	        0x488b45f8	                mov rax, qword [rbp - 8]	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4016852	      0xba05000000	                              mov edx, 5	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4016857	      0xbe00000000	                              mov esi, 0	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x401685c	          0x4889c7	                            mov rdi, rax	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x401685f	      0xe800000000	                          call 0x4016864	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4016864	            0x85c0	                           test eax, eax	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4016866	            0x7507	                           jne 0x401686f	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4016868	      0xb800000010	                     mov eax, 0x10000000	     11627	tc-i386.c	FUNCTION_143	ELSE_1
0x401686d	            0xeb07	                           jmp 0x4016876	     11627	tc-i386.c	FUNCTION_143	ELSE_1
0x401686f	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11629	tc-i386.c	FUNCTION_143	ELSE_1
0x4016876	              0xc9	                                   leave	     11630	tc-i386.c	FUNCTION_143	ELSE_1	IF_2
0x4016877	              0xc3	                                     ret	     11630	tc-i386.c	FUNCTION_143	ELSE_1	IF_2
fits_in_unsigned_word	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	8
0x40016db	              0x55	                                push rbp	      2161	tc-i386.c	FUNCTION_32
0x40016dc	          0x4889e5	                            mov rbp, rsp	      2161	tc-i386.c	FUNCTION_32
0x40016df	        0x48897df8	                mov qword [rbp - 8], rdi	      2161	tc-i386.c	FUNCTION_32
0x40016e3	    0x48817df8ffff	            cmp qword [rbp - 8], 0xffff 	      2162	tc-i386.c	FUNCTION_32
0x40016eb	           0xf96c0	                                setbe al	      2162	tc-i386.c	FUNCTION_32
0x40016ee	           0xfb6c0	                           movzx eax, al	      2162	tc-i386.c	FUNCTION_32
0x40016f1	              0x5d	                                 pop rbp	      2163	tc-i386.c	FUNCTION_32
0x40016f2	              0xc3	                                     ret	      2163	tc-i386.c	FUNCTION_32
i386_parse_name	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	59
0x4011e01	              0x55	                                push rbp	     10328	tc-i386.c	FUNCTION_122
0x4011e02	          0x4889e5	                            mov rbp, rsp	     10328	tc-i386.c	FUNCTION_122
0x4011e05	        0x4883ec30	                           sub rsp, 0x30	     10328	tc-i386.c	FUNCTION_122
0x4011e09	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10328	tc-i386.c	FUNCTION_122
0x4011e0d	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10328	tc-i386.c	FUNCTION_122
0x4011e11	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10328	tc-i386.c	FUNCTION_122
0x4011e15	    0x488b05000000	            mov rax, qword [0x04011e1c] 	     10330	tc-i386.c	FUNCTION_122
0x4011e1c	        0x488945f0	             mov qword [rbp - 0x10], rax	     10330	tc-i386.c	FUNCTION_122
0x4011e20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10332	tc-i386.c	FUNCTION_122
0x4011e24	           0xfb610	                   movzx edx, byte [rax]	     10332	tc-i386.c	FUNCTION_122
0x4011e27	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10332	tc-i386.c	FUNCTION_122
0x4011e2b	            0x8810	                      mov byte [rax], dl	     10332	tc-i386.c	FUNCTION_122
0x4011e2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10333	tc-i386.c	FUNCTION_122	CALL_1
0x4011e31	      0xbe00000000	                              mov esi, 0	     10333	tc-i386.c	FUNCTION_122	CALL_1
0x4011e36	          0x4889c7	                            mov rdi, rax	     10333	tc-i386.c	FUNCTION_122	CALL_1
0x4011e39	      0xe840feffff	                 call sym.parse_register	     10333	tc-i386.c	FUNCTION_122	CALL_1
0x4011e3e	        0x488945f8	                mov qword [rbp - 8], rax	     10333	tc-i386.c	FUNCTION_122	CALL_1
0x4011e42	      0x48837df800	                  cmp qword [rbp - 8], 0	     10334	tc-i386.c	FUNCTION_122	IF_1
0x4011e47	            0x7462	                            je 0x4011eab	     10334	tc-i386.c	FUNCTION_122	IF_1
0x4011e49	    0x488b05000000	            mov rax, qword [0x04011e50] 	     10334	tc-i386.c	FUNCTION_122	IF_1
0x4011e50	        0x483945f0	            cmp qword [rbp - 0x10], rax 	     10334	tc-i386.c	FUNCTION_122	IF_1
0x4011e54	            0x7755	                            ja 0x4011eab	     10334	tc-i386.c	FUNCTION_122	IF_1
0x4011e56	    0x488b05000000	            mov rax, qword [0x04011e5d] 	     10336	tc-i386.c	FUNCTION_122	IF_1
0x4011e5d	           0xfb610	                   movzx edx, byte [rax]	     10336	tc-i386.c	FUNCTION_122	IF_1
0x4011e60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10336	tc-i386.c	FUNCTION_122	IF_1
0x4011e64	            0x8810	                      mov byte [rax], dl	     10336	tc-i386.c	FUNCTION_122	IF_1
0x4011e66	    0x488b05000000	            mov rax, qword [0x04011e6d] 	     10337	tc-i386.c	FUNCTION_122	IF_1
0x4011e6d	          0xc60000	                       mov byte [rax], 0	     10337	tc-i386.c	FUNCTION_122	IF_1
0x4011e70	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10338	tc-i386.c	FUNCTION_122	IF_1
0x4011e74	        0xc6401805	                mov byte [rax + 0x18], 5	     10338	tc-i386.c	FUNCTION_122	IF_1
0x4011e78	        0x488b45f8	                mov rax, qword [rbp - 8]	     10339	tc-i386.c	FUNCTION_122	IF_1
0x4011e7c	      0xba00000000	                              mov edx, 0	     10339	tc-i386.c	FUNCTION_122	IF_1
0x4011e81	          0x4829d0	                            sub rax, rdx	     10339	tc-i386.c	FUNCTION_122	IF_1
0x4011e84	        0x48c1f803	                              sar rax, 3	     10339	tc-i386.c	FUNCTION_122	IF_1
0x4011e88	          0x4889c2	                            mov rdx, rax	     10339	tc-i386.c	FUNCTION_122	IF_1
0x4011e8b	    0x48b8abaaaaaa	          movabs rax, 0xaaaaaaaaaaaaaaab	     10339	tc-i386.c	FUNCTION_122	IF_1
0x4011e95	        0x480fafc2	                           imul rax, rdx	     10339	tc-i386.c	FUNCTION_122	IF_1
0x4011e99	          0x4889c2	                            mov rdx, rax	     10339	tc-i386.c	FUNCTION_122	IF_1
0x4011e9c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10339	tc-i386.c	FUNCTION_122	IF_1
0x4011ea0	        0x48895010	             mov qword [rax + 0x10], rdx	     10339	tc-i386.c	FUNCTION_122	IF_1
0x4011ea4	      0xb801000000	                              mov eax, 1	     10340	tc-i386.c	FUNCTION_122	IF_1
0x4011ea9	            0xeb37	                           jmp 0x4011ee2	     10340	tc-i386.c	FUNCTION_122	IF_1
0x4011eab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10342	tc-i386.c	FUNCTION_122
0x4011eaf	    0x488905000000	            mov qword [0x04011eb6], rax 	     10342	tc-i386.c	FUNCTION_122
0x4011eb6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10343	tc-i386.c	FUNCTION_122
0x4011eba	          0xc60000	                       mov byte [rax], 0	     10343	tc-i386.c	FUNCTION_122
0x4011ebd	    0x8b0500000000	            mov eax, dword [0x04011ec3] 	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x4011ec3	            0x85c0	                           test eax, eax	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x4011ec5	            0x7415	                            je 0x4011edc	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x4011ec7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x4011ecb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x4011ecf	          0x4889d6	                            mov rsi, rdx	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x4011ed2	          0x4889c7	                            mov rdi, rax	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x4011ed5	      0xe8be250000	          call sym.i386_intel_parse_name	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x4011eda	            0xeb05	                           jmp 0x4011ee1	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x4011edc	      0xb800000000	                              mov eax, 0	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x4011ee1	              0x90	                                     nop	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x4011ee2	              0xc9	                                   leave	     10345	tc-i386.c	FUNCTION_122
0x4011ee3	              0xc3	                                     ret	     10345	tc-i386.c	FUNCTION_122
cpu_flags_equal	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,3:ELSE,0:DO,0	37
0x40005ac	              0x55	                                push rbp	      1593	tc-i386.c	FUNCTION_11
0x40005ad	          0x4889e5	                            mov rbp, rsp	      1593	tc-i386.c	FUNCTION_11
0x40005b0	        0x48897df8	                mov qword [rbp - 8], rdi	      1593	tc-i386.c	FUNCTION_11
0x40005b4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1593	tc-i386.c	FUNCTION_11
0x40005b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1597	tc-i386.c	FUNCTION_11	SWITCH_1	IF_1
0x40005bc	          0x8b500c	              mov edx, dword [rax + 0xc]	      1597	tc-i386.c	FUNCTION_11	SWITCH_1	IF_1
0x40005bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1597	tc-i386.c	FUNCTION_11	SWITCH_1	IF_1
0x40005c3	          0x8b400c	              mov eax, dword [rax + 0xc]	      1597	tc-i386.c	FUNCTION_11	SWITCH_1	IF_1
0x40005c6	            0x39c2	                            cmp edx, eax	      1597	tc-i386.c	FUNCTION_11	SWITCH_1	IF_1
0x40005c8	            0x7407	                            je 0x40005d1	      1597	tc-i386.c	FUNCTION_11	SWITCH_1	IF_1
0x40005ca	      0xb800000000	                              mov eax, 0	      1598	tc-i386.c	FUNCTION_11	SWITCH_1	IF_1
0x40005cf	            0xeb46	                           jmp 0x4000617	      1598	tc-i386.c	FUNCTION_11	SWITCH_1	IF_1
0x40005d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1601	tc-i386.c	FUNCTION_11	SWITCH_1	IF_2
0x40005d5	          0x8b5008	                mov edx, dword [rax + 8]	      1601	tc-i386.c	FUNCTION_11	SWITCH_1	IF_2
0x40005d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1601	tc-i386.c	FUNCTION_11	SWITCH_1	IF_2
0x40005dc	          0x8b4008	                mov eax, dword [rax + 8]	      1601	tc-i386.c	FUNCTION_11	SWITCH_1	IF_2
0x40005df	            0x39c2	                            cmp edx, eax	      1601	tc-i386.c	FUNCTION_11	SWITCH_1	IF_2
0x40005e1	            0x7407	                            je 0x40005ea	      1601	tc-i386.c	FUNCTION_11	SWITCH_1	IF_2
0x40005e3	      0xb800000000	                              mov eax, 0	      1602	tc-i386.c	FUNCTION_11	SWITCH_1	IF_2
0x40005e8	            0xeb2d	                           jmp 0x4000617	      1602	tc-i386.c	FUNCTION_11	SWITCH_1	IF_2
0x40005ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40005ee	          0x8b5004	                mov edx, dword [rax + 4]	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40005f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40005f5	          0x8b4004	                mov eax, dword [rax + 4]	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40005f8	            0x39c2	                            cmp edx, eax	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40005fa	            0x7407	                            je 0x4000603	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40005fc	      0xb800000000	                              mov eax, 0	      1606	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4000601	            0xeb14	                           jmp 0x4000617	      1606	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4000603	        0x488b45f8	                mov rax, qword [rbp - 8]	      1609	tc-i386.c	FUNCTION_11	SWITCH_1
0x4000607	            0x8b10	                    mov edx, dword [rax]	      1609	tc-i386.c	FUNCTION_11	SWITCH_1
0x4000609	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1609	tc-i386.c	FUNCTION_11	SWITCH_1
0x400060d	            0x8b00	                    mov eax, dword [rax]	      1609	tc-i386.c	FUNCTION_11	SWITCH_1
0x400060f	            0x39c2	                            cmp edx, eax	      1609	tc-i386.c	FUNCTION_11	SWITCH_1
0x4000611	           0xf94c0	                                 sete al	      1609	tc-i386.c	FUNCTION_11	SWITCH_1
0x4000614	           0xfb6c0	                           movzx eax, al	      1609	tc-i386.c	FUNCTION_11	SWITCH_1
0x4000617	              0x5d	                                 pop rbp	      1614	tc-i386.c	FUNCTION_11
0x4000618	              0xc3	                                     ret	      1614	tc-i386.c	FUNCTION_11
set_code_flag	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	11
0x4001dcf	              0x55	                                push rbp	      2435	tc-i386.c	FUNCTION_42
0x4001dd0	          0x4889e5	                            mov rbp, rsp	      2435	tc-i386.c	FUNCTION_42
0x4001dd3	        0x4883ec10	                           sub rsp, 0x10	      2435	tc-i386.c	FUNCTION_42
0x4001dd7	          0x897dfc	                mov dword [rbp - 4], edi	      2435	tc-i386.c	FUNCTION_42
0x4001dda	          0x8b45fc	                mov eax, dword [rbp - 4]	      2436	tc-i386.c	FUNCTION_42	CALL_1
0x4001ddd	      0xbe00000000	                              mov esi, 0	      2436	tc-i386.c	FUNCTION_42	CALL_1
0x4001de2	            0x89c7	                            mov edi, eax	      2436	tc-i386.c	FUNCTION_42	CALL_1
0x4001de4	      0xe8acfeffff	               call sym.update_code_flag	      2436	tc-i386.c	FUNCTION_42	CALL_1
0x4001de9	              0x90	                                     nop	      2437	tc-i386.c	FUNCTION_42
0x4001dea	              0xc9	                                   leave	      2437	tc-i386.c	FUNCTION_42
0x4001deb	              0xc3	                                     ret	      2437	tc-i386.c	FUNCTION_42
check_string	CALL,5:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,4:ELSE,1:DO,0	80
0x4008bfc	              0x55	                                push rbp	      5761	tc-i386.c	FUNCTION_78
0x4008bfd	          0x4889e5	                            mov rbp, rsp	      5761	tc-i386.c	FUNCTION_78
0x4008c00	            0x4155	                                push r13	      5761	tc-i386.c	FUNCTION_78
0x4008c02	            0x4154	                                push r12	      5761	tc-i386.c	FUNCTION_78
0x4008c04	              0x53	                                push rbx	      5761	tc-i386.c	FUNCTION_78
0x4008c05	        0x4883ec18	                           sub rsp, 0x18	      5761	tc-i386.c	FUNCTION_78
0x4008c09	      0xbe03000000	                              mov esi, 3	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x4008c0e	    0x488b3d000000	            mov rdi, qword [0x04008c15] 	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x4008c15	      0xe8127fffff	             call sym.operand_type_check	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x4008c1a	            0x85c0	                           test eax, eax	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x4008c1c	           0xf94c0	                                 sete al	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x4008c1f	           0xfb6c0	                           movzx eax, al	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x4008c22	          0x8945dc	             mov dword [rbp - 0x24], eax	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x4008c25	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5763	tc-i386.c	FUNCTION_78	IF_1
0x4008c28	            0x4898	                                    cdqe	      5763	tc-i386.c	FUNCTION_78	IF_1
0x4008c2a	        0x4883c006	                              add rax, 6	      5763	tc-i386.c	FUNCTION_78	IF_1
0x4008c2e	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5763	tc-i386.c	FUNCTION_78	IF_1
0x4008c36	          0xc0e802	                               shr al, 2	      5763	tc-i386.c	FUNCTION_78	IF_1
0x4008c39	          0x83e001	                              and eax, 1	      5763	tc-i386.c	FUNCTION_78	IF_1
0x4008c3c	            0x84c0	                             test al, al	      5763	tc-i386.c	FUNCTION_78	IF_1
0x4008c3e	            0x746a	                            je 0x4008caa	      5763	tc-i386.c	FUNCTION_78	IF_1
0x4008c40	    0x488b05000000	            mov rax, qword [0x04008c47] 	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x4008c47	          0x4885c0	                           test rax, rax	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x4008c4a	            0x744e	                            je 0x4008c9a	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x4008c4c	    0x488b05000000	            mov rax, qword [0x04008c53] 	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x4008c53	    0x483d00000000	                              cmp rax, 0	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x4008c59	            0x743f	                            je 0x4008c9a	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x4008c5b	    0x4c8b25000000	            mov r12, qword [0x04008c62] 	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c62	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c65	        0x448d6801	                     lea r13d, [rax + 1]	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c69	    0x488b1d000000	            mov rbx, qword [0x04008c70] 	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c70	      0xbf00000000	                              mov edi, 0	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c75	      0xe800000000	                          call 0x4008c7a	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c7a	          0x4c89e1	                            mov rcx, r12	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c7d	          0x4489ea	                           mov edx, r13d	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c80	          0x4889de	                            mov rsi, rbx	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c83	          0x4889c7	                            mov rdi, rax	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c86	      0xb800000000	                              mov eax, 0	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c8b	      0xe800000000	                          call 0x4008c90	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x4008c90	      0xb800000000	                              mov eax, 0	      5771	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x4008c95	      0xe98a000000	                           jmp 0x4008d24	      5771	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x4008c9a	    0x488b05000000	            mov rax, qword [0x04008ca1] 	      5777	tc-i386.c	FUNCTION_78	IF_1
0x4008ca1	    0x488905000000	            mov qword [0x04008ca8], rax 	      5777	tc-i386.c	FUNCTION_78	IF_1
0x4008ca8	            0xeb75	                           jmp 0x4008d1f	      5777	tc-i386.c	FUNCTION_78	IF_1
0x4008caa	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x4008cad	          0x83c001	                              add eax, 1	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x4008cb0	            0x4898	                                    cdqe	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x4008cb2	        0x4883c006	                              add rax, 6	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x4008cb6	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x4008cbe	          0xc0e802	                               shr al, 2	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x4008cc1	          0x83e001	                              and eax, 1	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x4008cc4	            0x84c0	                             test al, al	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x4008cc6	            0x7457	                            je 0x4008d1f	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x4008cc8	    0x488b05000000	            mov rax, qword [0x04008ccf] 	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x4008ccf	          0x4885c0	                           test rax, rax	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x4008cd2	            0x744b	                            je 0x4008d1f	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x4008cd4	    0x488b05000000	            mov rax, qword [0x04008cdb] 	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x4008cdb	    0x483d00000000	                              cmp rax, 0	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x4008ce1	            0x743c	                            je 0x4008d1f	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x4008ce3	    0x4c8b25000000	            mov r12, qword [0x04008cea] 	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008cea	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008ced	        0x448d6802	                     lea r13d, [rax + 2]	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008cf1	    0x488b1d000000	            mov rbx, qword [0x04008cf8] 	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008cf8	      0xbf00000000	                              mov edi, 0	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008cfd	      0xe800000000	                          call 0x4008d02	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008d02	          0x4c89e1	                            mov rcx, r12	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008d05	          0x4489ea	                           mov edx, r13d	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008d08	          0x4889de	                            mov rsi, rbx	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008d0b	          0x4889c7	                            mov rdi, rax	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008d0e	      0xb800000000	                              mov eax, 0	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008d13	      0xe800000000	                          call 0x4008d18	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x4008d18	      0xb800000000	                              mov eax, 0	      5787	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x4008d1d	            0xeb05	                           jmp 0x4008d24	      5787	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x4008d1f	      0xb801000000	                              mov eax, 1	      5790	tc-i386.c	FUNCTION_78
0x4008d24	        0x4883c418	                           add rsp, 0x18	      5791	tc-i386.c	FUNCTION_78
0x4008d28	              0x5b	                                 pop rbx	      5791	tc-i386.c	FUNCTION_78
0x4008d29	            0x415c	                                 pop r12	      5791	tc-i386.c	FUNCTION_78
0x4008d2b	            0x415d	                                 pop r13	      5791	tc-i386.c	FUNCTION_78
0x4008d2d	              0x5d	                                 pop rbp	      5791	tc-i386.c	FUNCTION_78
0x4008d2e	              0xc3	                                     ret	      5791	tc-i386.c	FUNCTION_78
output_jump	CALL,12:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,11:ELSE,1:DO,0	155
0x400cde0	              0x55	                                push rbp	      7453	tc-i386.c	FUNCTION_90
0x400cde1	          0x4889e5	                            mov rbp, rsp	      7453	tc-i386.c	FUNCTION_90
0x400cde4	        0x4883ec20	                           sub rsp, 0x20	      7453	tc-i386.c	FUNCTION_90
0x400cde8	    0x8b0500000000	            mov eax, dword [0x0400cdee] 	      7457	tc-i386.c	FUNCTION_90
0x400cdee	          0x8945e8	             mov dword [rbp - 0x18], eax	      7457	tc-i386.c	FUNCTION_90
0x400cdf1	     0xfb605000000	           movzx eax, byte [0x0400cdf8] 	      7459	tc-i386.c	FUNCTION_90	IF_1
0x400cdf8	          0x83e080	                     and eax, 0xffffff80	      7459	tc-i386.c	FUNCTION_90	IF_1
0x400cdfb	            0x84c0	                             test al, al	      7459	tc-i386.c	FUNCTION_90	IF_1
0x400cdfd	            0x7463	                            je 0x400ce62	      7459	tc-i386.c	FUNCTION_90	IF_1
0x400cdff	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      7462	tc-i386.c	FUNCTION_90	IF_1
0x400ce06	     0xfb605000000	           movzx eax, byte [0x0400ce0d] 	      7463	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x400ce0d	            0x84c0	                             test al, al	      7463	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x400ce0f	            0x7419	                            je 0x400ce2a	      7463	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x400ce11	      0xbf67000000	                           mov edi, 0x67	      7465	tc-i386.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x400ce16	      0xe800000000	                          call 0x400ce1b	      7465	tc-i386.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x400ce1b	    0x8b0500000000	            mov eax, dword [0x0400ce21] 	      7466	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x400ce21	          0x83e801	                              sub eax, 1	      7466	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x400ce24	    0x890500000000	            mov dword [0x0400ce2a], eax 	      7466	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x400ce2a	     0xfb605000000	           movzx eax, byte [0x0400ce31] 	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400ce31	            0x3c2e	                            cmp al, 0x2e	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400ce33	            0x740b	                            je 0x400ce40	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400ce35	     0xfb605000000	           movzx eax, byte [0x0400ce3c] 	      7470	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400ce3c	            0x3c3e	                            cmp al, 0x3e	      7470	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400ce3e	            0x7577	                           jne 0x400ceb7	      7470	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400ce40	     0xfb605000000	           movzx eax, byte [0x0400ce47] 	      7472	tc-i386.c	FUNCTION_90	IF_1	IF_3	CALL_2
0x400ce47	           0xfb6c0	                           movzx eax, al	      7472	tc-i386.c	FUNCTION_90	IF_1	IF_3	CALL_2
0x400ce4a	            0x89c7	                            mov edi, eax	      7472	tc-i386.c	FUNCTION_90	IF_1	IF_3	CALL_2
0x400ce4c	      0xe800000000	                          call 0x400ce51	      7472	tc-i386.c	FUNCTION_90	IF_1	IF_3	CALL_2
0x400ce51	    0x8b0500000000	            mov eax, dword [0x0400ce57] 	      7473	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400ce57	          0x83e801	                              sub eax, 1	      7473	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400ce5a	    0x890500000000	            mov dword [0x0400ce60], eax 	      7473	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400ce60	            0xeb55	                           jmp 0x400ceb7	      7473	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400ce62	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      7480	tc-i386.c	FUNCTION_90	ELSE_1
0x400ce69	    0x8b0500000000	            mov eax, dword [0x0400ce6f] 	      7481	tc-i386.c	FUNCTION_90	ELSE_1	IF_4
0x400ce6f	          0x83f801	                              cmp eax, 1	      7481	tc-i386.c	FUNCTION_90	ELSE_1	IF_4
0x400ce72	            0x7507	                           jne 0x400ce7b	      7481	tc-i386.c	FUNCTION_90	ELSE_1	IF_4
0x400ce74	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      7482	tc-i386.c	FUNCTION_90	ELSE_1	IF_4
0x400ce7b	     0xfb605000000	           movzx eax, byte [0x0400ce82] 	      7484	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400ce82	            0x84c0	                             test al, al	      7484	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400ce84	            0x741d	                            je 0x400cea3	      7484	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400ce86	      0xbf66000000	                           mov edi, 0x66	      7486	tc-i386.c	FUNCTION_90	ELSE_1	IF_5	CALL_3
0x400ce8b	      0xe800000000	                          call 0x400ce90	      7486	tc-i386.c	FUNCTION_90	ELSE_1	IF_5	CALL_3
0x400ce90	    0x8b0500000000	            mov eax, dword [0x0400ce96] 	      7487	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400ce96	          0x83e801	                              sub eax, 1	      7487	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400ce99	    0x890500000000	            mov dword [0x0400ce9f], eax 	      7487	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400ce9f	        0x8375ec01	               xor dword [rbp - 0x14], 1	      7488	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400cea3	    0xc745e4040000	               mov dword [rbp - 0x1c], 4	      7491	tc-i386.c	FUNCTION_90	ELSE_1
0x400ceaa	        0x837dec00	               cmp dword [rbp - 0x14], 0	      7492	tc-i386.c	FUNCTION_90	ELSE_1	IF_6
0x400ceae	            0x7407	                            je 0x400ceb7	      7492	tc-i386.c	FUNCTION_90	ELSE_1	IF_6
0x400ceb0	    0xc745e4020000	               mov dword [rbp - 0x1c], 2	      7493	tc-i386.c	FUNCTION_90	ELSE_1	IF_6
0x400ceb7	     0xfb605000000	           movzx eax, byte [0x0400cebe] 	      7496	tc-i386.c	FUNCTION_90	IF_7
0x400cebe	            0x84c0	                             test al, al	      7496	tc-i386.c	FUNCTION_90	IF_7
0x400cec0	            0x7420	                            je 0x400cee2	      7496	tc-i386.c	FUNCTION_90	IF_7
0x400cec2	     0xfb605000000	           movzx eax, byte [0x0400cec9] 	      7498	tc-i386.c	FUNCTION_90	IF_7	CALL_4
0x400cec9	           0xfb6c0	                           movzx eax, al	      7498	tc-i386.c	FUNCTION_90	IF_7	CALL_4
0x400cecc	            0x89c7	                            mov edi, eax	      7498	tc-i386.c	FUNCTION_90	IF_7	CALL_4
0x400cece	      0xe800000000	                          call 0x400ced3	      7498	tc-i386.c	FUNCTION_90	IF_7	CALL_4
0x400ced3	    0x8b0500000000	            mov eax, dword [0x0400ced9] 	      7499	tc-i386.c	FUNCTION_90	IF_7
0x400ced9	          0x83e801	                              sub eax, 1	      7499	tc-i386.c	FUNCTION_90	IF_7
0x400cedc	    0x890500000000	            mov dword [0x0400cee2], eax 	      7499	tc-i386.c	FUNCTION_90	IF_7
0x400cee2	     0xfb605000000	           movzx eax, byte [0x0400cee9] 	      7503	tc-i386.c	FUNCTION_90	IF_8
0x400cee9	            0x84c0	                             test al, al	      7503	tc-i386.c	FUNCTION_90	IF_8
0x400ceeb	            0x7420	                            je 0x400cf0d	      7503	tc-i386.c	FUNCTION_90	IF_8
0x400ceed	     0xfb605000000	           movzx eax, byte [0x0400cef4] 	      7505	tc-i386.c	FUNCTION_90	IF_8	CALL_5
0x400cef4	           0xfb6c0	                           movzx eax, al	      7505	tc-i386.c	FUNCTION_90	IF_8	CALL_5
0x400cef7	            0x89c7	                            mov edi, eax	      7505	tc-i386.c	FUNCTION_90	IF_8	CALL_5
0x400cef9	      0xe800000000	                          call 0x400cefe	      7505	tc-i386.c	FUNCTION_90	IF_8	CALL_5
0x400cefe	    0x8b0500000000	            mov eax, dword [0x0400cf04] 	      7506	tc-i386.c	FUNCTION_90	IF_8
0x400cf04	          0x83e801	                              sub eax, 1	      7506	tc-i386.c	FUNCTION_90	IF_8
0x400cf07	    0x890500000000	            mov dword [0x0400cf0d], eax 	      7506	tc-i386.c	FUNCTION_90	IF_8
0x400cf0d	    0x8b0500000000	            mov eax, dword [0x0400cf13] 	      7509	tc-i386.c	FUNCTION_90	IF_9
0x400cf13	            0x85c0	                           test eax, eax	      7509	tc-i386.c	FUNCTION_90	IF_9
0x400cf15	            0x7421	                            je 0x400cf38	      7509	tc-i386.c	FUNCTION_90	IF_9
0x400cf17	    0x8b0500000000	            mov eax, dword [0x0400cf1d] 	      7509	tc-i386.c	FUNCTION_90	IF_9
0x400cf1d	            0x85c0	                           test eax, eax	      7509	tc-i386.c	FUNCTION_90	IF_9
0x400cf1f	            0x7517	                           jne 0x400cf38	      7509	tc-i386.c	FUNCTION_90	IF_9
0x400cf21	      0xbf00000000	                              mov edi, 0	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400cf26	      0xe800000000	                          call 0x400cf2b	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400cf2b	          0x4889c7	                            mov rdi, rax	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400cf2e	      0xb800000000	                              mov eax, 0	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400cf33	      0xe800000000	                          call 0x400cf38	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400cf38	     0xfb605000000	           movzx eax, byte [0x0400cf3f] 	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400cf3f	           0xfb6d0	                           movzx edx, al	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400cf42	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400cf45	             0x1d0	                            add eax, edx	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400cf47	            0x4898	                                    cdqe	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400cf49	          0x4889c7	                            mov rdi, rax	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400cf4c	      0xe800000000	                          call 0x400cf51	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400cf51	        0x488945f0	             mov qword [rbp - 0x10], rax	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400cf55	     0xfb605000000	           movzx eax, byte [0x0400cf5c] 	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf5c	           0xfb6c0	                           movzx eax, al	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf5f	          0x83f801	                              cmp eax, 1	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf62	            0x741c	                            je 0x400cf80	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf64	          0x83f802	                              cmp eax, 2	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf67	            0x7534	                           jne 0x400cf9d	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf69	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf6d	        0x488d5001	                      lea rdx, [rax + 1]	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf71	        0x488955f0	             mov qword [rbp - 0x10], rdx	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf75	    0x8b1500000000	            mov edx, dword [0x0400cf7b] 	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf7b	          0xc1ea08	                              shr edx, 8	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf7e	            0x8810	                      mov byte [rax], dl	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf80	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7519	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf84	        0x488d5001	                      lea rdx, [rax + 1]	      7519	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf88	        0x488955f0	             mov qword [rbp - 0x10], rdx	      7519	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf8c	    0x8b1500000000	            mov edx, dword [0x0400cf92] 	      7519	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf92	            0x8810	                      mov byte [rax], dl	      7519	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf94	              0x90	                                     nop	      7520	tc-i386.c	FUNCTION_90	SWITCH_1
0x400cf95	        0x837de404	               cmp dword [rbp - 0x1c], 4	      7526	tc-i386.c	FUNCTION_90	IF_10
0x400cf99	            0x7539	                           jne 0x400cfd4	      7526	tc-i386.c	FUNCTION_90	IF_10
0x400cf9b	            0xeb14	                           jmp 0x400cfb1	      7526	tc-i386.c	FUNCTION_90	IF_10
0x400cf9d	      0xba00000000	                              mov edx, 0	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x400cfa2	      0xbe621d0000	                         mov esi, 0x1d62	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x400cfa7	      0xbf00000000	                              mov edi, 0	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x400cfac	      0xe800000000	                          call 0x400cfb1	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x400cfb1	        0x837de847	           cmp dword [rbp - 0x18], 0x47 	      7527	tc-i386.c	FUNCTION_90	IF_10
0x400cfb5	            0x751d	                           jne 0x400cfd4	      7527	tc-i386.c	FUNCTION_90	IF_10
0x400cfb7	    0x488b05000000	            mov rax, qword [0x0400cfbe] 	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x400cfbe	          0x488b00	                    mov rax, qword [rax]	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x400cfc1	          0x4889c7	                            mov rdi, rax	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x400cfc4	      0xe8b5fdffff	                   call sym.need_plt32_p	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x400cfc9	            0x85c0	                           test eax, eax	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x400cfcb	            0x7407	                            je 0x400cfd4	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x400cfcd	    0xc745e87e0100	          mov dword [rbp - 0x18], 0x17e 	      7529	tc-i386.c	FUNCTION_90	IF_10
0x400cfd4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400cfd7	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400cfda	            0x89d1	                            mov ecx, edx	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400cfdc	      0xba01000000	                              mov edx, 1	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400cfe1	      0xbe01000000	                              mov esi, 1	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400cfe6	            0x89c7	                            mov edi, eax	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400cfe8	      0xe89d5effff	                          call sym.reloc	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400cfed	          0x8945e8	             mov dword [rbp - 0x18], eax	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400cff0	    0x488b0d000000	            mov rcx, qword [0x0400cff7] 	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400cff7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400cffb	    0x488b15000000	            mov rdx, qword [0x0400d002] 	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d002	        0x4883c27c	                           add rdx, 0x7c	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d006	          0x4829d0	                            sub rax, rdx	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d009	            0x89c7	                            mov edi, eax	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d00b	    0x488b05000000	            mov rax, qword [0x0400d012] 	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d012	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d015	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d018	          0x4189f1	                            mov r9d, esi	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d01b	    0x41b801000000	                              mov r8d, 1	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d021	            0x89fe	                            mov esi, edi	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d023	          0x4889c7	                            mov rdi, rax	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d026	      0xe800000000	                          call 0x400d02b	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d02b	        0x488945f8	                mov qword [rbp - 8], rax	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d02f	        0x837de401	               cmp dword [rbp - 0x1c], 1	      7540	tc-i386.c	FUNCTION_90	IF_11
0x400d033	            0x750c	                           jne 0x400d041	      7540	tc-i386.c	FUNCTION_90	IF_11
0x400d035	        0x488b45f8	                mov rax, qword [rbp - 8]	      7541	tc-i386.c	FUNCTION_90	IF_11
0x400d039	           0xfb610	                   movzx edx, byte [rax]	      7541	tc-i386.c	FUNCTION_90	IF_11
0x400d03c	          0x83ca80	                      or edx, 0xffffff80	      7541	tc-i386.c	FUNCTION_90	IF_11
0x400d03f	            0x8810	                      mov byte [rax], dl	      7541	tc-i386.c	FUNCTION_90	IF_11
0x400d041	              0x90	                                     nop	      7542	tc-i386.c	FUNCTION_90
0x400d042	              0xc9	                                   leave	      7542	tc-i386.c	FUNCTION_90
0x400d043	              0xc3	                                     ret	      7542	tc-i386.c	FUNCTION_90
md_show_usage	CALL,59:FOR,4:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	230
0x401317f	              0x55	                                push rbp	     10956	tc-i386.c	FUNCTION_127
0x4013180	          0x4889e5	                            mov rbp, rsp	     10956	tc-i386.c	FUNCTION_127
0x4013183	        0x4883ec10	                           sub rsp, 0x10	     10956	tc-i386.c	FUNCTION_127
0x4013187	        0x48897df8	                mov qword [rbp - 8], rdi	     10956	tc-i386.c	FUNCTION_127
0x401318b	      0xbf00000000	                              mov edi, 0	     10958	tc-i386.c	FUNCTION_127	CALL_2
0x4013190	      0xe800000000	                          call 0x4013195	     10958	tc-i386.c	FUNCTION_127	CALL_2
0x4013195	          0x4889c2	                            mov rdx, rax	     10958	tc-i386.c	FUNCTION_127	CALL_2
0x4013198	        0x488b45f8	                mov rax, qword [rbp - 8]	     10958	tc-i386.c	FUNCTION_127	CALL_2
0x401319c	          0x4889d6	                            mov rsi, rdx	     10958	tc-i386.c	FUNCTION_127	CALL_2
0x401319f	          0x4889c7	                            mov rdi, rax	     10958	tc-i386.c	FUNCTION_127	CALL_2
0x40131a2	      0xb800000000	                              mov eax, 0	     10958	tc-i386.c	FUNCTION_127	CALL_2
0x40131a7	      0xe800000000	                          call 0x40131ac	     10958	tc-i386.c	FUNCTION_127	CALL_2
0x40131ac	      0xbf00000000	                              mov edi, 0	     10963	tc-i386.c	FUNCTION_127	CALL_4
0x40131b1	      0xe800000000	                          call 0x40131b6	     10963	tc-i386.c	FUNCTION_127	CALL_4
0x40131b6	          0x4889c2	                            mov rdx, rax	     10963	tc-i386.c	FUNCTION_127	CALL_4
0x40131b9	        0x488b45f8	                mov rax, qword [rbp - 8]	     10963	tc-i386.c	FUNCTION_127	CALL_4
0x40131bd	          0x4889d6	                            mov rsi, rdx	     10963	tc-i386.c	FUNCTION_127	CALL_4
0x40131c0	          0x4889c7	                            mov rdi, rax	     10963	tc-i386.c	FUNCTION_127	CALL_4
0x40131c3	      0xb800000000	                              mov eax, 0	     10963	tc-i386.c	FUNCTION_127	CALL_4
0x40131c8	      0xe800000000	                          call 0x40131cd	     10963	tc-i386.c	FUNCTION_127	CALL_4
0x40131cd	      0xbf00000000	                              mov edi, 0	     10967	tc-i386.c	FUNCTION_127	CALL_6
0x40131d2	      0xe800000000	                          call 0x40131d7	     10967	tc-i386.c	FUNCTION_127	CALL_6
0x40131d7	          0x4889c2	                            mov rdx, rax	     10967	tc-i386.c	FUNCTION_127	CALL_6
0x40131da	        0x488b45f8	                mov rax, qword [rbp - 8]	     10967	tc-i386.c	FUNCTION_127	CALL_6
0x40131de	          0x4889d6	                            mov rsi, rdx	     10967	tc-i386.c	FUNCTION_127	CALL_6
0x40131e1	          0x4889c7	                            mov rdi, rax	     10967	tc-i386.c	FUNCTION_127	CALL_6
0x40131e4	      0xb800000000	                              mov eax, 0	     10967	tc-i386.c	FUNCTION_127	CALL_6
0x40131e9	      0xe800000000	                          call 0x40131ee	     10967	tc-i386.c	FUNCTION_127	CALL_6
0x40131ee	      0xbf00000000	                              mov edi, 0	     10972	tc-i386.c	FUNCTION_127
0x40131f3	      0xe800000000	                          call 0x40131f8	     10972	tc-i386.c	FUNCTION_127
0x40131f8	          0x4889c2	                            mov rdx, rax	     10972	tc-i386.c	FUNCTION_127
0x40131fb	        0x488b45f8	                mov rax, qword [rbp - 8]	     10972	tc-i386.c	FUNCTION_127
0x40131ff	          0x4889d6	                            mov rsi, rdx	     10972	tc-i386.c	FUNCTION_127
0x4013202	          0x4889c7	                            mov rdi, rax	     10972	tc-i386.c	FUNCTION_127
0x4013205	      0xb800000000	                              mov eax, 0	     10972	tc-i386.c	FUNCTION_127
0x401320a	      0xe800000000	                          call 0x401320f	     10972	tc-i386.c	FUNCTION_127
0x401320f	      0xbf00000000	                              mov edi, 0	     10979	tc-i386.c	FUNCTION_127
0x4013214	      0xe800000000	                          call 0x4013219	     10979	tc-i386.c	FUNCTION_127
0x4013219	          0x4889c2	                            mov rdx, rax	     10979	tc-i386.c	FUNCTION_127
0x401321c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10979	tc-i386.c	FUNCTION_127
0x4013220	          0x4889d6	                            mov rsi, rdx	     10979	tc-i386.c	FUNCTION_127
0x4013223	          0x4889c7	                            mov rdi, rax	     10979	tc-i386.c	FUNCTION_127
0x4013226	      0xb800000000	                              mov eax, 0	     10979	tc-i386.c	FUNCTION_127
0x401322b	      0xe800000000	                          call 0x4013230	     10979	tc-i386.c	FUNCTION_127
0x4013230	      0xbf00000000	                              mov edi, 0	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_17
0x4013235	      0xe800000000	                          call 0x401323a	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_17
0x401323a	          0x4889c2	                            mov rdx, rax	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_17
0x401323d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_17
0x4013241	          0x4889d6	                            mov rsi, rdx	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_17
0x4013244	          0x4889c7	                            mov rdi, rax	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_17
0x4013247	      0xb800000000	                              mov eax, 0	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_17
0x401324c	      0xe800000000	                          call 0x4013251	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_17
0x4013251	        0x488b45f8	                mov rax, qword [rbp - 8]	     10985	tc-i386.c	FUNCTION_127	CALL_21
0x4013255	      0xba01000000	                              mov edx, 1	     10985	tc-i386.c	FUNCTION_127	CALL_21
0x401325a	      0xbe00000000	                              mov esi, 0	     10985	tc-i386.c	FUNCTION_127	CALL_21
0x401325f	          0x4889c7	                            mov rdi, rax	     10985	tc-i386.c	FUNCTION_127	CALL_21
0x4013262	      0xe810fdffff	                      call sym.show_arch	     10985	tc-i386.c	FUNCTION_127	CALL_21
0x4013267	      0xbf00000000	                              mov edi, 0	     10986	tc-i386.c	FUNCTION_127	CALL_23
0x401326c	      0xe800000000	                          call 0x4013271	     10986	tc-i386.c	FUNCTION_127	CALL_23
0x4013271	          0x4889c2	                            mov rdx, rax	     10986	tc-i386.c	FUNCTION_127	CALL_23
0x4013274	        0x488b45f8	                mov rax, qword [rbp - 8]	     10986	tc-i386.c	FUNCTION_127	CALL_23
0x4013278	          0x4889d6	                            mov rsi, rdx	     10986	tc-i386.c	FUNCTION_127	CALL_23
0x401327b	          0x4889c7	                            mov rdi, rax	     10986	tc-i386.c	FUNCTION_127	CALL_23
0x401327e	      0xb800000000	                              mov eax, 0	     10986	tc-i386.c	FUNCTION_127	CALL_23
0x4013283	      0xe800000000	                          call 0x4013288	     10986	tc-i386.c	FUNCTION_127	CALL_23
0x4013288	        0x488b45f8	                mov rax, qword [rbp - 8]	     10988	tc-i386.c	FUNCTION_127
0x401328c	      0xba00000000	                              mov edx, 0	     10988	tc-i386.c	FUNCTION_127
0x4013291	      0xbe01000000	                              mov esi, 1	     10988	tc-i386.c	FUNCTION_127
0x4013296	          0x4889c7	                            mov rdi, rax	     10988	tc-i386.c	FUNCTION_127
0x4013299	      0xe8d9fcffff	                      call sym.show_arch	     10988	tc-i386.c	FUNCTION_127
0x401329e	      0xbf00000000	                              mov edi, 0	     10989	tc-i386.c	FUNCTION_127
0x40132a3	      0xe800000000	                          call 0x40132a8	     10989	tc-i386.c	FUNCTION_127
0x40132a8	          0x4889c2	                            mov rdx, rax	     10989	tc-i386.c	FUNCTION_127
0x40132ab	        0x488b45f8	                mov rax, qword [rbp - 8]	     10989	tc-i386.c	FUNCTION_127
0x40132af	          0x4889d6	                            mov rsi, rdx	     10989	tc-i386.c	FUNCTION_127
0x40132b2	          0x4889c7	                            mov rdi, rax	     10989	tc-i386.c	FUNCTION_127
0x40132b5	      0xb800000000	                              mov eax, 0	     10989	tc-i386.c	FUNCTION_127
0x40132ba	      0xe800000000	                          call 0x40132bf	     10989	tc-i386.c	FUNCTION_127
0x40132bf	        0x488b45f8	                mov rax, qword [rbp - 8]	     10991	tc-i386.c	FUNCTION_127
0x40132c3	      0xba00000000	                              mov edx, 0	     10991	tc-i386.c	FUNCTION_127
0x40132c8	      0xbe00000000	                              mov esi, 0	     10991	tc-i386.c	FUNCTION_127
0x40132cd	          0x4889c7	                            mov rdi, rax	     10991	tc-i386.c	FUNCTION_127
0x40132d0	      0xe8a2fcffff	                      call sym.show_arch	     10991	tc-i386.c	FUNCTION_127
0x40132d5	      0xbf00000000	                              mov edi, 0	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x40132da	      0xe800000000	                          call 0x40132df	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x40132df	          0x4889c2	                            mov rdx, rax	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x40132e2	        0x488b45f8	                mov rax, qword [rbp - 8]	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x40132e6	          0x4889d6	                            mov rsi, rdx	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x40132e9	          0x4889c7	                            mov rdi, rax	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x40132ec	      0xb800000000	                              mov eax, 0	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x40132f1	      0xe800000000	                          call 0x40132f6	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x40132f6	      0xbf00000000	                              mov edi, 0	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x40132fb	      0xe800000000	                          call 0x4013300	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x4013300	          0x4889c2	                            mov rdx, rax	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x4013303	        0x488b45f8	                mov rax, qword [rbp - 8]	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x4013307	          0x4889d6	                            mov rsi, rdx	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x401330a	          0x4889c7	                            mov rdi, rax	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x401330d	      0xb800000000	                              mov eax, 0	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x4013312	      0xe800000000	                          call 0x4013317	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x4013317	      0xbf00000000	                              mov edi, 0	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x401331c	      0xe800000000	                          call 0x4013321	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x4013321	          0x4889c2	                            mov rdx, rax	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x4013324	        0x488b45f8	                mov rax, qword [rbp - 8]	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x4013328	          0x4889d6	                            mov rsi, rdx	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x401332b	          0x4889c7	                            mov rdi, rax	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x401332e	      0xb800000000	                              mov eax, 0	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x4013333	      0xe800000000	                          call 0x4013338	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x4013338	      0xbf00000000	                              mov edi, 0	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x401333d	      0xe800000000	                          call 0x4013342	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x4013342	          0x4889c2	                            mov rdx, rax	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x4013345	        0x488b45f8	                mov rax, qword [rbp - 8]	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x4013349	          0x4889d6	                            mov rsi, rdx	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x401334c	          0x4889c7	                            mov rdi, rax	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x401334f	      0xb800000000	                              mov eax, 0	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x4013354	      0xe800000000	                          call 0x4013359	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x4013359	      0xbf00000000	                              mov edi, 0	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x401335e	      0xe800000000	                          call 0x4013363	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x4013363	          0x4889c2	                            mov rdx, rax	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x4013366	        0x488b45f8	                mov rax, qword [rbp - 8]	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x401336a	          0x4889d6	                            mov rsi, rdx	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x401336d	          0x4889c7	                            mov rdi, rax	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x4013370	      0xb800000000	                              mov eax, 0	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x4013375	      0xe800000000	                          call 0x401337a	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x401337a	      0xbf00000000	                              mov edi, 0	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_37
0x401337f	      0xe800000000	                          call 0x4013384	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_37
0x4013384	          0x4889c2	                            mov rdx, rax	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_37
0x4013387	        0x488b45f8	                mov rax, qword [rbp - 8]	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_37
0x401338b	          0x4889d6	                            mov rsi, rdx	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_37
0x401338e	          0x4889c7	                            mov rdi, rax	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_37
0x4013391	      0xb800000000	                              mov eax, 0	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_37
0x4013396	      0xe800000000	                          call 0x401339b	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_37
0x401339b	      0xbf00000000	                              mov edi, 0	     11009	tc-i386.c	FUNCTION_127	CALL_43
0x40133a0	      0xe800000000	                          call 0x40133a5	     11009	tc-i386.c	FUNCTION_127	CALL_43
0x40133a5	          0x4889c2	                            mov rdx, rax	     11009	tc-i386.c	FUNCTION_127	CALL_43
0x40133a8	        0x488b45f8	                mov rax, qword [rbp - 8]	     11009	tc-i386.c	FUNCTION_127	CALL_43
0x40133ac	          0x4889d6	                            mov rsi, rdx	     11009	tc-i386.c	FUNCTION_127	CALL_43
0x40133af	          0x4889c7	                            mov rdi, rax	     11009	tc-i386.c	FUNCTION_127	CALL_43
0x40133b2	      0xb800000000	                              mov eax, 0	     11009	tc-i386.c	FUNCTION_127	CALL_43
0x40133b7	      0xe800000000	                          call 0x40133bc	     11009	tc-i386.c	FUNCTION_127	CALL_43
0x40133bc	      0xbf00000000	                              mov edi, 0	     11013	tc-i386.c	FUNCTION_127	CALL_49
0x40133c1	      0xe800000000	                          call 0x40133c6	     11013	tc-i386.c	FUNCTION_127	CALL_49
0x40133c6	          0x4889c2	                            mov rdx, rax	     11013	tc-i386.c	FUNCTION_127	CALL_49
0x40133c9	        0x488b45f8	                mov rax, qword [rbp - 8]	     11013	tc-i386.c	FUNCTION_127	CALL_49
0x40133cd	          0x4889d6	                            mov rsi, rdx	     11013	tc-i386.c	FUNCTION_127	CALL_49
0x40133d0	          0x4889c7	                            mov rdi, rax	     11013	tc-i386.c	FUNCTION_127	CALL_49
0x40133d3	      0xb800000000	                              mov eax, 0	     11013	tc-i386.c	FUNCTION_127	CALL_49
0x40133d8	      0xe800000000	                          call 0x40133dd	     11013	tc-i386.c	FUNCTION_127	CALL_49
0x40133dd	      0xbf00000000	                              mov edi, 0	     11015	tc-i386.c	FUNCTION_127	CALL_51
0x40133e2	      0xe800000000	                          call 0x40133e7	     11015	tc-i386.c	FUNCTION_127	CALL_51
0x40133e7	          0x4889c2	                            mov rdx, rax	     11015	tc-i386.c	FUNCTION_127	CALL_51
0x40133ea	        0x488b45f8	                mov rax, qword [rbp - 8]	     11015	tc-i386.c	FUNCTION_127	CALL_51
0x40133ee	          0x4889d6	                            mov rsi, rdx	     11015	tc-i386.c	FUNCTION_127	CALL_51
0x40133f1	          0x4889c7	                            mov rdi, rax	     11015	tc-i386.c	FUNCTION_127	CALL_51
0x40133f4	      0xb800000000	                              mov eax, 0	     11015	tc-i386.c	FUNCTION_127	CALL_51
0x40133f9	      0xe800000000	                          call 0x40133fe	     11015	tc-i386.c	FUNCTION_127	CALL_51
0x40133fe	      0xbf00000000	                              mov edi, 0	     11017	tc-i386.c	FUNCTION_127
0x4013403	      0xe800000000	                          call 0x4013408	     11017	tc-i386.c	FUNCTION_127
0x4013408	          0x4889c2	                            mov rdx, rax	     11017	tc-i386.c	FUNCTION_127
0x401340b	        0x488b45f8	                mov rax, qword [rbp - 8]	     11017	tc-i386.c	FUNCTION_127
0x401340f	          0x4889d6	                            mov rsi, rdx	     11017	tc-i386.c	FUNCTION_127
0x4013412	          0x4889c7	                            mov rdi, rax	     11017	tc-i386.c	FUNCTION_127
0x4013415	      0xb800000000	                              mov eax, 0	     11017	tc-i386.c	FUNCTION_127
0x401341a	      0xe800000000	                          call 0x401341f	     11017	tc-i386.c	FUNCTION_127
0x401341f	      0xbf00000000	                              mov edi, 0	     11019	tc-i386.c	FUNCTION_127
0x4013424	      0xe800000000	                          call 0x4013429	     11019	tc-i386.c	FUNCTION_127
0x4013429	          0x4889c2	                            mov rdx, rax	     11019	tc-i386.c	FUNCTION_127
0x401342c	        0x488b45f8	                mov rax, qword [rbp - 8]	     11019	tc-i386.c	FUNCTION_127
0x4013430	          0x4889d6	                            mov rsi, rdx	     11019	tc-i386.c	FUNCTION_127
0x4013433	          0x4889c7	                            mov rdi, rax	     11019	tc-i386.c	FUNCTION_127
0x4013436	      0xb800000000	                              mov eax, 0	     11019	tc-i386.c	FUNCTION_127
0x401343b	      0xe800000000	                          call 0x4013440	     11019	tc-i386.c	FUNCTION_127
0x4013440	      0xbf00000000	                              mov edi, 0	     11021	tc-i386.c	FUNCTION_127
0x4013445	      0xe800000000	                          call 0x401344a	     11021	tc-i386.c	FUNCTION_127
0x401344a	          0x4889c2	                            mov rdx, rax	     11021	tc-i386.c	FUNCTION_127
0x401344d	        0x488b45f8	                mov rax, qword [rbp - 8]	     11021	tc-i386.c	FUNCTION_127
0x4013451	          0x4889d6	                            mov rsi, rdx	     11021	tc-i386.c	FUNCTION_127
0x4013454	          0x4889c7	                            mov rdi, rax	     11021	tc-i386.c	FUNCTION_127
0x4013457	      0xb800000000	                              mov eax, 0	     11021	tc-i386.c	FUNCTION_127
0x401345c	      0xe800000000	                          call 0x4013461	     11021	tc-i386.c	FUNCTION_127
0x4013461	      0xbf00000000	                              mov edi, 0	     11023	tc-i386.c	FUNCTION_127
0x4013466	      0xe800000000	                          call 0x401346b	     11023	tc-i386.c	FUNCTION_127
0x401346b	          0x4889c2	                            mov rdx, rax	     11023	tc-i386.c	FUNCTION_127
0x401346e	        0x488b45f8	                mov rax, qword [rbp - 8]	     11023	tc-i386.c	FUNCTION_127
0x4013472	          0x4889d6	                            mov rsi, rdx	     11023	tc-i386.c	FUNCTION_127
0x4013475	          0x4889c7	                            mov rdi, rax	     11023	tc-i386.c	FUNCTION_127
0x4013478	      0xb800000000	                              mov eax, 0	     11023	tc-i386.c	FUNCTION_127
0x401347d	      0xe800000000	                          call 0x4013482	     11023	tc-i386.c	FUNCTION_127
0x4013482	      0xbf00000000	                              mov edi, 0	     11029	tc-i386.c	
0x4013487	      0xe800000000	                          call 0x401348c	     11029	tc-i386.c	
0x401348c	          0x4889c2	                            mov rdx, rax	     11029	tc-i386.c	
0x401348f	        0x488b45f8	                mov rax, qword [rbp - 8]	     11029	tc-i386.c	
0x4013493	          0x4889d6	                            mov rsi, rdx	     11029	tc-i386.c	
0x4013496	          0x4889c7	                            mov rdi, rax	     11029	tc-i386.c	
0x4013499	      0xb800000000	                              mov eax, 0	     11029	tc-i386.c	
0x401349e	      0xe800000000	                          call 0x40134a3	     11029	tc-i386.c	
0x40134a3	      0xbf00000000	                              mov edi, 0	     11032	tc-i386.c	
0x40134a8	      0xe800000000	                          call 0x40134ad	     11032	tc-i386.c	
0x40134ad	          0x4889c2	                            mov rdx, rax	     11032	tc-i386.c	
0x40134b0	        0x488b45f8	                mov rax, qword [rbp - 8]	     11032	tc-i386.c	
0x40134b4	          0x4889d6	                            mov rsi, rdx	     11032	tc-i386.c	
0x40134b7	          0x4889c7	                            mov rdi, rax	     11032	tc-i386.c	
0x40134ba	      0xb800000000	                              mov eax, 0	     11032	tc-i386.c	
0x40134bf	      0xe800000000	                          call 0x40134c4	     11032	tc-i386.c	
0x40134c4	      0xbf00000000	                              mov edi, 0	     11036	tc-i386.c	
0x40134c9	      0xe800000000	                          call 0x40134ce	     11036	tc-i386.c	
0x40134ce	          0x4889c2	                            mov rdx, rax	     11036	tc-i386.c	
0x40134d1	        0x488b45f8	                mov rax, qword [rbp - 8]	     11036	tc-i386.c	
0x40134d5	          0x4889d6	                            mov rsi, rdx	     11036	tc-i386.c	
0x40134d8	          0x4889c7	                            mov rdi, rax	     11036	tc-i386.c	
0x40134db	      0xb800000000	                              mov eax, 0	     11036	tc-i386.c	
0x40134e0	      0xe800000000	                          call 0x40134e5	     11036	tc-i386.c	
0x40134e5	      0xbf00000000	                              mov edi, 0	     11039	tc-i386.c	FUNCTION_128	IF_1
0x40134ea	      0xe800000000	                          call 0x40134ef	     11039	tc-i386.c	FUNCTION_128	IF_1
0x40134ef	          0x4889c2	                            mov rdx, rax	     11039	tc-i386.c	FUNCTION_128	IF_1
0x40134f2	        0x488b45f8	                mov rax, qword [rbp - 8]	     11039	tc-i386.c	FUNCTION_128	IF_1
0x40134f6	          0x4889d6	                            mov rsi, rdx	     11039	tc-i386.c	FUNCTION_128	IF_1
0x40134f9	          0x4889c7	                            mov rdi, rax	     11039	tc-i386.c	FUNCTION_128	IF_1
0x40134fc	      0xb800000000	                              mov eax, 0	     11039	tc-i386.c	FUNCTION_128	IF_1
0x4013501	      0xe800000000	                          call 0x4013506	     11039	tc-i386.c	FUNCTION_128	IF_1
0x4013506	      0xbf00000000	                              mov edi, 0	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x401350b	      0xe800000000	                          call 0x4013510	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x4013510	          0x4889c2	                            mov rdx, rax	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x4013513	        0x488b45f8	                mov rax, qword [rbp - 8]	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x4013517	          0x4889d6	                            mov rsi, rdx	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x401351a	          0x4889c7	                            mov rdi, rax	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x401351d	      0xb800000000	                              mov eax, 0	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x4013522	      0xe800000000	                          call 0x4013527	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x4013527	              0x90	                                     nop	     11043	tc-i386.c	FUNCTION_128	IF_1	ELSE_1
0x4013528	              0xc9	                                   leave	     11043	tc-i386.c	FUNCTION_128	IF_1	ELSE_1
0x4013529	              0xc3	                                     ret	     11043	tc-i386.c	FUNCTION_128	IF_1	ELSE_1
parse_insn	CALL,39:FOR,1:WHILE,2:functions,0:SWITCH,3:IF,32:ELSE,12:DO,0	583
0x4005547	              0x55	                                push rbp	      4279	tc-i386.c	FUNCTION_69
0x4005548	          0x4889e5	                            mov rbp, rsp	      4279	tc-i386.c	FUNCTION_69
0x400554b	            0x4155	                                push r13	      4279	tc-i386.c	FUNCTION_69
0x400554d	            0x4154	                                push r12	      4279	tc-i386.c	FUNCTION_69
0x400554f	              0x53	                                push rbx	      4279	tc-i386.c	FUNCTION_69
0x4005550	        0x4883ec48	                           sub rsp, 0x48	      4279	tc-i386.c	FUNCTION_69
0x4005554	        0x48897da8	             mov qword [rbp - 0x58], rdi	      4279	tc-i386.c	FUNCTION_69
0x4005558	        0x488975a0	             mov qword [rbp - 0x60], rsi	      4279	tc-i386.c	FUNCTION_69
0x400555c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4280	tc-i386.c	FUNCTION_69
0x4005560	        0x488945b8	             mov qword [rbp - 0x48], rax	      4280	tc-i386.c	FUNCTION_69
0x4005564	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4281	tc-i386.c	FUNCTION_69
0x4005568	        0x488945c0	             mov qword [rbp - 0x40], rax	      4281	tc-i386.c	FUNCTION_69
0x400556c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      4285	tc-i386.c	FUNCTION_69
0x4005574	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4289	tc-i386.c	FUNCTION_69	WHILE_1
0x4005578	        0x488945c8	             mov qword [rbp - 0x38], rax	      4289	tc-i386.c	FUNCTION_69	WHILE_1
0x400557c	            0xeb56	                           jmp 0x40055d4	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x400557e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4292	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_1
0x4005582	           0xfb600	                   movzx eax, byte [rax]	      4292	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_1
0x4005585	            0x3c2e	                            cmp al, 0x2e	      4292	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_1
0x4005587	            0x7508	                           jne 0x4005591	      4292	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_1
0x4005589	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4293	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_1
0x400558d	        0x488945d8	             mov qword [rbp - 0x28], rax	      4293	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_1
0x4005591	      0x488345c801	               add qword [rbp - 0x38], 1	      4294	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005596	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4295	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x400559a	        0x4883c014	                           add rax, 0x14	      4295	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x400559e	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      4295	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x40055a2	            0x772b	                            ja 0x40055cf	      4295	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x40055a4	      0xbf00000000	                              mov edi, 0	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x40055a9	      0xe800000000	                          call 0x40055ae	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x40055ae	          0x4889c2	                            mov rdx, rax	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x40055b1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x40055b5	          0x4889c6	                            mov rsi, rax	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x40055b8	          0x4889d7	                            mov rdi, rdx	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x40055bb	      0xb800000000	                              mov eax, 0	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x40055c0	      0xe800000000	                          call 0x40055c5	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x40055c5	      0xb800000000	                              mov eax, 0	      4298	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x40055ca	      0xe96c080000	                           jmp 0x4005e3b	      4298	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x40055cf	      0x488345b801	               add qword [rbp - 0x48], 1	      4300	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055d4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055d8	           0xfb600	                   movzx eax, byte [rax]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055db	           0xfb6c0	                           movzx eax, al	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055de	            0x4898	                                    cdqe	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055e0	     0xfb690000000	                   movzx edx, byte [rax]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055e7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055eb	            0x8810	                      mov byte [rax], dl	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055f1	           0xfb600	                   movzx eax, byte [rax]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055f4	            0x84c0	                             test al, al	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055f6	            0x7586	                           jne 0x400557e	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40055f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40055fc	           0xfb600	                   movzx eax, byte [rax]	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40055ff	            0x3c20	                            cmp al, 0x20	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005601	            0x7463	                            je 0x4005666	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005603	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4303	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005607	           0xfb600	                   movzx eax, byte [rax]	      4303	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x400560a	            0x84c0	                             test al, al	      4303	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x400560c	            0x7458	                            je 0x4005666	      4303	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x400560e	    0x8b0500000000	            mov eax, dword [0x04005614] 	      4304	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005614	            0x85c0	                           test eax, eax	      4304	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005616	            0x7516	                           jne 0x400562e	      4304	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005618	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x400561c	           0xfb600	                   movzx eax, byte [rax]	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x400561f	            0x3c2f	                            cmp al, 0x2f	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005621	            0x7443	                            je 0x4005666	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005623	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4306	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005627	           0xfb600	                   movzx eax, byte [rax]	      4306	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x400562a	            0x3c2c	                            cmp al, 0x2c	      4306	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x400562c	            0x7438	                            je 0x4005666	      4306	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x400562e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4309	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_5
0x4005632	           0xfb600	                   movzx eax, byte [rax]	      4309	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_5
0x4005635	           0xfbec0	                           movsx eax, al	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005638	            0x89c7	                            mov edi, eax	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x400563a	      0xe84bc10000	                 call sym.output_invalid	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x400563f	          0x4889c3	                            mov rbx, rax	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005642	      0xbf00000000	                              mov edi, 0	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005647	      0xe800000000	                          call 0x400564c	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x400564c	          0x4889de	                            mov rsi, rbx	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x400564f	          0x4889c7	                            mov rdi, rax	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005652	      0xb800000000	                              mov eax, 0	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005657	      0xe800000000	                          call 0x400565c	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x400565c	      0xb800000000	                              mov eax, 0	      4310	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005661	      0xe9d5070000	                           jmp 0x4005e3b	      4310	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005666	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4312	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x400566a	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      4312	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x400566e	            0x754f	                           jne 0x40056bf	      4312	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x4005670	    0x8b0500000000	            mov eax, dword [0x04005676] 	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x4005676	            0x85c0	                           test eax, eax	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x4005678	            0x7524	                           jne 0x400569e	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x400567a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x400567e	           0xfb600	                   movzx eax, byte [rax]	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x4005681	            0x3c2f	                            cmp al, 0x2f	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x4005683	            0x7519	                           jne 0x400569e	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x4005685	      0xbf00000000	                              mov edi, 0	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x400568a	      0xe800000000	                          call 0x400568f	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x400568f	          0x4889c7	                            mov rdi, rax	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x4005692	      0xb800000000	                              mov eax, 0	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x4005697	      0xe800000000	                          call 0x400569c	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x400569c	            0xeb17	                           jmp 0x40056b5	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x400569e	      0xbf00000000	                              mov edi, 0	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x40056a3	      0xe800000000	                          call 0x40056a8	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x40056a8	          0x4889c7	                            mov rdi, rax	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x40056ab	      0xb800000000	                              mov eax, 0	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x40056b0	      0xe800000000	                          call 0x40056b5	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x40056b5	      0xb800000000	                              mov eax, 0	      4318	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x40056ba	      0xe97c070000	                           jmp 0x4005e3b	      4318	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x40056bf	    0x488b05000000	            mov rax, qword [0x040056c6] 	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x40056c6	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x40056ca	          0x4889d6	                            mov rsi, rdx	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x40056cd	          0x4889c7	                            mov rdi, rax	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x40056d0	      0xe800000000	                          call 0x40056d5	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x40056d5	    0x488905000000	            mov qword [0x040056dc], rax 	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x40056dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4324	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40056e0	           0xfb600	                   movzx eax, byte [rax]	      4324	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40056e3	            0x84c0	                             test al, al	      4324	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40056e5	     0xf84f2020000	                            je 0x40059dd	      4324	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40056eb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40056ef	           0xfb600	                   movzx eax, byte [rax]	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40056f2	            0x3c20	                            cmp al, 0x20	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40056f4	            0x7513	                           jne 0x4005709	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40056f6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40056fa	        0x4883c001	                              add rax, 1	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40056fe	           0xfb600	                   movzx eax, byte [rax]	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005701	            0x84c0	                             test al, al	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005703	     0xf84d4020000	                            je 0x40059dd	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005709	    0x488b05000000	            mov rax, qword [0x04005710] 	      4326	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005710	          0x4885c0	                           test rax, rax	      4326	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005713	     0xf84c4020000	                            je 0x40059dd	      4326	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005719	    0x488b05000000	            mov rax, qword [0x04005720] 	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005720	          0x488b00	                    mov rax, qword [rax]	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005723	         0xfb6402c	           movzx eax, byte [rax + 0x2c] 	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005727	          0x83e010	                           and eax, 0x10	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x400572a	            0x84c0	                             test al, al	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x400572c	     0xf84ab020000	                            je 0x40059dd	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005732	    0x488b05000000	            mov rax, qword [0x04005739] 	      4329	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_11
0x4005739	          0x488b00	                    mov rax, qword [rax]	      4329	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_11
0x400573c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4329	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_11
0x4005740	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4329	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_11
0x4005744	          0x4889d7	                            mov rdi, rdx	      4329	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_11
0x4005747	          0x4889c6	                            mov rsi, rax	      4329	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_11
0x400574a	      0xe8caaeffff	          call sym.cpu_flags_check_cpu64	      4329	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_11
0x400574f	            0x85c0	                           test eax, eax	      4329	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_11
0x4005751	            0x7548	                           jne 0x400579b	      4329	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_11
0x4005753	    0x488b05000000	            mov rax, qword [0x0400575a] 	      4334	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7
0x400575a	          0x488b00	                    mov rax, qword [rax]	      4334	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7
0x400575d	          0x488b18	                    mov rbx, qword [rax]	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005760	    0x8b0500000000	            mov eax, dword [0x04005766] 	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005766	          0x83f802	                              cmp eax, 2	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005769	            0x740c	                            je 0x4005777	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x400576b	      0xbf00000000	                              mov edi, 0	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005770	      0xe800000000	                          call 0x4005775	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005775	            0xeb0a	                           jmp 0x4005781	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005777	      0xbf00000000	                              mov edi, 0	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x400577c	      0xe800000000	                          call 0x4005781	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005781	          0x4889de	                            mov rsi, rbx	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005784	          0x4889c7	                            mov rdi, rax	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005787	      0xb800000000	                              mov eax, 0	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x400578c	      0xe800000000	                          call 0x4005791	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005791	      0xb800000000	                              mov eax, 0	      4335	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7
0x4005796	      0xe9a0060000	                           jmp 0x4005e3b	      4335	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7
0x400579b	    0x488b05000000	            mov rax, qword [0x040057a2] 	      4339	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057a2	          0x488b00	                    mov rax, qword [rax]	      4339	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057a5	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      4339	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057a9	          0x83e008	                              and eax, 8	      4339	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057ac	            0x84c0	                             test al, al	      4339	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057ae	            0x7515	                           jne 0x40057c5	      4339	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057b0	    0x488b05000000	            mov rax, qword [0x040057b7] 	      4340	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057b7	          0x488b00	                    mov rax, qword [rax]	      4340	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057ba	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      4340	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057be	          0x83e010	                           and eax, 0x10	      4340	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057c1	            0x84c0	                             test al, al	      4340	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057c3	            0x7466	                            je 0x400582b	      4340	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057c5	    0x8b0500000000	            mov eax, dword [0x040057cb] 	      4341	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057cb	          0x83f802	                              cmp eax, 2	      4341	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057ce	            0x745b	                            je 0x400582b	      4341	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057d0	    0x488b05000000	            mov rax, qword [0x040057d7] 	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057d7	          0x488b00	                    mov rax, qword [rax]	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057da	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057de	          0xc0e804	                               shr al, 4	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057e1	          0x83e001	                              and eax, 1	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057e4	           0xfb6d0	                           movzx edx, al	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057e7	    0x8b0500000000	            mov eax, dword [0x040057ed] 	      4343	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057ed	          0x83f801	                              cmp eax, 1	      4343	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057f0	           0xf94c0	                                 sete al	      4343	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057f3	           0xfb6c0	                           movzx eax, al	      4343	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057f6	            0x39c2	                            cmp edx, eax	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057f8	            0x7431	                            je 0x400582b	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x40057fa	    0x488b05000000	            mov rax, qword [0x04005801] 	      4346	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005801	          0x488b00	                    mov rax, qword [rax]	      4346	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005804	          0x488b18	                    mov rbx, qword [rax]	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005807	      0xbf00000000	                              mov edi, 0	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x400580c	      0xe800000000	                          call 0x4005811	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005811	          0x4889de	                            mov rsi, rbx	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005814	          0x4889c7	                            mov rdi, rax	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005817	      0xb800000000	                              mov eax, 0	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x400581c	      0xe800000000	                          call 0x4005821	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005821	      0xb800000000	                              mov eax, 0	      4347	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005826	      0xe910060000	                           jmp 0x4005e3b	      4347	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x400582b	    0x488b05000000	            mov rax, qword [0x04005832] 	      4349	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9
0x4005832	          0x488b00	                    mov rax, qword [rax]	      4349	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9
0x4005835	         0xfb64014	           movzx eax, byte [rax + 0x14] 	      4349	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9
0x4005839	            0x84c0	                             test al, al	      4349	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9
0x400583b	     0xf85bd000000	                           jne 0x40058fe	      4349	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9
0x4005841	    0x488b05000000	            mov rax, qword [0x04005848] 	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005848	          0x488b00	                    mov rax, qword [rax]	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400584b	          0x8b400c	              mov eax, dword [rax + 0xc]	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400584e	          0x83f808	                              cmp eax, 8	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005851	     0xf8793000000	                            ja 0x40058ea	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005857	            0x89c0	                            mov eax, eax	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005859	    0x488b04c50000	                  mov rax, qword [rax*8]	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005861	            0xffe0	                                 jmp rax	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005863	    0xc70500000000	               mov dword [0x0400586d], 1	      4356	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400586d	      0xe959010000	                           jmp 0x40059cb	      4357	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005872	    0xc70500000000	               mov dword [0x0400587c], 2	      4360	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400587c	      0xe94a010000	                           jmp 0x40059cb	      4361	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005881	    0xc70500000000	               mov dword [0x0400588b], 1	      4364	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400588b	      0xe93b010000	                           jmp 0x40059cb	      4365	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005890	    0xc70500000000	               mov dword [0x0400589a], 2	      4368	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400589a	      0xe92c010000	                           jmp 0x40059cb	      4369	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400589f	    0xc70500000000	               mov dword [0x040058a9], 1	      4372	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40058a9	      0xe91d010000	                           jmp 0x40059cb	      4373	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40058ae	    0xc70500000000	               mov dword [0x040058b8], 2	      4376	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40058b8	      0xe90e010000	                           jmp 0x40059cb	      4377	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40058bd	    0xc70500000000	               mov dword [0x040058c7], 3	      4380	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40058c7	      0xe9ff000000	                           jmp 0x40059cb	      4381	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40058cc	    0xc70500000000	               mov dword [0x040058d6], 1	      4384	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40058d6	      0xe9f0000000	                           jmp 0x40059cb	      4385	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40058db	    0xc70500000000	               mov dword [0x040058e5], 1	      4388	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40058e5	      0xe9e1000000	                           jmp 0x40059cb	      4389	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40058ea	      0xba00000000	                              mov edx, 0	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x40058ef	      0xbe27110000	                         mov esi, 0x1127	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x40058f4	      0xbf00000000	                              mov edi, 0	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x40058f9	      0xe800000000	                          call 0x40058fe	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x40058fe	    0x488b05000000	            mov rax, qword [0x04005905] 	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005905	          0x488b00	                    mov rax, qword [rax]	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005908	          0x8b400c	              mov eax, dword [rax + 0xc]	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400590b	            0x89c7	                            mov edi, eax	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400590d	      0xe8cfc1ffff	                     call sym.add_prefix	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005912	          0x83f802	                              cmp eax, 2	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005915	            0x7447	                            je 0x400595e	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005917	          0x83f803	                              cmp eax, 3	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400591a	            0x7413	                            je 0x400592f	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400591c	            0x85c0	                           test eax, eax	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400591e	            0x7405	                            je 0x4005925	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005920	      0xe9a6000000	                           jmp 0x40059cb	      4414	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x4005925	      0xb800000000	                              mov eax, 0	      4400	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2
0x400592a	      0xe90c050000	                           jmp 0x4005e3b	      4400	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2
0x400592f	    0x488b05000000	            mov rax, qword [0x04005936] 	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4005936	          0x488b00	                    mov rax, qword [rax]	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4005939	         0xfb64023	           movzx eax, byte [rax + 0x23] 	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x400593d	          0x83e008	                              and eax, 8	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4005940	            0x84c0	                             test al, al	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4005942	     0xf8482000000	                            je 0x40059ca	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4005948	    0x488b05000000	            mov rax, qword [0x0400594f] 	      4403	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x400594f	          0x488b00	                    mov rax, qword [rax]	      4403	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4005952	          0x488b00	                    mov rax, qword [rax]	      4403	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4005955	    0x488905000000	            mov qword [0x0400595c], rax 	      4403	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x400595c	            0xeb6c	                           jmp 0x40059ca	      4404	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2
0x400595e	    0x488b05000000	            mov rax, qword [0x04005965] 	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4005965	          0x488b00	                    mov rax, qword [rax]	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4005968	         0xfb6401f	           movzx eax, byte [rax + 0x1f] 	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x400596c	          0x83e010	                           and eax, 0x10	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x400596f	            0x84c0	                             test al, al	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4005971	            0x7416	                            je 0x4005989	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4005973	    0x488b05000000	            mov rax, qword [0x0400597a] 	      4407	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x400597a	          0x488b00	                    mov rax, qword [rax]	      4407	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x400597d	          0x488b00	                    mov rax, qword [rax]	      4407	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4005980	    0x488905000000	            mov qword [0x04005987], rax 	      4407	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4005987	            0xeb42	                           jmp 0x40059cb	      4412	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x4005989	    0x488b05000000	            mov rax, qword [0x04005990] 	      4408	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x4005990	          0x488b00	                    mov rax, qword [rax]	      4408	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x4005993	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      4408	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x4005997	          0x83e001	                              and eax, 1	      4408	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x400599a	            0x84c0	                             test al, al	      4408	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x400599c	            0x7416	                            je 0x40059b4	      4408	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x400599e	    0x488b05000000	            mov rax, qword [0x040059a5] 	      4409	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x40059a5	          0x488b00	                    mov rax, qword [rax]	      4409	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x40059a8	          0x488b00	                    mov rax, qword [rax]	      4409	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x40059ab	    0x488905000000	            mov qword [0x040059b2], rax 	      4409	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x40059b2	            0xeb17	                           jmp 0x40059cb	      4412	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x40059b4	    0x488b05000000	            mov rax, qword [0x040059bb] 	      4411	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x40059bb	          0x488b00	                    mov rax, qword [rax]	      4411	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x40059be	          0x488b00	                    mov rax, qword [rax]	      4411	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x40059c1	    0x488905000000	            mov qword [0x040059c8], rax 	      4411	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x40059c8	            0xeb01	                           jmp 0x40059cb	      4412	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x40059ca	              0x90	                                     nop	      4404	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2
0x40059cb	      0x488345b801	               add qword [rbp - 0x48], 1	      4418	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_4
0x40059d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4418	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_4
0x40059d4	        0x488945c0	             mov qword [rbp - 0x40], rax	      4418	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_4
0x40059d8	      0xe997fbffff	                           jmp 0x4005574	      4422	tc-i386.c	FUNCTION_69	WHILE_1	ELSE_4	ELSE_5
0x40059dd	    0x488b05000000	            mov rax, qword [0x040059e4] 	      4424	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x40059e4	          0x4885c0	                           test rax, rax	      4424	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x40059e7	     0xf85d2000000	                           jne 0x4005abf	      4424	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x40059ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40059f1	        0x4883e802	                              sub rax, 2	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40059f5	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40059f9	            0x751b	                           jne 0x4005a16	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40059fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40059ff	        0x4883c001	                              add rax, 1	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x4005a03	           0xfb600	                   movzx eax, byte [rax]	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x4005a06	            0x3c73	                            cmp al, 0x73	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x4005a08	            0x750c	                           jne 0x4005a16	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x4005a0a	    0xc70500000000	               mov dword [0x04005a14], 2	      4429	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x4005a14	            0xeb7d	                           jmp 0x4005a93	      4429	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x4005a16	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4430	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a1a	        0x4883e803	                              sub rax, 3	      4430	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a1e	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4430	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a22	            0x752a	                           jne 0x4005a4e	      4430	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a24	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4431	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a28	        0x4883c001	                              add rax, 1	      4431	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a2c	           0xfb600	                   movzx eax, byte [rax]	      4431	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a2f	            0x3c64	                            cmp al, 0x64	      4431	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a31	            0x751b	                           jne 0x4005a4e	      4431	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a33	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4432	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a37	        0x4883c002	                              add rax, 2	      4432	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a3b	           0xfb600	                   movzx eax, byte [rax]	      4432	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a3e	            0x3c38	                            cmp al, 0x38	      4432	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a40	            0x750c	                           jne 0x4005a4e	      4432	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a42	    0xc70500000000	               mov dword [0x04005a4c], 1	      4433	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a4c	            0xeb45	                           jmp 0x4005a93	      4433	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4005a4e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a52	        0x4883e804	                              sub rax, 4	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a56	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a5a	            0x7573	                           jne 0x4005acf	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a5c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4435	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a60	        0x4883c001	                              add rax, 1	      4435	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a64	           0xfb600	                   movzx eax, byte [rax]	      4435	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a67	            0x3c64	                            cmp al, 0x64	      4435	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a69	            0x7564	                           jne 0x4005acf	      4435	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4436	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a6f	        0x4883c002	                              add rax, 2	      4436	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a73	           0xfb600	                   movzx eax, byte [rax]	      4436	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a76	            0x3c33	                            cmp al, 0x33	      4436	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a78	            0x7555	                           jne 0x4005acf	      4436	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4437	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a7e	        0x4883c003	                              add rax, 3	      4437	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a82	           0xfb600	                   movzx eax, byte [rax]	      4437	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a85	            0x3c32	                            cmp al, 0x32	      4437	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a87	            0x7546	                           jne 0x4005acf	      4437	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a89	    0xc70500000000	               mov dword [0x04005a93], 2	      4438	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005a93	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4441	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x4005a97	        0x488945c8	             mov qword [rbp - 0x38], rax	      4441	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x4005a9b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4442	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x4005a9f	          0xc60000	                       mov byte [rax], 0	      4442	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x4005aa2	    0x488b05000000	            mov rax, qword [0x04005aa9] 	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4005aa9	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4005aad	          0x4889d6	                            mov rsi, rdx	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4005ab0	          0x4889c7	                            mov rdi, rax	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4005ab3	      0xe800000000	                          call 0x4005ab8	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4005ab8	    0x488905000000	            mov qword [0x04005abf], rax 	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4005abf	    0x488b05000000	            mov rax, qword [0x04005ac6] 	      4446	tc-i386.c	FUNCTION_69	IF_17
0x4005ac6	          0x4885c0	                           test rax, rax	      4446	tc-i386.c	FUNCTION_69	IF_17
0x4005ac9	     0xf855d010000	                           jne 0x4005c2c	      4446	tc-i386.c	FUNCTION_69	IF_17
0x4005acf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005ad3	        0x4883e801	                              sub rax, 1	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005ad7	           0xfb600	                   movzx eax, byte [rax]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005ada	           0xfbec0	                           movsx eax, al	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005add	          0x83e862	                           sub eax, 0x62	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005ae0	          0x83f815	                           cmp eax, 0x15	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005ae3	     0xf870c010000	                            ja 0x4005bf5	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005ae9	            0x89c0	                            mov eax, eax	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005aeb	    0x488b04c50000	                  mov rax, qword [rax*8]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005af3	            0xffe0	                                 jmp rax	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005af5	    0x8b0500000000	            mov eax, dword [0x04005afb] 	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005afb	            0x85c0	                           test eax, eax	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005afd	            0x741c	                            je 0x4005b1b	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005aff	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005b03	          0x4889c7	                            mov rdi, rax	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005b06	      0xe832d9ffff	            call sym.intel_float_operand	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005b0b	          0x83e002	                              and eax, 2	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005b0e	            0x85c0	                           test eax, eax	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005b10	            0x7409	                            je 0x4005b1b	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005b12	    0xc60500000000	            mov byte [0x04005b19], 0x73 	      4454	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18
0x4005b19	            0xeb0e	                           jmp 0x4005b29	      4454	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18
0x4005b1b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4459	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	ELSE_9
0x4005b1f	         0xfb640ff	               movzx eax, byte [rax - 1]	      4459	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	ELSE_9
0x4005b23	    0x880500000000	               mov byte [0x04005b29], al	      4459	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	ELSE_9
0x4005b29	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4460	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005b2d	        0x4883e801	                              sub rax, 1	      4460	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005b31	          0xc60000	                       mov byte [rax], 0	      4460	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005b34	    0x488b05000000	            mov rax, qword [0x04005b3b] 	      4461	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	CALL_21
0x4005b3b	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4461	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	CALL_21
0x4005b3f	          0x4889d6	                            mov rsi, rdx	      4461	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	CALL_21
0x4005b42	          0x4889c7	                            mov rdi, rax	      4461	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	CALL_21
0x4005b45	      0xe800000000	                          call 0x4005b4a	      4461	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	CALL_21
0x4005b4a	    0x488905000000	            mov qword [0x04005b51], rax 	      4461	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	CALL_21
0x4005b51	      0xe99f000000	                           jmp 0x4005bf5	      4463	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005b56	    0x8b0500000000	            mov eax, dword [0x04005b5c] 	      4466	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x4005b5c	            0x85c0	                           test eax, eax	      4466	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x4005b5e	     0xf858d000000	                           jne 0x4005bf1	      4466	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x4005b64	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4468	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x4005b68	         0xfb640ff	               movzx eax, byte [rax - 1]	      4468	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x4005b6c	    0x880500000000	               mov byte [0x04005b72], al	      4468	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x4005b72	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4469	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x4005b76	        0x4883e801	                              sub rax, 1	      4469	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x4005b7a	          0xc60000	                       mov byte [rax], 0	      4469	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x4005b7d	    0x488b05000000	            mov rax, qword [0x04005b84] 	      4470	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19	CALL_22
0x4005b84	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4470	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19	CALL_22
0x4005b88	          0x4889d6	                            mov rsi, rdx	      4470	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19	CALL_22
0x4005b8b	          0x4889c7	                            mov rdi, rax	      4470	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19	CALL_22
0x4005b8e	      0xe800000000	                          call 0x4005b93	      4470	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19	CALL_22
0x4005b93	    0x488905000000	            mov qword [0x04005b9a], rax 	      4470	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19	CALL_22
0x4005b9a	            0xeb55	                           jmp 0x4005bf1	      4473	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005b9c	    0x8b0500000000	            mov eax, dword [0x04005ba2] 	      4477	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x4005ba2	            0x85c0	                           test eax, eax	      4477	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x4005ba4	            0x744e	                            je 0x4005bf4	      4477	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x4005ba6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4479	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21	CALL_23
0x4005baa	          0x4889c7	                            mov rdi, rax	      4479	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21	CALL_23
0x4005bad	      0xe88bd8ffff	            call sym.intel_float_operand	      4479	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21	CALL_23
0x4005bb2	          0x83f801	                              cmp eax, 1	      4479	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21	CALL_23
0x4005bb5	            0x7509	                           jne 0x4005bc0	      4479	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21	CALL_23
0x4005bb7	    0xc60500000000	            mov byte [0x04005bbe], 0x73 	      4480	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21
0x4005bbe	            0xeb07	                           jmp 0x4005bc7	      4480	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21
0x4005bc0	    0xc60500000000	            mov byte [0x04005bc7], 0x6c 	      4482	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	ELSE_10
0x4005bc7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4483	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x4005bcb	        0x4883e801	                              sub rax, 1	      4483	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x4005bcf	          0xc60000	                       mov byte [rax], 0	      4483	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x4005bd2	    0x488b05000000	            mov rax, qword [0x04005bd9] 	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4005bd9	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4005bdd	          0x4889d6	                            mov rsi, rdx	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4005be0	          0x4889c7	                            mov rdi, rax	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4005be3	      0xe800000000	                          call 0x4005be8	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4005be8	    0x488905000000	            mov qword [0x04005bef], rax 	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4005bef	            0xeb03	                           jmp 0x4005bf4	      4487	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005bf1	              0x90	                                     nop	      4473	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005bf2	            0xeb01	                           jmp 0x4005bf5	      4473	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005bf4	              0x90	                                     nop	      4487	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005bf5	    0x488b05000000	            mov rax, qword [0x04005bfc] 	      4489	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4005bfc	          0x4885c0	                           test rax, rax	      4489	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4005bff	            0x752b	                           jne 0x4005c2c	      4489	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4005c01	      0xbf00000000	                              mov edi, 0	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005c06	      0xe800000000	                          call 0x4005c0b	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005c0b	          0x4889c2	                            mov rdx, rax	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005c0e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005c12	          0x4889c6	                            mov rsi, rax	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005c15	          0x4889d7	                            mov rdi, rdx	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005c18	      0xb800000000	                              mov eax, 0	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005c1d	      0xe800000000	                          call 0x4005c22	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005c22	      0xb800000000	                              mov eax, 0	      4492	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4005c27	      0xe90f020000	                           jmp 0x4005e3b	      4492	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4005c2c	    0x488b05000000	            mov rax, qword [0x04005c33] 	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005c33	          0x488b00	                    mov rax, qword [rax]	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005c36	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005c3a	          0x83e020	                           and eax, 0x20	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005c3d	            0x84c0	                             test al, al	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005c3f	            0x7515	                           jne 0x4005c56	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005c41	    0x488b05000000	            mov rax, qword [0x04005c48] 	      4497	tc-i386.c	FUNCTION_69	IF_23
0x4005c48	          0x488b00	                    mov rax, qword [rax]	      4497	tc-i386.c	FUNCTION_69	IF_23
0x4005c4b	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      4497	tc-i386.c	FUNCTION_69	IF_23
0x4005c4f	          0x83e080	                     and eax, 0xffffff80	      4497	tc-i386.c	FUNCTION_69	IF_23
0x4005c52	            0x84c0	                             test al, al	      4497	tc-i386.c	FUNCTION_69	IF_23
0x4005c54	            0x7474	                            je 0x4005cca	      4497	tc-i386.c	FUNCTION_69	IF_23
0x4005c56	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005c5a	           0xfb600	                   movzx eax, byte [rax]	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005c5d	            0x3c2c	                            cmp al, 0x2c	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005c5f	            0x7569	                           jne 0x4005cca	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005c61	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005c65	        0x4883c001	                              add rax, 1	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005c69	           0xfb600	                   movzx eax, byte [rax]	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005c6c	            0x3c70	                            cmp al, 0x70	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005c6e	            0x755a	                           jne 0x4005cca	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005c70	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4507	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4005c74	        0x4883c002	                              add rax, 2	      4507	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4005c78	           0xfb600	                   movzx eax, byte [rax]	      4507	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4005c7b	            0x3c74	                            cmp al, 0x74	      4507	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4005c7d	            0x751f	                           jne 0x4005c9e	      4507	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4005c7f	      0xbf3e000000	                           mov edi, 0x3e	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x4005c84	      0xe858beffff	                     call sym.add_prefix	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x4005c89	            0x85c0	                           test eax, eax	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x4005c8b	            0x750a	                           jne 0x4005c97	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x4005c8d	      0xb800000000	                              mov eax, 0	      4510	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26
0x4005c92	      0xe9a4010000	                           jmp 0x4005e3b	      4510	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26
0x4005c97	      0x488345b803	               add qword [rbp - 0x48], 3	      4511	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4005c9c	            0xeb2c	                           jmp 0x4005cca	      4511	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4005c9e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4513	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x4005ca2	        0x4883c002	                              add rax, 2	      4513	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x4005ca6	           0xfb600	                   movzx eax, byte [rax]	      4513	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x4005ca9	            0x3c6e	                            cmp al, 0x6e	      4513	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x4005cab	            0x751d	                           jne 0x4005cca	      4513	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x4005cad	      0xbf2e000000	                           mov edi, 0x2e	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x4005cb2	      0xe82abeffff	                     call sym.add_prefix	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x4005cb7	            0x85c0	                           test eax, eax	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x4005cb9	            0x750a	                           jne 0x4005cc5	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x4005cbb	      0xb800000000	                              mov eax, 0	      4516	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28
0x4005cc0	      0xe976010000	                           jmp 0x4005e3b	      4516	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28
0x4005cc5	      0x488345b803	               add qword [rbp - 0x48], 3	      4517	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x4005cca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4522	tc-i386.c	FUNCTION_69	IF_29
0x4005cce	           0xfb600	                   movzx eax, byte [rax]	      4522	tc-i386.c	FUNCTION_69	IF_29
0x4005cd1	            0x3c2c	                            cmp al, 0x2c	      4522	tc-i386.c	FUNCTION_69	IF_29
0x4005cd3	            0x7538	                           jne 0x4005d0d	      4522	tc-i386.c	FUNCTION_69	IF_29
0x4005cd5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4525	tc-i386.c	FUNCTION_69	IF_29	CALL_31
0x4005cd9	           0xfb600	                   movzx eax, byte [rax]	      4525	tc-i386.c	FUNCTION_69	IF_29	CALL_31
0x4005cdc	           0xfbec0	                           movsx eax, al	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4005cdf	            0x89c7	                            mov edi, eax	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4005ce1	      0xe8a4ba0000	                 call sym.output_invalid	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4005ce6	          0x4889c3	                            mov rbx, rax	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4005ce9	      0xbf00000000	                              mov edi, 0	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4005cee	      0xe800000000	                          call 0x4005cf3	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4005cf3	          0x4889de	                            mov rsi, rbx	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4005cf6	          0x4889c7	                            mov rdi, rax	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4005cf9	      0xb800000000	                              mov eax, 0	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4005cfe	      0xe800000000	                          call 0x4005d03	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4005d03	      0xb800000000	                              mov eax, 0	      4526	tc-i386.c	FUNCTION_69	IF_29
0x4005d08	      0xe92e010000	                           jmp 0x4005e3b	      4526	tc-i386.c	FUNCTION_69	IF_29
0x4005d0d	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      4530	tc-i386.c	FUNCTION_69
0x4005d14	    0x488b05000000	            mov rax, qword [0x04005d1b] 	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005d1b	          0x488b00	                    mov rax, qword [rax]	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005d1e	        0x488945d0	             mov qword [rbp - 0x30], rax	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005d22	            0xeb53	                           jmp 0x4005d77	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005d24	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4533	tc-i386.c	FUNCTION_69	FOR_1	CALL_32
0x4005d28	          0x4889c7	                            mov rdi, rax	      4533	tc-i386.c	FUNCTION_69	FOR_1	CALL_32
0x4005d2b	      0xe8c3aaffff	                call sym.cpu_flags_match	      4533	tc-i386.c	FUNCTION_69	FOR_1	CALL_32
0x4005d30	           0x945b4	              or dword [rbp - 0x4c], eax	      4533	tc-i386.c	FUNCTION_69	FOR_1	CALL_32
0x4005d33	        0x837db403	               cmp dword [rbp - 0x4c], 3	      4534	tc-i386.c	FUNCTION_69	FOR_1	IF_30
0x4005d37	            0x7539	                           jne 0x4005d72	      4534	tc-i386.c	FUNCTION_69	FOR_1	IF_30
0x4005d39	     0xfb605000000	           movzx eax, byte [0x04005d40] 	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005d40	          0x83e004	                              and eax, 4	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005d43	            0x84c0	                             test al, al	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005d45	            0x7522	                           jne 0x4005d69	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005d47	    0x8b0500000000	            mov eax, dword [0x04005d4d] 	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005d4d	          0x83f801	                              cmp eax, 1	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005d50	            0x7417	                            je 0x4005d69	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005d52	      0xbf00000000	                              mov edi, 0	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005d57	      0xe800000000	                          call 0x4005d5c	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005d5c	          0x4889c7	                            mov rdi, rax	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005d5f	      0xb800000000	                              mov eax, 0	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005d64	      0xe800000000	                          call 0x4005d69	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005d69	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4539	tc-i386.c	FUNCTION_69	FOR_1	IF_30
0x4005d6d	      0xe9c9000000	                           jmp 0x4005e3b	      4539	tc-i386.c	FUNCTION_69	FOR_1	IF_30
0x4005d72	      0x488345d060	           add qword [rbp - 0x30], 0x60 	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005d77	    0x488b05000000	            mov rax, qword [0x04005d7e] 	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005d7e	        0x488b4008	                mov rax, qword [rax + 8]	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005d82	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005d86	            0x779c	                            ja 0x4005d24	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005d88	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4543	tc-i386.c	FUNCTION_69	IF_32
0x4005d8b	          0x83e002	                              and eax, 2	      4543	tc-i386.c	FUNCTION_69	IF_32
0x4005d8e	            0x85c0	                           test eax, eax	      4543	tc-i386.c	FUNCTION_69	IF_32
0x4005d90	            0x7540	                           jne 0x4005dd2	      4543	tc-i386.c	FUNCTION_69	IF_32
0x4005d92	    0x488b05000000	            mov rax, qword [0x04005d99] 	      4547	tc-i386.c	FUNCTION_69	IF_32
0x4005d99	          0x488b00	                    mov rax, qword [rax]	      4547	tc-i386.c	FUNCTION_69	IF_32
0x4005d9c	          0x488b18	                    mov rbx, qword [rax]	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005d9f	    0x8b0500000000	            mov eax, dword [0x04005da5] 	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005da5	          0x83f802	                              cmp eax, 2	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005da8	            0x750c	                           jne 0x4005db6	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005daa	      0xbf00000000	                              mov edi, 0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005daf	      0xe800000000	                          call 0x4005db4	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005db4	            0xeb0a	                           jmp 0x4005dc0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005db6	      0xbf00000000	                              mov edi, 0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005dbb	      0xe800000000	                          call 0x4005dc0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005dc0	          0x4889de	                            mov rsi, rbx	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005dc3	          0x4889c7	                            mov rdi, rax	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005dc6	      0xb800000000	                              mov eax, 0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005dcb	      0xe800000000	                          call 0x4005dd0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005dd0	            0xeb64	                           jmp 0x4005e36	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005dd2	    0x488b05000000	            mov rax, qword [0x04005dd9] 	      4552	tc-i386.c	FUNCTION_69	ELSE_12
0x4005dd9	          0x4885c0	                           test rax, rax	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005ddc	            0x7409	                            je 0x4005de7	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005dde	    0x4c8b25000000	            mov r12, qword [0x04005de5] 	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005de5	            0xeb06	                           jmp 0x4005ded	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005de7	    0x41bc00000000	                             mov r12d, 0	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005ded	    0x488b05000000	            mov rax, qword [0x04005df4] 	      4551	tc-i386.c	FUNCTION_69	ELSE_12
0x4005df4	          0x4885c0	                           test rax, rax	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005df7	            0x7409	                            je 0x4005e02	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005df9	    0x488b1d000000	            mov rbx, qword [0x04005e00] 	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e00	            0xeb07	                           jmp 0x4005e09	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e02	    0x488b1d000000	            mov rbx, qword [0x04005e09] 	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e09	    0x488b05000000	            mov rax, qword [0x04005e10] 	      4550	tc-i386.c	FUNCTION_69	ELSE_12
0x4005e10	          0x488b00	                    mov rax, qword [rax]	      4550	tc-i386.c	FUNCTION_69	ELSE_12
0x4005e13	          0x4c8b28	                    mov r13, qword [rax]	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e16	      0xbf00000000	                              mov edi, 0	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e1b	      0xe800000000	                          call 0x4005e20	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e20	          0x4c89e1	                            mov rcx, r12	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e23	          0x4889da	                            mov rdx, rbx	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e26	          0x4c89ee	                            mov rsi, r13	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e29	          0x4889c7	                            mov rdi, rax	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e2c	      0xb800000000	                              mov eax, 0	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e31	      0xe800000000	                          call 0x4005e36	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005e36	      0xb800000000	                              mov eax, 0	      4554	tc-i386.c	FUNCTION_69
0x4005e3b	        0x4883c448	                           add rsp, 0x48	      4555	tc-i386.c	FUNCTION_69
0x4005e3f	              0x5b	                                 pop rbx	      4555	tc-i386.c	FUNCTION_69
0x4005e40	            0x415c	                                 pop r12	      4555	tc-i386.c	FUNCTION_69
0x4005e42	            0x415d	                                 pop r13	      4555	tc-i386.c	FUNCTION_69
0x4005e44	              0x5d	                                 pop rbp	      4555	tc-i386.c	FUNCTION_69
0x4005e45	              0xc3	                                     ret	      4555	tc-i386.c	FUNCTION_69
md_begin	CALL,17:FOR,3:WHILE,1:functions,0:SWITCH,0:IF,11:ELSE,5:DO,0	267
0x4002a65	              0x55	                                push rbp	      2780	tc-i386.c	FUNCTION_52
0x4002a66	          0x4889e5	                            mov rbp, rsp	      2780	tc-i386.c	FUNCTION_52
0x4002a69	              0x53	                                push rbx	      2780	tc-i386.c	FUNCTION_52
0x4002a6a	        0x4883ec38	                           sub rsp, 0x38	      2780	tc-i386.c	FUNCTION_52
0x4002a6e	    0xc60500000000	                mov byte [0x04002a75], 2	      2784	tc-i386.c	FUNCTION_52
0x4002a75	      0xe800000000	                          call 0x4002a7a	      2787	tc-i386.c	FUNCTION_52	CALL_1
0x4002a7a	    0x488905000000	            mov qword [0x04002a81], rax 	      2787	tc-i386.c	FUNCTION_52	CALL_1
0x4002a81	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2794	tc-i386.c	FUNCTION_52
0x4002a89	      0xbf10000000	                           mov edi, 0x10	      2795	tc-i386.c	FUNCTION_52	CALL_2
0x4002a8e	      0xe800000000	                          call 0x4002a93	      2795	tc-i386.c	FUNCTION_52	CALL_2
0x4002a93	        0x488945d0	             mov qword [rbp - 0x30], rax	      2795	tc-i386.c	FUNCTION_52	CALL_2
0x4002a97	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2796	tc-i386.c	FUNCTION_52
0x4002a9b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2796	tc-i386.c	FUNCTION_52
0x4002a9f	          0x488910	                    mov qword [rax], rdx	      2796	tc-i386.c	FUNCTION_52
0x4002aa2	      0x488345c860	           add qword [rbp - 0x38], 0x60 	      2800	tc-i386.c	FUNCTION_52	WHILE_1
0x4002aa7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002aab	          0x488b00	                    mov rax, qword [rax]	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002aae	          0x4885c0	                           test rax, rax	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002ab1	            0x7421	                            je 0x4002ad4	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002ab3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x4002ab7	        0x4883e860	                           sub rax, 0x60	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x4002abb	          0x488b10	                    mov rdx, qword [rax]	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x4002abe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x4002ac2	          0x488b00	                    mov rax, qword [rax]	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x4002ac5	          0x4889d6	                            mov rsi, rdx	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x4002ac8	          0x4889c7	                            mov rdi, rax	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x4002acb	      0xe800000000	                          call 0x4002ad0	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x4002ad0	            0x85c0	                           test eax, eax	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x4002ad2	            0x74ce	                            je 0x4002aa2	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x4002ad4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2806	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002ad8	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2806	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002adc	        0x48895008	                mov qword [rax + 8], rdx	      2806	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002ae0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2808	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002ae4	        0x4883e860	                           sub rax, 0x60	      2808	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002ae8	          0x488b08	                    mov rcx, qword [rax]	      2808	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002aeb	    0x488b05000000	            mov rax, qword [0x04002af2] 	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x4002af2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x4002af6	          0x4889ce	                            mov rsi, rcx	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x4002af9	          0x4889c7	                            mov rdi, rax	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x4002afc	      0xe800000000	                          call 0x4002b01	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x4002b01	        0x488945e8	             mov qword [rbp - 0x18], rax	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x4002b05	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2810	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2
0x4002b0a	            0x742f	                            je 0x4002b3b	      2810	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2
0x4002b0c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2813	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2
0x4002b10	        0x4883e860	                           sub rax, 0x60	      2813	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2
0x4002b14	          0x488b18	                    mov rbx, qword [rax]	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x4002b17	      0xbf00000000	                              mov edi, 0	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x4002b1c	      0xe800000000	                          call 0x4002b21	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x4002b21	          0x4889c1	                            mov rcx, rax	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x4002b24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x4002b28	          0x4889c2	                            mov rdx, rax	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x4002b2b	          0x4889de	                            mov rsi, rbx	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x4002b2e	          0x4889cf	                            mov rdi, rcx	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x4002b31	      0xb800000000	                              mov eax, 0	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x4002b36	      0xe800000000	                          call 0x4002b3b	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x4002b3b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2816	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_3
0x4002b3f	          0x488b00	                    mov rax, qword [rax]	      2816	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_3
0x4002b42	          0x4885c0	                           test rax, rax	      2816	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_3
0x4002b45	            0x741e	                            je 0x4002b65	      2816	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_3
0x4002b47	      0xbf10000000	                           mov edi, 0x10	      2818	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_7
0x4002b4c	      0xe800000000	                          call 0x4002b51	      2818	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_7
0x4002b51	        0x488945d0	             mov qword [rbp - 0x30], rax	      2818	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_7
0x4002b55	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2819	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002b59	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2819	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002b5d	          0x488910	                    mov qword [rax], rdx	      2819	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x4002b60	      0xe93dffffff	                           jmp 0x4002aa2	      2821	tc-i386.c	FUNCTION_52	WHILE_1
0x4002b65	              0x90	                                     nop	      2817	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_3
0x4002b66	      0xe800000000	                          call 0x4002b6b	      2825	tc-i386.c	FUNCTION_52	CALL_8
0x4002b6b	    0x488905000000	            mov qword [0x04002b72], rax 	      2825	tc-i386.c	FUNCTION_52	CALL_8
0x4002b72	    0x8b0500000000	            mov eax, dword [0x04002b78] 	      2828	tc-i386.c	FUNCTION_52
0x4002b78	          0x8945c0	             mov dword [rbp - 0x40], eax	      2828	tc-i386.c	FUNCTION_52
0x4002b7b	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x4002b83	            0xeb58	                           jmp 0x4002bdd	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x4002b85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x4002b89	          0x488b08	                    mov rcx, qword [rax]	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x4002b8c	    0x488b05000000	            mov rax, qword [0x04002b93] 	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x4002b93	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x4002b97	          0x4889ce	                            mov rsi, rcx	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x4002b9a	          0x4889c7	                            mov rdi, rax	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x4002b9d	      0xe800000000	                          call 0x4002ba2	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x4002ba2	        0x488945e8	             mov qword [rbp - 0x18], rax	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x4002ba6	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2833	tc-i386.c	FUNCTION_52	FOR_1	IF_4
0x4002bab	            0x742b	                            je 0x4002bd8	      2833	tc-i386.c	FUNCTION_52	FOR_1	IF_4
0x4002bad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x4002bb1	          0x488b18	                    mov rbx, qword [rax]	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x4002bb4	      0xbf00000000	                              mov edi, 0	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x4002bb9	      0xe800000000	                          call 0x4002bbe	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x4002bbe	          0x4889c1	                            mov rcx, rax	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x4002bc1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x4002bc5	          0x4889c2	                            mov rdx, rax	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x4002bc8	          0x4889de	                            mov rsi, rbx	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x4002bcb	          0x4889cf	                            mov rdi, rcx	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x4002bce	      0xb800000000	                              mov eax, 0	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x4002bd3	      0xe800000000	                          call 0x4002bd8	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x4002bd8	      0x488345d818	            add qword [rbp - 0x28], 0x18	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x4002bdd	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x4002be0	          0x8d50ff	                      lea edx, [rax - 1]	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x4002be3	          0x8955c0	             mov dword [rbp - 0x40], edx	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x4002be6	            0x85c0	                           test eax, eax	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x4002be8	            0x759b	                           jne 0x4002b85	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x4002bea	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x4002bf1	      0xe9ad010000	                           jmp 0x4002da3	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x4002bf6	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x4002bf9	           0xfb6c0	                           movzx eax, al	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x4002bfc	            0x4898	                                    cdqe	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x4002bfe	     0xfb784000000	             movzx eax, word [rax + rax]	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x4002c06	           0xfb7c0	                           movzx eax, ax	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x4002c09	          0x83e004	                              and eax, 4	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x4002c0c	            0x85c0	                           test eax, eax	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x4002c0e	            0x7445	                            je 0x4002c55	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x4002c10	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2849	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c13	            0x89c2	                            mov edx, eax	      2849	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c15	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2849	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c18	            0x4898	                                    cdqe	      2849	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c1a	    0x889000000000	                      mov byte [rax], dl	      2849	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c20	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2850	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c23	            0x89c2	                            mov edx, eax	      2850	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c25	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2850	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c28	            0x4898	                                    cdqe	      2850	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c2a	    0x889000000000	                      mov byte [rax], dl	      2850	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c30	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2851	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c33	            0x89c2	                            mov edx, eax	      2851	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c35	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2851	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c38	            0x4898	                                    cdqe	      2851	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c3a	    0x889000000000	                      mov byte [rax], dl	      2851	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c40	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2852	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c43	            0x89c2	                            mov edx, eax	      2852	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c45	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2852	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c48	            0x4898	                                    cdqe	      2852	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c4a	    0x889000000000	                      mov byte [rax], dl	      2852	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c50	      0xe9dc000000	                           jmp 0x4002d31	      2852	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x4002c55	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x4002c58	           0xfb6c0	                           movzx eax, al	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x4002c5b	            0x4898	                                    cdqe	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x4002c5d	     0xfb784000000	             movzx eax, word [rax + rax]	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x4002c65	           0xfb7c0	                           movzx eax, ax	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x4002c68	          0x83e008	                              and eax, 8	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x4002c6b	            0x85c0	                           test eax, eax	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x4002c6d	            0x7435	                            je 0x4002ca4	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x4002c6f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2856	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c72	            0x89c2	                            mov edx, eax	      2856	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c74	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2856	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c77	            0x4898	                                    cdqe	      2856	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c79	    0x889000000000	                      mov byte [rax], dl	      2856	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c7f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2857	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c82	            0x89c2	                            mov edx, eax	      2857	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c84	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2857	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c87	            0x4898	                                    cdqe	      2857	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c89	    0x889000000000	                      mov byte [rax], dl	      2857	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c8f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2858	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c92	            0x89c2	                            mov edx, eax	      2858	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c94	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2858	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c97	            0x4898	                                    cdqe	      2858	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c99	    0x889000000000	                      mov byte [rax], dl	      2858	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002c9f	      0xe98d000000	                           jmp 0x4002d31	      2858	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x4002ca4	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x4002ca7	           0xfb6c0	                           movzx eax, al	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x4002caa	            0x4898	                                    cdqe	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x4002cac	     0xfb784000000	             movzx eax, word [rax + rax]	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x4002cb4	           0xfb7c0	                           movzx eax, ax	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x4002cb7	      0x2580000000	                           and eax, 0x80	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x4002cbc	            0x85c0	                           test eax, eax	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x4002cbe	            0x7445	                            je 0x4002d05	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x4002cc0	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x4002cc3	           0xfb6c0	                           movzx eax, al	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x4002cc6	            0x4898	                                    cdqe	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x4002cc8	     0xfb680000000	                   movzx eax, byte [rax]	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x4002ccf	            0x89c2	                            mov edx, eax	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x4002cd1	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x4002cd4	            0x4898	                                    cdqe	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x4002cd6	    0x889000000000	                      mov byte [rax], dl	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x4002cdc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2863	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002cdf	            0x4898	                                    cdqe	      2863	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002ce1	     0xfb690000000	                   movzx edx, byte [rax]	      2863	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002ce8	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2863	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002ceb	            0x4898	                                    cdqe	      2863	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002ced	    0x889000000000	                      mov byte [rax], dl	      2863	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002cf3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2864	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002cf6	            0x89c2	                            mov edx, eax	      2864	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002cf8	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2864	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002cfb	            0x4898	                                    cdqe	      2864	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002cfd	    0x889000000000	                      mov byte [rax], dl	      2864	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002d03	            0xeb2c	                           jmp 0x4002d31	      2864	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x4002d05	        0x837dc47b	           cmp dword [rbp - 0x3c], 0x7b 	      2866	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d09	            0x7406	                            je 0x4002d11	      2866	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d0b	        0x837dc47d	           cmp dword [rbp - 0x3c], 0x7d 	      2866	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d0f	            0x7520	                           jne 0x4002d31	      2866	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d11	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2868	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d14	            0x89c2	                            mov edx, eax	      2868	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d16	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2868	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d19	            0x4898	                                    cdqe	      2868	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d1b	    0x889000000000	                      mov byte [rax], dl	      2868	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d21	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2869	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d24	            0x89c2	                            mov edx, eax	      2869	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d26	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2869	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d29	            0x4898	                                    cdqe	      2869	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d2b	    0x889000000000	                      mov byte [rax], dl	      2869	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x4002d31	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d34	           0xfb6c0	                           movzx eax, al	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d37	            0x4898	                                    cdqe	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d39	     0xfb784000000	             movzx eax, word [rax + rax]	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d41	           0xfb7c0	                           movzx eax, ax	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d44	      0x2588000000	                           and eax, 0x88	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d49	            0x85c0	                           test eax, eax	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d4b	            0x751a	                           jne 0x4002d67	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d4d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d50	           0xfb6c0	                           movzx eax, al	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d53	            0x4898	                                    cdqe	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d55	     0xfb784000000	             movzx eax, word [rax + rax]	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d5d	           0xfb7c0	                           movzx eax, ax	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d60	          0x83e004	                              and eax, 4	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d63	            0x85c0	                           test eax, eax	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d65	            0x7412	                            je 0x4002d79	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x4002d67	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2873	tc-i386.c	FUNCTION_52	FOR_2	IF_9
0x4002d6a	            0x89c2	                            mov edx, eax	      2873	tc-i386.c	FUNCTION_52	FOR_2	IF_9
0x4002d6c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2873	tc-i386.c	FUNCTION_52	FOR_2	IF_9
0x4002d6f	            0x4898	                                    cdqe	      2873	tc-i386.c	FUNCTION_52	FOR_2	IF_9
0x4002d71	    0x889000000000	                      mov byte [rax], dl	      2873	tc-i386.c	FUNCTION_52	FOR_2	IF_9
0x4002d77	            0xeb26	                           jmp 0x4002d9f	      2873	tc-i386.c	FUNCTION_52	FOR_2	IF_9
0x4002d79	        0x837dc47f	           cmp dword [rbp - 0x3c], 0x7f 	      2874	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d7d	            0x7e20	                           jle 0x4002d9f	      2874	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d7f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2876	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d82	            0x89c2	                            mov edx, eax	      2876	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d84	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2876	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d87	            0x4898	                                    cdqe	      2876	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d89	    0x889000000000	                      mov byte [rax], dl	      2876	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d8f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2877	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d92	            0x89c2	                            mov edx, eax	      2877	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d94	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2877	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d97	            0x4898	                                    cdqe	      2877	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d99	    0x889000000000	                      mov byte [rax], dl	      2877	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x4002d9f	        0x8345c401	               add dword [rbp - 0x3c], 1	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x4002da3	    0x817dc4ff0000	           cmp dword [rbp - 0x3c], 0xff 	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x4002daa	     0xf8e46feffff	                           jle 0x4002bf6	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x4002db0	    0xc60500000000	            mov byte [0x04002db7], 0x2d 	      2888	tc-i386.c	FUNCTION_52
0x4002db7	    0xc60500000000	            mov byte [0x04002dbe], 0x5f 	      2889	tc-i386.c	FUNCTION_52
0x4002dbe	    0xc60500000000	            mov byte [0x04002dc5], 0x2d 	      2890	tc-i386.c	FUNCTION_52
0x4002dc5	    0xc60500000000	            mov byte [0x04002dcc], 0x2e 	      2891	tc-i386.c	FUNCTION_52
0x4002dcc	    0xc60500000000	            mov byte [0x04002dd3], 0x5f 	      2892	tc-i386.c	FUNCTION_52
0x4002dd3	    0xc60500000000	            mov byte [0x04002dda], 0x2e 	      2893	tc-i386.c	FUNCTION_52
0x4002dda	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x4002de2	            0xeb1f	                           jmp 0x4002e03	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x4002de4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2896	tc-i386.c	FUNCTION_52	FOR_3
0x4002de8	           0xfb600	                   movzx eax, byte [rax]	      2896	tc-i386.c	FUNCTION_52	FOR_3
0x4002deb	           0xfb6c8	                           movzx ecx, al	      2896	tc-i386.c	FUNCTION_52	FOR_3
0x4002dee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2896	tc-i386.c	FUNCTION_52	FOR_3
0x4002df2	           0xfb610	                   movzx edx, byte [rax]	      2896	tc-i386.c	FUNCTION_52	FOR_3
0x4002df5	          0x4863c1	                         movsxd rax, ecx	      2896	tc-i386.c	FUNCTION_52	FOR_3
0x4002df8	    0x889000000000	                      mov byte [rax], dl	      2896	tc-i386.c	FUNCTION_52	FOR_3
0x4002dfe	      0x488345e001	               add qword [rbp - 0x20], 1	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x4002e03	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x4002e07	           0xfb600	                   movzx eax, byte [rax]	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x4002e0a	            0x84c0	                             test al, al	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x4002e0c	            0x75d6	                           jne 0x4002de4	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x4002e0e	    0x8b0500000000	            mov eax, dword [0x04002e14] 	      2899	tc-i386.c	FUNCTION_52	IF_11
0x4002e14	          0x83f802	                              cmp eax, 2	      2899	tc-i386.c	FUNCTION_52	IF_11
0x4002e17	            0x7516	                           jne 0x4002e2f	      2899	tc-i386.c	FUNCTION_52	IF_11
0x4002e19	    0xc70500000000	           mov dword [0x04002e23], 0x10 	      2905	tc-i386.c	FUNCTION_52	IF_11
0x4002e23	    0xc70500000000	     mov dword [0x04002e2d], 0xfffffff8 	      2907	tc-i386.c	FUNCTION_52	IF_11
0x4002e2d	            0xeb14	                           jmp 0x4002e43	      2914	tc-i386.c	FUNCTION_52
0x4002e2f	    0xc70500000000	               mov dword [0x04002e39], 8	      2911	tc-i386.c	FUNCTION_52	ELSE_5
0x4002e39	    0xc70500000000	     mov dword [0x04002e43], 0xfffffffc 	      2912	tc-i386.c	FUNCTION_52	ELSE_5
0x4002e43	              0x90	                                     nop	      2914	tc-i386.c	FUNCTION_52
0x4002e44	        0x4883c438	                           add rsp, 0x38	      2914	tc-i386.c	FUNCTION_52
0x4002e48	              0x5b	                                 pop rbx	      2914	tc-i386.c	FUNCTION_52
0x4002e49	              0x5d	                                 pop rbp	      2914	tc-i386.c	FUNCTION_52
0x4002e4a	              0xc3	                                     ret	      2914	tc-i386.c	FUNCTION_52
output_branch	CALL,7:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,11:ELSE,2:DO,0	160
0x400cb1e	              0x55	                                push rbp	      7335	tc-i386.c	FUNCTION_88
0x400cb1f	          0x4889e5	                            mov rbp, rsp	      7335	tc-i386.c	FUNCTION_88
0x400cb22	        0x4883ec30	                           sub rsp, 0x30	      7335	tc-i386.c	FUNCTION_88
0x400cb26	    0x8b0500000000	            mov eax, dword [0x0400cb2c] 	      7344	tc-i386.c	FUNCTION_88
0x400cb2c	          0x83f801	                              cmp eax, 1	      7344	tc-i386.c	FUNCTION_88
0x400cb2f	           0xf94c0	                                 sete al	      7344	tc-i386.c	FUNCTION_88
0x400cb32	           0xfb6c0	                           movzx eax, al	      7344	tc-i386.c	FUNCTION_88
0x400cb35	          0x8945d8	             mov dword [rbp - 0x28], eax	      7344	tc-i386.c	FUNCTION_88
0x400cb38	    0x8b0500000000	            mov eax, dword [0x0400cb3e] 	      7345	tc-i386.c	FUNCTION_88
0x400cb3e	          0x83f802	                              cmp eax, 2	      7345	tc-i386.c	FUNCTION_88
0x400cb41	            0x7507	                           jne 0x400cb4a	      7345	tc-i386.c	FUNCTION_88
0x400cb43	      0xb802000000	                              mov eax, 2	      7345	tc-i386.c	FUNCTION_88
0x400cb48	            0xeb05	                           jmp 0x400cb4f	      7345	tc-i386.c	FUNCTION_88
0x400cb4a	      0xb800000000	                              mov eax, 0	      7345	tc-i386.c	FUNCTION_88
0x400cb4f	          0x8945e4	             mov dword [rbp - 0x1c], eax	      7345	tc-i386.c	FUNCTION_88
0x400cb52	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      7347	tc-i386.c	FUNCTION_88
0x400cb59	     0xfb605000000	           movzx eax, byte [0x0400cb60] 	      7348	tc-i386.c	FUNCTION_88	IF_1
0x400cb60	            0x84c0	                             test al, al	      7348	tc-i386.c	FUNCTION_88	IF_1
0x400cb62	            0x741a	                            je 0x400cb7e	      7348	tc-i386.c	FUNCTION_88	IF_1
0x400cb64	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      7350	tc-i386.c	FUNCTION_88	IF_1
0x400cb6b	    0x8b0500000000	            mov eax, dword [0x0400cb71] 	      7351	tc-i386.c	FUNCTION_88	IF_1
0x400cb71	          0x83e801	                              sub eax, 1	      7351	tc-i386.c	FUNCTION_88	IF_1
0x400cb74	    0x890500000000	            mov dword [0x0400cb7a], eax 	      7351	tc-i386.c	FUNCTION_88	IF_1
0x400cb7a	        0x8375d801	               xor dword [rbp - 0x28], 1	      7352	tc-i386.c	FUNCTION_88	IF_1
0x400cb7e	     0xfb605000000	           movzx eax, byte [0x0400cb85] 	      7355	tc-i386.c	FUNCTION_88	IF_2
0x400cb85	            0x3c2e	                            cmp al, 0x2e	      7355	tc-i386.c	FUNCTION_88	IF_2
0x400cb87	            0x740b	                            je 0x400cb94	      7355	tc-i386.c	FUNCTION_88	IF_2
0x400cb89	     0xfb605000000	           movzx eax, byte [0x0400cb90] 	      7356	tc-i386.c	FUNCTION_88	IF_2
0x400cb90	            0x3c3e	                            cmp al, 0x3e	      7356	tc-i386.c	FUNCTION_88	IF_2
0x400cb92	            0x7513	                           jne 0x400cba7	      7356	tc-i386.c	FUNCTION_88	IF_2
0x400cb94	        0x8345dc01	               add dword [rbp - 0x24], 1	      7358	tc-i386.c	FUNCTION_88	IF_2
0x400cb98	    0x8b0500000000	            mov eax, dword [0x0400cb9e] 	      7359	tc-i386.c	FUNCTION_88	IF_2
0x400cb9e	          0x83e801	                              sub eax, 1	      7359	tc-i386.c	FUNCTION_88	IF_2
0x400cba1	    0x890500000000	            mov dword [0x0400cba7], eax 	      7359	tc-i386.c	FUNCTION_88	IF_2
0x400cba7	     0xfb605000000	           movzx eax, byte [0x0400cbae] 	      7361	tc-i386.c	FUNCTION_88	IF_3
0x400cbae	            0x84c0	                             test al, al	      7361	tc-i386.c	FUNCTION_88	IF_3
0x400cbb0	            0x7413	                            je 0x400cbc5	      7361	tc-i386.c	FUNCTION_88	IF_3
0x400cbb2	        0x8345dc01	               add dword [rbp - 0x24], 1	      7363	tc-i386.c	FUNCTION_88	IF_3
0x400cbb6	    0x8b0500000000	            mov eax, dword [0x0400cbbc] 	      7364	tc-i386.c	FUNCTION_88	IF_3
0x400cbbc	          0x83e801	                              sub eax, 1	      7364	tc-i386.c	FUNCTION_88	IF_3
0x400cbbf	    0x890500000000	            mov dword [0x0400cbc5], eax 	      7364	tc-i386.c	FUNCTION_88	IF_3
0x400cbc5	     0xfb605000000	           movzx eax, byte [0x0400cbcc] 	      7368	tc-i386.c	FUNCTION_88	IF_4
0x400cbcc	            0x84c0	                             test al, al	      7368	tc-i386.c	FUNCTION_88	IF_4
0x400cbce	            0x7420	                            je 0x400cbf0	      7368	tc-i386.c	FUNCTION_88	IF_4
0x400cbd0	     0xfb605000000	           movzx eax, byte [0x0400cbd7] 	      7370	tc-i386.c	FUNCTION_88	IF_4	CALL_1
0x400cbd7	           0xfb6c0	                           movzx eax, al	      7370	tc-i386.c	FUNCTION_88	IF_4	CALL_1
0x400cbda	            0x89c7	                            mov edi, eax	      7370	tc-i386.c	FUNCTION_88	IF_4	CALL_1
0x400cbdc	      0xe800000000	                          call 0x400cbe1	      7370	tc-i386.c	FUNCTION_88	IF_4	CALL_1
0x400cbe1	    0x8b0500000000	            mov eax, dword [0x0400cbe7] 	      7371	tc-i386.c	FUNCTION_88	IF_4
0x400cbe7	          0x83e801	                              sub eax, 1	      7371	tc-i386.c	FUNCTION_88	IF_4
0x400cbea	    0x890500000000	            mov dword [0x0400cbf0], eax 	      7371	tc-i386.c	FUNCTION_88	IF_4
0x400cbf0	    0x8b0500000000	            mov eax, dword [0x0400cbf6] 	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400cbf6	            0x85c0	                           test eax, eax	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400cbf8	            0x7421	                            je 0x400cc1b	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400cbfa	    0x8b0500000000	            mov eax, dword [0x0400cc00] 	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400cc00	            0x85c0	                           test eax, eax	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400cc02	            0x7517	                           jne 0x400cc1b	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400cc04	      0xbf00000000	                              mov edi, 0	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400cc09	      0xe800000000	                          call 0x400cc0e	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400cc0e	          0x4889c7	                            mov rdi, rax	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400cc11	      0xb800000000	                              mov eax, 0	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400cc16	      0xe800000000	                          call 0x400cc1b	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400cc1b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7382	tc-i386.c	FUNCTION_88	CALL_4
0x400cc1e	          0x83c006	                              add eax, 6	      7382	tc-i386.c	FUNCTION_88	CALL_4
0x400cc21	            0x4898	                                    cdqe	      7382	tc-i386.c	FUNCTION_88	CALL_4
0x400cc23	          0x4889c7	                            mov rdi, rax	      7382	tc-i386.c	FUNCTION_88	CALL_4
0x400cc26	      0xe800000000	                          call 0x400cc2b	      7382	tc-i386.c	FUNCTION_88	CALL_4
0x400cc2b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x400cc2e	          0x83c001	                              add eax, 1	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x400cc31	            0x4898	                                    cdqe	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x400cc33	          0x4889c7	                            mov rdi, rax	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x400cc36	      0xe800000000	                          call 0x400cc3b	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x400cc3b	        0x488945e8	             mov qword [rbp - 0x18], rax	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x400cc3f	     0xfb605000000	           movzx eax, byte [0x0400cc46] 	      7385	tc-i386.c	FUNCTION_88	IF_6
0x400cc46	            0x84c0	                             test al, al	      7385	tc-i386.c	FUNCTION_88	IF_6
0x400cc48	            0x740f	                            je 0x400cc59	      7385	tc-i386.c	FUNCTION_88	IF_6
0x400cc4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7386	tc-i386.c	FUNCTION_88	IF_6
0x400cc4e	        0x488d5001	                      lea rdx, [rax + 1]	      7386	tc-i386.c	FUNCTION_88	IF_6
0x400cc52	        0x488955e8	             mov qword [rbp - 0x18], rdx	      7386	tc-i386.c	FUNCTION_88	IF_6
0x400cc56	          0xc60066	                    mov byte [rax], 0x66	      7386	tc-i386.c	FUNCTION_88	IF_6
0x400cc59	     0xfb605000000	           movzx eax, byte [0x0400cc60] 	      7387	tc-i386.c	FUNCTION_88	IF_7
0x400cc60	            0x3c2e	                            cmp al, 0x2e	      7387	tc-i386.c	FUNCTION_88	IF_7
0x400cc62	            0x740b	                            je 0x400cc6f	      7387	tc-i386.c	FUNCTION_88	IF_7
0x400cc64	     0xfb605000000	           movzx eax, byte [0x0400cc6b] 	      7388	tc-i386.c	FUNCTION_88	IF_7
0x400cc6b	            0x3c3e	                            cmp al, 0x3e	      7388	tc-i386.c	FUNCTION_88	IF_7
0x400cc6d	            0x7515	                           jne 0x400cc84	      7388	tc-i386.c	FUNCTION_88	IF_7
0x400cc6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7389	tc-i386.c	FUNCTION_88	IF_7
0x400cc73	        0x488d5001	                      lea rdx, [rax + 1]	      7389	tc-i386.c	FUNCTION_88	IF_7
0x400cc77	        0x488955e8	             mov qword [rbp - 0x18], rdx	      7389	tc-i386.c	FUNCTION_88	IF_7
0x400cc7b	     0xfb615000000	           movzx edx, byte [0x0400cc82] 	      7389	tc-i386.c	FUNCTION_88	IF_7
0x400cc82	            0x8810	                      mov byte [rax], dl	      7389	tc-i386.c	FUNCTION_88	IF_7
0x400cc84	     0xfb605000000	           movzx eax, byte [0x0400cc8b] 	      7390	tc-i386.c	FUNCTION_88	IF_8
0x400cc8b	            0x84c0	                             test al, al	      7390	tc-i386.c	FUNCTION_88	IF_8
0x400cc8d	            0x7415	                            je 0x400cca4	      7390	tc-i386.c	FUNCTION_88	IF_8
0x400cc8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7391	tc-i386.c	FUNCTION_88	IF_8
0x400cc93	        0x488d5001	                      lea rdx, [rax + 1]	      7391	tc-i386.c	FUNCTION_88	IF_8
0x400cc97	        0x488955e8	             mov qword [rbp - 0x18], rdx	      7391	tc-i386.c	FUNCTION_88	IF_8
0x400cc9b	     0xfb615000000	           movzx edx, byte [0x0400cca2] 	      7391	tc-i386.c	FUNCTION_88	IF_8
0x400cca2	            0x8810	                      mov byte [rax], dl	      7391	tc-i386.c	FUNCTION_88	IF_8
0x400cca4	    0x8b0500000000	            mov eax, dword [0x0400ccaa] 	      7392	tc-i386.c	FUNCTION_88
0x400ccaa	            0x89c2	                            mov edx, eax	      7392	tc-i386.c	FUNCTION_88
0x400ccac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7392	tc-i386.c	FUNCTION_88
0x400ccb0	            0x8810	                      mov byte [rax], dl	      7392	tc-i386.c	FUNCTION_88
0x400ccb2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7394	tc-i386.c	FUNCTION_88	IF_9
0x400ccb6	           0xfb600	                   movzx eax, byte [rax]	      7394	tc-i386.c	FUNCTION_88	IF_9
0x400ccb9	            0x3ceb	                            cmp al, 0xeb	      7394	tc-i386.c	FUNCTION_88	IF_9
0x400ccbb	            0x7508	                           jne 0x400ccc5	      7394	tc-i386.c	FUNCTION_88	IF_9
0x400ccbd	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7395	tc-i386.c	FUNCTION_88	IF_9
0x400ccc0	          0x8945e0	             mov dword [rbp - 0x20], eax	      7395	tc-i386.c	FUNCTION_88	IF_9
0x400ccc3	            0xeb22	                           jmp 0x400cce7	      7395	tc-i386.c	FUNCTION_88	IF_9
0x400ccc5	     0xfb605000000	           movzx eax, byte [0x0400cccc] 	      7396	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400cccc	          0x83e004	                              and eax, 4	      7396	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400cccf	            0x84c0	                             test al, al	      7396	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400ccd1	            0x740b	                            je 0x400ccde	      7396	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400ccd3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400ccd6	          0x83c804	                               or eax, 4	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400ccd9	          0x8945e0	             mov dword [rbp - 0x20], eax	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400ccdc	            0xeb09	                           jmp 0x400cce7	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400ccde	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7399	tc-i386.c	FUNCTION_88	ELSE_2
0x400cce1	          0x83c808	                               or eax, 8	      7399	tc-i386.c	FUNCTION_88	ELSE_2
0x400cce4	          0x8945e0	             mov dword [rbp - 0x20], eax	      7399	tc-i386.c	FUNCTION_88	ELSE_2
0x400cce7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7400	tc-i386.c	FUNCTION_88
0x400ccea	           0x945e0	              or dword [rbp - 0x20], eax	      7400	tc-i386.c	FUNCTION_88
0x400cced	    0x488b05000000	            mov rax, qword [0x0400ccf4] 	      7402	tc-i386.c	FUNCTION_88
0x400ccf4	          0x488b00	                    mov rax, qword [rax]	      7402	tc-i386.c	FUNCTION_88
0x400ccf7	        0x488945f0	             mov qword [rbp - 0x10], rax	      7402	tc-i386.c	FUNCTION_88
0x400ccfb	    0x488b05000000	            mov rax, qword [0x0400cd02] 	      7403	tc-i386.c	FUNCTION_88
0x400cd02	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7403	tc-i386.c	FUNCTION_88
0x400cd06	        0x488945f8	                mov qword [rbp - 8], rax	      7403	tc-i386.c	FUNCTION_88
0x400cd0a	    0x488b05000000	            mov rax, qword [0x0400cd11] 	      7405	tc-i386.c	FUNCTION_88	IF_11
0x400cd11	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      7405	tc-i386.c	FUNCTION_88	IF_11
0x400cd15	            0x3c02	                               cmp al, 2	      7405	tc-i386.c	FUNCTION_88	IF_11
0x400cd17	            0x742a	                            je 0x400cd43	      7405	tc-i386.c	FUNCTION_88	IF_11
0x400cd19	    0x488b05000000	            mov rax, qword [0x0400cd20] 	      7406	tc-i386.c	FUNCTION_88	IF_11
0x400cd20	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      7406	tc-i386.c	FUNCTION_88	IF_11
0x400cd24	            0x3c03	                               cmp al, 3	      7406	tc-i386.c	FUNCTION_88	IF_11
0x400cd26	            0x741b	                            je 0x400cd43	      7406	tc-i386.c	FUNCTION_88	IF_11
0x400cd28	    0x488b05000000	            mov rax, qword [0x0400cd2f] 	      7409	tc-i386.c	FUNCTION_88	IF_11	CALL_6
0x400cd2f	          0x4889c7	                            mov rdi, rax	      7409	tc-i386.c	FUNCTION_88	IF_11	CALL_6
0x400cd32	      0xe800000000	                          call 0x400cd37	      7409	tc-i386.c	FUNCTION_88	IF_11	CALL_6
0x400cd37	        0x488945f0	             mov qword [rbp - 0x10], rax	      7409	tc-i386.c	FUNCTION_88	IF_11	CALL_6
0x400cd3b	    0x48c745f80000	                  mov qword [rbp - 8], 0	      7410	tc-i386.c	FUNCTION_88	IF_11
0x400cd43	    0x8b0500000000	            mov eax, dword [0x0400cd49] 	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd49	            0x89c6	                            mov esi, eax	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd4b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd4f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd53	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd56	        0x4883ec08	                              sub rsp, 8	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd5a	          0xff75e8	                 push qword [rbp - 0x18]	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd5d	          0x4989c9	                             mov r9, rcx	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd60	          0x4989d0	                             mov r8, rdx	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd63	            0x89c1	                            mov ecx, eax	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd65	          0x4889f2	                            mov rdx, rsi	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd68	      0xbe05000000	                              mov esi, 5	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd6d	      0xbf07000000	                              mov edi, 7	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd72	      0xe800000000	                          call 0x400cd77	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd77	        0x4883c410	                           add rsp, 0x10	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400cd7b	              0x90	                                     nop	      7416	tc-i386.c	FUNCTION_88
0x400cd7c	              0xc9	                                   leave	      7416	tc-i386.c	FUNCTION_88
0x400cd7d	              0xc3	                                     ret	      7416	tc-i386.c	FUNCTION_88
operand_type_check	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,0:ELSE,0:DO,0	105
0x4000b2c	              0x55	                                push rbp	      1868	tc-i386.c	FUNCTION_21
0x4000b2d	          0x4889e5	                            mov rbp, rsp	      1868	tc-i386.c	FUNCTION_21
0x4000b30	        0x4883ec10	                           sub rsp, 0x10	      1868	tc-i386.c	FUNCTION_21
0x4000b34	        0x48897df0	             mov qword [rbp - 0x10], rdi	      1868	tc-i386.c	FUNCTION_21
0x4000b38	          0x8975fc	                mov dword [rbp - 4], esi	      1868	tc-i386.c	FUNCTION_21
0x4000b3b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1869	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b3e	          0x83f801	                              cmp eax, 1	      1869	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b41	            0x7427	                            je 0x4000b6a	      1869	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b43	          0x83f801	                              cmp eax, 1	      1869	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b46	            0x7213	                            jb 0x4000b5b	      1869	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b48	          0x83f802	                              cmp eax, 2	      1869	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b4b	            0x7473	                            je 0x4000bc0	      1869	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b4d	          0x83f803	                              cmp eax, 3	      1869	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b50	     0xf84af000000	                            je 0x4000c05	      1869	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b56	      0xe9fa000000	                           jmp 0x4000c55	      1869	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b5b	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      1872	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b5f	          0x83e001	                              and eax, 1	      1872	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b62	           0xfb6c0	                           movzx eax, al	      1872	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b65	      0xe9ff000000	                           jmp 0x4000c69	      1872	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b6a	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      1875	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b6e	          0x83e004	                              and eax, 4	      1875	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b71	            0x84c0	                             test al, al	      1880	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b73	            0x7537	                           jne 0x4000bac	      1880	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b75	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      1876	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b79	          0x83e008	                              and eax, 8	      1876	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b7c	            0x84c0	                             test al, al	      1876	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b7e	            0x752c	                           jne 0x4000bac	      1876	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b80	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      1877	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b84	          0x83e010	                           and eax, 0x10	      1877	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b87	            0x84c0	                             test al, al	      1877	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b89	            0x7521	                           jne 0x4000bac	      1877	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b8b	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      1878	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b8f	          0x83e020	                           and eax, 0x20	      1878	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b92	            0x84c0	                             test al, al	      1878	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b94	            0x7516	                           jne 0x4000bac	      1878	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b96	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      1879	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b9a	          0x83e040	                           and eax, 0x40	      1879	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b9d	            0x84c0	                             test al, al	      1879	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000b9f	            0x750b	                           jne 0x4000bac	      1879	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000ba1	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      1880	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000ba5	          0x83e080	                     and eax, 0xffffff80	      1880	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000ba8	            0x84c0	                             test al, al	      1880	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000baa	            0x740a	                            je 0x4000bb6	      1880	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bac	      0xb801000000	                              mov eax, 1	      1880	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bb1	      0xe9b3000000	                           jmp 0x4000c69	      1875	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bb6	      0xb800000000	                              mov eax, 0	      1880	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bbb	      0xe9a9000000	                           jmp 0x4000c69	      1875	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bc0	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1883	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bc4	          0x83e001	                              and eax, 1	      1883	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bc7	            0x84c0	                             test al, al	      1887	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bc9	            0x752c	                           jne 0x4000bf7	      1887	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bcb	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1884	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bcf	          0x83e002	                              and eax, 2	      1884	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bd2	            0x84c0	                             test al, al	      1884	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bd4	            0x7521	                           jne 0x4000bf7	      1884	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bd6	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1885	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bda	          0x83e004	                              and eax, 4	      1885	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bdd	            0x84c0	                             test al, al	      1885	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bdf	            0x7516	                           jne 0x4000bf7	      1885	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000be1	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1886	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000be5	          0x83e008	                              and eax, 8	      1886	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000be8	            0x84c0	                             test al, al	      1886	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bea	            0x750b	                           jne 0x4000bf7	      1886	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bec	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1887	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bf0	          0x83e010	                           and eax, 0x10	      1887	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bf3	            0x84c0	                             test al, al	      1887	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bf5	            0x7407	                            je 0x4000bfe	      1887	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bf7	      0xb801000000	                              mov eax, 1	      1887	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bfc	            0xeb6b	                           jmp 0x4000c69	      1883	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000bfe	      0xb800000000	                              mov eax, 0	      1887	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c03	            0xeb64	                           jmp 0x4000c69	      1883	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c05	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1890	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c09	          0x83e001	                              and eax, 1	      1890	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c0c	            0x84c0	                             test al, al	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c0e	            0x7537	                           jne 0x4000c47	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c10	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1891	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c14	          0x83e002	                              and eax, 2	      1891	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c17	            0x84c0	                             test al, al	      1891	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c19	            0x752c	                           jne 0x4000c47	      1891	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c1b	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1892	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c1f	          0x83e004	                              and eax, 4	      1892	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c22	            0x84c0	                             test al, al	      1892	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c24	            0x7521	                           jne 0x4000c47	      1892	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c26	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1893	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c2a	          0x83e008	                              and eax, 8	      1893	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c2d	            0x84c0	                             test al, al	      1893	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c2f	            0x7516	                           jne 0x4000c47	      1893	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c31	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1894	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c35	          0x83e010	                           and eax, 0x10	      1894	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c38	            0x84c0	                             test al, al	      1894	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c3a	            0x750b	                           jne 0x4000c47	      1894	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c3c	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c40	          0x83e040	                           and eax, 0x40	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c43	            0x84c0	                             test al, al	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c45	            0x7407	                            je 0x4000c4e	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c47	      0xb801000000	                              mov eax, 1	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c4c	            0xeb1b	                           jmp 0x4000c69	      1890	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c4e	      0xb800000000	                              mov eax, 0	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c53	            0xeb14	                           jmp 0x4000c69	      1890	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000c55	      0xba00000000	                              mov edx, 0	      1898	tc-i386.c	FUNCTION_21	SWITCH_1	CALL_1
0x4000c5a	      0xbe6a070000	                          mov esi, 0x76a	      1898	tc-i386.c	FUNCTION_21	SWITCH_1	CALL_1
0x4000c5f	      0xbf00000000	                              mov edi, 0	      1898	tc-i386.c	FUNCTION_21	SWITCH_1	CALL_1
0x4000c64	      0xe800000000	                          call 0x4000c69	      1898	tc-i386.c	FUNCTION_21	SWITCH_1	CALL_1
0x4000c69	              0xc9	                                   leave	      1902	tc-i386.c	FUNCTION_21
0x4000c6a	              0xc3	                                     ret	      1902	tc-i386.c	FUNCTION_21
i386_elf_section_type	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	22
0x4016788	              0x55	                                push rbp	     11574	tc-i386.c	
0x4016789	          0x4889e5	                            mov rbp, rsp	     11574	tc-i386.c	
0x401678c	        0x4883ec10	                           sub rsp, 0x10	     11574	tc-i386.c	
0x4016790	        0x48897df8	                mov qword [rbp - 8], rdi	     11574	tc-i386.c	
0x4016794	        0x488975f0	             mov qword [rbp - 0x10], rsi	     11574	tc-i386.c	
0x4016798	    0x8b0500000000	            mov eax, dword [0x0401679e] 	     11575	tc-i386.c	
0x401679e	          0x83f802	                              cmp eax, 2	     11575	tc-i386.c	
0x40167a1	            0x7528	                           jne 0x40167cb	     11575	tc-i386.c	
0x40167a3	      0x48837df006	               cmp qword [rbp - 0x10], 6	     11576	tc-i386.c	
0x40167a8	            0x7521	                           jne 0x40167cb	     11576	tc-i386.c	
0x40167aa	        0x488b45f8	                mov rax, qword [rbp - 8]	     11577	tc-i386.c	
0x40167ae	      0xba06000000	                              mov edx, 6	     11577	tc-i386.c	
0x40167b3	      0xbe00000000	                              mov esi, 0	     11577	tc-i386.c	
0x40167b8	          0x4889c7	                            mov rdi, rax	     11577	tc-i386.c	
0x40167bb	      0xe800000000	                          call 0x40167c0	     11577	tc-i386.c	
0x40167c0	            0x85c0	                           test eax, eax	     11577	tc-i386.c	
0x40167c2	            0x7507	                           jne 0x40167cb	     11577	tc-i386.c	
0x40167c4	      0xb801000070	                     mov eax, 0x70000001	     11578	tc-i386.c	
0x40167c9	            0xeb05	                           jmp 0x40167d0	     11578	tc-i386.c	
0x40167cb	      0xb8ffffffff	                     mov eax, 0xffffffff	     11580	tc-i386.c	FUNCTION_140
0x40167d0	              0xc9	                                   leave	     11581	tc-i386.c	FUNCTION_140
0x40167d1	              0xc3	                                     ret	     11581	tc-i386.c	FUNCTION_140
check_byte_reg	CALL,4:FOR,1:WHILE,0:functions,0:SWITCH,0:IF,7:ELSE,0:DO,0	206
0x4009726	              0x55	                                push rbp	      6095	tc-i386.c	FUNCTION_80
0x4009727	          0x4889e5	                            mov rbp, rsp	      6095	tc-i386.c	FUNCTION_80
0x400972a	            0x4157	                                push r15	      6095	tc-i386.c	FUNCTION_80
0x400972c	            0x4156	                                push r14	      6095	tc-i386.c	FUNCTION_80
0x400972e	            0x4155	                                push r13	      6095	tc-i386.c	FUNCTION_80
0x4009730	            0x4154	                                push r12	      6095	tc-i386.c	FUNCTION_80
0x4009732	              0x53	                                push rbx	      6095	tc-i386.c	FUNCTION_80
0x4009733	        0x4883ec18	                           sub rsp, 0x18	      6095	tc-i386.c	FUNCTION_80
0x4009737	    0x8b0500000000	            mov eax, dword [0x0400973d] 	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x400973d	          0x8945cc	             mov dword [rbp - 0x34], eax	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x4009740	      0xe9c2020000	                           jmp 0x4009a07	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x4009745	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x4009748	            0x4898	                                    cdqe	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x400974a	        0x4883c00e	                            add rax, 0xe	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x400974e	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x4009756	          0x83e001	                              and eax, 1	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x4009759	            0x84c0	                             test al, al	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x400975b	            0x7505	                           jne 0x4009762	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x400975d	      0xe9a5020000	                           jmp 0x4009a07	      6102	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x4009762	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x4009765	            0x4898	                                    cdqe	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x4009767	        0x4883c00e	                            add rax, 0xe	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x400976b	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x4009773	          0xc0e805	                               shr al, 5	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x4009776	          0x83e001	                              and eax, 1	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x4009779	            0x84c0	                             test al, al	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x400977b	            0x7405	                            je 0x4009782	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x400977d	      0xe985020000	                           jmp 0x4009a07	      6108	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x4009782	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6111	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x4009785	            0x4898	                                    cdqe	      6111	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x4009787	        0x4883c006	                              add rax, 6	      6111	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x400978b	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6111	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x4009793	          0xc0e807	                               shr al, 7	      6111	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x4009796	            0x84c0	                             test al, al	      6111	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x4009798	            0x7405	                            je 0x400979f	      6111	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x400979a	      0xe968020000	                           jmp 0x4009a07	      6112	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x400979f	    0x8b0500000000	            mov eax, dword [0x040097a5] 	      6115	tc-i386.c	FUNCTION_80	FOR_1	IF_4
0x40097a5	      0x3df0380ff2	                     cmp eax, 0xf20f38f0	      6115	tc-i386.c	FUNCTION_80	FOR_1	IF_4
0x40097aa	            0x7505	                           jne 0x40097b1	      6115	tc-i386.c	FUNCTION_80	FOR_1	IF_4
0x40097ac	      0xe956020000	                           jmp 0x4009a07	      6116	tc-i386.c	FUNCTION_80	FOR_1	IF_4
0x40097b1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097b4	            0x4898	                                    cdqe	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097b6	        0x4883c00e	                            add rax, 0xe	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097ba	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097c2	          0xc0e806	                               shr al, 6	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097c5	          0x83e001	                              and eax, 1	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097c8	            0x84c0	                             test al, al	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097ca	            0x7536	                           jne 0x4009802	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097cc	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097cf	            0x4898	                                    cdqe	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097d1	        0x4883c00e	                            add rax, 0xe	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097d5	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097dd	          0xc0e807	                               shr al, 7	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097e0	            0x84c0	                             test al, al	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097e2	            0x751e	                           jne 0x4009802	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097e4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097e7	            0x4898	                                    cdqe	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097e9	        0x4883c00e	                            add rax, 0xe	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097ed	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097f5	            0xd0e8	                               shr al, 1	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097f7	          0x83e001	                              and eax, 1	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097fa	            0x84c0	                             test al, al	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40097fc	     0xf84d4000000	                            je 0x40098d6	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x4009802	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x4009805	            0x4898	                                    cdqe	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x4009807	        0x4883c014	                           add rax, 0x14	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400980b	    0x488b04c50000	                  mov rax, qword [rax*8]	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x4009813	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x4009817	            0x3c03	                               cmp al, 3	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x4009819	     0xf87b7000000	                            ja 0x40098d6	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400981f	    0x8b0500000000	            mov eax, dword [0x04009825] 	      6124	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x4009825	          0x83f802	                              cmp eax, 2	      6124	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x4009828	     0xf84a8000000	                            je 0x40098d6	      6124	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400982e	    0x8b0500000000	            mov eax, dword [0x04009834] 	      6127	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009834	            0x85c0	                           test eax, eax	      6127	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009836	     0xf85cb010000	                           jne 0x4009a07	      6127	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400983c	     0xfb605000000	           movzx eax, byte [0x04009843] 	      6135	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009843	        0x440fbef8	                          movsx r15d, al	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x4009847	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6134	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400984a	            0x4898	                                    cdqe	      6134	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400984c	        0x4883c014	                           add rax, 0x14	      6134	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009850	    0x488b04c50000	                  mov rax, qword [rax*8]	      6134	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009858	          0x4c8b30	                    mov r14, qword [rax]	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400985b	    0x4c8b2d000000	            mov r13, qword [0x04009862] 	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x4009862	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009865	            0x4898	                                    cdqe	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009867	        0x4883c014	                           add rax, 0x14	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400986b	    0x488b14c50000	                  mov rdx, qword [rax*8]	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009873	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009876	            0x4898	                                    cdqe	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009878	        0x4883c00e	                            add rax, 0xe	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400987c	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009884	          0xc0e806	                               shr al, 6	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009887	          0x83e001	                              and eax, 1	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400988a	            0x84c0	                             test al, al	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400988c	            0x7409	                            je 0x4009897	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400988e	    0x48c7c0c0fdff	             mov rax, 0xfffffffffffffdc0	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009895	            0xeb07	                           jmp 0x400989e	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4009897	    0x48c7c040fcff	             mov rax, 0xfffffffffffffc40	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400989e	          0x4801d0	                            add rax, rdx	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x40098a1	          0x4c8b20	                    mov r12, qword [rax]	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098a4	    0x488b1d000000	            mov rbx, qword [0x040098ab] 	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098ab	      0xbf00000000	                              mov edi, 0	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098b0	      0xe800000000	                          call 0x40098b5	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098b5	          0x4589f9	                           mov r9d, r15d	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098b8	          0x4d89f0	                             mov r8, r14	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098bb	          0x4c89e9	                            mov rcx, r13	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098be	          0x4c89e2	                            mov rdx, r12	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098c1	          0x4889de	                            mov rsi, rbx	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098c4	          0x4889c7	                            mov rdi, rax	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098c7	      0xb800000000	                              mov eax, 0	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098cc	      0xe800000000	                          call 0x40098d1	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x40098d1	      0xe931010000	                           jmp 0x4009a07	      6137	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40098d6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6140	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40098d9	            0x4898	                                    cdqe	      6140	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40098db	        0x4883c00e	                            add rax, 0xe	      6140	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40098df	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6140	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40098e7	          0x83e001	                              and eax, 1	      6140	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40098ea	            0x84c0	                             test al, al	      6140	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40098ec	     0xf85be000000	                           jne 0x40099b0	      6140	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40098f2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6141	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40098f5	            0x4898	                                    cdqe	      6141	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40098f7	        0x4883c00e	                            add rax, 0xe	      6141	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40098fb	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6141	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009903	            0xd0e8	                               shr al, 1	      6141	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009905	          0x83e001	                              and eax, 1	      6141	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009908	            0x84c0	                             test al, al	      6141	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400990a	     0xf85a0000000	                           jne 0x40099b0	      6141	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009910	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6142	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009913	            0x4898	                                    cdqe	      6142	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009915	        0x4883c00e	                            add rax, 0xe	      6142	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009919	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6142	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009921	          0xc0e802	                               shr al, 2	      6142	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009924	          0x83e001	                              and eax, 1	      6142	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009927	            0x84c0	                             test al, al	      6142	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009929	     0xf8581000000	                           jne 0x40099b0	      6142	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400992f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6143	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009932	            0x4898	                                    cdqe	      6143	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009934	        0x4883c00e	                            add rax, 0xe	      6143	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009938	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6143	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009940	          0xc0e807	                               shr al, 7	      6143	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009943	            0x84c0	                             test al, al	      6143	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009945	            0x7569	                           jne 0x40099b0	      6143	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009947	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6144	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400994a	            0x4898	                                    cdqe	      6144	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400994c	        0x4883c00e	                            add rax, 0xe	      6144	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009950	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6144	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009958	          0x83e001	                              and eax, 1	      6144	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400995b	            0x84c0	                             test al, al	      6144	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400995d	            0x7551	                           jne 0x40099b0	      6144	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400995f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6145	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009962	            0x4898	                                    cdqe	      6145	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009964	        0x4883c00e	                            add rax, 0xe	      6145	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009968	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6145	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009970	          0xc0e804	                               shr al, 4	      6145	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009973	          0x83e001	                              and eax, 1	      6145	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009976	            0x84c0	                             test al, al	      6145	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009978	            0x7536	                           jne 0x40099b0	      6145	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400997a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6146	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400997d	            0x4898	                                    cdqe	      6146	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400997f	        0x4883c00e	                            add rax, 0xe	      6146	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009983	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6146	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400998b	          0xc0e805	                               shr al, 5	      6146	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400998e	          0x83e001	                              and eax, 1	      6146	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009991	            0x84c0	                             test al, al	      6146	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009993	            0x751b	                           jne 0x40099b0	      6146	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009995	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6147	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009998	            0x4898	                                    cdqe	      6147	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400999a	        0x4883c00e	                            add rax, 0xe	      6147	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400999e	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6147	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40099a6	          0xc0e806	                               shr al, 6	      6147	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40099a9	          0x83e001	                              and eax, 1	      6147	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40099ac	            0x84c0	                             test al, al	      6147	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40099ae	            0x7457	                            je 0x4009a07	      6147	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40099b0	     0xfb605000000	           movzx eax, byte [0x040099b7] 	      6153	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40099b7	        0x440fbef0	                          movsx r14d, al	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099bb	    0x4c8b2d000000	            mov r13, qword [0x040099c2] 	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099c2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6151	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40099c5	            0x4898	                                    cdqe	      6151	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40099c7	        0x4883c014	                           add rax, 0x14	      6151	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40099cb	    0x488b04c50000	                  mov rax, qword [rax*8]	      6151	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x40099d3	          0x4c8b20	                    mov r12, qword [rax]	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099d6	    0x488b1d000000	            mov rbx, qword [0x040099dd] 	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099dd	      0xbf00000000	                              mov edi, 0	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099e2	      0xe800000000	                          call 0x40099e7	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099e7	          0x4589f0	                           mov r8d, r14d	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099ea	          0x4c89e9	                            mov rcx, r13	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099ed	          0x4c89e2	                            mov rdx, r12	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099f0	          0x4889de	                            mov rsi, rbx	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099f3	          0x4889c7	                            mov rdi, rax	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099f6	      0xb800000000	                              mov eax, 0	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40099fb	      0xe800000000	                          call 0x4009a00	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x4009a00	      0xb800000000	                              mov eax, 0	      6154	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009a05	            0xeb13	                           jmp 0x4009a1a	      6154	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x4009a07	        0x836dcc01	               sub dword [rbp - 0x34], 1	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x4009a0b	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x4009a0f	     0xf8930fdffff	                           jns 0x4009745	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x4009a15	      0xb801000000	                              mov eax, 1	      6157	tc-i386.c	FUNCTION_80
0x4009a1a	        0x4883c418	                           add rsp, 0x18	      6158	tc-i386.c	FUNCTION_80
0x4009a1e	              0x5b	                                 pop rbx	      6158	tc-i386.c	FUNCTION_80
0x4009a1f	            0x415c	                                 pop r12	      6158	tc-i386.c	FUNCTION_80
0x4009a21	            0x415d	                                 pop r13	      6158	tc-i386.c	FUNCTION_80
0x4009a23	            0x415e	                                 pop r14	      6158	tc-i386.c	FUNCTION_80
0x4009a25	            0x415f	                                 pop r15	      6158	tc-i386.c	FUNCTION_80
0x4009a27	              0x5d	                                 pop rbp	      6158	tc-i386.c	FUNCTION_80
0x4009a28	              0xc3	                                     ret	      6158	tc-i386.c	FUNCTION_80
i386_need_index_operator	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	7
0x4015195	              0x55	                                push rbp	       542	tc-i386-intel.c	FUNCTION_151
0x4015196	          0x4889e5	                            mov rbp, rsp	       542	tc-i386-intel.c	FUNCTION_151
0x4015199	    0x8b0500000000	            mov eax, dword [0x0401519f] 	       543	tc-i386-intel.c	FUNCTION_151
0x401519f	          0xc1e81f	                           shr eax, 0x1f	       543	tc-i386-intel.c	FUNCTION_151
0x40151a2	           0xfb6c0	                           movzx eax, al	       543	tc-i386-intel.c	FUNCTION_151
0x40151a5	              0x5d	                                 pop rbp	       544	tc-i386-intel.c	FUNCTION_151
0x40151a6	              0xc3	                                     ret	       544	tc-i386-intel.c	FUNCTION_151
i386_index_check	CALL,12:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,11:ELSE,4:DO,0	361
0x400f95f	              0x55	                                push rbp	      9103	tc-i386.c	FUNCTION_109
0x400f960	          0x4889e5	                            mov rbp, rsp	      9103	tc-i386.c	FUNCTION_109
0x400f963	            0x4156	                                push r14	      9103	tc-i386.c	FUNCTION_109
0x400f965	            0x4155	                                push r13	      9103	tc-i386.c	FUNCTION_109
0x400f967	            0x4154	                                push r12	      9103	tc-i386.c	FUNCTION_109
0x400f969	              0x53	                                push rbx	      9103	tc-i386.c	FUNCTION_109
0x400f96a	        0x4883ec40	                           sub rsp, 0x40	      9103	tc-i386.c	FUNCTION_109
0x400f96e	        0x48897da8	             mov qword [rbp - 0x58], rdi	      9103	tc-i386.c	FUNCTION_109
0x400f972	    0x64488b042528	                mov rax, qword fs:[0x28]	      9103	tc-i386.c	FUNCTION_109
0x400f97b	        0x488945d8	             mov qword [rbp - 0x28], rax	      9103	tc-i386.c	FUNCTION_109
0x400f97f	            0x31c0	                            xor eax, eax	      9103	tc-i386.c	FUNCTION_109
0x400f981	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      9104	tc-i386.c	FUNCTION_109
0x400f989	      0xe86afeffff	           call sym.i386_addressing_mode	      9105	tc-i386.c	FUNCTION_109	CALL_1
0x400f98e	          0x8945bc	             mov dword [rbp - 0x44], eax	      9105	tc-i386.c	FUNCTION_109	CALL_1
0x400f991	    0x488b05000000	            mov rax, qword [0x0400f998] 	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400f998	          0x488b00	                    mov rax, qword [rax]	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400f99b	         0xfb6402b	           movzx eax, byte [rax + 0x2b] 	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400f99f	          0x83e001	                              and eax, 1	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400f9a2	            0x84c0	                             test al, al	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400f9a4	     0xf8478020000	                            je 0x400fc22	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400f9aa	    0x488b05000000	            mov rax, qword [0x0400f9b1] 	      9108	tc-i386.c	FUNCTION_109	IF_1
0x400f9b1	          0x488b00	                    mov rax, qword [rax]	      9108	tc-i386.c	FUNCTION_109	IF_1
0x400f9b4	         0xfb6402c	           movzx eax, byte [rax + 0x2c] 	      9108	tc-i386.c	FUNCTION_109	IF_1
0x400f9b8	          0x83e020	                           and eax, 0x20	      9108	tc-i386.c	FUNCTION_109	IF_1
0x400f9bb	            0x84c0	                             test al, al	      9108	tc-i386.c	FUNCTION_109	IF_1
0x400f9bd	     0xf855f020000	                           jne 0x400fc22	      9108	tc-i386.c	FUNCTION_109	IF_1
0x400f9c3	    0x488b05000000	            mov rax, qword [0x0400f9ca] 	      9109	tc-i386.c	FUNCTION_109	IF_1
0x400f9ca	        0x488b4008	                mov rax, qword [rax + 8]	      9109	tc-i386.c	FUNCTION_109	IF_1
0x400f9ce	        0x4883e860	                           sub rax, 0x60	      9109	tc-i386.c	FUNCTION_109	IF_1
0x400f9d2	         0xfb6402b	           movzx eax, byte [rax + 0x2b] 	      9109	tc-i386.c	FUNCTION_109	IF_1
0x400f9d6	          0x83e001	                              and eax, 1	      9109	tc-i386.c	FUNCTION_109	IF_1
0x400f9d9	            0x84c0	                             test al, al	      9109	tc-i386.c	FUNCTION_109	IF_1
0x400f9db	            0x750e	                           jne 0x400f9eb	      9109	tc-i386.c	FUNCTION_109	IF_1
0x400f9dd	    0x8b0500000000	            mov eax, dword [0x0400f9e3] 	      9110	tc-i386.c	FUNCTION_109	IF_1
0x400f9e3	            0x85c0	                           test eax, eax	      9110	tc-i386.c	FUNCTION_109	IF_1
0x400f9e5	     0xf8437020000	                            je 0x400fc22	      9110	tc-i386.c	FUNCTION_109	IF_1
0x400f9eb	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      9123	tc-i386.c	FUNCTION_109	IF_1
0x400f9f3	    0x488b05000000	            mov rax, qword [0x0400f9fa] 	      9125	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400f9fa	          0x488b00	                    mov rax, qword [rax]	      9125	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400f9fd	         0xfb6402c	           movzx eax, byte [rax + 0x2c] 	      9125	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa01	          0x83e001	                              and eax, 1	      9125	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa04	            0x84c0	                             test al, al	      9125	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa06	     0xf84a7000000	                            je 0x400fab3	      9125	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa0c	    0x488b05000000	            mov rax, qword [0x0400fa13] 	      9127	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa13	        0x488b4008	                mov rax, qword [rax + 8]	      9127	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa17	        0x4883e860	                           sub rax, 0x60	      9127	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa1b	        0x488b4034	            mov rax, qword [rax + 0x34] 	      9127	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa1f	        0x488945d0	             mov qword [rbp - 0x30], rax	      9127	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa23	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      9129	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa27	          0x83e040	                           and eax, 0x40	      9129	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa2a	            0x84c0	                             test al, al	      9129	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa2c	            0x7436	                            je 0x400fa64	      9129	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa2e	    0x8b0500000000	            mov eax, dword [0x0400fa34] 	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa34	            0x85c0	                           test eax, eax	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa36	           0xf94c2	                                 sete dl	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa39	    0x8b0500000000	            mov eax, dword [0x0400fa3f] 	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa3f	            0x85c0	                           test eax, eax	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa41	           0xf94c0	                                 sete al	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa44	            0x31d0	                            xor eax, edx	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa46	            0x84c0	                             test al, al	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa48	            0x7431	                            je 0x400fa7b	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa4a	    0x488b05000000	            mov rax, qword [0x0400fa51] 	      9131	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa51	        0x488b4008	                mov rax, qword [rax + 8]	      9131	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa55	        0x4883e860	                           sub rax, 0x60	      9131	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa59	         0xfb6403e	           movzx eax, byte [rax + 0x3e] 	      9131	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa5d	          0x83e040	                           and eax, 0x40	      9131	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa60	            0x84c0	                             test al, al	      9131	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa62	            0x7417	                            je 0x400fa7b	      9131	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa64	    0x488b05000000	            mov rax, qword [0x0400fa6b] 	      9133	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa6b	        0x488b4008	                mov rax, qword [rax + 8]	      9133	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa6f	        0x4883e860	                           sub rax, 0x60	      9133	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa73	        0x488b403c	            mov rax, qword [rax + 0x3c] 	      9133	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa77	        0x488945d0	             mov qword [rbp - 0x30], rax	      9133	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400fa7b	         0xfb645d3	            movzx eax, byte [rbp - 0x2d]	      9135	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa7f	          0xc0e802	                               shr al, 2	      9135	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa82	          0x83e001	                              and eax, 1	      9135	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400fa85	           0xfb6c0	                           movzx eax, al	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400fa88	            0x4898	                                    cdqe	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400fa8a	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400fa8d	          0x4801d2	                            add rdx, rdx	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400fa90	          0x4801d0	                            add rax, rdx	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400fa93	    0x488b14c50000	                  mov rdx, qword [rax*8]	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400fa9b	    0x488b05000000	            mov rax, qword [0x0400faa2] 	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400faa2	          0x4889d6	                            mov rsi, rdx	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400faa5	          0x4889c7	                            mov rdi, rax	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400faa8	      0xe800000000	                          call 0x400faad	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400faad	        0x488945c8	             mov qword [rbp - 0x38], rax	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400fab1	            0xeb21	                           jmp 0x400fad4	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400fab3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x400fab6	    0x488b14c50000	                  mov rdx, qword [rax*8]	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x400fabe	    0x488b05000000	            mov rax, qword [0x0400fac5] 	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x400fac5	          0x4889d6	                            mov rsi, rdx	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x400fac8	          0x4889c7	                            mov rdi, rax	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x400facb	      0xe800000000	                          call 0x400fad0	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x400fad0	        0x488945c8	             mov qword [rbp - 0x38], rax	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x400fad4	    0x488b05000000	            mov rax, qword [0x0400fadb] 	      9141	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400fadb	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      9141	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400fadf	            0x7535	                           jne 0x400fb16	      9141	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400fae1	    0x488b05000000	            mov rax, qword [0x0400fae8] 	      9142	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400fae8	          0x4885c0	                           test rax, rax	      9142	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400faeb	            0x7529	                           jne 0x400fb16	      9142	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400faed	    0x8b0500000000	            mov eax, dword [0x0400faf3] 	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x400faf3	            0x4898	                                    cdqe	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x400faf5	        0x4883c00e	                            add rax, 0xe	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x400faf9	    0x488b04c50000	                  mov rax, qword [rax*8]	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x400fb01	      0xbe02000000	                              mov esi, 2	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x400fb06	          0x4889c7	                            mov rdi, rax	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x400fb09	      0xe81e10ffff	             call sym.operand_type_check	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x400fb0e	            0x85c0	                           test eax, eax	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x400fb10	     0xf84d2000000	                            je 0x400fbe8	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x400fb16	    0x8b0500000000	            mov eax, dword [0x0400fb1c] 	      9147	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb1c	            0x85c0	                           test eax, eax	      9147	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb1e	            0x7456	                            je 0x400fb76	      9147	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb20	    0x488b05000000	            mov rax, qword [0x0400fb27] 	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb27	          0x4885c0	                           test rax, rax	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb2a	            0x744a	                            je 0x400fb76	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb2c	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb30	            0x7512	                           jne 0x400fb44	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb32	    0x488b05000000	            mov rax, qword [0x0400fb39] 	      9150	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb39	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      9150	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb3d	          0x83e002	                              and eax, 2	      9150	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb40	            0x84c0	                             test al, al	      9150	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb42	            0x7532	                           jne 0x400fb76	      9150	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb44	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb48	            0x7515	                           jne 0x400fb5f	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb4a	    0x488b05000000	            mov rax, qword [0x0400fb51] 	      9152	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb51	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb55	          0x83e080	                     and eax, 0xffffff80	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb58	            0x84c0	                             test al, al	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb5a	           0xf94c0	                                 sete al	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb5d	            0xeb13	                           jmp 0x400fb72	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb5f	    0x488b05000000	            mov rax, qword [0x0400fb66] 	      9153	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb66	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb6a	          0x83e040	                           and eax, 0x40	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb6d	            0x84c0	                             test al, al	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb6f	           0xf94c0	                                 sete al	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb72	            0x84c0	                             test al, al	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb74	            0x757c	                           jne 0x400fbf2	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fb76	    0x8b0500000000	            mov eax, dword [0x0400fb7c] 	      9161	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400fb7c	            0x85c0	                           test eax, eax	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fb7e	            0x7408	                            je 0x400fb88	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fb80	    0x41be5d000000	                          mov r14d, 0x5d	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fb86	            0xeb06	                           jmp 0x400fb8e	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fb88	    0x41be29000000	                          mov r14d, 0x29	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fb8e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fb92	          0x4c8b20	                    mov r12, qword [rax]	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fb95	    0x488b1d000000	            mov rbx, qword [0x0400fb9c] 	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fb9c	    0x8b0500000000	            mov eax, dword [0x0400fba2] 	      9158	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400fba2	            0x85c0	                           test eax, eax	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fba4	            0x7408	                            je 0x400fbae	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fba6	    0x41bd5b000000	                          mov r13d, 0x5b	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbac	            0xeb06	                           jmp 0x400fbb4	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbae	    0x41bd28000000	                          mov r13d, 0x28	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbb4	      0xbf00000000	                              mov edi, 0	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbb9	      0xe800000000	                          call 0x400fbbe	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbbe	          0x4889c7	                            mov rdi, rax	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbc1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbc5	          0x4589f1	                           mov r9d, r14d	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbc8	          0x4d89e0	                             mov r8, r12	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbcb	          0x4889d9	                            mov rcx, rbx	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbce	          0x4489ea	                           mov edx, r13d	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbd1	          0x4889c6	                            mov rsi, rax	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbd4	      0xb800000000	                              mov eax, 0	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbd9	      0xe800000000	                          call 0x400fbde	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400fbde	      0xb801000000	                              mov eax, 1	      9162	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400fbe3	      0xe900030000	                           jmp 0x400fee8	      9162	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400fbe8	      0xb801000000	                              mov eax, 1	      9165	tc-i386.c	FUNCTION_109	IF_1	ELSE_2
0x400fbed	      0xe9f6020000	                           jmp 0x400fee8	      9165	tc-i386.c	FUNCTION_109	IF_1	ELSE_2
0x400fbf2	              0x90	                                     nop	      9154	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400fbf3	      0xbf00000000	                              mov edi, 0	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x400fbf8	      0xe800000000	                          call 0x400fbfd	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x400fbfd	          0x4889c1	                            mov rcx, rax	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x400fc00	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x400fc04	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x400fc08	          0x4889c6	                            mov rsi, rax	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x400fc0b	          0x4889cf	                            mov rdi, rcx	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x400fc0e	      0xb800000000	                              mov eax, 0	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x400fc13	      0xe800000000	                          call 0x400fc18	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x400fc18	      0xb800000000	                              mov eax, 0	      9170	tc-i386.c	FUNCTION_109	IF_1
0x400fc1d	      0xe9c6020000	                           jmp 0x400fee8	      9170	tc-i386.c	FUNCTION_109	IF_1
0x400fc22	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      9174	tc-i386.c	FUNCTION_109	ELSE_3	IF_6
0x400fc26	     0xf8403020000	                            je 0x400fe2f	      9174	tc-i386.c	FUNCTION_109	ELSE_3	IF_6
0x400fc2c	    0x488b05000000	            mov rax, qword [0x0400fc33] 	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc33	          0x4885c0	                           test rax, rax	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc36	            0x7460	                            je 0x400fc98	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc38	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc3c	            0x7514	                           jne 0x400fc52	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc3e	    0x488b05000000	            mov rax, qword [0x0400fc45] 	      9179	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc45	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      9179	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc49	          0x83e002	                              and eax, 2	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc4c	            0x84c0	                             test al, al	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc4e	            0x7414	                            je 0x400fc64	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc50	            0xeb46	                           jmp 0x400fc98	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc52	    0x488b05000000	            mov rax, qword [0x0400fc59] 	      9180	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc59	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      9180	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc5d	          0x83e080	                     and eax, 0xffffff80	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc60	            0x84c0	                             test al, al	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc62	            0x7534	                           jne 0x400fc98	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc64	    0x488b05000000	            mov rax, qword [0x0400fc6b] 	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc6b	          0x4885c0	                           test rax, rax	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc6e	            0x7583	                           jne 0x400fbf3	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc70	    0x488b05000000	            mov rax, qword [0x0400fc77] 	      9182	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc77	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      9182	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc7b	           0xfb6c0	                           movzx eax, al	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc7e	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc82	            0x7507	                           jne 0x400fc8b	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc84	      0xbaff000000	                           mov edx, 0xff	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc89	            0xeb05	                           jmp 0x400fc90	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc8b	      0xbafe000000	                           mov edx, 0xfe	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc90	            0x39d0	                            cmp eax, edx	      9182	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc92	     0xf855bffffff	                           jne 0x400fbf3	      9182	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc98	    0x488b05000000	            mov rax, qword [0x0400fc9f] 	      9184	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fc9f	          0x4885c0	                           test rax, rax	      9184	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fca2	     0xf84d0000000	                            je 0x400fd78	      9184	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fca8	    0x488b05000000	            mov rax, qword [0x0400fcaf] 	      9185	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcaf	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      9185	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcb3	          0x83e008	                              and eax, 8	      9185	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcb6	            0x84c0	                             test al, al	      9185	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcb8	     0xf85ba000000	                           jne 0x400fd78	      9185	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcbe	    0x488b05000000	            mov rax, qword [0x0400fcc5] 	      9186	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcc5	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      9186	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcc9	          0x83e010	                           and eax, 0x10	      9186	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fccc	            0x84c0	                             test al, al	      9186	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcce	     0xf85a4000000	                           jne 0x400fd78	      9186	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcd4	    0x488b05000000	            mov rax, qword [0x0400fcdb] 	      9187	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcdb	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      9187	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcdf	          0x83e020	                           and eax, 0x20	      9187	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fce2	            0x84c0	                             test al, al	      9187	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fce4	     0xf858e000000	                           jne 0x400fd78	      9187	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcea	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcee	            0x753a	                           jne 0x400fd2a	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcf0	    0x488b05000000	            mov rax, qword [0x0400fcf7] 	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcf7	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcfb	          0x83e002	                              and eax, 2	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fcfe	            0x84c0	                             test al, al	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd00	            0x7516	                           jne 0x400fd18	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd02	    0x488b05000000	            mov rax, qword [0x0400fd09] 	      9190	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd09	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      9190	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd0d	            0x3cfc	                            cmp al, 0xfc	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd0f	            0x7407	                            je 0x400fd18	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd11	      0xb801000000	                              mov eax, 1	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd16	            0xeb05	                           jmp 0x400fd1d	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd18	      0xb800000000	                              mov eax, 0	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd1d	          0x83e001	                              and eax, 1	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd20	            0x84c0	                             test al, al	      9188	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd22	     0xf85cbfeffff	                           jne 0x400fbf3	      9188	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd28	            0xeb38	                           jmp 0x400fd62	      9188	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd2a	    0x488b05000000	            mov rax, qword [0x0400fd31] 	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd31	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd35	          0x83e080	                     and eax, 0xffffff80	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd38	            0x84c0	                             test al, al	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd3a	            0x7516	                           jne 0x400fd52	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd3c	    0x488b05000000	            mov rax, qword [0x0400fd43] 	      9192	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd43	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      9192	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd47	            0x3cfd	                            cmp al, 0xfd	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd49	            0x7407	                            je 0x400fd52	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd4b	      0xb801000000	                              mov eax, 1	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd50	            0xeb05	                           jmp 0x400fd57	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd52	      0xb800000000	                              mov eax, 0	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd57	          0x83e001	                              and eax, 1	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd5a	            0x84c0	                             test al, al	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd5c	     0xf8591feffff	                           jne 0x400fbf3	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd62	    0x488b05000000	            mov rax, qword [0x0400fd69] 	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd69	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd6d	          0x83e040	                           and eax, 0x40	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd70	            0x84c0	                             test al, al	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd72	     0xf847bfeffff	                            je 0x400fbf3	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400fd78	    0x488b05000000	            mov rax, qword [0x0400fd7f] 	      9197	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400fd7f	          0x488b00	                    mov rax, qword [rax]	      9197	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400fd82	          0x8b400c	              mov eax, dword [rax + 0xc]	      9197	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400fd85	      0x3d1b0ff300	                       cmp eax, 0xf30f1b	      9197	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400fd8a	            0x741b	                            je 0x400fda7	      9197	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400fd8c	    0x488b05000000	            mov rax, qword [0x0400fd93] 	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400fd93	          0x488b00	                    mov rax, qword [rax]	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400fd96	          0x8b400c	              mov eax, dword [rax + 0xc]	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400fd99	          0x83e0fe	                     and eax, 0xfffffffe	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400fd9c	      0x3d1a0f0000	                          cmp eax, 0xf1a	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400fda1	     0xf853c010000	                           jne 0x400fee3	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400fda7	    0x488b05000000	            mov rax, qword [0x0400fdae] 	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400fdae	          0x4885c0	                           test rax, rax	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400fdb1	            0x743a	                            je 0x400fded	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400fdb3	    0x488b05000000	            mov rax, qword [0x0400fdba] 	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400fdba	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400fdbe	            0x3cff	                            cmp al, 0xff	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400fdc0	            0x752b	                           jne 0x400fded	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400fdc2	      0xbf00000000	                              mov edi, 0	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x400fdc7	      0xe800000000	                          call 0x400fdcc	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x400fdcc	          0x4889c2	                            mov rdx, rax	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x400fdcf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x400fdd3	          0x4889c6	                            mov rsi, rax	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x400fdd6	          0x4889d7	                            mov rdi, rdx	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x400fdd9	      0xb800000000	                              mov eax, 0	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x400fdde	      0xe800000000	                          call 0x400fde3	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x400fde3	      0xb800000000	                              mov eax, 0	      9204	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400fde8	      0xe9fb000000	                           jmp 0x400fee8	      9204	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400fded	    0x488b05000000	            mov rax, qword [0x0400fdf4] 	      9208	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x400fdf4	          0x488b00	                    mov rax, qword [rax]	      9208	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x400fdf7	          0x8b400c	              mov eax, dword [rax + 0xc]	      9208	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x400fdfa	      0x3d1b0ff300	                       cmp eax, 0xf30f1b	      9208	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x400fdff	     0xf84de000000	                            je 0x400fee3	      9208	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x400fe05	    0x8b0500000000	            mov eax, dword [0x0400fe0b] 	      9209	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x400fe0b	            0x85c0	                           test eax, eax	      9209	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x400fe0d	     0xf84d0000000	                            je 0x400fee3	      9209	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x400fe13	      0xbf00000000	                              mov edi, 0	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x400fe18	      0xe800000000	                          call 0x400fe1d	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x400fe1d	          0x4889c7	                            mov rdi, rax	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x400fe20	      0xb800000000	                              mov eax, 0	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x400fe25	      0xe800000000	                          call 0x400fe2a	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x400fe2a	      0xe9b4000000	                           jmp 0x400fee3	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x400fe2f	    0x488b05000000	            mov rax, qword [0x0400fe36] 	      9216	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe36	          0x4885c0	                           test rax, rax	      9216	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe39	            0x742c	                            je 0x400fe67	      9216	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe3b	    0x488b05000000	            mov rax, qword [0x0400fe42] 	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe42	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe46	          0x83e040	                           and eax, 0x40	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe49	            0x84c0	                             test al, al	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe4b	     0xf84a2fdffff	                            je 0x400fbf3	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe51	    0x488b05000000	            mov rax, qword [0x0400fe58] 	      9218	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe58	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      9218	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe5c	          0x83e040	                           and eax, 0x40	      9218	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe5f	            0x84c0	                             test al, al	      9218	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe61	     0xf848cfdffff	                            je 0x400fbf3	      9218	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe67	    0x488b05000000	            mov rax, qword [0x0400fe6e] 	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe6e	          0x4885c0	                           test rax, rax	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe71	            0x7470	                            je 0x400fee3	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe73	    0x488b05000000	            mov rax, qword [0x0400fe7a] 	      9220	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe7a	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      9220	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe7e	          0x83e040	                           and eax, 0x40	      9220	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe81	            0x84c0	                             test al, al	      9220	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe83	     0xf846afdffff	                            je 0x400fbf3	      9220	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe89	    0x488b05000000	            mov rax, qword [0x0400fe90] 	      9221	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe90	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      9221	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe94	          0x83e040	                           and eax, 0x40	      9221	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe97	            0x84c0	                             test al, al	      9221	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe99	     0xf8454fdffff	                            je 0x400fbf3	      9221	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fe9f	    0x488b05000000	            mov rax, qword [0x0400fea6] 	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fea6	          0x4885c0	                           test rax, rax	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fea9	     0xf8444fdffff	                            je 0x400fbf3	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400feaf	    0x488b05000000	            mov rax, qword [0x0400feb6] 	      9223	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400feb6	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      9223	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400feba	            0x3c05	                               cmp al, 5	      9223	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400febc	     0xf8731fdffff	                            ja 0x400fbf3	      9223	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fec2	    0x488b05000000	            mov rax, qword [0x0400fec9] 	      9224	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fec9	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      9224	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fecd	            0x3c05	                               cmp al, 5	      9224	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fecf	     0xf861efdffff	                           jbe 0x400fbf3	      9224	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fed5	    0x8b0500000000	            mov eax, dword [0x0400fedb] 	      9225	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fedb	            0x85c0	                           test eax, eax	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fedd	     0xf8510fdffff	                           jne 0x400fbf3	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400fee3	      0xb801000000	                              mov eax, 1	      9229	tc-i386.c	FUNCTION_109
0x400fee8	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	      9230	tc-i386.c	FUNCTION_109
0x400feec	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      9230	tc-i386.c	FUNCTION_109
0x400fef5	            0x7405	                            je 0x400fefc	      9230	tc-i386.c	FUNCTION_109
0x400fef7	      0xe800000000	                          call 0x400fefc	      9230	tc-i386.c	FUNCTION_109
0x400fefc	        0x4883c440	                           add rsp, 0x40	      9230	tc-i386.c	FUNCTION_109
0x400ff00	              0x5b	                                 pop rbx	      9230	tc-i386.c	FUNCTION_109
0x400ff01	            0x415c	                                 pop r12	      9230	tc-i386.c	FUNCTION_109
0x400ff03	            0x415d	                                 pop r13	      9230	tc-i386.c	FUNCTION_109
0x400ff05	            0x415e	                                 pop r14	      9230	tc-i386.c	FUNCTION_109
0x400ff07	              0x5d	                                 pop rbp	      9230	tc-i386.c	FUNCTION_109
0x400ff08	              0xc3	                                     ret	      9230	tc-i386.c	FUNCTION_109
build_evex_prefix	CALL,5:FOR,1:WHILE,0:functions,0:SWITCH,3:IF,21:ELSE,9:DO,0	329
0x4003abe	              0x55	                                push rbp	      3480	tc-i386.c	FUNCTION_64
0x4003abf	          0x4889e5	                            mov rbp, rsp	      3480	tc-i386.c	FUNCTION_64
0x4003ac2	        0x4883ec20	                           sub rsp, 0x20	      3480	tc-i386.c	FUNCTION_64
0x4003ac6	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3484	tc-i386.c	FUNCTION_64
0x4003acd	    0x488b05000000	            mov rax, qword [0x04003ad4] 	      3487	tc-i386.c	FUNCTION_64	IF_1
0x4003ad4	          0x4885c0	                           test rax, rax	      3487	tc-i386.c	FUNCTION_64	IF_1
0x4003ad7	            0x7474	                            je 0x4003b4d	      3487	tc-i386.c	FUNCTION_64	IF_1
0x4003ad9	    0x8b0500000000	            mov eax, dword [0x04003adf] 	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x4003adf	          0x83e002	                              and eax, 2	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x4003ae2	            0x85c0	                           test eax, eax	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x4003ae4	            0x7414	                            je 0x4003afa	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x4003ae6	      0xba00000000	                              mov edx, 0	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x4003aeb	      0xbea10d0000	                          mov esi, 0xda1	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x4003af0	      0xbf00000000	                              mov edi, 0	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x4003af5	      0xe800000000	                          call 0x4003afa	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x4003afa	    0x488b05000000	            mov rax, qword [0x04003b01] 	      3491	tc-i386.c	FUNCTION_64	IF_1
0x4003b01	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      3491	tc-i386.c	FUNCTION_64	IF_1
0x4003b05	           0xfb6c0	                           movzx eax, al	      3491	tc-i386.c	FUNCTION_64	IF_1
0x4003b08	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3491	tc-i386.c	FUNCTION_64	IF_1
0x4003b0b	    0x488b05000000	            mov rax, qword [0x04003b12] 	      3492	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x4003b12	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3492	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x4003b16	           0xfb6c0	                           movzx eax, al	      3492	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x4003b19	          0x83e001	                              and eax, 1	      3492	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x4003b1c	            0x85c0	                           test eax, eax	      3492	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x4003b1e	            0x7404	                            je 0x4003b24	      3492	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x4003b20	        0x8345e408	               add dword [rbp - 0x1c], 8	      3493	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x4003b24	    0x488b05000000	            mov rax, qword [0x04003b2b] 	      3496	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x4003b2b	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3496	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x4003b2f	           0xfb6c0	                           movzx eax, al	      3496	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x4003b32	          0x83e004	                              and eax, 4	      3496	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x4003b35	            0x85c0	                           test eax, eax	      3496	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x4003b37	            0x7507	                           jne 0x4003b40	      3496	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x4003b39	    0xc60500000000	                mov byte [0x04003b40], 8	      3497	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x4003b40	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3498	tc-i386.c	FUNCTION_64	IF_1
0x4003b43	            0xf7d0	                                 not eax	      3498	tc-i386.c	FUNCTION_64	IF_1
0x4003b45	          0x83e00f	                            and eax, 0xf	      3498	tc-i386.c	FUNCTION_64	IF_1
0x4003b48	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3498	tc-i386.c	FUNCTION_64	IF_1
0x4003b4b	            0xeb21	                           jmp 0x4003b6e	      3498	tc-i386.c	FUNCTION_64	IF_1
0x4003b4d	    0xc745e40f0000	            mov dword [rbp - 0x1c], 0xf 	      3502	tc-i386.c	FUNCTION_64	ELSE_1
0x4003b54	    0x8b0500000000	            mov eax, dword [0x04003b5a] 	      3506	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x4003b5a	          0x83e002	                              and eax, 2	      3506	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x4003b5d	            0x85c0	                           test eax, eax	      3506	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x4003b5f	            0x7509	                           jne 0x4003b6a	      3506	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x4003b61	    0xc60500000000	                mov byte [0x04003b68], 8	      3507	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x4003b68	            0xeb04	                           jmp 0x4003b6e	      3507	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x4003b6a	        0x834df402	                 or dword [rbp - 0xc], 2	      3509	tc-i386.c	FUNCTION_64	ELSE_1	ELSE_2
0x4003b6e	    0x8b0500000000	            mov eax, dword [0x04003b74] 	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b74	          0xc1e808	                              shr eax, 8	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b77	           0xfb6c0	                           movzx eax, al	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b7a	          0x83f866	                           cmp eax, 0x66	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b7d	            0x7424	                            je 0x4003ba3	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b7f	          0x83f866	                           cmp eax, 0x66	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b82	            0x7706	                            ja 0x4003b8a	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b84	            0x85c0	                           test eax, eax	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b86	            0x7412	                            je 0x4003b9a	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b88	            0xeb34	                           jmp 0x4003bbe	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b8a	      0x3df2000000	                           cmp eax, 0xf2	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b8f	            0x7424	                            je 0x4003bb5	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b91	      0x3df3000000	                           cmp eax, 0xf3	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b96	            0x7414	                            je 0x4003bac	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b98	            0xeb24	                           jmp 0x4003bbe	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003b9a	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      3515	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003ba1	            0xeb2f	                           jmp 0x4003bd2	      3516	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003ba3	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      3518	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003baa	            0xeb26	                           jmp 0x4003bd2	      3519	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003bac	    0xc745e8020000	               mov dword [rbp - 0x18], 2	      3521	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003bb3	            0xeb1d	                           jmp 0x4003bd2	      3522	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003bb5	    0xc745e8030000	               mov dword [rbp - 0x18], 3	      3524	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003bbc	            0xeb14	                           jmp 0x4003bd2	      3525	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4003bbe	      0xba00000000	                              mov edx, 0	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x4003bc3	      0xbec70d0000	                          mov esi, 0xdc7	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x4003bc8	      0xbf00000000	                              mov edi, 0	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x4003bcd	      0xe800000000	                          call 0x4003bd2	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x4003bd2	    0xc70500000000	               mov dword [0x04003bdc], 4	      3531	tc-i386.c	FUNCTION_64
0x4003bdc	    0xc60500000000	            mov byte [0x04003be3], 0x62 	      3532	tc-i386.c	FUNCTION_64
0x4003be3	    0x8b0500000000	            mov eax, dword [0x04003be9] 	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003be9	          0xc1e80f	                            shr eax, 0xf	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003bec	          0x83e007	                              and eax, 7	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003bef	           0xfb6c0	                           movzx eax, al	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003bf2	          0x83f801	                              cmp eax, 1	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003bf5	            0x7412	                            je 0x4003c09	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003bf7	          0x83f802	                              cmp eax, 2	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003bfa	            0x7416	                            je 0x4003c12	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003bfc	            0x85c0	                           test eax, eax	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003bfe	            0x751b	                           jne 0x4003c1b	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003c00	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      3538	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003c07	            0xeb26	                           jmp 0x4003c2f	      3539	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003c09	    0xc745ec020000	               mov dword [rbp - 0x14], 2	      3541	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003c10	            0xeb1d	                           jmp 0x4003c2f	      3542	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003c12	    0xc745ec030000	               mov dword [rbp - 0x14], 3	      3544	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003c19	            0xeb14	                           jmp 0x4003c2f	      3545	tc-i386.c	FUNCTION_64	SWITCH_2
0x4003c1b	      0xba00000000	                              mov edx, 0	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x4003c20	      0xbedb0d0000	                          mov esi, 0xddb	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x4003c25	      0xbf00000000	                              mov edi, 0	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x4003c2a	      0xe800000000	                          call 0x4003c2f	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x4003c2f	    0x8b0500000000	            mov eax, dword [0x04003c35] 	      3553	tc-i386.c	FUNCTION_64
0x4003c35	            0xf7d0	                                 not eax	      3553	tc-i386.c	FUNCTION_64
0x4003c37	          0xc1e005	                              shl eax, 5	      3553	tc-i386.c	FUNCTION_64
0x4003c3a	            0x89c2	                            mov edx, eax	      3553	tc-i386.c	FUNCTION_64
0x4003c3c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3553	tc-i386.c	FUNCTION_64
0x4003c3f	             0x9d0	                             or eax, edx	      3553	tc-i386.c	FUNCTION_64
0x4003c41	    0x880500000000	               mov byte [0x04003c47], al	      3553	tc-i386.c	FUNCTION_64
0x4003c47	    0x8b0500000000	            mov eax, dword [0x04003c4d] 	      3557	tc-i386.c	FUNCTION_64	IF_5
0x4003c4d	          0x83e004	                              and eax, 4	      3557	tc-i386.c	FUNCTION_64	IF_5
0x4003c50	            0x85c0	                           test eax, eax	      3557	tc-i386.c	FUNCTION_64	IF_5
0x4003c52	            0x7512	                           jne 0x4003c66	      3557	tc-i386.c	FUNCTION_64	IF_5
0x4003c54	     0xfb605000000	           movzx eax, byte [0x04003c5b] 	      3558	tc-i386.c	FUNCTION_64	IF_5
0x4003c5b	          0x83c810	                            or eax, 0x10	      3558	tc-i386.c	FUNCTION_64	IF_5
0x4003c5e	    0x880500000000	               mov byte [0x04003c64], al	      3558	tc-i386.c	FUNCTION_64	IF_5
0x4003c64	            0xeb04	                           jmp 0x4003c6a	      3558	tc-i386.c	FUNCTION_64	IF_5
0x4003c66	        0x834df404	                 or dword [rbp - 0xc], 4	      3560	tc-i386.c	FUNCTION_64	ELSE_3
0x4003c6a	    0x8b1500000000	            mov edx, dword [0x04003c70] 	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x4003c70	    0x8b0500000000	            mov eax, dword [0x04003c76] 	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x4003c76	             0x1c2	                            add edx, eax	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x4003c78	    0x8b0500000000	            mov eax, dword [0x04003c7e] 	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x4003c7e	            0x39c2	                            cmp edx, eax	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x4003c80	            0x7521	                           jne 0x4003ca3	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x4003c82	    0x8b0500000000	            mov eax, dword [0x04003c88] 	      3568	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x4003c88	          0x83e001	                              and eax, 1	      3568	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x4003c8b	            0x85c0	                           test eax, eax	      3568	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x4003c8d	            0x7414	                            je 0x4003ca3	      3568	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x4003c8f	        0x834df401	                 or dword [rbp - 0xc], 1	      3570	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x4003c93	     0xfb605000000	           movzx eax, byte [0x04003c9a] 	      3571	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x4003c9a	          0x83e0bf	                     and eax, 0xffffffbf	      3571	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x4003c9d	    0x880500000000	               mov byte [0x04003ca3], al	      3571	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x4003ca3	    0x8b0500000000	            mov eax, dword [0x04003ca9] 	      3576	tc-i386.c	FUNCTION_64
0x4003ca9	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3576	tc-i386.c	FUNCTION_64
0x4003cac	            0xf7d2	                                 not edx	      3576	tc-i386.c	FUNCTION_64
0x4003cae	            0x21d0	                            and eax, edx	      3576	tc-i386.c	FUNCTION_64
0x4003cb0	    0x890500000000	            mov dword [0x04003cb6], eax 	      3576	tc-i386.c	FUNCTION_64
0x4003cb6	    0x8b0500000000	            mov eax, dword [0x04003cbc] 	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x4003cbc	            0x85c0	                           test eax, eax	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x4003cbe	            0x7414	                            je 0x4003cd4	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x4003cc0	      0xba00000000	                              mov edx, 0	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x4003cc5	      0xbef90d0000	                          mov esi, 0xdf9	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x4003cca	      0xbf00000000	                              mov edi, 0	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x4003ccf	      0xe800000000	                          call 0x4003cd4	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x4003cd4	    0x8b0500000000	            mov eax, dword [0x04003cda] 	      3580	tc-i386.c	FUNCTION_64
0x4003cda	          0x83e008	                              and eax, 8	      3580	tc-i386.c	FUNCTION_64
0x4003cdd	            0x85c0	                           test eax, eax	      3580	tc-i386.c	FUNCTION_64
0x4003cdf	           0xf95c0	                                setne al	      3580	tc-i386.c	FUNCTION_64
0x4003ce2	           0xfb6c0	                           movzx eax, al	      3580	tc-i386.c	FUNCTION_64
0x4003ce5	          0x8945f0	             mov dword [rbp - 0x10], eax	      3580	tc-i386.c	FUNCTION_64
0x4003ce8	     0xfb605000000	           movzx eax, byte [0x04003cef] 	      3581	tc-i386.c	FUNCTION_64	IF_8
0x4003cef	          0x83e060	                           and eax, 0x60	      3581	tc-i386.c	FUNCTION_64	IF_8
0x4003cf2	            0x84c0	                             test al, al	      3581	tc-i386.c	FUNCTION_64	IF_8
0x4003cf4	            0x7417	                            je 0x4003d0d	      3581	tc-i386.c	FUNCTION_64	IF_8
0x4003cf6	     0xfb605000000	           movzx eax, byte [0x04003cfd] 	      3583	tc-i386.c	FUNCTION_64	IF_8	IF_9
0x4003cfd	          0x83e060	                           and eax, 0x60	      3583	tc-i386.c	FUNCTION_64	IF_8	IF_9
0x4003d00	            0x3c40	                            cmp al, 0x40	      3583	tc-i386.c	FUNCTION_64	IF_8	IF_9
0x4003d02	            0x7521	                           jne 0x4003d25	      3583	tc-i386.c	FUNCTION_64	IF_8	IF_9
0x4003d04	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      3584	tc-i386.c	FUNCTION_64	IF_8	IF_9
0x4003d0b	            0xeb18	                           jmp 0x4003d25	      3584	tc-i386.c	FUNCTION_64	IF_8	IF_9
0x4003d0d	        0x837df000	               cmp dword [rbp - 0x10], 0	      3587	tc-i386.c	FUNCTION_64	ELSE_4	IF_10
0x4003d11	            0x7512	                           jne 0x4003d25	      3587	tc-i386.c	FUNCTION_64	ELSE_4	IF_10
0x4003d13	    0x8b0500000000	            mov eax, dword [0x04003d19] 	      3589	tc-i386.c	FUNCTION_64	ELSE_4	IF_10	IF_11
0x4003d19	          0x83f801	                              cmp eax, 1	      3589	tc-i386.c	FUNCTION_64	ELSE_4	IF_10	IF_11
0x4003d1c	            0x7507	                           jne 0x4003d25	      3589	tc-i386.c	FUNCTION_64	ELSE_4	IF_10	IF_11
0x4003d1e	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      3590	tc-i386.c	FUNCTION_64	ELSE_4	IF_10	IF_11
0x4003d25	        0x834de804	                or dword [rbp - 0x18], 4	      3594	tc-i386.c	FUNCTION_64
0x4003d29	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3597	tc-i386.c	FUNCTION_64
0x4003d2c	          0xc1e007	                              shl eax, 7	      3597	tc-i386.c	FUNCTION_64
0x4003d2f	            0x89c2	                            mov edx, eax	      3597	tc-i386.c	FUNCTION_64
0x4003d31	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3597	tc-i386.c	FUNCTION_64
0x4003d34	          0xc1e003	                              shl eax, 3	      3597	tc-i386.c	FUNCTION_64
0x4003d37	             0x9c2	                             or edx, eax	      3597	tc-i386.c	FUNCTION_64
0x4003d39	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3597	tc-i386.c	FUNCTION_64
0x4003d3c	             0x9d0	                             or eax, edx	      3597	tc-i386.c	FUNCTION_64
0x4003d3e	    0x880500000000	               mov byte [0x04003d44], al	      3597	tc-i386.c	FUNCTION_64
0x4003d44	    0x488b05000000	            mov rax, qword [0x04003d4b] 	      3601	tc-i386.c	FUNCTION_64	IF_12
0x4003d4b	          0x4885c0	                           test rax, rax	      3601	tc-i386.c	FUNCTION_64	IF_12
0x4003d4e	            0x741e	                            je 0x4003d6e	      3601	tc-i386.c	FUNCTION_64	IF_12
0x4003d50	    0x488b05000000	            mov rax, qword [0x04003d57] 	      3601	tc-i386.c	FUNCTION_64	IF_12
0x4003d57	          0x8b4008	                mov eax, dword [rax + 8]	      3601	tc-i386.c	FUNCTION_64	IF_12
0x4003d5a	            0x85c0	                           test eax, eax	      3601	tc-i386.c	FUNCTION_64	IF_12
0x4003d5c	            0x7410	                            je 0x4003d6e	      3601	tc-i386.c	FUNCTION_64	IF_12
0x4003d5e	     0xfb605000000	           movzx eax, byte [0x04003d65] 	      3602	tc-i386.c	FUNCTION_64	IF_12
0x4003d65	          0x83c880	                      or eax, 0xffffff80	      3602	tc-i386.c	FUNCTION_64	IF_12
0x4003d68	    0x880500000000	               mov byte [0x04003d6e], al	      3602	tc-i386.c	FUNCTION_64	IF_12
0x4003d6e	    0x488b05000000	            mov rax, qword [0x04003d75] 	      3605	tc-i386.c	FUNCTION_64	IF_13
0x4003d75	          0x4885c0	                           test rax, rax	      3605	tc-i386.c	FUNCTION_64	IF_13
0x4003d78	     0xf85bb010000	                           jne 0x4003f39	      3605	tc-i386.c	FUNCTION_64	IF_13
0x4003d7e	     0xfb605000000	           movzx eax, byte [0x04003d85] 	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4003d85	          0x83e007	                              and eax, 7	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4003d88	            0x84c0	                             test al, al	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4003d8a	            0x7412	                            je 0x4003d9e	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4003d8c	     0xfb605000000	           movzx eax, byte [0x04003d93] 	      3611	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4003d93	          0x83e007	                              and eax, 7	      3611	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4003d96	            0x3c05	                               cmp al, 5	      3611	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4003d98	     0xf8506010000	                           jne 0x4003ea4	      3611	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4003d9e	    0xc745f8000000	                  mov dword [rbp - 8], 0	      3615	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4003da5	    0xc745fc000000	                  mov dword [rbp - 4], 0	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x4003dac	      0xe9e4000000	                           jmp 0x4003e95	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x4003db1	          0x8b45fc	                mov eax, dword [rbp - 4]	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003db4	        0x4883c006	                              add rax, 6	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003db8	     0xfb604c50000	                 movzx eax, byte [rax*8]	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003dc0	          0xc0e803	                               shr al, 3	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003dc3	          0x83e001	                              and eax, 1	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003dc6	           0xfb6d0	                           movzx edx, al	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003dc9	          0x8b45fc	                mov eax, dword [rbp - 4]	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003dcc	        0x4883c006	                              add rax, 6	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003dd0	     0xfb604c50000	                 movzx eax, byte [rax*8]	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003dd8	          0xc0e804	                               shr al, 4	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003ddb	          0x83e001	                              and eax, 1	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003dde	           0xfb6c0	                           movzx eax, al	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003de1	             0x1c2	                            add edx, eax	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003de3	          0x8b45fc	                mov eax, dword [rbp - 4]	      3619	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003de6	        0x4883c006	                              add rax, 6	      3619	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003dea	     0xfb604c50000	                 movzx eax, byte [rax*8]	      3619	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003df2	          0xc0e805	                               shr al, 5	      3619	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003df5	          0x83e001	                              and eax, 1	      3619	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003df8	           0xfb6c0	                           movzx eax, al	      3619	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003dfb	             0x1d0	                            add eax, edx	      3619	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003dfd	          0x83f801	                              cmp eax, 1	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003e00	     0xf8e8b000000	                           jle 0x4003e91	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x4003e06	          0x8b45fc	                mov eax, dword [rbp - 4]	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x4003e09	        0x4883c00e	                            add rax, 0xe	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x4003e0d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x4003e15	          0xc0e805	                               shr al, 5	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x4003e18	          0x83e001	                              and eax, 1	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x4003e1b	            0x84c0	                             test al, al	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x4003e1d	            0x7415	                            je 0x4003e34	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x4003e1f	     0xfb605000000	           movzx eax, byte [0x04003e26] 	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x4003e26	          0x83e0f8	                     and eax, 0xfffffff8	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x4003e29	          0x83c801	                               or eax, 1	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x4003e2c	    0x880500000000	               mov byte [0x04003e32], al	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x4003e32	            0xeb70	                           jmp 0x4003ea4	      3629	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_7
0x4003e34	          0x8b45fc	                mov eax, dword [rbp - 4]	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4003e37	        0x4883c00e	                            add rax, 0xe	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4003e3b	     0xfb604c50000	                 movzx eax, byte [rax*8]	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4003e43	          0xc0e804	                               shr al, 4	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4003e46	          0x83e001	                              and eax, 1	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4003e49	            0x84c0	                             test al, al	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4003e4b	            0x7415	                            je 0x4003e62	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4003e4d	     0xfb605000000	           movzx eax, byte [0x04003e54] 	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4003e54	          0x83e0f8	                     and eax, 0xfffffff8	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4003e57	          0x83c803	                               or eax, 3	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4003e5a	    0x880500000000	               mov byte [0x04003e60], al	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4003e60	            0xeb42	                           jmp 0x4003ea4	      3629	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_7
0x4003e62	          0x8b45fc	                mov eax, dword [rbp - 4]	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4003e65	        0x4883c00e	                            add rax, 0xe	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4003e69	     0xfb604c50000	                 movzx eax, byte [rax*8]	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4003e71	          0xc0e803	                               shr al, 3	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4003e74	          0x83e001	                              and eax, 1	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4003e77	            0x84c0	                             test al, al	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4003e79	            0x7415	                            je 0x4003e90	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4003e7b	     0xfb605000000	           movzx eax, byte [0x04003e82] 	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4003e82	          0x83e0f8	                     and eax, 0xfffffff8	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4003e85	          0x83c802	                               or eax, 2	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4003e88	    0x880500000000	               mov byte [0x04003e8e], al	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4003e8e	            0xeb14	                           jmp 0x4003ea4	      3629	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_7
0x4003e90	              0x90	                                     nop	      3628	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_7
0x4003e91	        0x8345fc01	                  add dword [rbp - 4], 1	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x4003e95	    0x8b0500000000	            mov eax, dword [0x04003e9b] 	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x4003e9b	          0x3b45fc	                cmp eax, dword [rbp - 4]	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x4003e9e	     0xf870dffffff	                            ja 0x4003db1	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x4003ea4	     0xfb605000000	           movzx eax, byte [0x04003eab] 	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003eab	          0x83e007	                              and eax, 7	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003eae	           0xfb6c0	                           movzx eax, al	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003eb1	          0x83f802	                              cmp eax, 2	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003eb4	            0x7424	                            je 0x4003eda	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003eb6	          0x83f802	                              cmp eax, 2	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003eb9	            0x7f07	                            jg 0x4003ec2	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ebb	          0x83f801	                              cmp eax, 1	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ebe	            0x742c	                            je 0x4003eec	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ec0	            0xeb33	                           jmp 0x4003ef5	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ec2	          0x83f803	                              cmp eax, 3	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ec5	            0x741c	                            je 0x4003ee3	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ec7	          0x83f804	                              cmp eax, 4	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003eca	            0x7529	                           jne 0x4003ef5	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ecc	    0x8b0500000000	            mov eax, dword [0x04003ed2] 	      3636	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ed2	          0xc1e005	                              shl eax, 5	      3636	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ed5	          0x8945f8	                mov dword [rbp - 8], eax	      3636	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ed8	            0xeb2f	                           jmp 0x4003f09	      3637	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003eda	    0xc745f8000000	                  mov dword [rbp - 8], 0	      3639	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ee1	            0xeb26	                           jmp 0x4003f09	      3640	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ee3	    0xc745f8200000	               mov dword [rbp - 8], 0x20	      3642	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003eea	            0xeb1d	                           jmp 0x4003f09	      3643	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003eec	    0xc745f8400000	               mov dword [rbp - 8], 0x40	      3645	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ef3	            0xeb14	                           jmp 0x4003f09	      3646	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4003ef5	      0xba00000000	                              mov edx, 0	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x4003efa	      0xbe400e0000	                          mov esi, 0xe40	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x4003eff	      0xbf00000000	                              mov edi, 0	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x4003f04	      0xe800000000	                          call 0x4003f09	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x4003f09	     0xfb615000000	           movzx edx, byte [0x04003f10] 	      3651	tc-i386.c	FUNCTION_64	IF_13
0x4003f10	          0x8b45f8	                mov eax, dword [rbp - 8]	      3651	tc-i386.c	FUNCTION_64	IF_13
0x4003f13	             0x9d0	                             or eax, edx	      3651	tc-i386.c	FUNCTION_64	IF_13
0x4003f15	    0x880500000000	               mov byte [0x04003f1b], al	      3651	tc-i386.c	FUNCTION_64	IF_13
0x4003f1b	    0x488b05000000	            mov rax, qword [0x04003f22] 	      3653	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x4003f22	          0x4885c0	                           test rax, rax	      3653	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x4003f25	            0x745b	                            je 0x4003f82	      3653	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x4003f27	     0xfb605000000	           movzx eax, byte [0x04003f2e] 	      3654	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x4003f2e	          0x83c810	                            or eax, 0x10	      3654	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x4003f31	    0x880500000000	               mov byte [0x04003f37], al	      3654	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x4003f37	            0xeb49	                           jmp 0x4003f82	      3654	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x4003f39	    0x488b05000000	            mov rax, qword [0x04003f40] 	      3658	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f40	            0x8b00	                    mov eax, dword [rax]	      3658	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f42	          0x83f804	                              cmp eax, 4	      3658	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f45	            0x7420	                            je 0x4003f67	      3658	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f47	     0xfb615000000	           movzx edx, byte [0x04003f4e] 	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f4e	    0x488b05000000	            mov rax, qword [0x04003f55] 	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f55	            0x8b00	                    mov eax, dword [rax]	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f57	          0xc1e005	                              shl eax, 5	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f5a	             0x9d0	                             or eax, edx	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f5c	          0x83c810	                            or eax, 0x10	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f5f	    0x880500000000	               mov byte [0x04003f65], al	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f65	            0xeb1b	                           jmp 0x4003f82	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x4003f67	     0xfb615000000	           movzx edx, byte [0x04003f6e] 	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x4003f6e	    0x8b0500000000	            mov eax, dword [0x04003f74] 	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x4003f74	          0xc1e005	                              shl eax, 5	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x4003f77	             0x9d0	                             or eax, edx	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x4003f79	          0x83c810	                            or eax, 0x10	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x4003f7c	    0x880500000000	               mov byte [0x04003f82], al	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x4003f82	    0x488b05000000	            mov rax, qword [0x04003f89] 	      3664	tc-i386.c	FUNCTION_64	IF_21
0x4003f89	          0x4885c0	                           test rax, rax	      3664	tc-i386.c	FUNCTION_64	IF_21
0x4003f8c	            0x742c	                            je 0x4003fba	      3664	tc-i386.c	FUNCTION_64	IF_21
0x4003f8e	    0x488b05000000	            mov rax, qword [0x04003f95] 	      3664	tc-i386.c	FUNCTION_64	IF_21
0x4003f95	          0x488b00	                    mov rax, qword [rax]	      3664	tc-i386.c	FUNCTION_64	IF_21
0x4003f98	          0x4885c0	                           test rax, rax	      3664	tc-i386.c	FUNCTION_64	IF_21
0x4003f9b	            0x741d	                            je 0x4003fba	      3664	tc-i386.c	FUNCTION_64	IF_21
0x4003f9d	     0xfb615000000	           movzx edx, byte [0x04003fa4] 	      3665	tc-i386.c	FUNCTION_64	IF_21
0x4003fa4	    0x488b05000000	            mov rax, qword [0x04003fab] 	      3665	tc-i386.c	FUNCTION_64	IF_21
0x4003fab	          0x488b00	                    mov rax, qword [rax]	      3665	tc-i386.c	FUNCTION_64	IF_21
0x4003fae	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      3665	tc-i386.c	FUNCTION_64	IF_21
0x4003fb2	             0x9d0	                             or eax, edx	      3665	tc-i386.c	FUNCTION_64	IF_21
0x4003fb4	    0x880500000000	               mov byte [0x04003fba], al	      3665	tc-i386.c	FUNCTION_64	IF_21
0x4003fba	              0x90	                                     nop	      3666	tc-i386.c	FUNCTION_64
0x4003fbb	              0xc9	                                   leave	      3666	tc-i386.c	FUNCTION_64
0x4003fbc	              0xc3	                                     ret	      3666	tc-i386.c	FUNCTION_64
md_assemble	CALL,55:FOR,5:WHILE,0:functions,0:SWITCH,0:IF,46:ELSE,3:DO,0	723
0x4004a0e	              0x55	                                push rbp	      3965	tc-i386.c	FUNCTION_68
0x4004a0f	          0x4889e5	                            mov rbp, rsp	      3965	tc-i386.c	FUNCTION_68
0x4004a12	            0x4154	                                push r12	      3965	tc-i386.c	FUNCTION_68
0x4004a14	              0x53	                                push rbx	      3965	tc-i386.c	FUNCTION_68
0x4004a15	        0x4883ec50	                           sub rsp, 0x50	      3965	tc-i386.c	FUNCTION_68
0x4004a19	        0x48897da8	             mov qword [rbp - 0x58], rdi	      3965	tc-i386.c	FUNCTION_68
0x4004a1d	    0x64488b042528	                mov rax, qword fs:[0x28]	      3965	tc-i386.c	FUNCTION_68
0x4004a26	        0x488945e8	             mov qword [rbp - 0x18], rax	      3965	tc-i386.c	FUNCTION_68
0x4004a2a	            0x31c0	                            xor eax, eax	      3965	tc-i386.c	FUNCTION_68
0x4004a2c	      0xbab8010000	                          mov edx, 0x1b8	      3971	tc-i386.c	FUNCTION_68	CALL_1
0x4004a31	      0xbe00000000	                              mov esi, 0	      3971	tc-i386.c	FUNCTION_68	CALL_1
0x4004a36	      0xbf00000000	                              mov edi, 0	      3971	tc-i386.c	FUNCTION_68	CALL_1
0x4004a3b	      0xe800000000	                          call 0x4004a40	      3971	tc-i386.c	FUNCTION_68	CALL_1
0x4004a40	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      3972	tc-i386.c	FUNCTION_68	FOR_1
0x4004a47	            0xeb16	                           jmp 0x4004a5f	      3972	tc-i386.c	FUNCTION_68	FOR_1
0x4004a49	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x4004a4c	        0x4883c034	                           add rax, 0x34	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x4004a50	    0xc70485000000	                 mov dword [rax*4], 0x47	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x4004a5b	        0x8345bc01	               add dword [rbp - 0x44], 1	      3972	tc-i386.c	FUNCTION_68	FOR_1
0x4004a5f	        0x837dbc04	               cmp dword [rbp - 0x44], 4	      3972	tc-i386.c	FUNCTION_68	FOR_1
0x4004a63	            0x76e4	                           jbe 0x4004a49	      3972	tc-i386.c	FUNCTION_68	FOR_1
0x4004a65	      0xba40000000	                           mov edx, 0x40	      3974	tc-i386.c	FUNCTION_68	CALL_2
0x4004a6a	      0xbe00000000	                              mov esi, 0	      3974	tc-i386.c	FUNCTION_68	CALL_2
0x4004a6f	      0xbf00000000	                              mov edi, 0	      3974	tc-i386.c	FUNCTION_68	CALL_2
0x4004a74	      0xe800000000	                          call 0x4004a79	      3974	tc-i386.c	FUNCTION_68	CALL_2
0x4004a79	      0xba40000000	                           mov edx, 0x40	      3975	tc-i386.c	FUNCTION_68	CALL_3
0x4004a7e	      0xbe00000000	                              mov esi, 0	      3975	tc-i386.c	FUNCTION_68	CALL_3
0x4004a83	      0xbf00000000	                              mov edi, 0	      3975	tc-i386.c	FUNCTION_68	CALL_3
0x4004a88	      0xe800000000	                          call 0x4004a8d	      3975	tc-i386.c	FUNCTION_68	CALL_3
0x4004a8d	    0x48c705000000	               mov qword [0x04004a98], 0	      3976	tc-i386.c	FUNCTION_68
0x4004a98	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x4004a9c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x4004aa0	          0x4889d6	                            mov rsi, rdx	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x4004aa3	          0x4889c7	                            mov rdi, rax	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x4004aa6	      0xe89c0a0000	                     call sym.parse_insn	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x4004aab	        0x488945a8	             mov qword [rbp - 0x58], rax	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x4004aaf	      0x48837da800	               cmp qword [rbp - 0x58], 0	      3983	tc-i386.c	FUNCTION_68	IF_1
0x4004ab4	     0xf845a0a0000	                            je 0x4005514	      3983	tc-i386.c	FUNCTION_68	IF_1
0x4004aba	     0xfb605000000	           movzx eax, byte [0x04004ac1] 	      3985	tc-i386.c	FUNCTION_68
0x4004ac1	          0x8845bb	               mov byte [rbp - 0x45], al	      3985	tc-i386.c	FUNCTION_68
0x4004ac4	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3987	tc-i386.c	FUNCTION_68	CALL_5
0x4004ac8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3987	tc-i386.c	FUNCTION_68	CALL_5
0x4004acc	          0x4889d6	                            mov rsi, rdx	      3987	tc-i386.c	FUNCTION_68	CALL_5
0x4004acf	          0x4889c7	                            mov rdi, rax	      3987	tc-i386.c	FUNCTION_68	CALL_5
0x4004ad2	      0xe86f130000	                 call sym.parse_operands	      3987	tc-i386.c	FUNCTION_68	CALL_5
0x4004ad7	        0x488945a8	             mov qword [rbp - 0x58], rax	      3987	tc-i386.c	FUNCTION_68	CALL_5
0x4004adb	    0xc70500000000	     mov dword [0x04004ae5], 0xffffffff 	      3988	tc-i386.c	FUNCTION_68
0x4004ae5	    0x488b05000000	            mov rax, qword [0x04004aec] 	      3989	tc-i386.c	FUNCTION_68	CALL_6
0x4004aec	          0x4889c7	                            mov rdi, rax	      3989	tc-i386.c	FUNCTION_68	CALL_6
0x4004aef	      0xe800000000	                          call 0x4004af4	      3989	tc-i386.c	FUNCTION_68	CALL_6
0x4004af4	    0x48c705000000	               mov qword [0x04004aff], 0	      3990	tc-i386.c	FUNCTION_68
0x4004aff	      0x48837da800	               cmp qword [rbp - 0x58], 0	      3991	tc-i386.c	FUNCTION_68	IF_2
0x4004b04	     0xf840d0a0000	                            je 0x4005517	      3991	tc-i386.c	FUNCTION_68	IF_2
0x4004b0a	    0x8b0500000000	            mov eax, dword [0x04004b10] 	      4001	tc-i386.c	FUNCTION_68	IF_3
0x4004b10	            0x85c0	                           test eax, eax	      4001	tc-i386.c	FUNCTION_68	IF_3
0x4004b12	            0x7464	                            je 0x4004b78	      4001	tc-i386.c	FUNCTION_68	IF_3
0x4004b14	    0x8b0500000000	            mov eax, dword [0x04004b1a] 	      4002	tc-i386.c	FUNCTION_68	IF_3
0x4004b1a	          0x83f801	                              cmp eax, 1	      4002	tc-i386.c	FUNCTION_68	IF_3
0x4004b1d	            0x7659	                           jbe 0x4004b78	      4002	tc-i386.c	FUNCTION_68	IF_3
0x4004b1f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x4004b23	      0xbe00000000	                              mov esi, 0	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x4004b28	          0x4889c7	                            mov rdi, rax	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x4004b2b	      0xe800000000	                          call 0x4004b30	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x4004b30	            0x85c0	                           test eax, eax	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x4004b32	            0x7444	                            je 0x4004b78	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x4004b34	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x4004b38	      0xbe00000000	                              mov esi, 0	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x4004b3d	          0x4889c7	                            mov rdi, rax	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x4004b40	      0xe800000000	                          call 0x4004b45	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x4004b45	            0x85c0	                           test eax, eax	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x4004b47	            0x742f	                            je 0x4004b78	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x4004b49	      0xbe01000000	                              mov esi, 1	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x4004b4e	    0x488b3d000000	            mov rdi, qword [0x04004b55] 	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x4004b55	      0xe8d2bfffff	             call sym.operand_type_check	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x4004b5a	            0x85c0	                           test eax, eax	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x4004b5c	            0x7415	                            je 0x4004b73	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x4004b5e	      0xbe01000000	                              mov esi, 1	      4006	tc-i386.c	FUNCTION_68	IF_3	CALL_10
0x4004b63	    0x488b3d000000	            mov rdi, qword [0x04004b6a] 	      4006	tc-i386.c	FUNCTION_68	IF_3	CALL_10
0x4004b6a	      0xe8bdbfffff	             call sym.operand_type_check	      4006	tc-i386.c	FUNCTION_68	IF_3	CALL_10
0x4004b6f	            0x85c0	                           test eax, eax	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x4004b71	            0x7505	                           jne 0x4004b78	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x4004b73	      0xe83c180000	                  call sym.swap_operands	      4007	tc-i386.c	FUNCTION_68	CALL_11
0x4004b78	    0x8b0500000000	            mov eax, dword [0x04004b7e] 	      4011	tc-i386.c	FUNCTION_68	IF_4
0x4004b7e	          0x83f802	                              cmp eax, 2	      4011	tc-i386.c	FUNCTION_68	IF_4
0x4004b81	            0x7539	                           jne 0x4004bbc	      4011	tc-i386.c	FUNCTION_68	IF_4
0x4004b83	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x4004b87	      0xbe00000000	                              mov esi, 0	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x4004b8c	          0x4889c7	                            mov rdi, rax	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x4004b8f	      0xe800000000	                          call 0x4004b94	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x4004b94	            0x85c0	                           test eax, eax	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x4004b96	            0x7415	                            je 0x4004bad	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x4004b98	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x4004b9c	      0xbe00000000	                              mov esi, 0	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x4004ba1	          0x4889c7	                            mov rdi, rax	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x4004ba4	      0xe800000000	                          call 0x4004ba9	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x4004ba9	            0x85c0	                           test eax, eax	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x4004bab	            0x750f	                           jne 0x4004bbc	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x4004bad	      0xbe01000000	                              mov esi, 1	      4014	tc-i386.c	FUNCTION_68	CALL_14
0x4004bb2	      0xbf00000000	                              mov edi, 0	      4014	tc-i386.c	FUNCTION_68	CALL_14
0x4004bb7	      0xe813160000	                call sym.swap_2_operands	      4014	tc-i386.c	FUNCTION_68	CALL_14
0x4004bbc	    0x8b0500000000	            mov eax, dword [0x04004bc2] 	      4016	tc-i386.c	FUNCTION_68	IF_5
0x4004bc2	            0x85c0	                           test eax, eax	      4016	tc-i386.c	FUNCTION_68	IF_5
0x4004bc4	            0x7405	                            je 0x4004bcb	      4016	tc-i386.c	FUNCTION_68	IF_5
0x4004bc6	      0xe879180000	                   call sym.optimize_imm	      4017	tc-i386.c	FUNCTION_68	CALL_15
0x4004bcb	    0x8b0500000000	            mov eax, dword [0x04004bd1] 	      4021	tc-i386.c	FUNCTION_68	IF_6
0x4004bd1	            0x85c0	                           test eax, eax	      4021	tc-i386.c	FUNCTION_68	IF_6
0x4004bd3	            0x7430	                            je 0x4004c05	      4021	tc-i386.c	FUNCTION_68	IF_6
0x4004bd5	    0x8b0500000000	            mov eax, dword [0x04004bdb] 	      4022	tc-i386.c	FUNCTION_68	IF_6
0x4004bdb	          0x83f802	                              cmp eax, 2	      4022	tc-i386.c	FUNCTION_68	IF_6
0x4004bde	            0x7425	                            je 0x4004c05	      4022	tc-i386.c	FUNCTION_68	IF_6
0x4004be0	    0x8b0500000000	            mov eax, dword [0x04004be6] 	      4023	tc-i386.c	FUNCTION_68	IF_6
0x4004be6	          0x83f802	                              cmp eax, 2	      4023	tc-i386.c	FUNCTION_68	IF_6
0x4004be9	            0x7515	                           jne 0x4004c00	      4023	tc-i386.c	FUNCTION_68	IF_6
0x4004beb	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x4004bef	      0xbe00000000	                              mov esi, 0	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x4004bf4	          0x4889c7	                            mov rdi, rax	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x4004bf7	      0xe800000000	                          call 0x4004bfc	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x4004bfc	            0x85c0	                           test eax, eax	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x4004bfe	            0x7405	                            je 0x4004c05	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x4004c00	      0xe83f1e0000	                  call sym.optimize_disp	      4025	tc-i386.c	FUNCTION_68	CALL_17
0x4004c05	         0xfbe45bb	            movsx eax, byte [rbp - 0x45]	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x4004c09	            0x89c7	                            mov edi, eax	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x4004c0b	      0xe86b2d0000	                 call sym.match_template	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x4004c10	        0x488945c8	             mov qword [rbp - 0x38], rax	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x4004c14	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x4004c19	     0xf84fb080000	                            je 0x400551a	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x4004c1f	    0x8b0500000000	            mov eax, dword [0x04004c25] 	      4034	tc-i386.c	FUNCTION_68	IF_8
0x4004c25	            0x85c0	                           test eax, eax	      4034	tc-i386.c	FUNCTION_68	IF_8
0x4004c27	     0xf84da000000	                            je 0x4004d07	      4034	tc-i386.c	FUNCTION_68	IF_8
0x4004c2d	     0xfb605000000	           movzx eax, byte [0x04004c34] 	      4035	tc-i386.c	FUNCTION_68	IF_8
0x4004c34	          0x83e080	                     and eax, 0xffffff80	      4035	tc-i386.c	FUNCTION_68	IF_8
0x4004c37	            0x84c0	                             test al, al	      4035	tc-i386.c	FUNCTION_68	IF_8
0x4004c39	     0xf85c8000000	                           jne 0x4004d07	      4035	tc-i386.c	FUNCTION_68	IF_8
0x4004c3f	     0xfb605000000	           movzx eax, byte [0x04004c46] 	      4036	tc-i386.c	FUNCTION_68	IF_8
0x4004c46	          0x83e020	                           and eax, 0x20	      4036	tc-i386.c	FUNCTION_68	IF_8
0x4004c49	            0x84c0	                             test al, al	      4036	tc-i386.c	FUNCTION_68	IF_8
0x4004c4b	     0xf85b6000000	                           jne 0x4004d07	      4036	tc-i386.c	FUNCTION_68	IF_8
0x4004c51	     0xfb605000000	           movzx eax, byte [0x04004c58] 	      4037	tc-i386.c	FUNCTION_68	IF_8
0x4004c58	          0x83e080	                     and eax, 0xffffff80	      4037	tc-i386.c	FUNCTION_68	IF_8
0x4004c5b	            0x84c0	                             test al, al	      4037	tc-i386.c	FUNCTION_68	IF_8
0x4004c5d	            0x7570	                           jne 0x4004ccf	      4037	tc-i386.c	FUNCTION_68	IF_8
0x4004c5f	     0xfb605000000	           movzx eax, byte [0x04004c66] 	      4038	tc-i386.c	FUNCTION_68	IF_8
0x4004c66	          0x83e001	                              and eax, 1	      4038	tc-i386.c	FUNCTION_68	IF_8
0x4004c69	            0x84c0	                             test al, al	      4038	tc-i386.c	FUNCTION_68	IF_8
0x4004c6b	            0x7562	                           jne 0x4004ccf	      4038	tc-i386.c	FUNCTION_68	IF_8
0x4004c6d	     0xfb605000000	           movzx eax, byte [0x04004c74] 	      4039	tc-i386.c	FUNCTION_68	IF_8
0x4004c74	          0x83e008	                              and eax, 8	      4039	tc-i386.c	FUNCTION_68	IF_8
0x4004c77	            0x84c0	                             test al, al	      4039	tc-i386.c	FUNCTION_68	IF_8
0x4004c79	            0x7554	                           jne 0x4004ccf	      4039	tc-i386.c	FUNCTION_68	IF_8
0x4004c7b	     0xfb605000000	           movzx eax, byte [0x04004c82] 	      4040	tc-i386.c	FUNCTION_68	IF_8
0x4004c82	          0x83e001	                              and eax, 1	      4040	tc-i386.c	FUNCTION_68	IF_8
0x4004c85	            0x84c0	                             test al, al	      4040	tc-i386.c	FUNCTION_68	IF_8
0x4004c87	            0x7546	                           jne 0x4004ccf	      4040	tc-i386.c	FUNCTION_68	IF_8
0x4004c89	     0xfb605000000	           movzx eax, byte [0x04004c90] 	      4041	tc-i386.c	FUNCTION_68	IF_8
0x4004c90	          0x83e008	                              and eax, 8	      4041	tc-i386.c	FUNCTION_68	IF_8
0x4004c93	            0x84c0	                             test al, al	      4041	tc-i386.c	FUNCTION_68	IF_8
0x4004c95	            0x7538	                           jne 0x4004ccf	      4041	tc-i386.c	FUNCTION_68	IF_8
0x4004c97	     0xfb605000000	           movzx eax, byte [0x04004c9e] 	      4042	tc-i386.c	FUNCTION_68	IF_8
0x4004c9e	          0x83e010	                           and eax, 0x10	      4042	tc-i386.c	FUNCTION_68	IF_8
0x4004ca1	            0x84c0	                             test al, al	      4042	tc-i386.c	FUNCTION_68	IF_8
0x4004ca3	            0x752a	                           jne 0x4004ccf	      4042	tc-i386.c	FUNCTION_68	IF_8
0x4004ca5	     0xfb605000000	           movzx eax, byte [0x04004cac] 	      4043	tc-i386.c	FUNCTION_68	IF_8
0x4004cac	          0x83e010	                           and eax, 0x10	      4043	tc-i386.c	FUNCTION_68	IF_8
0x4004caf	            0x84c0	                             test al, al	      4043	tc-i386.c	FUNCTION_68	IF_8
0x4004cb1	            0x751c	                           jne 0x4004ccf	      4043	tc-i386.c	FUNCTION_68	IF_8
0x4004cb3	     0xfb605000000	           movzx eax, byte [0x04004cba] 	      4044	tc-i386.c	FUNCTION_68	IF_8
0x4004cba	          0x83e008	                              and eax, 8	      4044	tc-i386.c	FUNCTION_68	IF_8
0x4004cbd	            0x84c0	                             test al, al	      4044	tc-i386.c	FUNCTION_68	IF_8
0x4004cbf	            0x750e	                           jne 0x4004ccf	      4044	tc-i386.c	FUNCTION_68	IF_8
0x4004cc1	     0xfb605000000	           movzx eax, byte [0x04004cc8] 	      4045	tc-i386.c	FUNCTION_68	IF_8
0x4004cc8	          0x83e020	                           and eax, 0x20	      4045	tc-i386.c	FUNCTION_68	IF_8
0x4004ccb	            0x84c0	                             test al, al	      4045	tc-i386.c	FUNCTION_68	IF_8
0x4004ccd	            0x7438	                            je 0x4004d07	      4045	tc-i386.c	FUNCTION_68	IF_8
0x4004ccf	    0x8b0500000000	            mov eax, dword [0x04004cd5] 	      4047	tc-i386.c	FUNCTION_68	IF_8
0x4004cd5	          0x83f801	                              cmp eax, 1	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x4004cd8	            0x7508	                           jne 0x4004ce2	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x4004cda	    0x41bc00000000	                             mov r12d, 0	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x4004ce0	            0xeb06	                           jmp 0x4004ce8	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x4004ce2	    0x41bc00000000	                             mov r12d, 0	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x4004ce8	    0x488b1d000000	            mov rbx, qword [0x04004cef] 	      4047	tc-i386.c	FUNCTION_68	IF_8
0x4004cef	      0xbf00000000	                              mov edi, 0	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x4004cf4	      0xe800000000	                          call 0x4004cf9	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x4004cf9	          0x4889de	                            mov rsi, rbx	      4047	tc-i386.c	FUNCTION_68	IF_8
0x4004cfc	          0x4889c7	                            mov rdi, rax	      4047	tc-i386.c	FUNCTION_68	IF_8
0x4004cff	      0xb800000000	                              mov eax, 0	      4047	tc-i386.c	FUNCTION_68	IF_8
0x4004d04	          0x41ffd4	                                call r12	      4047	tc-i386.c	FUNCTION_68	IF_8
0x4004d07	    0x8b0500000000	            mov eax, dword [0x04004d0d] 	      4056	tc-i386.c	FUNCTION_68	IF_9
0x4004d0d	          0x83e0f6	                     and eax, 0xfffffff6	      4056	tc-i386.c	FUNCTION_68	IF_9
0x4004d10	      0x3db60f0000	                          cmp eax, 0xfb6	      4056	tc-i386.c	FUNCTION_68	IF_9
0x4004d15	            0x7548	                           jne 0x4004d5f	      4056	tc-i386.c	FUNCTION_68	IF_9
0x4004d17	    0x8b0500000000	            mov eax, dword [0x04004d1d] 	      4060	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x4004d1d	          0x83f802	                              cmp eax, 2	      4060	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x4004d20	            0x7436	                            je 0x4004d58	      4060	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x4004d22	     0xfb605000000	           movzx eax, byte [0x04004d29] 	      4061	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x4004d29	            0x84c0	                             test al, al	      4061	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x4004d2b	            0x752b	                           jne 0x4004d58	      4061	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x4004d2d	    0x8b0500000000	            mov eax, dword [0x04004d33] 	      4062	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x4004d33	            0x85c0	                           test eax, eax	      4062	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x4004d35	            0x7421	                            je 0x4004d58	      4062	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x4004d37	    0x488b1d000000	            mov rbx, qword [0x04004d3e] 	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x4004d3e	      0xbf00000000	                              mov edi, 0	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x4004d43	      0xe800000000	                          call 0x4004d48	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x4004d48	          0x4889de	                            mov rsi, rbx	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x4004d4b	          0x4889c7	                            mov rdi, rax	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x4004d4e	      0xb800000000	                              mov eax, 0	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x4004d53	      0xe800000000	                          call 0x4004d58	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x4004d58	    0xc60500000000	                mov byte [0x04004d5f], 0	      4065	tc-i386.c	FUNCTION_68	IF_9
0x4004d5f	     0xfb605000000	           movzx eax, byte [0x04004d66] 	      4068	tc-i386.c	FUNCTION_68	IF_11
0x4004d66	          0x83e080	                     and eax, 0xffffff80	      4068	tc-i386.c	FUNCTION_68	IF_11
0x4004d69	            0x84c0	                             test al, al	      4068	tc-i386.c	FUNCTION_68	IF_11
0x4004d6b	            0x7412	                            je 0x4004d7f	      4068	tc-i386.c	FUNCTION_68	IF_11
0x4004d6d	      0xbf9b000000	                           mov edi, 0x9b	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x4004d72	      0xe86acdffff	                     call sym.add_prefix	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x4004d77	            0x85c0	                           test eax, eax	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x4004d79	     0xf849e070000	                            je 0x400551d	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x4004d7f	    0x488b05000000	            mov rax, qword [0x04004d86] 	      4073	tc-i386.c	FUNCTION_68	IF_13
0x4004d86	          0x4885c0	                           test rax, rax	      4073	tc-i386.c	FUNCTION_68	IF_13
0x4004d89	            0x743e	                            je 0x4004dc9	      4073	tc-i386.c	FUNCTION_68	IF_13
0x4004d8b	     0xfb605000000	           movzx eax, byte [0x04004d92] 	      4073	tc-i386.c	FUNCTION_68	IF_13
0x4004d92	          0x83e001	                              and eax, 1	      4073	tc-i386.c	FUNCTION_68	IF_13
0x4004d95	            0x84c0	                             test al, al	      4073	tc-i386.c	FUNCTION_68	IF_13
0x4004d97	            0x7530	                           jne 0x4004dc9	      4073	tc-i386.c	FUNCTION_68	IF_13
0x4004d99	    0x4c8b25000000	            mov r12, qword [0x04004da0] 	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x4004da0	    0x488b1d000000	            mov rbx, qword [0x04004da7] 	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x4004da7	      0xbf00000000	                              mov edi, 0	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x4004dac	      0xe800000000	                          call 0x4004db1	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x4004db1	          0x4c89e2	                            mov rdx, r12	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x4004db4	          0x4889de	                            mov rsi, rbx	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x4004db7	          0x4889c7	                            mov rdi, rax	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x4004dba	      0xb800000000	                              mov eax, 0	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x4004dbf	      0xe800000000	                          call 0x4004dc4	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x4004dc4	      0xe961070000	                           jmp 0x400552a	      4077	tc-i386.c	FUNCTION_68	IF_13
0x4004dc9	     0xfb605000000	           movzx eax, byte [0x04004dd0] 	      4082	tc-i386.c	FUNCTION_68	IF_14
0x4004dd0	            0x84c0	                             test al, al	      4082	tc-i386.c	FUNCTION_68	IF_14
0x4004dd2	            0x7469	                            je 0x4004e3d	      4082	tc-i386.c	FUNCTION_68	IF_14
0x4004dd4	     0xfb605000000	           movzx eax, byte [0x04004ddb] 	      4083	tc-i386.c	FUNCTION_68	IF_14
0x4004ddb	          0x83e008	                              and eax, 8	      4083	tc-i386.c	FUNCTION_68	IF_14
0x4004dde	            0x84c0	                             test al, al	      4083	tc-i386.c	FUNCTION_68	IF_14
0x4004de0	            0x743f	                            je 0x4004e21	      4083	tc-i386.c	FUNCTION_68	IF_14
0x4004de2	    0x8b0500000000	            mov eax, dword [0x04004de8] 	      4084	tc-i386.c	FUNCTION_68	IF_14
0x4004de8	            0x85c0	                           test eax, eax	      4084	tc-i386.c	FUNCTION_68	IF_14
0x4004dea	            0x7435	                            je 0x4004e21	      4084	tc-i386.c	FUNCTION_68	IF_14
0x4004dec	    0x8b0500000000	            mov eax, dword [0x04004df2] 	      4085	tc-i386.c	FUNCTION_68	IF_14
0x4004df2	      0x3d86000000	                           cmp eax, 0x86	      4085	tc-i386.c	FUNCTION_68	IF_14
0x4004df7	            0x7444	                            je 0x4004e3d	      4085	tc-i386.c	FUNCTION_68	IF_14
0x4004df9	    0x8b0500000000	            mov eax, dword [0x04004dff] 	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x4004dff	          0x83e801	                              sub eax, 1	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x4004e02	            0x89c0	                            mov eax, eax	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x4004e04	        0x4883c00e	                            add rax, 0xe	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x4004e08	    0x488b04c50000	                  mov rax, qword [rax*8]	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x4004e10	      0xbe03000000	                              mov esi, 3	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x4004e15	          0x4889c7	                            mov rdi, rax	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x4004e18	      0xe80fbdffff	             call sym.operand_type_check	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x4004e1d	            0x85c0	                           test eax, eax	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x4004e1f	            0x751c	                           jne 0x4004e3d	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x4004e21	      0xbf00000000	                              mov edi, 0	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x4004e26	      0xe800000000	                          call 0x4004e2b	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x4004e2b	          0x4889c7	                            mov rdi, rax	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x4004e2e	      0xb800000000	                              mov eax, 0	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x4004e33	      0xe800000000	                          call 0x4004e38	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x4004e38	      0xe9ed060000	                           jmp 0x400552a	      4089	tc-i386.c	FUNCTION_68	IF_14
0x4004e3d	    0x488b05000000	            mov rax, qword [0x04004e44] 	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x4004e44	          0x4885c0	                           test rax, rax	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x4004e47	            0x740d	                            je 0x4004e56	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x4004e49	      0xe832f4ffff	                      call sym.check_hle	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x4004e4e	            0x85c0	                           test eax, eax	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x4004e50	     0xf84ca060000	                            je 0x4005520	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x4004e56	    0x488b05000000	            mov rax, qword [0x04004e5d] 	      4097	tc-i386.c	FUNCTION_68	IF_16
0x4004e5d	          0x4885c0	                           test rax, rax	      4097	tc-i386.c	FUNCTION_68	IF_16
0x4004e60	            0x7425	                            je 0x4004e87	      4097	tc-i386.c	FUNCTION_68	IF_16
0x4004e62	     0xfb605000000	           movzx eax, byte [0x04004e69] 	      4097	tc-i386.c	FUNCTION_68	IF_16
0x4004e69	          0x83e002	                              and eax, 2	      4097	tc-i386.c	FUNCTION_68	IF_16
0x4004e6c	            0x84c0	                             test al, al	      4097	tc-i386.c	FUNCTION_68	IF_16
0x4004e6e	            0x7517	                           jne 0x4004e87	      4097	tc-i386.c	FUNCTION_68	IF_16
0x4004e70	      0xbf00000000	                              mov edi, 0	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x4004e75	      0xe800000000	                          call 0x4004e7a	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x4004e7a	          0x4889c7	                            mov rdi, rax	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x4004e7d	      0xb800000000	                              mov eax, 0	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x4004e82	      0xe800000000	                          call 0x4004e87	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x4004e87	    0x488b05000000	            mov rax, qword [0x04004e8e] 	      4101	tc-i386.c	FUNCTION_68	IF_17
0x4004e8e	          0x4885c0	                           test rax, rax	      4101	tc-i386.c	FUNCTION_68	IF_17
0x4004e91	            0x7425	                            je 0x4004eb8	      4101	tc-i386.c	FUNCTION_68	IF_17
0x4004e93	     0xfb605000000	           movzx eax, byte [0x04004e9a] 	      4101	tc-i386.c	FUNCTION_68	IF_17
0x4004e9a	          0x83e004	                              and eax, 4	      4101	tc-i386.c	FUNCTION_68	IF_17
0x4004e9d	            0x84c0	                             test al, al	      4101	tc-i386.c	FUNCTION_68	IF_17
0x4004e9f	            0x7517	                           jne 0x4004eb8	      4101	tc-i386.c	FUNCTION_68	IF_17
0x4004ea1	      0xbf00000000	                              mov edi, 0	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x4004ea6	      0xe800000000	                          call 0x4004eab	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x4004eab	          0x4889c7	                            mov rdi, rax	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x4004eae	      0xb800000000	                              mov eax, 0	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x4004eb3	      0xe800000000	                          call 0x4004eb8	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x4004eb8	     0xfb605000000	           movzx eax, byte [0x04004ebf] 	      4104	tc-i386.c	FUNCTION_68	IF_18
0x4004ebf	          0x83e001	                              and eax, 1	      4104	tc-i386.c	FUNCTION_68	IF_18
0x4004ec2	            0x84c0	                             test al, al	      4104	tc-i386.c	FUNCTION_68	IF_18
0x4004ec4	     0xf8487000000	                            je 0x4004f51	      4104	tc-i386.c	FUNCTION_68	IF_18
0x4004eca	    0x8b0500000000	            mov eax, dword [0x04004ed0] 	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x4004ed0	          0x83f802	                              cmp eax, 2	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x4004ed3	            0x7524	                           jne 0x4004ef9	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x4004ed5	     0xfb605000000	           movzx eax, byte [0x04004edc] 	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x4004edc	            0x84c0	                             test al, al	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x4004ede	            0x7419	                            je 0x4004ef9	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x4004ee0	      0xbf00000000	                              mov edi, 0	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x4004ee5	      0xe800000000	                          call 0x4004eea	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x4004eea	          0x4889c7	                            mov rdi, rax	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x4004eed	      0xb800000000	                              mov eax, 0	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x4004ef2	      0xe800000000	                          call 0x4004ef7	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x4004ef7	            0xeb58	                           jmp 0x4004f51	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x4004ef9	    0x8b0500000000	            mov eax, dword [0x04004eff] 	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004eff	          0x83f801	                              cmp eax, 1	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f02	            0x740e	                            je 0x4004f12	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f04	     0xfb605000000	           movzx eax, byte [0x04004f0b] 	      4109	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f0b	            0x84c0	                             test al, al	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f0d	           0xf95c0	                                setne al	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f10	            0xeb24	                           jmp 0x4004f36	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f12	    0x8b0500000000	            mov eax, dword [0x04004f18] 	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f18	            0x85c0	                           test eax, eax	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f1a	            0x7412	                            je 0x4004f2e	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f1c	     0xfb605000000	           movzx eax, byte [0x04004f23] 	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f23	            0x84c0	                             test al, al	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f25	            0x7507	                           jne 0x4004f2e	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f27	      0xb801000000	                              mov eax, 1	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f2c	            0xeb05	                           jmp 0x4004f33	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f2e	      0xb800000000	                              mov eax, 0	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f33	          0x83e001	                              and eax, 1	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f36	            0x84c0	                             test al, al	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f38	            0x7417	                            je 0x4004f51	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f3a	      0xbf00000000	                              mov edi, 0	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f3f	      0xe800000000	                          call 0x4004f44	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f44	          0x4889c7	                            mov rdi, rax	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f47	      0xb800000000	                              mov eax, 0	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f4c	      0xe800000000	                          call 0x4004f51	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x4004f51	    0x8b0500000000	            mov eax, dword [0x04004f57] 	      4115	tc-i386.c	FUNCTION_68	IF_21
0x4004f57	            0x85c0	                           test eax, eax	      4115	tc-i386.c	FUNCTION_68	IF_21
0x4004f59	            0x7423	                            je 0x4004f7e	      4115	tc-i386.c	FUNCTION_68	IF_21
0x4004f5b	     0xfb605000000	           movzx eax, byte [0x04004f62] 	      4116	tc-i386.c	FUNCTION_68	IF_21
0x4004f62	          0x83e002	                              and eax, 2	      4116	tc-i386.c	FUNCTION_68	IF_21
0x4004f65	            0x84c0	                             test al, al	      4116	tc-i386.c	FUNCTION_68	IF_21
0x4004f67	            0x7415	                            je 0x4004f7e	      4116	tc-i386.c	FUNCTION_68	IF_21
0x4004f69	     0xfb605000000	           movzx eax, byte [0x04004f70] 	      4117	tc-i386.c	FUNCTION_68	IF_21
0x4004f70	            0x84c0	                             test al, al	      4117	tc-i386.c	FUNCTION_68	IF_21
0x4004f72	            0x750a	                           jne 0x4004f7e	      4117	tc-i386.c	FUNCTION_68	IF_21
0x4004f74	      0xbff2000000	                           mov edi, 0xf2	      4118	tc-i386.c	FUNCTION_68	CALL_37
0x4004f79	      0xe863cbffff	                     call sym.add_prefix	      4118	tc-i386.c	FUNCTION_68	CALL_37
0x4004f7e	     0xfb605000000	           movzx eax, byte [0x04004f85] 	      4121	tc-i386.c	FUNCTION_68	IF_22
0x4004f85	          0x83e001	                              and eax, 1	      4121	tc-i386.c	FUNCTION_68	IF_22
0x4004f88	            0x84c0	                             test al, al	      4121	tc-i386.c	FUNCTION_68	IF_22
0x4004f8a	            0x7421	                            je 0x4004fad	      4121	tc-i386.c	FUNCTION_68	IF_22
0x4004f8c	    0x8b0500000000	            mov eax, dword [0x04004f92] 	      4121	tc-i386.c	FUNCTION_68	IF_22
0x4004f92	            0x85c0	                           test eax, eax	      4121	tc-i386.c	FUNCTION_68	IF_22
0x4004f94	            0x7417	                            je 0x4004fad	      4121	tc-i386.c	FUNCTION_68	IF_22
0x4004f96	      0xe8613c0000	                   call sym.check_string	      4123	tc-i386.c	FUNCTION_68	IF_22	IF_23	CALL_38
0x4004f9b	            0x85c0	                           test eax, eax	      4123	tc-i386.c	FUNCTION_68	IF_22	IF_23	CALL_38
0x4004f9d	     0xf8480050000	                            je 0x4005523	      4123	tc-i386.c	FUNCTION_68	IF_22	IF_23	CALL_38
0x4004fa3	    0xc70500000000	               mov dword [0x04004fad], 0	      4125	tc-i386.c	FUNCTION_68	IF_22
0x4004fad	    0x8b0500000000	            mov eax, dword [0x04004fb3] 	      4128	tc-i386.c	FUNCTION_68	IF_24
0x4004fb3	            0x85c0	                           test eax, eax	      4128	tc-i386.c	FUNCTION_68	IF_24
0x4004fb5	            0x741d	                            je 0x4004fd4	      4128	tc-i386.c	FUNCTION_68	IF_24
0x4004fb7	    0x8b0500000000	            mov eax, dword [0x04004fbd] 	      4128	tc-i386.c	FUNCTION_68	IF_24
0x4004fbd	            0x85c0	                           test eax, eax	      4128	tc-i386.c	FUNCTION_68	IF_24
0x4004fbf	            0x7513	                           jne 0x4004fd4	      4128	tc-i386.c	FUNCTION_68	IF_24
0x4004fc1	     0xfb605000000	           movzx eax, byte [0x04004fc8] 	      4128	tc-i386.c	FUNCTION_68	IF_24
0x4004fc8	          0x83e020	                           and eax, 0x20	      4128	tc-i386.c	FUNCTION_68	IF_24
0x4004fcb	            0x84c0	                             test al, al	      4128	tc-i386.c	FUNCTION_68	IF_24
0x4004fcd	            0x7405	                            je 0x4004fd4	      4128	tc-i386.c	FUNCTION_68	IF_24
0x4004fcf	      0xe80cf4ffff	              call sym.optimize_encoding	      4129	tc-i386.c	FUNCTION_68	CALL_39
0x4004fd4	      0xe8563d0000	                 call sym.process_suffix	      4131	tc-i386.c	FUNCTION_68	IF_25	CALL_40
0x4004fd9	            0x85c0	                           test eax, eax	      4131	tc-i386.c	FUNCTION_68	IF_25	CALL_40
0x4004fdb	     0xf8445050000	                            je 0x4005526	      4131	tc-i386.c	FUNCTION_68	IF_25	CALL_40
0x4004fe1	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x4004fe8	            0xeb3c	                           jmp 0x4005026	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x4004fea	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x4004fed	        0x488d580e	                    lea rbx, [rax + 0xe]	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x4004ff1	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x4004ff4	        0x4883c006	                              add rax, 6	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x4004ff8	    0x488b14c50000	                  mov rdx, qword [rax*8]	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x4005000	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x4005003	        0x4883c00e	                            add rax, 0xe	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x4005007	    0x488b04c50000	                  mov rax, qword [rax*8]	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x400500f	          0x4889d6	                            mov rsi, rdx	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x4005012	          0x4889c7	                            mov rdi, rax	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x4005015	      0xe8ceb9ffff	               call sym.operand_type_and	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x400501a	    0x488904dd0000	                  mov qword [rbx*8], rax	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x4005022	        0x8345bc01	               add dword [rbp - 0x44], 1	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x4005026	    0x8b0500000000	            mov eax, dword [0x0400502c] 	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400502c	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400502f	            0x77b9	                            ja 0x4004fea	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x4005031	      0xe8c7550000	                   call sym.finalize_imm	      4140	tc-i386.c	FUNCTION_68	IF_26	CALL_42
0x4005036	            0x85c0	                           test eax, eax	      4140	tc-i386.c	FUNCTION_68	IF_26	CALL_42
0x4005038	     0xf84eb040000	                            je 0x4005529	      4140	tc-i386.c	FUNCTION_68	IF_26	CALL_42
0x400503e	     0xfb605000000	           movzx eax, byte [0x04005045] 	      4143	tc-i386.c	FUNCTION_68	IF_27
0x4005045	          0x83e002	                              and eax, 2	      4143	tc-i386.c	FUNCTION_68	IF_27
0x4005048	            0x84c0	                             test al, al	      4143	tc-i386.c	FUNCTION_68	IF_27
0x400504a	            0x740a	                            je 0x4005056	      4143	tc-i386.c	FUNCTION_68	IF_27
0x400504c	    0xc70500000000	               mov dword [0x04005056], 0	      4144	tc-i386.c	FUNCTION_68	IF_27
0x4005056	    0x8b0500000000	            mov eax, dword [0x0400505c] 	      4148	tc-i386.c	FUNCTION_68	IF_28
0x400505c	          0x83f803	                              cmp eax, 3	      4148	tc-i386.c	FUNCTION_68	IF_28
0x400505f	     0xf8785000000	                            ja 0x40050ea	      4148	tc-i386.c	FUNCTION_68	IF_28
0x4005065	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400506c	            0xeb71	                           jmp 0x40050df	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400506e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x4005071	        0x4883c00e	                            add rax, 0xe	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x4005075	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400507d	          0xc0e807	                               shr al, 7	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x4005080	            0x84c0	                             test al, al	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x4005082	            0x7548	                           jne 0x40050cc	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x4005084	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      4151	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x4005087	        0x4883c00e	                            add rax, 0xe	      4151	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400508b	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4151	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x4005093	          0x83e001	                              and eax, 1	      4151	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x4005096	            0x84c0	                             test al, al	      4151	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x4005098	            0x7532	                           jne 0x40050cc	      4151	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400509a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400509d	        0x4883c00e	                            add rax, 0xe	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050a1	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050a9	          0xc0e805	                               shr al, 5	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050ac	          0x83e001	                              and eax, 1	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050af	            0x84c0	                             test al, al	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050b1	            0x7428	                            je 0x40050db	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050b3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050b6	        0x4883c00e	                            add rax, 0xe	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050ba	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050c2	          0xc0e803	                               shr al, 3	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050c5	          0x83e001	                              and eax, 1	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050c8	            0x84c0	                             test al, al	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050ca	            0x750f	                           jne 0x40050db	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050cc	    0x8b0500000000	            mov eax, dword [0x040050d2] 	      4153	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050d2	          0x83e801	                              sub eax, 1	      4153	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050d5	    0x890500000000	            mov dword [0x040050db], eax 	      4153	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x40050db	        0x8345bc01	               add dword [rbp - 0x44], 1	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x40050df	    0x8b0500000000	            mov eax, dword [0x040050e5] 	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x40050e5	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x40050e8	            0x7784	                            ja 0x400506e	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x40050ea	     0xfb605000000	           movzx eax, byte [0x040050f1] 	      4156	tc-i386.c	FUNCTION_68	IF_30
0x40050f1	          0x83e040	                           and eax, 0x40	      4156	tc-i386.c	FUNCTION_68	IF_30
0x40050f4	            0x84c0	                             test al, al	      4156	tc-i386.c	FUNCTION_68	IF_30
0x40050f6	            0x7513	                           jne 0x400510b	      4156	tc-i386.c	FUNCTION_68	IF_30
0x40050f8	     0xfb605000000	           movzx eax, byte [0x040050ff] 	      4157	tc-i386.c	FUNCTION_68	IF_30
0x40050ff	          0x83e020	                           and eax, 0x20	      4157	tc-i386.c	FUNCTION_68	IF_30
0x4005102	            0x84c0	                             test al, al	      4157	tc-i386.c	FUNCTION_68	IF_30
0x4005104	            0x7405	                            je 0x400510b	      4157	tc-i386.c	FUNCTION_68	IF_30
0x4005106	      0xe8b2eeffff	                 call sym.process_immext	      4158	tc-i386.c	FUNCTION_68	CALL_43
0x400510b	    0x8b0500000000	            mov eax, dword [0x04005111] 	      4161	tc-i386.c	FUNCTION_68	IF_31
0x4005111	            0x85c0	                           test eax, eax	      4161	tc-i386.c	FUNCTION_68	IF_31
0x4005113	            0x740e	                            je 0x4005123	      4161	tc-i386.c	FUNCTION_68	IF_31
0x4005115	      0xe85f550000	               call sym.process_operands	      4163	tc-i386.c	FUNCTION_68	IF_31	IF_32	CALL_44
0x400511a	            0x85c0	                           test eax, eax	      4163	tc-i386.c	FUNCTION_68	IF_31	IF_32	CALL_44
0x400511c	            0x753e	                           jne 0x400515c	      4163	tc-i386.c	FUNCTION_68	IF_31	IF_32	CALL_44
0x400511e	      0xe907040000	                           jmp 0x400552a	      4164	tc-i386.c	FUNCTION_68	IF_31	IF_32
0x4005123	    0x8b0500000000	            mov eax, dword [0x04005129] 	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x4005129	            0x85c0	                           test eax, eax	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400512b	            0x752f	                           jne 0x400515c	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400512d	     0xfb605000000	           movzx eax, byte [0x04005134] 	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x4005134	          0x83e001	                              and eax, 1	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x4005137	            0x84c0	                             test al, al	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x4005139	            0x7421	                            je 0x400515c	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400513b	    0x488b1d000000	            mov rbx, qword [0x04005142] 	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x4005142	      0xbf00000000	                              mov edi, 0	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x4005147	      0xe800000000	                          call 0x400514c	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400514c	          0x4889de	                            mov rsi, rbx	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400514f	          0x4889c7	                            mov rdi, rax	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x4005152	      0xb800000000	                              mov eax, 0	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x4005157	      0xe800000000	                          call 0x400515c	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400515c	     0xfb605000000	           movzx eax, byte [0x04005163] 	      4172	tc-i386.c	FUNCTION_68	IF_34
0x4005163	          0x83e006	                              and eax, 6	      4172	tc-i386.c	FUNCTION_68	IF_34
0x4005166	            0x84c0	                             test al, al	      4172	tc-i386.c	FUNCTION_68	IF_34
0x4005168	            0x751d	                           jne 0x4005187	      4172	tc-i386.c	FUNCTION_68	IF_34
0x400516a	    0x8b0500000000	            mov eax, dword [0x04005170] 	      4172	tc-i386.c	FUNCTION_68	IF_34
0x4005170	      0x2500800300	                        and eax, 0x38000	      4172	tc-i386.c	FUNCTION_68	IF_34
0x4005175	            0x85c0	                           test eax, eax	      4172	tc-i386.c	FUNCTION_68	IF_34
0x4005177	            0x750e	                           jne 0x4005187	      4172	tc-i386.c	FUNCTION_68	IF_34
0x4005179	      0xbf00000000	                              mov edi, 0	      4173	tc-i386.c	FUNCTION_68	IF_34	CALL_47
0x400517e	      0xe8dae8ffff	               call sym.is_evex_encoding	      4173	tc-i386.c	FUNCTION_68	IF_34	CALL_47
0x4005183	            0x85c0	                           test eax, eax	      4173	tc-i386.c	FUNCTION_68	IF_34	CALL_47
0x4005185	            0x7452	                            je 0x40051d9	      4173	tc-i386.c	FUNCTION_68	IF_34	CALL_47
0x4005187	    0x8b0500000000	            mov eax, dword [0x0400518d] 	      4175	tc-i386.c	FUNCTION_68	IF_34	IF_35
0x400518d	          0x83f801	                              cmp eax, 1	      4175	tc-i386.c	FUNCTION_68	IF_34	IF_35
0x4005190	            0x7526	                           jne 0x40051b8	      4175	tc-i386.c	FUNCTION_68	IF_34	IF_35
0x4005192	    0x488b1d000000	            mov rbx, qword [0x04005199] 	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x4005199	      0xbf00000000	                              mov edi, 0	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400519e	      0xe800000000	                          call 0x40051a3	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x40051a3	          0x4889de	                            mov rsi, rbx	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x40051a6	          0x4889c7	                            mov rdi, rax	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x40051a9	      0xb800000000	                              mov eax, 0	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x40051ae	      0xe800000000	                          call 0x40051b3	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x40051b3	      0xe972030000	                           jmp 0x400552a	      4179	tc-i386.c	FUNCTION_68	IF_34	IF_35
0x40051b8	     0xfb605000000	           movzx eax, byte [0x040051bf] 	      4182	tc-i386.c	FUNCTION_68	IF_34	IF_36
0x40051bf	          0x83e006	                              and eax, 6	      4182	tc-i386.c	FUNCTION_68	IF_34	IF_36
0x40051c2	            0x84c0	                             test al, al	      4182	tc-i386.c	FUNCTION_68	IF_34	IF_36
0x40051c4	            0x740e	                            je 0x40051d4	      4182	tc-i386.c	FUNCTION_68	IF_34	IF_36
0x40051c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4183	tc-i386.c	FUNCTION_68	IF_34	CALL_50
0x40051ca	          0x4889c7	                            mov rdi, rax	      4183	tc-i386.c	FUNCTION_68	IF_34	CALL_50
0x40051cd	      0xe8b5e3ffff	               call sym.build_vex_prefix	      4183	tc-i386.c	FUNCTION_68	IF_34	CALL_50
0x40051d2	            0xeb05	                           jmp 0x40051d9	      4183	tc-i386.c	FUNCTION_68	IF_34	CALL_50
0x40051d4	      0xe8e5e8ffff	              call sym.build_evex_prefix	      4185	tc-i386.c	FUNCTION_68	IF_34	CALL_51
0x40051d9	    0x8b0500000000	            mov eax, dword [0x040051df] 	      4191	tc-i386.c	FUNCTION_68	IF_37
0x40051df	      0x3dcd000000	                           cmp eax, 0xcd	      4191	tc-i386.c	FUNCTION_68	IF_37
0x40051e4	            0x7533	                           jne 0x4005219	      4191	tc-i386.c	FUNCTION_68	IF_37
0x40051e6	     0xfb605000000	           movzx eax, byte [0x040051ed] 	      4192	tc-i386.c	FUNCTION_68	IF_37
0x40051ed	          0x83e008	                              and eax, 8	      4192	tc-i386.c	FUNCTION_68	IF_37
0x40051f0	            0x84c0	                             test al, al	      4192	tc-i386.c	FUNCTION_68	IF_37
0x40051f2	            0x7525	                           jne 0x4005219	      4192	tc-i386.c	FUNCTION_68	IF_37
0x40051f4	    0x488b05000000	            mov rax, qword [0x040051fb] 	      4193	tc-i386.c	FUNCTION_68	IF_37
0x40051fb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4193	tc-i386.c	FUNCTION_68	IF_37
0x40051ff	        0x4883f803	                              cmp rax, 3	      4193	tc-i386.c	FUNCTION_68	IF_37
0x4005203	            0x7514	                           jne 0x4005219	      4193	tc-i386.c	FUNCTION_68	IF_37
0x4005205	    0xc70500000000	           mov dword [0x0400520f], 0xcc 	      4195	tc-i386.c	FUNCTION_68	IF_37
0x400520f	    0xc70500000000	               mov dword [0x04005219], 0	      4196	tc-i386.c	FUNCTION_68	IF_37
0x4005219	     0xfb605000000	           movzx eax, byte [0x04005220] 	      4199	tc-i386.c	FUNCTION_68	IF_38
0x4005220	          0x83e020	                           and eax, 0x20	      4199	tc-i386.c	FUNCTION_68	IF_38
0x4005223	            0x84c0	                             test al, al	      4199	tc-i386.c	FUNCTION_68	IF_38
0x4005225	            0x751c	                           jne 0x4005243	      4199	tc-i386.c	FUNCTION_68	IF_38
0x4005227	     0xfb605000000	           movzx eax, byte [0x0400522e] 	      4200	tc-i386.c	FUNCTION_68	IF_38
0x400522e	          0x83e080	                     and eax, 0xffffff80	      4200	tc-i386.c	FUNCTION_68	IF_38
0x4005231	            0x84c0	                             test al, al	      4200	tc-i386.c	FUNCTION_68	IF_38
0x4005233	            0x750e	                           jne 0x4005243	      4200	tc-i386.c	FUNCTION_68	IF_38
0x4005235	     0xfb605000000	           movzx eax, byte [0x0400523c] 	      4201	tc-i386.c	FUNCTION_68	IF_38
0x400523c	          0x83e040	                           and eax, 0x40	      4201	tc-i386.c	FUNCTION_68	IF_38
0x400523f	            0x84c0	                             test al, al	      4201	tc-i386.c	FUNCTION_68	IF_38
0x4005241	            0x7428	                            je 0x400526b	      4201	tc-i386.c	FUNCTION_68	IF_38
0x4005243	    0x488b05000000	            mov rax, qword [0x0400524a] 	      4202	tc-i386.c	FUNCTION_68	IF_38
0x400524a	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      4202	tc-i386.c	FUNCTION_68	IF_38
0x400524e	            0x3c02	                               cmp al, 2	      4202	tc-i386.c	FUNCTION_68	IF_38
0x4005250	            0x7519	                           jne 0x400526b	      4202	tc-i386.c	FUNCTION_68	IF_38
0x4005252	    0x488b05000000	            mov rax, qword [0x04005259] 	      4207	tc-i386.c	FUNCTION_68	IF_38
0x4005259	    0x48c700000000	                      mov qword [rax], 0	      4207	tc-i386.c	FUNCTION_68	IF_38
0x4005260	    0x488b05000000	            mov rax, qword [0x04005267] 	      4208	tc-i386.c	FUNCTION_68	IF_38
0x4005267	        0xc6401803	                mov byte [rax + 0x18], 3	      4208	tc-i386.c	FUNCTION_68	IF_38
0x400526b	     0xfb605000000	           movzx eax, byte [0x04005272] 	      4211	tc-i386.c	FUNCTION_68	IF_39
0x4005272	          0x83e080	                     and eax, 0xffffff80	      4211	tc-i386.c	FUNCTION_68	IF_39
0x4005275	            0x84c0	                             test al, al	      4211	tc-i386.c	FUNCTION_68	IF_39
0x4005277	            0x740f	                            je 0x4005288	      4211	tc-i386.c	FUNCTION_68	IF_39
0x4005279	    0x8b0500000000	            mov eax, dword [0x0400527f] 	      4212	tc-i386.c	FUNCTION_68	IF_39
0x400527f	          0x83c808	                               or eax, 8	      4212	tc-i386.c	FUNCTION_68	IF_39
0x4005282	    0x890500000000	            mov dword [0x04005288], eax 	      4212	tc-i386.c	FUNCTION_68	IF_39
0x4005288	     0xfb605000000	           movzx eax, byte [0x0400528f] 	      4218	tc-i386.c	FUNCTION_68	IF_40
0x400528f	          0x83e001	                              and eax, 1	      4218	tc-i386.c	FUNCTION_68	IF_40
0x4005292	            0x84c0	                             test al, al	      4218	tc-i386.c	FUNCTION_68	IF_40
0x4005294	            0x7423	                            je 0x40052b9	      4218	tc-i386.c	FUNCTION_68	IF_40
0x4005296	     0xfb605000000	           movzx eax, byte [0x0400529d] 	      4218	tc-i386.c	FUNCTION_68	IF_40
0x400529d	          0x83e020	                           and eax, 0x20	      4218	tc-i386.c	FUNCTION_68	IF_40
0x40052a0	            0x84c0	                             test al, al	      4218	tc-i386.c	FUNCTION_68	IF_40
0x40052a2	            0x7415	                            je 0x40052b9	      4218	tc-i386.c	FUNCTION_68	IF_40
0x40052a4	    0x488b05000000	            mov rax, qword [0x040052ab] 	      4219	tc-i386.c	FUNCTION_68	IF_40
0x40052ab	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      4219	tc-i386.c	FUNCTION_68	IF_40
0x40052af	           0xfb6c0	                           movzx eax, al	      4219	tc-i386.c	FUNCTION_68	IF_40
0x40052b2	          0x83e002	                              and eax, 2	      4219	tc-i386.c	FUNCTION_68	IF_40
0x40052b5	            0x85c0	                           test eax, eax	      4219	tc-i386.c	FUNCTION_68	IF_40
0x40052b7	            0x757f	                           jne 0x4005338	      4219	tc-i386.c	FUNCTION_68	IF_40
0x40052b9	     0xfb605000000	           movzx eax, byte [0x040052c0] 	      4220	tc-i386.c	FUNCTION_68	IF_40
0x40052c0	          0x83e001	                              and eax, 1	      4220	tc-i386.c	FUNCTION_68	IF_40
0x40052c3	            0x84c0	                             test al, al	      4220	tc-i386.c	FUNCTION_68	IF_40
0x40052c5	            0x7423	                            je 0x40052ea	      4220	tc-i386.c	FUNCTION_68	IF_40
0x40052c7	     0xfb605000000	           movzx eax, byte [0x040052ce] 	      4220	tc-i386.c	FUNCTION_68	IF_40
0x40052ce	          0x83e020	                           and eax, 0x20	      4220	tc-i386.c	FUNCTION_68	IF_40
0x40052d1	            0x84c0	                             test al, al	      4220	tc-i386.c	FUNCTION_68	IF_40
0x40052d3	            0x7415	                            je 0x40052ea	      4220	tc-i386.c	FUNCTION_68	IF_40
0x40052d5	    0x488b05000000	            mov rax, qword [0x040052dc] 	      4221	tc-i386.c	FUNCTION_68	IF_40
0x40052dc	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      4221	tc-i386.c	FUNCTION_68	IF_40
0x40052e0	           0xfb6c0	                           movzx eax, al	      4221	tc-i386.c	FUNCTION_68	IF_40
0x40052e3	          0x83e002	                              and eax, 2	      4221	tc-i386.c	FUNCTION_68	IF_40
0x40052e6	            0x85c0	                           test eax, eax	      4221	tc-i386.c	FUNCTION_68	IF_40
0x40052e8	            0x754e	                           jne 0x4005338	      4221	tc-i386.c	FUNCTION_68	IF_40
0x40052ea	     0xfb605000000	           movzx eax, byte [0x040052f1] 	      4222	tc-i386.c	FUNCTION_68	IF_40
0x40052f1	          0x83e001	                              and eax, 1	      4222	tc-i386.c	FUNCTION_68	IF_40
0x40052f4	            0x84c0	                             test al, al	      4222	tc-i386.c	FUNCTION_68	IF_40
0x40052f6	            0x740e	                            je 0x4005306	      4222	tc-i386.c	FUNCTION_68	IF_40
0x40052f8	     0xfb605000000	           movzx eax, byte [0x040052ff] 	      4222	tc-i386.c	FUNCTION_68	IF_40
0x40052ff	          0x83e020	                           and eax, 0x20	      4222	tc-i386.c	FUNCTION_68	IF_40
0x4005302	            0x84c0	                             test al, al	      4222	tc-i386.c	FUNCTION_68	IF_40
0x4005304	            0x7524	                           jne 0x400532a	      4222	tc-i386.c	FUNCTION_68	IF_40
0x4005306	     0xfb605000000	           movzx eax, byte [0x0400530d] 	      4223	tc-i386.c	FUNCTION_68	IF_40
0x400530d	          0x83e001	                              and eax, 1	      4223	tc-i386.c	FUNCTION_68	IF_40
0x4005310	            0x84c0	                             test al, al	      4223	tc-i386.c	FUNCTION_68	IF_40
0x4005312	     0xf841d010000	                            je 0x4005435	      4223	tc-i386.c	FUNCTION_68	IF_40
0x4005318	     0xfb605000000	           movzx eax, byte [0x0400531f] 	      4223	tc-i386.c	FUNCTION_68	IF_40
0x400531f	          0x83e020	                           and eax, 0x20	      4223	tc-i386.c	FUNCTION_68	IF_40
0x4005322	            0x84c0	                             test al, al	      4223	tc-i386.c	FUNCTION_68	IF_40
0x4005324	     0xf840b010000	                            je 0x4005435	      4223	tc-i386.c	FUNCTION_68	IF_40
0x400532a	    0x8b0500000000	            mov eax, dword [0x04005330] 	      4224	tc-i386.c	FUNCTION_68	IF_40
0x4005330	            0x85c0	                           test eax, eax	      4224	tc-i386.c	FUNCTION_68	IF_40
0x4005332	     0xf84fd000000	                            je 0x4005435	      4224	tc-i386.c	FUNCTION_68	IF_40
0x4005338	    0x8b0500000000	            mov eax, dword [0x0400533e] 	      4228	tc-i386.c	FUNCTION_68	IF_40
0x400533e	          0x83c840	                            or eax, 0x40	      4228	tc-i386.c	FUNCTION_68	IF_40
0x4005341	    0x890500000000	            mov dword [0x04005347], eax 	      4228	tc-i386.c	FUNCTION_68	IF_40
0x4005347	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400534e	      0xe9d8000000	                           jmp 0x400542b	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x4005353	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005356	            0x4898	                                    cdqe	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005358	        0x4883c00e	                            add rax, 0xe	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400535c	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005364	          0x83e001	                              and eax, 1	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005367	            0x84c0	                             test al, al	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005369	     0xf84b8000000	                            je 0x4005427	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400536f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005372	            0x4898	                                    cdqe	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005374	        0x4883c00e	                            add rax, 0xe	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005378	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005380	          0xc0e805	                               shr al, 5	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005383	          0x83e001	                              and eax, 1	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005386	            0x84c0	                             test al, al	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005388	     0xf8499000000	                            je 0x4005427	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400538e	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005391	            0x4898	                                    cdqe	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005393	        0x4883c014	                           add rax, 0x14	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005397	    0x488b04c50000	                  mov rax, qword [rax*8]	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400539f	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x40053a3	           0xfb6c0	                           movzx eax, al	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x40053a6	          0x83e002	                              and eax, 2	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x40053a9	            0x85c0	                           test eax, eax	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x40053ab	            0x757a	                           jne 0x4005427	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x40053ad	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4236	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x40053b0	            0x4898	                                    cdqe	      4236	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x40053b2	        0x4883c014	                           add rax, 0x14	      4236	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x40053b6	    0x488b04c50000	                  mov rax, qword [rax*8]	      4236	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x40053be	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      4236	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x40053c2	            0x3c03	                               cmp al, 3	      4236	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x40053c4	            0x7638	                           jbe 0x40053fe	      4236	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x40053c6	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4239	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x40053c9	            0x4898	                                    cdqe	      4239	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x40053cb	        0x4883c014	                           add rax, 0x14	      4239	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x40053cf	    0x488b04c50000	                  mov rax, qword [rax*8]	      4239	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x40053d7	          0x4c8b20	                    mov r12, qword [rax]	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x40053da	    0x488b1d000000	            mov rbx, qword [0x040053e1] 	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x40053e1	      0xbf00000000	                              mov edi, 0	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x40053e6	      0xe800000000	                          call 0x40053eb	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x40053eb	          0x4c89e2	                            mov rdx, r12	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x40053ee	          0x4889de	                            mov rsi, rbx	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x40053f1	          0x4889c7	                            mov rdi, rax	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x40053f4	      0xb800000000	                              mov eax, 0	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x40053f9	      0xe800000000	                          call 0x40053fe	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x40053fe	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005401	            0x4898	                                    cdqe	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005403	        0x4883c014	                           add rax, 0x14	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005407	    0x488b04c50000	                  mov rax, qword [rax*8]	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400540f	    0x488d90c00000	                   lea rdx, [rax + 0xc0]	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005416	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005419	            0x4898	                                    cdqe	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400541b	        0x4883c014	                           add rax, 0x14	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400541f	    0x488914c50000	                  mov qword [rax*8], rdx	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x4005427	        0x8345c001	               add dword [rbp - 0x40], 1	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400542b	        0x837dc001	               cmp dword [rbp - 0x40], 1	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400542f	     0xf8e1effffff	                           jle 0x4005353	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x4005435	    0x8b0500000000	            mov eax, dword [0x0400543b] 	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400543b	            0x85c0	                           test eax, eax	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400543d	     0xf85b0000000	                           jne 0x40054f3	      4250	tc-i386.c	FUNCTION_68	IF_43
0x4005443	    0x8b0500000000	            mov eax, dword [0x04005449] 	      4250	tc-i386.c	FUNCTION_68	IF_43
0x4005449	            0x85c0	                           test eax, eax	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400544b	     0xf84a2000000	                            je 0x40054f3	      4250	tc-i386.c	FUNCTION_68	IF_43
0x4005451	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      4256	tc-i386.c	FUNCTION_68	IF_43	FOR_5
0x4005458	            0xeb7b	                           jmp 0x40054d5	      4256	tc-i386.c	FUNCTION_68	IF_43	FOR_5
0x400545a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400545d	            0x4898	                                    cdqe	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400545f	        0x4883c00e	                            add rax, 0xe	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x4005463	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400546b	          0x83e001	                              and eax, 1	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400546e	            0x84c0	                             test al, al	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x4005470	            0x745f	                            je 0x40054d1	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x4005472	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x4005475	            0x4898	                                    cdqe	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x4005477	        0x4883c00e	                            add rax, 0xe	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400547b	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x4005483	          0xc0e805	                               shr al, 5	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x4005486	          0x83e001	                              and eax, 1	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x4005489	            0x84c0	                             test al, al	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400548b	            0x7444	                            je 0x40054d1	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400548d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x4005490	            0x4898	                                    cdqe	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x4005492	        0x4883c014	                           add rax, 0x14	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x4005496	    0x488b04c50000	                  mov rax, qword [rax*8]	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400549e	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054a2	           0xfb6c0	                           movzx eax, al	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054a5	          0x83e002	                              and eax, 2	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054a8	            0x85c0	                           test eax, eax	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054aa	            0x7525	                           jne 0x40054d1	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054ac	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054af	            0x4898	                                    cdqe	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054b1	        0x4883c014	                           add rax, 0x14	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054b5	    0x488b04c50000	                  mov rax, qword [rax*8]	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054bd	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054c1	            0x3c03	                               cmp al, 3	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054c3	            0x760c	                           jbe 0x40054d1	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054c5	    0xc70500000000	               mov dword [0x040054cf], 0	      4262	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054cf	            0xeb0e	                           jmp 0x40054df	      4263	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x40054d1	        0x8345c401	               add dword [rbp - 0x3c], 1	      4256	tc-i386.c	FUNCTION_68	IF_43	FOR_5
0x40054d5	        0x837dc401	               cmp dword [rbp - 0x3c], 1	      4256	tc-i386.c	FUNCTION_68	IF_43	FOR_5
0x40054d9	     0xf8e7bffffff	                           jle 0x400545a	      4256	tc-i386.c	FUNCTION_68	IF_43	FOR_5
0x40054df	    0x8b0500000000	            mov eax, dword [0x040054e5] 	      4266	tc-i386.c	FUNCTION_68	IF_43	IF_45
0x40054e5	            0x85c0	                           test eax, eax	      4266	tc-i386.c	FUNCTION_68	IF_43	IF_45
0x40054e7	            0x740a	                            je 0x40054f3	      4266	tc-i386.c	FUNCTION_68	IF_43	IF_45
0x40054e9	    0xc70500000000	           mov dword [0x040054f3], 0x40 	      4267	tc-i386.c	FUNCTION_68	IF_43	IF_45
0x40054f3	    0x8b0500000000	            mov eax, dword [0x040054f9] 	      4270	tc-i386.c	FUNCTION_68	IF_46
0x40054f9	            0x85c0	                           test eax, eax	      4270	tc-i386.c	FUNCTION_68	IF_46
0x40054fb	            0x7410	                            je 0x400550d	      4270	tc-i386.c	FUNCTION_68	IF_46
0x40054fd	    0x8b0500000000	            mov eax, dword [0x04005503] 	      4271	tc-i386.c	FUNCTION_68	CALL_54
0x4005503	          0x83c840	                            or eax, 0x40	      4271	tc-i386.c	FUNCTION_68	CALL_54
0x4005506	            0x89c7	                            mov edi, eax	      4271	tc-i386.c	FUNCTION_68	CALL_54
0x4005508	      0xe8d4c5ffff	                     call sym.add_prefix	      4271	tc-i386.c	FUNCTION_68	CALL_54
0x400550d	      0xe8727d0000	                    call sym.output_insn	      4274	tc-i386.c	FUNCTION_68	CALL_55
0x4005512	            0xeb16	                           jmp 0x400552a	      4274	tc-i386.c	FUNCTION_68	CALL_55
0x4005514	              0x90	                                     nop	      3984	tc-i386.c	FUNCTION_68	IF_1
0x4005515	            0xeb13	                           jmp 0x400552a	      3984	tc-i386.c	FUNCTION_68	IF_1
0x4005517	              0x90	                                     nop	      3992	tc-i386.c	FUNCTION_68	IF_2
0x4005518	            0xeb10	                           jmp 0x400552a	      3992	tc-i386.c	FUNCTION_68	IF_2
0x400551a	              0x90	                                     nop	      4032	tc-i386.c	FUNCTION_68	IF_7
0x400551b	            0xeb0d	                           jmp 0x400552a	      4032	tc-i386.c	FUNCTION_68	IF_7
0x400551d	              0x90	                                     nop	      4070	tc-i386.c	FUNCTION_68	IF_11	IF_12
0x400551e	            0xeb0a	                           jmp 0x400552a	      4070	tc-i386.c	FUNCTION_68	IF_11	IF_12
0x4005520	              0x90	                                     nop	      4094	tc-i386.c	FUNCTION_68	IF_15
0x4005521	            0xeb07	                           jmp 0x400552a	      4094	tc-i386.c	FUNCTION_68	IF_15
0x4005523	              0x90	                                     nop	      4124	tc-i386.c	FUNCTION_68	IF_22	IF_23
0x4005524	            0xeb04	                           jmp 0x400552a	      4124	tc-i386.c	FUNCTION_68	IF_22	IF_23
0x4005526	              0x90	                                     nop	      4132	tc-i386.c	FUNCTION_68	IF_25
0x4005527	            0xeb01	                           jmp 0x400552a	      4132	tc-i386.c	FUNCTION_68	IF_25
0x4005529	              0x90	                                     nop	      4141	tc-i386.c	FUNCTION_68	IF_26
0x400552a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4275	tc-i386.c	FUNCTION_68
0x400552e	    0x644833042528	                xor rax, qword fs:[0x28]	      4275	tc-i386.c	FUNCTION_68
0x4005537	            0x7405	                            je 0x400553e	      4275	tc-i386.c	FUNCTION_68
0x4005539	      0xe800000000	                          call 0x400553e	      4275	tc-i386.c	FUNCTION_68
0x400553e	        0x4883c450	                           add rsp, 0x50	      4275	tc-i386.c	FUNCTION_68
0x4005542	              0x5b	                                 pop rbx	      4275	tc-i386.c	FUNCTION_68
0x4005543	            0x415c	                                 pop r12	      4275	tc-i386.c	FUNCTION_68
0x4005545	              0x5d	                                 pop rbp	      4275	tc-i386.c	FUNCTION_68
0x4005546	              0xc3	                                     ret	      4275	tc-i386.c	FUNCTION_68
fits_in_imm4	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	10
0x40017bf	              0x55	                                push rbp	      2212	tc-i386.c	FUNCTION_37
0x40017c0	          0x4889e5	                            mov rbp, rsp	      2212	tc-i386.c	FUNCTION_37
0x40017c3	        0x48897df8	                mov qword [rbp - 8], rdi	      2212	tc-i386.c	FUNCTION_37
0x40017c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2213	tc-i386.c	FUNCTION_37
0x40017cb	          0x83e00f	                            and eax, 0xf	      2213	tc-i386.c	FUNCTION_37
0x40017ce	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2213	tc-i386.c	FUNCTION_37
0x40017d2	           0xf94c0	                                 sete al	      2213	tc-i386.c	FUNCTION_37
0x40017d5	           0xfb6c0	                           movzx eax, al	      2213	tc-i386.c	FUNCTION_37
0x40017d8	              0x5d	                                 pop rbp	      2214	tc-i386.c	FUNCTION_37
0x40017d9	              0xc3	                                     ret	      2214	tc-i386.c	FUNCTION_37
i386_frag_max_var	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	22
0x4010cfd	              0x55	                                push rbp	      9675	tc-i386.c	FUNCTION_113
0x4010cfe	          0x4889e5	                            mov rbp, rsp	      9675	tc-i386.c	FUNCTION_113
0x4010d01	        0x4883ec10	                           sub rsp, 0x10	      9675	tc-i386.c	FUNCTION_113
0x4010d05	        0x48897df8	                mov qword [rbp - 8], rdi	      9675	tc-i386.c	FUNCTION_113
0x4010d09	        0x488b45f8	                mov rax, qword [rbp - 8]	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x4010d0d	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x4010d10	          0x83f807	                              cmp eax, 7	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x4010d13	            0x7414	                            je 0x4010d29	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x4010d15	      0xba00000000	                              mov edx, 0	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x4010d1a	      0xbece250000	                         mov esi, 0x25ce	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x4010d1f	      0xbf00000000	                              mov edi, 0	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x4010d24	      0xe800000000	                          call 0x4010d29	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x4010d29	        0x488b45f8	                mov rax, qword [rbp - 8]	      9679	tc-i386.c	FUNCTION_113
0x4010d2d	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9679	tc-i386.c	FUNCTION_113
0x4010d30	          0xc1e802	                              shr eax, 2	      9679	tc-i386.c	FUNCTION_113
0x4010d33	            0x85c0	                           test eax, eax	      9679	tc-i386.c	FUNCTION_113
0x4010d35	            0x7507	                           jne 0x4010d3e	      9679	tc-i386.c	FUNCTION_113
0x4010d37	      0xb804000000	                              mov eax, 4	      9679	tc-i386.c	FUNCTION_113
0x4010d3c	            0xeb05	                           jmp 0x4010d43	      9679	tc-i386.c	FUNCTION_113
0x4010d3e	      0xb805000000	                              mov eax, 5	      9679	tc-i386.c	FUNCTION_113
0x4010d43	              0xc9	                                   leave	      9680	tc-i386.c	FUNCTION_113
0x4010d44	              0xc3	                                     ret	      9680	tc-i386.c	FUNCTION_113
fits_in_signed_long	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	12
0x4001713	              0x55	                                push rbp	      2173	tc-i386.c	FUNCTION_34
0x4001714	          0x4889e5	                            mov rbp, rsp	      2173	tc-i386.c	FUNCTION_34
0x4001717	        0x48897df8	                mov qword [rbp - 8], rdi	      2173	tc-i386.c	FUNCTION_34
0x400171b	      0xba00000080	                     mov edx, 0x80000000	      2177	tc-i386.c	FUNCTION_34
0x4001720	        0x488b45f8	                mov rax, qword [rbp - 8]	      2177	tc-i386.c	FUNCTION_34
0x4001724	          0x4801c2	                            add rdx, rax	      2177	tc-i386.c	FUNCTION_34
0x4001727	      0xb8ffffffff	                     mov eax, 0xffffffff	      2177	tc-i386.c	FUNCTION_34
0x400172c	          0x4839c2	                            cmp rdx, rax	      2177	tc-i386.c	FUNCTION_34
0x400172f	           0xf96c0	                                setbe al	      2177	tc-i386.c	FUNCTION_34
0x4001732	           0xfb6c0	                           movzx eax, al	      2177	tc-i386.c	FUNCTION_34
0x4001735	              0x5d	                                 pop rbp	      2179	tc-i386.c	FUNCTION_34
0x4001736	              0xc3	                                     ret	      2179	tc-i386.c	FUNCTION_34
elf_symbol_resolved_in_segment_p	CALL,6:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,4:ELSE,0:DO,0	53
0x4010d45	              0x55	                                push rbp	      9685	tc-i386.c	FUNCTION_114
0x4010d46	          0x4889e5	                            mov rbp, rsp	      9685	tc-i386.c	FUNCTION_114
0x4010d49	        0x4883ec10	                           sub rsp, 0x10	      9685	tc-i386.c	FUNCTION_114
0x4010d4d	        0x48897df8	                mov qword [rbp - 8], rdi	      9685	tc-i386.c	FUNCTION_114
0x4010d51	        0x488975f0	             mov qword [rbp - 0x10], rsi	      9685	tc-i386.c	FUNCTION_114
0x4010d55	        0x488b45f8	                mov rax, qword [rbp - 8]	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x4010d59	          0x4889c7	                            mov rdi, rax	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x4010d5c	      0xe800000000	                          call 0x4010d61	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x4010d61	          0x8b4018	            mov eax, dword [rax + 0x18] 	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x4010d64	      0x2500004000	                       and eax, 0x400000	      9688	tc-i386.c	FUNCTION_114	IF_1
0x4010d69	            0x85c0	                           test eax, eax	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x4010d6b	            0x740a	                            je 0x4010d77	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x4010d6d	      0xb800000000	                              mov eax, 0	      9689	tc-i386.c	FUNCTION_114	IF_1
0x4010d72	      0xe982000000	                           jmp 0x4010df9	      9689	tc-i386.c	FUNCTION_114	IF_1
0x4010d77	        0x488b45f8	                mov rax, qword [rbp - 8]	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x4010d7b	          0x4889c7	                            mov rdi, rax	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x4010d7e	      0xe800000000	                          call 0x4010d83	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x4010d83	            0x85c0	                           test eax, eax	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x4010d85	            0x7516	                           jne 0x4010d9d	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x4010d87	        0x488b45f8	                mov rax, qword [rbp - 8]	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x4010d8b	          0x4889c7	                            mov rdi, rax	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x4010d8e	      0xe800000000	                          call 0x4010d93	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x4010d93	            0x85c0	                           test eax, eax	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x4010d95	           0xf94c0	                                 sete al	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x4010d98	           0xfb6c0	                           movzx eax, al	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x4010d9b	            0xeb5c	                           jmp 0x4010df9	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x4010d9d	        0x488b45f8	                mov rax, qword [rbp - 8]	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x4010da1	          0x4889c7	                            mov rdi, rax	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x4010da4	      0xe800000000	                          call 0x4010da9	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x4010da9	          0x83e003	                              and eax, 3	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x4010dac	            0x85c0	                           test eax, eax	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x4010dae	            0x7407	                            je 0x4010db7	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x4010db0	      0xb801000000	                              mov eax, 1	      9697	tc-i386.c	FUNCTION_114	IF_3
0x4010db5	            0xeb42	                           jmp 0x4010df9	      9697	tc-i386.c	FUNCTION_114	IF_3
0x4010db7	      0x48837df047	           cmp qword [rbp - 0x10], 0x47 	      9699	tc-i386.c	FUNCTION_114	IF_4
0x4010dbc	            0x742d	                            je 0x4010deb	      9699	tc-i386.c	FUNCTION_114	IF_4
0x4010dbe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x4010dc2	      0x3d65010000	                          cmp eax, 0x165	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x4010dc7	            0x7407	                            je 0x4010dd0	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x4010dc9	      0x3d7e010000	                          cmp eax, 0x17e	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x4010dce	            0x7507	                           jne 0x4010dd7	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x4010dd0	      0xb800000000	                              mov eax, 0	      9705	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x4010dd5	            0xeb22	                           jmp 0x4010df9	      9705	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x4010dd7	      0xba00000000	                              mov edx, 0	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x4010ddc	      0xbeeb250000	                         mov esi, 0x25eb	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x4010de1	      0xbf00000000	                              mov edi, 0	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x4010de6	      0xe800000000	                          call 0x4010deb	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x4010deb	    0x8b0500000000	            mov eax, dword [0x04010df1] 	      9712	tc-i386.c	FUNCTION_114
0x4010df1	            0x85c0	                           test eax, eax	      9712	tc-i386.c	FUNCTION_114
0x4010df3	           0xf94c0	                                 sete al	      9712	tc-i386.c	FUNCTION_114
0x4010df6	           0xfb6c0	                           movzx eax, al	      9712	tc-i386.c	FUNCTION_114
0x4010df9	              0xc9	                                   leave	      9713	tc-i386.c	FUNCTION_114
0x4010dfa	              0xc3	                                     ret	      9713	tc-i386.c	FUNCTION_114
s_bss	CALL,4:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	16
0x40139f8	              0x55	                                push rbp	     11234	tc-i386.c	FUNCTION_133
0x40139f9	          0x4889e5	                            mov rbp, rsp	     11234	tc-i386.c	FUNCTION_133
0x40139fc	        0x4883ec20	                           sub rsp, 0x20	     11234	tc-i386.c	FUNCTION_133
0x4013a00	          0x897dec	             mov dword [rbp - 0x14], edi	     11234	tc-i386.c	FUNCTION_133
0x4013a03	      0xe800000000	                          call 0x4013a08	     11239	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4013a08	      0xe800000000	                          call 0x4013a0d	     11241	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	IF_4
0x4013a0d	          0x8945fc	                mov dword [rbp - 4], eax	     11241	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	IF_4
0x4013a10	    0x488b05000000	            mov rax, qword [0x04013a17] 	     11242	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	CALL_1
0x4013a17	          0x8b55fc	                mov edx, dword [rbp - 4]	     11242	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	CALL_1
0x4013a1a	            0x89d6	                            mov esi, edx	     11242	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	CALL_1
0x4013a1c	          0x4889c7	                            mov rdi, rax	     11242	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	CALL_1
0x4013a1f	      0xe800000000	                          call 0x4013a24	     11242	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	CALL_1
0x4013a24	      0xe800000000	                          call 0x4013a29	     11243	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4013a29	              0x90	                                     nop	     11244	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	IF_5
0x4013a2a	              0xc9	                                   leave	     11244	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	IF_5
0x4013a2b	              0xc3	                                     ret	     11244	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	IF_5
i386_operator	CALL,7:FOR,2:WHILE,0:functions,0:SWITCH,1:IF,11:ELSE,0:DO,0	217
0x4014148	              0x55	                                push rbp	       120	tc-i386-intel.c	FUNCTION_144
0x4014149	          0x4889e5	                            mov rbp, rsp	       120	tc-i386-intel.c	FUNCTION_144
0x401414c	        0x4883ec40	                           sub rsp, 0x40	       120	tc-i386-intel.c	FUNCTION_144
0x4014150	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       120	tc-i386-intel.c	FUNCTION_144
0x4014154	          0x8975d4	             mov dword [rbp - 0x2c], esi	       120	tc-i386-intel.c	FUNCTION_144
0x4014157	        0x488955c8	             mov qword [rbp - 0x38], rdx	       120	tc-i386-intel.c	FUNCTION_144
0x401415b	    0x64488b042528	                mov rax, qword fs:[0x28]	       120	tc-i386-intel.c	FUNCTION_144
0x4014164	        0x488945f8	                mov qword [rbp - 8], rax	       120	tc-i386-intel.c	FUNCTION_144
0x4014168	            0x31c0	                            xor eax, eax	       120	tc-i386-intel.c	FUNCTION_144
0x401416a	    0x8b0500000000	            mov eax, dword [0x04014170] 	       123	tc-i386-intel.c	FUNCTION_144	IF_1
0x4014170	            0x85c0	                           test eax, eax	       123	tc-i386-intel.c	FUNCTION_144	IF_1
0x4014172	            0x750a	                           jne 0x401417e	       123	tc-i386-intel.c	FUNCTION_144	IF_1
0x4014174	      0xb801000000	                              mov eax, 1	       124	tc-i386-intel.c	FUNCTION_144	IF_1
0x4014179	      0xe904030000	                           jmp 0x4014482	       124	tc-i386-intel.c	FUNCTION_144	IF_1
0x401417e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       126	tc-i386-intel.c	FUNCTION_144	IF_2
0x4014183	     0xf853f010000	                           jne 0x40142c8	       126	tc-i386-intel.c	FUNCTION_144	IF_2
0x4014189	        0x837dd402	               cmp dword [rbp - 0x2c], 2	       128	tc-i386-intel.c	FUNCTION_144	IF_2	IF_3
0x401418d	            0x740a	                            je 0x4014199	       128	tc-i386-intel.c	FUNCTION_144	IF_2	IF_3
0x401418f	      0xb800000000	                              mov eax, 0	       129	tc-i386-intel.c	FUNCTION_144	IF_2	IF_3
0x4014194	      0xe9e9020000	                           jmp 0x4014482	       129	tc-i386-intel.c	FUNCTION_144	IF_2	IF_3
0x4014199	    0x488b05000000	            mov rax, qword [0x040141a0] 	       130	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141a0	           0xfb600	                   movzx eax, byte [rax]	       130	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141a3	           0xfbec0	                           movsx eax, al	       130	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141a6	          0x83f840	                           cmp eax, 0x40	       130	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141a9	            0x7446	                            je 0x40141f1	       130	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141ab	          0x83f85b	                           cmp eax, 0x5b	       130	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141ae	            0x7425	                            je 0x40141d5	       130	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141b0	          0x83f83a	                           cmp eax, 0x3a	       130	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141b3	     0xf8505010000	                           jne 0x40142be	       130	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141b9	    0x488b05000000	            mov rax, qword [0x040141c0] 	       133	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141c0	        0x4883c001	                              add rax, 1	       133	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141c4	    0x488905000000	            mov qword [0x040141cb], rax 	       133	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141cb	      0xb81f000000	                           mov eax, 0x1f	       134	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141d0	      0xe9ad020000	                           jmp 0x4014482	       134	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141d5	    0x488b05000000	            mov rax, qword [0x040141dc] 	       136	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141dc	        0x4883c001	                              add rax, 1	       136	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141e0	    0x488905000000	            mov qword [0x040141e7], rax 	       136	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141e7	      0xb81d000000	                           mov eax, 0x1d	       137	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141ec	      0xe991020000	                           jmp 0x4014482	       137	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40141f1	    0x8b0500000000	            mov eax, dword [0x040141f7] 	       139	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x40141f7	            0x85c0	                           test eax, eax	       139	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x40141f9	     0xf88bb000000	                            js 0x40142ba	       139	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x40141ff	    0x8b0500000000	            mov eax, dword [0x04014205] 	       139	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014205	            0x4898	                                    cdqe	       139	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014207	        0x4883c034	                           add rax, 0x34	       139	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x401420b	    0x8b0485000000	                  mov eax, dword [rax*4]	       139	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014212	          0x83f847	                           cmp eax, 0x47	       139	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014215	     0xf859f000000	                           jne 0x40142ba	       139	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x401421b	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       141	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014222	    0x8b0500000000	            mov eax, dword [0x04014228] 	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014228	            0x4898	                                    cdqe	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x401422a	        0x4883c034	                           add rax, 0x34	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x401422e	        0x48c1e002	                              shl rax, 2	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014232	    0x480500000000	                              add rax, 0	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014238	        0x488d480c	                    lea rcx, [rax + 0xc]	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x401423c	        0x488d45e8	                   lea rax, [rbp - 0x18]	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014240	      0xba00000000	                              mov edx, 0	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014245	          0x4889c6	                            mov rsi, rax	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014248	          0x4889cf	                            mov rdi, rcx	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x401424b	      0xe8ba9fffff	                        call sym.lex_got	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014250	        0x488945f0	             mov qword [rbp - 0x10], rax	       142	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014254	      0x48837df000	               cmp qword [rbp - 0x10], 0	       146	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	IF_5
0x4014259	            0x7462	                            je 0x40142bd	       146	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	IF_5
0x401425b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       148	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	CALL_1
0x401425f	          0x4889c7	                            mov rdi, rax	       148	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	CALL_1
0x4014262	      0xe800000000	                          call 0x4014267	       148	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	CALL_1
0x4014267	    0x488b05000000	            mov rax, qword [0x0401426e] 	       149	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x401426e	        0x488d5001	                      lea rdx, [rax + 1]	       149	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014272	    0x488915000000	            mov qword [0x04014279], rdx 	       149	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x4014279	          0xc6002b	                    mov byte [rax], 0x2b	       149	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x401427c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       150	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	CALL_2
0x401427f	          0x83e801	                              sub eax, 1	       150	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	CALL_2
0x4014282	          0x4863d0	                         movsxd rdx, eax	       150	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	CALL_2
0x4014285	    0x488b05000000	            mov rax, qword [0x0401428c] 	       150	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	CALL_2
0x401428c	      0xbe30000000	                           mov esi, 0x30	       150	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	CALL_2
0x4014291	          0x4889c7	                            mov rdi, rax	       150	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	CALL_2
0x4014294	      0xe800000000	                          call 0x4014299	       150	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	CALL_2
0x4014299	    0x488b05000000	            mov rax, qword [0x040142a0] 	       151	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x40142a0	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       151	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x40142a3	          0x4863d2	                         movsxd rdx, edx	       151	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x40142a6	        0x4883ea01	                              sub rdx, 1	       151	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x40142aa	          0x4801d0	                            add rax, rdx	       151	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x40142ad	          0xc60020	                    mov byte [rax], 0x20	       151	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x40142b0	      0xb813000000	                           mov eax, 0x13	       152	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x40142b5	      0xe9c8010000	                           jmp 0x4014482	       152	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4
0x40142ba	              0x90	                                     nop	       154	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40142bb	            0xeb01	                           jmp 0x40142be	       154	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1
0x40142bd	              0x90	                                     nop	       147	tc-i386-intel.c	FUNCTION_144	IF_2	SWITCH_1	IF_4	IF_5
0x40142be	      0xb800000000	                              mov eax, 0	       156	tc-i386-intel.c	FUNCTION_144	IF_2
0x40142c3	      0xe9ba010000	                           jmp 0x4014482	       156	tc-i386-intel.c	FUNCTION_144	IF_2
0x40142c8	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       159	tc-i386-intel.c	FUNCTION_144	FOR_1
0x40142cf	            0xeb6c	                           jmp 0x401433d	       159	tc-i386-intel.c	FUNCTION_144	FOR_1
0x40142d1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       160	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	CALL_3
0x40142d4	        0x48c1e004	                              shl rax, 4	       160	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	CALL_3
0x40142d8	    0x480500000000	                              add rax, 0	       160	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	CALL_3
0x40142de	          0x488b00	                    mov rax, qword [rax]	       160	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	CALL_3
0x40142e1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       160	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	CALL_3
0x40142e5	          0x4889d6	                            mov rsi, rdx	       160	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	CALL_3
0x40142e8	          0x4889c7	                            mov rdi, rax	       160	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	CALL_3
0x40142eb	      0xe800000000	                          call 0x40142f0	       160	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	CALL_3
0x40142f0	            0x85c0	                           test eax, eax	       160	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	CALL_3
0x40142f2	            0x7545	                           jne 0x4014339	       160	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	CALL_3
0x40142f4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       162	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x40142f7	        0x48c1e004	                              shl rax, 4	       162	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x40142fb	    0x480500000000	                              add rax, 0	       162	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x4014301	            0x8b00	                    mov eax, dword [rax]	       162	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x4014303	            0x85c0	                           test eax, eax	       162	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x4014305	            0x741e	                            je 0x4014325	       162	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x4014307	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       163	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x401430a	        0x48c1e004	                              shl rax, 4	       163	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x401430e	    0x480500000000	                              add rax, 0	       163	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x4014314	            0x8b00	                    mov eax, dword [rax]	       163	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x4014316	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       163	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x4014319	            0x740a	                            je 0x4014325	       163	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x401431b	      0xb800000000	                              mov eax, 0	       164	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x4014320	      0xe95d010000	                           jmp 0x4014482	       164	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6	IF_7
0x4014325	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       165	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6
0x4014328	        0x48c1e004	                              shl rax, 4	       165	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6
0x401432c	    0x480500000000	                              add rax, 0	       165	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6
0x4014332	            0x8b00	                    mov eax, dword [rax]	       165	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6
0x4014334	      0xe949010000	                           jmp 0x4014482	       165	tc-i386-intel.c	FUNCTION_144	FOR_1	IF_6
0x4014339	        0x8345e401	               add dword [rbp - 0x1c], 1	       159	tc-i386-intel.c	FUNCTION_144	FOR_1
0x401433d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       159	tc-i386-intel.c	FUNCTION_144	FOR_1
0x4014340	        0x48c1e004	                              shl rax, 4	       159	tc-i386-intel.c	FUNCTION_144	FOR_1
0x4014344	    0x480500000000	                              add rax, 0	       159	tc-i386-intel.c	FUNCTION_144	FOR_1
0x401434a	          0x488b00	                    mov rax, qword [rax]	       159	tc-i386-intel.c	FUNCTION_144	FOR_1
0x401434d	          0x4885c0	                           test rax, rax	       159	tc-i386-intel.c	FUNCTION_144	FOR_1
0x4014350	     0xf857bffffff	                           jne 0x40142d1	       159	tc-i386-intel.c	FUNCTION_144	FOR_1
0x4014356	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x401435d	            0xeb30	                           jmp 0x401438f	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x401435f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x4014362	          0x4889d0	                            mov rax, rdx	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x4014365	          0x4801c0	                            add rax, rax	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x4014368	          0x4801d0	                            add rax, rdx	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x401436b	        0x48c1e003	                              shl rax, 3	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x401436f	    0x480500000000	                              add rax, 0	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x4014375	          0x488b00	                    mov rax, qword [rax]	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x4014378	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x401437c	          0x4889d6	                            mov rsi, rdx	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x401437f	          0x4889c7	                            mov rdi, rax	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x4014382	      0xe800000000	                          call 0x4014387	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x4014387	            0x85c0	                           test eax, eax	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x4014389	            0x7424	                            je 0x40143af	       169	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8	CALL_4
0x401438b	        0x8345e401	               add dword [rbp - 0x1c], 1	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x401438f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x4014392	          0x4889d0	                            mov rax, rdx	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x4014395	          0x4801c0	                            add rax, rax	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x4014398	          0x4801d0	                            add rax, rdx	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x401439b	        0x48c1e003	                              shl rax, 3	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x401439f	    0x480500000000	                              add rax, 0	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x40143a5	          0x488b00	                    mov rax, qword [rax]	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x40143a8	          0x4885c0	                           test rax, rax	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x40143ab	            0x75b2	                           jne 0x401435f	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x40143ad	            0xeb01	                           jmp 0x40143b0	       168	tc-i386-intel.c	FUNCTION_144	FOR_2
0x40143af	              0x90	                                     nop	       170	tc-i386-intel.c	FUNCTION_144	FOR_2	IF_8
0x40143b0	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143b3	          0x4889d0	                            mov rax, rdx	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143b6	          0x4801c0	                            add rax, rax	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143b9	          0x4801d0	                            add rax, rdx	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143bc	        0x48c1e003	                              shl rax, 3	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143c0	    0x480500000000	                              add rax, 0	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143c6	          0x488b00	                    mov rax, qword [rax]	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143c9	          0x4885c0	                           test rax, rax	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143cc	     0xf84ab000000	                            je 0x401447d	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143d6	           0xfb600	                   movzx eax, byte [rax]	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143d9	            0x3c20	                            cmp al, 0x20	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143db	     0xf859c000000	                           jne 0x401447d	       172	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143e1	    0x488b05000000	            mov rax, qword [0x040143e8] 	       177	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143e8	        0x4883c001	                              add rax, 1	       177	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143ec	    0x488905000000	            mov qword [0x040143f3], rax 	       177	tc-i386-intel.c	FUNCTION_144	IF_9
0x40143f3	        0x488d45e8	                   lea rax, [rbp - 0x18]	       178	tc-i386-intel.c	FUNCTION_144	IF_9	CALL_5
0x40143f7	          0x4889c7	                            mov rdi, rax	       178	tc-i386-intel.c	FUNCTION_144	IF_9	CALL_5
0x40143fa	      0xe800000000	                          call 0x40143ff	       178	tc-i386-intel.c	FUNCTION_144	IF_9	CALL_5
0x40143ff	          0x8845e3	               mov byte [rbp - 0x1d], al	       178	tc-i386-intel.c	FUNCTION_144	IF_9	CALL_5
0x4014402	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       180	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	CALL_6
0x4014406	      0xbe00000000	                              mov esi, 0	       180	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	CALL_6
0x401440b	          0x4889c7	                            mov rdi, rax	       180	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	CALL_6
0x401440e	      0xe800000000	                          call 0x4014413	       180	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	CALL_6
0x4014413	            0x85c0	                           test eax, eax	       180	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	CALL_6
0x4014415	            0x754c	                           jne 0x4014463	       180	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	CALL_6
0x4014417	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x401441b	        0x488d50ff	                      lea rdx, [rax - 1]	       183	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x401441f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       183	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x4014423	           0xfb600	                   movzx eax, byte [rax]	       183	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x4014426	            0x8802	                      mov byte [rdx], al	       183	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x4014428	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       184	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x401442c	         0xfb655e3	            movzx edx, byte [rbp - 0x1d]	       184	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x4014430	            0x8810	                      mov byte [rax], dl	       184	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x4014432	    0x8b0500000000	            mov eax, dword [0x04014438] 	       185	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	IF_11
0x4014438	            0x85c0	                           test eax, eax	       185	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	IF_11
0x401443a	            0x7f06	                            jg 0x4014442	       185	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	IF_11
0x401443c	        0x837dd401	               cmp dword [rbp - 0x2c], 1	       185	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	IF_11
0x4014440	            0x7407	                            je 0x4014449	       185	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	IF_11
0x4014442	      0xb800000000	                              mov eax, 0	       186	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	IF_11
0x4014447	            0xeb39	                           jmp 0x4014482	       186	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10	IF_11
0x4014449	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       187	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x401444c	          0x4889d0	                            mov rax, rdx	       187	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x401444f	          0x4801c0	                            add rax, rax	       187	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x4014452	          0x4801d0	                            add rax, rdx	       187	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x4014455	        0x48c1e003	                              shl rax, 3	       187	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x4014459	    0x480500000000	                              add rax, 0	       187	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x401445f	            0x8b00	                    mov eax, dword [rax]	       187	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x4014461	            0xeb1f	                           jmp 0x4014482	       187	tc-i386-intel.c	FUNCTION_144	IF_9	IF_10
0x4014463	         0xfbe45e3	            movsx eax, byte [rbp - 0x1d]	       190	tc-i386-intel.c	FUNCTION_144	IF_9	CALL_7
0x4014467	            0x89c7	                            mov edi, eax	       190	tc-i386-intel.c	FUNCTION_144	IF_9	CALL_7
0x4014469	      0xe800000000	                          call 0x401446e	       190	tc-i386-intel.c	FUNCTION_144	IF_9	CALL_7
0x401446e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       191	tc-i386-intel.c	FUNCTION_144	IF_9
0x4014472	        0x4883e801	                              sub rax, 1	       191	tc-i386-intel.c	FUNCTION_144	IF_9
0x4014476	    0x488905000000	            mov qword [0x0401447d], rax 	       191	tc-i386-intel.c	FUNCTION_144	IF_9
0x401447d	      0xb801000000	                              mov eax, 1	       194	tc-i386-intel.c	FUNCTION_144
0x4014482	        0x488b4df8	                mov rcx, qword [rbp - 8]	       195	tc-i386-intel.c	FUNCTION_144
0x4014486	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       195	tc-i386-intel.c	FUNCTION_144
0x401448f	            0x7405	                            je 0x4014496	       195	tc-i386-intel.c	FUNCTION_144
0x4014491	      0xe800000000	                          call 0x4014496	       195	tc-i386-intel.c	FUNCTION_144
0x4014496	              0xc9	                                   leave	       195	tc-i386-intel.c	FUNCTION_144
0x4014497	              0xc3	                                     ret	       195	tc-i386-intel.c	FUNCTION_144
tc_x86_parse_to_dw2regnum	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,1:DO,0	59
0x401656b	              0x55	                                push rbp	     11513	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x401656c	          0x4889e5	                            mov rbp, rsp	     11513	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x401656f	        0x4883ec20	                           sub rsp, 0x20	     11513	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x4016573	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11513	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x4016577	    0x8b0500000000	            mov eax, dword [0x0401657d] 	     11517	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x401657d	          0x8945fc	                mov dword [rbp - 4], eax	     11517	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x4016580	    0xc70500000000	               mov dword [0x0401658a], 1	     11518	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x401658a	     0xfb605000000	           movzx eax, byte [0x04016591] 	     11519	tc-i386.c	FUNCTION_135	IF_1	ELSE_1
0x4016591	          0x8845fb	                  mov byte [rbp - 5], al	     11519	tc-i386.c	FUNCTION_135	IF_1	ELSE_1
0x4016594	    0xc60500000000	            mov byte [0x0401659b], 0x2e 	     11520	tc-i386.c	FUNCTION_135	IF_1	ELSE_1
0x401659b	    0xc70500000000	               mov dword [0x040165a5], 1	     11521	tc-i386.c	FUNCTION_135	IF_1	ELSE_1
0x40165a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11522	tc-i386.c	FUNCTION_135	ELSE_1
0x40165a9	      0xba00000000	                              mov edx, 0	     11522	tc-i386.c	FUNCTION_135	ELSE_1
0x40165ae	          0x4889c6	                            mov rsi, rax	     11522	tc-i386.c	FUNCTION_135	ELSE_1
0x40165b1	      0xbf00000000	                              mov edi, 0	     11522	tc-i386.c	FUNCTION_135	ELSE_1
0x40165b6	      0xe800000000	                          call 0x40165bb	     11522	tc-i386.c	FUNCTION_135	ELSE_1
0x40165bb	    0xc70500000000	               mov dword [0x040165c5], 0	     11523	tc-i386.c	ELSE_1
0x40165c5	         0xfb645fb	               movzx eax, byte [rbp - 5]	     11524	tc-i386.c	ELSE_1
0x40165c9	    0x880500000000	               mov byte [0x040165cf], al	     11524	tc-i386.c	ELSE_1
0x40165cf	          0x8b45fc	                mov eax, dword [rbp - 4]	     11525	tc-i386.c	ELSE_1
0x40165d2	    0x890500000000	            mov dword [0x040165d8], eax 	     11525	tc-i386.c	ELSE_1
0x40165d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x40165dc	         0xfb64018	           movzx eax, byte [rax + 0x18] 	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x40165e0	            0x3c05	                               cmp al, 5	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x40165e2	            0x756e	                           jne 0x4016652	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x40165e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x40165e8	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x40165ec	          0x4885c0	                           test rax, rax	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x40165ef	            0x7861	                            js 0x4016652	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x40165f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11529	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x40165f5	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11529	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x40165f9	          0x4889c2	                            mov rdx, rax	     11529	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x40165fc	    0x8b0500000000	            mov eax, dword [0x04016602] 	     11529	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016602	            0x89c0	                            mov eax, eax	     11529	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016604	          0x4839c2	                            cmp rdx, rax	     11529	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016607	            0x7341	                           jae 0x401664a	     11529	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016609	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11531	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401660d	        0xc6401802	                mov byte [rax + 0x18], 2	     11531	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016611	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11532	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016615	        0x488b5010	            mov rdx, qword [rax + 0x10] 	     11532	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016619	    0x8b0500000000	            mov eax, dword [0x0401661f] 	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401661f	            0xd1e8	                              shr eax, 1	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016621	            0x89c1	                            mov ecx, eax	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016623	          0x4889d0	                            mov rax, rdx	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016626	          0x4801c0	                            add rax, rax	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016629	          0x4801d0	                            add rax, rdx	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401662c	        0x48c1e003	                              shl rax, 3	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016630	          0x4801c8	                            add rax, rcx	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016633	    0x480500000000	                              add rax, 0	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016639	           0xfb600	                   movzx eax, byte [rax]	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401663c	        0x480fbed0	                           movsx rdx, al	     11532	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016640	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11532	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016644	        0x48895010	             mov qword [rax + 0x10], rdx	     11532	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016648	            0xeb08	                           jmp 0x4016652	     11538	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401664a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11536	tc-i386.c	ELSE_1	FUNCTION_136	IF_1	CALL_1
0x401664e	        0xc6401800	                mov byte [rax + 0x18], 0	     11536	tc-i386.c	ELSE_1	FUNCTION_136	IF_1	CALL_1
0x4016652	              0x90	                                     nop	     11538	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016653	              0xc9	                                   leave	     11538	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4016654	              0xc3	                                     ret	     11538	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
cpu_flags_match	CALL,4:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,7:ELSE,3:DO,0	151
0x40007f3	              0x55	                                push rbp	      1702	tc-i386.c	FUNCTION_16
0x40007f4	          0x4889e5	                            mov rbp, rsp	      1702	tc-i386.c	FUNCTION_16
0x40007f7	        0x4883ec50	                           sub rsp, 0x50	      1702	tc-i386.c	FUNCTION_16
0x40007fb	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1702	tc-i386.c	FUNCTION_16
0x40007ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      1702	tc-i386.c	FUNCTION_16
0x4000808	        0x488945f8	                mov qword [rbp - 8], rax	      1702	tc-i386.c	FUNCTION_16
0x400080c	            0x31c0	                            xor eax, eax	      1702	tc-i386.c	FUNCTION_16
0x400080e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1703	tc-i386.c	FUNCTION_16
0x4000812	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1703	tc-i386.c	FUNCTION_16
0x4000816	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1703	tc-i386.c	FUNCTION_16
0x400081a	        0x488945d0	             mov qword [rbp - 0x30], rax	      1703	tc-i386.c	FUNCTION_16
0x400081e	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1703	tc-i386.c	FUNCTION_16
0x4000822	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000826	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x400082a	          0x4889d7	                            mov rdi, rdx	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x400082d	          0x4889c6	                            mov rsi, rax	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000830	      0xe8e4fdffff	          call sym.cpu_flags_check_cpu64	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000835	            0x85c0	                           test eax, eax	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000837	            0x7407	                            je 0x4000840	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000839	      0xb802000000	                              mov eax, 2	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x400083e	            0xeb05	                           jmp 0x4000845	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000840	      0xb800000000	                              mov eax, 0	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000845	          0x8945cc	             mov dword [rbp - 0x34], eax	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000848	         0xfb645dc	            movzx eax, byte [rbp - 0x24]	      1706	tc-i386.c	FUNCTION_16
0x400084c	          0x83e0bf	                     and eax, 0xffffffbf	      1706	tc-i386.c	FUNCTION_16
0x400084f	          0x8845dc	               mov byte [rbp - 0x24], al	      1706	tc-i386.c	FUNCTION_16
0x4000852	         0xfb645dc	            movzx eax, byte [rbp - 0x24]	      1707	tc-i386.c	FUNCTION_16
0x4000856	          0x83e07f	                           and eax, 0x7f	      1707	tc-i386.c	FUNCTION_16
0x4000859	          0x8845dc	               mov byte [rbp - 0x24], al	      1707	tc-i386.c	FUNCTION_16
0x400085c	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1709	tc-i386.c	FUNCTION_16	IF_1	CALL_2
0x4000860	          0x4889c7	                            mov rdi, rax	      1709	tc-i386.c	FUNCTION_16	IF_1	CALL_2
0x4000863	      0xe8f6fcffff	             call sym.cpu_flags_all_zero	      1709	tc-i386.c	FUNCTION_16	IF_1	CALL_2
0x4000868	            0x85c0	                           test eax, eax	      1709	tc-i386.c	FUNCTION_16	IF_1	CALL_2
0x400086a	            0x7409	                            je 0x4000875	      1709	tc-i386.c	FUNCTION_16	IF_1	CALL_2
0x400086c	        0x834dcc01	                or dword [rbp - 0x34], 1	      1712	tc-i386.c	FUNCTION_16	IF_1
0x4000870	      0xe95a010000	                           jmp 0x40009cf	      1712	tc-i386.c	FUNCTION_16	IF_1
0x4000875	    0x488b05000000	            mov rax, qword [0x0400087c] 	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x400087c	    0x488b15000000	            mov rdx, qword [0x04000883] 	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x4000883	        0x488945e0	             mov qword [rbp - 0x20], rax	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x4000887	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x400088b	         0xfb645d4	            movzx eax, byte [rbp - 0x2c]	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x400088f	          0x83e008	                              and eax, 8	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4000892	            0x84c0	                             test al, al	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4000894	            0x7413	                            je 0x40008a9	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4000896	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x400089a	          0x83e008	                              and eax, 8	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x400089d	            0x84c0	                             test al, al	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x400089f	            0x7508	                           jne 0x40008a9	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x40008a1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1721	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x40008a4	      0xe929010000	                           jmp 0x40009d2	      1721	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x40008a9	         0xfb645d4	            movzx eax, byte [rbp - 0x2c]	      1722	tc-i386.c	FUNCTION_16	ELSE_1
0x40008ad	          0x83e0f7	                     and eax, 0xfffffff7	      1722	tc-i386.c	FUNCTION_16	ELSE_1
0x40008b0	          0x8845d4	               mov byte [rbp - 0x2c], al	      1722	tc-i386.c	FUNCTION_16	ELSE_1
0x40008b3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1724	tc-i386.c	FUNCTION_16	ELSE_1	CALL_3
0x40008b7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1724	tc-i386.c	FUNCTION_16	ELSE_1	CALL_3
0x40008bb	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	      1724	tc-i386.c	FUNCTION_16	ELSE_1	CALL_3
0x40008bf	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1724	tc-i386.c	FUNCTION_16	ELSE_1	CALL_3
0x40008c3	          0x4889d1	                            mov rcx, rdx	      1724	tc-i386.c	FUNCTION_16	ELSE_1	CALL_3
0x40008c6	          0x4889c2	                            mov rdx, rax	      1724	tc-i386.c	FUNCTION_16	ELSE_1	CALL_3
0x40008c9	      0xe89afdffff	                  call sym.cpu_flags_and	      1724	tc-i386.c	FUNCTION_16	ELSE_1	CALL_3
0x40008ce	        0x488945e0	             mov qword [rbp - 0x20], rax	      1724	tc-i386.c	FUNCTION_16	ELSE_1	CALL_3
0x40008d2	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1724	tc-i386.c	FUNCTION_16	ELSE_1	CALL_3
0x40008d6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1725	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40008da	          0x4889c7	                            mov rdi, rax	      1725	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40008dd	      0xe87cfcffff	             call sym.cpu_flags_all_zero	      1725	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40008e2	            0x85c0	                           test eax, eax	      1725	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40008e4	     0xf85e5000000	                           jne 0x40009cf	      1725	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40008ea	         0xfb645d3	            movzx eax, byte [rbp - 0x2d]	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40008ee	          0x83e020	                           and eax, 0x20	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40008f1	            0x84c0	                             test al, al	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40008f3	            0x7478	                            je 0x400096d	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40008f5	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40008f9	          0x83e020	                           and eax, 0x20	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40008fc	            0x84c0	                             test al, al	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40008fe	     0xf84cb000000	                            je 0x40009cf	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000904	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000908	         0xfb6402e	           movzx eax, byte [rax + 0x2e] 	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400090c	          0x83e040	                           and eax, 0x40	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400090f	            0x84c0	                             test al, al	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000911	            0x740e	                            je 0x4000921	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000913	    0x8b0500000000	            mov eax, dword [0x04000919] 	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000919	            0x85c0	                           test eax, eax	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400091b	     0xf84ae000000	                            je 0x40009cf	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000921	         0xfb645d5	            movzx eax, byte [rbp - 0x2b]	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000925	          0x83e008	                              and eax, 8	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000928	            0x84c0	                             test al, al	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400092a	            0x740f	                            je 0x400093b	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400092c	         0xfb645e5	            movzx eax, byte [rbp - 0x1b]	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000930	          0x83e008	                              and eax, 8	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000933	            0x84c0	                             test al, al	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000935	     0xf8494000000	                            je 0x40009cf	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400093b	         0xfb645db	            movzx eax, byte [rbp - 0x25]	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400093f	          0x83e020	                           and eax, 0x20	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000942	            0x84c0	                             test al, al	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000944	            0x740b	                            je 0x4000951	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000946	         0xfb645eb	            movzx eax, byte [rbp - 0x15]	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400094a	          0x83e020	                           and eax, 0x20	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400094d	            0x84c0	                             test al, al	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400094f	            0x747e	                            je 0x40009cf	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000951	         0xfb645d5	            movzx eax, byte [rbp - 0x2b]	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000955	          0x83e010	                           and eax, 0x10	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000958	            0x84c0	                             test al, al	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400095a	            0x740b	                            je 0x4000967	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400095c	         0xfb645e5	            movzx eax, byte [rbp - 0x1b]	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000960	          0x83e010	                           and eax, 0x10	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000963	            0x84c0	                             test al, al	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000965	            0x7468	                            je 0x40009cf	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000967	        0x834dcc01	                or dword [rbp - 0x34], 1	      1735	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400096b	            0xeb62	                           jmp 0x40009cf	      1735	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400096d	         0xfb645d3	            movzx eax, byte [rbp - 0x2d]	      1737	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6
0x4000971	          0x83e080	                     and eax, 0xffffff80	      1737	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6
0x4000974	            0x84c0	                             test al, al	      1737	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6
0x4000976	            0x7453	                            je 0x40009cb	      1737	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6
0x4000978	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      1740	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400097c	          0x83e080	                     and eax, 0xffffff80	      1740	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400097f	            0x84c0	                             test al, al	      1740	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000981	            0x744c	                            je 0x40009cf	      1740	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000983	         0xfb645db	            movzx eax, byte [rbp - 0x25]	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000987	          0x83e020	                           and eax, 0x20	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400098a	            0x84c0	                             test al, al	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400098c	            0x740b	                            je 0x4000999	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400098e	         0xfb645eb	            movzx eax, byte [rbp - 0x15]	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000992	          0x83e020	                           and eax, 0x20	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000995	            0x84c0	                             test al, al	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000997	            0x7436	                            je 0x40009cf	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000999	         0xfb645db	            movzx eax, byte [rbp - 0x25]	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400099d	          0x83e040	                           and eax, 0x40	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009a0	            0x84c0	                             test al, al	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009a2	            0x740b	                            je 0x40009af	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009a4	         0xfb645eb	            movzx eax, byte [rbp - 0x15]	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009a8	          0x83e040	                           and eax, 0x40	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009ab	            0x84c0	                             test al, al	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009ad	            0x7420	                            je 0x40009cf	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009af	         0xfb645db	            movzx eax, byte [rbp - 0x25]	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009b3	          0x83e080	                     and eax, 0xffffff80	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009b6	            0x84c0	                             test al, al	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009b8	            0x740b	                            je 0x40009c5	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009ba	         0xfb645eb	            movzx eax, byte [rbp - 0x15]	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009be	          0x83e080	                     and eax, 0xffffff80	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009c1	            0x84c0	                             test al, al	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009c3	            0x740a	                            je 0x40009cf	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009c5	        0x834dcc01	                or dword [rbp - 0x34], 1	      1744	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009c9	            0xeb04	                           jmp 0x40009cf	      1744	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40009cb	        0x834dcc01	                or dword [rbp - 0x34], 1	      1747	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_3
0x40009cf	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1750	tc-i386.c	FUNCTION_16	ELSE_3
0x40009d2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x40009d6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x40009df	            0x7405	                            je 0x40009e6	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x40009e1	      0xe800000000	                          call 0x40009e6	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x40009e6	              0xc9	                                   leave	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x40009e7	              0xc3	                                     ret	      1751	tc-i386.c	FUNCTION_16	ELSE_3
i386_generate_nops	CALL,9:FOR,0:WHILE,0:functions,0:SWITCH,3:IF,13:ELSE,9:DO,0	207
0x40001ca	              0x55	                                push rbp	      1301	tc-i386.c	FUNCTION_6
0x40001cb	          0x4889e5	                            mov rbp, rsp	      1301	tc-i386.c	FUNCTION_6
0x40001ce	        0x4883ec40	                           sub rsp, 0x40	      1301	tc-i386.c	FUNCTION_6
0x40001d2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1301	tc-i386.c	FUNCTION_6
0x40001d6	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1301	tc-i386.c	FUNCTION_6
0x40001da	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1301	tc-i386.c	FUNCTION_6
0x40001de	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      1301	tc-i386.c	FUNCTION_6
0x40001e1	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1302	tc-i386.c	FUNCTION_6
0x40001e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x40001ed	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x40001f0	          0x83f803	                              cmp eax, 3	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x40001f3	            0x740a	                            je 0x40001ff	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x40001f5	          0x83f80a	                            cmp eax, 0xa	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x40001f8	            0x7405	                            je 0x40001ff	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x40001fa	      0xe9d6020000	                           jmp 0x40004d5	      1313	tc-i386.c	FUNCTION_6	SWITCH_1
0x40001ff	              0x90	                                     nop	      1311	tc-i386.c	FUNCTION_6	SWITCH_1
0x4000200	    0x8b0500000000	            mov eax, dword [0x04000206] 	      1330	tc-i386.c	FUNCTION_6	IF_1
0x4000206	          0x83f801	                              cmp eax, 1	      1330	tc-i386.c	FUNCTION_6	IF_1
0x4000209	            0x751b	                           jne 0x4000226	      1330	tc-i386.c	FUNCTION_6	IF_1
0x400020b	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1332	tc-i386.c	FUNCTION_6	IF_1
0x4000213	    0xc745e4040000	               mov dword [rbp - 0x1c], 4	      1333	tc-i386.c	FUNCTION_6	IF_1
0x400021a	    0xc745e8020000	               mov dword [rbp - 0x18], 2	      1335	tc-i386.c	FUNCTION_6	IF_1
0x4000221	      0xe90a010000	                           jmp 0x4000330	      1335	tc-i386.c	FUNCTION_6	IF_1
0x4000226	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1339	tc-i386.c	FUNCTION_6	ELSE_1	IF_2
0x400022a	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1339	tc-i386.c	FUNCTION_6	ELSE_1	IF_2
0x400022d	            0x85c0	                           test eax, eax	      1339	tc-i386.c	FUNCTION_6	ELSE_1	IF_2
0x400022f	            0x755c	                           jne 0x400028d	      1339	tc-i386.c	FUNCTION_6	ELSE_1	IF_2
0x4000231	    0x8b0500000000	            mov eax, dword [0x04000237] 	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x4000237	          0x83f815	                           cmp eax, 0x15	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400023a	     0xf87c8000000	                            ja 0x4000308	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x4000240	            0x89c0	                            mov eax, eax	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x4000242	    0x488b04c50000	                  mov rax, qword [rax*8]	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400024a	            0xffe0	                                 jmp rax	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400024c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1347	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	IF_3
0x4000250	         0xfb64068	           movzx eax, byte [rax + 0x68] 	      1347	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	IF_3
0x4000254	          0x83e080	                     and eax, 0xffffff80	      1347	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	IF_3
0x4000257	            0x84c0	                             test al, al	      1347	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	IF_3
0x4000259	            0x740d	                            je 0x4000268	      1347	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	IF_3
0x400025b	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1348	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	IF_3
0x4000263	      0xe9a0000000	                           jmp 0x4000308	      1351	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	ELSE_2
0x4000268	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1350	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	ELSE_2
0x4000270	      0xe993000000	                           jmp 0x4000308	      1351	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	ELSE_2
0x4000275	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1367	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	ELSE_2
0x400027d	      0xe986000000	                           jmp 0x4000308	      1368	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	ELSE_2
0x4000282	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1375	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	ELSE_2
0x400028a	              0x90	                                     nop	      1376	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	ELSE_2
0x400028b	            0xeb7b	                           jmp 0x4000308	      1376	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	ELSE_2
0x400028d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x4000291	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x4000294	          0x83f815	                           cmp eax, 0x15	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x4000297	            0x776f	                            ja 0x4000308	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x4000299	            0x89c0	                            mov eax, eax	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400029b	    0x488b04c50000	                  mov rax, qword [rax*8]	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x40002a3	            0xffe0	                                 jmp rax	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x40002a5	      0xba00000000	                              mov edx, 0	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x40002aa	      0xbe6a050000	                          mov esi, 0x56a	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x40002af	      0xbf00000000	                              mov edi, 0	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x40002b4	      0xe800000000	                          call 0x40002b9	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x40002b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1403	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_4
0x40002bd	         0xfb64068	           movzx eax, byte [rax + 0x68] 	      1403	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_4
0x40002c1	          0x83e080	                     and eax, 0xffffff80	      1403	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_4
0x40002c4	            0x84c0	                             test al, al	      1403	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_4
0x40002c6	            0x740a	                            je 0x40002d2	      1403	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_4
0x40002c8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1404	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_4
0x40002d0	            0xeb36	                           jmp 0x4000308	      1407	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x40002d2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1406	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	ELSE_4
0x40002da	            0xeb2c	                           jmp 0x4000308	      1407	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x40002dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1416	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_5
0x40002e0	         0xfb64068	           movzx eax, byte [rax + 0x68] 	      1416	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_5
0x40002e4	          0x83e080	                     and eax, 0xffffff80	      1416	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_5
0x40002e7	            0x84c0	                             test al, al	      1416	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_5
0x40002e9	            0x740a	                            je 0x40002f5	      1416	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_5
0x40002eb	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1417	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_5
0x40002f3	            0xeb13	                           jmp 0x4000308	      1420	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	ELSE_5
0x40002f5	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1419	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	ELSE_5
0x40002fd	            0xeb09	                           jmp 0x4000308	      1420	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	ELSE_5
0x40002ff	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1422	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	ELSE_5
0x4000307	              0x90	                                     nop	      1423	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	ELSE_5
0x4000308	    0x48817df00000	               cmp qword [rbp - 0x10], 0	      1427	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_5	IF_6
0x4000310	            0x7510	                           jne 0x4000322	      1427	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_5	IF_6
0x4000312	    0xc745e4070000	               mov dword [rbp - 0x1c], 7	      1429	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_5	IF_6
0x4000319	    0xc745e8020000	               mov dword [rbp - 0x18], 2	      1431	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_5	IF_6
0x4000320	            0xeb0e	                           jmp 0x4000330	      1431	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_5	IF_6
0x4000322	    0xc745e40b0000	            mov dword [rbp - 0x1c], 0xb 	      1435	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x4000329	    0xc745e8070000	               mov dword [rbp - 0x18], 7	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x4000330	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1441	tc-i386.c	FUNCTION_6	IF_7
0x4000334	            0x7506	                           jne 0x400033c	      1441	tc-i386.c	FUNCTION_6	IF_7
0x4000336	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1442	tc-i386.c	FUNCTION_6	IF_7
0x4000339	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1442	tc-i386.c	FUNCTION_6	IF_7
0x400033c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1444	tc-i386.c	FUNCTION_6	IF_8
0x4000340	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1444	tc-i386.c	FUNCTION_6	IF_8
0x4000343	          0x83f80a	                            cmp eax, 0xa	      1444	tc-i386.c	FUNCTION_6	IF_8
0x4000346	            0x7544	                           jne 0x400038c	      1444	tc-i386.c	FUNCTION_6	IF_8
0x4000348	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1447	tc-i386.c	FUNCTION_6	IF_8	IF_9
0x400034b	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1447	tc-i386.c	FUNCTION_6	IF_8	IF_9
0x400034e	            0x7e48	                           jle 0x4000398	      1447	tc-i386.c	FUNCTION_6	IF_8	IF_9
0x4000350	      0xbf00000000	                              mov edi, 0	      1450	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_3
0x4000355	      0xe800000000	                          call 0x400035a	      1450	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_3
0x400035a	          0x4889c7	                            mov rdi, rax	      1450	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_3
0x400035d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x4000361	          0x8b7048	            mov esi, dword [rax + 0x48] 	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x4000364	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x4000368	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400036c	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400036f	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x4000372	          0x4189c8	                            mov r8d, ecx	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x4000375	            0x89d1	                            mov ecx, edx	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x4000377	          0x4889fa	                            mov rdx, rdi	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400037a	          0x4889c7	                            mov rdi, rax	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400037d	      0xb800000000	                              mov eax, 0	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x4000382	      0xe800000000	                          call 0x4000387	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x4000387	      0xe949010000	                           jmp 0x40004d5	      1453	tc-i386.c	FUNCTION_6	IF_8	IF_9
0x400038c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1457	tc-i386.c	FUNCTION_6	ELSE_7
0x4000390	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1457	tc-i386.c	FUNCTION_6	ELSE_7
0x4000394	        0x48895018	             mov qword [rax + 0x18], rdx	      1457	tc-i386.c	FUNCTION_6	ELSE_7
0x4000398	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400039b	          0x4863f0	                         movsxd rsi, eax	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400039e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x40003a2	            0x4899	                                     cqo	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x40003a4	          0x48f7fe	                                idiv rsi	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x40003a7	          0x4889c2	                            mov rdx, rax	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x40003aa	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x40003ad	            0x4898	                                    cdqe	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x40003af	          0x4839c2	                            cmp rdx, rax	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x40003b2	     0xf8e00010000	                           jle 0x40004b8	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x40003b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1462	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x40003bc	        0x4883e802	                              sub rax, 2	      1462	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x40003c0	        0x488945f8	                mov qword [rbp - 8], rax	      1462	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x40003c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x40003c8	          0x4889c7	                            mov rdi, rax	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x40003cb	      0xe8c2fdffff	                   call sym.fits_in_imm7	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x40003d0	            0x85c0	                           test eax, eax	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x40003d2	            0x742d	                            je 0x4000401	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x40003d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1466	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x40003d8	        0x488945c8	             mov qword [rbp - 0x38], rax	      1466	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x40003dc	      0xb8ebffffff	                     mov eax, 0xffffffeb	      1467	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x40003e1	            0x89c2	                            mov edx, eax	      1467	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x40003e3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1467	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x40003e7	            0x8810	                      mov byte [rax], dl	      1467	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x40003e9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x40003ed	        0x4883c001	                              add rax, 1	      1468	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x40003f1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1468	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x40003f5	            0x8810	                      mov byte [rax], dl	      1468	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x40003f7	      0x488345d002	               add qword [rbp - 0x30], 2	      1469	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x40003fc	      0xe9b7000000	                           jmp 0x40004b8	      1469	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x4000401	    0x8b0500000000	            mov eax, dword [0x04000407] 	      1475	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x4000407	          0x83f801	                              cmp eax, 1	      1475	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400040a	            0x7525	                           jne 0x4000431	      1475	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400040c	      0xb866000000	                           mov eax, 0x66	      1477	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x4000411	            0x89c2	                            mov edx, eax	      1477	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x4000413	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1477	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x4000417	            0x8810	                      mov byte [rax], dl	      1477	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x4000419	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1478	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400041d	        0x4883c001	                              add rax, 1	      1478	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x4000421	      0xbae9ffffff	                     mov edx, 0xffffffe9	      1478	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x4000426	            0x8810	                      mov byte [rax], dl	      1478	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x4000428	    0xc745ec020000	               mov dword [rbp - 0x14], 2	      1479	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400042f	            0xeb14	                           jmp 0x4000445	      1479	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x4000431	      0xb8e9ffffff	                     mov eax, 0xffffffe9	      1483	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	ELSE_9
0x4000436	            0x89c2	                            mov edx, eax	      1483	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	ELSE_9
0x4000438	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1483	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	ELSE_9
0x400043c	            0x8810	                      mov byte [rax], dl	      1483	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	ELSE_9
0x400043e	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      1484	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	ELSE_9
0x4000445	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1487	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x4000448	          0x83c004	                              add eax, 4	      1487	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x400044b	            0x89c0	                            mov eax, eax	      1487	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x400044d	        0x482945c8	             sub qword [rbp - 0x38], rax	      1487	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x4000451	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x4000455	          0x4889c7	                            mov rdi, rax	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x4000458	      0xe850fdffff	                  call sym.fits_in_imm31	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x400045d	            0x85c0	                           test eax, eax	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x400045f	            0x752d	                           jne 0x400048e	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x4000461	      0xbf00000000	                              mov edi, 0	      1491	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_7
0x4000466	      0xe800000000	                          call 0x400046b	      1491	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_7
0x400046b	          0x4889c2	                            mov rdx, rax	      1491	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_7
0x400046e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x4000472	          0x8b4848	            mov ecx, dword [rax + 0x48] 	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x4000475	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x4000479	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400047d	            0x89ce	                            mov esi, ecx	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400047f	          0x4889c7	                            mov rdi, rax	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x4000482	      0xb800000000	                              mov eax, 0	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x4000487	      0xe800000000	                          call 0x400048c	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400048c	            0xeb47	                           jmp 0x40004d5	      1492	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13
0x400048e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x4000492	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x4000495	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x4000499	          0x4801d1	                            add rcx, rdx	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x400049c	      0xba04000000	                              mov edx, 4	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x40004a1	          0x4889c6	                            mov rsi, rax	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x40004a4	          0x4889cf	                            mov rdi, rcx	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x40004a7	      0xe800000000	                          call 0x40004ac	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x40004ac	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1496	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x40004af	          0x83c004	                              add eax, 4	      1496	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x40004b2	            0x89c0	                            mov eax, eax	      1496	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x40004b4	        0x480145d0	            add qword [rbp - 0x30], rax 	      1496	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x40004b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1501	tc-i386.c	FUNCTION_6	CALL_9
0x40004bc	            0x89c7	                            mov edi, eax	      1501	tc-i386.c	FUNCTION_6	CALL_9
0x40004be	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1501	tc-i386.c	FUNCTION_6	CALL_9
0x40004c1	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1501	tc-i386.c	FUNCTION_6	CALL_9
0x40004c5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1501	tc-i386.c	FUNCTION_6	CALL_9
0x40004c9	            0x89d1	                            mov ecx, edx	      1501	tc-i386.c	FUNCTION_6	CALL_9
0x40004cb	            0x89fa	                            mov edx, edi	      1501	tc-i386.c	FUNCTION_6	CALL_9
0x40004cd	          0x4889c7	                            mov rdi, rax	      1501	tc-i386.c	FUNCTION_6	CALL_9
0x40004d0	      0xe86bfbffff	               call sym.i386_output_nops	      1501	tc-i386.c	FUNCTION_6	CALL_9
0x40004d5	              0xc9	                                   leave	      1502	tc-i386.c	FUNCTION_6
0x40004d6	              0xc3	                                     ret	      1502	tc-i386.c	FUNCTION_6
optimize_imm	CALL,10:FOR,3:WHILE,0:functions,0:SWITCH,3:IF,12:ELSE,5:DO,0	395
0x4006444	              0x55	                                push rbp	      4746	tc-i386.c	FUNCTION_73
0x4006445	          0x4889e5	                            mov rbp, rsp	      4746	tc-i386.c	FUNCTION_73
0x4006448	              0x53	                                push rbx	      4746	tc-i386.c	FUNCTION_73
0x4006449	        0x4883ec38	                           sub rsp, 0x38	      4746	tc-i386.c	FUNCTION_73
0x400644d	    0x64488b042528	                mov rax, qword fs:[0x28]	      4746	tc-i386.c	FUNCTION_73
0x4006456	        0x488945e8	             mov qword [rbp - 0x18], rax	      4746	tc-i386.c	FUNCTION_73
0x400645a	            0x31c0	                            xor eax, eax	      4746	tc-i386.c	FUNCTION_73
0x400645c	        0xc645c300	                mov byte [rbp - 0x3d], 0	      4747	tc-i386.c	FUNCTION_73
0x4006460	     0xfb605000000	           movzx eax, byte [0x04006467] 	      4750	tc-i386.c	FUNCTION_73	IF_1
0x4006467	            0x84c0	                             test al, al	      4750	tc-i386.c	FUNCTION_73	IF_1
0x4006469	            0x740f	                            je 0x400647a	      4750	tc-i386.c	FUNCTION_73	IF_1
0x400646b	     0xfb605000000	           movzx eax, byte [0x04006472] 	      4751	tc-i386.c	FUNCTION_73	IF_1
0x4006472	          0x8845c3	               mov byte [rbp - 0x3d], al	      4751	tc-i386.c	FUNCTION_73	IF_1
0x4006475	      0xe934010000	                           jmp 0x40065ae	      4751	tc-i386.c	FUNCTION_73	IF_1
0x400647a	    0x8b0500000000	            mov eax, dword [0x04006480] 	      4752	tc-i386.c	FUNCTION_73	ELSE_1	IF_2
0x4006480	            0x85c0	                           test eax, eax	      4752	tc-i386.c	FUNCTION_73	ELSE_1	IF_2
0x4006482	     0xf8404010000	                            je 0x400658c	      4752	tc-i386.c	FUNCTION_73	ELSE_1	IF_2
0x4006488	    0x8b0500000000	            mov eax, dword [0x0400648e] 	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x400648e	          0x8945c4	             mov dword [rbp - 0x3c], eax	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x4006491	      0xe9e6000000	                           jmp 0x400657c	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x4006496	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x4006499	            0x4898	                                    cdqe	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400649b	        0x4883c00e	                            add rax, 0xe	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400649f	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064a7	          0x83e001	                              and eax, 1	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064aa	            0x84c0	                             test al, al	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064ac	            0x7424	                            je 0x40064d2	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064ae	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064b1	            0x4898	                                    cdqe	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064b3	        0x4883c00e	                            add rax, 0xe	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064b7	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064bf	          0xc0e805	                               shr al, 5	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064c2	          0x83e001	                              and eax, 1	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064c5	            0x84c0	                             test al, al	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064c7	            0x7409	                            je 0x40064d2	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064c9	        0xc645c362	            mov byte [rbp - 0x3d], 0x62 	      4761	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064cd	      0xe9dc000000	                           jmp 0x40065ae	      4762	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40064d2	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064d5	            0x4898	                                    cdqe	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064d7	        0x4883c00e	                            add rax, 0xe	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064db	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064e3	          0x83e001	                              and eax, 1	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064e6	            0x84c0	                             test al, al	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064e8	            0x7424	                            je 0x400650e	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064ea	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064ed	            0x4898	                                    cdqe	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064ef	        0x4883c00e	                            add rax, 0xe	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064f3	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064fb	          0xc0e806	                               shr al, 6	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40064fe	          0x83e001	                              and eax, 1	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x4006501	            0x84c0	                             test al, al	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x4006503	            0x7409	                            je 0x400650e	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x4006505	        0xc645c377	            mov byte [rbp - 0x3d], 0x77 	      4766	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x4006509	      0xe9a0000000	                           jmp 0x40065ae	      4767	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x400650e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x4006511	            0x4898	                                    cdqe	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x4006513	        0x4883c00e	                            add rax, 0xe	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x4006517	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x400651f	          0x83e001	                              and eax, 1	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x4006522	            0x84c0	                             test al, al	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x4006524	            0x741e	                            je 0x4006544	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x4006526	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x4006529	            0x4898	                                    cdqe	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x400652b	        0x4883c00e	                            add rax, 0xe	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x400652f	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x4006537	          0xc0e807	                               shr al, 7	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x400653a	            0x84c0	                             test al, al	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x400653c	            0x7406	                            je 0x4006544	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x400653e	        0xc645c36c	            mov byte [rbp - 0x3d], 0x6c 	      4771	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x4006542	            0xeb6a	                           jmp 0x40065ae	      4772	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x4006544	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x4006547	            0x4898	                                    cdqe	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x4006549	        0x4883c00e	                            add rax, 0xe	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400654d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x4006555	          0x83e001	                              and eax, 1	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x4006558	            0x84c0	                             test al, al	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400655a	            0x7420	                            je 0x400657c	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400655c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400655f	            0x4898	                                    cdqe	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x4006561	        0x4883c00e	                            add rax, 0xe	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x4006565	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400656d	            0xd0e8	                               shr al, 1	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400656f	          0x83e001	                              and eax, 1	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x4006572	            0x84c0	                             test al, al	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x4006574	            0x7406	                            je 0x400657c	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x4006576	        0xc645c371	            mov byte [rbp - 0x3d], 0x71 	      4776	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400657a	            0xeb32	                           jmp 0x40065ae	      4777	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400657c	        0x836dc401	               sub dword [rbp - 0x3c], 1	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x4006580	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x4006584	     0xf890cffffff	                           jns 0x4006496	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x400658a	            0xeb22	                           jmp 0x40065ae	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x400658c	    0x8b0500000000	            mov eax, dword [0x04006592] 	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x4006592	          0x83f801	                              cmp eax, 1	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x4006595	           0xf94c2	                                 sete dl	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x4006598	     0xfb605000000	           movzx eax, byte [0x0400659f] 	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x400659f	            0x84c0	                             test al, al	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40065a1	           0xf95c0	                                setne al	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40065a4	            0x31d0	                            xor eax, edx	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40065a6	            0x84c0	                             test al, al	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40065a8	            0x7404	                            je 0x40065ae	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40065aa	        0xc645c377	            mov byte [rbp - 0x3d], 0x77 	      4781	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40065ae	    0x8b0500000000	            mov eax, dword [0x040065b4] 	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x40065b4	          0x8945c4	             mov dword [rbp - 0x3c], eax	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x40065b7	      0xe95e040000	                           jmp 0x4006a1a	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x40065bc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x40065bf	            0x4898	                                    cdqe	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x40065c1	        0x4883c00e	                            add rax, 0xe	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x40065c5	    0x488b04c50000	                  mov rax, qword [rax*8]	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x40065cd	      0xbe01000000	                              mov esi, 1	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x40065d2	          0x4889c7	                            mov rdi, rax	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x40065d5	      0xe852a5ffff	             call sym.operand_type_check	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x40065da	            0x85c0	                           test eax, eax	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x40065dc	     0xf8438040000	                            je 0x4006a1a	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x40065e2	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x40065e5	            0x4898	                                    cdqe	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x40065e7	        0x4883c014	                           add rax, 0x14	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x40065eb	    0x488b04c50000	                  mov rax, qword [rax*8]	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x40065f3	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x40065f7	           0xfb6c0	                           movzx eax, al	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x40065fa	          0x83f802	                              cmp eax, 2	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x40065fd	            0x7417	                            je 0x4006616	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x40065ff	          0x83f805	                              cmp eax, 5	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x4006602	     0xf84dd020000	                            je 0x40068e5	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x4006608	          0x83f801	                              cmp eax, 1	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400660b	     0xf84d4020000	                            je 0x40068e5	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x4006611	      0xe9e3020000	                           jmp 0x40068f9	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x4006616	         0xfbe45c3	            movsx eax, byte [rbp - 0x3d]	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400661a	          0x83f86c	                           cmp eax, 0x6c	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400661d	            0x7413	                            je 0x4006632	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400661f	          0x83f877	                           cmp eax, 0x77	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006622	            0x7449	                            je 0x400666d	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006624	          0x83f862	                           cmp eax, 0x62	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006627	     0xf84b1000000	                            je 0x40066de	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400662d	      0xe94f010000	                           jmp 0x4006781	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006632	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4793	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006635	            0x4898	                                    cdqe	      4793	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006637	        0x4883c00e	                            add rax, 0xe	      4793	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400663b	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4793	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006643	          0x83ca20	                            or edx, 0x20	      4793	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006646	    0x8814c5000000	                    mov byte [rax*8], dl	      4793	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400664d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4794	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006650	            0x4898	                                    cdqe	      4794	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006652	        0x4883c00e	                            add rax, 0xe	      4794	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006656	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4794	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400665e	          0x83ca80	                      or edx, 0xffffff80	      4794	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006661	    0x8814c5000000	                    mov byte [rax*8], dl	      4794	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006668	      0xe914010000	                           jmp 0x4006781	      4795	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400666d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4797	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006670	            0x4898	                                    cdqe	      4797	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006672	        0x4883c00e	                            add rax, 0xe	      4797	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006676	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4797	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400667e	          0x83ca10	                            or edx, 0x10	      4797	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006681	    0x8814c5000000	                    mov byte [rax*8], dl	      4797	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006688	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4798	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400668b	            0x4898	                                    cdqe	      4798	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400668d	        0x4883c00e	                            add rax, 0xe	      4798	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006691	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4798	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006699	          0x83ca20	                            or edx, 0x20	      4798	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400669c	    0x8814c5000000	                    mov byte [rax*8], dl	      4798	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066a3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4799	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066a6	            0x4898	                                    cdqe	      4799	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066a8	        0x4883c00e	                            add rax, 0xe	      4799	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066ac	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4799	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066b4	          0x83ca40	                            or edx, 0x40	      4799	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066b7	    0x8814c5000000	                    mov byte [rax*8], dl	      4799	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066be	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4800	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066c1	            0x4898	                                    cdqe	      4800	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066c3	        0x4883c00e	                            add rax, 0xe	      4800	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066c7	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4800	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066cf	          0x83ca80	                      or edx, 0xffffff80	      4800	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066d2	    0x8814c5000000	                    mov byte [rax*8], dl	      4800	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066d9	      0xe9a3000000	                           jmp 0x4006781	      4801	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066de	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4803	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066e1	            0x4898	                                    cdqe	      4803	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066e3	        0x4883c00e	                            add rax, 0xe	      4803	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066e7	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4803	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066ef	          0x83ca04	                               or edx, 4	      4803	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066f2	    0x8814c5000000	                    mov byte [rax*8], dl	      4803	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066f9	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4804	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066fc	            0x4898	                                    cdqe	      4804	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x40066fe	        0x4883c00e	                            add rax, 0xe	      4804	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006702	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4804	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400670a	          0x83ca08	                               or edx, 8	      4804	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400670d	    0x8814c5000000	                    mov byte [rax*8], dl	      4804	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006714	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4805	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006717	            0x4898	                                    cdqe	      4805	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006719	        0x4883c00e	                            add rax, 0xe	      4805	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400671d	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4805	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006725	          0x83ca10	                            or edx, 0x10	      4805	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006728	    0x8814c5000000	                    mov byte [rax*8], dl	      4805	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400672f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4806	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006732	            0x4898	                                    cdqe	      4806	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006734	        0x4883c00e	                            add rax, 0xe	      4806	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006738	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4806	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006740	          0x83ca20	                            or edx, 0x20	      4806	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006743	    0x8814c5000000	                    mov byte [rax*8], dl	      4806	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400674a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4807	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400674d	            0x4898	                                    cdqe	      4807	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400674f	        0x4883c00e	                            add rax, 0xe	      4807	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006753	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4807	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400675b	          0x83ca40	                            or edx, 0x40	      4807	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400675e	    0x8814c5000000	                    mov byte [rax*8], dl	      4807	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006765	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4808	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006768	            0x4898	                                    cdqe	      4808	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400676a	        0x4883c00e	                            add rax, 0xe	      4808	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400676e	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4808	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006776	          0x83ca80	                      or edx, 0xffffff80	      4808	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006779	    0x8814c5000000	                    mov byte [rax*8], dl	      4808	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006780	              0x90	                                     nop	      4809	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4006781	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x4006784	            0x4898	                                    cdqe	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x4006786	        0x4883c00e	                            add rax, 0xe	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400678a	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x4006792	          0xc0e804	                               shr al, 4	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x4006795	          0x83e001	                              and eax, 1	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x4006798	            0x84c0	                             test al, al	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400679a	            0x7456	                            je 0x40067f2	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400679c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400679f	            0x4898	                                    cdqe	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067a1	        0x4883c014	                           add rax, 0x14	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067a5	    0x488b04c50000	                  mov rax, qword [rax*8]	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067ad	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067b1	        0x66b80000	                               mov ax, 0	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067b5	          0x4885c0	                           test rax, rax	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067b8	            0x7538	                           jne 0x40067f2	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067ba	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067bd	            0x4898	                                    cdqe	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067bf	        0x4883c014	                           add rax, 0x14	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067c3	    0x488b04c50000	                  mov rax, qword [rax*8]	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067cb	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      4821	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067ce	          0x4863d2	                         movsxd rdx, edx	      4821	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067d1	        0x4883c214	                           add rdx, 0x14	      4821	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067d5	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      4821	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067dd	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4821	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067e1	           0xfb7d2	                           movzx edx, dx	      4821	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067e4	          0x80f680	                            xor dh, 0x80	      4821	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067e7	    0x4881ea008000	                         sub rdx, 0x8000	      4821	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067ee	        0x48895010	             mov qword [rax + 0x10], rdx	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x40067f2	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x40067f5	            0x4898	                                    cdqe	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x40067f7	        0x4883c00e	                            add rax, 0xe	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x40067fb	     0xfb604c50000	                 movzx eax, byte [rax*8]	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006803	          0xc0e805	                               shr al, 5	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006806	          0x83e001	                              and eax, 1	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006809	            0x84c0	                             test al, al	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400680b	            0x7461	                            je 0x400686e	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400680d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006810	            0x4898	                                    cdqe	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006812	        0x4883c014	                           add rax, 0x14	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006816	    0x488b04c50000	                  mov rax, qword [rax*8]	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400681e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006822	    0x48b800000000	          movabs rax, 0xffffffff00000000	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400682c	          0x4821d0	                            and rax, rdx	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400682f	          0x4885c0	                           test rax, rax	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006832	            0x753a	                           jne 0x400686e	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006834	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006837	            0x4898	                                    cdqe	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006839	        0x4883c014	                           add rax, 0x14	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400683d	    0x488b04c50000	                  mov rax, qword [rax*8]	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006845	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006848	          0x4863d2	                         movsxd rdx, edx	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400684b	        0x4883c214	                           add rdx, 0x14	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400684f	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006857	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400685b	      0xba00000080	                     mov edx, 0x80000000	      4830	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006860	          0x4831ca	                            xor rdx, rcx	      4830	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4006863	    0x4881c2000000	             add rdx, 0xffffffff80000000	      4831	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400686a	        0x48895010	             mov qword [rax + 0x10], rdx	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400686e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4836	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_3
0x4006871	            0x4898	                                    cdqe	      4836	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_3
0x4006873	        0x4883c014	                           add rax, 0x14	      4836	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_3
0x4006877	    0x488b04c50000	                  mov rax, qword [rax*8]	      4836	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_3
0x400687f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x4006883	          0x4889c7	                            mov rdi, rax	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x4006886	      0xe84fafffff	              call sym.smallest_imm_type	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x400688b	          0x4889c2	                            mov rdx, rax	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x400688e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x4006891	            0x4898	                                    cdqe	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x4006893	        0x488d580e	                    lea rbx, [rax + 0xe]	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x4006897	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x400689a	            0x4898	                                    cdqe	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x400689c	        0x4883c00e	                            add rax, 0xe	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x40068a0	    0x488b04c50000	                  mov rax, qword [rax*8]	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x40068a8	          0x4889d6	                            mov rsi, rdx	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x40068ab	          0x4889c7	                            mov rdi, rax	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x40068ae	      0xe8d9a1ffff	                call sym.operand_type_or	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x40068b3	    0x488904dd0000	                  mov qword [rbx*8], rax	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x40068bb	        0x807dc371	            cmp byte [rbp - 0x3d], 0x71 	      4840	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x40068bf	     0xf8555010000	                           jne 0x4006a1a	      4840	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x40068c5	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4841	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x40068c8	            0x4898	                                    cdqe	      4841	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x40068ca	        0x4883c00e	                            add rax, 0xe	      4841	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x40068ce	     0xfb614c50000	                 movzx edx, byte [rax*8]	      4841	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x40068d6	          0x83e2df	                     and edx, 0xffffffdf	      4841	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x40068d9	    0x8814c5000000	                    mov byte [rax*8], dl	      4841	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x40068e0	      0xe935010000	                           jmp 0x4006a1a	      4842	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x40068e5	      0xba00000000	                              mov edx, 0	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x40068ea	      0xbeee120000	                         mov esi, 0x12ee	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x40068ef	      0xbf00000000	                              mov edi, 0	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x40068f4	      0xe800000000	                          call 0x40068f9	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x40068f9	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4857	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_5
0x40068fd	      0xbe00000000	                              mov esi, 0	      4857	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_5
0x4006902	          0x4889c7	                            mov rdi, rax	      4857	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_5
0x4006905	      0xe8f79bffff	               call sym.operand_type_set	      4857	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_5
0x400690a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4858	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_6
0x400690e	      0xbe00000000	                              mov esi, 0	      4858	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_6
0x4006913	          0x4889c7	                            mov rdi, rax	      4858	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_6
0x4006916	      0xe8e69bffff	               call sym.operand_type_set	      4858	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_6
0x400691b	    0x488b05000000	            mov rax, qword [0x04006922] 	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x4006922	          0x488b00	                    mov rax, qword [rax]	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x4006925	        0x488945c8	             mov qword [rbp - 0x38], rax	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x4006929	            0xeb2b	                           jmp 0x4006956	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400692b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4863	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3	CALL_7
0x400692f	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      4863	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3	CALL_7
0x4006932	          0x4863d2	                         movsxd rdx, edx	      4863	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3	CALL_7
0x4006935	        0x4883c206	                              add rdx, 6	      4863	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3	CALL_7
0x4006939	      0x488b54d004	       mov rdx, qword [rax + rdx*8 + 4] 	      4863	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3	CALL_7
0x400693e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4863	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3	CALL_7
0x4006942	          0x4889d6	                            mov rsi, rdx	      4863	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3	CALL_7
0x4006945	          0x4889c7	                            mov rdi, rax	      4863	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3	CALL_7
0x4006948	      0xe83fa1ffff	                call sym.operand_type_or	      4863	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3	CALL_7
0x400694d	        0x488945e0	             mov qword [rbp - 0x20], rax	      4863	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3	CALL_7
0x4006951	      0x488345c860	           add qword [rbp - 0x38], 0x60 	      4862	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x4006956	    0x488b05000000	            mov rax, qword [0x0400695d] 	      4861	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400695d	        0x488b4008	                mov rax, qword [rax + 8]	      4861	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x4006961	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x4006965	            0x77c4	                            ja 0x400692b	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x4006967	         0xfbe45c3	            movsx eax, byte [rbp - 0x3d]	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400696b	          0x83f86c	                           cmp eax, 0x6c	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400696e	            0x742e	                            je 0x400699e	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4006970	          0x83f86c	                           cmp eax, 0x6c	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4006973	            0x7f07	                            jg 0x400697c	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4006975	          0x83f862	                           cmp eax, 0x62	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4006978	            0x743c	                            je 0x40069b6	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400697a	            0xeb45	                           jmp 0x40069c1	      4881	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400697c	          0x83f871	                           cmp eax, 0x71	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400697f	            0x7407	                            je 0x4006988	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4006981	          0x83f877	                           cmp eax, 0x77	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4006984	            0x7424	                            je 0x40069aa	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4006986	            0xeb39	                           jmp 0x40069c1	      4881	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4006988	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	      4868	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400698c	          0x83c880	                      or eax, 0xffffff80	      4868	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400698f	          0x8845d1	               mov byte [rbp - 0x2f], al	      4868	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4006992	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	      4869	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4006996	          0x83c840	                            or eax, 0x40	      4869	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4006999	          0x8845d1	               mov byte [rbp - 0x2f], al	      4869	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400699c	            0xeb23	                           jmp 0x40069c1	      4870	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400699e	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	      4872	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069a2	          0x83c820	                            or eax, 0x20	      4872	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069a5	          0x8845d1	               mov byte [rbp - 0x2f], al	      4872	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069a8	            0xeb17	                           jmp 0x40069c1	      4873	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069aa	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	      4875	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069ae	          0x83c810	                            or eax, 0x10	      4875	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069b1	          0x8845d1	               mov byte [rbp - 0x2f], al	      4875	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069b4	            0xeb0b	                           jmp 0x40069c1	      4876	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069b6	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	      4878	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069ba	          0x83c804	                               or eax, 4	      4878	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069bd	          0x8845d1	               mov byte [rbp - 0x2f], al	      4878	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069c0	              0x90	                                     nop	      4879	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40069c1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4883	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_8
0x40069c5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4883	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_8
0x40069c9	          0x4889d6	                            mov rsi, rdx	      4883	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_8
0x40069cc	          0x4889c7	                            mov rdi, rax	      4883	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_8
0x40069cf	      0xe814a0ffff	               call sym.operand_type_and	      4883	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_8
0x40069d4	        0x488945e0	             mov qword [rbp - 0x20], rax	      4883	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_8
0x40069d8	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4884	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_12	CALL_9
0x40069dc	          0x4889c7	                            mov rdi, rax	      4884	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_12	CALL_9
0x40069df	      0xe8f39affff	          call sym.operand_type_all_zero	      4884	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_12	CALL_9
0x40069e4	            0x85c0	                           test eax, eax	      4884	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_12	CALL_9
0x40069e6	            0x7531	                           jne 0x4006a19	      4884	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_12	CALL_9
0x40069e8	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x40069eb	            0x4898	                                    cdqe	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x40069ed	        0x488d580e	                    lea rbx, [rax + 0xe]	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x40069f1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x40069f5	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x40069f8	            0x4898	                                    cdqe	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x40069fa	        0x4883c00e	                            add rax, 0xe	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x40069fe	    0x488b04c50000	                  mov rax, qword [rax*8]	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x4006a06	          0x4889d6	                            mov rsi, rdx	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x4006a09	          0x4889c7	                            mov rdi, rax	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x4006a0c	      0xe8d79fffff	               call sym.operand_type_and	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x4006a11	    0x488904dd0000	                  mov qword [rbx*8], rax	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x4006a19	              0x90	                                     nop	      4887	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x4006a1a	        0x836dc401	               sub dword [rbp - 0x3c], 1	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x4006a1e	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x4006a22	     0xf8994fbffff	                           jns 0x40065bc	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x4006a28	              0x90	                                     nop	      4890	tc-i386.c	FUNCTION_73
0x4006a29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4890	tc-i386.c	FUNCTION_73
0x4006a2d	    0x644833042528	                xor rax, qword fs:[0x28]	      4890	tc-i386.c	FUNCTION_73
0x4006a36	            0x7405	                            je 0x4006a3d	      4890	tc-i386.c	FUNCTION_73
0x4006a38	      0xe800000000	                          call 0x4006a3d	      4890	tc-i386.c	FUNCTION_73
0x4006a3d	        0x4883c438	                           add rsp, 0x38	      4890	tc-i386.c	FUNCTION_73
0x4006a41	              0x5b	                                 pop rbx	      4890	tc-i386.c	FUNCTION_73
0x4006a42	              0x5d	                                 pop rbp	      4890	tc-i386.c	FUNCTION_73
0x4006a43	              0xc3	                                     ret	      4890	tc-i386.c	FUNCTION_73
check_cpu_arch_compatible	CALL,5:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,6:ELSE,0:DO,0	70
0x4002186	              0x55	                                push rbp	      2542	tc-i386.c	FUNCTION_48
0x4002187	          0x4889e5	                            mov rbp, rsp	      2542	tc-i386.c	FUNCTION_48
0x400218a	              0x53	                                push rbx	      2542	tc-i386.c	FUNCTION_48
0x400218b	        0x4883ec28	                           sub rsp, 0x28	      2542	tc-i386.c	FUNCTION_48
0x400218f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2542	tc-i386.c	FUNCTION_48
0x4002193	          0x4889f0	                            mov rax, rsi	      2542	tc-i386.c	FUNCTION_48
0x4002196	          0x4889d1	                            mov rcx, rdx	      2542	tc-i386.c	FUNCTION_48
0x4002199	          0x4889ca	                            mov rdx, rcx	      2542	tc-i386.c	FUNCTION_48
0x400219c	        0x488945d0	             mov qword [rbp - 0x30], rax	      2542	tc-i386.c	FUNCTION_48
0x40021a0	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2542	tc-i386.c	FUNCTION_48
0x40021a4	    0x488b05000000	            mov rax, qword [0x040021ab] 	      2550	tc-i386.c	FUNCTION_48	IF_2
0x40021ab	          0x4885c0	                           test rax, rax	      2550	tc-i386.c	FUNCTION_48	IF_2
0x40021ae	            0x7528	                           jne 0x40021d8	      2550	tc-i386.c	FUNCTION_48	IF_2
0x40021b0	    0x488b05000000	            mov rax, qword [0x040021b7] 	      2554	tc-i386.c	FUNCTION_48	IF_2
0x40021b7	    0x488905000000	            mov qword [0x040021be], rax 	      2554	tc-i386.c	FUNCTION_48	IF_2
0x40021be	    0x488b05000000	            mov rax, qword [0x040021c5] 	      2555	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x40021c5	          0x4885c0	                           test rax, rax	      2555	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x40021c8	            0x750e	                           jne 0x40021d8	      2555	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x40021ca	    0x488b05000000	            mov rax, qword [0x040021d1] 	      2556	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x40021d1	    0x488905000000	            mov qword [0x040021d8], rax 	      2556	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x40021d8	    0x488b05000000	            mov rax, qword [0x040021df] 	      2560	tc-i386.c	FUNCTION_48	IF_4	CALL_1
0x40021df	        0x488b4008	                mov rax, qword [rax + 8]	      2560	tc-i386.c	FUNCTION_48	IF_4	CALL_1
0x40021e3	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2560	tc-i386.c	FUNCTION_48	IF_4	CALL_1
0x40021ea	          0x8b4008	                mov eax, dword [rax + 8]	      2560	tc-i386.c	FUNCTION_48	IF_4	CALL_1
0x40021ed	          0x83f806	                              cmp eax, 6	      2560	tc-i386.c	FUNCTION_48	IF_4	CALL_1
0x40021f0	     0xf8586000000	                           jne 0x400227c	      2560	tc-i386.c	FUNCTION_48	IF_4	CALL_1
0x40021f6	         0xfb645d5	            movzx eax, byte [rbp - 0x2b]	      2561	tc-i386.c	FUNCTION_48	IF_4
0x40021fa	          0x83e001	                              and eax, 1	      2561	tc-i386.c	FUNCTION_48	IF_4
0x40021fd	            0x84c0	                             test al, al	      2561	tc-i386.c	FUNCTION_48	IF_4
0x40021ff	            0x757b	                           jne 0x400227c	      2561	tc-i386.c	FUNCTION_48	IF_4
0x4002201	    0x488b05000000	            mov rax, qword [0x04002208] 	      2565	tc-i386.c	FUNCTION_48	IF_5	CALL_2
0x4002208	        0x488b4008	                mov rax, qword [rax + 8]	      2565	tc-i386.c	FUNCTION_48	IF_5	CALL_2
0x400220c	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2565	tc-i386.c	FUNCTION_48	IF_5	CALL_2
0x4002213	          0x8b4008	                mov eax, dword [rax + 8]	      2565	tc-i386.c	FUNCTION_48	IF_5	CALL_2
0x4002216	      0x3db4000000	                           cmp eax, 0xb4	      2565	tc-i386.c	FUNCTION_48	IF_5	CALL_2
0x400221b	            0x7562	                           jne 0x400227f	      2565	tc-i386.c	FUNCTION_48	IF_5	CALL_2
0x400221d	         0xfb645d4	            movzx eax, byte [rbp - 0x2c]	      2566	tc-i386.c	FUNCTION_48	IF_5
0x4002221	          0x83e040	                           and eax, 0x40	      2566	tc-i386.c	FUNCTION_48	IF_5
0x4002224	            0x84c0	                             test al, al	      2566	tc-i386.c	FUNCTION_48	IF_5
0x4002226	            0x7557	                           jne 0x400227f	      2566	tc-i386.c	FUNCTION_48	IF_5
0x4002228	    0x488b05000000	            mov rax, qword [0x0400222f] 	      2570	tc-i386.c	FUNCTION_48	IF_6	CALL_3
0x400222f	        0x488b4008	                mov rax, qword [rax + 8]	      2570	tc-i386.c	FUNCTION_48	IF_6	CALL_3
0x4002233	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2570	tc-i386.c	FUNCTION_48	IF_6	CALL_3
0x400223a	          0x8b4008	                mov eax, dword [rax + 8]	      2570	tc-i386.c	FUNCTION_48	IF_6	CALL_3
0x400223d	      0x3db5000000	                           cmp eax, 0xb5	      2570	tc-i386.c	FUNCTION_48	IF_6	CALL_3
0x4002242	            0x753e	                           jne 0x4002282	      2570	tc-i386.c	FUNCTION_48	IF_6	CALL_3
0x4002244	         0xfb645d4	            movzx eax, byte [rbp - 0x2c]	      2571	tc-i386.c	FUNCTION_48	IF_6
0x4002248	          0x83e080	                     and eax, 0xffffff80	      2571	tc-i386.c	FUNCTION_48	IF_6
0x400224b	            0x84c0	                             test al, al	      2571	tc-i386.c	FUNCTION_48	IF_6
0x400224d	            0x7533	                           jne 0x4002282	      2571	tc-i386.c	FUNCTION_48	IF_6
0x400224f	    0x488b1d000000	            mov rbx, qword [0x04002256] 	      2574	tc-i386.c	FUNCTION_48	CALL_5
0x4002256	      0xbf00000000	                              mov edi, 0	      2574	tc-i386.c	FUNCTION_48	CALL_5
0x400225b	      0xe800000000	                          call 0x4002260	      2574	tc-i386.c	FUNCTION_48	CALL_5
0x4002260	          0x4889c1	                            mov rcx, rax	      2574	tc-i386.c	FUNCTION_48	CALL_5
0x4002263	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2574	tc-i386.c	FUNCTION_48	CALL_5
0x4002267	          0x4889da	                            mov rdx, rbx	      2574	tc-i386.c	FUNCTION_48	CALL_5
0x400226a	          0x4889c6	                            mov rsi, rax	      2574	tc-i386.c	FUNCTION_48	CALL_5
0x400226d	          0x4889cf	                            mov rdi, rcx	      2574	tc-i386.c	FUNCTION_48	CALL_5
0x4002270	      0xb800000000	                              mov eax, 0	      2574	tc-i386.c	FUNCTION_48	CALL_5
0x4002275	      0xe800000000	                          call 0x400227a	      2574	tc-i386.c	FUNCTION_48	CALL_5
0x400227a	            0xeb07	                           jmp 0x4002283	      2574	tc-i386.c	FUNCTION_48	CALL_5
0x400227c	              0x90	                                     nop	      2562	tc-i386.c	FUNCTION_48	IF_4
0x400227d	            0xeb04	                           jmp 0x4002283	      2562	tc-i386.c	FUNCTION_48	IF_4
0x400227f	              0x90	                                     nop	      2567	tc-i386.c	FUNCTION_48	IF_5
0x4002280	            0xeb01	                           jmp 0x4002283	      2567	tc-i386.c	FUNCTION_48	IF_5
0x4002282	              0x90	                                     nop	      2572	tc-i386.c	FUNCTION_48	IF_6
0x4002283	        0x4883c428	                           add rsp, 0x28	      2576	tc-i386.c	FUNCTION_48
0x4002287	              0x5b	                                 pop rbx	      2576	tc-i386.c	FUNCTION_48
0x4002288	              0x5d	                                 pop rbp	      2576	tc-i386.c	FUNCTION_48
0x4002289	              0xc3	                                     ret	      2576	tc-i386.c	FUNCTION_48
output_disp	CALL,15:FOR,3:WHILE,0:functions,0:SWITCH,0:IF,11:ELSE,5:DO,0	342
0x400d8d1	              0x55	                                push rbp	      7847	tc-i386.c	FUNCTION_95
0x400d8d2	          0x4889e5	                            mov rbp, rsp	      7847	tc-i386.c	FUNCTION_95
0x400d8d5	        0x4883ec60	                           sub rsp, 0x60	      7847	tc-i386.c	FUNCTION_95
0x400d8d9	        0x48897da8	             mov qword [rbp - 0x58], rdi	      7847	tc-i386.c	FUNCTION_95
0x400d8dd	        0x488975a0	             mov qword [rbp - 0x60], rsi	      7847	tc-i386.c	FUNCTION_95
0x400d8e1	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400d8e8	      0xe926050000	                           jmp 0x400de13	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400d8ed	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x400d8f0	        0x4883c00e	                            add rax, 0xe	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x400d8f4	    0x488b04c50000	                  mov rax, qword [rax*8]	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x400d8fc	      0xbe02000000	                              mov esi, 2	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x400d901	          0x4889c7	                            mov rdi, rax	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x400d904	      0xe82332ffff	             call sym.operand_type_check	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x400d909	            0x85c0	                           test eax, eax	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x400d90b	     0xf84fe040000	                            je 0x400de0f	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x400d911	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400d914	        0x4883c014	                           add rax, 0x14	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400d918	    0x488b04c50000	                  mov rax, qword [rax*8]	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400d920	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400d924	            0x3c02	                               cmp al, 2	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400d926	            0x7570	                           jne 0x400d998	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400d928	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7857	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_2
0x400d92b	            0x89c7	                            mov edi, eax	      7857	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_2
0x400d92d	      0xe89ffeffff	                      call sym.disp_size	      7857	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_2
0x400d932	          0x8945c8	             mov dword [rbp - 0x38], eax	      7857	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_2
0x400d935	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7858	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400d938	        0x4883c014	                           add rax, 0x14	      7858	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400d93c	    0x488b04c50000	                  mov rax, qword [rax*8]	      7858	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400d944	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7858	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400d948	        0x488945e8	             mov qword [rbp - 0x18], rax	      7858	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400d94c	    0x8b0500000000	            mov eax, dword [0x0400d952] 	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400d952	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400d956	            0x89c1	                            mov ecx, eax	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400d958	          0x48d3fa	                             sar rdx, cl	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400d95b	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400d95e	            0x89c6	                            mov esi, eax	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400d960	          0x4889d7	                            mov rdi, rdx	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400d963	      0xe81940ffff	                call sym.offset_in_range	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400d968	        0x488945e8	             mov qword [rbp - 0x18], rax	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400d96c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      7861	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_4
0x400d96f	            0x4898	                                    cdqe	      7861	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_4
0x400d971	          0x4889c7	                            mov rdi, rax	      7861	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_4
0x400d974	      0xe800000000	                          call 0x400d979	      7861	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_4
0x400d979	        0x488945f0	             mov qword [rbp - 0x10], rax	      7861	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_4
0x400d97d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400d981	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400d984	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400d988	          0x4889ce	                            mov rsi, rcx	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400d98b	          0x4889c7	                            mov rdi, rax	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400d98e	      0xe800000000	                          call 0x400d993	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400d993	      0xe977040000	                           jmp 0x400de0f	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400d998	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7867	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_6
0x400d99b	            0x89c7	                            mov edi, eax	      7867	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_6
0x400d99d	      0xe82ffeffff	                      call sym.disp_size	      7867	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_6
0x400d9a2	          0x8945cc	             mov dword [rbp - 0x34], eax	      7867	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_6
0x400d9a5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9a8	        0x4883c00e	                            add rax, 0xe	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9ac	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9b4	          0xc0e803	                               shr al, 3	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9b7	          0x83e001	                              and eax, 1	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9ba	           0xfb6c0	                           movzx eax, al	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9bd	          0x8945d0	             mov dword [rbp - 0x30], eax	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9c0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9c3	        0x4883c030	                           add rax, 0x30	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9c7	    0x8b0485000000	                  mov eax, dword [rax*4]	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9ce	          0x83e001	                              and eax, 1	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9d1	            0x85c0	                           test eax, eax	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9d3	           0xf95c0	                                setne al	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9d6	           0xfb6c0	                           movzx eax, al	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9d9	          0x8945d4	             mov dword [rbp - 0x2c], eax	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400d9dc	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400d9df	        0x4883c00e	                            add rax, 0xe	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400d9e3	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400d9eb	          0x83e001	                              and eax, 1	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400d9ee	            0x84c0	                             test al, al	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400d9f0	            0x7414	                            je 0x400da06	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400d9f2	      0xba00000000	                              mov edx, 0	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400d9f7	      0xbec11e0000	                         mov esi, 0x1ec1	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400d9fc	      0xbf00000000	                              mov edi, 0	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400da01	      0xe800000000	                          call 0x400da06	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400da06	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x400da0a	     0xf84c4000000	                            je 0x400dad4	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x400da10	    0x8b0500000000	            mov eax, dword [0x0400da16] 	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x400da16	            0x85c0	                           test eax, eax	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x400da18	     0xf84b6000000	                            je 0x400dad4	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x400da1e	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      7881	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x400da25	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400da2c	            0xeb7d	                           jmp 0x400daab	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400da2e	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x400da31	        0x4883c00e	                            add rax, 0xe	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x400da35	    0x488b04c50000	                  mov rax, qword [rax*8]	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x400da3d	      0xbe01000000	                              mov esi, 1	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x400da42	          0x4889c7	                            mov rdi, rax	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x400da45	      0xe8e230ffff	             call sym.operand_type_check	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x400da4a	            0x85c0	                           test eax, eax	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x400da4c	            0x7459	                            je 0x400daa7	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x400da4e	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400da52	            0x7414	                            je 0x400da68	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400da54	      0xba00000000	                              mov edx, 0	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400da59	      0xbed01e0000	                         mov esi, 0x1ed0	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400da5e	      0xbf00000000	                              mov edi, 0	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400da63	      0xe800000000	                          call 0x400da68	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400da68	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      7889	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_10
0x400da6b	            0x89c7	                            mov edi, eax	      7889	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_10
0x400da6d	      0xe8d2fdffff	                       call sym.imm_size	      7889	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_10
0x400da72	          0x8945c4	             mov dword [rbp - 0x3c], eax	      7889	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_10
0x400da75	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400da78	        0x4883c014	                           add rax, 0x14	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400da7c	    0x488b04c50000	                  mov rax, qword [rax*8]	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400da84	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400da87	        0x4883c214	                           add rdx, 0x14	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400da8b	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400da93	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400da97	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400da9a	          0x4863d2	                         movsxd rdx, edx	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400da9d	          0x4829d1	                            sub rcx, rdx	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400daa0	          0x4889ca	                            mov rdx, rcx	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400daa3	        0x48895010	             mov qword [rax + 0x10], rdx	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400daa7	        0x8345c001	               add dword [rbp - 0x40], 1	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400daab	    0x8b0500000000	            mov eax, dword [0x0400dab1] 	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400dab1	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400dab4	     0xf8774ffffff	                            ja 0x400da2e	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400daba	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400dabe	            0x7514	                           jne 0x400dad4	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400dac0	      0xba00000000	                              mov edx, 0	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400dac5	      0xbed51e0000	                         mov esi, 0x1ed5	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400daca	      0xbf00000000	                              mov edi, 0	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400dacf	      0xe800000000	                          call 0x400dad4	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400dad4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x400dad7	            0x4898	                                    cdqe	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x400dad9	          0x4889c7	                            mov rdi, rax	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x400dadc	      0xe800000000	                          call 0x400dae1	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x400dae1	        0x488945f0	             mov qword [rbp - 0x10], rax	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x400dae5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400dae8	        0x4883c034	                           add rax, 0x34	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400daec	    0x8b0c85000000	                  mov ecx, dword [rax*4]	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400daf3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400daf6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400daf9	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400dafc	            0x89c7	                            mov edi, eax	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400dafe	      0xe88753ffff	                          call sym.reloc	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400db03	          0x8945bc	             mov dword [rbp - 0x44], eax	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400db06	    0x488b05000000	            mov rax, qword [0x0400db0d] 	      7898	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db0d	          0x4885c0	                           test rax, rax	      7898	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db10	     0xf847b010000	                            je 0x400dc91	      7898	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db16	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db19	        0x4883c014	                           add rax, 0x14	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db1d	    0x488b04c50000	                  mov rax, qword [rax*8]	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db25	          0x488b10	                    mov rdx, qword [rax]	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db28	    0x488b05000000	            mov rax, qword [0x0400db2f] 	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db2f	          0x4839c2	                            cmp rdx, rax	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db32	     0xf8559010000	                           jne 0x400dc91	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db38	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      7900	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db3c	            0x7419	                            je 0x400db57	      7900	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db3e	    0x817dbc840100	          cmp dword [rbp - 0x44], 0x184 	      7901	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db45	            0x7410	                            je 0x400db57	      7901	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db47	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      7902	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db4b	            0x755b	                           jne 0x400dba8	      7902	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db4d	    0x8b0500000000	            mov eax, dword [0x0400db53] 	      7903	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db53	            0x85c0	                           test eax, eax	      7903	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db55	            0x7451	                            je 0x400dba8	      7903	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db57	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db5a	        0x4883c014	                           add rax, 0x14	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db5e	    0x488b04c50000	                  mov rax, qword [rax*8]	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db66	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db6a	            0x3c03	                               cmp al, 3	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db6c	            0x7444	                            je 0x400dbb2	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db6e	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7905	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db71	        0x4883c014	                           add rax, 0x14	      7905	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db75	    0x488b04c50000	                  mov rax, qword [rax*8]	      7905	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db7d	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      7905	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db81	            0x3c13	                            cmp al, 0x13	      7905	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db83	            0x7523	                           jne 0x400dba8	      7905	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db85	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7907	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db88	        0x4883c014	                           add rax, 0x14	      7907	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db8c	    0x488b04c50000	                  mov rax, qword [rax*8]	      7907	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400db94	        0x488b4008	                mov rax, qword [rax + 8]	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x400db98	          0x4889c7	                            mov rdi, rax	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x400db9b	      0xe800000000	                          call 0x400dba0	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x400dba0	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      7907	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dba4	            0x3c14	                            cmp al, 0x14	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x400dba6	            0x740a	                            je 0x400dbb2	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x400dba8	        0x837dbc09	               cmp dword [rbp - 0x44], 9	      7909	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dbac	     0xf85df000000	                           jne 0x400dc91	      7909	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dbb2	    0x488b05000000	            mov rax, qword [0x0400dbb9] 	      7913	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dbb9	        0x483945a8	            cmp qword [rbp - 0x58], rax 	      7913	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dbbd	            0x751c	                           jne 0x400dbdb	      7913	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dbbf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dbc3	    0x488b15000000	            mov rdx, qword [0x0400dbca] 	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dbca	        0x4883c27c	                           add rdx, 0x7c	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dbce	          0x4829d0	                            sub rax, rdx	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dbd1	        0x482b45a0	             sub rax, qword [rbp - 0x60]	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dbd5	        0x488945d8	             mov qword [rbp - 0x28], rax	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dbd9	            0xeb60	                           jmp 0x400dc3b	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dbdb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400dbdf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400dbe3	        0x482b45a0	             sub rax, qword [rbp - 0x60]	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400dbe7	        0x488945d8	             mov qword [rbp - 0x28], rax	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400dbeb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7920	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dbef	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7920	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dbf3	        0x488945e0	             mov qword [rbp - 0x20], rax	      7920	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dbf7	            0xeb18	                           jmp 0x400dc11	      7920	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dbf9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7922	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dbfd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7922	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dc01	        0x480145d8	            add qword [rbp - 0x28], rax 	      7922	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dc05	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dc09	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dc0d	        0x488945e0	             mov qword [rbp - 0x20], rax	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dc11	      0x48837de000	               cmp qword [rbp - 0x20], 0	      7920	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dc16	            0x740d	                            je 0x400dc25	      7920	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dc18	    0x488b05000000	            mov rax, qword [0x0400dc1f] 	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dc1f	        0x483945e0	            cmp qword [rbp - 0x20], rax 	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dc23	            0x75d4	                           jne 0x400dbf9	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400dc25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400dc29	    0x488b15000000	            mov rdx, qword [0x0400dc30] 	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400dc30	        0x4883c27c	                           add rdx, 0x7c	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400dc34	          0x4829d0	                            sub rax, rdx	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400dc37	        0x480145d8	            add qword [rbp - 0x28], rax 	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400dc3b	    0x8b0500000000	            mov eax, dword [0x0400dc41] 	      7926	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc41	            0x85c0	                           test eax, eax	      7926	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc43	            0x7536	                           jne 0x400dc7b	      7926	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc45	    0xc745bc6b0100	          mov dword [rbp - 0x44], 0x16b 	      7928	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc4c	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc4f	        0x4883c014	                           add rax, 0x14	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc53	    0x488b04c50000	                  mov rax, qword [rax*8]	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc5b	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc5e	        0x4883c214	                           add rdx, 0x14	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc62	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc6a	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc6e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc72	          0x4801ca	                            add rdx, rcx	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc75	        0x48895010	             mov qword [rax + 0x10], rdx	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc79	            0xeb16	                           jmp 0x400dc91	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400dc7b	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      7931	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_3	IF_8
0x400dc7f	            0x7509	                           jne 0x400dc8a	      7931	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_3	IF_8
0x400dc81	    0xc745bc910100	          mov dword [rbp - 0x44], 0x191 	      7932	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_3	IF_8
0x400dc88	            0xeb07	                           jmp 0x400dc91	      7932	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_3	IF_8
0x400dc8a	    0xc745bc8e0100	          mov dword [rbp - 0x44], 0x18e 	      7937	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_4
0x400dc91	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dc94	        0x4883c014	                           add rax, 0x14	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dc98	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dca0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dca4	    0x488b15000000	            mov rdx, qword [0x0400dcab] 	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcab	        0x4883c27c	                           add rdx, 0x7c	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcaf	          0x4829d0	                            sub rax, rdx	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcb2	          0x4189c2	                           mov r10d, eax	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcb5	    0x488b05000000	            mov rax, qword [0x0400dcbc] 	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcbc	          0x8b7dbc	             mov edi, dword [rbp - 0x44]	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcbf	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcc2	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcc5	          0x4189f9	                            mov r9d, edi	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcc8	          0x4189f0	                            mov r8d, esi	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dccb	          0x4489d6	                           mov esi, r10d	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcce	          0x4889c7	                            mov rdi, rax	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcd1	      0xe800000000	                          call 0x400dcd6	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcd6	        0x488945f8	                mov qword [rbp - 8], rax	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400dcda	    0x8b0500000000	            mov eax, dword [0x0400dce0] 	      7947	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dce0	            0x85c0	                           test eax, eax	      7947	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dce2	            0x752b	                           jne 0x400dd0f	      7947	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dce4	    0x8b0500000000	            mov eax, dword [0x0400dcea] 	      7948	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dcea	            0x85c0	                           test eax, eax	      7948	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dcec	     0xf851d010000	                           jne 0x400de0f	      7948	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dcf2	    0x8b0500000000	            mov eax, dword [0x0400dcf8] 	      7949	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dcf8	            0x85c0	                           test eax, eax	      7949	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dcfa	     0xf850f010000	                           jne 0x400de0f	      7949	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd00	    0x8b0500000000	            mov eax, dword [0x0400dd06] 	      7950	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd06	          0x83f805	                              cmp eax, 5	      7950	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd09	     0xf8500010000	                           jne 0x400de0f	      7950	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd0f	    0x8b0500000000	            mov eax, dword [0x0400dd15] 	      7951	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd15	          0x83f802	                              cmp eax, 2	      7951	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd18	            0x741d	                            je 0x400dd37	      7951	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd1a	    0x8b0500000000	            mov eax, dword [0x0400dd20] 	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd20	            0x85c0	                           test eax, eax	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd22	     0xf85e7000000	                           jne 0x400de0f	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd28	    0x8b0500000000	            mov eax, dword [0x0400dd2e] 	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd2e	          0x83f805	                              cmp eax, 5	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd31	     0xf85d8000000	                           jne 0x400de0f	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd37	    0x8b0500000000	            mov eax, dword [0x0400dd3d] 	      7953	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd3d	          0x83f801	                              cmp eax, 1	      7953	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd40	            0x7523	                           jne 0x400dd65	      7953	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd42	    0x8b0500000000	            mov eax, dword [0x0400dd48] 	      7954	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd48	      0x3dff000000	                           cmp eax, 0xff	      7954	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd4d	            0x7516	                           jne 0x400dd65	      7954	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd4f	    0x8b0500000000	            mov eax, dword [0x0400dd55] 	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd55	          0x83f802	                              cmp eax, 2	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd58	            0x7444	                            je 0x400dd9e	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd5a	    0x8b0500000000	            mov eax, dword [0x0400dd60] 	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd60	          0x83f804	                              cmp eax, 4	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd63	            0x7439	                            je 0x400dd9e	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd65	    0x8b0500000000	            mov eax, dword [0x0400dd6b] 	      7956	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd6b	          0x83f802	                              cmp eax, 2	      7956	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd6e	     0xf859b000000	                           jne 0x400de0f	      7956	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd74	    0x8b0500000000	            mov eax, dword [0x0400dd7a] 	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd7a	      0x3d8b000000	                           cmp eax, 0x8b	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd7f	            0x741d	                            je 0x400dd9e	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd81	    0x8b0500000000	            mov eax, dword [0x0400dd87] 	      7958	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd87	      0x3d85000000	                           cmp eax, 0x85	      7958	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd8c	            0x7410	                            je 0x400dd9e	      7958	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd8e	    0x8b0500000000	            mov eax, dword [0x0400dd94] 	      7959	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd94	      0x25c7000000	                           and eax, 0xc7	      7959	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd99	          0x83f803	                              cmp eax, 3	      7959	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd9c	            0x7571	                           jne 0x400de0f	      7959	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400dd9e	    0x8b0500000000	            mov eax, dword [0x0400dda4] 	      7961	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400dda4	            0x85c0	                           test eax, eax	      7961	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400dda6	            0x745b	                            je 0x400de03	      7961	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400dda8	    0x8b0500000000	            mov eax, dword [0x0400ddae] 	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400ddae	            0x85c0	                           test eax, eax	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400ddb0	           0xf95c2	                                setne dl	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400ddb3	        0x488b45f8	                mov rax, qword [rbp - 8]	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400ddb7	          0x83e201	                              and edx, 1	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400ddba	    0x8d0cd5000000	                        lea ecx, [rdx*8]	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400ddc1	           0xfb610	                   movzx edx, byte [rax]	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400ddc4	          0x83e2f7	                     and edx, 0xfffffff7	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400ddc7	             0x9ca	                             or edx, ecx	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400ddc9	            0x8810	                      mov byte [rax], dl	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400ddcb	    0x488b05000000	            mov rax, qword [0x0400ddd2] 	      7964	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400ddd2	          0x4885c0	                           test rax, rax	      7964	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400ddd5	            0x7438	                            je 0x400de0f	      7964	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400ddd7	    0x488b05000000	            mov rax, qword [0x0400ddde] 	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400ddde	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400dde2	            0x3cff	                            cmp al, 0xff	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400dde4	            0x740f	                            je 0x400ddf5	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400dde6	    0x488b05000000	            mov rax, qword [0x0400dded] 	      7966	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400dded	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7966	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400ddf1	            0x3cfe	                            cmp al, 0xfe	      7966	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400ddf3	            0x751a	                           jne 0x400de0f	      7966	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400ddf5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7967	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400ddf9	           0xfb610	                   movzx edx, byte [rax]	      7967	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400ddfc	          0x83ca10	                            or edx, 0x10	      7967	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400ddff	            0x8810	                      mov byte [rax], dl	      7967	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400de01	            0xeb0c	                           jmp 0x400de0f	      7967	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400de03	        0x488b45f8	                mov rax, qword [rbp - 8]	      7970	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	ELSE_5
0x400de07	           0xfb610	                   movzx edx, byte [rax]	      7970	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	ELSE_5
0x400de0a	          0x83ca10	                            or edx, 0x10	      7970	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	ELSE_5
0x400de0d	            0x8810	                      mov byte [rax], dl	      7970	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	ELSE_5
0x400de0f	        0x8345b801	               add dword [rbp - 0x48], 1	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400de13	    0x8b0500000000	            mov eax, dword [0x0400de19] 	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400de19	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400de1c	     0xf87cbfaffff	                            ja 0x400d8ed	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400de22	              0x90	                                     nop	      7975	tc-i386.c	FUNCTION_95	ELSE_5
0x400de23	              0xc9	                                   leave	      7975	tc-i386.c	FUNCTION_95	ELSE_5
0x400de24	              0xc3	                                     ret	      7975	tc-i386.c	FUNCTION_95	ELSE_5
output_imm	CALL,10:FOR,2:WHILE,0:functions,0:SWITCH,0:IF,9:ELSE,5:DO,0	210
0x400de25	              0x55	                                push rbp	      7979	tc-i386.c	ELSE_5	FUNCTION_96
0x400de26	          0x4889e5	                            mov rbp, rsp	      7979	tc-i386.c	ELSE_5	FUNCTION_96
0x400de29	        0x4883ec50	                           sub rsp, 0x50	      7979	tc-i386.c	ELSE_5	FUNCTION_96
0x400de2d	        0x48897db8	             mov qword [rbp - 0x48], rdi	      7979	tc-i386.c	ELSE_5	FUNCTION_96
0x400de31	        0x488975b0	             mov qword [rbp - 0x50], rsi	      7979	tc-i386.c	ELSE_5	FUNCTION_96
0x400de35	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400de3c	      0xe91a030000	                           jmp 0x400e15b	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400de41	    0x488b05000000	            mov rax, qword [0x0400de48] 	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400de48	          0x4885c0	                           test rax, rax	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400de4b	            0x7415	                            je 0x400de62	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400de4d	    0x488b05000000	            mov rax, qword [0x0400de54] 	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400de54	          0x8b5004	                mov edx, dword [rax + 4]	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400de57	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400de5a	            0x39c2	                            cmp edx, eax	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400de5c	     0xf84f4020000	                            je 0x400e156	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400de62	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x400de65	        0x4883c00e	                            add rax, 0xe	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x400de69	    0x488b04c50000	                  mov rax, qword [rax*8]	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x400de71	      0xbe01000000	                              mov esi, 1	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x400de76	          0x4889c7	                            mov rdi, rax	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x400de79	      0xe8ae2cffff	             call sym.operand_type_check	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x400de7e	            0x85c0	                           test eax, eax	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x400de80	     0xf84d1020000	                            je 0x400e157	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x400de86	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x400de89	        0x4883c014	                           add rax, 0x14	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x400de8d	    0x488b04c50000	                  mov rax, qword [rax*8]	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x400de95	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x400de99	            0x3c02	                               cmp al, 2	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x400de9b	            0x755d	                           jne 0x400defa	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x400de9d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7993	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_2
0x400dea0	            0x89c7	                            mov edi, eax	      7993	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_2
0x400dea2	      0xe89df9ffff	                       call sym.imm_size	      7993	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_2
0x400dea7	          0x8945d8	             mov dword [rbp - 0x28], eax	      7993	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_2
0x400deaa	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400dead	        0x4883c014	                           add rax, 0x14	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400deb1	    0x488b04c50000	                  mov rax, qword [rax*8]	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400deb9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400debd	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400dec0	            0x89d6	                            mov esi, edx	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400dec2	          0x4889c7	                            mov rdi, rax	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400dec5	      0xe8b73affff	                call sym.offset_in_range	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400deca	        0x488945f0	             mov qword [rbp - 0x10], rax	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400dece	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7998	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_4
0x400ded1	            0x4898	                                    cdqe	      7998	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_4
0x400ded3	          0x4889c7	                            mov rdi, rax	      7998	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_4
0x400ded6	      0xe800000000	                          call 0x400dedb	      7998	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_4
0x400dedb	        0x488945f8	                mov qword [rbp - 8], rax	      7998	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_4
0x400dedf	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400dee3	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400dee6	        0x488b45f8	                mov rax, qword [rbp - 8]	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400deea	          0x4889ce	                            mov rsi, rcx	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400deed	          0x4889c7	                            mov rdi, rax	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400def0	      0xe800000000	                          call 0x400def5	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400def5	      0xe95d020000	                           jmp 0x400e157	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400defa	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8008	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_6
0x400defd	            0x89c7	                            mov edi, eax	      8008	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_6
0x400deff	      0xe840f9ffff	                       call sym.imm_size	      8008	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_6
0x400df04	          0x8945dc	             mov dword [rbp - 0x24], eax	      8008	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_6
0x400df07	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df0a	        0x4883c00e	                            add rax, 0xe	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df0e	     0xfb604c50000	                 movzx eax, byte [rax*8]	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df16	          0xc0e806	                               shr al, 6	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df19	          0x83e001	                              and eax, 1	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df1c	            0x84c0	                             test al, al	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df1e	            0x742d	                            je 0x400df4d	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df20	     0xfb605000000	           movzx eax, byte [0x0400df27] 	      8012	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df27	            0x3c71	                            cmp al, 0x71	      8012	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df29	            0x7419	                            je 0x400df44	      8012	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df2b	     0xfb605000000	           movzx eax, byte [0x0400df32] 	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df32	            0x84c0	                             test al, al	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df34	            0x7517	                           jne 0x400df4d	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df36	     0xfb605000000	           movzx eax, byte [0x0400df3d] 	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df3d	          0x83e008	                              and eax, 8	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df40	            0x84c0	                             test al, al	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df42	            0x7409	                            je 0x400df4d	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df44	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      8014	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df4b	            0xeb07	                           jmp 0x400df54	      8014	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400df4d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      8016	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_2
0x400df54	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      8018	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_7
0x400df57	            0x4898	                                    cdqe	      8018	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_7
0x400df59	          0x4889c7	                            mov rdi, rax	      8018	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_7
0x400df5c	      0xe800000000	                          call 0x400df61	      8018	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_7
0x400df61	        0x488945f8	                mov qword [rbp - 8], rax	      8018	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_7
0x400df65	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400df68	        0x4883c034	                           add rax, 0x34	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400df6c	    0x8b0c85000000	                  mov ecx, dword [rax*4]	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400df73	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400df76	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400df79	      0xbe00000000	                              mov esi, 0	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400df7e	            0x89c7	                            mov edi, eax	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400df80	      0xe8054fffff	                          call sym.reloc	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400df85	          0x8945d0	             mov dword [rbp - 0x30], eax	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400df88	        0x837dd002	               cmp dword [rbp - 0x30], 2	      8063	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400df8c	            0x7413	                            je 0x400dfa1	      8063	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400df8e	    0x817dd0840100	          cmp dword [rbp - 0x30], 0x184 	      8064	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400df95	            0x740a	                            je 0x400dfa1	      8064	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400df97	        0x837dd001	               cmp dword [rbp - 0x30], 1	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400df9b	     0xf8570010000	                           jne 0x400e111	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfa1	    0x488b05000000	            mov rax, qword [0x0400dfa8] 	      8066	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfa8	          0x4885c0	                           test rax, rax	      8066	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfab	     0xf8460010000	                            je 0x400e111	      8066	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfb1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfb4	        0x4883c014	                           add rax, 0x14	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfb8	    0x488b04c50000	                  mov rax, qword [rax*8]	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfc0	          0x488b10	                    mov rdx, qword [rax]	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfc3	    0x488b05000000	            mov rax, qword [0x0400dfca] 	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfca	          0x4839c2	                            cmp rdx, rax	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfcd	     0xf853e010000	                           jne 0x400e111	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfd3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfd6	        0x4883c014	                           add rax, 0x14	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfda	    0x488b04c50000	                  mov rax, qword [rax*8]	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfe2	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfe6	            0x3c03	                               cmp al, 3	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfe8	            0x7442	                            je 0x400e02c	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfea	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8069	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfed	        0x4883c014	                           add rax, 0x14	      8069	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dff1	    0x488b04c50000	                  mov rax, qword [rax*8]	      8069	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dff9	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8069	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dffd	            0x3c13	                            cmp al, 0x13	      8069	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400dfff	     0xf850c010000	                           jne 0x400e111	      8069	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e005	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8071	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e008	        0x4883c014	                           add rax, 0x14	      8071	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e00c	    0x488b04c50000	                  mov rax, qword [rax*8]	      8071	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e014	        0x488b4008	                mov rax, qword [rax + 8]	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x400e018	          0x4889c7	                            mov rdi, rax	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x400e01b	      0xe800000000	                          call 0x400e020	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x400e020	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8071	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e024	            0x3c14	                            cmp al, 0x14	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x400e026	     0xf85e5000000	                           jne 0x400e111	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x400e02c	    0x488b05000000	            mov rax, qword [0x0400e033] 	      8076	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e033	        0x483945b8	            cmp qword [rbp - 0x48], rax 	      8076	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e037	            0x751c	                           jne 0x400e055	      8076	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e039	        0x488b45f8	                mov rax, qword [rbp - 8]	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e03d	    0x488b15000000	            mov rdx, qword [0x0400e044] 	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e044	        0x4883c27c	                           add rdx, 0x7c	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e048	          0x4829d0	                            sub rax, rdx	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e04b	        0x482b45b0	             sub rax, qword [rbp - 0x50]	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e04f	        0x488945e0	             mov qword [rbp - 0x20], rax	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e053	            0xeb60	                           jmp 0x400e0b5	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e055	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e059	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e05d	        0x482b45b0	             sub rax, qword [rbp - 0x50]	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e061	        0x488945e0	             mov qword [rbp - 0x20], rax	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e065	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8083	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e069	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8083	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e06d	        0x488945e8	             mov qword [rbp - 0x18], rax	      8083	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e071	            0xeb18	                           jmp 0x400e08b	      8083	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e073	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8085	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e077	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8085	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e07b	        0x480145e0	            add qword [rbp - 0x20], rax 	      8085	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e07f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e083	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e087	        0x488945e8	             mov qword [rbp - 0x18], rax	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e08b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      8083	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e090	            0x740d	                            je 0x400e09f	      8083	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e092	    0x488b05000000	            mov rax, qword [0x0400e099] 	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e099	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e09d	            0x75d4	                           jne 0x400e073	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e09f	        0x488b45f8	                mov rax, qword [rbp - 8]	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e0a3	    0x488b15000000	            mov rdx, qword [0x0400e0aa] 	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e0aa	        0x4883c27c	                           add rdx, 0x7c	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e0ae	          0x4829d0	                            sub rax, rdx	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e0b1	        0x480145e0	            add qword [rbp - 0x20], rax 	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e0b5	    0x8b0500000000	            mov eax, dword [0x0400e0bb] 	      8089	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x400e0bb	            0x85c0	                           test eax, eax	      8089	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x400e0bd	            0x7509	                           jne 0x400e0c8	      8089	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x400e0bf	    0xc745d06b0100	          mov dword [rbp - 0x30], 0x16b 	      8090	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x400e0c6	            0xeb1c	                           jmp 0x400e0e4	      8090	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x400e0c8	        0x837ddc04	               cmp dword [rbp - 0x24], 4	      8091	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_4	IF_8
0x400e0cc	            0x7509	                           jne 0x400e0d7	      8091	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_4	IF_8
0x400e0ce	    0xc745d08e0100	          mov dword [rbp - 0x30], 0x18e 	      8092	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_4	IF_8
0x400e0d5	            0xeb0d	                           jmp 0x400e0e4	      8092	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_4	IF_8
0x400e0d7	        0x837ddc08	               cmp dword [rbp - 0x24], 8	      8093	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_9
0x400e0db	            0x7507	                           jne 0x400e0e4	      8093	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_9
0x400e0dd	    0xc745d0910100	          mov dword [rbp - 0x30], 0x191 	      8094	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_9	ELSE_5
0x400e0e4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e0e7	        0x4883c014	                           add rax, 0x14	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e0eb	    0x488b04c50000	                  mov rax, qword [rax*8]	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e0f3	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e0f6	        0x4883c214	                           add rdx, 0x14	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e0fa	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e102	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e106	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e10a	          0x4801ca	                            add rdx, rcx	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e10d	        0x48895010	             mov qword [rax + 0x10], rdx	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e111	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e114	        0x4883c014	                           add rax, 0x14	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e118	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e120	        0x488b45f8	                mov rax, qword [rbp - 8]	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e124	    0x488b15000000	            mov rdx, qword [0x0400e12b] 	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e12b	        0x4883c27c	                           add rdx, 0x7c	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e12f	          0x4829d0	                            sub rax, rdx	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e132	            0x89c7	                            mov edi, eax	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e134	    0x488b05000000	            mov rax, qword [0x0400e13b] 	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e13b	          0x8b75d0	             mov esi, dword [rbp - 0x30]	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e13e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e141	          0x4189f1	                            mov r9d, esi	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e144	    0x41b800000000	                              mov r8d, 0	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e14a	            0x89fe	                            mov esi, edi	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e14c	          0x4889c7	                            mov rdi, rax	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e14f	      0xe800000000	                          call 0x400e154	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e154	            0xeb01	                           jmp 0x400e157	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e156	              0x90	                                     nop	      7987	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400e157	        0x8345cc01	               add dword [rbp - 0x34], 1	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e15b	    0x8b0500000000	            mov eax, dword [0x0400e161] 	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e161	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e164	     0xf87d7fcffff	                            ja 0x400de41	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e16a	              0x90	                                     nop	      8102	tc-i386.c	FUNCTION_96	ELSE_5
0x400e16b	              0xc9	                                   leave	      8102	tc-i386.c	FUNCTION_96	ELSE_5
0x400e16c	              0xc3	                                     ret	      8102	tc-i386.c	FUNCTION_96	ELSE_5
fits_in_imm31	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	10
0x40001ad	              0x55	                                push rbp	      1292	tc-i386.c	FUNCTION_5
0x40001ae	          0x4889e5	                            mov rbp, rsp	      1292	tc-i386.c	FUNCTION_5
0x40001b1	        0x48897df8	                mov qword [rbp - 8], rdi	      1292	tc-i386.c	FUNCTION_5
0x40001b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1293	tc-i386.c	FUNCTION_5
0x40001b9	      0x25ffffff7f	                     and eax, 0x7fffffff	      1293	tc-i386.c	FUNCTION_5
0x40001be	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1293	tc-i386.c	FUNCTION_5
0x40001c2	           0xf94c0	                                 sete al	      1293	tc-i386.c	FUNCTION_5
0x40001c5	           0xfb6c0	                           movzx eax, al	      1293	tc-i386.c	FUNCTION_5
0x40001c8	              0x5d	                                 pop rbp	      1294	tc-i386.c	FUNCTION_5
0x40001c9	              0xc3	                                     ret	      1294	tc-i386.c	FUNCTION_5
fits_in_unsigned_byte	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	8
0x40016c3	              0x55	                                push rbp	      2155	tc-i386.c	FUNCTION_31
0x40016c4	          0x4889e5	                            mov rbp, rsp	      2155	tc-i386.c	FUNCTION_31
0x40016c7	        0x48897df8	                mov qword [rbp - 8], rdi	      2155	tc-i386.c	FUNCTION_31
0x40016cb	    0x48817df8ff00	               cmp qword [rbp - 8], 0xff	      2156	tc-i386.c	FUNCTION_31
0x40016d3	           0xf96c0	                                setbe al	      2156	tc-i386.c	FUNCTION_31
0x40016d6	           0xfb6c0	                           movzx eax, al	      2156	tc-i386.c	FUNCTION_31
0x40016d9	              0x5d	                                 pop rbp	      2157	tc-i386.c	FUNCTION_31
0x40016da	              0xc3	                                     ret	      2157	tc-i386.c	FUNCTION_31
process_suffix	CALL,17:FOR,2:WHILE,0:functions,0:SWITCH,2:IF,60:ELSE,27:DO,0	653
0x4008d2f	              0x55	                                push rbp	      5795	tc-i386.c	FUNCTION_79
0x4008d30	          0x4889e5	                            mov rbp, rsp	      5795	tc-i386.c	FUNCTION_79
0x4008d33	              0x53	                                push rbx	      5795	tc-i386.c	FUNCTION_79
0x4008d34	        0x4883ec28	                           sub rsp, 0x28	      5795	tc-i386.c	FUNCTION_79
0x4008d38	     0xfb605000000	           movzx eax, byte [0x04008d3f] 	      5798	tc-i386.c	FUNCTION_79	IF_1
0x4008d3f	          0x83e008	                              and eax, 8	      5798	tc-i386.c	FUNCTION_79	IF_1
0x4008d42	            0x84c0	                             test al, al	      5798	tc-i386.c	FUNCTION_79	IF_1
0x4008d44	            0x740c	                            je 0x4008d52	      5798	tc-i386.c	FUNCTION_79	IF_1
0x4008d46	    0xc60500000000	            mov byte [0x04008d4d], 0x77 	      5799	tc-i386.c	FUNCTION_79	IF_1
0x4008d4d	      0xe90e050000	                           jmp 0x4009260	      5799	tc-i386.c	FUNCTION_79	IF_1
0x4008d52	     0xfb605000000	           movzx eax, byte [0x04008d59] 	      5800	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x4008d59	          0x83e010	                           and eax, 0x10	      5800	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x4008d5c	            0x84c0	                             test al, al	      5800	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x4008d5e	            0x740c	                            je 0x4008d6c	      5800	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x4008d60	    0xc60500000000	            mov byte [0x04008d67], 0x6c 	      5801	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x4008d67	      0xe9f4040000	                           jmp 0x4009260	      5801	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x4008d6c	     0xfb605000000	           movzx eax, byte [0x04008d73] 	      5802	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x4008d73	          0x83e020	                           and eax, 0x20	      5802	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x4008d76	            0x84c0	                             test al, al	      5802	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x4008d78	            0x740c	                            je 0x4008d86	      5802	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x4008d7a	    0xc60500000000	            mov byte [0x04008d81], 0x71 	      5803	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x4008d81	      0xe9da040000	                           jmp 0x4009260	      5803	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x4008d86	    0x8b0500000000	            mov eax, dword [0x04008d8c] 	      5804	tc-i386.c	FUNCTION_79	ELSE_3	IF_4
0x4008d8c	            0x85c0	                           test eax, eax	      5804	tc-i386.c	FUNCTION_79	ELSE_3	IF_4
0x4008d8e	     0xf84d6030000	                            je 0x400916a	      5804	tc-i386.c	FUNCTION_79	ELSE_3	IF_4
0x4008d94	     0xfb605000000	           movzx eax, byte [0x04008d9b] 	      5808	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5
0x4008d9b	            0x84c0	                             test al, al	      5808	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5
0x4008d9d	     0xf850f020000	                           jne 0x4008fb2	      5808	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5
0x4008da3	    0x8b0500000000	            mov eax, dword [0x04008da9] 	      5814	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6
0x4008da9	      0x3df1380ff2	                     cmp eax, 0xf20f38f1	      5814	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6
0x4008dae	            0x756f	                           jne 0x4008e1f	      5814	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6
0x4008db0	     0xfb605000000	           movzx eax, byte [0x04008db7] 	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4008db7	          0x83e001	                              and eax, 1	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4008dba	            0x84c0	                             test al, al	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4008dbc	            0x7417	                            je 0x4008dd5	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4008dbe	     0xfb605000000	           movzx eax, byte [0x04008dc5] 	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4008dc5	          0x83e040	                           and eax, 0x40	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4008dc8	            0x84c0	                             test al, al	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4008dca	            0x7409	                            je 0x4008dd5	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4008dcc	    0xc60500000000	            mov byte [0x04008dd3], 0x77 	      5817	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4008dd3	            0xeb7a	                           jmp 0x4008e4f	      5817	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4008dd5	     0xfb605000000	           movzx eax, byte [0x04008ddc] 	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x4008ddc	          0x83e001	                              and eax, 1	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x4008ddf	            0x84c0	                             test al, al	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x4008de1	            0x7417	                            je 0x4008dfa	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x4008de3	     0xfb605000000	           movzx eax, byte [0x04008dea] 	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x4008dea	          0x83e080	                     and eax, 0xffffff80	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x4008ded	            0x84c0	                             test al, al	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x4008def	            0x7409	                            je 0x4008dfa	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x4008df1	    0xc60500000000	            mov byte [0x04008df8], 0x6c 	      5819	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x4008df8	            0xeb55	                           jmp 0x4008e4f	      5819	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x4008dfa	     0xfb605000000	           movzx eax, byte [0x04008e01] 	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4008e01	          0x83e001	                              and eax, 1	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4008e04	            0x84c0	                             test al, al	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4008e06	            0x7447	                            je 0x4008e4f	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4008e08	     0xfb605000000	           movzx eax, byte [0x04008e0f] 	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4008e0f	          0x83e002	                              and eax, 2	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4008e12	            0x84c0	                             test al, al	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4008e14	            0x7439	                            je 0x4008e4f	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4008e16	    0xc60500000000	            mov byte [0x04008e1d], 0x71 	      5821	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4008e1d	            0xeb30	                           jmp 0x4008e4f	      5821	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4008e1f	    0x8b0500000000	            mov eax, dword [0x04008e25] 	      5823	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10
0x4008e25	      0x3df0380ff2	                     cmp eax, 0xf20f38f0	      5823	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10
0x4008e2a	            0x7523	                           jne 0x4008e4f	      5823	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10
0x4008e2c	     0xfb605000000	           movzx eax, byte [0x04008e33] 	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x4008e33	          0x83e001	                              and eax, 1	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x4008e36	            0x84c0	                             test al, al	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x4008e38	            0x7415	                            je 0x4008e4f	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x4008e3a	     0xfb605000000	           movzx eax, byte [0x04008e41] 	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x4008e41	          0x83e020	                           and eax, 0x20	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x4008e44	            0x84c0	                             test al, al	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x4008e46	            0x7407	                            je 0x4008e4f	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x4008e48	    0xc60500000000	            mov byte [0x04008e4f], 0x62 	      5826	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x4008e4f	     0xfb605000000	           movzx eax, byte [0x04008e56] 	      5829	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12
0x4008e56	            0x84c0	                             test al, al	      5829	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12
0x4008e58	     0xf8502040000	                           jne 0x4009260	      5829	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12
0x4008e5e	    0x8b0500000000	            mov eax, dword [0x04008e64] 	      5833	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4008e64	      0x3df1380ff2	                     cmp eax, 0xf20f38f1	      5833	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4008e69	            0x740d	                            je 0x4008e78	      5833	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4008e6b	    0x8b0500000000	            mov eax, dword [0x04008e71] 	      5834	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4008e71	      0x3df0380ff2	                     cmp eax, 0xf20f38f0	      5834	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4008e76	            0x752b	                           jne 0x4008ea3	      5834	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4008e78	    0x488b1d000000	            mov rbx, qword [0x04008e7f] 	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x4008e7f	      0xbf00000000	                              mov edi, 0	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x4008e84	      0xe800000000	                          call 0x4008e89	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x4008e89	          0x4889de	                            mov rsi, rbx	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x4008e8c	          0x4889c7	                            mov rdi, rax	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x4008e8f	      0xb800000000	                              mov eax, 0	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x4008e94	      0xe800000000	                          call 0x4008e99	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x4008e99	      0xb800000000	                              mov eax, 0	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4008e9e	      0xe97c080000	                           jmp 0x400971f	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4008ea3	    0x8b0500000000	            mov eax, dword [0x04008ea9] 	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x4008ea9	          0x8945dc	             mov dword [rbp - 0x24], eax	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x4008eac	      0xe9ee000000	                           jmp 0x4008f9f	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x4008eb1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008eb4	            0x4898	                                    cdqe	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008eb6	        0x4883c006	                              add rax, 6	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008eba	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008ec2	          0xc0e807	                               shr al, 7	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008ec5	            0x84c0	                             test al, al	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008ec7	     0xf85d2000000	                           jne 0x4008f9f	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008ecd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5844	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008ed0	            0x4898	                                    cdqe	      5844	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008ed2	        0x4883c006	                              add rax, 6	      5844	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008ed6	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5844	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008ede	          0x83e001	                              and eax, 1	      5844	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008ee1	            0x84c0	                             test al, al	      5844	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008ee3	     0xf85b6000000	                           jne 0x4008f9f	      5844	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4008ee9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x4008eec	            0x4898	                                    cdqe	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x4008eee	        0x4883c00e	                            add rax, 0xe	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x4008ef2	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x4008efa	          0x83e001	                              and eax, 1	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x4008efd	            0x84c0	                             test al, al	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x4008eff	            0x7505	                           jne 0x4008f06	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x4008f01	      0xe999000000	                           jmp 0x4008f9f	      5847	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x4008f06	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4008f09	            0x4898	                                    cdqe	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4008f0b	        0x4883c00e	                            add rax, 0xe	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4008f0f	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4008f17	          0xc0e805	                               shr al, 5	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4008f1a	          0x83e001	                              and eax, 1	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4008f1d	            0x84c0	                             test al, al	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4008f1f	            0x740c	                            je 0x4008f2d	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4008f21	    0xc60500000000	            mov byte [0x04008f28], 0x62 	      5849	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4008f28	      0xe933030000	                           jmp 0x4009260	      5858	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_10
0x4008f2d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x4008f30	            0x4898	                                    cdqe	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x4008f32	        0x4883c00e	                            add rax, 0xe	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x4008f36	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x4008f3e	          0xc0e806	                               shr al, 6	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x4008f41	          0x83e001	                              and eax, 1	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x4008f44	            0x84c0	                             test al, al	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x4008f46	            0x740c	                            je 0x4008f54	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x4008f48	    0xc60500000000	            mov byte [0x04008f4f], 0x77 	      5851	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x4008f4f	      0xe90c030000	                           jmp 0x4009260	      5858	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_10
0x4008f54	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x4008f57	            0x4898	                                    cdqe	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x4008f59	        0x4883c00e	                            add rax, 0xe	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x4008f5d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x4008f65	          0xc0e807	                               shr al, 7	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x4008f68	            0x84c0	                             test al, al	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x4008f6a	            0x740c	                            je 0x4008f78	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x4008f6c	    0xc60500000000	            mov byte [0x04008f73], 0x6c 	      5853	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x4008f73	      0xe9e8020000	                           jmp 0x4009260	      5858	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_10
0x4008f78	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4008f7b	            0x4898	                                    cdqe	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4008f7d	        0x4883c00e	                            add rax, 0xe	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4008f81	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4008f89	            0xd0e8	                               shr al, 1	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4008f8b	          0x83e001	                              and eax, 1	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4008f8e	            0x84c0	                             test al, al	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4008f90	            0x740c	                            je 0x4008f9e	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4008f92	    0xc60500000000	            mov byte [0x04008f99], 0x71 	      5855	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4008f99	      0xe9c2020000	                           jmp 0x4009260	      5858	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_10
0x4008f9e	              0x90	                                     nop	      5857	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_10
0x4008f9f	        0x836ddc01	               sub dword [rbp - 0x24], 1	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x4008fa3	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x4008fa7	     0xf8904ffffff	                           jns 0x4008eb1	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x4008fad	      0xe9ae020000	                           jmp 0x4009260	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x4008fb2	     0xfb605000000	           movzx eax, byte [0x04008fb9] 	      5862	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20
0x4008fb9	            0x3c62	                            cmp al, 0x62	      5862	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20
0x4008fbb	            0x7549	                           jne 0x4009006	      5862	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20
0x4008fbd	    0x8b0500000000	            mov eax, dword [0x04008fc3] 	      5864	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fc3	            0x85c0	                           test eax, eax	      5864	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fc5	            0x7428	                            je 0x4008fef	      5864	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fc7	     0xfb605000000	           movzx eax, byte [0x04008fce] 	      5865	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fce	          0x83e080	                     and eax, 0xffffff80	      5865	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fd1	            0x84c0	                             test al, al	      5865	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fd3	            0x741a	                            je 0x4008fef	      5865	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fd5	     0xfb605000000	           movzx eax, byte [0x04008fdc] 	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fdc	          0x83e002	                              and eax, 2	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fdf	            0x84c0	                             test al, al	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fe1	            0x740c	                            je 0x4008fef	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fe3	    0xc60500000000	                mov byte [0x04008fea], 0	      5867	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fea	      0xe971020000	                           jmp 0x4009260	      5867	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4008fef	      0xe832070000	                 call sym.check_byte_reg	      5868	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	ELSE_12	IF_22	CALL_3
0x4008ff4	            0x85c0	                           test eax, eax	      5868	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	ELSE_12	IF_22	CALL_3
0x4008ff6	     0xf8564020000	                           jne 0x4009260	      5868	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	ELSE_12	IF_22	CALL_3
0x4008ffc	      0xb800000000	                              mov eax, 0	      5869	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	ELSE_12	IF_22
0x4009001	      0xe919070000	                           jmp 0x400971f	      5869	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	ELSE_12	IF_22
0x4009006	     0xfb605000000	           movzx eax, byte [0x0400900d] 	      5871	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23
0x400900d	            0x3c6c	                            cmp al, 0x6c	      5871	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23
0x400900f	            0x7565	                           jne 0x4009076	      5871	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23
0x4009011	    0x8b0500000000	            mov eax, dword [0x04009017] 	      5873	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009017	            0x85c0	                           test eax, eax	      5873	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009019	            0x7444	                            je 0x400905f	      5873	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400901b	     0xfb605000000	           movzx eax, byte [0x04009022] 	      5874	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009022	          0x83e080	                     and eax, 0xffffff80	      5874	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009025	            0x84c0	                             test al, al	      5874	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009027	            0x7436	                            je 0x400905f	      5874	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009029	     0xfb605000000	           movzx eax, byte [0x04009030] 	      5875	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009030	          0x83e008	                              and eax, 8	      5875	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009033	            0x84c0	                             test al, al	      5875	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009035	            0x7428	                            je 0x400905f	      5875	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009037	     0xfb605000000	           movzx eax, byte [0x0400903e] 	      5876	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400903e	          0x83e002	                              and eax, 2	      5876	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009041	            0x84c0	                             test al, al	      5876	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009043	            0x751a	                           jne 0x400905f	      5876	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009045	     0xfb605000000	           movzx eax, byte [0x0400904c] 	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400904c	          0x83e004	                              and eax, 4	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400904f	            0x84c0	                             test al, al	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009051	            0x750c	                           jne 0x400905f	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4009053	    0xc60500000000	                mov byte [0x0400905a], 0	      5878	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400905a	      0xe901020000	                           jmp 0x4009260	      5878	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400905f	      0xe8c5090000	                 call sym.check_long_reg	      5879	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	ELSE_14	IF_25	CALL_4
0x4009064	            0x85c0	                           test eax, eax	      5879	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	ELSE_14	IF_25	CALL_4
0x4009066	     0xf85f4010000	                           jne 0x4009260	      5879	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	ELSE_14	IF_25	CALL_4
0x400906c	      0xb800000000	                              mov eax, 0	      5880	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	ELSE_14	IF_25
0x4009071	      0xe9a9060000	                           jmp 0x400971f	      5880	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	ELSE_14	IF_25
0x4009076	     0xfb605000000	           movzx eax, byte [0x0400907d] 	      5882	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26
0x400907d	            0x3c71	                            cmp al, 0x71	      5882	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26
0x400907f	            0x7565	                           jne 0x40090e6	      5882	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26
0x4009081	    0x8b0500000000	            mov eax, dword [0x04009087] 	      5884	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x4009087	            0x85c0	                           test eax, eax	      5884	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x4009089	            0x7444	                            je 0x40090cf	      5884	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x400908b	     0xfb605000000	           movzx eax, byte [0x04009092] 	      5885	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x4009092	          0x83e080	                     and eax, 0xffffff80	      5885	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x4009095	            0x84c0	                             test al, al	      5885	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x4009097	            0x7436	                            je 0x40090cf	      5885	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x4009099	     0xfb605000000	           movzx eax, byte [0x040090a0] 	      5886	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090a0	          0x83e020	                           and eax, 0x20	      5886	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090a3	            0x84c0	                             test al, al	      5886	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090a5	            0x7428	                            je 0x40090cf	      5886	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090a7	     0xfb605000000	           movzx eax, byte [0x040090ae] 	      5887	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090ae	          0x83e002	                              and eax, 2	      5887	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090b1	            0x84c0	                             test al, al	      5887	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090b3	            0x751a	                           jne 0x40090cf	      5887	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090b5	     0xfb605000000	           movzx eax, byte [0x040090bc] 	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090bc	          0x83e004	                              and eax, 4	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090bf	            0x84c0	                             test al, al	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090c1	            0x750c	                           jne 0x40090cf	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090c3	    0xc60500000000	                mov byte [0x040090ca], 0	      5889	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090ca	      0xe991010000	                           jmp 0x4009260	      5889	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40090cf	      0xe8d70c0000	                call sym.check_qword_reg	      5890	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	ELSE_16	IF_28	CALL_5
0x40090d4	            0x85c0	                           test eax, eax	      5890	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	ELSE_16	IF_28	CALL_5
0x40090d6	     0xf8584010000	                           jne 0x4009260	      5890	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	ELSE_16	IF_28	CALL_5
0x40090dc	      0xb800000000	                              mov eax, 0	      5891	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	ELSE_16	IF_28
0x40090e1	      0xe939060000	                           jmp 0x400971f	      5891	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	ELSE_16	IF_28
0x40090e6	     0xfb605000000	           movzx eax, byte [0x040090ed] 	      5893	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29
0x40090ed	            0x3c77	                            cmp al, 0x77	      5893	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29
0x40090ef	            0x7549	                           jne 0x400913a	      5893	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29
0x40090f1	    0x8b0500000000	            mov eax, dword [0x040090f7] 	      5895	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x40090f7	            0x85c0	                           test eax, eax	      5895	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x40090f9	            0x7428	                            je 0x4009123	      5895	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x40090fb	     0xfb605000000	           movzx eax, byte [0x04009102] 	      5896	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x4009102	          0x83e080	                     and eax, 0xffffff80	      5896	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x4009105	            0x84c0	                             test al, al	      5896	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x4009107	            0x741a	                            je 0x4009123	      5896	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x4009109	     0xfb605000000	           movzx eax, byte [0x04009110] 	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x4009110	          0x83e004	                              and eax, 4	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x4009113	            0x84c0	                             test al, al	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x4009115	            0x740c	                            je 0x4009123	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x4009117	    0xc60500000000	                mov byte [0x0400911e], 0	      5898	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x400911e	      0xe93d010000	                           jmp 0x4009260	      5898	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x4009123	      0xe8c40e0000	                 call sym.check_word_reg	      5899	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	ELSE_18	IF_31	CALL_6
0x4009128	            0x85c0	                           test eax, eax	      5899	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	ELSE_18	IF_31	CALL_6
0x400912a	     0xf8530010000	                           jne 0x4009260	      5899	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	ELSE_18	IF_31	CALL_6
0x4009130	      0xb800000000	                              mov eax, 0	      5900	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	ELSE_18	IF_31
0x4009135	      0xe9e5050000	                           jmp 0x400971f	      5900	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	ELSE_18	IF_31
0x400913a	    0x8b0500000000	            mov eax, dword [0x04009140] 	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x4009140	            0x85c0	                           test eax, eax	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x4009142	            0x7412	                            je 0x4009156	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x4009144	     0xfb605000000	           movzx eax, byte [0x0400914b] 	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x400914b	          0x83e080	                     and eax, 0xffffff80	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x400914e	            0x84c0	                             test al, al	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x4009150	     0xf850a010000	                           jne 0x4009260	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x4009156	      0xba00000000	                              mov edx, 0	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x400915b	      0xbe12170000	                         mov esi, 0x1712	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4009160	      0xbf00000000	                              mov edi, 0	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4009165	      0xe800000000	                          call 0x400916a	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x400916a	     0xfb605000000	           movzx eax, byte [0x04009171] 	      5908	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x4009171	          0x83e001	                              and eax, 1	      5908	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x4009174	            0x84c0	                             test al, al	      5908	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x4009176	            0x742b	                            je 0x40091a3	      5908	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x4009178	     0xfb605000000	           movzx eax, byte [0x0400917f] 	      5909	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400917f	            0x84c0	                             test al, al	      5909	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x4009181	            0x7520	                           jne 0x40091a3	      5909	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x4009183	     0xfb605000000	           movzx eax, byte [0x0400918a] 	      5911	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400918a	          0x83e010	                           and eax, 0x10	      5911	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400918d	            0x84c0	                             test al, al	      5911	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400918f	            0x7412	                            je 0x40091a3	      5911	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x4009191	     0xfb605000000	           movzx eax, byte [0x04009198] 	      5913	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x4009198	    0x880500000000	               mov byte [0x0400919e], al	      5913	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400919e	      0xe9bd000000	                           jmp 0x4009260	      5913	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x40091a3	    0x8b0500000000	            mov eax, dword [0x040091a9] 	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091a9	            0x85c0	                           test eax, eax	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091ab	     0xf84af000000	                            je 0x4009260	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091b1	     0xfb605000000	           movzx eax, byte [0x040091b8] 	      5916	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091b8	            0x84c0	                             test al, al	      5916	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091ba	     0xf85a0000000	                           jne 0x4009260	      5916	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091c0	     0xfb605000000	           movzx eax, byte [0x040091c7] 	      5917	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091c7	          0x83e002	                              and eax, 2	      5917	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091ca	            0x84c0	                             test al, al	      5917	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091cc	            0x7534	                           jne 0x4009202	      5917	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091ce	     0xfb605000000	           movzx eax, byte [0x040091d5] 	      5918	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091d5	          0x83e080	                     and eax, 0xffffff80	      5918	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091d8	            0x84c0	                             test al, al	      5918	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091da	            0x7526	                           jne 0x4009202	      5918	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091dc	     0xfb605000000	           movzx eax, byte [0x040091e3] 	      5919	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091e3	          0x83e001	                              and eax, 1	      5919	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091e6	            0x84c0	                             test al, al	      5919	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091e8	            0x7518	                           jne 0x4009202	      5919	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091ea	    0x8b0500000000	            mov eax, dword [0x040091f0] 	      5920	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091f0	      0x3d010f0000	                          cmp eax, 0xf01	      5920	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091f5	            0x7569	                           jne 0x4009260	      5920	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091f7	    0x8b0500000000	            mov eax, dword [0x040091fd] 	      5921	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40091fd	          0x83f803	                              cmp eax, 3	      5921	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x4009200	            0x775e	                            ja 0x4009260	      5921	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x4009202	    0x8b0500000000	            mov eax, dword [0x04009208] 	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x4009208	          0x83f801	                              cmp eax, 1	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400920b	            0x7438	                            je 0x4009245	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400920d	          0x83f801	                              cmp eax, 1	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x4009210	            0x721c	                            jb 0x400922e	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x4009212	          0x83f802	                              cmp eax, 2	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x4009215	            0x7549	                           jne 0x4009260	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x4009217	     0xfb605000000	           movzx eax, byte [0x0400921e] 	      5926	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x400921e	          0x83e020	                           and eax, 0x20	      5926	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x4009221	            0x84c0	                             test al, al	      5926	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x4009223	            0x7509	                           jne 0x400922e	      5926	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x4009225	    0xc60500000000	            mov byte [0x0400922c], 0x71 	      5928	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x400922c	            0xeb32	                           jmp 0x4009260	      5929	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x400922e	     0xfb605000000	           movzx eax, byte [0x04009235] 	      5933	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x4009235	          0x83e008	                              and eax, 8	      5933	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x4009238	            0x84c0	                             test al, al	      5933	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x400923a	            0x7520	                           jne 0x400925c	      5933	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x400923c	    0xc60500000000	            mov byte [0x04009243], 0x6c 	      5934	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x4009243	            0xeb17	                           jmp 0x400925c	      5935	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x4009245	     0xfb605000000	           movzx eax, byte [0x0400924c] 	      5937	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x400924c	          0x83e004	                              and eax, 4	      5937	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x400924f	            0x84c0	                             test al, al	      5937	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x4009251	            0x750c	                           jne 0x400925f	      5937	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x4009253	    0xc60500000000	            mov byte [0x0400925a], 0x77 	      5938	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x400925a	            0xeb03	                           jmp 0x400925f	      5939	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400925c	              0x90	                                     nop	      5935	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400925d	            0xeb01	                           jmp 0x4009260	      5935	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400925f	              0x90	                                     nop	      5939	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x4009260	     0xfb605000000	           movzx eax, byte [0x04009267] 	      5943	tc-i386.c	FUNCTION_79	IF_38
0x4009267	            0x84c0	                             test al, al	      5943	tc-i386.c	FUNCTION_79	IF_38
0x4009269	     0xf8519010000	                           jne 0x4009388	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400926f	    0x8b0500000000	            mov eax, dword [0x04009275] 	      5945	tc-i386.c	FUNCTION_79	IF_38	IF_39
0x4009275	            0x85c0	                           test eax, eax	      5945	tc-i386.c	FUNCTION_79	IF_38	IF_39
0x4009277	            0x7533	                           jne 0x40092ac	      5945	tc-i386.c	FUNCTION_79	IF_38	IF_39
0x4009279	     0xfb605000000	           movzx eax, byte [0x04009280] 	      5947	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x4009280	          0x83e002	                              and eax, 2	      5947	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x4009283	            0x84c0	                             test al, al	      5947	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x4009285	     0xf84fd000000	                            je 0x4009388	      5947	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x400928b	      0xbf00000000	                              mov edi, 0	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x4009290	      0xe800000000	                          call 0x4009295	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x4009295	          0x4889c7	                            mov rdi, rax	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x4009298	      0xb800000000	                              mov eax, 0	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x400929d	      0xe800000000	                          call 0x40092a2	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x40092a2	      0xb800000000	                              mov eax, 0	      5951	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x40092a7	      0xe973040000	                           jmp 0x400971f	      5951	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x40092ac	     0xfb605000000	           movzx eax, byte [0x040092b3] 	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x40092b3	          0x83e002	                              and eax, 2	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x40092b6	            0x84c0	                             test al, al	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x40092b8	           0xf94c0	                                 sete al	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x40092bb	           0xfb6c0	                           movzx eax, al	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x40092be	          0x8945e0	             mov dword [rbp - 0x20], eax	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x40092c1	     0xfb605000000	           movzx eax, byte [0x040092c8] 	      5959	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x40092c8	          0x83e004	                              and eax, 4	      5959	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x40092cb	            0x84c0	                             test al, al	      5959	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x40092cd	            0x7504	                           jne 0x40092d3	      5959	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x40092cf	        0x834de002	                or dword [rbp - 0x20], 2	      5960	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x40092d3	     0xfb605000000	           movzx eax, byte [0x040092da] 	      5961	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x40092da	          0x83e008	                              and eax, 8	      5961	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x40092dd	            0x84c0	                             test al, al	      5961	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x40092df	            0x7504	                           jne 0x40092e5	      5961	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x40092e1	        0x834de004	                or dword [rbp - 0x20], 4	      5962	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x40092e5	     0xfb605000000	           movzx eax, byte [0x040092ec] 	      5963	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x40092ec	          0x83e040	                           and eax, 0x40	      5963	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x40092ef	            0x84c0	                             test al, al	      5963	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x40092f1	            0x7504	                           jne 0x40092f7	      5963	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x40092f3	        0x834de008	                or dword [rbp - 0x20], 8	      5964	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x40092f7	     0xfb605000000	           movzx eax, byte [0x040092fe] 	      5965	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x40092fe	          0x83e010	                           and eax, 0x10	      5965	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x4009301	            0x84c0	                             test al, al	      5965	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x4009303	            0x7504	                           jne 0x4009309	      5965	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x4009305	        0x834de010	             or dword [rbp - 0x20], 0x10	      5966	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x4009309	    0x8b0500000000	            mov eax, dword [0x0400930f] 	      5967	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400930f	          0x83f802	                              cmp eax, 2	      5967	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x4009312	            0x7512	                           jne 0x4009326	      5967	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x4009314	     0xfb605000000	           movzx eax, byte [0x0400931b] 	      5967	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400931b	          0x83e020	                           and eax, 0x20	      5967	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400931e	            0x84c0	                             test al, al	      5967	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x4009320	            0x7504	                           jne 0x4009326	      5967	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x4009322	        0x834de020	             or dword [rbp - 0x20], 0x20	      5968	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x4009326	     0xfb605000000	           movzx eax, byte [0x0400932d] 	      5971	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400932d	          0x83e002	                              and eax, 2	      5971	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4009330	            0x84c0	                             test al, al	      5971	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4009332	            0x7529	                           jne 0x400935d	      5971	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4009334	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5972	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4009337	          0x83e801	                              sub eax, 1	      5972	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400933a	          0x2345e0	             and eax, dword [rbp - 0x20]	      5972	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400933d	            0x85c0	                           test eax, eax	      5972	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400933f	            0x7447	                            je 0x4009388	      5972	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4009341	     0xfb605000000	           movzx eax, byte [0x04009348] 	      5973	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4009348	          0x83e001	                              and eax, 1	      5973	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400934b	            0x84c0	                             test al, al	      5973	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400934d	            0x7539	                           jne 0x4009388	      5973	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400934f	     0xfb605000000	           movzx eax, byte [0x04009356] 	      5974	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4009356	          0x83e080	                     and eax, 0xffffff80	      5974	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4009359	            0x84c0	                             test al, al	      5974	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400935b	            0x752b	                           jne 0x4009388	      5974	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400935d	    0x488b1d000000	            mov rbx, qword [0x04009364] 	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x4009364	      0xbf00000000	                              mov edi, 0	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x4009369	      0xe800000000	                          call 0x400936e	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400936e	          0x4889de	                            mov rsi, rbx	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x4009371	          0x4889c7	                            mov rdi, rax	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x4009374	      0xb800000000	                              mov eax, 0	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x4009379	      0xe800000000	                          call 0x400937e	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400937e	      0xb800000000	                              mov eax, 0	      5977	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4009383	      0xe997030000	                           jmp 0x400971f	      5977	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4009388	     0xfb605000000	           movzx eax, byte [0x0400938f] 	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400938f	           0xfbec0	                           movsx eax, al	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x4009392	          0x83f871	                           cmp eax, 0x71	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x4009395	            0x7440	                            je 0x40093d7	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x4009397	          0x83f871	                           cmp eax, 0x71	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400939a	            0x7f0a	                            jg 0x40093a6	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400939c	          0x83f86c	                           cmp eax, 0x6c	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400939f	            0x7414	                            je 0x40093b5	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40093a1	      0xe926020000	                           jmp 0x40095cc	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40093a6	          0x83f873	                           cmp eax, 0x73	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40093a9	            0x7468	                            je 0x4009413	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40093ab	          0x83f877	                           cmp eax, 0x77	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40093ae	            0x7427	                            je 0x40093d7	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40093b0	      0xe917020000	                           jmp 0x40095cc	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40093b5	     0xfb605000000	           movzx eax, byte [0x040093bc] 	      5987	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x40093bc	          0x83e002	                              and eax, 2	      5987	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x40093bf	            0x84c0	                             test al, al	      5987	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x40093c1	            0x7414	                            je 0x40093d7	      5987	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x40093c3	    0x8b0500000000	            mov eax, dword [0x040093c9] 	      5989	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x40093c9	          0x83f004	                              xor eax, 4	      5989	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x40093cc	    0x890500000000	            mov dword [0x040093d2], eax 	      5989	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x40093d2	      0xe9f5010000	                           jmp 0x40095cc	      5990	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x40093d7	     0xfb605000000	           movzx eax, byte [0x040093de] 	      5996	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48
0x40093de	          0x83e002	                              and eax, 2	      5996	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48
0x40093e1	            0x84c0	                             test al, al	      5996	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48
0x40093e3	            0x742e	                            je 0x4009413	      5996	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48
0x40093e5	     0xfb605000000	           movzx eax, byte [0x040093ec] 	      5998	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x40093ec	          0x83e010	                           and eax, 0x10	      5998	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x40093ef	            0x84c0	                             test al, al	      5998	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x40093f1	            0x7411	                            je 0x4009404	      5998	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x40093f3	    0x8b0500000000	            mov eax, dword [0x040093f9] 	      5999	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x40093f9	          0x83c808	                               or eax, 8	      5999	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x40093fc	    0x890500000000	            mov dword [0x04009402], eax 	      5999	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x4009402	            0xeb0f	                           jmp 0x4009413	      5999	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x4009404	    0x8b0500000000	            mov eax, dword [0x0400940a] 	      6001	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	ELSE_24
0x400940a	          0x83c801	                               or eax, 1	      6001	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	ELSE_24
0x400940d	    0x890500000000	            mov dword [0x04009413], eax 	      6001	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	ELSE_24
0x4009413	    0x8b0500000000	            mov eax, dword [0x04009419] 	      6008	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4009419	            0x85c0	                           test eax, eax	      6008	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400941b	     0xf8495000000	                            je 0x40094b6	      6008	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4009421	     0xfb605000000	           movzx eax, byte [0x04009428] 	      6009	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4009428	          0x83e001	                              and eax, 1	      6009	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400942b	            0x84c0	                             test al, al	      6009	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400942d	     0xf8483000000	                            je 0x40094b6	      6009	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4009433	     0xfb605000000	           movzx eax, byte [0x0400943a] 	      6010	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400943a	          0x83e008	                              and eax, 8	      6010	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400943d	            0x84c0	                             test al, al	      6010	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400943f	            0x7475	                            je 0x40094b6	      6010	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4009441	     0xfb605000000	           movzx eax, byte [0x04009448] 	      6011	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4009448	          0x83e020	                           and eax, 0x20	      6011	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400944b	            0x84c0	                             test al, al	      6011	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400944d	            0x750b	                           jne 0x400945a	      6011	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400944f	    0x8b0500000000	            mov eax, dword [0x04009455] 	      6012	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4009455	          0x83f801	                              cmp eax, 1	      6012	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4009458	            0x755c	                           jne 0x40094b6	      6012	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400945a	    0x8b0500000000	            mov eax, dword [0x04009460] 	      6016	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4009460	            0x85c0	                           test eax, eax	      6016	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4009462	            0x7512	                           jne 0x4009476	      6016	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4009464	    0x488b05000000	            mov rax, qword [0x0400946b] 	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400946b	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400946f	          0x83e040	                           and eax, 0x40	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4009472	            0x84c0	                             test al, al	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4009474	            0x7524	                           jne 0x400949a	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4009476	    0x8b0500000000	            mov eax, dword [0x0400947c] 	      6018	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400947c	            0x85c0	                           test eax, eax	      6018	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400947e	     0xf84c8000000	                            je 0x400954c	      6018	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4009484	    0x488b05000000	            mov rax, qword [0x0400948b] 	      6019	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400948b	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      6019	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400948f	          0x83e080	                     and eax, 0xffffff80	      6019	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4009492	            0x84c0	                             test al, al	      6019	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4009494	     0xf84b2000000	                            je 0x400954c	      6019	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400949a	      0xbf67000000	                           mov edi, 0x67	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x400949f	      0xe83d86ffff	                     call sym.add_prefix	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x40094a4	            0x85c0	                           test eax, eax	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x40094a6	     0xf85a0000000	                           jne 0x400954c	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x40094ac	      0xb800000000	                              mov eax, 0	      6021	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52
0x40094b1	      0xe969020000	                           jmp 0x400971f	      6021	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52
0x40094b6	     0xfb605000000	           movzx eax, byte [0x040094bd] 	      6023	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094bd	            0x3c71	                            cmp al, 0x71	      6023	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094bf	     0xf8488000000	                            je 0x400954d	      6023	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094c5	     0xfb605000000	           movzx eax, byte [0x040094cc] 	      6024	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094cc	          0x83e080	                     and eax, 0xffffff80	      6024	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094cf	            0x84c0	                             test al, al	      6024	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094d1	            0x757a	                           jne 0x400954d	      6024	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094d3	     0xfb605000000	           movzx eax, byte [0x040094da] 	      6025	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094da	          0x83e002	                              and eax, 2	      6025	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094dd	            0x84c0	                             test al, al	      6025	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094df	            0x756c	                           jne 0x400954d	      6025	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094e1	     0xfb605000000	           movzx eax, byte [0x040094e8] 	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094e8	            0x3c6c	                            cmp al, 0x6c	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094ea	           0xf95c2	                                setne dl	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094ed	    0x8b0500000000	            mov eax, dword [0x040094f3] 	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094f3	          0x83f801	                              cmp eax, 1	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094f6	           0xf94c0	                                 sete al	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094f9	            0x31d0	                            xor eax, edx	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094fb	            0x84c0	                             test al, al	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094fd	            0x7519	                           jne 0x4009518	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x40094ff	    0x8b0500000000	            mov eax, dword [0x04009505] 	      6027	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4009505	          0x83f802	                              cmp eax, 2	      6027	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4009508	            0x7543	                           jne 0x400954d	      6027	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400950a	     0xfb605000000	           movzx eax, byte [0x04009511] 	      6028	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4009511	          0x83e080	                     and eax, 0xffffff80	      6028	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4009514	            0x84c0	                             test al, al	      6028	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4009516	            0x7435	                            je 0x400954d	      6028	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4009518	    0xc745e4660000	           mov dword [rbp - 0x1c], 0x66 	      6030	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400951f	     0xfb605000000	           movzx eax, byte [0x04009526] 	      6032	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x4009526	          0x83e080	                     and eax, 0xffffff80	      6032	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x4009529	            0x84c0	                             test al, al	      6032	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x400952b	            0x7407	                            je 0x4009534	      6032	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x400952d	    0xc745e4670000	           mov dword [rbp - 0x1c], 0x67 	      6033	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x4009534	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6035	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_55	CALL_13
0x4009537	            0x89c7	                            mov edi, eax	      6035	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_55	CALL_13
0x4009539	      0xe8a385ffff	                     call sym.add_prefix	      6035	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_55	CALL_13
0x400953e	            0x85c0	                           test eax, eax	      6035	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_55	CALL_13
0x4009540	            0x750b	                           jne 0x400954d	      6035	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_55	CALL_13
0x4009542	      0xb800000000	                              mov eax, 0	      6036	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_55
0x4009547	      0xe9d3010000	                           jmp 0x400971f	      6036	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_55
0x400954c	              0x90	                                     nop	      6016	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400954d	     0xfb605000000	           movzx eax, byte [0x04009554] 	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009554	            0x3c71	                            cmp al, 0x71	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009556	            0x7573	                           jne 0x40095cb	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009558	    0x8b0500000000	            mov eax, dword [0x0400955e] 	      6041	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400955e	          0x83f802	                              cmp eax, 2	      6041	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009561	            0x7568	                           jne 0x40095cb	      6041	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009563	     0xfb605000000	           movzx eax, byte [0x0400956a] 	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400956a	          0x83e040	                           and eax, 0x40	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400956d	            0x84c0	                             test al, al	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400956f	            0x755a	                           jne 0x40095cb	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009571	    0x8b0500000000	            mov eax, dword [0x04009577] 	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009577	          0x83f802	                              cmp eax, 2	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400957a	            0x7540	                           jne 0x40095bc	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400957c	    0x8b0500000000	            mov eax, dword [0x04009582] 	      6046	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009582	      0x3d90000000	                           cmp eax, 0x90	      6046	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009587	            0x7533	                           jne 0x40095bc	      6046	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009589	    0x8b0500000000	            mov eax, dword [0x0400958f] 	      6047	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400958f	      0x3dffff0000	                         cmp eax, 0xffff	      6047	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009594	            0x7526	                           jne 0x40095bc	      6047	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4009596	      0xbe00000000	                              mov esi, 0	      6048	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_14
0x400959b	      0xbf00000000	                              mov edi, 0	      6048	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_14
0x40095a0	      0xe87e6fffff	             call sym.operand_type_equal	      6048	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_14
0x40095a5	            0x85c0	                           test eax, eax	      6048	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_14
0x40095a7	            0x7413	                            je 0x40095bc	      6048	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_14
0x40095a9	      0xbe00000000	                              mov esi, 0	      6049	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_15
0x40095ae	      0xbf00000000	                              mov edi, 0	      6049	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_15
0x40095b3	      0xe86b6fffff	             call sym.operand_type_equal	      6049	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_15
0x40095b8	            0x85c0	                           test eax, eax	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40095ba	            0x750f	                           jne 0x40095cb	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40095bc	    0x8b0500000000	            mov eax, dword [0x040095c2] 	      6050	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40095c2	          0x83c808	                               or eax, 8	      6050	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40095c5	    0x890500000000	            mov dword [0x040095cb], eax 	      6050	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40095cb	              0x90	                                     nop	      6052	tc-i386.c	FUNCTION_79	SWITCH_2
0x40095cc	    0x8b0500000000	            mov eax, dword [0x040095d2] 	      6055	tc-i386.c	FUNCTION_79	IF_57
0x40095d2	            0x85c0	                           test eax, eax	      6055	tc-i386.c	FUNCTION_79	IF_57
0x40095d4	     0xf8440010000	                            je 0x400971a	      6055	tc-i386.c	FUNCTION_79	IF_57
0x40095da	    0x8b0500000000	            mov eax, dword [0x040095e0] 	      6056	tc-i386.c	FUNCTION_79	IF_57
0x40095e0	          0x83f801	                              cmp eax, 1	      6056	tc-i386.c	FUNCTION_79	IF_57
0x40095e3	     0xf8631010000	                           jbe 0x400971a	      6056	tc-i386.c	FUNCTION_79	IF_57
0x40095e9	     0xfb605000000	           movzx eax, byte [0x040095f0] 	      6057	tc-i386.c	FUNCTION_79	IF_57
0x40095f0	          0x83e008	                              and eax, 8	      6057	tc-i386.c	FUNCTION_79	IF_57
0x40095f3	            0x84c0	                             test al, al	      6057	tc-i386.c	FUNCTION_79	IF_57
0x40095f5	     0xf841f010000	                            je 0x400971a	      6057	tc-i386.c	FUNCTION_79	IF_57
0x40095fb	     0xfb605000000	           movzx eax, byte [0x04009602] 	      6058	tc-i386.c	FUNCTION_79	IF_57
0x4009602	          0x83e020	                           and eax, 0x20	      6058	tc-i386.c	FUNCTION_79	IF_57
0x4009605	            0x84c0	                             test al, al	      6058	tc-i386.c	FUNCTION_79	IF_57
0x4009607	     0xf850d010000	                           jne 0x400971a	      6058	tc-i386.c	FUNCTION_79	IF_57
0x400960d	    0x8b0500000000	            mov eax, dword [0x04009613] 	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4009613	            0x85c0	                           test eax, eax	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4009615	            0x7514	                           jne 0x400962b	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4009617	     0xfb605000000	           movzx eax, byte [0x0400961e] 	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400961e	            0x84c0	                             test al, al	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4009620	           0xf94c0	                                 sete al	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4009623	           0xfb6c0	                           movzx eax, al	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4009626	          0x8945ec	             mov dword [rbp - 0x14], eax	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4009629	            0xeb2e	                           jmp 0x4009659	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400962b	     0xfb605000000	           movzx eax, byte [0x04009632] 	      6069	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	IF_59
0x4009632	            0x84c0	                             test al, al	      6069	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	IF_59
0x4009634	            0x7409	                            je 0x400963f	      6069	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	IF_59
0x4009636	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6070	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	IF_59
0x400963d	            0xeb1a	                           jmp 0x4009659	      6070	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	IF_59
0x400963f	    0x8b0500000000	            mov eax, dword [0x04009645] 	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x4009645	          0x83f802	                              cmp eax, 2	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x4009648	            0x7507	                           jne 0x4009651	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x400964a	      0xb802000000	                              mov eax, 2	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x400964f	            0xeb05	                           jmp 0x4009656	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x4009651	      0xb800000000	                              mov eax, 0	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x4009656	          0x8945ec	             mov dword [rbp - 0x14], eax	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x4009659	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x4009660	      0xe9a6000000	                           jmp 0x400970b	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x4009665	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4009668	        0x4883c00e	                            add rax, 0xe	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400966c	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4009674	          0x83e001	                              and eax, 1	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4009677	            0x84c0	                             test al, al	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4009679	     0xf8488000000	                            je 0x4009707	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400967f	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6077	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4009683	            0x751a	                           jne 0x400969f	      6077	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4009685	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4009688	        0x4883c014	                           add rax, 0x14	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400968c	    0x488b04c50000	                  mov rax, qword [rax*8]	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4009694	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4009698	          0x83e040	                           and eax, 0x40	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400969b	            0x84c0	                             test al, al	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400969d	            0x7440	                            je 0x40096df	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400969f	        0x837dec01	               cmp dword [rbp - 0x14], 1	      6079	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096a3	            0x751a	                           jne 0x40096bf	      6079	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096a5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096a8	        0x4883c014	                           add rax, 0x14	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096ac	    0x488b04c50000	                  mov rax, qword [rax*8]	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096b4	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096b8	          0x83e080	                     and eax, 0xffffff80	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096bb	            0x84c0	                             test al, al	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096bd	            0x7420	                            je 0x40096df	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096bf	        0x837dec02	               cmp dword [rbp - 0x14], 2	      6081	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096c3	            0x7542	                           jne 0x4009707	      6081	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096c5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096c8	        0x4883c014	                           add rax, 0x14	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096cc	    0x488b04c50000	                  mov rax, qword [rax*8]	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096d4	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096d8	          0x83e002	                              and eax, 2	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096db	            0x84c0	                             test al, al	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096dd	            0x7528	                           jne 0x4009707	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40096df	    0x488b1d000000	            mov rbx, qword [0x040096e6] 	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x40096e6	      0xbf00000000	                              mov edi, 0	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x40096eb	      0xe800000000	                          call 0x40096f0	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x40096f0	          0x4889de	                            mov rsi, rbx	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x40096f3	          0x4889c7	                            mov rdi, rax	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x40096f6	      0xb800000000	                              mov eax, 0	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x40096fb	      0xe800000000	                          call 0x4009700	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x4009700	      0xb800000000	                              mov eax, 0	      6086	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4009705	            0xeb18	                           jmp 0x400971f	      6086	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4009707	        0x8345e801	               add dword [rbp - 0x18], 1	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x400970b	    0x8b0500000000	            mov eax, dword [0x04009711] 	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x4009711	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x4009714	     0xf874bffffff	                            ja 0x4009665	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x400971a	      0xb801000000	                              mov eax, 1	      6090	tc-i386.c	FUNCTION_79
0x400971f	        0x4883c428	                           add rsp, 0x28	      6091	tc-i386.c	FUNCTION_79
0x4009723	              0x5b	                                 pop rbx	      6091	tc-i386.c	FUNCTION_79
0x4009724	              0x5d	                                 pop rbp	      6091	tc-i386.c	FUNCTION_79
0x4009725	              0xc3	                                     ret	      6091	tc-i386.c	FUNCTION_79
fits_in_disp8	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,0:DO,0	34
0x4001750	              0x55	                                push rbp	      2193	tc-i386.c	FUNCTION_36
0x4001751	          0x4889e5	                            mov rbp, rsp	      2193	tc-i386.c	FUNCTION_36
0x4001754	        0x4883ec20	                           sub rsp, 0x20	      2193	tc-i386.c	FUNCTION_36
0x4001758	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2193	tc-i386.c	FUNCTION_36
0x400175c	    0x8b0500000000	            mov eax, dword [0x04001762] 	      2194	tc-i386.c	FUNCTION_36
0x4001762	          0x8945f8	                mov dword [rbp - 8], eax	      2194	tc-i386.c	FUNCTION_36
0x4001765	        0x837df8ff	 cmp dword [rbp - 8], 0xffffffffffffffff	      2197	tc-i386.c	FUNCTION_36	IF_1
0x4001769	            0x7514	                           jne 0x400177f	      2197	tc-i386.c	FUNCTION_36	IF_1
0x400176b	      0xba00000000	                              mov edx, 0	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x4001770	      0xbe96080000	                          mov esi, 0x896	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x4001775	      0xbf00000000	                              mov edi, 0	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400177a	      0xe800000000	                          call 0x400177f	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400177f	          0x8b45f8	                mov eax, dword [rbp - 8]	      2200	tc-i386.c	FUNCTION_36
0x4001782	      0xba01000000	                              mov edx, 1	      2200	tc-i386.c	FUNCTION_36
0x4001787	            0x89c1	                            mov ecx, eax	      2200	tc-i386.c	FUNCTION_36
0x4001789	            0xd3e2	                             shl edx, cl	      2200	tc-i386.c	FUNCTION_36
0x400178b	            0x89d0	                            mov eax, edx	      2200	tc-i386.c	FUNCTION_36
0x400178d	          0x83e801	                              sub eax, 1	      2200	tc-i386.c	FUNCTION_36
0x4001790	          0x8945fc	                mov dword [rbp - 4], eax	      2200	tc-i386.c	FUNCTION_36
0x4001793	          0x8b45fc	                mov eax, dword [rbp - 4]	      2203	tc-i386.c	FUNCTION_36	IF_2
0x4001796	        0x482345e8	             and rax, qword [rbp - 0x18]	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400179a	          0x4885c0	                           test rax, rax	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400179d	            0x7407	                            je 0x40017a6	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400179f	      0xb800000000	                              mov eax, 0	      2204	tc-i386.c	FUNCTION_36	IF_2
0x40017a4	            0xeb17	                           jmp 0x40017bd	      2204	tc-i386.c	FUNCTION_36	IF_2
0x40017a6	          0x8b45f8	                mov eax, dword [rbp - 8]	      2207	tc-i386.c	FUNCTION_36	CALL_2
0x40017a9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2207	tc-i386.c	FUNCTION_36	CALL_2
0x40017ad	            0x89c1	                            mov ecx, eax	      2207	tc-i386.c	FUNCTION_36	CALL_2
0x40017af	          0x48d3fa	                             sar rdx, cl	      2207	tc-i386.c	FUNCTION_36	CALL_2
0x40017b2	          0x4889d0	                            mov rax, rdx	      2207	tc-i386.c	FUNCTION_36	CALL_2
0x40017b5	          0x4889c7	                            mov rdi, rax	      2207	tc-i386.c	FUNCTION_36	CALL_2
0x40017b8	      0xe8e8feffff	            call sym.fits_in_signed_byte	      2207	tc-i386.c	FUNCTION_36	CALL_2
0x40017bd	              0xc9	                                   leave	      2208	tc-i386.c	FUNCTION_36
0x40017be	              0xc3	                                     ret	      2208	tc-i386.c	FUNCTION_36
show_arch	CALL,5:FOR,2:WHILE,0:functions,0:SWITCH,0:IF,6:ELSE,3:DO,0	145
0x4012f77	              0x55	                                push rbp	     10895	tc-i386.c	FUNCTION_126
0x4012f78	          0x4889e5	                            mov rbp, rsp	     10895	tc-i386.c	FUNCTION_126
0x4012f7b	        0x4883ec40	                           sub rsp, 0x40	     10895	tc-i386.c	FUNCTION_126
0x4012f7f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	     10895	tc-i386.c	FUNCTION_126
0x4012f83	          0x8975c4	             mov dword [rbp - 0x3c], esi	     10895	tc-i386.c	FUNCTION_126
0x4012f86	          0x8955c0	             mov dword [rbp - 0x40], edx	     10895	tc-i386.c	FUNCTION_126
0x4012f89	    0x64488b042528	                mov rax, qword fs:[0x28]	     10895	tc-i386.c	FUNCTION_126
0x4012f92	        0x488945f8	                mov qword [rbp - 8], rax	     10895	tc-i386.c	FUNCTION_126
0x4012f96	            0x31c0	                            xor eax, eax	     10895	tc-i386.c	FUNCTION_126
0x4012f98	    0x48c745f00000	               mov qword [rbp - 0x10], 0	     10897	tc-i386.c	FUNCTION_126
0x4012fa0	    0xc745dc510000	           mov dword [rbp - 0x24], 0x51 	     10899	tc-i386.c	FUNCTION_126
0x4012fa7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10905	tc-i386.c	FUNCTION_126
0x4012fab	        0x488945e0	             mov qword [rbp - 0x20], rax	     10905	tc-i386.c	FUNCTION_126
0x4012faf	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10906	tc-i386.c	FUNCTION_126
0x4012fb2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     10906	tc-i386.c	FUNCTION_126
0x4012fb6	      0xb900000000	                              mov ecx, 0	     10906	tc-i386.c	FUNCTION_126
0x4012fbb	          0x4829ca	                            sub rdx, rcx	     10906	tc-i386.c	FUNCTION_126
0x4012fbe	            0x29d0	                            sub eax, edx	     10906	tc-i386.c	FUNCTION_126
0x4012fc0	          0x8945d0	             mov dword [rbp - 0x30], eax	     10906	tc-i386.c	FUNCTION_126
0x4012fc3	    0xc745d8000000	               mov dword [rbp - 0x28], 0	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x4012fca	      0xe9f1000000	                           jmp 0x40130c0	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x4012fcf	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4012fd2	          0x4889d0	                            mov rax, rdx	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4012fd5	        0x48c1e002	                              shl rax, 2	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4012fd9	          0x4801d0	                            add rax, rdx	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4012fdc	        0x48c1e003	                              shl rax, 3	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4012fe0	    0x480500000000	                              add rax, 0	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4012fe6	            0x8b00	                    mov eax, dword [rax]	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4012fe8	            0x85c0	                           test eax, eax	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4012fea	     0xf85c2000000	                           jne 0x40130b2	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4012ff0	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     10913	tc-i386.c	FUNCTION_126	FOR_1
0x4012ff3	          0x4889d0	                            mov rax, rdx	     10913	tc-i386.c	FUNCTION_126	FOR_1
0x4012ff6	        0x48c1e002	                              shl rax, 2	     10913	tc-i386.c	FUNCTION_126	FOR_1
0x4012ffa	          0x4801d0	                            add rax, rdx	     10913	tc-i386.c	FUNCTION_126	FOR_1
0x4012ffd	        0x48c1e003	                              shl rax, 3	     10913	tc-i386.c	FUNCTION_126	FOR_1
0x4013001	    0x480500000000	                              add rax, 0	     10913	tc-i386.c	FUNCTION_126	FOR_1
0x4013007	          0x488b00	                    mov rax, qword [rax]	     10913	tc-i386.c	FUNCTION_126	FOR_1
0x401300a	        0x488945e8	             mov qword [rbp - 0x18], rax	     10913	tc-i386.c	FUNCTION_126	FOR_1
0x401300e	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     10914	tc-i386.c	FUNCTION_126	FOR_1
0x4013011	          0x4889d0	                            mov rax, rdx	     10914	tc-i386.c	FUNCTION_126	FOR_1
0x4013014	        0x48c1e002	                              shl rax, 2	     10914	tc-i386.c	FUNCTION_126	FOR_1
0x4013018	          0x4801d0	                            add rax, rdx	     10914	tc-i386.c	FUNCTION_126	FOR_1
0x401301b	        0x48c1e003	                              shl rax, 3	     10914	tc-i386.c	FUNCTION_126	FOR_1
0x401301f	    0x480500000000	                              add rax, 0	     10914	tc-i386.c	FUNCTION_126	FOR_1
0x4013025	            0x8b00	                    mov eax, dword [rax]	     10914	tc-i386.c	FUNCTION_126	FOR_1
0x4013027	          0x8945d4	             mov dword [rbp - 0x2c], eax	     10914	tc-i386.c	FUNCTION_126	FOR_1
0x401302a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10915	tc-i386.c	FUNCTION_126	FOR_1	IF_2
0x401302e	           0xfb600	                   movzx eax, byte [rax]	     10915	tc-i386.c	FUNCTION_126	FOR_1	IF_2
0x4013031	            0x3c2e	                            cmp al, 0x2e	     10915	tc-i386.c	FUNCTION_126	FOR_1	IF_2
0x4013033	            0x7511	                           jne 0x4013046	     10915	tc-i386.c	FUNCTION_126	FOR_1	IF_2
0x4013035	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     10918	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4013039	            0x747a	                            je 0x40130b5	     10918	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x401303b	      0x488345e801	               add qword [rbp - 0x18], 1	     10920	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4013040	        0x836dd401	               sub dword [rbp - 0x2c], 1	     10921	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4013044	            0xeb30	                           jmp 0x4013076	     10921	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4013046	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     10926	tc-i386.c	FUNCTION_126	FOR_1	ELSE_1	ELSE_2	IF_4
0x401304a	            0x756c	                           jne 0x40130b8	     10926	tc-i386.c	FUNCTION_126	FOR_1	ELSE_1	ELSE_2	IF_4
0x401304c	        0x837dc000	               cmp dword [rbp - 0x40], 0	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4013050	            0x7424	                            je 0x4013076	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4013052	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4013055	          0x4889d0	                            mov rax, rdx	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4013058	        0x48c1e002	                              shl rax, 2	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x401305c	          0x4801d0	                            add rax, rdx	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x401305f	        0x48c1e003	                              shl rax, 3	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4013063	    0x480500000000	                              add rax, 0	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4013069	           0xfb600	                   movzx eax, byte [rax]	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x401306c	          0xc0e802	                               shr al, 2	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x401306f	          0x83e001	                              and eax, 1	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4013072	            0x84c0	                             test al, al	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4013074	            0x7445	                            je 0x40130bb	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4013076	        0x4c8b45e8	              mov r8, qword [rbp - 0x18]	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x401307a	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x401307e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x4013082	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x4013086	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x401308a	        0x4883ec08	                              sub rsp, 8	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x401308e	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x4013091	              0x51	                                push rcx	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x4013092	          0x4d89c1	                              mov r9, r8	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x4013095	          0x4989f8	                             mov r8, rdi	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x4013098	          0x4889d1	                            mov rcx, rdx	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x401309b	      0xba00000000	                              mov edx, 0	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40130a0	          0x4889c7	                            mov rdi, rax	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40130a3	      0xe8a6fdffff	                 call sym.output_message	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40130a8	        0x4883c410	                           add rsp, 0x10	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40130ac	        0x488945e0	             mov qword [rbp - 0x20], rax	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40130b0	            0xeb0a	                           jmp 0x40130bc	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40130b2	              0x90	                                     nop	     10911	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x40130b3	            0xeb07	                           jmp 0x40130bc	     10911	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x40130b5	              0x90	                                     nop	     10924	tc-i386.c	FUNCTION_126	FOR_1	IF_2	ELSE_1
0x40130b6	            0xeb04	                           jmp 0x40130bc	     10924	tc-i386.c	FUNCTION_126	FOR_1	IF_2	ELSE_1
0x40130b8	              0x90	                                     nop	     10929	tc-i386.c	FUNCTION_126	FOR_1	ELSE_1	ELSE_2	IF_4
0x40130b9	            0xeb01	                           jmp 0x40130bc	     10929	tc-i386.c	FUNCTION_126	FOR_1	ELSE_1	ELSE_2	IF_4
0x40130bb	              0x90	                                     nop	     10934	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x40130bc	        0x8345d801	               add dword [rbp - 0x28], 1	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x40130c0	    0x817dd8830000	           cmp dword [rbp - 0x28], 0x83 	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x40130c7	     0xf8602ffffff	                           jbe 0x4012fcf	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x40130cd	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     10941	tc-i386.c	FUNCTION_126	IF_6
0x40130d1	            0x7473	                            je 0x4013146	     10941	tc-i386.c	FUNCTION_126	IF_6
0x40130d3	    0xc745d8000000	               mov dword [rbp - 0x28], 0	     10942	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_3
0x40130da	            0xeb64	                           jmp 0x4013140	     10942	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_3
0x40130dc	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10944	tc-i386.c	FUNCTION_126	IF_6	FOR_2
0x40130df	        0x48c1e005	                              shl rax, 5	     10944	tc-i386.c	FUNCTION_126	IF_6	FOR_2
0x40130e3	    0x480500000000	                              add rax, 0	     10944	tc-i386.c	FUNCTION_126	IF_6	FOR_2
0x40130e9	          0x488b00	                    mov rax, qword [rax]	     10944	tc-i386.c	FUNCTION_126	IF_6	FOR_2
0x40130ec	        0x488945e8	             mov qword [rbp - 0x18], rax	     10944	tc-i386.c	FUNCTION_126	IF_6	FOR_2
0x40130f0	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10945	tc-i386.c	FUNCTION_126	IF_6	FOR_2
0x40130f3	        0x48c1e005	                              shl rax, 5	     10945	tc-i386.c	FUNCTION_126	IF_6	FOR_2
0x40130f7	    0x480500000000	                              add rax, 0	     10945	tc-i386.c	FUNCTION_126	IF_6	FOR_2
0x40130fd	            0x8b00	                    mov eax, dword [rax]	     10945	tc-i386.c	FUNCTION_126	IF_6	FOR_2
0x40130ff	          0x8945d4	             mov dword [rbp - 0x2c], eax	     10945	tc-i386.c	FUNCTION_126	IF_6	FOR_2
0x4013102	        0x4c8b45e8	              mov r8, qword [rbp - 0x18]	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4013106	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x401310a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x401310e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4013112	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4013116	        0x4883ec08	                              sub rsp, 8	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x401311a	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x401311d	              0x51	                                push rcx	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x401311e	          0x4d89c1	                              mov r9, r8	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4013121	          0x4989f8	                             mov r8, rdi	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4013124	          0x4889d1	                            mov rcx, rdx	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4013127	      0xba00000000	                              mov edx, 0	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x401312c	          0x4889c7	                            mov rdi, rax	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x401312f	      0xe81afdffff	                 call sym.output_message	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4013134	        0x4883c410	                           add rsp, 0x10	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4013138	        0x488945e0	             mov qword [rbp - 0x20], rax	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x401313c	        0x8345d801	               add dword [rbp - 0x28], 1	     10942	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_3
0x4013140	        0x837dd820	           cmp dword [rbp - 0x28], 0x20 	     10942	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_3
0x4013144	            0x7696	                           jbe 0x40130dc	     10942	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_3
0x4013146	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10950	tc-i386.c	FUNCTION_126
0x401314a	          0xc60000	                       mov byte [rax], 0	     10950	tc-i386.c	FUNCTION_126
0x401314d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10951	tc-i386.c	FUNCTION_126	CALL_5
0x4013151	      0xba00000000	                              mov edx, 0	     10951	tc-i386.c	FUNCTION_126	CALL_5
0x4013156	      0xbe00000000	                              mov esi, 0	     10951	tc-i386.c	FUNCTION_126	CALL_5
0x401315b	          0x4889c7	                            mov rdi, rax	     10951	tc-i386.c	FUNCTION_126	CALL_5
0x401315e	      0xb800000000	                              mov eax, 0	     10951	tc-i386.c	FUNCTION_126	CALL_5
0x4013163	      0xe800000000	                          call 0x4013168	     10951	tc-i386.c	FUNCTION_126	CALL_5
0x4013168	              0x90	                                     nop	     10952	tc-i386.c	FUNCTION_126
0x4013169	        0x488b45f8	                mov rax, qword [rbp - 8]	     10952	tc-i386.c	FUNCTION_126
0x401316d	    0x644833042528	                xor rax, qword fs:[0x28]	     10952	tc-i386.c	FUNCTION_126
0x4013176	            0x7405	                            je 0x401317d	     10952	tc-i386.c	FUNCTION_126
0x4013178	      0xe800000000	                          call 0x401317d	     10952	tc-i386.c	FUNCTION_126
0x401317d	              0xc9	                                   leave	     10952	tc-i386.c	FUNCTION_126
0x401317e	              0xc3	                                     ret	     10952	tc-i386.c	FUNCTION_126
i386_target_format	CALL,19:FOR,0:WHILE,0:functions,0:SWITCH,2:IF,17:ELSE,10:DO,0	203
0x401352a	              0x55	                                push rbp	     11053	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401352b	          0x4889e5	                            mov rbp, rsp	     11053	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401352e	              0x53	                                push rbx	     11053	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401352f	        0x4883ec18	                           sub rsp, 0x18	     11053	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4013533	    0x488b05000000	            mov rax, qword [0x0401353a] 	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401353a	      0xba06000000	                              mov edx, 6	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401353f	      0xbe00000000	                              mov esi, 0	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4013544	          0x4889c7	                            mov rdi, rax	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4013547	      0xe800000000	                          call 0x401354c	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401354c	            0x85c0	                           test eax, eax	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401354e	            0x753f	                           jne 0x401358f	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4013550	      0xbe01000000	                              mov esi, 1	     11056	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4013555	      0xbf02000000	                              mov edi, 2	     11056	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401355a	      0xe836e7feff	               call sym.update_code_flag	     11056	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401355f	    0x488b05000000	            mov rax, qword [0x04013566] 	     11057	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4013566	        0x4883c006	                              add rax, 6	     11057	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401356a	           0xfb600	                   movzx eax, byte [rax]	     11057	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401356d	            0x84c0	                             test al, al	     11057	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401356f	            0x750f	                           jne 0x4013580	     11057	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4013571	    0xc70500000000	               mov dword [0x0401357b], 1	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401357b	      0xe9d7010000	                           jmp 0x4013757	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4013580	    0xc70500000000	               mov dword [0x0401358a], 2	     11060	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x401358a	      0xe9c8010000	                           jmp 0x4013757	     11060	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x401358f	    0x488b05000000	            mov rax, qword [0x04013596] 	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x4013596	      0xbe00000000	                              mov esi, 0	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x401359b	          0x4889c7	                            mov rdi, rax	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x401359e	      0xe800000000	                          call 0x40135a3	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40135a3	            0x85c0	                           test eax, eax	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40135a5	            0x7514	                           jne 0x40135bb	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40135a7	      0xbe01000000	                              mov esi, 1	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40135ac	      0xbf00000000	                              mov edi, 0	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40135b1	      0xe8dfe6feff	               call sym.update_code_flag	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40135b6	      0xe99c010000	                           jmp 0x4013757	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40135bb	    0x488b05000000	            mov rax, qword [0x040135c2] 	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40135c2	      0xbe00000000	                              mov esi, 0	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40135c7	          0x4889c7	                            mov rdi, rax	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40135ca	      0xe800000000	                          call 0x40135cf	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40135cf	            0x85c0	                           test eax, eax	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40135d1	     0xf8569010000	                           jne 0x4013740	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40135d7	      0xbe01000000	                              mov esi, 1	     11066	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7	CALL_8
0x40135dc	      0xbf00000000	                              mov edi, 0	     11066	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7	CALL_8
0x40135e1	      0xe8afe6feff	               call sym.update_code_flag	     11066	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7	CALL_8
0x40135e6	    0x8b0500000000	            mov eax, dword [0x040135ec] 	     11067	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7
0x40135ec	            0x85c0	                           test eax, eax	     11067	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7
0x40135ee	     0xf8520010000	                           jne 0x4013714	     11067	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7
0x40135f4	    0x48c705000000	               mov qword [0x040135ff], 0	     11070	tc-i386.c	FUNCTION_128	CALL_10
0x40135ff	    0x48c705000000	               mov qword [0x0401360a], 0	     11071	tc-i386.c	FUNCTION_128
0x401360a	    0x48c705000000	               mov qword [0x04013615], 0	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013615	    0x48c705000000	               mov qword [0x04013620], 0	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013620	     0xfb605000000	           movzx eax, byte [0x04013627] 	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013627	          0x83c801	                               or eax, 1	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x401362a	    0x880500000000	               mov byte [0x04013630], al	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013630	     0xfb605000000	           movzx eax, byte [0x04013637] 	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013637	          0x83c802	                               or eax, 2	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x401363a	    0x880500000000	               mov byte [0x04013640], al	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013640	     0xfb605000000	           movzx eax, byte [0x04013647] 	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013647	          0x83c804	                               or eax, 4	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x401364a	    0x880500000000	               mov byte [0x04013650], al	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013650	     0xfb605000000	           movzx eax, byte [0x04013657] 	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013657	          0x83c808	                               or eax, 8	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x401365a	    0x880500000000	               mov byte [0x04013660], al	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013660	     0xfb605000000	           movzx eax, byte [0x04013667] 	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013667	          0x83c810	                            or eax, 0x10	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x401366a	    0x880500000000	               mov byte [0x04013670], al	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4013670	    0xc70500000000	            mov dword [0x0401367a], 0xc 	     11073	tc-i386.c	FUNCTION_128	IF_8
0x401367a	    0x48c705000000	               mov qword [0x04013685], 0	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x4013685	    0x48c705000000	               mov qword [0x04013690], 0	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x4013690	     0xfb605000000	           movzx eax, byte [0x04013697] 	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x4013697	          0x83c801	                               or eax, 1	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x401369a	    0x880500000000	               mov byte [0x040136a0], al	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136a0	     0xfb605000000	           movzx eax, byte [0x040136a7] 	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136a7	          0x83c802	                               or eax, 2	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136aa	    0x880500000000	               mov byte [0x040136b0], al	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136b0	     0xfb605000000	           movzx eax, byte [0x040136b7] 	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136b7	          0x83c804	                               or eax, 4	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136ba	    0x880500000000	               mov byte [0x040136c0], al	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136c0	     0xfb605000000	           movzx eax, byte [0x040136c7] 	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136c7	          0x83c808	                               or eax, 8	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136ca	    0x880500000000	               mov byte [0x040136d0], al	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136d0	     0xfb605000000	           movzx eax, byte [0x040136d7] 	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136d7	          0x83c810	                            or eax, 0x10	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136da	    0x880500000000	               mov byte [0x040136e0], al	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x40136e0	    0x8b0500000000	            mov eax, dword [0x040136e6] 	     11075	tc-i386.c	FUNCTION_128	IF_9
0x40136e6	            0x85c0	                           test eax, eax	     11075	tc-i386.c	FUNCTION_128	IF_9
0x40136e8	            0x756d	                           jne 0x4013757	     11075	tc-i386.c	FUNCTION_128	IF_9
0x40136ea	    0x8b0500000000	            mov eax, dword [0x040136f0] 	     11077	tc-i386.c	FUNCTION_128	SWITCH_1
0x40136f0	    0x890500000000	            mov dword [0x040136f6], eax 	     11077	tc-i386.c	FUNCTION_128	SWITCH_1
0x40136f6	    0x488b05000000	            mov rax, qword [0x040136fd] 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x40136fd	    0x488b15000000	            mov rdx, qword [0x04013704] 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x4013704	    0x488905000000	            mov qword [0x0401370b], rax 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x401370b	    0x488915000000	            mov qword [0x04013712], rdx 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x4013712	            0xeb43	                           jmp 0x4013757	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x4013714	    0x8b0500000000	            mov eax, dword [0x0401371a] 	     11081	tc-i386.c	FUNCTION_128	SWITCH_1
0x401371a	          0x83f80c	                            cmp eax, 0xc	     11081	tc-i386.c	FUNCTION_128	SWITCH_1
0x401371d	            0x7438	                            je 0x4013757	     11081	tc-i386.c	FUNCTION_128	SWITCH_1
0x401371f	    0x488b1d000000	            mov rbx, qword [0x04013726] 	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4013726	      0xbf00000000	                              mov edi, 0	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x401372b	      0xe800000000	                          call 0x4013730	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4013730	          0x4889de	                            mov rsi, rbx	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4013733	          0x4889c7	                            mov rdi, rax	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4013736	      0xb800000000	                              mov eax, 0	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x401373b	      0xe800000000	                          call 0x4013740	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4013740	      0xbf00000000	                              mov edi, 0	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x4013745	      0xe800000000	                          call 0x401374a	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x401374a	          0x4889c7	                            mov rdi, rax	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x401374d	      0xb800000000	                              mov eax, 0	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x4013752	      0xe800000000	                          call 0x4013757	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x4013757	      0xbf00000000	                              mov edi, 0	     11088	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401375c	      0xe8fdcdfeff	             call sym.cpu_flags_all_zero	     11088	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4013761	            0x85c0	                           test eax, eax	     11088	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4013763	            0x743b	                            je 0x40137a0	     11088	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4013765	    0x8b0500000000	            mov eax, dword [0x0401376b] 	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401376b	          0x83f802	                              cmp eax, 2	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401376e	           0xf94c0	                                 sete al	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4013771	           0xfb6c0	                           movzx eax, al	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4013774	          0x4863d0	                         movsxd rdx, eax	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4013777	          0x4889d0	                            mov rax, rdx	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401377a	        0x48c1e002	                              shl rax, 2	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401377e	          0x4801d0	                            add rax, rdx	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4013781	        0x48c1e003	                              shl rax, 3	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4013785	    0x480500000000	                              add rax, 0	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401378b	        0x488b5008	                mov rdx, qword [rax + 8]	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401378f	          0x488b00	                    mov rax, qword [rax]	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4013792	    0x488905000000	            mov qword [0x04013799], rax 	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4013799	    0x488915000000	            mov qword [0x040137a0], rdx 	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137a0	      0xbf00000000	                              mov edi, 0	     11090	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137a5	      0xe8b4cdfeff	             call sym.cpu_flags_all_zero	     11090	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137aa	            0x85c0	                           test eax, eax	     11090	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137ac	            0x743b	                            je 0x40137e9	     11090	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137ae	    0x8b0500000000	            mov eax, dword [0x040137b4] 	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137b4	          0x83f802	                              cmp eax, 2	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137b7	           0xf94c0	                                 sete al	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137ba	           0xfb6c0	                           movzx eax, al	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137bd	          0x4863d0	                         movsxd rdx, eax	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137c0	          0x4889d0	                            mov rax, rdx	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137c3	        0x48c1e002	                              shl rax, 2	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137c7	          0x4801d0	                            add rax, rdx	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137ca	        0x48c1e003	                              shl rax, 3	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137ce	    0x480500000000	                              add rax, 0	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137d4	        0x488b5008	                mov rdx, qword [rax + 8]	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137d8	          0x488b00	                    mov rax, qword [rax]	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137db	    0x488905000000	            mov qword [0x040137e2], rax 	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137e2	    0x488915000000	            mov qword [0x040137e9], rdx 	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40137e9	    0x8b0500000000	            mov eax, dword [0x040137ef] 	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x40137ef	          0x83f801	                              cmp eax, 1	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x40137f2	            0x740f	                            je 0x4013803	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x40137f4	          0x83f802	                              cmp eax, 2	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x40137f7	            0x7428	                            je 0x4013821	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x40137f9	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     11122	tc-i386.c	FUNCTION_128	SWITCH_1	IF_11	IF_12
0x4013801	            0xeb45	                           jmp 0x4013848	     11123	tc-i386.c	FUNCTION_128	SWITCH_1	IF_11	CALL_14
0x4013803	    0xc70500000000	               mov dword [0x0401380d], 1	     11125	tc-i386.c	FUNCTION_128	SWITCH_1	IF_11
0x401380d	    0xc70500000000	               mov dword [0x04013817], 1	     11126	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x4013817	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     11127	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x401381f	            0xeb27	                           jmp 0x4013848	     11128	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13	IF_14
0x4013821	    0xc70500000000	               mov dword [0x0401382b], 1	     11130	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x401382b	    0xc70500000000	               mov dword [0x04013835], 1	     11131	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x4013835	    0xc70500000000	               mov dword [0x0401383f], 1	     11132	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x401383f	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     11133	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x4013847	              0x90	                                     nop	     11134	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15	IF_16
0x4013848	    0x8b0500000000	            mov eax, dword [0x0401384e] 	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x401384e	          0x83f80a	                            cmp eax, 0xa	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x4013851	            0x7529	                           jne 0x401387c	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x4013853	    0x8b0500000000	            mov eax, dword [0x04013859] 	     11138	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4013859	          0x83f801	                              cmp eax, 1	     11138	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401385c	            0x7417	                            je 0x4013875	     11138	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401385e	      0xbf00000000	                              mov edi, 0	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4013863	      0xe800000000	                          call 0x4013868	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4013868	          0x4889c7	                            mov rdi, rax	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401386b	      0xb800000000	                              mov eax, 0	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4013870	      0xe800000000	                          call 0x4013875	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4013875	      0xb800000000	                              mov eax, 0	     11140	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401387a	            0xeb6b	                           jmp 0x40138e7	     11140	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401387c	    0x8b0500000000	            mov eax, dword [0x04013882] 	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4013882	          0x83f80b	                            cmp eax, 0xb	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4013885	            0x7529	                           jne 0x40138b0	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4013887	    0x8b0500000000	            mov eax, dword [0x0401388d] 	     11144	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x401388d	          0x83f801	                              cmp eax, 1	     11144	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4013890	            0x7417	                            je 0x40138a9	     11144	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4013892	      0xbf00000000	                              mov edi, 0	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4013897	      0xe800000000	                          call 0x401389c	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x401389c	          0x4889c7	                            mov rdi, rax	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x401389f	      0xb800000000	                              mov eax, 0	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x40138a4	      0xe800000000	                          call 0x40138a9	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x40138a9	      0xb800000000	                              mov eax, 0	     11146	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x40138ae	            0xeb37	                           jmp 0x40138e7	     11146	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x40138b0	    0x8b0500000000	            mov eax, dword [0x040138b6] 	     11148	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x40138b6	          0x83f80c	                            cmp eax, 0xc	     11148	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x40138b9	            0x7528	                           jne 0x40138e3	     11148	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x40138bb	    0x8b0500000000	            mov eax, dword [0x040138c1] 	     11150	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x40138c1	            0x85c0	                           test eax, eax	     11150	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x40138c3	            0x7417	                            je 0x40138dc	     11150	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x40138c5	      0xbf00000000	                              mov edi, 0	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x40138ca	      0xe800000000	                          call 0x40138cf	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x40138cf	          0x4889c7	                            mov rdi, rax	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x40138d2	      0xb800000000	                              mov eax, 0	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x40138d7	      0xe800000000	                          call 0x40138dc	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x40138dc	      0xb800000000	                              mov eax, 0	     11152	tc-i386.c	FUNCTION_128	SWITCH_1
0x40138e1	            0xeb04	                           jmp 0x40138e7	     11152	tc-i386.c	FUNCTION_128	SWITCH_1
0x40138e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11155	tc-i386.c	FUNCTION_128	SWITCH_1
0x40138e7	        0x4883c418	                           add rsp, 0x18	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x40138eb	              0x5b	                                 pop rbx	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x40138ec	              0x5d	                                 pop rbp	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x40138ed	              0xc3	                                     ret	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
intel_float_operand	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,2:IF,7:ELSE,0:DO,0	101
0x400343d	              0x55	                                push rbp	      3258	tc-i386.c	FUNCTION_61
0x400343e	          0x4889e5	                            mov rbp, rsp	      3258	tc-i386.c	FUNCTION_61
0x4003441	        0x48897df8	                mov qword [rbp - 8], rdi	      3258	tc-i386.c	FUNCTION_61
0x4003445	        0x488b45f8	                mov rax, qword [rbp - 8]	      3263	tc-i386.c	FUNCTION_61	IF_1
0x4003449	           0xfb600	                   movzx eax, byte [rax]	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400344c	            0x3c66	                            cmp al, 0x66	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400344e	            0x740a	                            je 0x400345a	      3263	tc-i386.c	FUNCTION_61	IF_1
0x4003450	      0xb800000000	                              mov eax, 0	      3264	tc-i386.c	FUNCTION_61	IF_1
0x4003455	      0xe92b010000	                           jmp 0x4003585	      3264	tc-i386.c	FUNCTION_61	IF_1
0x400345a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x400345e	        0x4883c001	                              add rax, 1	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003462	           0xfb600	                   movzx eax, byte [rax]	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003465	           0xfbec0	                           movsx eax, al	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003468	          0x83e869	                           sub eax, 0x69	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x400346b	          0x83f80f	                            cmp eax, 0xf	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x400346e	     0xf870c010000	                            ja 0x4003580	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003474	            0x89c0	                            mov eax, eax	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003476	    0x488b04c50000	                  mov rax, qword [rax*8]	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x400347e	            0xffe0	                                 jmp rax	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003480	      0xb802000000	                              mov eax, 2	      3272	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003485	      0xe9fb000000	                           jmp 0x4003585	      3272	tc-i386.c	FUNCTION_61	SWITCH_1
0x400348a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x400348e	        0x4883c002	                              add rax, 2	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x4003492	           0xfb600	                   movzx eax, byte [rax]	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x4003495	            0x3c64	                            cmp al, 0x64	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x4003497	     0xf85d6000000	                           jne 0x4003573	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x400349d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034a1	        0x4883c003	                              add rax, 3	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034a5	           0xfb600	                   movzx eax, byte [rax]	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034a8	            0x3c63	                            cmp al, 0x63	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034aa	            0x7413	                            je 0x40034bf	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034b0	        0x4883c003	                              add rax, 3	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034b4	           0xfb600	                   movzx eax, byte [rax]	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034b7	            0x3c65	                            cmp al, 0x65	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034b9	     0xf85b4000000	                           jne 0x4003573	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034bf	      0xb803000000	                              mov eax, 3	      3275	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034c4	      0xe9bc000000	                           jmp 0x4003585	      3275	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40034c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3278	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x40034cd	        0x4883c002	                              add rax, 2	      3278	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x40034d1	           0xfb600	                   movzx eax, byte [rax]	      3278	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x40034d4	            0x3c6f	                            cmp al, 0x6f	      3278	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x40034d6	     0xf849a000000	                            je 0x4003576	      3278	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x40034dc	      0xb803000000	                              mov eax, 3	      3279	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x40034e1	      0xe99f000000	                           jmp 0x4003585	      3279	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x40034e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3282	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x40034ea	        0x4883c002	                              add rax, 2	      3282	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x40034ee	           0xfb600	                   movzx eax, byte [rax]	      3282	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x40034f1	            0x3c73	                            cmp al, 0x73	      3282	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x40034f3	     0xf8580000000	                           jne 0x4003579	      3282	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x40034f9	      0xb803000000	                              mov eax, 3	      3283	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x40034fe	      0xe982000000	                           jmp 0x4003585	      3283	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x4003503	        0x488b45f8	                mov rax, qword [rbp - 8]	      3286	tc-i386.c	FUNCTION_61	SWITCH_1	IF_5
0x4003507	        0x4883c002	                              add rax, 2	      3286	tc-i386.c	FUNCTION_61	SWITCH_1	IF_5
0x400350b	           0xfb600	                   movzx eax, byte [rax]	      3286	tc-i386.c	FUNCTION_61	SWITCH_1	IF_5
0x400350e	            0x3c61	                            cmp al, 0x61	      3286	tc-i386.c	FUNCTION_61	SWITCH_1	IF_5
0x4003510	            0x7507	                           jne 0x4003519	      3286	tc-i386.c	FUNCTION_61	SWITCH_1	IF_5
0x4003512	      0xb803000000	                              mov eax, 3	      3287	tc-i386.c	FUNCTION_61	SWITCH_1	IF_5
0x4003517	            0xeb6c	                           jmp 0x4003585	      3287	tc-i386.c	FUNCTION_61	SWITCH_1	IF_5
0x4003519	        0x488b45f8	                mov rax, qword [rbp - 8]	      3288	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6
0x400351d	        0x4883c002	                              add rax, 2	      3288	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6
0x4003521	           0xfb600	                   movzx eax, byte [rax]	      3288	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6
0x4003524	            0x3c74	                            cmp al, 0x74	      3288	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6
0x4003526	            0x7554	                           jne 0x400357c	      3288	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6
0x4003528	        0x488b45f8	                mov rax, qword [rbp - 8]	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x400352c	        0x4883c003	                              add rax, 3	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4003530	           0xfb600	                   movzx eax, byte [rax]	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4003533	           0xfbec0	                           movsx eax, al	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4003536	          0x83f863	                           cmp eax, 0x63	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4003539	            0x7c41	                            jl 0x400357c	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x400353b	          0x83f865	                           cmp eax, 0x65	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x400353e	            0x7e07	                           jle 0x4003547	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4003540	          0x83f873	                           cmp eax, 0x73	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4003543	            0x7402	                            je 0x4003547	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4003545	            0xeb35	                           jmp 0x400357c	      3299	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003547	      0xb803000000	                              mov eax, 3	      3296	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x400354c	            0xeb37	                           jmp 0x4003585	      3296	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x400354e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3301	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x4003552	        0x4883c002	                              add rax, 2	      3301	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x4003556	           0xfb600	                   movzx eax, byte [rax]	      3301	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x4003559	            0x3c72	                            cmp al, 0x72	      3301	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x400355b	            0x740f	                            je 0x400356c	      3301	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x400355d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3301	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x4003561	        0x4883c002	                              add rax, 2	      3301	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x4003565	           0xfb600	                   movzx eax, byte [rax]	      3301	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x4003568	            0x3c73	                            cmp al, 0x73	      3301	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x400356a	            0x7513	                           jne 0x400357f	      3301	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x400356c	      0xb800000000	                              mov eax, 0	      3302	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x4003571	            0xeb12	                           jmp 0x4003585	      3302	tc-i386.c	FUNCTION_61	SWITCH_1	IF_7
0x4003573	              0x90	                                     nop	      3276	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003574	            0xeb0a	                           jmp 0x4003580	      3276	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003576	              0x90	                                     nop	      3280	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003577	            0xeb07	                           jmp 0x4003580	      3280	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003579	              0x90	                                     nop	      3284	tc-i386.c	FUNCTION_61	SWITCH_1
0x400357a	            0xeb04	                           jmp 0x4003580	      3284	tc-i386.c	FUNCTION_61	SWITCH_1
0x400357c	              0x90	                                     nop	      3299	tc-i386.c	FUNCTION_61	SWITCH_1
0x400357d	            0xeb01	                           jmp 0x4003580	      3299	tc-i386.c	FUNCTION_61	SWITCH_1
0x400357f	              0x90	                                     nop	      3303	tc-i386.c	FUNCTION_61	SWITCH_1
0x4003580	      0xb801000000	                              mov eax, 1	      3306	tc-i386.c	FUNCTION_61
0x4003585	              0x5d	                                 pop rbp	      3307	tc-i386.c	FUNCTION_61
0x4003586	              0xc3	                                     ret	      3307	tc-i386.c	FUNCTION_61
parse_real_register	CALL,4:FOR,0:WHILE,1:functions,0:SWITCH,0:IF,27:ELSE,0:DO,0	325
0x40117f7	              0x55	                                push rbp	     10161	tc-i386.c	FUNCTION_120
0x40117f8	          0x4889e5	                            mov rbp, rsp	     10161	tc-i386.c	FUNCTION_120
0x40117fb	        0x4883ec50	                           sub rsp, 0x50	     10161	tc-i386.c	FUNCTION_120
0x40117ff	        0x48897db8	             mov qword [rbp - 0x48], rdi	     10161	tc-i386.c	FUNCTION_120
0x4011803	        0x488975b0	             mov qword [rbp - 0x50], rsi	     10161	tc-i386.c	FUNCTION_120
0x4011807	    0x64488b042528	                mov rax, qword fs:[0x28]	     10161	tc-i386.c	FUNCTION_120
0x4011810	        0x488945f8	                mov qword [rbp - 8], rax	     10161	tc-i386.c	FUNCTION_120
0x4011814	            0x31c0	                            xor eax, eax	     10161	tc-i386.c	FUNCTION_120
0x4011816	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10162	tc-i386.c	FUNCTION_120
0x401181a	        0x488945c8	             mov qword [rbp - 0x38], rax	     10162	tc-i386.c	FUNCTION_120
0x401181e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10168	tc-i386.c	FUNCTION_120	IF_1
0x4011822	           0xfb600	                   movzx eax, byte [rax]	     10168	tc-i386.c	FUNCTION_120	IF_1
0x4011825	            0x3c25	                            cmp al, 0x25	     10168	tc-i386.c	FUNCTION_120	IF_1
0x4011827	            0x7505	                           jne 0x401182e	     10168	tc-i386.c	FUNCTION_120	IF_1
0x4011829	      0x488345c801	               add qword [rbp - 0x38], 1	     10169	tc-i386.c	FUNCTION_120	IF_1
0x401182e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10171	tc-i386.c	FUNCTION_120	IF_2
0x4011832	           0xfb600	                   movzx eax, byte [rax]	     10171	tc-i386.c	FUNCTION_120	IF_2
0x4011835	            0x3c20	                            cmp al, 0x20	     10171	tc-i386.c	FUNCTION_120	IF_2
0x4011837	            0x7505	                           jne 0x401183e	     10171	tc-i386.c	FUNCTION_120	IF_2
0x4011839	      0x488345c801	               add qword [rbp - 0x38], 1	     10172	tc-i386.c	FUNCTION_120	IF_2
0x401183e	        0x488d45e0	                   lea rax, [rbp - 0x20]	     10174	tc-i386.c	FUNCTION_120
0x4011842	        0x488945d0	             mov qword [rbp - 0x30], rax	     10174	tc-i386.c	FUNCTION_120
0x4011846	            0xeb1d	                           jmp 0x4011865	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4011848	        0x488d45e0	                   lea rax, [rbp - 0x20]	     10177	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x401184c	        0x4883c008	                              add rax, 8	     10177	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x4011850	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	     10177	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x4011854	            0x770a	                            ja 0x4011860	     10177	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x4011856	      0xb800000000	                              mov eax, 0	     10178	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x401185b	      0xe908040000	                           jmp 0x4011c68	     10178	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x4011860	      0x488345c801	               add qword [rbp - 0x38], 1	     10179	tc-i386.c	FUNCTION_120	WHILE_1
0x4011865	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4011869	        0x488d5001	                      lea rdx, [rax + 1]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x401186d	        0x488955d0	             mov qword [rbp - 0x30], rdx	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4011871	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4011875	           0xfb612	                   movzx edx, byte [rdx]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4011878	           0xfb6d2	                           movzx edx, dl	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x401187b	          0x4863d2	                         movsxd rdx, edx	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x401187e	     0xfb692000000	                   movzx edx, byte [rdx]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4011885	            0x8810	                      mov byte [rax], dl	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4011887	           0xfb600	                   movzx eax, byte [rax]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x401188a	            0x84c0	                             test al, al	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x401188c	            0x75ba	                           jne 0x4011848	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x401188e	    0x8b0500000000	            mov eax, dword [0x04011894] 	     10185	tc-i386.c	FUNCTION_120	IF_4
0x4011894	            0x85c0	                           test eax, eax	     10185	tc-i386.c	FUNCTION_120	IF_4
0x4011896	            0x7421	                            je 0x40118b9	     10185	tc-i386.c	FUNCTION_120	IF_4
0x4011898	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10185	tc-i386.c	FUNCTION_120	IF_4
0x401189c	           0xfb600	                   movzx eax, byte [rax]	     10185	tc-i386.c	FUNCTION_120	IF_4
0x401189f	           0xfb6c0	                           movzx eax, al	     10185	tc-i386.c	FUNCTION_120	IF_4
0x40118a2	            0x4898	                                    cdqe	     10185	tc-i386.c	FUNCTION_120	IF_4
0x40118a4	     0xfb680000000	                   movzx eax, byte [rax]	     10185	tc-i386.c	FUNCTION_120	IF_4
0x40118ab	            0x84c0	                             test al, al	     10185	tc-i386.c	FUNCTION_120	IF_4
0x40118ad	            0x740a	                            je 0x40118b9	     10185	tc-i386.c	FUNCTION_120	IF_4
0x40118af	      0xb800000000	                              mov eax, 0	     10186	tc-i386.c	FUNCTION_120	IF_4
0x40118b4	      0xe9af030000	                           jmp 0x4011c68	     10186	tc-i386.c	FUNCTION_120	IF_4
0x40118b9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	     10188	tc-i386.c	FUNCTION_120
0x40118bd	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	     10188	tc-i386.c	FUNCTION_120
0x40118c1	          0x488910	                    mov qword [rax], rdx	     10188	tc-i386.c	FUNCTION_120
0x40118c4	    0x488b05000000	            mov rax, qword [0x040118cb] 	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x40118cb	        0x488d55e0	                   lea rdx, [rbp - 0x20]	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x40118cf	          0x4889d6	                            mov rsi, rdx	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x40118d2	          0x4889c7	                            mov rdi, rax	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x40118d5	      0xe800000000	                          call 0x40118da	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x40118da	        0x488945d8	             mov qword [rbp - 0x28], rax	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x40118de	    0x48817dd80000	               cmp qword [rbp - 0x28], 0	     10193	tc-i386.c	FUNCTION_120	IF_5
0x40118e6	     0xf8524010000	                           jne 0x4011a10	     10193	tc-i386.c	FUNCTION_120	IF_5
0x40118ec	     0xfb605000000	           movzx eax, byte [0x040118f3] 	     10195	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x40118f3	          0x83e002	                              and eax, 2	     10195	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x40118f6	            0x84c0	                             test al, al	     10195	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x40118f8	            0x7526	                           jne 0x4011920	     10195	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x40118fa	     0xfb605000000	           movzx eax, byte [0x04011901] 	     10196	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4011901	          0x83e004	                              and eax, 4	     10196	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4011904	            0x84c0	                             test al, al	     10196	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4011906	            0x7518	                           jne 0x4011920	     10196	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4011908	     0xfb605000000	           movzx eax, byte [0x0401190f] 	     10197	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x401190f	          0x83e008	                              and eax, 8	     10197	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4011912	            0x84c0	                             test al, al	     10197	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4011914	            0x750a	                           jne 0x4011920	     10197	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4011916	      0xb800000000	                              mov eax, 0	     10198	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x401191b	      0xe948030000	                           jmp 0x4011c68	     10198	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4011920	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10200	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x4011924	           0xfb600	                   movzx eax, byte [rax]	     10200	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x4011927	            0x3c20	                            cmp al, 0x20	     10200	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x4011929	            0x7505	                           jne 0x4011930	     10200	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x401192b	      0x488345c801	               add qword [rbp - 0x38], 1	     10201	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x4011930	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10202	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x4011934	           0xfb600	                   movzx eax, byte [rax]	     10202	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x4011937	            0x3c28	                            cmp al, 0x28	     10202	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x4011939	     0xf85d1000000	                           jne 0x4011a10	     10202	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x401193f	      0x488345c801	               add qword [rbp - 0x38], 1	     10204	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x4011944	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10205	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x4011948	           0xfb600	                   movzx eax, byte [rax]	     10205	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x401194b	            0x3c20	                            cmp al, 0x20	     10205	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x401194d	            0x7505	                           jne 0x4011954	     10205	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x401194f	      0x488345c801	               add qword [rbp - 0x38], 1	     10206	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x4011954	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4011958	           0xfb600	                   movzx eax, byte [rax]	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x401195b	            0x3c2f	                            cmp al, 0x2f	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x401195d	     0xf8ea3000000	                           jle 0x4011a06	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4011963	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4011967	           0xfb600	                   movzx eax, byte [rax]	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x401196a	            0x3c37	                            cmp al, 0x37	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x401196c	     0xf8f94000000	                            jg 0x4011a06	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4011972	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10209	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4011976	           0xfb600	                   movzx eax, byte [rax]	     10209	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4011979	           0xfbec0	                           movsx eax, al	     10209	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x401197c	          0x83e830	                           sub eax, 0x30	     10209	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x401197f	          0x8945c4	             mov dword [rbp - 0x3c], eax	     10209	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4011982	      0x488345c801	               add qword [rbp - 0x38], 1	     10210	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4011987	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10211	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_11
0x401198b	           0xfb600	                   movzx eax, byte [rax]	     10211	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_11
0x401198e	            0x3c20	                            cmp al, 0x20	     10211	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_11
0x4011990	            0x7505	                           jne 0x4011997	     10211	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_11
0x4011992	      0x488345c801	               add qword [rbp - 0x38], 1	     10212	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_11
0x4011997	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10213	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x401199b	           0xfb600	                   movzx eax, byte [rax]	     10213	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x401199e	            0x3c29	                            cmp al, 0x29	     10213	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119a0	            0x7564	                           jne 0x4011a06	     10213	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10215	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119a6	        0x488d5001	                      lea rdx, [rax + 1]	     10215	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119aa	        0x488b45b0	             mov rax, qword [rbp - 0x50]	     10215	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119ae	          0x488910	                    mov qword [rax], rdx	     10215	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119b1	    0x488b05000000	            mov rax, qword [0x040119b8] 	     10216	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_2
0x40119b8	      0xbe00000000	                              mov esi, 0	     10216	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_2
0x40119bd	          0x4889c7	                            mov rdi, rax	     10216	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_2
0x40119c0	      0xe800000000	                          call 0x40119c5	     10216	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_2
0x40119c5	        0x488945d8	             mov qword [rbp - 0x28], rax	     10216	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_2
0x40119c9	      0x48837dd800	               cmp qword [rbp - 0x28], 0	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x40119ce	            0x7514	                           jne 0x40119e4	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x40119d0	      0xba00000000	                              mov edx, 0	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x40119d5	      0xbee9270000	                         mov esi, 0x27e9	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x40119da	      0xbf00000000	                              mov edi, 0	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x40119df	      0xe800000000	                          call 0x40119e4	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x40119e4	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119e7	          0x4863d0	                         movsxd rdx, eax	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119ea	          0x4889d0	                            mov rax, rdx	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119ed	          0x4801c0	                            add rax, rax	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119f0	          0x4801d0	                            add rax, rdx	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119f3	        0x48c1e003	                              shl rax, 3	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119f7	          0x4889c2	                            mov rdx, rax	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x40119fe	          0x4801d0	                            add rax, rdx	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4011a01	      0xe962020000	                           jmp 0x4011c68	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4011a06	      0xb800000000	                              mov eax, 0	     10222	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x4011a0b	      0xe958020000	                           jmp 0x4011c68	     10222	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x4011a10	      0x48837dd800	               cmp qword [rbp - 0x28], 0	     10226	tc-i386.c	FUNCTION_120	IF_13
0x4011a15	            0x740a	                            je 0x4011a21	     10226	tc-i386.c	FUNCTION_120	IF_13
0x4011a17	    0x8b0500000000	            mov eax, dword [0x04011a1d] 	     10226	tc-i386.c	FUNCTION_120	IF_13
0x4011a1d	            0x85c0	                           test eax, eax	     10226	tc-i386.c	FUNCTION_120	IF_13
0x4011a1f	            0x7409	                            je 0x4011a2a	     10226	tc-i386.c	FUNCTION_120	IF_13
0x4011a21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10227	tc-i386.c	FUNCTION_120	IF_13
0x4011a25	      0xe93e020000	                           jmp 0x4011c68	     10227	tc-i386.c	FUNCTION_120	IF_13
0x4011a2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10229	tc-i386.c	FUNCTION_120	IF_14	CALL_4
0x4011a2e	        0x4883c008	                              add rax, 8	     10229	tc-i386.c	FUNCTION_120	IF_14	CALL_4
0x4011a32	          0x4889c7	                            mov rdi, rax	     10229	tc-i386.c	FUNCTION_120	IF_14	CALL_4
0x4011a35	      0xe89deafeff	          call sym.operand_type_all_zero	     10229	tc-i386.c	FUNCTION_120	IF_14	CALL_4
0x4011a3a	            0x85c0	                           test eax, eax	     10229	tc-i386.c	FUNCTION_120	IF_14	CALL_4
0x4011a3c	            0x740a	                            je 0x4011a48	     10229	tc-i386.c	FUNCTION_120	IF_14	CALL_4
0x4011a3e	      0xb800000000	                              mov eax, 0	     10230	tc-i386.c	FUNCTION_120	IF_14
0x4011a43	      0xe920020000	                           jmp 0x4011c68	     10230	tc-i386.c	FUNCTION_120	IF_14
0x4011a48	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10232	tc-i386.c	FUNCTION_120	IF_15
0x4011a4c	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	     10232	tc-i386.c	FUNCTION_120	IF_15
0x4011a50	          0x83e080	                     and eax, 0xffffff80	     10232	tc-i386.c	FUNCTION_120	IF_15
0x4011a53	            0x84c0	                             test al, al	     10232	tc-i386.c	FUNCTION_120	IF_15
0x4011a55	            0x753c	                           jne 0x4011a93	     10232	tc-i386.c	FUNCTION_120	IF_15
0x4011a57	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10233	tc-i386.c	FUNCTION_120	IF_15
0x4011a5b	         0xfb64009	               movzx eax, byte [rax + 9]	     10233	tc-i386.c	FUNCTION_120	IF_15
0x4011a5f	          0x83e001	                              and eax, 1	     10233	tc-i386.c	FUNCTION_120	IF_15
0x4011a62	            0x84c0	                             test al, al	     10233	tc-i386.c	FUNCTION_120	IF_15
0x4011a64	            0x752d	                           jne 0x4011a93	     10233	tc-i386.c	FUNCTION_120	IF_15
0x4011a66	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10234	tc-i386.c	FUNCTION_120	IF_15
0x4011a6a	         0xfb64008	               movzx eax, byte [rax + 8]	     10234	tc-i386.c	FUNCTION_120	IF_15
0x4011a6e	          0x83e010	                           and eax, 0x10	     10234	tc-i386.c	FUNCTION_120	IF_15
0x4011a71	            0x84c0	                             test al, al	     10234	tc-i386.c	FUNCTION_120	IF_15
0x4011a73	            0x751e	                           jne 0x4011a93	     10234	tc-i386.c	FUNCTION_120	IF_15
0x4011a75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10235	tc-i386.c	FUNCTION_120	IF_15
0x4011a79	         0xfb64008	               movzx eax, byte [rax + 8]	     10235	tc-i386.c	FUNCTION_120	IF_15
0x4011a7d	          0x83e020	                           and eax, 0x20	     10235	tc-i386.c	FUNCTION_120	IF_15
0x4011a80	            0x84c0	                             test al, al	     10235	tc-i386.c	FUNCTION_120	IF_15
0x4011a82	            0x750f	                           jne 0x4011a93	     10235	tc-i386.c	FUNCTION_120	IF_15
0x4011a84	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10236	tc-i386.c	FUNCTION_120	IF_15
0x4011a88	         0xfb64008	               movzx eax, byte [rax + 8]	     10236	tc-i386.c	FUNCTION_120	IF_15
0x4011a8c	          0x83e040	                           and eax, 0x40	     10236	tc-i386.c	FUNCTION_120	IF_15
0x4011a8f	            0x84c0	                             test al, al	     10236	tc-i386.c	FUNCTION_120	IF_15
0x4011a91	            0x7418	                            je 0x4011aab	     10236	tc-i386.c	FUNCTION_120	IF_15
0x4011a93	     0xfb605000000	           movzx eax, byte [0x04011a9a] 	     10237	tc-i386.c	FUNCTION_120	IF_15
0x4011a9a	          0x83e004	                              and eax, 4	     10237	tc-i386.c	FUNCTION_120	IF_15
0x4011a9d	            0x84c0	                             test al, al	     10237	tc-i386.c	FUNCTION_120	IF_15
0x4011a9f	            0x750a	                           jne 0x4011aab	     10237	tc-i386.c	FUNCTION_120	IF_15
0x4011aa1	      0xb800000000	                              mov eax, 0	     10238	tc-i386.c	FUNCTION_120	IF_15
0x4011aa6	      0xe9bd010000	                           jmp 0x4011c68	     10238	tc-i386.c	FUNCTION_120	IF_15
0x4011aab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4011aaf	         0xfb64008	               movzx eax, byte [rax + 8]	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4011ab3	          0x83e002	                              and eax, 2	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4011ab6	            0x84c0	                             test al, al	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4011ab8	            0x7418	                            je 0x4011ad2	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4011aba	     0xfb605000000	           movzx eax, byte [0x04011ac1] 	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4011ac1	          0x83e040	                           and eax, 0x40	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4011ac4	            0x84c0	                             test al, al	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4011ac6	            0x750a	                           jne 0x4011ad2	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4011ac8	      0xb800000000	                              mov eax, 0	     10241	tc-i386.c	FUNCTION_120	IF_16
0x4011acd	      0xe996010000	                           jmp 0x4011c68	     10241	tc-i386.c	FUNCTION_120	IF_16
0x4011ad2	     0xfb605000000	           movzx eax, byte [0x04011ad9] 	     10243	tc-i386.c	FUNCTION_120	IF_17
0x4011ad9	          0x83e080	                     and eax, 0xffffff80	     10243	tc-i386.c	FUNCTION_120	IF_17
0x4011adc	            0x84c0	                             test al, al	     10243	tc-i386.c	FUNCTION_120	IF_17
0x4011ade	            0x7576	                           jne 0x4011b56	     10243	tc-i386.c	FUNCTION_120	IF_17
0x4011ae0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011ae4	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011ae8	          0x83e020	                           and eax, 0x20	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011aeb	            0x84c0	                             test al, al	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011aed	            0x750f	                           jne 0x4011afe	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011aef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011af3	         0xfb64008	               movzx eax, byte [rax + 8]	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011af7	          0x83e008	                              and eax, 8	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011afa	            0x84c0	                             test al, al	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011afc	            0x740a	                            je 0x4011b08	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011afe	      0xb800000000	                              mov eax, 0	     10246	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011b03	      0xe960010000	                           jmp 0x4011c68	     10246	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4011b08	     0xfb605000000	           movzx eax, byte [0x04011b0f] 	     10248	tc-i386.c	FUNCTION_120	IF_17	IF_19
0x4011b0f	          0x83e020	                           and eax, 0x20	     10248	tc-i386.c	FUNCTION_120	IF_17	IF_19
0x4011b12	            0x84c0	                             test al, al	     10248	tc-i386.c	FUNCTION_120	IF_17	IF_19
0x4011b14	            0x7540	                           jne 0x4011b56	     10248	tc-i386.c	FUNCTION_120	IF_17	IF_19
0x4011b16	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10250	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4011b1a	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	     10250	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4011b1e	          0x83e010	                           and eax, 0x10	     10250	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4011b21	            0x84c0	                             test al, al	     10250	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4011b23	            0x740a	                            je 0x4011b2f	     10250	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4011b25	      0xb800000000	                              mov eax, 0	     10251	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4011b2a	      0xe939010000	                           jmp 0x4011c68	     10251	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4011b2f	     0xfb605000000	           movzx eax, byte [0x04011b36] 	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4011b36	          0x83e080	                     and eax, 0xffffff80	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4011b39	            0x84c0	                             test al, al	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4011b3b	            0x7519	                           jne 0x4011b56	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4011b3d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4011b41	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4011b45	          0x83e008	                              and eax, 8	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4011b48	            0x84c0	                             test al, al	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4011b4a	            0x740a	                            je 0x4011b56	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4011b4c	      0xb800000000	                              mov eax, 0	     10254	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4011b51	      0xe912010000	                           jmp 0x4011c68	     10254	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4011b56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4011b5a	         0xfb6400d	            movzx eax, byte [rax + 0xd] 	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4011b5e	          0x83e002	                              and eax, 2	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4011b61	            0x84c0	                             test al, al	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4011b63	            0x7418	                            je 0x4011b7d	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4011b65	     0xfb605000000	           movzx eax, byte [0x04011b6c] 	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4011b6c	          0x83e001	                              and eax, 1	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4011b6f	            0x84c0	                             test al, al	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4011b71	            0x750a	                           jne 0x4011b7d	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4011b73	      0xb800000000	                              mov eax, 0	     10259	tc-i386.c	FUNCTION_120	IF_22
0x4011b78	      0xe9eb000000	                           jmp 0x4011c68	     10259	tc-i386.c	FUNCTION_120	IF_22
0x4011b7d	    0x8b0500000000	            mov eax, dword [0x04011b83] 	     10262	tc-i386.c	FUNCTION_120	IF_23
0x4011b83	            0x85c0	                           test eax, eax	     10262	tc-i386.c	FUNCTION_120	IF_23
0x4011b85	            0x7522	                           jne 0x4011ba9	     10262	tc-i386.c	FUNCTION_120	IF_23
0x4011b87	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4011b8b	         0xfb64011	           movzx eax, byte [rax + 0x11] 	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4011b8f	            0x3cfd	                            cmp al, 0xfd	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4011b91	            0x740c	                            je 0x4011b9f	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4011b93	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4011b97	         0xfb64011	           movzx eax, byte [rax + 0x11] 	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4011b9b	            0x3cfc	                            cmp al, 0xfc	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4011b9d	            0x750a	                           jne 0x4011ba9	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4011b9f	      0xb800000000	                              mov eax, 0	     10264	tc-i386.c	FUNCTION_120	IF_23
0x4011ba4	      0xe9bf000000	                           jmp 0x4011c68	     10264	tc-i386.c	FUNCTION_120	IF_23
0x4011ba9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10268	tc-i386.c	FUNCTION_120	IF_24
0x4011bad	         0xfb64010	           movzx eax, byte [rax + 0x10] 	     10268	tc-i386.c	FUNCTION_120	IF_24
0x4011bb1	           0xfb6c0	                           movzx eax, al	     10268	tc-i386.c	FUNCTION_120	IF_24
0x4011bb4	          0x83e004	                              and eax, 4	     10268	tc-i386.c	FUNCTION_120	IF_24
0x4011bb7	            0x85c0	                           test eax, eax	     10268	tc-i386.c	FUNCTION_120	IF_24
0x4011bb9	            0x742d	                            je 0x4011be8	     10268	tc-i386.c	FUNCTION_120	IF_24
0x4011bbb	     0xfb605000000	           movzx eax, byte [0x04011bc2] 	     10270	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4011bc2	          0x83e080	                     and eax, 0xffffff80	     10270	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4011bc5	            0x84c0	                             test al, al	     10270	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4011bc7	            0x740b	                            je 0x4011bd4	     10270	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4011bc9	    0x8b0500000000	            mov eax, dword [0x04011bcf] 	     10271	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4011bcf	          0x83f802	                              cmp eax, 2	     10271	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4011bd2	            0x740a	                            je 0x4011bde	     10271	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4011bd4	      0xb800000000	                              mov eax, 0	     10272	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4011bd9	      0xe98a000000	                           jmp 0x4011c68	     10272	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4011bde	    0xc70500000000	               mov dword [0x04011be8], 3	     10274	tc-i386.c	FUNCTION_120	IF_24
0x4011be8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4011bec	         0xfb64010	           movzx eax, byte [rax + 0x10] 	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4011bf0	           0xfb6c0	                           movzx eax, al	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4011bf3	          0x83e003	                              and eax, 3	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4011bf6	            0x85c0	                           test eax, eax	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4011bf8	            0x750f	                           jne 0x4011c09	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4011bfa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4011bfe	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4011c02	          0x83e002	                              and eax, 2	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4011c05	            0x84c0	                             test al, al	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4011c07	            0x742f	                            je 0x4011c38	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4011c09	     0xfb605000000	           movzx eax, byte [0x04011c10] 	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4011c10	          0x83e002	                              and eax, 2	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4011c13	            0x84c0	                             test al, al	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4011c15	            0x740f	                            je 0x4011c26	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4011c17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4011c1b	         0xfb64008	               movzx eax, byte [rax + 8]	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4011c1f	          0x83e010	                           and eax, 0x10	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4011c22	            0x84c0	                             test al, al	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4011c24	            0x7512	                           jne 0x4011c38	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4011c26	    0x8b0500000000	            mov eax, dword [0x04011c2c] 	     10279	tc-i386.c	FUNCTION_120	IF_26
0x4011c2c	          0x83f802	                              cmp eax, 2	     10279	tc-i386.c	FUNCTION_120	IF_26
0x4011c2f	            0x7407	                            je 0x4011c38	     10279	tc-i386.c	FUNCTION_120	IF_26
0x4011c31	      0xb800000000	                              mov eax, 0	     10280	tc-i386.c	FUNCTION_120	IF_26
0x4011c36	            0xeb30	                           jmp 0x4011c68	     10280	tc-i386.c	FUNCTION_120	IF_26
0x4011c38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c3c	         0xfb64009	               movzx eax, byte [rax + 9]	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c40	          0x83e001	                              and eax, 1	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c43	            0x84c0	                             test al, al	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c45	            0x741d	                            je 0x4011c64	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c47	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c4b	         0xfb64011	           movzx eax, byte [rax + 0x11] 	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c4f	            0x3cff	                            cmp al, 0xff	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c51	            0x7511	                           jne 0x4011c64	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c53	    0x8b0500000000	            mov eax, dword [0x04011c59] 	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c59	            0x85c0	                           test eax, eax	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c5b	            0x7507	                           jne 0x4011c64	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4011c5d	      0xb800000000	                              mov eax, 0	     10283	tc-i386.c	FUNCTION_120	IF_27
0x4011c62	            0xeb04	                           jmp 0x4011c68	     10283	tc-i386.c	FUNCTION_120	IF_27
0x4011c64	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10285	tc-i386.c	FUNCTION_120
0x4011c68	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10286	tc-i386.c	FUNCTION_120
0x4011c6c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10286	tc-i386.c	FUNCTION_120
0x4011c75	            0x7405	                            je 0x4011c7c	     10286	tc-i386.c	FUNCTION_120
0x4011c77	      0xe800000000	                          call 0x4011c7c	     10286	tc-i386.c	FUNCTION_120
0x4011c7c	              0xc9	                                   leave	     10286	tc-i386.c	FUNCTION_120
0x4011c7d	              0xc3	                                     ret	     10286	tc-i386.c	FUNCTION_120
i386_output_nops	CALL,3:FOR,1:WHILE,0:functions,0:SWITCH,0:IF,3:ELSE,1:DO,0	104
0x4000040	              0x55	                                push rbp	      1248	tc-i386.c	FUNCTION_3
0x4000041	          0x4889e5	                            mov rbp, rsp	      1248	tc-i386.c	FUNCTION_3
0x4000044	        0x4883ec30	                           sub rsp, 0x30	      1248	tc-i386.c	FUNCTION_3
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1248	tc-i386.c	FUNCTION_3
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1248	tc-i386.c	FUNCTION_3
0x4000050	          0x8955dc	             mov dword [rbp - 0x24], edx	      1248	tc-i386.c	FUNCTION_3
0x4000053	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1248	tc-i386.c	FUNCTION_3
0x4000056	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1252	tc-i386.c	FUNCTION_3
0x4000059	            0x4898	                                    cdqe	      1252	tc-i386.c	FUNCTION_3
0x400005b	        0x48c1e003	                              shl rax, 3	      1252	tc-i386.c	FUNCTION_3
0x400005f	        0x488d50f8	                      lea rdx, [rax - 8]	      1252	tc-i386.c	FUNCTION_3
0x4000063	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1252	tc-i386.c	FUNCTION_3
0x4000067	          0x4801d0	                            add rax, rdx	      1252	tc-i386.c	FUNCTION_3
0x400006a	          0x488b00	                    mov rax, qword [rax]	      1252	tc-i386.c	FUNCTION_3
0x400006d	        0x488945f8	                mov qword [rbp - 8], rax	      1252	tc-i386.c	FUNCTION_3
0x4000071	      0x48837df800	                  cmp qword [rbp - 8], 0	      1255	tc-i386.c	FUNCTION_3	IF_1
0x4000076	            0x751f	                           jne 0x4000097	      1255	tc-i386.c	FUNCTION_3	IF_1
0x4000078	        0x836dd801	               sub dword [rbp - 0x28], 1	      1257	tc-i386.c	FUNCTION_3	IF_1
0x400007c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1258	tc-i386.c	FUNCTION_3	IF_1
0x400007f	            0x4898	                                    cdqe	      1258	tc-i386.c	FUNCTION_3	IF_1
0x4000081	        0x48c1e003	                              shl rax, 3	      1258	tc-i386.c	FUNCTION_3	IF_1
0x4000085	        0x488d50f8	                      lea rdx, [rax - 8]	      1258	tc-i386.c	FUNCTION_3	IF_1
0x4000089	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1258	tc-i386.c	FUNCTION_3	IF_1
0x400008d	          0x4801d0	                            add rax, rdx	      1258	tc-i386.c	FUNCTION_3	IF_1
0x4000090	          0x488b00	                    mov rax, qword [rax]	      1258	tc-i386.c	FUNCTION_3	IF_1
0x4000093	        0x488945f8	                mov qword [rbp - 8], rax	      1258	tc-i386.c	FUNCTION_3	IF_1
0x4000097	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1261	tc-i386.c	FUNCTION_3
0x400009a	              0x99	                                     cdq	      1261	tc-i386.c	FUNCTION_3
0x400009b	          0xf77dd8	                 idiv dword [rbp - 0x28]	      1261	tc-i386.c	FUNCTION_3
0x400009e	          0x8955f4	              mov dword [rbp - 0xc], edx	      1261	tc-i386.c	FUNCTION_3
0x40000a1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1263	tc-i386.c	FUNCTION_3
0x40000a4	          0x2945dc	             sub dword [rbp - 0x24], eax	      1263	tc-i386.c	FUNCTION_3
0x40000a7	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x40000ae	            0xeb28	                           jmp 0x40000d8	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x40000b0	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1265	tc-i386.c	FUNCTION_3	CALL_1
0x40000b3	          0x4863d0	                         movsxd rdx, eax	      1265	tc-i386.c	FUNCTION_3	CALL_1
0x40000b6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1265	tc-i386.c	FUNCTION_3	CALL_1
0x40000b9	          0x4863c8	                         movsxd rcx, eax	      1265	tc-i386.c	FUNCTION_3	CALL_1
0x40000bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1265	tc-i386.c	FUNCTION_3	CALL_1
0x40000c0	          0x4801c1	                            add rcx, rax	      1265	tc-i386.c	FUNCTION_3	CALL_1
0x40000c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1265	tc-i386.c	FUNCTION_3	CALL_1
0x40000c7	          0x4889c6	                            mov rsi, rax	      1265	tc-i386.c	FUNCTION_3	CALL_1
0x40000ca	          0x4889cf	                            mov rdi, rcx	      1265	tc-i386.c	FUNCTION_3	CALL_1
0x40000cd	      0xe800000000	                          call 0x40000d2	      1265	tc-i386.c	FUNCTION_3	CALL_1
0x40000d2	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x40000d5	           0x145f0	             add dword [rbp - 0x10], eax	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x40000d8	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x40000db	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x40000de	            0x7cd0	                            jl 0x40000b0	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x40000e0	        0x837df400	                cmp dword [rbp - 0xc], 0	      1267	tc-i386.c	FUNCTION_3	IF_2
0x40000e4	     0xf84a5000000	                            je 0x400018f	      1267	tc-i386.c	FUNCTION_3	IF_2
0x40000ea	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1269	tc-i386.c	FUNCTION_3	IF_2
0x40000ed	            0x4898	                                    cdqe	      1269	tc-i386.c	FUNCTION_3	IF_2
0x40000ef	        0x48c1e003	                              shl rax, 3	      1269	tc-i386.c	FUNCTION_3	IF_2
0x40000f3	        0x488d50f8	                      lea rdx, [rax - 8]	      1269	tc-i386.c	FUNCTION_3	IF_2
0x40000f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1269	tc-i386.c	FUNCTION_3	IF_2
0x40000fb	          0x4801d0	                            add rax, rdx	      1269	tc-i386.c	FUNCTION_3	IF_2
0x40000fe	          0x488b00	                    mov rax, qword [rax]	      1269	tc-i386.c	FUNCTION_3	IF_2
0x4000101	        0x488945f8	                mov qword [rbp - 8], rax	      1269	tc-i386.c	FUNCTION_3	IF_2
0x4000105	      0x48837df800	                  cmp qword [rbp - 8], 0	      1270	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400010a	            0x7561	                           jne 0x400016d	      1270	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400010c	        0x836df401	                sub dword [rbp - 0xc], 1	      1274	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000110	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1275	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000113	            0x4898	                                    cdqe	      1275	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000115	        0x48c1e003	                              shl rax, 3	      1275	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000119	        0x488d50f8	                      lea rdx, [rax - 8]	      1275	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400011d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1275	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000121	          0x4801d0	                            add rax, rdx	      1275	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000124	          0x488b00	                    mov rax, qword [rax]	      1275	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000127	        0x488945f8	                mov qword [rbp - 8], rax	      1275	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400012b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1276	tc-i386.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x400012e	          0x4863d0	                         movsxd rdx, eax	      1276	tc-i386.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x4000131	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1276	tc-i386.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x4000134	          0x4863c8	                         movsxd rcx, eax	      1276	tc-i386.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x4000137	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1276	tc-i386.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x400013b	          0x4801c1	                            add rcx, rax	      1276	tc-i386.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x400013e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1276	tc-i386.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x4000142	          0x4889c6	                            mov rsi, rax	      1276	tc-i386.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x4000145	          0x4889cf	                            mov rdi, rcx	      1276	tc-i386.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x4000148	      0xe800000000	                          call 0x400014d	      1276	tc-i386.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x400014d	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000150	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000153	             0x1d0	                            add eax, edx	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000155	          0x4863d0	                         movsxd rdx, eax	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000158	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400015c	          0x4801c2	                            add rdx, rax	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400015f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000163	          0x488b00	                    mov rax, qword [rax]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000166	           0xfb600	                   movzx eax, byte [rax]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x4000169	            0x8802	                      mov byte [rdx], al	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400016b	            0xeb22	                           jmp 0x400018f	      1282	tc-i386.c	FUNCTION_3
0x400016d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1280	tc-i386.c	FUNCTION_3	IF_2	CALL_3
0x4000170	          0x4863d0	                         movsxd rdx, eax	      1280	tc-i386.c	FUNCTION_3	IF_2	CALL_3
0x4000173	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1280	tc-i386.c	FUNCTION_3	IF_2	CALL_3
0x4000176	          0x4863c8	                         movsxd rcx, eax	      1280	tc-i386.c	FUNCTION_3	IF_2	CALL_3
0x4000179	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1280	tc-i386.c	FUNCTION_3	IF_2	CALL_3
0x400017d	          0x4801c1	                            add rcx, rax	      1280	tc-i386.c	FUNCTION_3	IF_2	CALL_3
0x4000180	        0x488b45f8	                mov rax, qword [rbp - 8]	      1280	tc-i386.c	FUNCTION_3	IF_2	CALL_3
0x4000184	          0x4889c6	                            mov rsi, rax	      1280	tc-i386.c	FUNCTION_3	IF_2	CALL_3
0x4000187	          0x4889cf	                            mov rdi, rcx	      1280	tc-i386.c	FUNCTION_3	IF_2	CALL_3
0x400018a	      0xe800000000	                          call 0x400018f	      1280	tc-i386.c	FUNCTION_3	IF_2	CALL_3
0x400018f	              0x90	                                     nop	      1282	tc-i386.c	FUNCTION_3
0x4000190	              0xc9	                                   leave	      1282	tc-i386.c	FUNCTION_3
0x4000191	              0xc3	                                     ret	      1282	tc-i386.c	FUNCTION_3
cpu_flags_and_not	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,0:ELSE,0:DO,0	44
0x400076a	              0x55	                                push rbp	      1671	tc-i386.c	FUNCTION_15
0x400076b	          0x4889e5	                            mov rbp, rsp	      1671	tc-i386.c	FUNCTION_15
0x400076e	        0x4883ec30	                           sub rsp, 0x30	      1671	tc-i386.c	FUNCTION_15
0x4000772	          0x4889f8	                            mov rax, rdi	      1671	tc-i386.c	FUNCTION_15
0x4000775	          0x4989f0	                             mov r8, rsi	      1671	tc-i386.c	FUNCTION_15
0x4000778	          0x4889c6	                            mov rsi, rax	      1671	tc-i386.c	FUNCTION_15
0x400077b	          0x4889d7	                            mov rdi, rdx	      1671	tc-i386.c	FUNCTION_15
0x400077e	          0x4c89c7	                             mov rdi, r8	      1671	tc-i386.c	FUNCTION_15
0x4000781	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1671	tc-i386.c	FUNCTION_15
0x4000785	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1671	tc-i386.c	FUNCTION_15
0x4000789	        0x488955d0	             mov qword [rbp - 0x30], rdx	      1671	tc-i386.c	FUNCTION_15
0x400078d	        0x48894dd8	             mov qword [rbp - 0x28], rcx	      1671	tc-i386.c	FUNCTION_15
0x4000791	    0x64488b042528	                mov rax, qword fs:[0x28]	      1671	tc-i386.c	FUNCTION_15
0x400079a	        0x488945f8	                mov qword [rbp - 8], rax	      1671	tc-i386.c	FUNCTION_15
0x400079e	            0x31c0	                            xor eax, eax	      1671	tc-i386.c	FUNCTION_15
0x40007a0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1675	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007a3	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1675	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007a6	            0xf7d2	                                 not edx	      1675	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007a8	            0x21d0	                            and eax, edx	      1675	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007aa	          0x8945ec	             mov dword [rbp - 0x14], eax	      1675	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007ad	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1678	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007b0	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1678	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007b3	            0xf7d2	                                 not edx	      1678	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007b5	            0x21d0	                            and eax, edx	      1678	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007b7	          0x8945e8	             mov dword [rbp - 0x18], eax	      1678	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007ba	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1681	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007bd	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1681	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007c0	            0xf7d2	                                 not edx	      1681	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007c2	            0x21d0	                            and eax, edx	      1681	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007c4	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1681	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007c7	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1684	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007ca	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1684	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007cd	            0xf7d2	                                 not edx	      1684	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007cf	            0x21d0	                            and eax, edx	      1684	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007d1	          0x8945e0	             mov dword [rbp - 0x20], eax	      1684	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007d4	              0x90	                                     nop	      1685	tc-i386.c	FUNCTION_15	SWITCH_1
0x40007d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1689	tc-i386.c	FUNCTION_15
0x40007d9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1689	tc-i386.c	FUNCTION_15
0x40007dd	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1690	tc-i386.c	FUNCTION_15
0x40007e1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1690	tc-i386.c	FUNCTION_15
0x40007ea	            0x7405	                            je 0x40007f1	      1690	tc-i386.c	FUNCTION_15
0x40007ec	      0xe800000000	                          call 0x40007f1	      1690	tc-i386.c	FUNCTION_15
0x40007f1	              0xc9	                                   leave	      1690	tc-i386.c	FUNCTION_15
0x40007f2	              0xc3	                                     ret	      1690	tc-i386.c	FUNCTION_15
operand_type_and_not	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,0:ELSE,0:DO,0	26
0x4000a38	              0x55	                                push rbp	      1775	tc-i386.c	FUNCTION_18
0x4000a39	          0x4889e5	                            mov rbp, rsp	      1775	tc-i386.c	FUNCTION_18
0x4000a3c	        0x4883ec30	                           sub rsp, 0x30	      1775	tc-i386.c	FUNCTION_18
0x4000a40	        0x48897de0	             mov qword [rbp - 0x20], rdi	      1775	tc-i386.c	FUNCTION_18
0x4000a44	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1775	tc-i386.c	FUNCTION_18
0x4000a48	    0x64488b042528	                mov rax, qword fs:[0x28]	      1775	tc-i386.c	FUNCTION_18
0x4000a51	        0x488945f8	                mov qword [rbp - 8], rax	      1775	tc-i386.c	FUNCTION_18
0x4000a55	            0x31c0	                            xor eax, eax	      1775	tc-i386.c	FUNCTION_18
0x4000a57	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1782	tc-i386.c	FUNCTION_18	SWITCH_1
0x4000a5a	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1782	tc-i386.c	FUNCTION_18	SWITCH_1
0x4000a5d	            0xf7d2	                                 not edx	      1782	tc-i386.c	FUNCTION_18	SWITCH_1
0x4000a5f	            0x21d0	                            and eax, edx	      1782	tc-i386.c	FUNCTION_18	SWITCH_1
0x4000a61	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1782	tc-i386.c	FUNCTION_18	SWITCH_1
0x4000a64	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x4000a67	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x4000a6a	            0xf7d2	                                 not edx	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x4000a6c	            0x21d0	                            and eax, edx	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x4000a6e	          0x8945e0	             mov dword [rbp - 0x20], eax	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x4000a71	              0x90	                                     nop	      1786	tc-i386.c	FUNCTION_18	SWITCH_1
0x4000a72	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1790	tc-i386.c	FUNCTION_18
0x4000a76	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1791	tc-i386.c	FUNCTION_18
0x4000a7a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1791	tc-i386.c	FUNCTION_18
0x4000a83	            0x7405	                            je 0x4000a8a	      1791	tc-i386.c	FUNCTION_18
0x4000a85	      0xe800000000	                          call 0x4000a8a	      1791	tc-i386.c	FUNCTION_18
0x4000a8a	              0xc9	                                   leave	      1791	tc-i386.c	FUNCTION_18
0x4000a8b	              0xc3	                                     ret	      1791	tc-i386.c	FUNCTION_18
x86_cons	CALL,6:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,5:ELSE,1:DO,0	117
0x400e4e7	              0x55	                                push rbp	      8406	tc-i386.c	FUNCTION_99
0x400e4e8	          0x4889e5	                            mov rbp, rsp	      8406	tc-i386.c	FUNCTION_99
0x400e4eb	        0x4883ec40	                           sub rsp, 0x40	      8406	tc-i386.c	FUNCTION_99
0x400e4ef	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      8406	tc-i386.c	FUNCTION_99
0x400e4f3	          0x8975c4	             mov dword [rbp - 0x3c], esi	      8406	tc-i386.c	FUNCTION_99
0x400e4f6	    0x64488b042528	                mov rax, qword fs:[0x28]	      8406	tc-i386.c	FUNCTION_99
0x400e4ff	        0x488945f8	                mov qword [rbp - 8], rax	      8406	tc-i386.c	FUNCTION_99
0x400e503	            0x31c0	                            xor eax, eax	      8406	tc-i386.c	FUNCTION_99
0x400e505	    0xc745e0470000	           mov dword [rbp - 0x20], 0x47 	      8407	tc-i386.c	FUNCTION_99
0x400e50c	    0x8b0500000000	            mov eax, dword [0x0400e512] 	      8409	tc-i386.c	FUNCTION_99
0x400e512	            0xf7d8	                                 neg eax	      8409	tc-i386.c	FUNCTION_99
0x400e514	    0x890500000000	            mov dword [0x0400e51a], eax 	      8409	tc-i386.c	FUNCTION_99
0x400e51a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8411	tc-i386.c	FUNCTION_99
0x400e51e	    0x66c7401a0000	                mov word [rax + 0x1a], 0	      8411	tc-i386.c	FUNCTION_99
0x400e524	        0x837dc404	               cmp dword [rbp - 0x3c], 4	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e528	            0x7418	                            je 0x400e542	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e52a	    0x8b0500000000	            mov eax, dword [0x0400e530] 	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e530	            0x85c0	                           test eax, eax	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e532	     0xf8427010000	                            je 0x400e65f	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e538	        0x837dc408	               cmp dword [rbp - 0x3c], 8	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e53c	     0xf851d010000	                           jne 0x400e65f	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e542	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      8417	tc-i386.c	FUNCTION_99	IF_1
0x400e549	    0x488b05000000	            mov rax, qword [0x0400e550] 	      8419	tc-i386.c	FUNCTION_99	IF_1
0x400e550	        0x488945e8	             mov qword [rbp - 0x18], rax	      8419	tc-i386.c	FUNCTION_99	IF_1
0x400e554	        0x488d4de4	                   lea rcx, [rbp - 0x1c]	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e558	        0x488d45e0	                   lea rax, [rbp - 0x20]	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e55c	      0xba00000000	                              mov edx, 0	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e561	          0x4889ce	                            mov rsi, rcx	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e564	          0x4889c7	                            mov rdi, rax	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e567	      0xe89efcffff	                        call sym.lex_got	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e56c	        0x488945f0	             mov qword [rbp - 0x10], rax	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e570	      0x48837df000	               cmp qword [rbp - 0x10], 0	      8421	tc-i386.c	FUNCTION_99	IF_1	IF_2
0x400e575	            0x740b	                            je 0x400e582	      8421	tc-i386.c	FUNCTION_99	IF_1	IF_2
0x400e577	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8422	tc-i386.c	FUNCTION_99	IF_1	IF_2
0x400e57b	    0x488905000000	            mov qword [0x0400e582], rax 	      8422	tc-i386.c	FUNCTION_99	IF_1	IF_2
0x400e582	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e586	      0xba01000000	                              mov edx, 1	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e58b	          0x4889c6	                            mov rsi, rax	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e58e	      0xbf00000000	                              mov edi, 0	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e593	      0xe800000000	                          call 0x400e598	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e598	      0x48837df000	               cmp qword [rbp - 0x10], 0	      8426	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e59d	     0xf84d4000000	                            je 0x400e677	      8426	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5a3	    0x488b05000000	            mov rax, qword [0x0400e5aa] 	      8432	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5aa	          0x4889c2	                            mov rdx, rax	      8432	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8432	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5b1	          0x4829c2	                            sub rdx, rax	      8432	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5b4	          0x4889d0	                            mov rax, rdx	      8432	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5b7	          0x4889c2	                            mov rdx, rax	      8433	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5ba	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      8433	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5bd	            0x4898	                                    cdqe	      8433	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5bf	          0x4801c2	                            add rdx, rax	      8433	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8433	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5c6	          0x4801d0	                            add rax, rdx	      8433	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5c9	    0x488905000000	            mov qword [0x0400e5d0], rax 	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e5d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8434	tc-i386.c	FUNCTION_99	IF_1	IF_3	CALL_2
0x400e5d4	          0x4889c7	                            mov rdi, rax	      8434	tc-i386.c	FUNCTION_99	IF_1	IF_3	CALL_2
0x400e5d7	      0xe800000000	                          call 0x400e5dc	      8434	tc-i386.c	FUNCTION_99	IF_1	IF_3	CALL_2
0x400e5dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8435	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e5e0	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8435	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e5e4	            0x3c02	                               cmp al, 2	      8435	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e5e6	            0x7430	                            je 0x400e618	      8435	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e5e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8436	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e5ec	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8436	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e5f0	            0x3c01	                               cmp al, 1	      8436	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e5f2	            0x7424	                            je 0x400e618	      8436	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e5f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8437	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e5f8	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8437	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e5fc	            0x84c0	                             test al, al	      8437	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e5fe	            0x7418	                            je 0x400e618	      8437	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e600	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8438	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e604	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8438	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e608	            0x3c05	                               cmp al, 5	      8438	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e60a	            0x740c	                            je 0x400e618	      8438	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e60c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e610	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e614	            0x3c06	                               cmp al, 6	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e616	            0x755f	                           jne 0x400e677	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e618	    0x488b05000000	            mov rax, qword [0x0400e61f] 	      8441	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e61f	           0xfb600	                   movzx eax, byte [rax]	      8441	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e622	          0x8845df	               mov byte [rbp - 0x21], al	      8441	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e625	    0x488b05000000	            mov rax, qword [0x0400e62c] 	      8442	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e62c	          0xc60000	                       mov byte [rax], 0	      8442	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e62f	      0xbf00000000	                              mov edi, 0	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e634	      0xe800000000	                          call 0x400e639	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e639	          0x4889c2	                            mov rdx, rax	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e63c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e640	          0x4889c6	                            mov rsi, rax	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e643	          0x4889d7	                            mov rdi, rdx	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e646	      0xb800000000	                              mov eax, 0	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e64b	      0xe800000000	                          call 0x400e650	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e650	    0x488b05000000	            mov rax, qword [0x0400e657] 	      8444	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e657	         0xfb655df	            movzx edx, byte [rbp - 0x21]	      8444	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e65b	            0x8810	                      mov byte [rax], dl	      8444	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e65d	            0xeb18	                           jmp 0x400e677	      8413	tc-i386.c	FUNCTION_99	IF_1
0x400e65f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e663	      0xba01000000	                              mov edx, 1	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e668	          0x4889c6	                            mov rsi, rax	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e66b	      0xbf00000000	                              mov edi, 0	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e670	      0xe800000000	                          call 0x400e675	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e675	            0xeb01	                           jmp 0x400e678	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e677	              0x90	                                     nop	      8413	tc-i386.c	FUNCTION_99	IF_1
0x400e678	    0x8b0500000000	            mov eax, dword [0x0400e67e] 	      8451	tc-i386.c	FUNCTION_99
0x400e67e	            0xf7d8	                                 neg eax	      8451	tc-i386.c	FUNCTION_99
0x400e680	    0x890500000000	            mov dword [0x0400e686], eax 	      8451	tc-i386.c	FUNCTION_99
0x400e686	    0x8b0500000000	            mov eax, dword [0x0400e68c] 	      8453	tc-i386.c	FUNCTION_99	IF_5
0x400e68c	            0x85c0	                           test eax, eax	      8453	tc-i386.c	FUNCTION_99	IF_5
0x400e68e	            0x740c	                            je 0x400e69c	      8453	tc-i386.c	FUNCTION_99	IF_5
0x400e690	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8454	tc-i386.c	FUNCTION_99	CALL_6
0x400e694	          0x4889c7	                            mov rdi, rax	      8454	tc-i386.c	FUNCTION_99	CALL_6
0x400e697	      0xe8cb630000	            call sym.i386_intel_simplify	      8454	tc-i386.c	FUNCTION_99	CALL_6
0x400e69c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      8456	tc-i386.c	FUNCTION_99
0x400e69f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      8457	tc-i386.c	FUNCTION_99
0x400e6a3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8457	tc-i386.c	FUNCTION_99
0x400e6ac	            0x7405	                            je 0x400e6b3	      8457	tc-i386.c	FUNCTION_99
0x400e6ae	      0xe800000000	                          call 0x400e6b3	      8457	tc-i386.c	FUNCTION_99
0x400e6b3	              0xc9	                                   leave	      8457	tc-i386.c	FUNCTION_99
0x400e6b4	              0xc3	                                     ret	      8457	tc-i386.c	FUNCTION_99
tc_x86_frame_initial_instructions	CALL,4:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	66
0x4016655	              0x55	                                push rbp	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x4016656	          0x4889e5	                            mov rbp, rsp	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x4016659	        0x4883ec40	                           sub rsp, 0x40	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x401665d	    0x64488b042528	                mov rax, qword fs:[0x28]	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x4016666	        0x488945f8	                mov qword [rbp - 8], rax	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x401666a	            0x31c0	                            xor eax, eax	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x401666c	    0x8b0500000000	            mov eax, dword [0x04016672] 	     11545	tc-i386.c	
0x4016672	            0xd1e8	                              shr eax, 1	     11545	tc-i386.c	
0x4016674	            0x89c0	                            mov eax, eax	     11545	tc-i386.c	
0x4016676	    0x8b0485000000	                  mov eax, dword [rax*4]	     11545	tc-i386.c	
0x401667d	            0x85c0	                           test eax, eax	     11545	tc-i386.c	
0x401667f	     0xf8583000000	                           jne 0x4016708	     11545	tc-i386.c	
0x4016685	    0x488b05000000	            mov rax, qword [0x0401668c] 	     11547	tc-i386.c	
0x401668c	        0x488945c8	             mov qword [rbp - 0x38], rax	     11547	tc-i386.c	
0x4016690	    0xc745f0657370	        mov dword [rbp - 0x10], 0x707365	     11548	tc-i386.c	FUNCTION_137
0x4016697	    0xc745f4727370	         mov dword [rbp - 0xc], 0x707372	     11548	tc-i386.c	FUNCTION_137
0x401669e	    0x8b0500000000	            mov eax, dword [0x040166a4] 	     11551	tc-i386.c	FUNCTION_137	IF_1
0x40166a4	            0xd1e8	                              shr eax, 1	     11551	tc-i386.c	FUNCTION_137	IF_1
0x40166a6	            0x89c2	                            mov edx, eax	     11551	tc-i386.c	FUNCTION_137	IF_1
0x40166a8	        0x488d45f0	                   lea rax, [rbp - 0x10]	     11551	tc-i386.c	FUNCTION_137	IF_1
0x40166ac	            0x89d2	                            mov edx, edx	     11551	tc-i386.c	FUNCTION_137	IF_1
0x40166ae	        0x48c1e202	                              shl rdx, 2	     11551	tc-i386.c	FUNCTION_137	IF_1
0x40166b2	          0x4801d0	                            add rax, rdx	     11551	tc-i386.c	FUNCTION_137	IF_1
0x40166b5	    0x488905000000	            mov qword [0x040166bc], rax 	     11551	tc-i386.c	FUNCTION_137	IF_1
0x40166bc	        0x488d45d0	                   lea rax, [rbp - 0x30]	     11552	tc-i386.c	FUNCTION_137
0x40166c0	          0x4889c7	                            mov rdi, rax	     11552	tc-i386.c	FUNCTION_137
0x40166c3	      0xe800000000	                          call 0x40166c8	     11552	tc-i386.c	FUNCTION_137
0x40166c8	         0xfb645e8	            movzx eax, byte [rbp - 0x18]	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40166cc	            0x3c02	                               cmp al, 2	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40166ce	            0x7414	                            je 0x40166e4	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40166d0	      0xba00000000	                              mov edx, 0	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40166d5	      0xbe212d0000	                         mov esi, 0x2d21	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40166da	      0xbf00000000	                              mov edi, 0	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40166df	      0xe800000000	                          call 0x40166e4	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40166e4	    0x8b0500000000	            mov eax, dword [0x040166ea] 	     11554	tc-i386.c	FUNCTION_137
0x40166ea	            0xd1e8	                              shr eax, 1	     11554	tc-i386.c	FUNCTION_137
0x40166ec	            0x89c1	                            mov ecx, eax	     11554	tc-i386.c	FUNCTION_137
0x40166ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11554	tc-i386.c	FUNCTION_137
0x40166f2	            0x89c2	                            mov edx, eax	     11554	tc-i386.c	FUNCTION_137
0x40166f4	            0x89c8	                            mov eax, ecx	     11554	tc-i386.c	FUNCTION_137
0x40166f6	    0x891485000000	                  mov dword [rax*4], edx	     11554	tc-i386.c	FUNCTION_137
0x40166fd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11555	tc-i386.c	
0x4016701	    0x488905000000	            mov qword [0x04016708], rax 	     11555	tc-i386.c	
0x4016708	    0x8b0500000000	            mov eax, dword [0x0401670e] 	     11558	tc-i386.c	FUNCTION_138
0x401670e	            0xf7d8	                                 neg eax	     11558	tc-i386.c	FUNCTION_138
0x4016710	          0x4863d0	                         movsxd rdx, eax	     11558	tc-i386.c	FUNCTION_138
0x4016713	    0x8b0500000000	            mov eax, dword [0x04016719] 	     11558	tc-i386.c	FUNCTION_138
0x4016719	            0xd1e8	                              shr eax, 1	     11558	tc-i386.c	FUNCTION_138
0x401671b	            0x89c0	                            mov eax, eax	     11558	tc-i386.c	FUNCTION_138
0x401671d	    0x8b0485000000	                  mov eax, dword [rax*4]	     11558	tc-i386.c	FUNCTION_138
0x4016724	          0x4889d6	                            mov rsi, rdx	     11558	tc-i386.c	FUNCTION_138
0x4016727	            0x89c7	                            mov edi, eax	     11558	tc-i386.c	FUNCTION_138
0x4016729	      0xe800000000	                          call 0x401672e	     11558	tc-i386.c	FUNCTION_138
0x401672e	    0x8b0500000000	            mov eax, dword [0x04016734] 	     11559	tc-i386.c	FUNCTION_138	IF_1
0x4016734	          0x4863d0	                         movsxd rdx, eax	     11559	tc-i386.c	FUNCTION_138	IF_1
0x4016737	    0x8b0500000000	            mov eax, dword [0x0401673d] 	     11559	tc-i386.c	FUNCTION_138	IF_1
0x401673d	          0x4889d6	                            mov rsi, rdx	     11559	tc-i386.c	FUNCTION_138	IF_1
0x4016740	            0x89c7	                            mov edi, eax	     11559	tc-i386.c	FUNCTION_138	IF_1
0x4016742	      0xe800000000	                          call 0x4016747	     11559	tc-i386.c	FUNCTION_138	IF_1
0x4016747	              0x90	                                     nop	     11560	tc-i386.c	FUNCTION_138	IF_1
0x4016748	        0x488b45f8	                mov rax, qword [rbp - 8]	     11560	tc-i386.c	FUNCTION_138	IF_1
0x401674c	    0x644833042528	                xor rax, qword fs:[0x28]	     11560	tc-i386.c	FUNCTION_138	IF_1
0x4016755	            0x7405	                            je 0x401675c	     11560	tc-i386.c	FUNCTION_138	IF_1
0x4016757	      0xe800000000	                          call 0x401675c	     11560	tc-i386.c	FUNCTION_138	IF_1
0x401675c	              0xc9	                                   leave	     11560	tc-i386.c	FUNCTION_138	IF_1
0x401675d	              0xc3	                                     ret	     11560	tc-i386.c	FUNCTION_138	IF_1
match_template	CALL,65:FOR,5:WHILE,0:functions,0:SWITCH,6:IF,48:ELSE,13:DO,0	1116
0x400797b	              0x55	                                push rbp	      5277	tc-i386.c	FUNCTION_77
0x400797c	          0x4889e5	                            mov rbp, rsp	      5277	tc-i386.c	FUNCTION_77
0x400797f	              0x53	                                push rbx	      5277	tc-i386.c	FUNCTION_77
0x4007980	    0x4881ece80000	                           sub rsp, 0xe8	      5277	tc-i386.c	FUNCTION_77
0x4007987	            0x89f8	                            mov eax, edi	      5277	tc-i386.c	FUNCTION_77
0x4007989	    0x88851cffffff	               mov byte [rbp - 0xe4], al	      5277	tc-i386.c	FUNCTION_77
0x400798f	    0x64488b042528	                mov rax, qword fs:[0x28]	      5277	tc-i386.c	FUNCTION_77
0x4007998	        0x488945e8	             mov qword [rbp - 0x18], rax	      5277	tc-i386.c	FUNCTION_77
0x400799c	            0x31c0	                            xor eax, eax	      5277	tc-i386.c	FUNCTION_77
0x400799e	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	      5289	tc-i386.c	FUNCTION_77
0x40079a8	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      5295	tc-i386.c	FUNCTION_77
0x40079b2	    0xc7852cffffff	     mov dword [rbp - 0xd4], 0xffffffff 	      5296	tc-i386.c	FUNCTION_77
0x40079bc	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      5298	tc-i386.c	FUNCTION_77	CALL_1
0x40079c3	      0xba0c000000	                            mov edx, 0xc	      5298	tc-i386.c	FUNCTION_77	CALL_1
0x40079c8	      0xbe00000000	                              mov esi, 0	      5298	tc-i386.c	FUNCTION_77	CALL_1
0x40079cd	          0x4889c7	                            mov rdi, rax	      5298	tc-i386.c	FUNCTION_77	CALL_1
0x40079d0	      0xe800000000	                          call 0x40079d5	      5298	tc-i386.c	FUNCTION_77	CALL_1
0x40079d5	    0x8b0500000000	            mov eax, dword [0x040079db] 	      5299	tc-i386.c	FUNCTION_77	IF_1
0x40079db	            0x85c0	                           test eax, eax	      5299	tc-i386.c	FUNCTION_77	IF_1
0x40079dd	            0x7410	                            je 0x40079ef	      5299	tc-i386.c	FUNCTION_77	IF_1
0x40079df	    0x488b05000000	            mov rax, qword [0x040079e6] 	      5299	tc-i386.c	FUNCTION_77	IF_1
0x40079e6	          0x4885c0	                           test rax, rax	      5299	tc-i386.c	FUNCTION_77	IF_1
0x40079e9	     0xf85af000000	                           jne 0x4007a9e	      5299	tc-i386.c	FUNCTION_77	IF_1
0x40079ef	     0xfb605000000	           movzx eax, byte [0x040079f6] 	      5301	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x40079f6	            0x3c62	                            cmp al, 0x62	      5301	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x40079f8	            0x7515	                           jne 0x4007a0f	      5301	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x40079fa	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5302	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x4007a01	          0x83c802	                               or eax, 2	      5302	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x4007a04	    0x888552ffffff	               mov byte [rbp - 0xae], al	      5302	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x4007a0a	      0xe98f000000	                           jmp 0x4007a9e	      5302	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x4007a0f	     0xfb605000000	           movzx eax, byte [0x04007a16] 	      5303	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4007a16	            0x3c77	                            cmp al, 0x77	      5303	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4007a18	            0x7512	                           jne 0x4007a2c	      5303	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4007a1a	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5304	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4007a21	          0x83c804	                               or eax, 4	      5304	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4007a24	    0x888552ffffff	               mov byte [rbp - 0xae], al	      5304	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4007a2a	            0xeb72	                           jmp 0x4007a9e	      5304	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4007a2c	     0xfb605000000	           movzx eax, byte [0x04007a33] 	      5305	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x4007a33	            0x3c73	                            cmp al, 0x73	      5305	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x4007a35	            0x7512	                           jne 0x4007a49	      5305	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x4007a37	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5306	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x4007a3e	          0x83c810	                            or eax, 0x10	      5306	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x4007a41	    0x888552ffffff	               mov byte [rbp - 0xae], al	      5306	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x4007a47	            0xeb55	                           jmp 0x4007a9e	      5306	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x4007a49	     0xfb605000000	           movzx eax, byte [0x04007a50] 	      5307	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4007a50	            0x3c6c	                            cmp al, 0x6c	      5307	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4007a52	            0x7512	                           jne 0x4007a66	      5307	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4007a54	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5308	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4007a5b	          0x83c808	                               or eax, 8	      5308	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4007a5e	    0x888552ffffff	               mov byte [rbp - 0xae], al	      5308	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4007a64	            0xeb38	                           jmp 0x4007a9e	      5308	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4007a66	     0xfb605000000	           movzx eax, byte [0x04007a6d] 	      5309	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x4007a6d	            0x3c71	                            cmp al, 0x71	      5309	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x4007a6f	            0x7512	                           jne 0x4007a83	      5309	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x4007a71	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5310	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x4007a78	          0x83c820	                            or eax, 0x20	      5310	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x4007a7b	    0x888552ffffff	               mov byte [rbp - 0xae], al	      5310	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x4007a81	            0xeb1b	                           jmp 0x4007a9e	      5310	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x4007a83	     0xfb605000000	           movzx eax, byte [0x04007a8a] 	      5311	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x4007a8a	            0x3c01	                               cmp al, 1	      5311	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x4007a8c	            0x7510	                           jne 0x4007a9e	      5311	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x4007a8e	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5312	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x4007a95	          0x83c840	                            or eax, 0x40	      5312	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x4007a98	    0x888552ffffff	               mov byte [rbp - 0xae], al	      5312	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x4007a9e	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      5314	tc-i386.c	FUNCTION_77	CALL_2
0x4007aa5	      0xba0c000000	                            mov edx, 0xc	      5314	tc-i386.c	FUNCTION_77	CALL_2
0x4007aaa	      0xbe00000000	                              mov esi, 0	      5314	tc-i386.c	FUNCTION_77	CALL_2
0x4007aaf	          0x4889c7	                            mov rdi, rax	      5314	tc-i386.c	FUNCTION_77	CALL_2
0x4007ab2	      0xe800000000	                          call 0x4007ab7	      5314	tc-i386.c	FUNCTION_77	CALL_2
0x4007ab7	    0x8b0500000000	            mov eax, dword [0x04007abd] 	      5315	tc-i386.c	FUNCTION_77	IF_8
0x4007abd	            0x85c0	                           test eax, eax	      5315	tc-i386.c	FUNCTION_77	IF_8
0x4007abf	            0x7474	                            je 0x4007b35	      5315	tc-i386.c	FUNCTION_77	IF_8
0x4007ac1	     0xfbe851cffff	            movsx eax, byte [rbp - 0xe4]	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007ac8	          0x83e862	                           sub eax, 0x62	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007acb	          0x83f815	                           cmp eax, 0x15	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007ace	            0x7765	                            ja 0x4007b35	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007ad0	            0x89c0	                            mov eax, eax	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007ad2	    0x488b04c50000	                  mov rax, qword [rax*8]	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007ada	            0xffe0	                                 jmp rax	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007adc	     0xfb68562ffff	            movzx eax, byte [rbp - 0x9e]	      5319	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007ae3	          0x83c802	                               or eax, 2	      5319	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007ae6	    0x888562ffffff	               mov byte [rbp - 0x9e], al	      5319	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007aec	            0xeb47	                           jmp 0x4007b35	      5319	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007aee	     0xfb68562ffff	            movzx eax, byte [rbp - 0x9e]	      5320	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007af5	          0x83c804	                               or eax, 4	      5320	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007af8	    0x888562ffffff	               mov byte [rbp - 0x9e], al	      5320	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007afe	            0xeb35	                           jmp 0x4007b35	      5320	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b00	     0xfb68562ffff	            movzx eax, byte [rbp - 0x9e]	      5321	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b07	          0x83c810	                            or eax, 0x10	      5321	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b0a	    0x888562ffffff	               mov byte [rbp - 0x9e], al	      5321	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b10	            0xeb23	                           jmp 0x4007b35	      5321	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b12	     0xfb68562ffff	            movzx eax, byte [rbp - 0x9e]	      5322	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b19	          0x83c808	                               or eax, 8	      5322	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b1c	    0x888562ffffff	               mov byte [rbp - 0x9e], al	      5322	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b22	            0xeb11	                           jmp 0x4007b35	      5322	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b24	     0xfb68562ffff	            movzx eax, byte [rbp - 0x9e]	      5323	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b2b	          0x83c820	                            or eax, 0x20	      5323	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b2e	    0x888562ffffff	               mov byte [rbp - 0x9e], al	      5323	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b34	              0x90	                                     nop	      5323	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4007b35	    0xc70500000000	               mov dword [0x04007b3f], 3	      5328	tc-i386.c	FUNCTION_77
0x4007b3f	    0x488b05000000	            mov rax, qword [0x04007b46] 	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4007b46	          0x488b00	                    mov rax, qword [rax]	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4007b49	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4007b50	      0xe95b0c0000	                           jmp 0x40087b0	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4007b55	    0xc7852cffffff	     mov dword [rbp - 0xd4], 0xffffffff 	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4007b5f	    0x8b1500000000	            mov edx, dword [0x04007b65] 	      5334	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x4007b65	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5334	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x4007b6c	          0x8b4008	                mov eax, dword [rax + 8]	      5334	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x4007b6f	            0x39c2	                            cmp edx, eax	      5334	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x4007b71	     0xf85fd0b0000	                           jne 0x4008774	      5334	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x4007b77	    0xc70500000000	               mov dword [0x04007b81], 8	      5338	tc-i386.c	FUNCTION_77	FOR_1
0x4007b81	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5339	tc-i386.c	FUNCTION_77	FOR_1	CALL_3
0x4007b88	          0x4889c7	                            mov rdi, rax	      5339	tc-i386.c	FUNCTION_77	FOR_1	CALL_3
0x4007b8b	      0xe8638cffff	                call sym.cpu_flags_match	      5339	tc-i386.c	FUNCTION_77	FOR_1	CALL_3
0x4007b90	          0x83f803	                              cmp eax, 3	      5340	tc-i386.c	FUNCTION_77	FOR_1
0x4007b93	           0xf94c0	                                 sete al	      5340	tc-i386.c	FUNCTION_77	FOR_1
0x4007b96	           0xfb6c0	                           movzx eax, al	      5339	tc-i386.c	FUNCTION_77	FOR_1	CALL_3
0x4007b99	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      5339	tc-i386.c	FUNCTION_77	FOR_1	CALL_3
0x4007b9f	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      5341	tc-i386.c	FUNCTION_77	FOR_1	IF_10
0x4007ba6	     0xf84cb0b0000	                            je 0x4008777	      5341	tc-i386.c	FUNCTION_77	FOR_1	IF_10
0x4007bac	    0xc70500000000	               mov dword [0x04007bb6], 6	      5345	tc-i386.c	FUNCTION_77	FOR_1
0x4007bb6	    0x8b0500000000	            mov eax, dword [0x04007bbc] 	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4007bbc	            0x85c0	                           test eax, eax	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4007bbe	            0x7416	                            je 0x4007bd6	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4007bc0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4007bc7	         0xfb64030	           movzx eax, byte [rax + 0x30] 	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4007bcb	          0x83e040	                           and eax, 0x40	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4007bce	            0x84c0	                             test al, al	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4007bd0	     0xf85a40b0000	                           jne 0x400877a	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4007bd6	    0xc70500000000	               mov dword [0x04007be0], 7	      5350	tc-i386.c	FUNCTION_77	FOR_1
0x4007be0	    0x8b0500000000	            mov eax, dword [0x04007be6] 	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007be6	            0x85c0	                           test eax, eax	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007be8	            0x7416	                            je 0x4007c00	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007bea	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007bf1	         0xfb64030	           movzx eax, byte [rax + 0x30] 	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007bf5	          0x83e080	                     and eax, 0xffffff80	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007bf8	            0x84c0	                             test al, al	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007bfa	     0xf857d0b0000	                           jne 0x400877d	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c00	    0x8b0500000000	            mov eax, dword [0x04007c06] 	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c06	            0x85c0	                           test eax, eax	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c08	            0x7516	                           jne 0x4007c20	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c0a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c11	         0xfb64031	           movzx eax, byte [rax + 0x31] 	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c15	          0x83e001	                              and eax, 1	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c18	            0x84c0	                             test al, al	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c1a	     0xf855d0b0000	                           jne 0x400877d	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c20	    0x8b0500000000	            mov eax, dword [0x04007c26] 	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c26	            0x85c0	                           test eax, eax	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c28	            0x7416	                            je 0x4007c40	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c2a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c31	         0xfb64031	           movzx eax, byte [rax + 0x31] 	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c35	          0x83e002	                              and eax, 2	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c38	            0x84c0	                             test al, al	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c3a	     0xf853d0b0000	                           jne 0x400877d	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c40	    0x8b0500000000	            mov eax, dword [0x04007c46] 	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c46	            0x85c0	                           test eax, eax	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c48	            0x7516	                           jne 0x4007c60	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c4a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c51	         0xfb64031	           movzx eax, byte [rax + 0x31] 	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c55	          0x83e004	                              and eax, 4	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c58	            0x84c0	                             test al, al	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c5a	     0xf851d0b0000	                           jne 0x400877d	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4007c60	    0xc70500000000	               mov dword [0x04007c6a], 4	      5358	tc-i386.c	FUNCTION_77	FOR_1
0x4007c6a	    0x8b0500000000	            mov eax, dword [0x04007c70] 	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c70	            0x85c0	                           test eax, eax	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c72	            0x7416	                            je 0x4007c8a	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c74	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c7b	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c7f	          0x83e080	                     and eax, 0xffffff80	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c82	            0x84c0	                             test al, al	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c84	     0xf85d8000000	                           jne 0x4007d62	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c8a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c91	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c95	          0x83e002	                              and eax, 2	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c98	            0x84c0	                             test al, al	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c9a	            0x7412	                            je 0x4007cae	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007c9c	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007ca3	          0x83e002	                              and eax, 2	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007ca6	            0x84c0	                             test al, al	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007ca8	     0xf85d20a0000	                           jne 0x4008780	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cae	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cb5	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cb9	          0x83e004	                              and eax, 4	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cbc	            0x84c0	                             test al, al	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cbe	            0x7412	                            je 0x4007cd2	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cc0	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cc7	          0x83e004	                              and eax, 4	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cca	            0x84c0	                             test al, al	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007ccc	     0xf85ae0a0000	                           jne 0x4008780	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cd2	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cd9	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cdd	          0x83e008	                              and eax, 8	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007ce0	            0x84c0	                             test al, al	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007ce2	            0x7412	                            je 0x4007cf6	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007ce4	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007ceb	          0x83e008	                              and eax, 8	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cee	            0x84c0	                             test al, al	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cf0	     0xf858a0a0000	                           jne 0x4008780	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cf6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007cfd	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d01	          0x83e010	                           and eax, 0x10	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d04	            0x84c0	                             test al, al	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d06	            0x7412	                            je 0x4007d1a	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d08	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d0f	          0x83e010	                           and eax, 0x10	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d12	            0x84c0	                             test al, al	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d14	     0xf85660a0000	                           jne 0x4008780	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d1a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d21	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d25	          0x83e020	                           and eax, 0x20	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d28	            0x84c0	                             test al, al	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d2a	            0x7412	                            je 0x4007d3e	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d2c	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d33	          0x83e020	                           and eax, 0x20	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d36	            0x84c0	                             test al, al	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d38	     0xf85420a0000	                           jne 0x4008780	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d3e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d45	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d49	          0x83e040	                           and eax, 0x40	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d4c	            0x84c0	                             test al, al	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d4e	            0x7412	                            je 0x4007d62	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d50	     0xfb68552ffff	            movzx eax, byte [rbp - 0xae]	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d57	          0x83e040	                           and eax, 0x40	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d5a	            0x84c0	                             test al, al	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d5c	     0xf851e0a0000	                           jne 0x4008780	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4007d62	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d69	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d6d	          0x83e002	                              and eax, 2	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d70	            0x84c0	                             test al, al	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d72	            0x7412	                            je 0x4007d86	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d74	     0xfb68562ffff	            movzx eax, byte [rbp - 0x9e]	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d7b	          0x83e002	                              and eax, 2	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d7e	            0x84c0	                             test al, al	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d80	     0xf85fd090000	                           jne 0x4008783	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d86	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d8d	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d91	          0x83e004	                              and eax, 4	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d94	            0x84c0	                             test al, al	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d96	            0x7412	                            je 0x4007daa	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d98	     0xfb68562ffff	            movzx eax, byte [rbp - 0x9e]	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007d9f	          0x83e004	                              and eax, 4	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007da2	            0x84c0	                             test al, al	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007da4	     0xf85d9090000	                           jne 0x4008783	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007daa	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007db1	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007db5	          0x83e008	                              and eax, 8	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007db8	            0x84c0	                             test al, al	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dba	            0x7412	                            je 0x4007dce	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dbc	     0xfb68562ffff	            movzx eax, byte [rbp - 0x9e]	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dc3	          0x83e008	                              and eax, 8	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dc6	            0x84c0	                             test al, al	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dc8	     0xf85b5090000	                           jne 0x4008783	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dce	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dd5	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dd9	          0x83e010	                           and eax, 0x10	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007ddc	            0x84c0	                             test al, al	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dde	            0x7412	                            je 0x4007df2	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007de0	     0xfb68562ffff	            movzx eax, byte [rbp - 0x9e]	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007de7	          0x83e010	                           and eax, 0x10	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dea	            0x84c0	                             test al, al	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dec	     0xf8591090000	                           jne 0x4008783	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007df2	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007df9	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007dfd	          0x83e020	                           and eax, 0x20	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e00	            0x84c0	                             test al, al	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e02	            0x7412	                            je 0x4007e16	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e04	     0xfb68562ffff	            movzx eax, byte [rbp - 0x9e]	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e0b	          0x83e020	                           and eax, 0x20	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e0e	            0x84c0	                             test al, al	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e10	     0xf856d090000	                           jne 0x4008783	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e16	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e1d	         0xfb6402a	           movzx eax, byte [rax + 0x2a] 	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e21	          0x83e040	                           and eax, 0x40	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e24	            0x84c0	                             test al, al	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e26	            0x7412	                            je 0x4007e3a	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e28	     0xfb68562ffff	            movzx eax, byte [rbp - 0x9e]	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e2f	          0x83e040	                           and eax, 0x40	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e32	            0x84c0	                             test al, al	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e34	     0xf8549090000	                           jne 0x4008783	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4007e3a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5376	tc-i386.c	FUNCTION_77	FOR_1	IF_15	CALL_4
0x4007e41	          0x4889c7	                            mov rdi, rax	      5376	tc-i386.c	FUNCTION_77	FOR_1	IF_15	CALL_4
0x4007e44	      0xe8a091ffff	             call sym.operand_size_match	      5376	tc-i386.c	FUNCTION_77	FOR_1	IF_15	CALL_4
0x4007e49	            0x85c0	                           test eax, eax	      5376	tc-i386.c	FUNCTION_77	FOR_1	IF_15	CALL_4
0x4007e4b	     0xf8435090000	                            je 0x4008786	      5376	tc-i386.c	FUNCTION_77	FOR_1	IF_15	CALL_4
0x4007e51	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      5379	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4007e5b	            0xeb28	                           jmp 0x4007e85	      5379	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4007e5d	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4007e63	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4007e6a	    0x8b8d30ffffff	             mov ecx, dword [rbp - 0xd0]	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4007e70	        0x4883c106	                              add rcx, 6	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4007e74	      0x488b54ca04	       mov rdx, qword [rdx + rcx*8 + 4] 	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4007e79	      0x488954c5c0	     mov qword [rbp + rax*8 - 0x40], rdx	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4007e7e	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      5379	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4007e85	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 4	      5379	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4007e8c	            0x76cf	                           jbe 0x4007e5d	      5379	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4007e8e	     0xfb605000000	           movzx eax, byte [0x04007e95] 	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007e95	            0x3c71	                            cmp al, 0x71	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007e97	     0xf85f9000000	                           jne 0x4007f96	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007e9d	    0x8b0500000000	            mov eax, dword [0x04007ea3] 	      5384	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007ea3	          0x83f802	                              cmp eax, 2	      5384	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007ea6	     0xf84ea000000	                            je 0x4007f96	      5384	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007eac	    0x8b0500000000	            mov eax, dword [0x04007eb2] 	      5386	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007eb2	            0x85c0	                           test eax, eax	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007eb4	            0x7440	                            je 0x4007ef6	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007eb6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5386	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007ebd	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      5386	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007ec1	          0x83e080	                     and eax, 0xffffff80	      5386	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007ec4	            0x84c0	                             test al, al	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4007ec6	            0x751d	                           jne 0x4007ee5	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4007ec8	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4007ecf	          0x488b00	                    mov rax, qword [rax]	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4007ed2	          0x4889c7	                            mov rdi, rax	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4007ed5	      0xe863b5ffff	            call sym.intel_float_operand	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4007eda	            0x85c0	                           test eax, eax	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4007edc	            0x7507	                           jne 0x4007ee5	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4007ede	      0xb801000000	                              mov eax, 1	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4007ee3	            0xeb05	                           jmp 0x4007eea	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4007ee5	      0xb800000000	                              mov eax, 0	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4007eea	          0x83e001	                              and eax, 1	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007eed	            0x84c0	                             test al, al	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007eef	            0x7520	                           jne 0x4007f11	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007ef1	      0xe9a0000000	                           jmp 0x4007f96	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007ef6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5388	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_6
0x4007efd	          0x488b00	                    mov rax, qword [rax]	      5388	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_6
0x4007f00	          0x4889c7	                            mov rdi, rax	      5388	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_6
0x4007f03	      0xe835b5ffff	            call sym.intel_float_operand	      5388	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_6
0x4007f08	          0x83f802	                              cmp eax, 2	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f0b	     0xf8485000000	                            je 0x4007f96	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f11	         0xfb645c0	            movzx eax, byte [rbp - 0x40]	      5389	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f15	          0x83e002	                              and eax, 2	      5389	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f18	            0x84c0	                             test al, al	      5389	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f1a	            0x750b	                           jne 0x4007f27	      5389	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f1c	         0xfb645c0	            movzx eax, byte [rbp - 0x40]	      5390	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f20	          0x83e004	                              and eax, 4	      5390	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f23	            0x84c0	                             test al, al	      5390	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f25	            0x7447	                            je 0x4007f6e	      5390	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f27	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f2e	          0x8b4008	                mov eax, dword [rax + 8]	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f31	          0x83f801	                              cmp eax, 1	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f34	           0xf97c0	                                 seta al	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f37	           0xfb6c0	                           movzx eax, al	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f3a	            0x4898	                                    cdqe	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f3c	       0xfb644c5c0	    movzx eax, byte [rbp + rax*8 - 0x40]	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f41	            0xd0e8	                               shr al, 1	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f43	          0x83e001	                              and eax, 1	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f46	            0x84c0	                             test al, al	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f48	            0x754c	                           jne 0x4007f96	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f4a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f51	          0x8b4008	                mov eax, dword [rax + 8]	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f54	          0x83f801	                              cmp eax, 1	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f57	           0xf97c0	                                 seta al	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f5a	           0xfb6c0	                           movzx eax, al	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f5d	            0x4898	                                    cdqe	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f5f	       0xfb644c5c0	    movzx eax, byte [rbp + rax*8 - 0x40]	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f64	          0xc0e802	                               shr al, 2	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f67	          0x83e001	                              and eax, 1	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f6a	            0x84c0	                             test al, al	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f6c	            0x7528	                           jne 0x4007f96	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f6e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5393	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f75	          0x8b400c	              mov eax, dword [rax + 0xc]	      5393	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f78	      0x3dc70f0000	                          cmp eax, 0xfc7	      5393	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f7d	     0xf8506080000	                           jne 0x4008789	      5393	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f83	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5394	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f8a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5394	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f8d	          0x83f801	                              cmp eax, 1	      5394	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f90	     0xf85f3070000	                           jne 0x4008789	      5394	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4007f96	     0xfb605000000	           movzx eax, byte [0x04007f9d] 	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007f9d	            0x3c6c	                            cmp al, 0x6c	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007f9f	     0xf85d5000000	                           jne 0x400807a	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007fa5	     0xfb605000000	           movzx eax, byte [0x04007fac] 	      5399	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007fac	          0x83e004	                              and eax, 4	      5399	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007faf	            0x84c0	                             test al, al	      5399	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007fb1	     0xf85c3000000	                           jne 0x400807a	      5399	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007fb7	    0x8b0500000000	            mov eax, dword [0x04007fbd] 	      5401	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007fbd	            0x85c0	                           test eax, eax	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007fbf	            0x743d	                            je 0x4007ffe	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007fc1	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5401	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007fc8	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      5401	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007fcc	          0x83e080	                     and eax, 0xffffff80	      5401	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007fcf	            0x84c0	                             test al, al	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4007fd1	            0x751d	                           jne 0x4007ff0	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4007fd3	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4007fda	          0x488b00	                    mov rax, qword [rax]	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4007fdd	          0x4889c7	                            mov rdi, rax	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4007fe0	      0xe858b4ffff	            call sym.intel_float_operand	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4007fe5	            0x85c0	                           test eax, eax	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4007fe7	            0x7507	                           jne 0x4007ff0	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4007fe9	      0xb801000000	                              mov eax, 1	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4007fee	            0xeb05	                           jmp 0x4007ff5	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4007ff0	      0xb800000000	                              mov eax, 0	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4007ff5	          0x83e001	                              and eax, 1	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007ff8	            0x84c0	                             test al, al	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007ffa	            0x7519	                           jne 0x4008015	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007ffc	            0xeb7c	                           jmp 0x400807a	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4007ffe	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5403	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_8
0x4008005	          0x488b00	                    mov rax, qword [rax]	      5403	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_8
0x4008008	          0x4889c7	                            mov rdi, rax	      5403	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_8
0x400800b	      0xe82db4ffff	            call sym.intel_float_operand	      5403	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_8
0x4008010	          0x83f802	                              cmp eax, 2	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008013	            0x7465	                            je 0x400807a	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008015	         0xfb645c0	            movzx eax, byte [rbp - 0x40]	      5404	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008019	          0x83e002	                              and eax, 2	      5404	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400801c	            0x84c0	                             test al, al	      5404	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400801e	            0x750f	                           jne 0x400802f	      5404	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008020	         0xfb645c0	            movzx eax, byte [rbp - 0x40]	      5405	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008024	          0x83e004	                              and eax, 4	      5405	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008027	            0x84c0	                             test al, al	      5405	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008029	     0xf845d070000	                            je 0x400878c	      5405	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400802f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008036	          0x8b4008	                mov eax, dword [rax + 8]	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008039	          0x83f801	                              cmp eax, 1	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400803c	           0xf97c0	                                 seta al	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400803f	           0xfb6c0	                           movzx eax, al	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008042	            0x4898	                                    cdqe	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008044	       0xfb644c5c0	    movzx eax, byte [rbp + rax*8 - 0x40]	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008049	            0xd0e8	                               shr al, 1	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400804b	          0x83e001	                              and eax, 1	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400804e	            0x84c0	                             test al, al	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008050	            0x7528	                           jne 0x400807a	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008052	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008059	          0x8b4008	                mov eax, dword [rax + 8]	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400805c	          0x83f801	                              cmp eax, 1	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400805f	           0xf97c0	                                 seta al	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008062	           0xfb6c0	                           movzx eax, al	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008065	            0x4898	                                    cdqe	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008067	       0xfb644c5c0	    movzx eax, byte [rbp + rax*8 - 0x40]	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400806c	          0xc0e802	                               shr al, 2	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400806f	          0x83e001	                              and eax, 1	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008072	            0x84c0	                             test al, al	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4008074	     0xf8412070000	                            je 0x400878c	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400807a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5413	tc-i386.c	FUNCTION_77	FOR_1	ELSE_8	IF_18
0x4008081	          0x8b4008	                mov eax, dword [rax + 8]	      5413	tc-i386.c	FUNCTION_77	FOR_1	ELSE_8	IF_18
0x4008084	            0x85c0	                           test eax, eax	      5413	tc-i386.c	FUNCTION_77	FOR_1	ELSE_8	IF_18
0x4008086	     0xf843e070000	                            je 0x40087ca	      5413	tc-i386.c	FUNCTION_77	FOR_1	ELSE_8	IF_18
0x400808c	     0xfb605000000	           movzx eax, byte [0x04008093] 	      5420	tc-i386.c	FUNCTION_77	FOR_1	IF_19
0x4008093	            0x84c0	                             test al, al	      5420	tc-i386.c	FUNCTION_77	FOR_1	IF_19
0x4008095	     0xf8454010000	                            je 0x40081ef	      5420	tc-i386.c	FUNCTION_77	FOR_1	IF_19
0x400809b	    0x8b0500000000	            mov eax, dword [0x040080a1] 	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x40080a1	          0x83f801	                              cmp eax, 1	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x40080a4	            0x7413	                            je 0x40080b9	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x40080a6	          0x83f801	                              cmp eax, 1	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x40080a9	            0x7279	                            jb 0x4008124	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x40080ab	          0x83f802	                              cmp eax, 2	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x40080ae	     0xf84d6000000	                            je 0x400818a	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x40080b4	      0xe936010000	                           jmp 0x40081ef	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x40080b9	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      5426	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3
0x40080c3	            0xeb51	                           jmp 0x4008116	      5426	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3
0x40080c5	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080cb	       0xfb644c5c2	    movzx eax, byte [rbp + rax*8 - 0x3e]	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080d0	            0xd0e8	                               shr al, 1	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080d2	          0x83e001	                              and eax, 1	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080d5	            0x84c0	                             test al, al	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080d7	            0x7436	                            je 0x400810f	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080d9	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5430	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080df	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      5430	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080e5	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5431	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080eb	       0xfb654c5c2	    movzx edx, byte [rbp + rax*8 - 0x3e]	      5431	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080f0	          0x83ca04	                               or edx, 4	      5431	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080f3	        0x8854c5c2	       mov byte [rbp + rax*8 - 0x3e], dl	      5431	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080f7	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5432	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x40080fd	       0xfb654c5c2	    movzx edx, byte [rbp + rax*8 - 0x3e]	      5432	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4008102	          0x83e2fd	                     and edx, 0xfffffffd	      5432	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4008105	        0x8854c5c2	       mov byte [rbp + rax*8 - 0x3e], dl	      5432	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4008109	              0x90	                                     nop	      5433	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x400810a	      0xe9e0000000	                           jmp 0x40081ef	      5436	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400810f	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      5426	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3
0x4008116	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 4	      5426	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3
0x400811d	            0x76a6	                           jbe 0x40080c5	      5426	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3
0x400811f	      0xe9cb000000	                           jmp 0x40081ef	      5436	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x4008124	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      5438	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4
0x400812e	            0xeb4f	                           jmp 0x400817f	      5438	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4
0x4008130	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4008136	       0xfb644c5c2	    movzx eax, byte [rbp + rax*8 - 0x3e]	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400813b	          0xc0e802	                               shr al, 2	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400813e	          0x83e001	                              and eax, 1	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4008141	            0x84c0	                             test al, al	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4008143	            0x7433	                            je 0x4008178	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4008145	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5442	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400814b	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      5442	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4008151	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5443	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4008157	       0xfb654c5c2	    movzx edx, byte [rbp + rax*8 - 0x3e]	      5443	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400815c	          0x83e2fb	                     and edx, 0xfffffffb	      5443	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400815f	        0x8854c5c2	       mov byte [rbp + rax*8 - 0x3e], dl	      5443	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4008163	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5444	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4008169	       0xfb654c5c2	    movzx edx, byte [rbp + rax*8 - 0x3e]	      5444	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400816e	          0x83ca02	                               or edx, 2	      5444	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4008171	        0x8854c5c2	       mov byte [rbp + rax*8 - 0x3e], dl	      5444	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4008175	              0x90	                                     nop	      5445	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4008176	            0xeb77	                           jmp 0x40081ef	      5448	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x4008178	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      5438	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4
0x400817f	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 4	      5438	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4
0x4008186	            0x76a8	                           jbe 0x4008130	      5438	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4
0x4008188	            0xeb65	                           jmp 0x40081ef	      5448	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400818a	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      5450	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5
0x4008194	            0xeb4f	                           jmp 0x40081e5	      5450	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5
0x4008196	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x400819c	       0xfb644c5c2	    movzx eax, byte [rbp + rax*8 - 0x3e]	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081a1	          0xc0e804	                               shr al, 4	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081a4	          0x83e001	                              and eax, 1	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081a7	            0x84c0	                             test al, al	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081a9	            0x7433	                            je 0x40081de	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081ab	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5454	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081b1	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      5454	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081b7	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5455	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081bd	       0xfb654c5c2	    movzx edx, byte [rbp + rax*8 - 0x3e]	      5455	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081c2	          0x83e2ef	                     and edx, 0xffffffef	      5455	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081c5	        0x8854c5c2	       mov byte [rbp + rax*8 - 0x3e], dl	      5455	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081c9	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5456	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081cf	       0xfb654c5c2	    movzx edx, byte [rbp + rax*8 - 0x3e]	      5456	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081d4	          0x83ca04	                               or edx, 4	      5456	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081d7	        0x8854c5c2	       mov byte [rbp + rax*8 - 0x3e], dl	      5456	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081db	              0x90	                                     nop	      5457	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x40081dc	            0xeb10	                           jmp 0x40081ee	      5460	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x40081de	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      5450	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5
0x40081e5	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 4	      5450	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5
0x40081ec	            0x76a8	                           jbe 0x4008196	      5450	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5
0x40081ee	              0x90	                                     nop	      5460	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x40081ef	    0x8b0500000000	            mov eax, dword [0x040081f5] 	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x40081f5	      0x3d64010000	                          cmp eax, 0x164	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x40081fa	            0x7515	                           jne 0x4008211	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x40081fc	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x4008203	          0x8b400c	              mov eax, dword [rax + 0xc]	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x4008206	      0x3da0000000	                           cmp eax, 0xa0	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x400820b	     0xf847e050000	                            je 0x400878f	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x4008211	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5469	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4008218	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      5469	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400821c	          0x83e040	                           and eax, 0x40	      5469	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400821f	            0x84c0	                             test al, al	      5469	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4008221	            0x7449	                            je 0x400826c	      5469	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4008223	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400822a	          0x8b4008	                mov eax, dword [rax + 8]	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400822d	      0xba01000000	                              mov edx, 1	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4008232	            0x89c1	                            mov ecx, eax	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4008234	            0xd3e2	                             shl edx, cl	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4008236	            0x89d0	                            mov eax, edx	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4008238	          0x83e801	                              sub eax, 1	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400823b	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4008241	    0x488b05000000	            mov rax, qword [0x04008248] 	      5472	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4008248	          0x4885c0	                           test rax, rax	      5472	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400824b	            0x7429	                            je 0x4008276	      5472	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400824d	    0x488b05000000	            mov rax, qword [0x04008254] 	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4008254	          0x8b4004	                mov eax, dword [rax + 4]	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4008257	      0xba01000000	                              mov edx, 1	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400825c	            0x89c1	                            mov ecx, eax	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400825e	            0xd3e2	                             shl edx, cl	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4008260	            0x89d0	                            mov eax, edx	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4008262	            0xf7d0	                                 not eax	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4008264	    0x218534ffffff	             and dword [rbp - 0xcc], eax	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400826a	            0xeb0a	                           jmp 0x4008276	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400826c	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	      5476	tc-i386.c	FUNCTION_77	FOR_1	ELSE_9
0x4008276	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5478	tc-i386.c	FUNCTION_77	FOR_1	CALL_9
0x400827a	          0x4889c6	                            mov rsi, rax	      5478	tc-i386.c	FUNCTION_77	FOR_1	CALL_9
0x400827d	    0x488b3d000000	            mov rdi, qword [0x04008284] 	      5478	tc-i386.c	FUNCTION_77	FOR_1	CALL_9
0x4008284	      0xe85f87ffff	               call sym.operand_type_and	      5478	tc-i386.c	FUNCTION_77	FOR_1	CALL_9
0x4008289	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      5478	tc-i386.c	FUNCTION_77	FOR_1	CALL_9
0x4008290	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x4008297	          0x8b4008	                mov eax, dword [rax + 8]	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x400829a	          0x83f805	                              cmp eax, 5	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x400829d	     0xf8788040000	                            ja 0x400872b	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x40082a3	            0x89c0	                            mov eax, eax	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x40082a5	    0x488b04c50000	                  mov rax, qword [rax*8]	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x40082ad	            0xffe0	                                 jmp rax	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x40082af	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x40082b6	    0x488b35000000	            mov rsi, qword [0x040082bd] 	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x40082bd	          0x4889c7	                            mov rdi, rax	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x40082c0	      0xe8e28fffff	             call sym.operand_type_match	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x40082c5	            0x85c0	                           test eax, eax	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x40082c7	     0xf855a040000	                           jne 0x4008727	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x40082cd	      0xe9d6040000	                           jmp 0x40087a8	      5483	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26
0x40082d2	    0x8b0500000000	            mov eax, dword [0x040082d8] 	      5490	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x40082d8	          0x83f802	                              cmp eax, 2	      5490	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x40082db	            0x753b	                           jne 0x4008318	      5490	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x40082dd	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5491	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x40082e4	          0x8b400c	              mov eax, dword [rax + 0xc]	      5491	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x40082e7	      0x3d90000000	                           cmp eax, 0x90	      5491	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x40082ec	            0x752a	                           jne 0x4008318	      5491	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x40082ee	      0xbe00000000	                              mov esi, 0	      5492	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_11
0x40082f3	      0xbf00000000	                              mov edi, 0	      5492	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_11
0x40082f8	      0xe82682ffff	             call sym.operand_type_equal	      5492	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_11
0x40082fd	            0x85c0	                           test eax, eax	      5492	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_11
0x40082ff	            0x7417	                            je 0x4008318	      5492	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_11
0x4008301	      0xbe00000000	                              mov esi, 0	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x4008306	      0xbf00000000	                              mov edi, 0	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x400830b	      0xe81382ffff	             call sym.operand_type_equal	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x4008310	            0x85c0	                           test eax, eax	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x4008312	     0xf857a040000	                           jne 0x4008792	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x4008318	    0x8b0500000000	            mov eax, dword [0x0400831e] 	      5497	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400831e	          0x83f802	                              cmp eax, 2	      5497	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4008321	            0x7444	                            je 0x4008367	      5497	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4008323	    0x488b05000000	            mov rax, qword [0x0400832a] 	      5498	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400832a	          0x4885c0	                           test rax, rax	      5498	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400832d	            0x7438	                            je 0x4008367	      5498	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400832f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5499	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4008336	          0x8b400c	              mov eax, dword [rax + 0xc]	      5499	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4008339	      0x3da0000000	                           cmp eax, 0xa0	      5499	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400833e	            0x7527	                           jne 0x4008367	      5499	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4008340	     0xfb605000000	           movzx eax, byte [0x04008347] 	      5500	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4008347	          0x83e020	                           and eax, 0x20	      5500	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400834a	            0x84c0	                             test al, al	      5500	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400834c	            0x7419	                            je 0x4008367	      5500	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400834e	      0xbe03000000	                              mov esi, 3	      5501	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28	CALL_13
0x4008353	    0x488b3d000000	            mov rdi, qword [0x0400835a] 	      5501	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28	CALL_13
0x400835a	      0xe8cd87ffff	             call sym.operand_type_check	      5501	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28	CALL_13
0x400835f	            0x85c0	                           test eax, eax	      5501	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28	CALL_13
0x4008361	     0xf852e040000	                           jne 0x4008795	      5501	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28	CALL_13
0x4008367	    0x8b0500000000	            mov eax, dword [0x0400836d] 	      5504	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x400836d	          0x83f802	                              cmp eax, 2	      5504	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x4008370	            0x7516	                           jne 0x4008388	      5504	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x4008372	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x4008379	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x400837d	          0x83e001	                              and eax, 1	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x4008380	            0x84c0	                             test al, al	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x4008382	     0xf85c6000000	                           jne 0x400844e	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x4008388	    0x8b0500000000	            mov eax, dword [0x0400838e] 	      5511	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400838e	          0x83f802	                              cmp eax, 2	      5511	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4008391	            0x7520	                           jne 0x40083b3	      5511	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4008393	    0x8b0500000000	            mov eax, dword [0x04008399] 	      5512	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4008399	            0x85c0	                           test eax, eax	      5512	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400839b	            0x7516	                           jne 0x40083b3	      5512	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400839d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x40083a4	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x40083a8	          0x83e004	                              and eax, 4	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x40083ab	            0x84c0	                             test al, al	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x40083ad	     0xf85e5030000	                           jne 0x4008798	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x40083b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5518	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	CALL_14
0x40083b7	          0x4889c6	                            mov rsi, rax	      5518	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	CALL_14
0x40083ba	    0x488b3d000000	            mov rdi, qword [0x040083c1] 	      5518	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	CALL_14
0x40083c1	      0xe82286ffff	               call sym.operand_type_and	      5518	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	CALL_14
0x40083c6	        0x48894580	             mov qword [rbp - 0x80], rax	      5518	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	CALL_14
0x40083ca	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5519	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_15
0x40083d1	    0x488b35000000	            mov rsi, qword [0x040083d8] 	      5519	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_15
0x40083d8	          0x4889c7	                            mov rdi, rax	      5519	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_15
0x40083db	      0xe8c78effff	             call sym.operand_type_match	      5519	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_15
0x40083e0	            0x85c0	                           test eax, eax	      5519	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_15
0x40083e2	            0x7452	                            je 0x4008436	      5519	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_15
0x40083e4	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x40083e8	    0x488b35000000	            mov rsi, qword [0x040083ef] 	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x40083ef	          0x4889c7	                            mov rdi, rax	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x40083f2	      0xe8b08effff	             call sym.operand_type_match	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x40083f7	            0x85c0	                           test eax, eax	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x40083f9	            0x743b	                            je 0x4008436	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x40083fb	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x4008401	          0x83e003	                              and eax, 3	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x4008404	          0x83f803	                              cmp eax, 3	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x4008407	     0xf853f010000	                           jne 0x400854c	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x400840d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4008411	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4008415	          0x4889d1	                            mov rcx, rdx	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4008418	    0x488b15000000	            mov rdx, qword [0x0400841f] 	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x400841f	          0x4889c6	                            mov rsi, rax	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4008422	    0x488b3d000000	            mov rdi, qword [0x04008429] 	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4008429	      0xe87d8fffff	    call sym.operand_type_register_match	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x400842e	            0x85c0	                           test eax, eax	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4008430	     0xf8516010000	                           jne 0x400854c	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4008436	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400843d	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x4008441	          0x83e001	                              and eax, 1	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x4008444	            0x84c0	                             test al, al	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x4008446	     0xf844f030000	                            je 0x400879b	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400844c	            0xeb01	                           jmp 0x400844f	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400844e	              0x90	                                     nop	      5506	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x400844f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5533	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_18
0x4008453	          0x4889c6	                            mov rsi, rax	      5533	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_18
0x4008456	    0x488b3d000000	            mov rdi, qword [0x0400845d] 	      5533	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_18
0x400845d	      0xe88685ffff	               call sym.operand_type_and	      5533	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_18
0x4008462	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      5533	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_18
0x4008469	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5534	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_19
0x400846d	          0x4889c6	                            mov rsi, rax	      5534	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_19
0x4008470	    0x488b3d000000	            mov rdi, qword [0x04008477] 	      5534	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_19
0x4008477	      0xe86c85ffff	               call sym.operand_type_and	      5534	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_19
0x400847c	        0x48894580	             mov qword [rbp - 0x80], rax	      5534	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_19
0x4008480	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5535	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_20
0x4008487	    0x488b35000000	            mov rsi, qword [0x0400848e] 	      5535	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_20
0x400848e	          0x4889c7	                            mov rdi, rax	      5535	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_20
0x4008491	      0xe8118effff	             call sym.operand_type_match	      5535	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_20
0x4008496	            0x85c0	                           test eax, eax	      5535	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_20
0x4008498	     0xf8400030000	                            je 0x400879e	      5535	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_20
0x400849e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x40084a2	    0x488b35000000	            mov rsi, qword [0x040084a9] 	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x40084a9	          0x4889c7	                            mov rdi, rax	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x40084ac	      0xe8f68dffff	             call sym.operand_type_match	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x40084b1	            0x85c0	                           test eax, eax	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x40084b3	     0xf84e5020000	                            je 0x400879e	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x40084b9	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5537	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33
0x40084c0	            0x7429	                            je 0x40084eb	      5537	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33
0x40084c2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x40084c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x40084ca	          0x4889d1	                            mov rcx, rdx	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x40084cd	    0x488b15000000	            mov rdx, qword [0x040084d4] 	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x40084d4	          0x4889c6	                            mov rsi, rax	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x40084d7	    0x488b3d000000	            mov rdi, qword [0x040084de] 	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x40084de	      0xe8c88effff	    call sym.operand_type_register_match	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x40084e3	            0x85c0	                           test eax, eax	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x40084e5	     0xf84b3020000	                            je 0x400879e	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x40084eb	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5548	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x40084f2	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      5548	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x40084f6	          0x83e001	                              and eax, 1	      5548	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x40084f9	            0x84c0	                             test al, al	      5548	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x40084fb	            0x750c	                           jne 0x4008509	      5548	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x40084fd	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      5549	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x4008507	            0xeb21	                           jmp 0x400852a	      5549	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x4008509	         0xfb645c4	            movzx eax, byte [rbp - 0x3c]	      5550	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x400850d	          0x83e004	                              and eax, 4	      5550	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x4008510	            0x84c0	                             test al, al	      5550	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x4008512	            0x740c	                            je 0x4008520	      5550	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x4008514	    0xc78528ffffff	          mov dword [rbp - 0xd8], 0x400 	      5551	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x400851e	            0xeb0a	                           jmp 0x400852a	      5551	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x4008520	    0xc78528ffffff	               mov dword [rbp - 0xd8], 2	      5553	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_11
0x400852a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5554	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x4008531	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      5554	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x4008535	          0x83e004	                              and eax, 4	      5554	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x4008538	            0x84c0	                             test al, al	      5554	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x400853a	     0xf84eb010000	                            je 0x400872b	      5554	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x4008540	    0x838d28ffffff	                or dword [rbp - 0xd8], 8	      5555	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x4008547	      0xe9df010000	                           jmp 0x400872b	      5554	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x400854c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4008553	          0x8b4008	                mov eax, dword [rax + 8]	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4008556	          0x83f804	                              cmp eax, 4	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4008559	            0x7423	                            je 0x400857e	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400855b	          0x83f805	                              cmp eax, 5	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400855e	            0x7407	                            je 0x4008567	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4008560	          0x83f803	                              cmp eax, 3	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4008563	            0x7430	                            je 0x4008595	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4008565	            0xeb46	                           jmp 0x40085ad	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4008567	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5563	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_23
0x400856b	          0x4889c6	                            mov rsi, rax	      5563	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_23
0x400856e	    0x488b3d000000	            mov rdi, qword [0x04008575] 	      5563	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_23
0x4008575	      0xe86e84ffff	               call sym.operand_type_and	      5563	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_23
0x400857a	        0x488945b0	             mov qword [rbp - 0x50], rax	      5563	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_23
0x400857e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5567	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_24
0x4008582	          0x4889c6	                            mov rsi, rax	      5567	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_24
0x4008585	    0x488b3d000000	            mov rdi, qword [0x0400858c] 	      5567	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_24
0x400858c	      0xe85784ffff	               call sym.operand_type_and	      5567	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_24
0x4008591	        0x488945a0	             mov qword [rbp - 0x60], rax	      5567	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_24
0x4008595	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5571	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_25
0x4008599	          0x4889c6	                            mov rsi, rax	      5571	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_25
0x400859c	    0x488b3d000000	            mov rdi, qword [0x040085a3] 	      5571	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_25
0x40085a3	      0xe84084ffff	               call sym.operand_type_and	      5571	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_25
0x40085a8	        0x48894590	             mov qword [rbp - 0x70], rax	      5571	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4	CALL_25
0x40085ac	              0x90	                                     nop	      5573	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x40085ad	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x40085b4	          0x8b4008	                mov eax, dword [rax + 8]	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x40085b7	          0x83f804	                              cmp eax, 4	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x40085ba	            0x7457	                            je 0x4008613	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x40085bc	          0x83f805	                              cmp eax, 5	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x40085bf	            0x740e	                            je 0x40085cf	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x40085c1	          0x83f803	                              cmp eax, 3	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x40085c4	     0xf84d2000000	                            je 0x400869c	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x40085ca	      0xe95c010000	                           jmp 0x400872b	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x40085cf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x40085d3	    0x488b35000000	            mov rsi, qword [0x040085da] 	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x40085da	          0x4889c7	                            mov rdi, rax	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x40085dd	      0xe8c58cffff	             call sym.operand_type_match	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x40085e2	            0x85c0	                           test eax, eax	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x40085e4	     0xf84b7010000	                            je 0x40087a1	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x40085ea	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x40085ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x40085f2	          0x4889d1	                            mov rcx, rdx	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x40085f5	    0x488b15000000	            mov rdx, qword [0x040085fc] 	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x40085fc	          0x4889c6	                            mov rsi, rax	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x40085ff	    0x488b3d000000	            mov rdi, qword [0x04008606] 	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x4008606	      0xe8a08dffff	    call sym.operand_type_register_match	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400860b	            0x85c0	                           test eax, eax	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400860d	     0xf848e010000	                            je 0x40087a1	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x4008613	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x4008617	    0x488b35000000	            mov rsi, qword [0x0400861e] 	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400861e	          0x4889c7	                            mov rdi, rax	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x4008621	      0xe8818cffff	             call sym.operand_type_match	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x4008626	            0x85c0	                           test eax, eax	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x4008628	     0xf8476010000	                            je 0x40087a4	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400862e	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x4008634	          0x83e00a	                            and eax, 0xa	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x4008637	          0x83f80a	                            cmp eax, 0xa	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400863a	            0x7529	                           jne 0x4008665	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400863c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x4008640	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x4008644	          0x4889d1	                            mov rcx, rdx	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x4008647	    0x488b15000000	            mov rdx, qword [0x0400864e] 	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400864e	          0x4889c6	                            mov rsi, rax	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x4008651	    0x488b3d000000	            mov rdi, qword [0x04008658] 	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x4008658	      0xe84e8dffff	    call sym.operand_type_register_match	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400865d	            0x85c0	                           test eax, eax	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400865f	     0xf843f010000	                            je 0x40087a4	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x4008665	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400866b	          0x83e00c	                            and eax, 0xc	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400866e	          0x83f80c	                            cmp eax, 0xc	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x4008671	            0x7529	                           jne 0x400869c	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x4008673	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x4008677	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400867b	          0x4889d1	                            mov rcx, rdx	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400867e	    0x488b15000000	            mov rdx, qword [0x04008685] 	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x4008685	          0x4889c6	                            mov rsi, rax	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x4008688	    0x488b3d000000	            mov rdi, qword [0x0400868f] 	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400868f	      0xe8178dffff	    call sym.operand_type_register_match	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x4008694	            0x85c0	                           test eax, eax	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x4008696	     0xf8408010000	                            je 0x40087a4	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400869c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x40086a0	    0x488b35000000	            mov rsi, qword [0x040086a7] 	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x40086a7	          0x4889c7	                            mov rdi, rax	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x40086aa	      0xe8f88bffff	             call sym.operand_type_match	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x40086af	            0x85c0	                           test eax, eax	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x40086b1	     0xf84f0000000	                            je 0x40087a7	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x40086b7	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x40086bd	          0x83e005	                              and eax, 5	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x40086c0	          0x83f805	                              cmp eax, 5	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x40086c3	            0x7529	                           jne 0x40086ee	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x40086c5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x40086c9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x40086cd	          0x4889d1	                            mov rcx, rdx	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x40086d0	    0x488b15000000	            mov rdx, qword [0x040086d7] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x40086d7	          0x4889c6	                            mov rsi, rax	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x40086da	    0x488b3d000000	            mov rdi, qword [0x040086e1] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x40086e1	      0xe8c58cffff	    call sym.operand_type_register_match	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x40086e6	            0x85c0	                           test eax, eax	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x40086e8	     0xf84b9000000	                            je 0x40087a7	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x40086ee	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      5609	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x40086f4	          0x83e006	                              and eax, 6	      5609	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x40086f7	          0x83f806	                              cmp eax, 6	      5609	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x40086fa	            0x752e	                           jne 0x400872a	      5609	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x40086fc	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x4008700	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x4008704	          0x4889d1	                            mov rcx, rdx	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x4008707	    0x488b15000000	            mov rdx, qword [0x0400870e] 	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400870e	          0x4889c6	                            mov rsi, rax	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x4008711	    0x488b3d000000	            mov rdi, qword [0x04008718] 	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x4008718	      0xe88e8cffff	    call sym.operand_type_register_match	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400871d	            0x85c0	                           test eax, eax	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400871f	     0xf8482000000	                            je 0x40087a7	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x4008725	            0xeb03	                           jmp 0x400872a	      5615	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x4008727	              0x90	                                     nop	      5484	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x4008728	            0xeb01	                           jmp 0x400872b	      5484	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x400872a	              0x90	                                     nop	      5615	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400872b	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      5621	tc-i386.c	FUNCTION_77	FOR_1	IF_40
0x4008732	            0x750c	                           jne 0x4008740	      5621	tc-i386.c	FUNCTION_77	FOR_1	IF_40
0x4008734	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      5623	tc-i386.c	FUNCTION_77	FOR_1	IF_40
0x400873e	            0xeb68	                           jmp 0x40087a8	      5624	tc-i386.c	FUNCTION_77	FOR_1	IF_40
0x4008740	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5628	tc-i386.c	FUNCTION_77	FOR_1	IF_41	CALL_35
0x4008747	          0x4889c7	                            mov rdi, rax	      5628	tc-i386.c	FUNCTION_77	FOR_1	IF_41	CALL_35
0x400874a	      0xe85ee7ffff	              call sym.check_VecOperands	      5628	tc-i386.c	FUNCTION_77	FOR_1	IF_41	CALL_35
0x400874f	            0x85c0	                           test eax, eax	      5628	tc-i386.c	FUNCTION_77	FOR_1	IF_41	CALL_35
0x4008751	            0x7513	                           jne 0x4008766	      5628	tc-i386.c	FUNCTION_77	FOR_1	IF_41	CALL_35
0x4008753	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5628	tc-i386.c	FUNCTION_77	FOR_1	IF_41	CALL_35
0x400875a	          0x4889c7	                            mov rdi, rax	      5628	tc-i386.c	FUNCTION_77	FOR_1	IF_41	CALL_35
0x400875d	      0xe83bf1ffff	             call sym.VEX_check_operands	      5628	tc-i386.c	FUNCTION_77	FOR_1	IF_41	CALL_35
0x4008762	            0x85c0	                           test eax, eax	      5628	tc-i386.c	FUNCTION_77	FOR_1	IF_41	CALL_35
0x4008764	            0x7467	                            je 0x40087cd	      5628	tc-i386.c	FUNCTION_77	FOR_1	IF_41	CALL_35
0x4008766	    0x8b0500000000	            mov eax, dword [0x0400876c] 	      5630	tc-i386.c	FUNCTION_77	FOR_1	IF_41
0x400876c	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	      5630	tc-i386.c	FUNCTION_77	FOR_1	IF_41
0x4008772	            0xeb34	                           jmp 0x40087a8	      5631	tc-i386.c	FUNCTION_77	FOR_1	IF_41
0x4008774	              0x90	                                     nop	      5335	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x4008775	            0xeb31	                           jmp 0x40087a8	      5335	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x4008777	              0x90	                                     nop	      5342	tc-i386.c	FUNCTION_77	FOR_1	IF_10
0x4008778	            0xeb2e	                           jmp 0x40087a8	      5342	tc-i386.c	FUNCTION_77	FOR_1	IF_10
0x400877a	              0x90	                                     nop	      5347	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x400877b	            0xeb2b	                           jmp 0x40087a8	      5347	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x400877d	              0x90	                                     nop	      5355	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x400877e	            0xeb28	                           jmp 0x40087a8	      5355	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4008780	              0x90	                                     nop	      5366	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4008781	            0xeb25	                           jmp 0x40087a8	      5366	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4008783	              0x90	                                     nop	      5374	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4008784	            0xeb22	                           jmp 0x40087a8	      5374	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4008786	              0x90	                                     nop	      5377	tc-i386.c	FUNCTION_77	FOR_1	IF_15
0x4008787	            0xeb1f	                           jmp 0x40087a8	      5377	tc-i386.c	FUNCTION_77	FOR_1	IF_15
0x4008789	              0x90	                                     nop	      5395	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400878a	            0xeb1c	                           jmp 0x40087a8	      5395	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400878c	              0x90	                                     nop	      5408	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400878d	            0xeb19	                           jmp 0x40087a8	      5408	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400878f	              0x90	                                     nop	      5466	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x4008790	            0xeb16	                           jmp 0x40087a8	      5466	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x4008792	              0x90	                                     nop	      5494	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x4008793	            0xeb13	                           jmp 0x40087a8	      5494	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x4008795	              0x90	                                     nop	      5502	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4008796	            0xeb10	                           jmp 0x40087a8	      5502	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4008798	              0x90	                                     nop	      5514	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4008799	            0xeb0d	                           jmp 0x40087a8	      5514	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400879b	              0x90	                                     nop	      5529	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400879c	            0xeb0a	                           jmp 0x40087a8	      5529	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400879e	              0x90	                                     nop	      5544	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33
0x400879f	            0xeb07	                           jmp 0x40087a8	      5544	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33
0x40087a1	              0x90	                                     nop	      5584	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37
0x40087a2	            0xeb04	                           jmp 0x40087a8	      5584	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37
0x40087a4	              0x90	                                     nop	      5598	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x40087a5	            0xeb01	                           jmp 0x40087a8	      5598	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x40087a7	              0x90	                                     nop	      5614	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x40087a8	    0x48838540ffff	           add qword [rbp - 0xc0], 0x60 	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x40087b0	    0x488b05000000	            mov rax, qword [0x040087b7] 	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x40087b7	        0x488b4008	                mov rax, qword [rax + 8]	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x40087bb	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x40087c2	     0xf878df3ffff	                            ja 0x4007b55	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x40087c8	            0xeb04	                           jmp 0x40087ce	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x40087ca	              0x90	                                     nop	      5415	tc-i386.c	FUNCTION_77	FOR_1	ELSE_8	IF_18
0x40087cb	            0xeb01	                           jmp 0x40087ce	      5415	tc-i386.c	FUNCTION_77	FOR_1	ELSE_8	IF_18
0x40087cd	              0x90	                                     nop	      5635	tc-i386.c	FUNCTION_77	FOR_1
0x40087ce	    0x488b05000000	            mov rax, qword [0x040087d5] 	      5638	tc-i386.c	FUNCTION_77	IF_42
0x40087d5	        0x488b4008	                mov rax, qword [rax + 8]	      5638	tc-i386.c	FUNCTION_77	IF_42
0x40087d9	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	      5638	tc-i386.c	FUNCTION_77	IF_42
0x40087e0	     0xf856d020000	                           jne 0x4008a53	      5638	tc-i386.c	FUNCTION_77	IF_42
0x40087e6	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40087ed	            0x7508	                           jne 0x40087f7	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40087ef	    0x8b0500000000	            mov eax, dword [0x040087f5] 	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40087f5	            0xeb06	                           jmp 0x40087fd	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40087f7	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40087fd	          0x83f814	                           cmp eax, 0x14	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008800	            0x770c	                            ja 0x400880e	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008802	            0x89c0	                            mov eax, eax	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008804	    0x488b04c50000	                  mov rax, qword [rax*8]	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400880c	            0xffe0	                                 jmp rax	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400880e	      0xba00000000	                              mov edx, 0	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x4008813	      0xbe0d160000	                         mov esi, 0x160d	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x4008818	      0xbf00000000	                              mov edi, 0	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x400881d	      0xe800000000	                          call 0x4008822	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x4008822	      0xbf00000000	                              mov edi, 0	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x4008827	      0xe800000000	                          call 0x400882c	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x400882c	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x4008833	      0xe9dd010000	                           jmp 0x4008a15	      5648	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008838	      0xbf00000000	                              mov edi, 0	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x400883d	      0xe800000000	                          call 0x4008842	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x4008842	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x4008849	      0xe9c7010000	                           jmp 0x4008a15	      5651	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400884e	      0xbf00000000	                              mov edi, 0	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x4008853	      0xe800000000	                          call 0x4008858	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x4008858	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x400885f	      0xe9b1010000	                           jmp 0x4008a15	      5654	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008864	      0xbf00000000	                              mov edi, 0	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x4008869	      0xe800000000	                          call 0x400886e	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x400886e	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x4008875	      0xe99b010000	                           jmp 0x4008a15	      5657	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400887a	      0xbf00000000	                              mov edi, 0	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x400887f	      0xe800000000	                          call 0x4008884	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x4008884	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x400888b	      0xe985010000	                           jmp 0x4008a15	      5660	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008890	      0xbf00000000	                              mov edi, 0	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x4008895	      0xe800000000	                          call 0x400889a	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x400889a	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x40088a1	      0xe96f010000	                           jmp 0x4008a15	      5663	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40088a6	      0xbf00000000	                              mov edi, 0	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x40088ab	      0xe800000000	                          call 0x40088b0	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x40088b0	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x40088b7	      0xe959010000	                           jmp 0x4008a15	      5666	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40088bc	      0xbf00000000	                              mov edi, 0	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x40088c1	      0xe800000000	                          call 0x40088c6	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x40088c6	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x40088cd	      0xe943010000	                           jmp 0x4008a15	      5669	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40088d2	    0x488b05000000	            mov rax, qword [0x040088d9] 	      5672	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40088d9	          0x488b00	                    mov rax, qword [rax]	      5672	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40088dc	          0x488b18	                    mov rbx, qword [rax]	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x40088df	      0xbf00000000	                              mov edi, 0	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x40088e4	      0xe800000000	                          call 0x40088e9	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x40088e9	          0x4889de	                            mov rsi, rbx	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x40088ec	          0x4889c7	                            mov rdi, rax	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x40088ef	      0xb800000000	                              mov eax, 0	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x40088f4	      0xe800000000	                          call 0x40088f9	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x40088f9	      0xb800000000	                              mov eax, 0	      5673	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40088fe	      0xe9db020000	                           jmp 0x4008bde	      5673	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008903	      0xbf00000000	                              mov edi, 0	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x4008908	      0xe800000000	                          call 0x400890d	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x400890d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x4008914	      0xe9fc000000	                           jmp 0x4008a15	      5676	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008919	      0xbf00000000	                              mov edi, 0	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x400891e	      0xe800000000	                          call 0x4008923	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x4008923	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x400892a	      0xe9e6000000	                           jmp 0x4008a15	      5679	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400892f	      0xbf00000000	                              mov edi, 0	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x4008934	      0xe800000000	                          call 0x4008939	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x4008939	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x4008940	      0xe9d0000000	                           jmp 0x4008a15	      5682	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008945	      0xbf00000000	                              mov edi, 0	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x400894a	      0xe800000000	                          call 0x400894f	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x400894f	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x4008956	      0xe9ba000000	                           jmp 0x4008a15	      5685	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400895b	      0xbf00000000	                              mov edi, 0	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x4008960	      0xe800000000	                          call 0x4008965	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x4008965	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x400896c	      0xe9a4000000	                           jmp 0x4008a15	      5688	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008971	      0xbf00000000	                              mov edi, 0	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x4008976	      0xe800000000	                          call 0x400897b	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x400897b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x4008982	      0xe98e000000	                           jmp 0x4008a15	      5691	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008987	      0xbf00000000	                              mov edi, 0	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x400898c	      0xe800000000	                          call 0x4008991	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x4008991	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x4008998	            0xeb7b	                           jmp 0x4008a15	      5694	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400899a	      0xbf00000000	                              mov edi, 0	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x400899f	      0xe800000000	                          call 0x40089a4	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x40089a4	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x40089ab	            0xeb68	                           jmp 0x4008a15	      5697	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40089ad	      0xbf00000000	                              mov edi, 0	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x40089b2	      0xe800000000	                          call 0x40089b7	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x40089b7	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x40089be	            0xeb55	                           jmp 0x4008a15	      5700	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40089c0	      0xbf00000000	                              mov edi, 0	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x40089c5	      0xe800000000	                          call 0x40089ca	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x40089ca	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x40089d1	            0xeb42	                           jmp 0x4008a15	      5703	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40089d3	    0x8b0500000000	            mov eax, dword [0x040089d9] 	      5705	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	IF_43
0x40089d9	            0x85c0	                           test eax, eax	      5705	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	IF_43
0x40089db	            0x7413	                            je 0x40089f0	      5705	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	IF_43
0x40089dd	      0xbf00000000	                              mov edi, 0	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x40089e2	      0xe800000000	                          call 0x40089e7	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x40089e7	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x40089ee	            0xeb25	                           jmp 0x4008a15	      5709	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x40089f0	      0xbf00000000	                              mov edi, 0	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x40089f5	      0xe800000000	                          call 0x40089fa	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x40089fa	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x4008a01	            0xeb12	                           jmp 0x4008a15	      5709	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008a03	      0xbf00000000	                              mov edi, 0	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x4008a08	      0xe800000000	                          call 0x4008a0d	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x4008a0d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x4008a14	              0x90	                                     nop	      5712	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4008a15	    0x488b05000000	            mov rax, qword [0x04008a1c] 	      5715	tc-i386.c	FUNCTION_77	IF_42
0x4008a1c	          0x488b00	                    mov rax, qword [rax]	      5715	tc-i386.c	FUNCTION_77	IF_42
0x4008a1f	          0x488b18	                    mov rbx, qword [rax]	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4008a22	      0xbf00000000	                              mov edi, 0	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4008a27	      0xe800000000	                          call 0x4008a2c	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4008a2c	          0x4889c1	                            mov rcx, rax	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4008a2f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4008a36	          0x4889da	                            mov rdx, rbx	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4008a39	          0x4889c6	                            mov rsi, rax	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4008a3c	          0x4889cf	                            mov rdi, rcx	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4008a3f	      0xb800000000	                              mov eax, 0	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4008a44	      0xe800000000	                          call 0x4008a49	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4008a49	      0xb800000000	                              mov eax, 0	      5716	tc-i386.c	FUNCTION_77	IF_42
0x4008a4e	      0xe98b010000	                           jmp 0x4008bde	      5716	tc-i386.c	FUNCTION_77	IF_42
0x4008a53	    0x8b0500000000	            mov eax, dword [0x04008a59] 	      5719	tc-i386.c	FUNCTION_77	IF_44
0x4008a59	            0x85c0	                           test eax, eax	      5719	tc-i386.c	FUNCTION_77	IF_44
0x4008a5b	     0xf8591000000	                           jne 0x4008af2	      5719	tc-i386.c	FUNCTION_77	IF_44
0x4008a61	    0x8b0500000000	            mov eax, dword [0x04008a67] 	      5721	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a67	            0x85c0	                           test eax, eax	      5721	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a69	            0x753f	                           jne 0x4008aaa	      5721	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a6b	     0xfb605000000	           movzx eax, byte [0x04008a72] 	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a72	            0xd0e8	                               shr al, 1	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a74	            0x89c2	                            mov edx, eax	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a76	          0x83e201	                              and edx, 1	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a79	         0xfb645c3	            movzx eax, byte [rbp - 0x3d]	      5723	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a7d	            0xd0e8	                               shr al, 1	      5723	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a7f	          0x83e001	                              and eax, 1	      5723	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a82	            0x38c2	                              cmp dl, al	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a84	            0x7424	                            je 0x4008aaa	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4008a86	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4008a8d	          0x488b18	                    mov rbx, qword [rax]	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4008a90	      0xbf00000000	                              mov edi, 0	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4008a95	      0xe800000000	                          call 0x4008a9a	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4008a9a	          0x4889de	                            mov rsi, rbx	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4008a9d	          0x4889c7	                            mov rdi, rax	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4008aa0	      0xb800000000	                              mov eax, 0	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4008aa5	      0xe800000000	                          call 0x4008aaa	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4008aaa	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4008ab1	         0xfb6402c	           movzx eax, byte [rax + 0x2c] 	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4008ab5	          0x83e010	                           and eax, 0x10	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4008ab8	            0x84c0	                             test al, al	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4008aba	            0x7436	                            je 0x4008af2	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4008abc	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5729	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4008ac3	         0xfb64029	           movzx eax, byte [rax + 0x29] 	      5729	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4008ac7	          0x83e080	                     and eax, 0xffffff80	      5729	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4008aca	            0x84c0	                             test al, al	      5729	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4008acc	            0x7424	                            je 0x4008af2	      5729	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4008ace	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4008ad5	          0x488b18	                    mov rbx, qword [rax]	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4008ad8	      0xbf00000000	                              mov edi, 0	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4008add	      0xe800000000	                          call 0x4008ae2	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4008ae2	          0x4889de	                            mov rsi, rbx	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4008ae5	          0x4889c7	                            mov rdi, rax	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4008ae8	      0xb800000000	                              mov eax, 0	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4008aed	      0xe800000000	                          call 0x4008af2	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4008af2	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5738	tc-i386.c	FUNCTION_77
0x4008af9	          0x488b10	                    mov rdx, qword [rax]	      5738	tc-i386.c	FUNCTION_77
0x4008afc	    0x488915000000	            mov qword [0x04008b03], rdx 	      5738	tc-i386.c	FUNCTION_77
0x4008b03	        0x488b5008	                mov rdx, qword [rax + 8]	      5738	tc-i386.c	FUNCTION_77
0x4008b07	    0x488915000000	            mov qword [0x04008b0e], rdx 	      5738	tc-i386.c	FUNCTION_77
0x4008b0e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5738	tc-i386.c	FUNCTION_77
0x4008b12	    0x488915000000	            mov qword [0x04008b19], rdx 	      5738	tc-i386.c	FUNCTION_77
0x4008b19	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      5738	tc-i386.c	FUNCTION_77
0x4008b1d	    0x488915000000	            mov qword [0x04008b24], rdx 	      5738	tc-i386.c	FUNCTION_77
0x4008b24	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5738	tc-i386.c	FUNCTION_77
0x4008b28	    0x488915000000	            mov qword [0x04008b2f], rdx 	      5738	tc-i386.c	FUNCTION_77
0x4008b2f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5738	tc-i386.c	FUNCTION_77
0x4008b33	    0x488915000000	            mov qword [0x04008b3a], rdx 	      5738	tc-i386.c	FUNCTION_77
0x4008b3a	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5738	tc-i386.c	FUNCTION_77
0x4008b3e	    0x488915000000	            mov qword [0x04008b45], rdx 	      5738	tc-i386.c	FUNCTION_77
0x4008b45	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5738	tc-i386.c	FUNCTION_77
0x4008b49	    0x488915000000	            mov qword [0x04008b50], rdx 	      5738	tc-i386.c	FUNCTION_77
0x4008b50	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5738	tc-i386.c	FUNCTION_77
0x4008b54	    0x488915000000	            mov qword [0x04008b5b], rdx 	      5738	tc-i386.c	FUNCTION_77
0x4008b5b	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      5738	tc-i386.c	FUNCTION_77
0x4008b5f	    0x488915000000	            mov qword [0x04008b66], rdx 	      5738	tc-i386.c	FUNCTION_77
0x4008b66	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      5738	tc-i386.c	FUNCTION_77
0x4008b6a	    0x488915000000	            mov qword [0x04008b71], rdx 	      5738	tc-i386.c	FUNCTION_77
0x4008b71	        0x488b4058	            mov rax, qword [rax + 0x58] 	      5738	tc-i386.c	FUNCTION_77
0x4008b75	    0x488905000000	            mov qword [0x04008b7c], rax 	      5738	tc-i386.c	FUNCTION_77
0x4008b7c	    0x83bd2cffffff	cmp dword [rbp - 0xd4], 0xffffffffffffffff	      5740	tc-i386.c	FUNCTION_77	IF_47
0x4008b83	            0x7421	                            je 0x4008ba6	      5740	tc-i386.c	FUNCTION_77	IF_47
0x4008b85	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      5742	tc-i386.c	FUNCTION_77	IF_47
0x4008b8b	            0x4898	                                    cdqe	      5742	tc-i386.c	FUNCTION_77	IF_47
0x4008b8d	        0x488d5006	                      lea rdx, [rax + 6]	      5742	tc-i386.c	FUNCTION_77	IF_47
0x4008b91	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      5742	tc-i386.c	FUNCTION_77	IF_47
0x4008b97	            0x4898	                                    cdqe	      5742	tc-i386.c	FUNCTION_77	IF_47
0x4008b99	      0x488b44c5c0	     mov rax, qword [rbp + rax*8 - 0x40]	      5742	tc-i386.c	FUNCTION_77	IF_47
0x4008b9e	    0x488904d50000	                  mov qword [rdx*8], rax	      5742	tc-i386.c	FUNCTION_77	IF_47
0x4008ba6	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      5744	tc-i386.c	FUNCTION_77	IF_48
0x4008bad	            0x7428	                            je 0x4008bd7	      5744	tc-i386.c	FUNCTION_77	IF_48
0x4008baf	    0x8b0500000000	            mov eax, dword [0x04008bb5] 	      5750	tc-i386.c	FUNCTION_77	IF_48
0x4008bb5	    0x338528ffffff	             xor eax, dword [rbp - 0xd8]	      5750	tc-i386.c	FUNCTION_77	IF_48
0x4008bbb	    0x890500000000	            mov dword [0x04008bc1], eax 	      5750	tc-i386.c	FUNCTION_77	IF_48
0x4008bc1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5752	tc-i386.c	FUNCTION_77	IF_48
0x4008bc5	    0x488905000000	            mov qword [0x04008bcc], rax 	      5752	tc-i386.c	FUNCTION_77	IF_48
0x4008bcc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5753	tc-i386.c	FUNCTION_77	IF_48
0x4008bd0	    0x488905000000	            mov qword [0x04008bd7], rax 	      5753	tc-i386.c	FUNCTION_77	IF_48
0x4008bd7	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5756	tc-i386.c	FUNCTION_77
0x4008bde	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      5757	tc-i386.c	FUNCTION_77
0x4008be2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5757	tc-i386.c	FUNCTION_77
0x4008beb	            0x7405	                            je 0x4008bf2	      5757	tc-i386.c	FUNCTION_77
0x4008bed	      0xe800000000	                          call 0x4008bf2	      5757	tc-i386.c	FUNCTION_77
0x4008bf2	    0x4881c4e80000	                           add rsp, 0xe8	      5757	tc-i386.c	FUNCTION_77
0x4008bf9	              0x5b	                                 pop rbx	      5757	tc-i386.c	FUNCTION_77
0x4008bfa	              0x5d	                                 pop rbp	      5757	tc-i386.c	FUNCTION_77
0x4008bfb	              0xc3	                                     ret	      5757	tc-i386.c	FUNCTION_77
md_undefined_symbol	CALL,5:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,3:ELSE,0:DO,0	52
0x40138ee	              0x55	                                push rbp	     11179	tc-i386.c	FUNCTION_129
0x40138ef	          0x4889e5	                            mov rbp, rsp	     11179	tc-i386.c	FUNCTION_129
0x40138f2	        0x4883ec10	                           sub rsp, 0x10	     11179	tc-i386.c	FUNCTION_129
0x40138f6	        0x48897df8	                mov qword [rbp - 8], rdi	     11179	tc-i386.c	FUNCTION_129
0x40138fa	        0x488b45f8	                mov rax, qword [rbp - 8]	     11180	tc-i386.c	
0x40138fe	           0xfb600	                   movzx eax, byte [rax]	     11180	tc-i386.c	
0x4013901	      0xba5f000000	                           mov edx, 0x5f	     11180	tc-i386.c	
0x4013906	            0x38d0	                              cmp al, dl	     11180	tc-i386.c	
0x4013908	     0xf85a0000000	                           jne 0x40139ae	     11180	tc-i386.c	
0x401390e	        0x488b45f8	                mov rax, qword [rbp - 8]	     11181	tc-i386.c	
0x4013912	        0x4883c001	                              add rax, 1	     11181	tc-i386.c	
0x4013916	           0xfb600	                   movzx eax, byte [rax]	     11181	tc-i386.c	
0x4013919	      0xba47000000	                           mov edx, 0x47	     11181	tc-i386.c	
0x401391e	            0x38d0	                              cmp al, dl	     11181	tc-i386.c	
0x4013920	     0xf8588000000	                           jne 0x40139ae	     11181	tc-i386.c	
0x4013926	        0x488b45f8	                mov rax, qword [rbp - 8]	     11182	tc-i386.c	
0x401392a	        0x4883c002	                              add rax, 2	     11182	tc-i386.c	
0x401392e	           0xfb600	                   movzx eax, byte [rax]	     11182	tc-i386.c	
0x4013931	      0xba4c000000	                           mov edx, 0x4c	     11182	tc-i386.c	
0x4013936	            0x38d0	                              cmp al, dl	     11182	tc-i386.c	
0x4013938	            0x7574	                           jne 0x40139ae	     11182	tc-i386.c	
0x401393a	        0x488b45f8	                mov rax, qword [rbp - 8]	     11183	tc-i386.c	
0x401393e	      0xbe00000000	                              mov esi, 0	     11183	tc-i386.c	
0x4013943	          0x4889c7	                            mov rdi, rax	     11183	tc-i386.c	
0x4013946	      0xe800000000	                          call 0x401394b	     11183	tc-i386.c	
0x401394b	            0x85c0	                           test eax, eax	     11183	tc-i386.c	
0x401394d	            0x755f	                           jne 0x40139ae	     11183	tc-i386.c	
0x401394f	    0x488b05000000	            mov rax, qword [0x04013956] 	     11185	tc-i386.c	FUNCTION_130
0x4013956	          0x4885c0	                           test rax, rax	     11185	tc-i386.c	FUNCTION_130
0x4013959	            0x754a	                           jne 0x40139a5	     11185	tc-i386.c	FUNCTION_130
0x401395b	        0x488b45f8	                mov rax, qword [rbp - 8]	     11187	tc-i386.c	FUNCTION_130	IF_1
0x401395f	          0x4889c7	                            mov rdi, rax	     11187	tc-i386.c	FUNCTION_130	IF_1
0x4013962	      0xe800000000	                          call 0x4013967	     11187	tc-i386.c	FUNCTION_130	IF_1
0x4013967	          0x4885c0	                           test rax, rax	     11187	tc-i386.c	FUNCTION_130	IF_1
0x401396a	            0x7417	                            je 0x4013983	     11187	tc-i386.c	FUNCTION_130	IF_1
0x401396c	      0xbf00000000	                              mov edi, 0	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4013971	      0xe800000000	                          call 0x4013976	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4013976	          0x4889c7	                            mov rdi, rax	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4013979	      0xb800000000	                              mov eax, 0	     11188	tc-i386.c	FUNCTION_130	IF_1
0x401397e	      0xe800000000	                          call 0x4013983	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4013983	        0x488b45f8	                mov rax, qword [rbp - 8]	     11189	tc-i386.c	FUNCTION_130	IF_1
0x4013987	      0xb900000000	                              mov ecx, 0	     11189	tc-i386.c	FUNCTION_130	IF_1
0x401398c	      0xba00000000	                              mov edx, 0	     11189	tc-i386.c	FUNCTION_130	IF_1
0x4013991	      0xbe00000000	                              mov esi, 0	     11189	tc-i386.c	FUNCTION_130	IF_1
0x4013996	          0x4889c7	                            mov rdi, rax	     11189	tc-i386.c	FUNCTION_130	IF_1
0x4013999	      0xe800000000	                          call 0x401399e	     11189	tc-i386.c	FUNCTION_130	IF_1
0x401399e	    0x488905000000	            mov qword [0x040139a5], rax 	     11189	tc-i386.c	FUNCTION_130	IF_1
0x40139a5	    0x488b05000000	            mov rax, qword [0x040139ac] 	     11192	tc-i386.c	FUNCTION_130	IF_1
0x40139ac	            0xeb05	                           jmp 0x40139b3	     11192	tc-i386.c	FUNCTION_130	IF_1
0x40139ae	      0xb800000000	                              mov eax, 0	     11194	tc-i386.c	FUNCTION_130	IF_1
0x40139b3	              0xc9	                                   leave	     11195	tc-i386.c	FUNCTION_130	IF_1
0x40139b4	              0xc3	                                     ret	     11195	tc-i386.c	FUNCTION_130	IF_1
fits_in_unsigned_long	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	9
0x4001737	              0x55	                                push rbp	      2183	tc-i386.c	FUNCTION_35
0x4001738	          0x4889e5	                            mov rbp, rsp	      2183	tc-i386.c	FUNCTION_35
0x400173b	        0x48897df8	                mov qword [rbp - 8], rdi	      2183	tc-i386.c	FUNCTION_35
0x400173f	      0xb8ffffffff	                     mov eax, 0xffffffff	      2187	tc-i386.c	FUNCTION_35
0x4001744	        0x483945f8	                cmp qword [rbp - 8], rax	      2187	tc-i386.c	FUNCTION_35
0x4001748	           0xf96c0	                                setbe al	      2187	tc-i386.c	FUNCTION_35
0x400174b	           0xfb6c0	                           movzx eax, al	      2187	tc-i386.c	FUNCTION_35
0x400174e	              0x5d	                                 pop rbp	      2189	tc-i386.c	FUNCTION_35
0x400174f	              0xc3	                                     ret	      2189	tc-i386.c	FUNCTION_35
operand_type_match	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,0:DO,0	77
0x40012a7	              0x55	                                push rbp	      2046	tc-i386.c	FUNCTION_26
0x40012a8	          0x4889e5	                            mov rbp, rsp	      2046	tc-i386.c	FUNCTION_26
0x40012ab	        0x4883ec30	                           sub rsp, 0x30	      2046	tc-i386.c	FUNCTION_26
0x40012af	        0x48897de0	             mov qword [rbp - 0x20], rdi	      2046	tc-i386.c	FUNCTION_26
0x40012b3	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2046	tc-i386.c	FUNCTION_26
0x40012b7	    0x64488b042528	                mov rax, qword fs:[0x28]	      2046	tc-i386.c	FUNCTION_26
0x40012c0	        0x488945f8	                mov qword [rbp - 8], rax	      2046	tc-i386.c	FUNCTION_26
0x40012c4	            0x31c0	                            xor eax, eax	      2046	tc-i386.c	FUNCTION_26
0x40012c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2047	tc-i386.c	FUNCTION_26
0x40012ca	        0x488945f0	             mov qword [rbp - 0x10], rax	      2047	tc-i386.c	FUNCTION_26
0x40012ce	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	      2049	tc-i386.c	FUNCTION_26
0x40012d2	          0x83e0fd	                     and eax, 0xfffffffd	      2049	tc-i386.c	FUNCTION_26
0x40012d5	          0x8845f3	                mov byte [rbp - 0xd], al	      2049	tc-i386.c	FUNCTION_26
0x40012d8	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2050	tc-i386.c	FUNCTION_26
0x40012dc	          0x83e0bf	                     and eax, 0xffffffbf	      2050	tc-i386.c	FUNCTION_26
0x40012df	          0x8845f4	                mov byte [rbp - 0xc], al	      2050	tc-i386.c	FUNCTION_26
0x40012e2	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	      2051	tc-i386.c	FUNCTION_26
0x40012e6	          0x83e0df	                     and eax, 0xffffffdf	      2051	tc-i386.c	FUNCTION_26
0x40012e9	          0x8845f3	                mov byte [rbp - 0xd], al	      2051	tc-i386.c	FUNCTION_26
0x40012ec	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	      2052	tc-i386.c	FUNCTION_26
0x40012f0	          0x83e0bf	                     and eax, 0xffffffbf	      2052	tc-i386.c	FUNCTION_26
0x40012f3	          0x8845f3	                mov byte [rbp - 0xd], al	      2052	tc-i386.c	FUNCTION_26
0x40012f6	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	      2053	tc-i386.c	FUNCTION_26
0x40012fa	          0x83e07f	                           and eax, 0x7f	      2053	tc-i386.c	FUNCTION_26
0x40012fd	          0x8845f3	                mov byte [rbp - 0xd], al	      2053	tc-i386.c	FUNCTION_26
0x4001300	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2054	tc-i386.c	FUNCTION_26
0x4001304	          0x83e0fe	                     and eax, 0xfffffffe	      2054	tc-i386.c	FUNCTION_26
0x4001307	          0x8845f4	                mov byte [rbp - 0xc], al	      2054	tc-i386.c	FUNCTION_26
0x400130a	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2055	tc-i386.c	FUNCTION_26
0x400130e	          0x83e0fd	                     and eax, 0xfffffffd	      2055	tc-i386.c	FUNCTION_26
0x4001311	          0x8845f4	                mov byte [rbp - 0xc], al	      2055	tc-i386.c	FUNCTION_26
0x4001314	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2056	tc-i386.c	FUNCTION_26
0x4001318	          0x83e0fb	                     and eax, 0xfffffffb	      2056	tc-i386.c	FUNCTION_26
0x400131b	          0x8845f4	                mov byte [rbp - 0xc], al	      2056	tc-i386.c	FUNCTION_26
0x400131e	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2057	tc-i386.c	FUNCTION_26
0x4001322	          0x83e0f7	                     and eax, 0xfffffff7	      2057	tc-i386.c	FUNCTION_26
0x4001325	          0x8845f4	                mov byte [rbp - 0xc], al	      2057	tc-i386.c	FUNCTION_26
0x4001328	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2058	tc-i386.c	FUNCTION_26
0x400132c	          0x83e0ef	                     and eax, 0xffffffef	      2058	tc-i386.c	FUNCTION_26
0x400132f	          0x8845f4	                mov byte [rbp - 0xc], al	      2058	tc-i386.c	FUNCTION_26
0x4001332	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2059	tc-i386.c	FUNCTION_26
0x4001336	          0x83e0df	                     and eax, 0xffffffdf	      2059	tc-i386.c	FUNCTION_26
0x4001339	          0x8845f4	                mov byte [rbp - 0xc], al	      2059	tc-i386.c	FUNCTION_26
0x400133c	        0x488d45f0	                   lea rax, [rbp - 0x10]	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x4001340	          0x4889c7	                            mov rdi, rax	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x4001343	      0xe88ff1ffff	          call sym.operand_type_all_zero	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x4001348	            0x85c0	                           test eax, eax	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x400134a	            0x7539	                           jne 0x4001385	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x400134c	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4001350	          0xc0e806	                               shr al, 6	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4001353	            0x89c2	                            mov edx, eax	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4001355	          0x83e201	                              and edx, 1	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4001358	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400135c	          0xc0e806	                               shr al, 6	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400135f	          0x83e001	                              and eax, 1	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4001362	            0x38c2	                              cmp dl, al	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4001364	            0x7520	                           jne 0x4001386	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4001366	         0xfb645d3	            movzx eax, byte [rbp - 0x2d]	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400136a	            0xd0e8	                               shr al, 1	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400136c	            0x89c2	                            mov edx, eax	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400136e	          0x83e201	                              and edx, 1	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4001371	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4001375	            0xd0e8	                               shr al, 1	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4001377	          0x83e001	                              and eax, 1	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400137a	            0x38c2	                              cmp dl, al	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400137c	            0x7508	                           jne 0x4001386	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400137e	      0xb801000000	                              mov eax, 1	      2065	tc-i386.c	FUNCTION_26	IF_2
0x4001383	            0xeb10	                           jmp 0x4001395	      2065	tc-i386.c	FUNCTION_26	IF_2
0x4001385	              0x90	                                     nop	      2061	tc-i386.c	FUNCTION_26	IF_1
0x4001386	    0xc70500000000	               mov dword [0x04001390], 1	      2068	tc-i386.c	FUNCTION_26
0x4001390	      0xb800000000	                              mov eax, 0	      2069	tc-i386.c	FUNCTION_26
0x4001395	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2070	tc-i386.c	FUNCTION_26
0x4001399	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2070	tc-i386.c	FUNCTION_26
0x40013a2	            0x7405	                            je 0x40013a9	      2070	tc-i386.c	FUNCTION_26
0x40013a4	      0xe800000000	                          call 0x40013a9	      2070	tc-i386.c	FUNCTION_26
0x40013a9	              0xc9	                                   leave	      2070	tc-i386.c	FUNCTION_26
0x40013aa	              0xc3	                                     ret	      2070	tc-i386.c	FUNCTION_26
check_long_reg	CALL,8:FOR,1:WHILE,0:functions,0:SWITCH,0:IF,6:ELSE,4:DO,0	233
0x4009a29	              0x55	                                push rbp	      6162	tc-i386.c	FUNCTION_81
0x4009a2a	          0x4889e5	                            mov rbp, rsp	      6162	tc-i386.c	FUNCTION_81
0x4009a2d	            0x4157	                                push r15	      6162	tc-i386.c	FUNCTION_81
0x4009a2f	            0x4156	                                push r14	      6162	tc-i386.c	FUNCTION_81
0x4009a31	            0x4155	                                push r13	      6162	tc-i386.c	FUNCTION_81
0x4009a33	            0x4154	                                push r12	      6162	tc-i386.c	FUNCTION_81
0x4009a35	              0x53	                                push rbx	      6162	tc-i386.c	FUNCTION_81
0x4009a36	        0x4883ec18	                           sub rsp, 0x18	      6162	tc-i386.c	FUNCTION_81
0x4009a3a	    0x8b0500000000	            mov eax, dword [0x04009a40] 	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4009a40	          0x8945cc	             mov dword [rbp - 0x34], eax	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4009a43	      0xe941030000	                           jmp 0x4009d89	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4009a48	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x4009a4b	            0x4898	                                    cdqe	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x4009a4d	        0x4883c00e	                            add rax, 0xe	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x4009a51	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x4009a59	          0x83e001	                              and eax, 1	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x4009a5c	            0x84c0	                             test al, al	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x4009a5e	            0x7505	                           jne 0x4009a65	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x4009a60	      0xe924030000	                           jmp 0x4009d89	      6168	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x4009a65	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a68	            0x4898	                                    cdqe	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a6a	        0x4883c00e	                            add rax, 0xe	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a6e	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a76	          0xc0e805	                               shr al, 5	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a79	          0x83e001	                              and eax, 1	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a7c	            0x84c0	                             test al, al	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a7e	     0xf84c4000000	                            je 0x4009b48	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a84	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a87	            0x4898	                                    cdqe	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a89	        0x4883c006	                              add rax, 6	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a8d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a95	          0x83e001	                              and eax, 1	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a98	            0x84c0	                             test al, al	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a9a	            0x751f	                           jne 0x4009abb	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a9c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009a9f	            0x4898	                                    cdqe	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009aa1	        0x4883c006	                              add rax, 6	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009aa5	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009aad	          0xc0e805	                               shr al, 5	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009ab0	          0x83e001	                              and eax, 1	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009ab3	            0x84c0	                             test al, al	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009ab5	     0xf848d000000	                            je 0x4009b48	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009abb	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009abe	            0x4898	                                    cdqe	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009ac0	        0x4883c006	                              add rax, 6	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009ac4	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009acc	          0xc0e806	                               shr al, 6	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009acf	          0x83e001	                              and eax, 1	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009ad2	            0x84c0	                             test al, al	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009ad4	            0x7518	                           jne 0x4009aee	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009ad6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6175	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009ad9	            0x4898	                                    cdqe	      6175	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009adb	        0x4883c006	                              add rax, 6	      6175	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009adf	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6175	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009ae7	          0xc0e807	                               shr al, 7	      6175	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009aea	            0x84c0	                             test al, al	      6175	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009aec	            0x745a	                            je 0x4009b48	      6175	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009aee	     0xfb605000000	           movzx eax, byte [0x04009af5] 	      6181	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009af5	        0x440fbef0	                          movsx r14d, al	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009af9	    0x4c8b2d000000	            mov r13, qword [0x04009b00] 	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b00	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6179	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009b03	            0x4898	                                    cdqe	      6179	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009b05	        0x4883c014	                           add rax, 0x14	      6179	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009b09	    0x488b04c50000	                  mov rax, qword [rax*8]	      6179	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009b11	          0x4c8b20	                    mov r12, qword [rax]	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b14	    0x488b1d000000	            mov rbx, qword [0x04009b1b] 	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b1b	      0xbf00000000	                              mov edi, 0	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b20	      0xe800000000	                          call 0x4009b25	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b25	          0x4589f0	                           mov r8d, r14d	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b28	          0x4c89e9	                            mov rcx, r13	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b2b	          0x4c89e2	                            mov rdx, r12	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b2e	          0x4889de	                            mov rsi, rbx	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b31	          0x4889c7	                            mov rdi, rax	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b34	      0xb800000000	                              mov eax, 0	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b39	      0xe800000000	                          call 0x4009b3e	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4009b3e	      0xb800000000	                              mov eax, 0	      6182	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009b43	      0xe954020000	                           jmp 0x4009d9c	      6182	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4009b48	    0x8b0500000000	            mov eax, dword [0x04009b4e] 	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b4e	            0x85c0	                           test eax, eax	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b50	            0x740f	                            je 0x4009b61	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b52	    0x8b0500000000	            mov eax, dword [0x04009b58] 	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b58	          0x83f802	                              cmp eax, 2	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b5b	     0xf853f010000	                           jne 0x4009ca0	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b61	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b64	            0x4898	                                    cdqe	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b66	        0x4883c00e	                            add rax, 0xe	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b6a	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b72	          0xc0e806	                               shr al, 6	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b75	          0x83e001	                              and eax, 1	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b78	            0x84c0	                             test al, al	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b7a	     0xf8420010000	                            je 0x4009ca0	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b80	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b83	            0x4898	                                    cdqe	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b85	        0x4883c006	                              add rax, 6	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b89	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b91	          0x83e001	                              and eax, 1	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b94	            0x84c0	                             test al, al	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b96	            0x751f	                           jne 0x4009bb7	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b98	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b9b	            0x4898	                                    cdqe	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009b9d	        0x4883c006	                              add rax, 6	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009ba1	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009ba9	          0xc0e805	                               shr al, 5	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009bac	          0x83e001	                              and eax, 1	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009baf	            0x84c0	                             test al, al	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009bb1	     0xf84e9000000	                            je 0x4009ca0	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009bb7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009bba	            0x4898	                                    cdqe	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009bbc	        0x4883c006	                              add rax, 6	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009bc0	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009bc8	          0xc0e807	                               shr al, 7	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009bcb	            0x84c0	                             test al, al	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009bcd	     0xf84cd000000	                            je 0x4009ca0	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009bd3	    0x8b0500000000	            mov eax, dword [0x04009bd9] 	      6193	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x4009bd9	          0x83f802	                              cmp eax, 2	      6193	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x4009bdc	            0x7550	                           jne 0x4009c2e	      6193	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x4009bde	     0xfb605000000	           movzx eax, byte [0x04009be5] 	      6197	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x4009be5	        0x440fbee8	                          movsx r13d, al	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x4009be9	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6196	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x4009bec	            0x4898	                                    cdqe	      6196	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x4009bee	        0x4883c014	                           add rax, 0x14	      6196	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x4009bf2	    0x488b04c50000	                  mov rax, qword [rax*8]	      6196	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x4009bfa	          0x4c8b20	                    mov r12, qword [rax]	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x4009bfd	    0x488b1d000000	            mov rbx, qword [0x04009c04] 	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x4009c04	      0xbf00000000	                              mov edi, 0	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x4009c09	      0xe800000000	                          call 0x4009c0e	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x4009c0e	          0x4489e9	                           mov ecx, r13d	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x4009c11	          0x4c89e2	                            mov rdx, r12	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x4009c14	          0x4889de	                            mov rsi, rbx	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x4009c17	          0x4889c7	                            mov rdi, rax	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x4009c1a	      0xb800000000	                              mov eax, 0	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x4009c1f	      0xe800000000	                          call 0x4009c24	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x4009c24	      0xb800000000	                              mov eax, 0	      6198	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x4009c29	      0xe96e010000	                           jmp 0x4009d9c	      6198	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x4009c2e	     0xfb605000000	           movzx eax, byte [0x04009c35] 	      6204	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009c35	        0x440fbef8	                          movsx r15d, al	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c39	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6204	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009c3c	            0x4898	                                    cdqe	      6204	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009c3e	        0x4883c014	                           add rax, 0x14	      6204	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009c42	    0x488b04c50000	                  mov rax, qword [rax*8]	      6204	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009c4a	          0x4c8b30	                    mov r14, qword [rax]	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c4d	    0x4c8b2d000000	            mov r13, qword [0x04009c54] 	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c54	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6203	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009c57	            0x4898	                                    cdqe	      6203	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009c59	        0x4883c014	                           add rax, 0x14	      6203	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009c5d	    0x488b04c50000	                  mov rax, qword [rax*8]	      6203	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009c65	    0x480580010000	                          add rax, 0x180	      6203	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4009c6b	          0x4c8b20	                    mov r12, qword [rax]	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c6e	    0x488b1d000000	            mov rbx, qword [0x04009c75] 	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c75	      0xbf00000000	                              mov edi, 0	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c7a	      0xe800000000	                          call 0x4009c7f	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c7f	          0x4589f9	                           mov r9d, r15d	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c82	          0x4d89f0	                             mov r8, r14	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c85	          0x4c89e9	                            mov rcx, r13	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c88	          0x4c89e2	                            mov rdx, r12	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c8b	          0x4889de	                            mov rsi, rbx	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c8e	          0x4889c7	                            mov rdi, rax	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c91	      0xb800000000	                              mov eax, 0	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c96	      0xe800000000	                          call 0x4009c9b	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009c9b	      0xe9e9000000	                           jmp 0x4009d89	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4009ca0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009ca3	            0x4898	                                    cdqe	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009ca5	        0x4883c00e	                            add rax, 0xe	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009ca9	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cb1	            0xd0e8	                               shr al, 1	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cb3	          0x83e001	                              and eax, 1	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cb6	            0x84c0	                             test al, al	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cb8	     0xf84cb000000	                            je 0x4009d89	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cbe	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cc1	            0x4898	                                    cdqe	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cc3	        0x4883c006	                              add rax, 6	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cc7	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009ccf	          0x83e001	                              and eax, 1	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cd2	            0x84c0	                             test al, al	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cd4	            0x751f	                           jne 0x4009cf5	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cd6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cd9	            0x4898	                                    cdqe	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cdb	        0x4883c006	                              add rax, 6	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cdf	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009ce7	          0xc0e805	                               shr al, 5	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cea	          0x83e001	                              and eax, 1	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009ced	            0x84c0	                             test al, al	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cef	     0xf8494000000	                            je 0x4009d89	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cf5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cf8	            0x4898	                                    cdqe	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cfa	        0x4883c006	                              add rax, 6	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009cfe	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009d06	          0xc0e807	                               shr al, 7	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009d09	            0x84c0	                             test al, al	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009d0b	            0x747c	                            je 0x4009d89	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x4009d0d	    0x8b0500000000	            mov eax, dword [0x04009d13] 	      6213	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d13	            0x85c0	                           test eax, eax	      6213	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d15	            0x7425	                            je 0x4009d3c	      6213	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d17	     0xfb605000000	           movzx eax, byte [0x04009d1e] 	      6214	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d1e	          0x83e004	                              and eax, 4	      6214	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d21	            0x84c0	                             test al, al	      6214	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d23	            0x7417	                            je 0x4009d3c	      6214	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d25	     0xfb605000000	           movzx eax, byte [0x04009d2c] 	      6215	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d2c	          0x83e004	                              and eax, 4	      6215	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d2f	            0x84c0	                             test al, al	      6215	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d31	            0x7509	                           jne 0x4009d3c	      6215	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d33	    0xc60500000000	            mov byte [0x04009d3a], 0x71 	      6218	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d3a	            0xeb4d	                           jmp 0x4009d89	      6218	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4009d3c	     0xfb605000000	           movzx eax, byte [0x04009d43] 	      6224	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4
0x4009d43	        0x440fbee8	                          movsx r13d, al	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4009d47	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6223	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4
0x4009d4a	            0x4898	                                    cdqe	      6223	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4
0x4009d4c	        0x4883c014	                           add rax, 0x14	      6223	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4
0x4009d50	    0x488b04c50000	                  mov rax, qword [rax*8]	      6223	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4
0x4009d58	          0x4c8b20	                    mov r12, qword [rax]	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4009d5b	    0x488b1d000000	            mov rbx, qword [0x04009d62] 	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4009d62	      0xbf00000000	                              mov edi, 0	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4009d67	      0xe800000000	                          call 0x4009d6c	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4009d6c	          0x4489e9	                           mov ecx, r13d	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4009d6f	          0x4c89e2	                            mov rdx, r12	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4009d72	          0x4889de	                            mov rsi, rbx	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4009d75	          0x4889c7	                            mov rdi, rax	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4009d78	      0xb800000000	                              mov eax, 0	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4009d7d	      0xe800000000	                          call 0x4009d82	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4009d82	      0xb800000000	                              mov eax, 0	      6225	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4
0x4009d87	            0xeb13	                           jmp 0x4009d9c	      6225	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4
0x4009d89	        0x836dcc01	               sub dword [rbp - 0x34], 1	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4009d8d	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4009d91	     0xf89b1fcffff	                           jns 0x4009a48	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4009d97	      0xb801000000	                              mov eax, 1	      6228	tc-i386.c	FUNCTION_81
0x4009d9c	        0x4883c418	                           add rsp, 0x18	      6229	tc-i386.c	FUNCTION_81
0x4009da0	              0x5b	                                 pop rbx	      6229	tc-i386.c	FUNCTION_81
0x4009da1	            0x415c	                                 pop r12	      6229	tc-i386.c	FUNCTION_81
0x4009da3	            0x415d	                                 pop r13	      6229	tc-i386.c	FUNCTION_81
0x4009da5	            0x415e	                                 pop r14	      6229	tc-i386.c	FUNCTION_81
0x4009da7	            0x415f	                                 pop r15	      6229	tc-i386.c	FUNCTION_81
0x4009da9	              0x5d	                                 pop rbp	      6229	tc-i386.c	FUNCTION_81
0x4009daa	              0xc3	                                     ret	      6229	tc-i386.c	FUNCTION_81
build_vex_prefix	CALL,5:FOR,1:WHILE,0:functions,0:SWITCH,2:IF,7:ELSE,4:DO,0	288
0x4003587	              0x55	                                push rbp	      3313	tc-i386.c	FUNCTION_62
0x4003588	          0x4889e5	                            mov rbp, rsp	      3313	tc-i386.c	FUNCTION_62
0x400358b	        0x4883ec50	                           sub rsp, 0x50	      3313	tc-i386.c	FUNCTION_62
0x400358f	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3313	tc-i386.c	FUNCTION_62
0x4003593	    0x64488b042528	                mov rax, qword fs:[0x28]	      3313	tc-i386.c	FUNCTION_62
0x400359c	        0x488945f8	                mov qword [rbp - 8], rax	      3313	tc-i386.c	FUNCTION_62
0x40035a0	            0x31c0	                            xor eax, eax	      3313	tc-i386.c	FUNCTION_62
0x40035a2	    0x488b05000000	            mov rax, qword [0x040035a9] 	      3319	tc-i386.c	FUNCTION_62	IF_1
0x40035a9	          0x4885c0	                           test rax, rax	      3319	tc-i386.c	FUNCTION_62	IF_1
0x40035ac	            0x7440	                            je 0x40035ee	      3319	tc-i386.c	FUNCTION_62	IF_1
0x40035ae	    0x488b05000000	            mov rax, qword [0x040035b5] 	      3322	tc-i386.c	FUNCTION_62	IF_1	CALL_1
0x40035b5	          0x4889c7	                            mov rdi, rax	      3322	tc-i386.c	FUNCTION_62	IF_1	CALL_1
0x40035b8	      0xe858e0ffff	                call sym.register_number	      3322	tc-i386.c	FUNCTION_62	IF_1	CALL_1
0x40035bd	            0xf7d0	                                 not eax	      3322	tc-i386.c	FUNCTION_62	IF_1	CALL_1
0x40035bf	          0x83e00f	                            and eax, 0xf	      3321	tc-i386.c	FUNCTION_62	IF_1
0x40035c2	          0x8945c0	             mov dword [rbp - 0x40], eax	      3321	tc-i386.c	FUNCTION_62	IF_1
0x40035c5	    0x488b05000000	            mov rax, qword [0x040035cc] 	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x40035cc	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x40035d0	           0xfb6c0	                           movzx eax, al	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x40035d3	          0x83e004	                              and eax, 4	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x40035d6	            0x85c0	                           test eax, eax	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x40035d8	            0x741b	                            je 0x40035f5	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x40035da	      0xba00000000	                              mov edx, 0	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x40035df	      0xbefb0c0000	                          mov esi, 0xcfb	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x40035e4	      0xbf00000000	                              mov edi, 0	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x40035e9	      0xe800000000	                          call 0x40035ee	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x40035ee	    0xc745c00f0000	            mov dword [rbp - 0x40], 0xf 	      3326	tc-i386.c	FUNCTION_62	ELSE_1
0x40035f5	    0x8b0500000000	            mov eax, dword [0x040035fb] 	      3330	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40035fb	          0x83f802	                              cmp eax, 2	      3330	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40035fe	     0xf84b1010000	                            je 0x40037b5	      3330	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003604	    0x8b0500000000	            mov eax, dword [0x0400360a] 	      3331	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400360a	            0x85c0	                           test eax, eax	      3331	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400360c	     0xf85a3010000	                           jne 0x40037b5	      3331	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003612	    0x8b1500000000	            mov edx, dword [0x04003618] 	      3332	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003618	    0x8b0500000000	            mov eax, dword [0x0400361e] 	      3332	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400361e	            0x39c2	                            cmp edx, eax	      3332	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003620	     0xf858f010000	                           jne 0x40037b5	      3332	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003626	    0x8b0500000000	            mov eax, dword [0x0400362c] 	      3333	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400362c	      0x2500800300	                        and eax, 0x38000	      3333	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003631	            0x85c0	                           test eax, eax	      3333	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003633	     0xf857c010000	                           jne 0x40037b5	      3333	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003639	     0xfb605000000	           movzx eax, byte [0x04003640] 	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003640	          0x83e004	                              and eax, 4	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003643	            0x84c0	                             test al, al	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003645	     0xf846a010000	                            je 0x40037b5	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400364b	    0x8b0500000000	            mov eax, dword [0x04003651] 	      3335	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003651	          0x83f801	                              cmp eax, 1	      3335	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003654	     0xf855b010000	                           jne 0x40037b5	      3335	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400365a	    0x8b0500000000	            mov eax, dword [0x04003660] 	      3337	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003660	          0x83e801	                              sub eax, 1	      3337	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003663	          0x8945d8	             mov dword [rbp - 0x28], eax	      3337	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003666	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3341	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003669	        0x4883c00e	                            add rax, 0xe	      3341	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400366d	    0x488b04c50000	                  mov rax, qword [rax*8]	      3341	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003675	        0x488945f0	             mov qword [rbp - 0x10], rax	      3341	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003679	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3342	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400367c	        0x488d500e	                    lea rdx, [rax + 0xe]	      3342	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003680	    0x488b05000000	            mov rax, qword [0x04003687] 	      3342	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003687	    0x488904d50000	                  mov qword [rdx*8], rax	      3342	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400368f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3343	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003693	    0x488905000000	            mov qword [0x0400369a], rax 	      3343	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400369a	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3344	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400369d	        0x4883c014	                           add rax, 0x14	      3344	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40036a1	    0x488b04c50000	                  mov rax, qword [rax*8]	      3344	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40036a9	        0x488945e0	             mov qword [rbp - 0x20], rax	      3344	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40036ad	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3345	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40036b0	        0x488d5014	                   lea rdx, [rax + 0x14]	      3345	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40036b4	    0x488b05000000	            mov rax, qword [0x040036bb] 	      3345	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40036bb	    0x488904d50000	                  mov qword [rdx*8], rax	      3345	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40036c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3346	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40036c7	    0x488905000000	            mov qword [0x040036ce], rax 	      3346	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40036ce	    0x8b0500000000	            mov eax, dword [0x040036d4] 	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x40036d4	          0x83f803	                              cmp eax, 3	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x40036d7	            0x7414	                            je 0x40036ed	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x40036d9	      0xba00000000	                              mov edx, 0	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x40036de	      0xbe140d0000	                          mov esi, 0xd14	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x40036e3	      0xbf00000000	                              mov edi, 0	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x40036e8	      0xe800000000	                          call 0x40036ed	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x40036ed	    0xc70500000000	               mov dword [0x040036f7], 4	      3350	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40036f7	    0x8b0500000000	            mov eax, dword [0x040036fd] 	      3351	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40036fd	          0x8945d8	             mov dword [rbp - 0x28], eax	      3351	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003700	    0x8b0500000000	            mov eax, dword [0x04003706] 	      3352	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003706	    0x890500000000	            mov dword [0x0400370c], eax 	      3352	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400370c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3353	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400370f	    0x890500000000	            mov dword [0x04003715], eax 	      3353	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003715	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003719	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400371d	    0x488915000000	            mov qword [0x04003724], rdx 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003724	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003728	    0x488915000000	            mov qword [0x0400372f], rdx 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400372f	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003733	    0x488915000000	            mov qword [0x0400373a], rdx 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400373a	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400373e	    0x488915000000	            mov qword [0x04003745], rdx 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003745	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400374c	    0x488915000000	            mov qword [0x04003753], rdx 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003753	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400375a	    0x488915000000	            mov qword [0x04003761], rdx 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003761	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003768	    0x488915000000	            mov qword [0x0400376f], rdx 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400376f	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003776	    0x488915000000	            mov qword [0x0400377d], rdx 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400377d	    0x488b90a00000	            mov rdx, qword [rax + 0xa0] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003784	    0x488915000000	            mov qword [0x0400378b], rdx 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400378b	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003792	    0x488915000000	            mov qword [0x04003799], rdx 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4003799	    0x488b90b00000	            mov rdx, qword [rax + 0xb0] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40037a0	    0x488915000000	            mov qword [0x040037a7], rdx 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40037a7	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40037ae	    0x488905000000	            mov qword [0x040037b5], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x40037b5	     0xfb605000000	           movzx eax, byte [0x040037bc] 	      3359	tc-i386.c	FUNCTION_62	IF_3
0x40037bc	          0x83e006	                              and eax, 6	      3359	tc-i386.c	FUNCTION_62	IF_3
0x40037bf	            0x3c06	                               cmp al, 6	      3359	tc-i386.c	FUNCTION_62	IF_3
0x40037c1	            0x750e	                           jne 0x40037d1	      3359	tc-i386.c	FUNCTION_62	IF_3
0x40037c3	    0x8b0500000000	            mov eax, dword [0x040037c9] 	      3360	tc-i386.c	FUNCTION_62	IF_3
0x40037c9	          0x8945c8	             mov dword [rbp - 0x38], eax	      3360	tc-i386.c	FUNCTION_62	IF_3
0x40037cc	      0xe98d000000	                           jmp 0x400385e	      3360	tc-i386.c	FUNCTION_62	IF_3
0x40037d1	     0xfb605000000	           movzx eax, byte [0x040037d8] 	      3361	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x40037d8	          0x83e006	                              and eax, 6	      3361	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x40037db	            0x3c04	                               cmp al, 4	      3361	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x40037dd	            0x7509	                           jne 0x40037e8	      3361	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x40037df	    0xc745c8010000	               mov dword [rbp - 0x38], 1	      3362	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x40037e6	            0xeb76	                           jmp 0x400385e	      3362	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x40037e8	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      3367	tc-i386.c	FUNCTION_62	ELSE_3
0x40037ef	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x40037f6	            0xeb5a	                           jmp 0x4003852	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x40037f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x40037fc	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x40037ff	        0x4883c206	                              add rdx, 6	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003803	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003808	          0xc0e803	                               shr al, 3	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400380b	          0x83e001	                              and eax, 1	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400380e	            0x84c0	                             test al, al	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003810	            0x743c	                            je 0x400384e	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003812	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003816	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003819	        0x4883c206	                              add rdx, 6	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400381d	       0xfb644d008	      movzx eax, byte [rax + rdx*8 + 8] 	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003822	          0xc0e804	                               shr al, 4	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003825	          0x83e001	                              and eax, 1	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003828	            0x84c0	                             test al, al	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400382a	            0x7422	                            je 0x400384e	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400382c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3371	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400382f	        0x4883c00e	                            add rax, 0xe	      3371	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003833	     0xfb604c50000	                 movzx eax, byte [rax*8]	      3371	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400383b	          0xc0e804	                               shr al, 4	      3371	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400383e	          0x83e001	                              and eax, 1	      3371	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003841	            0x84c0	                             test al, al	      3371	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003843	            0x7409	                            je 0x400384e	      3371	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4003845	    0xc745c8010000	               mov dword [rbp - 0x38], 1	      3373	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400384c	            0xeb10	                           jmp 0x400385e	      3374	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400384e	        0x8345cc01	               add dword [rbp - 0x34], 1	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x4003852	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x4003856	          0x8b4008	                mov eax, dword [rax + 8]	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x4003859	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x400385c	            0x779a	                            ja 0x40037f8	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x400385e	    0x8b0500000000	            mov eax, dword [0x04003864] 	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4003864	          0xc1e808	                              shr eax, 8	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4003867	           0xfb6c0	                           movzx eax, al	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400386a	          0x83f866	                           cmp eax, 0x66	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400386d	            0x7424	                            je 0x4003893	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400386f	          0x83f866	                           cmp eax, 0x66	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4003872	            0x7706	                            ja 0x400387a	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4003874	            0x85c0	                           test eax, eax	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4003876	            0x7412	                            je 0x400388a	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4003878	            0xeb34	                           jmp 0x40038ae	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400387a	      0x3df2000000	                           cmp eax, 0xf2	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400387f	            0x7424	                            je 0x40038a5	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4003881	      0x3df3000000	                           cmp eax, 0xf3	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4003886	            0x7414	                            je 0x400389c	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4003888	            0xeb24	                           jmp 0x40038ae	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400388a	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      3381	tc-i386.c	FUNCTION_62	SWITCH_1
0x4003891	            0xeb2f	                           jmp 0x40038c2	      3382	tc-i386.c	FUNCTION_62	SWITCH_1
0x4003893	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      3384	tc-i386.c	FUNCTION_62	SWITCH_1
0x400389a	            0xeb26	                           jmp 0x40038c2	      3385	tc-i386.c	FUNCTION_62	SWITCH_1
0x400389c	    0xc745c4020000	               mov dword [rbp - 0x3c], 2	      3387	tc-i386.c	FUNCTION_62	SWITCH_1
0x40038a3	            0xeb1d	                           jmp 0x40038c2	      3388	tc-i386.c	FUNCTION_62	SWITCH_1
0x40038a5	    0xc745c4030000	               mov dword [rbp - 0x3c], 3	      3390	tc-i386.c	FUNCTION_62	SWITCH_1
0x40038ac	            0xeb14	                           jmp 0x40038c2	      3391	tc-i386.c	FUNCTION_62	SWITCH_1
0x40038ae	      0xba00000000	                              mov edx, 0	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x40038b3	      0xbe410d0000	                          mov esi, 0xd41	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x40038b8	      0xbf00000000	                              mov edi, 0	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x40038bd	      0xe800000000	                          call 0x40038c2	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x40038c2	    0x8b0500000000	            mov eax, dword [0x040038c8] 	      3397	tc-i386.c	FUNCTION_62	IF_6
0x40038c8	          0x83f802	                              cmp eax, 2	      3397	tc-i386.c	FUNCTION_62	IF_6
0x40038cb	            0x7477	                            je 0x4003944	      3397	tc-i386.c	FUNCTION_62	IF_6
0x40038cd	    0x8b0500000000	            mov eax, dword [0x040038d3] 	      3398	tc-i386.c	FUNCTION_62	IF_6
0x40038d3	      0x2500800300	                        and eax, 0x38000	      3398	tc-i386.c	FUNCTION_62	IF_6
0x40038d8	            0x85c0	                           test eax, eax	      3398	tc-i386.c	FUNCTION_62	IF_6
0x40038da	            0x7568	                           jne 0x4003944	      3398	tc-i386.c	FUNCTION_62	IF_6
0x40038dc	     0xfb605000000	           movzx eax, byte [0x040038e3] 	      3399	tc-i386.c	FUNCTION_62	IF_6
0x40038e3	          0x83e060	                           and eax, 0x60	      3399	tc-i386.c	FUNCTION_62	IF_6
0x40038e6	            0x3c40	                            cmp al, 0x40	      3399	tc-i386.c	FUNCTION_62	IF_6
0x40038e8	            0x745a	                            je 0x4003944	      3399	tc-i386.c	FUNCTION_62	IF_6
0x40038ea	    0x8b0500000000	            mov eax, dword [0x040038f0] 	      3400	tc-i386.c	FUNCTION_62	IF_6
0x40038f0	          0x83e00b	                            and eax, 0xb	      3400	tc-i386.c	FUNCTION_62	IF_6
0x40038f3	            0x85c0	                           test eax, eax	      3400	tc-i386.c	FUNCTION_62	IF_6
0x40038f5	            0x754d	                           jne 0x4003944	      3400	tc-i386.c	FUNCTION_62	IF_6
0x40038f7	    0xc70500000000	               mov dword [0x04003901], 2	      3405	tc-i386.c	FUNCTION_62	IF_6
0x4003901	    0xc60500000000	            mov byte [0x04003908], 0xc5 	      3406	tc-i386.c	FUNCTION_62	IF_6
0x4003908	    0x8b0500000000	            mov eax, dword [0x0400390e] 	      3409	tc-i386.c	FUNCTION_62	IF_6
0x400390e	          0x83e004	                              and eax, 4	      3409	tc-i386.c	FUNCTION_62	IF_6
0x4003911	            0x85c0	                           test eax, eax	      3409	tc-i386.c	FUNCTION_62	IF_6
0x4003913	           0xf94c0	                                 sete al	      3409	tc-i386.c	FUNCTION_62	IF_6
0x4003916	           0xfb6c0	                           movzx eax, al	      3409	tc-i386.c	FUNCTION_62	IF_6
0x4003919	          0x8945dc	             mov dword [rbp - 0x24], eax	      3409	tc-i386.c	FUNCTION_62	IF_6
0x400391c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400391f	          0xc1e007	                              shl eax, 7	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4003922	            0x89c2	                            mov edx, eax	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4003924	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4003927	          0xc1e003	                              shl eax, 3	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400392a	             0x9c2	                             or edx, eax	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400392c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400392f	          0xc1e002	                              shl eax, 2	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4003932	             0x9c2	                             or edx, eax	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4003934	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4003937	             0x9d0	                             or eax, edx	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4003939	    0x880500000000	               mov byte [0x0400393f], al	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400393f	      0xe902010000	                           jmp 0x4003a46	      3401	tc-i386.c	FUNCTION_62	IF_6
0x4003944	    0xc70500000000	               mov dword [0x0400394e], 3	      3420	tc-i386.c	FUNCTION_62	ELSE_4
0x400394e	    0x8b0500000000	            mov eax, dword [0x04003954] 	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4003954	          0xc1e80f	                            shr eax, 0xf	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4003957	          0x83e007	                              and eax, 7	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400395a	           0xfb6c0	                           movzx eax, al	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400395d	          0x83f805	                              cmp eax, 5	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4003960	            0x776c	                            ja 0x40039ce	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4003962	            0x89c0	                            mov eax, eax	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4003964	    0x488b04c50000	                  mov rax, qword [rax*8]	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400396c	            0xffe0	                                 jmp rax	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400396e	    0xc745d0010000	               mov dword [rbp - 0x30], 1	      3425	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4003975	    0xc60500000000	            mov byte [0x0400397c], 0xc4 	      3426	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400397c	            0xeb64	                           jmp 0x40039e2	      3427	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400397e	    0xc745d0020000	               mov dword [rbp - 0x30], 2	      3429	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4003985	    0xc60500000000	            mov byte [0x0400398c], 0xc4 	      3430	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400398c	            0xeb54	                           jmp 0x40039e2	      3431	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400398e	    0xc745d0030000	               mov dword [rbp - 0x30], 3	      3433	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4003995	    0xc60500000000	            mov byte [0x0400399c], 0xc4 	      3434	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400399c	            0xeb44	                           jmp 0x40039e2	      3435	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400399e	    0xc745d0080000	               mov dword [rbp - 0x30], 8	      3437	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40039a5	    0xc60500000000	            mov byte [0x040039ac], 0x8f 	      3438	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40039ac	            0xeb34	                           jmp 0x40039e2	      3439	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40039ae	    0xc745d0090000	               mov dword [rbp - 0x30], 9	      3441	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40039b5	    0xc60500000000	            mov byte [0x040039bc], 0x8f 	      3442	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40039bc	            0xeb24	                           jmp 0x40039e2	      3443	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40039be	    0xc745d00a0000	             mov dword [rbp - 0x30], 0xa	      3445	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40039c5	    0xc60500000000	            mov byte [0x040039cc], 0x8f 	      3446	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40039cc	            0xeb14	                           jmp 0x40039e2	      3447	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40039ce	      0xba00000000	                              mov edx, 0	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x40039d3	      0xbe790d0000	                          mov esi, 0xd79	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x40039d8	      0xbf00000000	                              mov edi, 0	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x40039dd	      0xe800000000	                          call 0x40039e2	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x40039e2	    0x8b0500000000	            mov eax, dword [0x040039e8] 	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x40039e8	            0xf7d0	                                 not eax	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x40039ea	          0xc1e005	                              shl eax, 5	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x40039ed	            0x89c2	                            mov edx, eax	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x40039ef	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x40039f2	             0x9d0	                             or eax, edx	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x40039f4	    0x880500000000	               mov byte [0x040039fa], al	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x40039fa	    0x8b0500000000	            mov eax, dword [0x04003a00] 	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a00	          0x83e008	                              and eax, 8	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a03	            0x85c0	                           test eax, eax	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a05	           0xf95c0	                                setne al	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a08	           0xfb6c0	                           movzx eax, al	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a0b	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a0e	     0xfb605000000	           movzx eax, byte [0x04003a15] 	      3458	tc-i386.c	FUNCTION_62	ELSE_4	IF_7
0x4003a15	          0x83e060	                           and eax, 0x60	      3458	tc-i386.c	FUNCTION_62	ELSE_4	IF_7
0x4003a18	            0x3c40	                            cmp al, 0x40	      3458	tc-i386.c	FUNCTION_62	ELSE_4	IF_7
0x4003a1a	            0x7507	                           jne 0x4003a23	      3458	tc-i386.c	FUNCTION_62	ELSE_4	IF_7
0x4003a1c	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      3459	tc-i386.c	FUNCTION_62	ELSE_4	IF_7
0x4003a23	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a26	          0xc1e007	                              shl eax, 7	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a29	            0x89c2	                            mov edx, eax	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a2b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a2e	          0xc1e003	                              shl eax, 3	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a31	             0x9c2	                             or edx, eax	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a33	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a36	          0xc1e002	                              shl eax, 2	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a39	             0x9c2	                             or edx, eax	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a3b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a3e	             0x9d0	                             or eax, edx	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a40	    0x880500000000	               mov byte [0x04003a46], al	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4003a46	              0x90	                                     nop	      3466	tc-i386.c	FUNCTION_62
0x4003a47	        0x488b45f8	                mov rax, qword [rbp - 8]	      3466	tc-i386.c	FUNCTION_62
0x4003a4b	    0x644833042528	                xor rax, qword fs:[0x28]	      3466	tc-i386.c	FUNCTION_62
0x4003a54	            0x7405	                            je 0x4003a5b	      3466	tc-i386.c	FUNCTION_62
0x4003a56	      0xe800000000	                          call 0x4003a5b	      3466	tc-i386.c	FUNCTION_62
0x4003a5b	              0xc9	                                   leave	      3466	tc-i386.c	FUNCTION_62
0x4003a5c	              0xc3	                                     ret	      3466	tc-i386.c	FUNCTION_62
reloc	CALL,19:FOR,0:WHILE,0:functions,0:SWITCH,4:IF,13:ELSE,6:DO,0	213
0x4002e8a	              0x55	                                push rbp	      3087	tc-i386.c	FUNCTION_59
0x4002e8b	          0x4889e5	                            mov rbp, rsp	      3087	tc-i386.c	FUNCTION_59
0x4002e8e	              0x53	                                push rbx	      3087	tc-i386.c	FUNCTION_59
0x4002e8f	        0x4883ec28	                           sub rsp, 0x28	      3087	tc-i386.c	FUNCTION_59
0x4002e93	          0x897ddc	             mov dword [rbp - 0x24], edi	      3087	tc-i386.c	FUNCTION_59
0x4002e96	          0x8975d8	             mov dword [rbp - 0x28], esi	      3087	tc-i386.c	FUNCTION_59
0x4002e99	          0x8955d4	             mov dword [rbp - 0x2c], edx	      3087	tc-i386.c	FUNCTION_59
0x4002e9c	          0x894dd0	             mov dword [rbp - 0x30], ecx	      3087	tc-i386.c	FUNCTION_59
0x4002e9f	        0x837dd047	           cmp dword [rbp - 0x30], 0x47 	      3088	tc-i386.c	FUNCTION_59	IF_1
0x4002ea3	     0xf84bc010000	                            je 0x4003065	      3088	tc-i386.c	FUNCTION_59	IF_1
0x4002ea9	        0x837ddc08	               cmp dword [rbp - 0x24], 8	      3092	tc-i386.c	FUNCTION_59	IF_1	IF_2
0x4002ead	            0x755c	                           jne 0x4002f0b	      3092	tc-i386.c	FUNCTION_59	IF_1	IF_2
0x4002eaf	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002eb2	      0x2d7d010000	                          sub eax, 0x17d	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002eb7	          0x83f816	                           cmp eax, 0x16	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002eba	            0x774e	                            ja 0x4002f0a	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002ebc	            0x89c0	                            mov eax, eax	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002ebe	    0x488b04c50000	                  mov rax, qword [rax*8]	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002ec6	            0xffe0	                                 jmp rax	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002ec8	      0xb88f010000	                          mov eax, 0x18f	      3096	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002ecd	      0xe9b0020000	                           jmp 0x4003182	      3096	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002ed2	      0xb892010000	                          mov eax, 0x192	      3099	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002ed7	      0xe9a6020000	                           jmp 0x4003182	      3099	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002edc	      0xb893010000	                          mov eax, 0x193	      3102	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002ee1	      0xe99c020000	                           jmp 0x4003182	      3102	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002ee6	    0xc745d0910100	          mov dword [rbp - 0x30], 0x191 	      3105	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002eed	            0xeb1c	                           jmp 0x4002f0b	      3106	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002eef	    0xc745d0900100	          mov dword [rbp - 0x30], 0x190 	      3108	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002ef6	            0xeb13	                           jmp 0x4002f0b	      3109	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002ef8	    0xc745d0870100	          mov dword [rbp - 0x30], 0x187 	      3111	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002eff	            0xeb0a	                           jmp 0x4002f0b	      3112	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002f01	    0xc745d0860100	          mov dword [rbp - 0x30], 0x186 	      3114	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002f08	            0xeb01	                           jmp 0x4002f0b	      3115	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002f0a	              0x90	                                     nop	      3117	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4002f0b	        0x837dd024	           cmp dword [rbp - 0x30], 0x24 	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x4002f0f	            0x7534	                           jne 0x4002f45	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x4002f11	        0x837ddc08	               cmp dword [rbp - 0x24], 8	      3123	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_4
0x4002f15	            0x7507	                           jne 0x4002f1e	      3123	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_4
0x4002f17	    0xc745d0250000	           mov dword [rbp - 0x30], 0x25 	      3124	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_4
0x4002f1e	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4002f22	            0x7421	                            je 0x4002f45	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4002f24	      0xbf00000000	                              mov edi, 0	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x4002f29	      0xe800000000	                          call 0x4002f2e	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x4002f2e	          0x4889c7	                            mov rdi, rax	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x4002f31	      0xb800000000	                              mov eax, 0	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x4002f36	      0xe800000000	                          call 0x4002f3b	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x4002f3b	      0xb847000000	                           mov eax, 0x47	      3128	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4002f40	      0xe93d020000	                           jmp 0x4003182	      3128	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4002f45	        0x837ddc04	               cmp dword [rbp - 0x24], 4	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4002f49	            0x751c	                           jne 0x4002f67	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4002f4b	    0x8b0500000000	            mov eax, dword [0x04002f51] 	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4002f51	          0x83f802	                              cmp eax, 2	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4002f54	            0x750a	                           jne 0x4002f60	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4002f56	    0x8b0500000000	            mov eax, dword [0x04002f5c] 	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4002f5c	            0x85c0	                           test eax, eax	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4002f5e	            0x7407	                            je 0x4002f67	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4002f60	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4002f67	    0x488b05000000	            mov rax, qword [0x04002f6e] 	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x4002f6e	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x4002f71	            0x89d6	                            mov esi, edx	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x4002f73	          0x4889c7	                            mov rdi, rax	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x4002f76	      0xe800000000	                          call 0x4002f7b	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x4002f7b	        0x488945e8	             mov qword [rbp - 0x18], rax	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x4002f7f	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3138	tc-i386.c	FUNCTION_59	IF_1	IF_7
0x4002f84	            0x7524	                           jne 0x4002faa	      3138	tc-i386.c	FUNCTION_59	IF_1	IF_7
0x4002f86	      0xbf00000000	                              mov edi, 0	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4002f8b	      0xe800000000	                          call 0x4002f90	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4002f90	          0x4889c2	                            mov rdx, rax	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4002f93	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4002f96	            0x89c6	                            mov esi, eax	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4002f98	          0x4889d7	                            mov rdi, rdx	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4002f9b	      0xb800000000	                              mov eax, 0	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4002fa0	      0xe800000000	                          call 0x4002fa5	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4002fa5	      0xe9b1000000	                           jmp 0x400305b	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4002faa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x4002fae	          0x4889c7	                            mov rdi, rax	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x4002fb1	      0xe800000000	                          call 0x4002fb6	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x4002fb6	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x4002fb9	            0x7431	                            je 0x4002fec	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x4002fbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fbf	          0x4889c7	                            mov rdi, rax	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fc2	      0xe800000000	                          call 0x4002fc7	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fc7	            0x89c3	                            mov ebx, eax	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fc9	      0xbf00000000	                              mov edi, 0	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fce	      0xe800000000	                          call 0x4002fd3	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fd3	          0x4889c1	                            mov rcx, rax	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fd6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fd9	            0x89c2	                            mov edx, eax	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fdb	            0x89de	                            mov esi, ebx	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fdd	          0x4889cf	                            mov rdi, rcx	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fe0	      0xb800000000	                              mov eax, 0	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fe5	      0xe800000000	                          call 0x4002fea	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fea	            0xeb6f	                           jmp 0x400305b	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4002fec	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4002ff0	            0x7424	                            je 0x4003016	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4002ff2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4002ff6	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4002ff9	            0x85c0	                           test eax, eax	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4002ffb	            0x7519	                           jne 0x4003016	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4002ffd	      0xbf00000000	                              mov edi, 0	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003002	      0xe800000000	                          call 0x4003007	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003007	          0x4889c7	                            mov rdi, rax	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x400300a	      0xb800000000	                              mov eax, 0	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x400300f	      0xe800000000	                          call 0x4003014	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003014	            0xeb45	                           jmp 0x400305b	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003016	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3146	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x400301a	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3146	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x400301d	          0x83f802	                              cmp eax, 2	      3146	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003020	            0x7506	                           jne 0x4003028	      3146	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003022	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3147	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003026	            0x7412	                            je 0x400303a	      3147	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003028	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3148	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x400302c	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3148	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x400302f	          0x83f803	                              cmp eax, 3	      3148	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003032	            0x751f	                           jne 0x4003053	      3148	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003034	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3149	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003038	            0x7e19	                           jle 0x4003053	      3149	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x400303a	      0xbf00000000	                              mov edi, 0	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x400303f	      0xe800000000	                          call 0x4003044	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003044	          0x4889c7	                            mov rdi, rax	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003047	      0xb800000000	                              mov eax, 0	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x400304c	      0xe800000000	                          call 0x4003051	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003051	            0xeb08	                           jmp 0x400305b	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003053	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3152	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x4003056	      0xe927010000	                           jmp 0x4003182	      3152	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x400305b	      0xb847000000	                           mov eax, 0x47	      3153	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x4003060	      0xe91d010000	                           jmp 0x4003182	      3153	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x4003065	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3156	tc-i386.c	FUNCTION_59	ELSE_4	IF_11
0x4003069	     0xf8489000000	                            je 0x40030f8	      3156	tc-i386.c	FUNCTION_59	ELSE_4	IF_11
0x400306f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3158	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	IF_12
0x4003073	            0x7517	                           jne 0x400308c	      3158	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	IF_12
0x4003075	      0xbf00000000	                              mov edi, 0	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x400307a	      0xe800000000	                          call 0x400307f	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x400307f	          0x4889c7	                            mov rdi, rax	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4003082	      0xb800000000	                              mov eax, 0	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4003087	      0xe800000000	                          call 0x400308c	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x400308c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x400308f	          0x83f802	                              cmp eax, 2	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003092	            0x7422	                            je 0x40030b6	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003094	          0x83f802	                              cmp eax, 2	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003097	            0x7707	                            ja 0x40030a0	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003099	          0x83f801	                              cmp eax, 1	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x400309c	            0x740e	                            je 0x40030ac	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x400309e	            0xeb34	                           jmp 0x40030d4	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030a0	          0x83f804	                              cmp eax, 4	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030a3	            0x741b	                            je 0x40030c0	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030a5	          0x83f808	                              cmp eax, 8	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030a8	            0x7420	                            je 0x40030ca	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030aa	            0xeb28	                           jmp 0x40030d4	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030ac	      0xb80d000000	                            mov eax, 0xd	      3162	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030b1	      0xe9cc000000	                           jmp 0x4003182	      3162	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030b6	      0xb80b000000	                            mov eax, 0xb	      3163	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030bb	      0xe9c2000000	                           jmp 0x4003182	      3163	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030c0	      0xb809000000	                              mov eax, 9	      3164	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030c5	      0xe9b8000000	                           jmp 0x4003182	      3164	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030ca	      0xb808000000	                              mov eax, 8	      3165	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030cf	      0xe9ae000000	                           jmp 0x4003182	      3165	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x40030d4	      0xbf00000000	                              mov edi, 0	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x40030d9	      0xe800000000	                          call 0x40030de	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x40030de	          0x4889c2	                            mov rdx, rax	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x40030e1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x40030e4	            0x89c6	                            mov esi, eax	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x40030e6	          0x4889d7	                            mov rdi, rdx	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x40030e9	      0xb800000000	                              mov eax, 0	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x40030ee	      0xe800000000	                          call 0x40030f3	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x40030f3	      0xe985000000	                           jmp 0x400317d	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x40030f8	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3171	tc-i386.c	FUNCTION_59	ELSE_5	IF_13
0x40030fc	            0x7e0f	                           jle 0x400310d	      3171	tc-i386.c	FUNCTION_59	ELSE_5	IF_13
0x40030fe	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3172	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x4003101	          0x83f804	                              cmp eax, 4	      3172	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x4003104	            0x7543	                           jne 0x4003149	      3172	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x4003106	      0xb884010000	                          mov eax, 0x184	      3174	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x400310b	            0xeb75	                           jmp 0x4003182	      3174	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x400310d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003110	          0x83f802	                              cmp eax, 2	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003113	            0x741f	                            je 0x4003134	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003115	          0x83f802	                              cmp eax, 2	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003118	            0x7707	                            ja 0x4003121	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x400311a	          0x83f801	                              cmp eax, 1	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x400311d	            0x740e	                            je 0x400312d	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x400311f	            0xeb28	                           jmp 0x4003149	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003121	          0x83f804	                              cmp eax, 4	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003124	            0x7415	                            je 0x400313b	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003126	          0x83f808	                              cmp eax, 8	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003129	            0x7417	                            je 0x4003142	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x400312b	            0xeb1c	                           jmp 0x4003149	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x400312d	      0xb807000000	                              mov eax, 7	      3179	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003132	            0xeb4e	                           jmp 0x4003182	      3179	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003134	      0xb805000000	                              mov eax, 5	      3180	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003139	            0xeb47	                           jmp 0x4003182	      3180	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x400313b	      0xb802000000	                              mov eax, 2	      3181	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003140	            0xeb40	                           jmp 0x4003182	      3181	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003142	      0xb801000000	                              mov eax, 1	      3182	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003147	            0xeb39	                           jmp 0x4003182	      3182	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003149	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x400314d	            0x7e07	                           jle 0x4003156	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x400314f	      0xbb00000000	                              mov ebx, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003154	            0xeb05	                           jmp 0x400315b	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003156	      0xbb00000000	                              mov ebx, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x400315b	      0xbf00000000	                              mov edi, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003160	      0xe800000000	                          call 0x4003165	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003165	          0x4889c1	                            mov rcx, rax	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003168	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x400316b	            0x89c2	                            mov edx, eax	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x400316d	          0x4889de	                            mov rsi, rbx	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003170	          0x4889cf	                            mov rdi, rcx	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003173	      0xb800000000	                              mov eax, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003178	      0xe800000000	                          call 0x400317d	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x400317d	      0xb847000000	                           mov eax, 0x47	      3188	tc-i386.c	FUNCTION_59
0x4003182	        0x4883c428	                           add rsp, 0x28	      3189	tc-i386.c	FUNCTION_59
0x4003186	              0x5b	                                 pop rbx	      3189	tc-i386.c	FUNCTION_59
0x4003187	              0x5d	                                 pop rbp	      3189	tc-i386.c	FUNCTION_59
0x4003188	              0xc3	                                     ret	      3189	tc-i386.c	FUNCTION_59
x86_64_section_letter	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,1:DO,0	26
0x40167d2	              0x55	                                push rbp	     11610	tc-i386.c	FUNCTION_142	IF_1	CALL_1
0x40167d3	          0x4889e5	                            mov rbp, rsp	     11610	tc-i386.c	FUNCTION_142	IF_1	CALL_1
0x40167d6	        0x4883ec10	                           sub rsp, 0x10	     11610	tc-i386.c	FUNCTION_142	IF_1	CALL_1
0x40167da	          0x897dfc	                mov dword [rbp - 4], edi	     11610	tc-i386.c	FUNCTION_142	IF_1	CALL_1
0x40167dd	        0x488975f0	             mov qword [rbp - 0x10], rsi	     11610	tc-i386.c	FUNCTION_142	IF_1	CALL_1
0x40167e1	    0x8b0500000000	            mov eax, dword [0x040167e7] 	     11611	tc-i386.c	FUNCTION_142	IF_1
0x40167e7	          0x83f802	                              cmp eax, 2	     11611	tc-i386.c	FUNCTION_142	IF_1
0x40167ea	            0x7523	                           jne 0x401680f	     11611	tc-i386.c	FUNCTION_142	IF_1
0x40167ec	        0x837dfc6c	               cmp dword [rbp - 4], 0x6c	     11613	tc-i386.c	FUNCTION_142
0x40167f0	            0x7507	                           jne 0x40167f9	     11613	tc-i386.c	FUNCTION_142
0x40167f2	      0xb800000010	                     mov eax, 0x10000000	     11614	tc-i386.c	FUNCTION_142
0x40167f7	            0xeb31	                           jmp 0x401682a	     11614	tc-i386.c	FUNCTION_142
0x40167f9	      0xbf00000000	                              mov edi, 0	     11616	tc-i386.c	
0x40167fe	      0xe800000000	                          call 0x4016803	     11616	tc-i386.c	
0x4016803	          0x4889c2	                            mov rdx, rax	     11616	tc-i386.c	
0x4016806	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11616	tc-i386.c	
0x401680a	          0x488910	                    mov qword [rax], rdx	     11616	tc-i386.c	
0x401680d	            0xeb14	                           jmp 0x4016823	     11616	tc-i386.c	
0x401680f	      0xbf00000000	                              mov edi, 0	     11619	tc-i386.c	FUNCTION_143	IF_1
0x4016814	      0xe800000000	                          call 0x4016819	     11619	tc-i386.c	FUNCTION_143	IF_1
0x4016819	          0x4889c2	                            mov rdx, rax	     11619	tc-i386.c	FUNCTION_143	IF_1
0x401681c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11619	tc-i386.c	FUNCTION_143	IF_1
0x4016820	          0x488910	                    mov qword [rax], rdx	     11619	tc-i386.c	FUNCTION_143	IF_1
0x4016823	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11620	tc-i386.c	FUNCTION_143	IF_1
0x401682a	              0xc9	                                   leave	     11621	tc-i386.c	FUNCTION_143	IF_1	CALL_1
0x401682b	              0xc3	                                     ret	     11621	tc-i386.c	FUNCTION_143	IF_1	CALL_1
i386_intel_simplify	CALL,32:FOR,0:WHILE,0:functions,0:SWITCH,2:IF,31:ELSE,2:DO,0	468
0x4014a67	              0x55	                                push rbp	       334	tc-i386-intel.c	FUNCTION_150
0x4014a68	          0x4889e5	                            mov rbp, rsp	       334	tc-i386-intel.c	FUNCTION_150
0x4014a6b	        0x4883ec70	                           sub rsp, 0x70	       334	tc-i386-intel.c	FUNCTION_150
0x4014a6f	        0x48897d98	             mov qword [rbp - 0x68], rdi	       334	tc-i386-intel.c	FUNCTION_150
0x4014a73	    0x64488b042528	                mov rax, qword fs:[0x28]	       334	tc-i386-intel.c	FUNCTION_150
0x4014a7c	        0x488945f8	                mov qword [rbp - 8], rax	       334	tc-i386-intel.c	FUNCTION_150
0x4014a80	            0x31c0	                            xor eax, eax	       334	tc-i386-intel.c	FUNCTION_150
0x4014a82	    0x8b0500000000	            mov eax, dword [0x04014a88] 	       335	tc-i386-intel.c	FUNCTION_150
0x4014a88	            0x85c0	                           test eax, eax	       336	tc-i386-intel.c	FUNCTION_150
0x4014a8a	            0x7816	                            js 0x4014aa2	       336	tc-i386-intel.c	FUNCTION_150
0x4014a8c	    0x8b0500000000	            mov eax, dword [0x04014a92] 	       336	tc-i386-intel.c	FUNCTION_150
0x4014a92	            0x4898	                                    cdqe	       336	tc-i386-intel.c	FUNCTION_150
0x4014a94	        0x4883c014	                           add rax, 0x14	       336	tc-i386-intel.c	FUNCTION_150
0x4014a98	    0x488b04c50000	                  mov rax, qword [rax*8]	       336	tc-i386-intel.c	FUNCTION_150
0x4014aa0	            0xeb05	                           jmp 0x4014aa7	       336	tc-i386-intel.c	FUNCTION_150
0x4014aa2	      0xb800000000	                              mov eax, 0	       336	tc-i386-intel.c	FUNCTION_150
0x4014aa7	        0x488945c0	             mov qword [rbp - 0x40], rax	       335	tc-i386-intel.c	FUNCTION_150
0x4014aab	    0x488b05000000	            mov rax, qword [0x04014ab2] 	       337	tc-i386-intel.c	FUNCTION_150
0x4014ab2	        0x488945a8	             mov qword [rbp - 0x58], rax	       337	tc-i386-intel.c	FUNCTION_150
0x4014ab6	    0x488b05000000	            mov rax, qword [0x04014abd] 	       338	tc-i386-intel.c	FUNCTION_150
0x4014abd	        0x488945b0	             mov qword [rbp - 0x50], rax	       338	tc-i386-intel.c	FUNCTION_150
0x4014ac1	    0x8b0500000000	            mov eax, dword [0x04014ac7] 	       341	tc-i386-intel.c	FUNCTION_150	IF_1
0x4014ac7	            0x85c0	                           test eax, eax	       341	tc-i386-intel.c	FUNCTION_150	IF_1
0x4014ac9	            0x750a	                           jne 0x4014ad5	       341	tc-i386-intel.c	FUNCTION_150	IF_1
0x4014acb	      0xb801000000	                              mov eax, 1	       342	tc-i386-intel.c	FUNCTION_150	IF_1
0x4014ad0	      0xe9aa060000	                           jmp 0x401517f	       342	tc-i386-intel.c	FUNCTION_150	IF_1
0x4014ad5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       344	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014ad9	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       344	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014add	           0xfb6c0	                           movzx eax, al	       344	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014ae0	          0x83f83d	                           cmp eax, 0x3d	       344	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014ae3	     0xf8730050000	                            ja 0x4015019	       344	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014ae9	            0x89c0	                            mov eax, eax	       344	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014aeb	    0x488b04c50000	                  mov rax, qword [rax*8]	       344	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014af3	            0xffe0	                                 jmp rax	       344	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014af5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       347	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2
0x4014af9	          0x488b00	                    mov rax, qword [rax]	       347	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2
0x4014afc	          0x4885c0	                           test rax, rax	       347	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2
0x4014aff	            0x743e	                            je 0x4014b3f	       347	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2
0x4014b01	        0x488b4598	             mov rax, qword [rbp - 0x68]	       349	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_1
0x4014b05	          0x488b00	                    mov rax, qword [rax]	       349	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_1
0x4014b08	          0x4889c7	                            mov rdi, rax	       349	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_1
0x4014b0b	      0xe811ffffff	     call sym.i386_intel_simplify_symbol	       349	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_1
0x4014b10	            0x85c0	                           test eax, eax	       349	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_1
0x4014b12	            0x7421	                            je 0x4014b35	       349	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_1
0x4014b14	    0x488b15000000	            mov rdx, qword [0x04014b1b] 	       350	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_2
0x4014b1b	    0x488b0d000000	            mov rcx, qword [0x04014b22] 	       350	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_2
0x4014b22	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       350	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_2
0x4014b26	          0x4889ce	                            mov rsi, rcx	       350	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_2
0x4014b29	          0x4889c7	                            mov rdi, rax	       350	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_2
0x4014b2c	      0xe85bfaffff	               call sym.i386_intel_check	       350	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_2
0x4014b31	            0x85c0	                           test eax, eax	       350	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_2
0x4014b33	            0x750a	                           jne 0x4014b3f	       350	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3	CALL_2
0x4014b35	      0xb800000000	                              mov eax, 0	       352	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3
0x4014b3a	      0xe940060000	                           jmp 0x401517f	       352	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_2	IF_3
0x4014b3f	    0x8b0500000000	            mov eax, dword [0x04014b45] 	       354	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_4
0x4014b45	            0x85c0	                           test eax, eax	       354	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_4
0x4014b47	            0x750f	                           jne 0x4014b58	       354	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_4
0x4014b49	    0x8b0500000000	            mov eax, dword [0x04014b4f] 	       355	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_4
0x4014b4f	          0x83c001	                              add eax, 1	       355	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_4
0x4014b52	    0x890500000000	            mov dword [0x04014b58], eax 	       355	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_4
0x4014b58	        0x488b4598	             mov rax, qword [rbp - 0x68]	       356	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_3
0x4014b5c	        0x488b4008	                mov rax, qword [rax + 8]	       356	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_3
0x4014b60	          0x4889c7	                            mov rdi, rax	       356	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_3
0x4014b63	      0xe8b9feffff	     call sym.i386_intel_simplify_symbol	       356	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_3
0x4014b68	          0x8945a0	             mov dword [rbp - 0x60], eax	       356	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_3
0x4014b6b	    0x8b0500000000	            mov eax, dword [0x04014b71] 	       357	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_5
0x4014b71	            0x85c0	                           test eax, eax	       357	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_5
0x4014b73	            0x750f	                           jne 0x4014b84	       357	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_5
0x4014b75	    0x8b0500000000	            mov eax, dword [0x04014b7b] 	       358	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_5
0x4014b7b	          0x83e801	                              sub eax, 1	       358	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_5
0x4014b7e	    0x890500000000	            mov dword [0x04014b84], eax 	       358	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_5
0x4014b84	        0x837da000	               cmp dword [rbp - 0x60], 0	       359	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_6
0x4014b88	            0x750a	                           jne 0x4014b94	       359	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_6
0x4014b8a	      0xb800000000	                              mov eax, 0	       360	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_6
0x4014b8f	      0xe9eb050000	                           jmp 0x401517f	       360	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_6
0x4014b94	        0x488b4598	             mov rax, qword [rbp - 0x68]	       361	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_7
0x4014b98	          0x488b00	                    mov rax, qword [rax]	       361	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_7
0x4014b9b	          0x4885c0	                           test rax, rax	       361	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_7
0x4014b9e	            0x740d	                            je 0x4014bad	       361	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_7
0x4014ba0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       362	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_7
0x4014ba4	        0xc6401813	            mov byte [rax + 0x18], 0x13 	       362	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_7
0x4014ba8	      0xe952050000	                           jmp 0x40150ff	       365	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014bad	        0x488b4598	             mov rax, qword [rbp - 0x68]	       364	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_4
0x4014bb1	        0x488b5008	                mov rdx, qword [rax + 8]	       364	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_4
0x4014bb5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       364	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_4
0x4014bb9	          0x4889d6	                            mov rsi, rdx	       364	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_4
0x4014bbc	          0x4889c7	                            mov rdi, rax	       364	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_4
0x4014bbf	      0xe83ffaffff	                call sym.i386_intel_fold	       364	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_4
0x4014bc4	      0xe936050000	                           jmp 0x40150ff	       365	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014bc9	    0xc70500000000	               mov dword [0x04014bd3], 1	       368	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014bd3	    0x8b0500000000	            mov eax, dword [0x04014bd9] 	       369	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014bd9	          0x83c001	                              add eax, 1	       369	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014bdc	    0x890500000000	            mov dword [0x04014be2], eax 	       369	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014be2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       370	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_5
0x4014be6	          0x488b00	                    mov rax, qword [rax]	       370	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_5
0x4014be9	          0x4889c7	                            mov rdi, rax	       370	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_5
0x4014bec	      0xe830feffff	     call sym.i386_intel_simplify_symbol	       370	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_5
0x4014bf1	          0x8945a0	             mov dword [rbp - 0x60], eax	       370	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_5
0x4014bf4	    0x8b0500000000	            mov eax, dword [0x04014bfa] 	       371	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014bfa	          0x83e801	                              sub eax, 1	       371	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014bfd	    0x890500000000	            mov dword [0x04014c03], eax 	       371	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014c03	        0x837da000	               cmp dword [rbp - 0x60], 0	       372	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8	CALL_6
0x4014c07	            0x741b	                            je 0x4014c24	       372	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8	CALL_6
0x4014c09	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       372	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8	CALL_6
0x4014c0d	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       372	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8	CALL_6
0x4014c11	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       372	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8	CALL_6
0x4014c15	          0x4889ce	                            mov rsi, rcx	       372	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8	CALL_6
0x4014c18	          0x4889c7	                            mov rdi, rax	       372	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8	CALL_6
0x4014c1b	      0xe86cf9ffff	               call sym.i386_intel_check	       372	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8	CALL_6
0x4014c20	            0x85c0	                           test eax, eax	       372	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8	CALL_6
0x4014c22	            0x750a	                           jne 0x4014c2e	       372	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8	CALL_6
0x4014c24	      0xb800000000	                              mov eax, 0	       373	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8
0x4014c29	      0xe951050000	                           jmp 0x401517f	       373	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_8
0x4014c2e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       374	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_7
0x4014c32	          0x488b10	                    mov rdx, qword [rax]	       374	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_7
0x4014c35	        0x488b4598	             mov rax, qword [rbp - 0x68]	       374	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_7
0x4014c39	          0x4889d6	                            mov rsi, rdx	       374	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_7
0x4014c3c	          0x4889c7	                            mov rdi, rax	       374	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_7
0x4014c3f	      0xe8bff9ffff	                call sym.i386_intel_fold	       374	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_7
0x4014c44	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       375	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014c47	      0xe933050000	                           jmp 0x401517f	       375	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014c4c	    0x8b0500000000	            mov eax, dword [0x04014c52] 	       389	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_9
0x4014c52	          0x83f801	                              cmp eax, 1	       389	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_9
0x4014c55	            0x7511	                           jne 0x4014c68	       389	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_9
0x4014c57	        0x488b4598	             mov rax, qword [rbp - 0x68]	       390	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_9
0x4014c5b	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       390	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_9
0x4014c5f	           0xfb6c0	                           movzx eax, al	       390	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_9
0x4014c62	    0x890500000000	            mov dword [0x04014c68], eax 	       390	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_9
0x4014c68	        0x488b4598	             mov rax, qword [rbp - 0x68]	       393	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_8
0x4014c6c	          0x488b00	                    mov rax, qword [rax]	       393	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_8
0x4014c6f	          0x4889c7	                            mov rdi, rax	       393	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_8
0x4014c72	      0xe800000000	                          call 0x4014c77	       393	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_8
0x4014c77	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       393	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_8
0x4014c7b	            0x3c05	                               cmp al, 5	       393	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_8
0x4014c7d	            0x7521	                           jne 0x4014ca0	       393	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_8
0x4014c7f	      0xbf00000000	                              mov edi, 0	       396	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_10
0x4014c84	      0xe800000000	                          call 0x4014c89	       396	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_10
0x4014c89	          0x4889c7	                            mov rdi, rax	       396	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_10
0x4014c8c	      0xb800000000	                              mov eax, 0	       396	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_10
0x4014c91	      0xe800000000	                          call 0x4014c96	       396	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10	CALL_10
0x4014c96	      0xb800000000	                              mov eax, 0	       397	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10
0x4014c9b	      0xe9df040000	                           jmp 0x401517f	       397	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_10
0x4014ca0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       399	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_11	CALL_11
0x4014ca4	          0x488b00	                    mov rax, qword [rax]	       399	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_11	CALL_11
0x4014ca7	          0x4889c7	                            mov rdi, rax	       399	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_11	CALL_11
0x4014caa	      0xe872fdffff	     call sym.i386_intel_simplify_symbol	       399	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_11	CALL_11
0x4014caf	            0x85c0	                           test eax, eax	       399	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_11	CALL_11
0x4014cb1	            0x750a	                           jne 0x4014cbd	       399	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_11	CALL_11
0x4014cb3	      0xb800000000	                              mov eax, 0	       400	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_11
0x4014cb8	      0xe9c2040000	                           jmp 0x401517f	       400	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_11
0x4014cbd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       401	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_12
0x4014cc1	          0x488b10	                    mov rdx, qword [rax]	       401	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_12
0x4014cc4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       401	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_12
0x4014cc8	          0x4889d6	                            mov rsi, rdx	       401	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_12
0x4014ccb	          0x4889c7	                            mov rdi, rax	       401	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_12
0x4014cce	      0xe830f9ffff	                call sym.i386_intel_fold	       401	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_12
0x4014cd3	      0xe927040000	                           jmp 0x40150ff	       402	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014cd8	        0x488b4598	             mov rax, qword [rbp - 0x68]	       405	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_13
0x4014cdc	        0x488b4008	                mov rax, qword [rax + 8]	       405	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_13
0x4014ce0	          0x4889c7	                            mov rdi, rax	       405	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_13
0x4014ce3	      0xe800000000	                          call 0x4014ce8	       405	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_13
0x4014ce8	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       405	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_13
0x4014cec	            0x3c05	                               cmp al, 5	       405	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_13
0x4014cee	            0x7521	                           jne 0x4014d11	       405	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_13
0x4014cf0	      0xbf00000000	                              mov edi, 0	       408	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_15
0x4014cf5	      0xe800000000	                          call 0x4014cfa	       408	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_15
0x4014cfa	          0x4889c7	                            mov rdi, rax	       408	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_15
0x4014cfd	      0xb800000000	                              mov eax, 0	       408	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_15
0x4014d02	      0xe800000000	                          call 0x4014d07	       408	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12	CALL_15
0x4014d07	      0xb800000000	                              mov eax, 0	       409	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12
0x4014d0c	      0xe96e040000	                           jmp 0x401517f	       409	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_12
0x4014d11	        0x488b4598	             mov rax, qword [rbp - 0x68]	       411	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_16
0x4014d15	        0x488b4008	                mov rax, qword [rax + 8]	       411	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_16
0x4014d19	          0x4889c7	                            mov rdi, rax	       411	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_16
0x4014d1c	      0xe800fdffff	     call sym.i386_intel_simplify_symbol	       411	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_16
0x4014d21	            0x85c0	                           test eax, eax	       411	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_16
0x4014d23	            0x7421	                            je 0x4014d46	       411	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_16
0x4014d25	    0x488b15000000	            mov rdx, qword [0x04014d2c] 	       412	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_17
0x4014d2c	    0x488b0d000000	            mov rcx, qword [0x04014d33] 	       412	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_17
0x4014d33	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       412	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_17
0x4014d37	          0x4889ce	                            mov rsi, rcx	       412	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_17
0x4014d3a	          0x4889c7	                            mov rdi, rax	       412	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_17
0x4014d3d	      0xe84af8ffff	               call sym.i386_intel_check	       412	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_17
0x4014d42	            0x85c0	                           test eax, eax	       412	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_17
0x4014d44	            0x750a	                           jne 0x4014d50	       412	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13	CALL_17
0x4014d46	      0xb800000000	                              mov eax, 0	       414	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13
0x4014d4b	      0xe92f040000	                           jmp 0x401517f	       414	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_13
0x4014d50	    0x8b0500000000	            mov eax, dword [0x04014d56] 	       415	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14
0x4014d56	            0x85c0	                           test eax, eax	       415	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14
0x4014d58	            0x7549	                           jne 0x4014da3	       415	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14
0x4014d5a	    0x488b05000000	            mov rax, qword [0x04014d61] 	       417	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	IF_15
0x4014d61	          0x4885c0	                           test rax, rax	       417	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	IF_15
0x4014d64	            0x7510	                           jne 0x4014d76	       417	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	IF_15
0x4014d66	        0x488b4598	             mov rax, qword [rbp - 0x68]	       418	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	IF_15
0x4014d6a	          0x488b00	                    mov rax, qword [rax]	       418	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	IF_15
0x4014d6d	    0x488905000000	            mov qword [0x04014d74], rax 	       418	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	IF_15
0x4014d74	            0xeb2d	                           jmp 0x4014da3	       418	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	IF_15
0x4014d76	        0xc645e81f	            mov byte [rbp - 0x18], 0x1f 	       423	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	ELSE_2
0x4014d7a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       424	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	ELSE_2
0x4014d7e	          0x488b00	                    mov rax, qword [rax]	       424	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	ELSE_2
0x4014d81	        0x488945d0	             mov qword [rbp - 0x30], rax	       424	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	ELSE_2
0x4014d85	    0x488b05000000	            mov rax, qword [0x04014d8c] 	       425	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	ELSE_2
0x4014d8c	        0x488945d8	             mov qword [rbp - 0x28], rax	       425	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	ELSE_2
0x4014d90	        0x488d45d0	                   lea rax, [rbp - 0x30]	       426	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	ELSE_2	CALL_18
0x4014d94	          0x4889c7	                            mov rdi, rax	       426	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	ELSE_2	CALL_18
0x4014d97	      0xe800000000	                          call 0x4014d9c	       426	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	ELSE_2	CALL_18
0x4014d9c	    0x488905000000	            mov qword [0x04014da3], rax 	       426	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_14	ELSE_2	CALL_18
0x4014da3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       429	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_19
0x4014da7	        0x488b5008	                mov rdx, qword [rax + 8]	       429	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_19
0x4014dab	        0x488b4598	             mov rax, qword [rbp - 0x68]	       429	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_19
0x4014daf	          0x4889d6	                            mov rsi, rdx	       429	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_19
0x4014db2	          0x4889c7	                            mov rdi, rax	       429	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_19
0x4014db5	      0xe849f8ffff	                call sym.i386_intel_fold	       429	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_19
0x4014dba	      0xe940030000	                           jmp 0x40150ff	       430	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014dbf	    0x8b0500000000	            mov eax, dword [0x04014dc5] 	       433	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014dc5	            0x85c0	                           test eax, eax	       433	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014dc7	     0xf884b020000	                            js 0x4015018	       433	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014dcd	    0x8b0500000000	            mov eax, dword [0x04014dd3] 	       433	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014dd3	            0x85c0	                           test eax, eax	       433	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014dd5	     0xf843d020000	                            je 0x4015018	       433	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014ddb	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       435	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014de3	    0x488b05000000	            mov rax, qword [0x04014dea] 	       436	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014dea	          0x4885c0	                           test rax, rax	       436	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014ded	           0xf95c0	                                setne al	       436	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014df0	           0xfb6c0	                           movzx eax, al	       436	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014df3	          0x8945a4	             mov dword [rbp - 0x5c], eax	       436	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014df6	    0x8b0500000000	            mov eax, dword [0x04014dfc] 	       438	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_17
0x4014dfc	          0x8d5001	                      lea edx, [rax + 1]	       438	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_17
0x4014dff	    0x891500000000	            mov dword [0x04014e05], edx 	       438	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_17
0x4014e05	            0x85c0	                           test eax, eax	       438	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_17
0x4014e07	            0x750b	                           jne 0x4014e14	       438	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_17
0x4014e09	    0x48c705000000	               mov qword [0x04014e14], 1	       439	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_17
0x4014e14	        0x488b4598	             mov rax, qword [rbp - 0x68]	       441	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_20
0x4014e18	          0x488b00	                    mov rax, qword [rax]	       441	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_20
0x4014e1b	          0x4889c7	                            mov rdi, rax	       441	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_20
0x4014e1e	      0xe8fefbffff	     call sym.i386_intel_simplify_symbol	       441	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_20
0x4014e23	          0x8945a0	             mov dword [rbp - 0x60], eax	       441	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_20
0x4014e26	        0x837da000	               cmp dword [rbp - 0x60], 0	       442	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_18
0x4014e2a	            0x7426	                            je 0x4014e52	       442	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_18
0x4014e2c	        0x837da400	               cmp dword [rbp - 0x5c], 0	       442	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_18
0x4014e30	            0x7520	                           jne 0x4014e52	       442	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_18
0x4014e32	    0x488b05000000	            mov rax, qword [0x04014e39] 	       442	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_18
0x4014e39	          0x4885c0	                           test rax, rax	       442	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_18
0x4014e3c	            0x7414	                            je 0x4014e52	       442	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_18
0x4014e3e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       443	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_21
0x4014e42	        0x488b4008	                mov rax, qword [rax + 8]	       443	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_21
0x4014e46	          0x4889c7	                            mov rdi, rax	       443	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_21
0x4014e49	      0xe800000000	                          call 0x4014e4e	       443	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_21
0x4014e4e	        0x488945b8	             mov qword [rbp - 0x48], rax	       443	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_21
0x4014e52	        0x837da000	               cmp dword [rbp - 0x60], 0	       445	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_19
0x4014e56	            0x7413	                            je 0x4014e6b	       445	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_19
0x4014e58	        0x488b4598	             mov rax, qword [rbp - 0x68]	       446	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_22
0x4014e5c	        0x488b4008	                mov rax, qword [rax + 8]	       446	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_22
0x4014e60	          0x4889c7	                            mov rdi, rax	       446	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_22
0x4014e63	      0xe8b9fbffff	     call sym.i386_intel_simplify_symbol	       446	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_22
0x4014e68	          0x8945a0	             mov dword [rbp - 0x60], eax	       446	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_22
0x4014e6b	        0x837da000	               cmp dword [rbp - 0x60], 0	       447	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_20
0x4014e6f	            0x742c	                            je 0x4014e9d	       447	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_20
0x4014e71	      0x48837db800	               cmp qword [rbp - 0x48], 0	       447	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_20
0x4014e76	            0x7525	                           jne 0x4014e9d	       447	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_20
0x4014e78	        0x837da400	               cmp dword [rbp - 0x5c], 0	       447	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_20
0x4014e7c	            0x751f	                           jne 0x4014e9d	       447	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_20
0x4014e7e	    0x488b05000000	            mov rax, qword [0x04014e85] 	       447	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_20
0x4014e85	          0x4885c0	                           test rax, rax	       447	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_20
0x4014e88	            0x7413	                            je 0x4014e9d	       447	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_20
0x4014e8a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       448	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_23
0x4014e8e	          0x488b00	                    mov rax, qword [rax]	       448	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_23
0x4014e91	          0x4889c7	                            mov rdi, rax	       448	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_23
0x4014e94	      0xe800000000	                          call 0x4014e99	       448	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_23
0x4014e99	        0x488945b8	             mov qword [rbp - 0x48], rax	       448	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	CALL_23
0x4014e9d	        0x837da000	               cmp dword [rbp - 0x60], 0	       450	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21
0x4014ea1	            0x7457	                            je 0x4014efa	       450	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21
0x4014ea3	      0x48837db800	               cmp qword [rbp - 0x48], 0	       450	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21
0x4014ea8	            0x7450	                            je 0x4014efa	       450	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21
0x4014eaa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       452	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	CALL_24
0x4014eae	          0x4889c7	                            mov rdi, rax	       452	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	CALL_24
0x4014eb1	      0xe800000000	                          call 0x4014eb6	       452	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	CALL_24
0x4014eb6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       453	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	IF_22
0x4014eba	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       453	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	IF_22
0x4014ebe	            0x3c02	                               cmp al, 2	       453	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	IF_22
0x4014ec0	            0x7512	                           jne 0x4014ed4	       453	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	IF_22
0x4014ec2	    0x488b05000000	            mov rax, qword [0x04014ec9] 	       454	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	IF_22
0x4014ec9	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	       454	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	IF_22
0x4014ecd	          0x83e040	                           and eax, 0x40	       454	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	IF_22
0x4014ed0	            0x84c0	                             test al, al	       454	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	IF_22
0x4014ed2	            0x740c	                            je 0x4014ee0	       454	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	IF_22
0x4014ed4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       455	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	IF_22
0x4014ed8	    0x48c740100000	               mov qword [rax + 0x10], 0	       455	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21	IF_22
0x4014ee0	    0x488b15000000	            mov rdx, qword [0x04014ee7] 	       456	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21
0x4014ee7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       456	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21
0x4014eeb	        0x488b4010	            mov rax, qword [rax + 0x10] 	       456	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21
0x4014eef	        0x480fafc2	                           imul rax, rdx	       456	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21
0x4014ef3	    0x488905000000	            mov qword [0x04014efa], rax 	       456	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_21
0x4014efa	    0x8b0500000000	            mov eax, dword [0x04014f00] 	       459	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014f00	          0x83e801	                              sub eax, 1	       459	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014f03	    0x890500000000	            mov dword [0x04014f09], eax 	       459	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014f09	        0x837da000	               cmp dword [rbp - 0x60], 0	       460	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_23
0x4014f0d	            0x750a	                           jne 0x4014f19	       460	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_23
0x4014f0f	      0xb800000000	                              mov eax, 0	       461	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_23
0x4014f14	      0xe966020000	                           jmp 0x401517f	       461	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_23
0x4014f19	    0x8b0500000000	            mov eax, dword [0x04014f1f] 	       463	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24
0x4014f1f	            0x85c0	                           test eax, eax	       463	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24
0x4014f21	     0xf85d4010000	                           jne 0x40150fb	       463	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24
0x4014f27	    0x488b05000000	            mov rax, qword [0x04014f2e] 	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f2e	        0x4883f802	                              cmp rax, 2	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f32	            0x7428	                            je 0x4014f5c	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f34	        0x4883f802	                              cmp rax, 2	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f38	            0x7f08	                            jg 0x4014f42	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f3a	        0x4883f801	                              cmp rax, 1	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f3e	            0x7410	                            je 0x4014f50	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f40	            0xeb3e	                           jmp 0x4014f80	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f42	        0x4883f804	                              cmp rax, 4	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f46	            0x7420	                            je 0x4014f68	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f48	        0x4883f808	                              cmp rax, 8	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f4c	            0x7426	                            je 0x4014f74	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f4e	            0xeb30	                           jmp 0x4014f80	       464	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f50	    0xc70500000000	               mov dword [0x04014f5a], 0	       467	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f5a	            0xeb31	                           jmp 0x4014f8d	       468	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f5c	    0xc70500000000	               mov dword [0x04014f66], 1	       470	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f66	            0xeb25	                           jmp 0x4014f8d	       471	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f68	    0xc70500000000	               mov dword [0x04014f72], 2	       473	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f72	            0xeb19	                           jmp 0x4014f8d	       474	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f74	    0xc70500000000	               mov dword [0x04014f7e], 3	       476	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f7e	            0xeb0d	                           jmp 0x4014f8d	       477	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f80	      0xb800000000	                              mov eax, 0	       480	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f85	    0x488905000000	            mov qword [0x04014f8c], rax 	       480	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f8c	              0x90	                                     nop	       481	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4014f8d	      0xe969010000	                           jmp 0x40150fb	       484	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x4014f92	        0x488b4598	             mov rax, qword [rbp - 0x68]	       489	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_25
0x4014f96	          0x4889c7	                            mov rdi, rax	       489	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_25
0x4014f99	      0xe83df7ffff	   call sym.i386_intel_simplify_register	       489	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_25
0x4014f9e	          0x8945a0	             mov dword [rbp - 0x60], eax	       489	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_25
0x4014fa1	        0x837da002	               cmp dword [rbp - 0x60], 2	       490	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25
0x4014fa5	            0x754b	                           jne 0x4014ff2	       490	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25
0x4014fa7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       492	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25	CALL_26
0x4014fab	        0x488b4010	            mov rax, qword [rax + 0x10] 	       492	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25	CALL_26
0x4014faf	    0x483dfeff0000	                         cmp rax, 0xfffe	       492	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25	CALL_26
0x4014fb5	            0x7e14	                           jle 0x4014fcb	       492	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25	CALL_26
0x4014fb7	      0xba00000000	                              mov edx, 0	       492	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25	CALL_26
0x4014fbc	      0xbeec010000	                          mov esi, 0x1ec	       492	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25	CALL_26
0x4014fc1	      0xbf00000000	                              mov edi, 0	       492	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25	CALL_26
0x4014fc6	      0xe800000000	                          call 0x4014fcb	       492	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25	CALL_26
0x4014fcb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       493	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25
0x4014fcf	        0x488b4010	            mov rax, qword [rax + 0x10] 	       493	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25
0x4014fd3	          0x8d5001	                      lea edx, [rax + 1]	       493	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25
0x4014fd6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       493	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25
0x4014fda	        0x6689501a	               mov word [rax + 0x1a], dx	       493	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25
0x4014fde	        0x488b4598	             mov rax, qword [rbp - 0x68]	       494	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25
0x4014fe2	        0xc6401802	                mov byte [rax + 0x18], 2	       494	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25
0x4014fe6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       495	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25
0x4014fea	    0x48c740100000	               mov qword [rax + 0x10], 0	       495	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_25
0x4014ff2	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       497	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014ff5	      0xe985010000	                           jmp 0x401517f	       497	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4014ffa	        0x488b4598	             mov rax, qword [rbp - 0x68]	       500	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_26
0x4014ffe	         0xfb7401a	           movzx eax, word [rax + 0x1a] 	       500	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_26
0x4015002	          0x6685c0	                             test ax, ax	       500	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_26
0x4015005	            0x7412	                            je 0x4015019	       500	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_26
0x4015007	        0x488b4598	             mov rax, qword [rbp - 0x68]	       501	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_27
0x401500b	          0x4889c7	                            mov rdi, rax	       501	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_27
0x401500e	      0xe8c8f6ffff	   call sym.i386_intel_simplify_register	       501	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_27
0x4015013	      0xe967010000	                           jmp 0x401517f	       501	tc-i386-intel.c	FUNCTION_150	SWITCH_1	CALL_27
0x4015018	              0x90	                                     nop	       486	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x4015019	        0x488b4598	             mov rax, qword [rbp - 0x68]	       506	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27
0x401501d	          0x488b00	                    mov rax, qword [rax]	       506	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27
0x4015020	          0x4885c0	                           test rax, rax	       506	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27
0x4015023	            0x741d	                            je 0x4015042	       506	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27
0x4015025	        0x488b4598	             mov rax, qword [rbp - 0x68]	       507	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27	CALL_28
0x4015029	          0x488b00	                    mov rax, qword [rax]	       507	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27	CALL_28
0x401502c	          0x4889c7	                            mov rdi, rax	       507	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27	CALL_28
0x401502f	      0xe8edf9ffff	     call sym.i386_intel_simplify_symbol	       507	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27	CALL_28
0x4015034	            0x85c0	                           test eax, eax	       507	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27	CALL_28
0x4015036	            0x750a	                           jne 0x4015042	       507	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27	CALL_28
0x4015038	      0xb800000000	                              mov eax, 0	       508	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27
0x401503d	      0xe93d010000	                           jmp 0x401517f	       508	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_27
0x4015042	        0x488b4598	             mov rax, qword [rbp - 0x68]	       509	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x4015046	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       509	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x401504a	            0x3c13	                            cmp al, 0x13	       509	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x401504c	            0x740c	                            je 0x401505a	       509	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x401504e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       509	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x4015052	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       509	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x4015056	            0x3c14	                            cmp al, 0x14	       509	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x4015058	            0x7516	                           jne 0x4015070	       509	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x401505a	    0x488b05000000	            mov rax, qword [0x04015061] 	       511	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x4015061	        0x488945a8	             mov qword [rbp - 0x58], rax	       511	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x4015065	    0x488b05000000	            mov rax, qword [0x0401506c] 	       512	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x401506c	        0x488945b0	             mov qword [rbp - 0x50], rax	       512	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_28
0x4015070	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       514	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_29
0x4015074	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       514	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_29
0x4015078	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       514	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_29
0x401507c	          0x4889ce	                            mov rsi, rcx	       514	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_29
0x401507f	          0x4889c7	                            mov rdi, rax	       514	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_29
0x4015082	      0xe805f5ffff	               call sym.i386_intel_check	       514	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_29
0x4015087	            0x85c0	                           test eax, eax	       514	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_29
0x4015089	            0x7466	                            je 0x40150f1	       514	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_29
0x401508b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       515	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29
0x401508f	        0x488b4008	                mov rax, qword [rax + 8]	       515	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29
0x4015093	          0x4885c0	                           test rax, rax	       515	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29
0x4015096	            0x7414	                            je 0x40150ac	       515	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29
0x4015098	        0x488b4598	             mov rax, qword [rbp - 0x68]	       516	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_30
0x401509c	        0x488b4008	                mov rax, qword [rax + 8]	       516	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_30
0x40150a0	          0x4889c7	                            mov rdi, rax	       516	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_30
0x40150a3	      0xe879f9ffff	     call sym.i386_intel_simplify_symbol	       516	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_30
0x40150a8	            0x85c0	                           test eax, eax	       516	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_30
0x40150aa	            0x7445	                            je 0x40150f1	       516	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_30
0x40150ac	        0x488b4598	             mov rax, qword [rbp - 0x68]	       520	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29
0x40150b0	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       520	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29
0x40150b4	            0x3c13	                            cmp al, 0x13	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150b6	            0x7509	                           jne 0x40150c1	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150b8	    0x488b15000000	            mov rdx, qword [0x040150bf] 	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150bf	            0xeb04	                           jmp 0x40150c5	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150c1	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150c5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       518	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29
0x40150c9	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       518	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29
0x40150cd	            0x3c13	                            cmp al, 0x13	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150cf	            0x7509	                           jne 0x40150da	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150d1	    0x488b05000000	            mov rax, qword [0x040150d8] 	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150d8	            0xeb04	                           jmp 0x40150de	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150da	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150de	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150e2	          0x4889c6	                            mov rsi, rax	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150e5	          0x4889cf	                            mov rdi, rcx	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150e8	      0xe89ff4ffff	               call sym.i386_intel_check	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150ed	            0x85c0	                           test eax, eax	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150ef	            0x750d	                           jne 0x40150fe	       517	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29	CALL_31
0x40150f1	      0xb800000000	                              mov eax, 0	       522	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29
0x40150f6	      0xe984000000	                           jmp 0x401517f	       522	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_29
0x40150fb	              0x90	                                     nop	       484	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x40150fc	            0xeb01	                           jmp 0x40150ff	       484	tc-i386-intel.c	FUNCTION_150	SWITCH_1	IF_16
0x40150fe	              0x90	                                     nop	       523	tc-i386-intel.c	FUNCTION_150	SWITCH_1
0x40150ff	    0x8b0500000000	            mov eax, dword [0x04015105] 	       526	tc-i386-intel.c	FUNCTION_150	IF_30
0x4015105	            0x85c0	                           test eax, eax	       526	tc-i386-intel.c	FUNCTION_150	IF_30
0x4015107	            0x7871	                            js 0x401517a	       526	tc-i386-intel.c	FUNCTION_150	IF_30
0x4015109	        0x488b4598	             mov rax, qword [rbp - 0x68]	       527	tc-i386-intel.c	FUNCTION_150	IF_30
0x401510d	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       527	tc-i386-intel.c	FUNCTION_150	IF_30
0x4015111	            0x3c03	                               cmp al, 3	       527	tc-i386-intel.c	FUNCTION_150	IF_30
0x4015113	            0x7565	                           jne 0x401517a	       527	tc-i386-intel.c	FUNCTION_150	IF_30
0x4015115	    0x8b0500000000	            mov eax, dword [0x0401511b] 	       528	tc-i386-intel.c	FUNCTION_150	IF_30
0x401511b	            0x85c0	                           test eax, eax	       528	tc-i386-intel.c	FUNCTION_150	IF_30
0x401511d	            0x755b	                           jne 0x401517a	       528	tc-i386-intel.c	FUNCTION_150	IF_30
0x401511f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       530	tc-i386-intel.c	FUNCTION_150	IF_30	CALL_32
0x4015123	          0x488b00	                    mov rax, qword [rax]	       530	tc-i386-intel.c	FUNCTION_150	IF_30	CALL_32
0x4015126	          0x4889c7	                            mov rdi, rax	       530	tc-i386-intel.c	FUNCTION_150	IF_30	CALL_32
0x4015129	      0xe800000000	                          call 0x401512e	       530	tc-i386-intel.c	FUNCTION_150	IF_30	CALL_32
0x401512e	        0x488945c8	             mov qword [rbp - 0x38], rax	       530	tc-i386-intel.c	FUNCTION_150	IF_30	CALL_32
0x4015132	    0x48817dc80000	               cmp qword [rbp - 0x38], 0	       532	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x401513a	            0x743e	                            je 0x401517a	       532	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x401513c	    0x488b05000000	            mov rax, qword [0x04015143] 	       533	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x4015143	        0x483945c8	            cmp qword [rbp - 0x38], rax 	       533	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x4015147	            0x7431	                            je 0x401517a	       533	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x4015149	    0x488b05000000	            mov rax, qword [0x04015150] 	       534	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x4015150	        0x483945c8	            cmp qword [rbp - 0x38], rax 	       534	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x4015154	            0x7424	                            je 0x401517a	       534	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x4015156	    0x8b1500000000	            mov edx, dword [0x0401515c] 	       535	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x401515c	    0x8b0500000000	            mov eax, dword [0x04015162] 	       535	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x4015162	            0x85c0	                           test eax, eax	       535	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x4015164	            0x7507	                           jne 0x401516d	       535	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x4015166	      0xb801000000	                              mov eax, 1	       535	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x401516b	            0xeb05	                           jmp 0x4015172	       535	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x401516d	      0xb802000000	                              mov eax, 2	       535	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x4015172	             0x9d0	                             or eax, edx	       535	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x4015174	    0x890500000000	            mov dword [0x0401517a], eax 	       535	tc-i386-intel.c	FUNCTION_150	IF_30	IF_31
0x401517a	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_150
0x401517f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       539	tc-i386-intel.c	FUNCTION_150
0x4015183	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       539	tc-i386-intel.c	FUNCTION_150
0x401518c	            0x7405	                            je 0x4015193	       539	tc-i386-intel.c	FUNCTION_150
0x401518e	      0xe800000000	                          call 0x4015193	       539	tc-i386-intel.c	FUNCTION_150
0x4015193	              0xc9	                                   leave	       539	tc-i386-intel.c	FUNCTION_150
0x4015194	              0xc3	                                     ret	       539	tc-i386-intel.c	FUNCTION_150
operand_type_and	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,0:ELSE,0:DO,0	24
0x40009e8	              0x55	                                push rbp	      1755	tc-i386.c	ELSE_3	FUNCTION_17
0x40009e9	          0x4889e5	                            mov rbp, rsp	      1755	tc-i386.c	ELSE_3	FUNCTION_17
0x40009ec	        0x4883ec30	                           sub rsp, 0x30	      1755	tc-i386.c	ELSE_3	FUNCTION_17
0x40009f0	        0x48897de0	             mov qword [rbp - 0x20], rdi	      1755	tc-i386.c	ELSE_3	FUNCTION_17
0x40009f4	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1755	tc-i386.c	ELSE_3	FUNCTION_17
0x40009f8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1755	tc-i386.c	ELSE_3	FUNCTION_17
0x4000a01	        0x488945f8	                mov qword [rbp - 8], rax	      1755	tc-i386.c	ELSE_3	FUNCTION_17
0x4000a05	            0x31c0	                            xor eax, eax	      1755	tc-i386.c	ELSE_3	FUNCTION_17
0x4000a07	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4000a0a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4000a0d	            0x21d0	                            and eax, edx	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4000a0f	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4000a12	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4000a15	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4000a18	            0x21d0	                            and eax, edx	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4000a1a	          0x8945e0	             mov dword [rbp - 0x20], eax	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4000a1d	              0x90	                                     nop	      1766	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4000a1e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1770	tc-i386.c	ELSE_3	FUNCTION_17
0x4000a22	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1771	tc-i386.c	ELSE_3	FUNCTION_17
0x4000a26	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1771	tc-i386.c	ELSE_3	FUNCTION_17
0x4000a2f	            0x7405	                            je 0x4000a36	      1771	tc-i386.c	ELSE_3	FUNCTION_17
0x4000a31	      0xe800000000	                          call 0x4000a36	      1771	tc-i386.c	ELSE_3	FUNCTION_17
0x4000a36	              0xc9	                                   leave	      1771	tc-i386.c	ELSE_3	FUNCTION_17
0x4000a37	              0xc3	                                     ret	      1771	tc-i386.c	ELSE_3	FUNCTION_17
x86_address_bytes	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	19
0x400e1c7	              0x55	                                push rbp	      8130	tc-i386.c	FUNCTION_98
0x400e1c8	          0x4889e5	                            mov rbp, rsp	      8130	tc-i386.c	FUNCTION_98
0x400e1cb	    0x488b05000000	            mov rax, qword [0x0400e1d2] 	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e1d2	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e1d9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e1dd	          0x83e010	                           and eax, 0x10	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e1e0	          0x4885c0	                           test rax, rax	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e1e3	            0x7407	                            je 0x400e1ec	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e1e5	      0xb804000000	                              mov eax, 4	      8132	tc-i386.c	FUNCTION_98	IF_1
0x400e1ea	            0xeb1c	                           jmp 0x400e208	      8132	tc-i386.c	FUNCTION_98	IF_1
0x400e1ec	    0x488b05000000	            mov rax, qword [0x0400e1f3] 	      8133	tc-i386.c	FUNCTION_98
0x400e1f3	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      8133	tc-i386.c	FUNCTION_98
0x400e1fa	          0x8b4004	                mov eax, dword [rax + 4]	      8133	tc-i386.c	FUNCTION_98
0x400e1fd	          0x8d5007	                      lea edx, [rax + 7]	      8133	tc-i386.c	FUNCTION_98
0x400e200	            0x85c0	                           test eax, eax	      8133	tc-i386.c	FUNCTION_98
0x400e202	           0xf48c2	                          cmovs eax, edx	      8133	tc-i386.c	FUNCTION_98
0x400e205	          0xc1f803	                              sar eax, 3	      8133	tc-i386.c	FUNCTION_98
0x400e208	              0x5d	                                 pop rbp	      8134	tc-i386.c	FUNCTION_98
0x400e209	              0xc3	                                     ret	      8134	tc-i386.c	FUNCTION_98
md_pcrel_from	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	16
0x40139c7	              0x55	                                push rbp	     11226	tc-i386.c	FUNCTION_132	CALL_3
0x40139c8	          0x4889e5	                            mov rbp, rsp	     11226	tc-i386.c	FUNCTION_132	CALL_3
0x40139cb	        0x48897df8	                mov qword [rbp - 8], rdi	     11226	tc-i386.c	FUNCTION_132	CALL_3
0x40139cf	        0x488b45f8	                mov rax, qword [rbp - 8]	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x40139d3	         0xfb64002	               movzx eax, byte [rax + 2]	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x40139d7	           0xfb6d0	                           movzx edx, al	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x40139da	        0x488b45f8	                mov rax, qword [rbp - 8]	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x40139de	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x40139e2	          0x4801d0	                            add rax, rdx	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x40139e5	          0x4889c2	                            mov rdx, rax	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x40139e8	        0x488b45f8	                mov rax, qword [rbp - 8]	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x40139ec	        0x488b4008	                mov rax, qword [rax + 8]	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x40139f0	          0x488b00	                    mov rax, qword [rax]	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x40139f3	          0x4801d0	                            add rax, rdx	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x40139f6	              0x5d	                                 pop rbp	     11228	tc-i386.c	FUNCTION_132
0x40139f7	              0xc3	                                     ret	     11228	tc-i386.c	FUNCTION_132
output_insn	CALL,30:FOR,3:WHILE,0:functions,0:SWITCH,3:IF,21:ELSE,6:DO,0	349
0x400d284	              0x55	                                push rbp	      7610	tc-i386.c	FUNCTION_92
0x400d285	          0x4889e5	                            mov rbp, rsp	      7610	tc-i386.c	FUNCTION_92
0x400d288	        0x4883ec30	                           sub rsp, 0x30	      7610	tc-i386.c	FUNCTION_92
0x400d28c	      0xbf00000000	                              mov edi, 0	      7617	tc-i386.c	FUNCTION_92	CALL_1
0x400d291	      0xe800000000	                          call 0x400d296	      7617	tc-i386.c	FUNCTION_92	CALL_1
0x400d296	    0x488b05000000	            mov rax, qword [0x0400d29d] 	      7619	tc-i386.c	FUNCTION_92
0x400d29d	        0x488945e8	             mov qword [rbp - 0x18], rax	      7619	tc-i386.c	FUNCTION_92
0x400d2a1	      0xe800000000	                          call 0x400d2a6	      7620	tc-i386.c	FUNCTION_92	CALL_2
0x400d2a6	        0x488945f0	             mov qword [rbp - 0x10], rax	      7620	tc-i386.c	FUNCTION_92	CALL_2
0x400d2aa	     0xfb605000000	           movzx eax, byte [0x0400d2b1] 	      7623	tc-i386.c	FUNCTION_92	IF_1
0x400d2b1	          0x83e020	                           and eax, 0x20	      7623	tc-i386.c	FUNCTION_92	IF_1
0x400d2b4	            0x84c0	                             test al, al	      7623	tc-i386.c	FUNCTION_92	IF_1
0x400d2b6	            0x740a	                            je 0x400d2c2	      7623	tc-i386.c	FUNCTION_92	IF_1
0x400d2b8	      0xe861f8ffff	                  call sym.output_branch	      7624	tc-i386.c	FUNCTION_92	CALL_3
0x400d2bd	      0xe90d050000	                           jmp 0x400d7cf	      7624	tc-i386.c	FUNCTION_92	CALL_3
0x400d2c2	     0xfb605000000	           movzx eax, byte [0x0400d2c9] 	      7625	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d2c9	          0x83e080	                     and eax, 0xffffff80	      7625	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d2cc	            0x84c0	                             test al, al	      7625	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d2ce	            0x750e	                           jne 0x400d2de	      7625	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d2d0	     0xfb605000000	           movzx eax, byte [0x0400d2d7] 	      7626	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d2d7	          0x83e040	                           and eax, 0x40	      7626	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d2da	            0x84c0	                             test al, al	      7626	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d2dc	            0x740a	                            je 0x400d2e8	      7626	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d2de	      0xe8fdfaffff	                    call sym.output_jump	      7627	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d2e3	      0xe9e7040000	                           jmp 0x400d7cf	      7627	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d2e8	     0xfb605000000	           movzx eax, byte [0x0400d2ef] 	      7628	tc-i386.c	FUNCTION_92	ELSE_2	IF_3
0x400d2ef	          0x83e001	                              and eax, 1	      7628	tc-i386.c	FUNCTION_92	ELSE_2	IF_3
0x400d2f2	            0x84c0	                             test al, al	      7628	tc-i386.c	FUNCTION_92	ELSE_2	IF_3
0x400d2f4	            0x740a	                            je 0x400d300	      7628	tc-i386.c	FUNCTION_92	ELSE_2	IF_3
0x400d2f6	      0xe849fdffff	           call sym.output_interseg_jump	      7629	tc-i386.c	FUNCTION_92	ELSE_2	IF_3
0x400d2fb	      0xe9cf040000	                           jmp 0x400d7cf	      7629	tc-i386.c	FUNCTION_92	ELSE_2	IF_3
0x400d300	    0x8b0500000000	            mov eax, dword [0x0400d306] 	      7638	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d306	            0x85c0	                           test eax, eax	      7638	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d308	     0xf8493000000	                            je 0x400d3a1	      7638	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d30e	    0x8b0500000000	            mov eax, dword [0x0400d314] 	      7639	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d314	      0x3dae0f0000	                          cmp eax, 0xfae	      7639	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d319	     0xf8582000000	                           jne 0x400d3a1	      7639	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d31f	    0x8b0500000000	            mov eax, dword [0x0400d325] 	      7640	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d325	          0x83f801	                              cmp eax, 1	      7640	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d328	            0x7577	                           jne 0x400d3a1	      7640	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d32a	    0x8b0500000000	            mov eax, dword [0x0400d330] 	      7641	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d330	          0x83f801	                              cmp eax, 1	      7641	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d333	            0x756c	                           jne 0x400d3a1	      7641	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d335	    0x488b05000000	            mov rax, qword [0x0400d33c] 	      7642	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d33c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7642	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d340	    0x483de8000000	                           cmp rax, 0xe8	      7642	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d346	            0x7426	                            je 0x400d36e	      7642	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d348	    0x488b05000000	            mov rax, qword [0x0400d34f] 	      7643	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d34f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7643	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d353	    0x483df0000000	                           cmp rax, 0xf0	      7643	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d359	            0x7413	                            je 0x400d36e	      7643	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d35b	    0x488b05000000	            mov rax, qword [0x0400d362] 	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d362	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d366	    0x483df8000000	                           cmp rax, 0xf8	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d36c	            0x7533	                           jne 0x400d3a1	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d36e	    0x48c745f8f083	         mov qword [rbp - 8], 0x240483f0	      7648	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d376	      0xbf05000000	                              mov edi, 5	      7649	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_6
0x400d37b	      0xe800000000	                          call 0x400d380	      7649	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_6
0x400d380	        0x488945d8	             mov qword [rbp - 0x28], rax	      7649	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_6
0x400d384	        0x488b4df8	                mov rcx, qword [rbp - 8]	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x400d388	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x400d38c	      0xba05000000	                              mov edx, 5	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x400d391	          0x4889ce	                            mov rsi, rcx	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x400d394	          0x4889c7	                            mov rdi, rax	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x400d397	      0xe800000000	                          call 0x400d39c	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x400d39c	      0xe92e040000	                           jmp 0x400d7cf	      7651	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400d3a1	    0x8b0500000000	            mov eax, dword [0x0400d3a7] 	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400d3a7	            0x85c0	                           test eax, eax	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400d3a9	            0x7418	                            je 0x400d3c3	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400d3ab	    0x8b0500000000	            mov eax, dword [0x0400d3b1] 	      7658	tc-i386.c	FUNCTION_92	ELSE_3	IF_5	IF_6
0x400d3b1	      0x3df0000000	                           cmp eax, 0xf0	      7658	tc-i386.c	FUNCTION_92	ELSE_3	IF_5	IF_6
0x400d3b6	     0xf8412040000	                            je 0x400d7ce	      7658	tc-i386.c	FUNCTION_92	ELSE_3	IF_5	IF_6
0x400d3bc	    0xc60500000000	                mov byte [0x0400d3c3], 0	      7660	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400d3c3	     0xfb605000000	           movzx eax, byte [0x0400d3ca] 	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400d3ca	          0x83e006	                              and eax, 6	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400d3cd	            0x84c0	                             test al, al	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400d3cf	     0xf8588010000	                           jne 0x400d55d	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400d3d5	     0xfb605000000	           movzx eax, byte [0x0400d3dc] 	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400d3dc	          0x83e007	                              and eax, 7	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400d3df	            0x84c0	                             test al, al	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400d3e1	     0xf8576010000	                           jne 0x400d55d	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400d3e7	     0xfb605000000	           movzx eax, byte [0x0400d3ee] 	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d3ee	           0xfb6c0	                           movzx eax, al	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d3f1	          0x83f801	                              cmp eax, 1	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d3f4	     0xf84e3000000	                            je 0x400d4dd	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d3fa	          0x83f801	                              cmp eax, 1	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d3fd	            0x7f0d	                            jg 0x400d40c	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d3ff	            0x85c0	                           test eax, eax	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d401	     0xf8492000000	                            je 0x400d499	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d407	      0xe9bd000000	                           jmp 0x400d4c9	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d40c	          0x83f802	                              cmp eax, 2	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d40f	            0x742a	                            je 0x400d43b	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d411	          0x83f803	                              cmp eax, 3	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d414	     0xf85af000000	                           jne 0x400d4c9	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d41a	    0x8b0500000000	            mov eax, dword [0x0400d420] 	      7670	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400d420	      0x25000000ff	                     and eax, 0xff000000	      7670	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400d425	            0x85c0	                           test eax, eax	      7670	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400d427	     0xf84b3000000	                            je 0x400d4e0	      7670	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400d42d	    0x8b0500000000	            mov eax, dword [0x0400d433] 	      7672	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400d433	          0xc1e818	                           shr eax, 0x18	      7672	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400d436	          0x8945d4	             mov dword [rbp - 0x2c], eax	      7672	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400d439	            0xeb32	                           jmp 0x400d46d	      7673	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400d43b	    0x8b0500000000	            mov eax, dword [0x0400d441] 	      7677	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400d441	      0x250000ff00	                       and eax, 0xff0000	      7677	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400d446	            0x85c0	                           test eax, eax	      7677	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400d448	     0xf8495000000	                            je 0x400d4e3	      7677	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400d44e	    0x8b0500000000	            mov eax, dword [0x0400d454] 	      7679	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400d454	          0xc1e810	                           shr eax, 0x10	      7679	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400d457	      0x25ff000000	                           and eax, 0xff	      7679	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400d45c	          0x8945d4	             mov dword [rbp - 0x2c], eax	      7679	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400d45f	     0xfb605000000	           movzx eax, byte [0x0400d466] 	      7680	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10
0x400d466	          0x83e010	                           and eax, 0x10	      7680	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10
0x400d469	            0x84c0	                             test al, al	      7680	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10
0x400d46b	            0x7420	                            je 0x400d48d	      7680	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10
0x400d46d	    0x817dd4f30000	           cmp dword [rbp - 0x2c], 0xf3 	      7683	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x400d474	            0x750b	                           jne 0x400d481	      7683	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x400d476	     0xfb605000000	           movzx eax, byte [0x0400d47d] 	      7684	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x400d47d	            0x3cf3	                            cmp al, 0xf3	      7684	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x400d47f	            0x7462	                            je 0x400d4e3	      7684	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x400d481	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      7686	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	CALL_8
0x400d484	            0x89c7	                            mov edi, eax	      7686	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	CALL_8
0x400d486	      0xe85646ffff	                     call sym.add_prefix	      7686	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	CALL_8
0x400d48b	            0xeb56	                           jmp 0x400d4e3	      7691	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d48d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      7689	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	CALL_9
0x400d490	            0x89c7	                            mov edi, eax	      7689	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	CALL_9
0x400d492	      0xe84a46ffff	                     call sym.add_prefix	      7689	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	CALL_9
0x400d497	            0xeb4a	                           jmp 0x400d4e3	      7691	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d499	      0xbf00000000	                              mov edi, 0	      7698	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_11
0x400d49e	      0xe800000000	                          call 0x400d4a3	      7698	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_11
0x400d4a3	          0x4889c2	                            mov rdx, rax	      7698	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_11
0x400d4a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400d4aa	          0x8b4848	            mov ecx, dword [rax + 0x48] 	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400d4ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400d4b1	        0x488b4040	            mov rax, qword [rax + 0x40] 	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400d4b5	            0x89ce	                            mov esi, ecx	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400d4b7	          0x4889c7	                            mov rdi, rax	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400d4ba	      0xb800000000	                              mov eax, 0	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400d4bf	      0xe800000000	                          call 0x400d4c4	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400d4c4	      0xe906030000	                           jmp 0x400d7cf	      7699	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d4c9	      0xba00000000	                              mov edx, 0	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x400d4ce	      0xbe151e0000	                         mov esi, 0x1e15	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x400d4d3	      0xbf00000000	                              mov edi, 0	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x400d4d8	      0xe800000000	                          call 0x400d4dd	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x400d4dd	              0x90	                                     nop	      7693	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d4de	            0xeb04	                           jmp 0x400d4e4	      7693	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d4e0	              0x90	                                     nop	      7675	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d4e1	            0xeb01	                           jmp 0x400d4e4	      7675	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d4e3	              0x90	                                     nop	      7691	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400d4e4	    0x8b0500000000	            mov eax, dword [0x0400d4ea] 	      7708	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d4ea	          0x83f802	                              cmp eax, 2	      7708	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d4ed	            0x752d	                           jne 0x400d51c	      7708	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d4ef	    0x8b0500000000	            mov eax, dword [0x0400d4f5] 	      7709	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d4f5	          0x83f802	                              cmp eax, 2	      7709	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d4f8	            0x7522	                           jne 0x400d51c	      7709	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d4fa	    0x8b0500000000	            mov eax, dword [0x0400d500] 	      7710	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d500	      0x3d8b010000	                          cmp eax, 0x18b	      7710	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d505	            0x7515	                           jne 0x400d51c	      7710	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d507	     0xfb605000000	           movzx eax, byte [0x0400d50e] 	      7711	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d50e	            0x84c0	                             test al, al	      7711	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d510	            0x750a	                           jne 0x400d51c	      7711	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400d512	      0xbf40000000	                           mov edi, 0x40	      7712	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	CALL_13
0x400d517	      0xe8c545ffff	                     call sym.add_prefix	      7712	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	CALL_13
0x400d51c	    0xc745d0070000	               mov dword [rbp - 0x30], 7	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x400d523	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x400d52b	            0xeb25	                           jmp 0x400d552	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x400d52d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7717	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400d531	           0xfb600	                   movzx eax, byte [rax]	      7717	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400d534	            0x84c0	                             test al, al	      7717	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400d536	            0x7411	                            je 0x400d549	      7717	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400d538	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7718	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400d53c	           0xfb600	                   movzx eax, byte [rax]	      7718	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400d53f	           0xfb6c0	                           movzx eax, al	      7718	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400d542	            0x89c7	                            mov edi, eax	      7718	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400d544	      0xe800000000	                          call 0x400d549	      7718	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400d549	        0x836dd001	               sub dword [rbp - 0x30], 1	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x400d54d	      0x488345e001	               add qword [rbp - 0x20], 1	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x400d552	        0x837dd000	               cmp dword [rbp - 0x30], 0	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x400d556	            0x75d5	                           jne 0x400d52d	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x400d558	      0xe9c7000000	                           jmp 0x400d624	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400d55d	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      7722	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	CALL_16
0x400d564	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      7722	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	CALL_16
0x400d56c	            0xeb50	                           jmp 0x400d5be	      7722	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	CALL_16
0x400d56e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7723	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14
0x400d572	           0xfb600	                   movzx eax, byte [rax]	      7723	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14
0x400d575	            0x84c0	                             test al, al	      7723	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14
0x400d577	            0x743c	                            je 0x400d5b5	      7723	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14
0x400d579	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400d57c	          0x83f801	                              cmp eax, 1	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400d57f	            0x721f	                            jb 0x400d5a0	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400d581	          0x83f802	                              cmp eax, 2	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400d584	            0x7607	                           jbe 0x400d58d	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400d586	          0x83f806	                              cmp eax, 6	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400d589	            0x7429	                            je 0x400d5b4	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400d58b	            0xeb13	                           jmp 0x400d5a0	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400d58d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7731	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_17
0x400d591	           0xfb600	                   movzx eax, byte [rax]	      7731	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_17
0x400d594	           0xfb6c0	                           movzx eax, al	      7731	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_17
0x400d597	            0x89c7	                            mov edi, eax	      7731	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_17
0x400d599	      0xe800000000	                          call 0x400d59e	      7731	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_17
0x400d59e	            0xeb15	                           jmp 0x400d5b5	      7732	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400d5a0	      0xba00000000	                              mov edx, 0	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x400d5a5	      0xbe381e0000	                         mov esi, 0x1e38	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x400d5aa	      0xbf00000000	                              mov edi, 0	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x400d5af	      0xe800000000	                          call 0x400d5b4	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x400d5b4	              0x90	                                     nop	      7728	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400d5b5	        0x8345d001	               add dword [rbp - 0x30], 1	      7722	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	CALL_16
0x400d5b9	      0x488345e001	               add qword [rbp - 0x20], 1	      7722	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	CALL_16
0x400d5be	        0x837dd006	               cmp dword [rbp - 0x30], 6	      7722	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	CALL_16
0x400d5c2	            0x76aa	                           jbe 0x400d56e	      7722	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	CALL_16
0x400d5c4	    0x8b0500000000	            mov eax, dword [0x0400d5ca] 	      7742	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	IF_15
0x400d5ca	            0x85c0	                           test eax, eax	      7742	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	IF_15
0x400d5cc	            0x7414	                            je 0x400d5e2	      7742	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	IF_15
0x400d5ce	      0xba00000000	                              mov edx, 0	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x400d5d3	      0xbe3f1e0000	                         mov esi, 0x1e3f	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x400d5d8	      0xbf00000000	                              mov edi, 0	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x400d5dd	      0xe800000000	                          call 0x400d5e2	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x400d5e2	    0x8b0500000000	            mov eax, dword [0x0400d5e8] 	      7745	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_20
0x400d5e8	            0x89c0	                            mov eax, eax	      7745	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_20
0x400d5ea	          0x4889c7	                            mov rdi, rax	      7745	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_20
0x400d5ed	      0xe800000000	                          call 0x400d5f2	      7745	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_20
0x400d5f2	        0x488945d8	             mov qword [rbp - 0x28], rax	      7745	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_20
0x400d5f6	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d5fd	            0xeb1a	                           jmp 0x400d619	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d5ff	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      7747	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d602	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7747	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d606	          0x4801c2	                            add rdx, rax	      7747	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d609	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      7747	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d60c	     0xfb680000000	                   movzx eax, byte [rax]	      7747	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d613	            0x8802	                      mov byte [rdx], al	      7747	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d615	        0x8345d001	               add dword [rbp - 0x30], 1	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d619	    0x8b0500000000	            mov eax, dword [0x0400d61f] 	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d61f	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d622	            0x77db	                            ja 0x400d5ff	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400d624	     0xfb605000000	           movzx eax, byte [0x0400d62b] 	      7751	tc-i386.c	FUNCTION_92	ELSE_3	IF_16
0x400d62b	            0x3c01	                               cmp al, 1	      7751	tc-i386.c	FUNCTION_92	ELSE_3	IF_16
0x400d62d	            0x7512	                           jne 0x400d641	      7751	tc-i386.c	FUNCTION_92	ELSE_3	IF_16
0x400d62f	    0x8b0500000000	            mov eax, dword [0x0400d635] 	      7753	tc-i386.c	FUNCTION_92	ELSE_3	IF_16	CALL_21
0x400d635	            0x89c7	                            mov edi, eax	      7753	tc-i386.c	FUNCTION_92	ELSE_3	IF_16	CALL_21
0x400d637	      0xe800000000	                          call 0x400d63c	      7753	tc-i386.c	FUNCTION_92	ELSE_3	IF_16	CALL_21
0x400d63c	      0xe9c9000000	                           jmp 0x400d70a	      7753	tc-i386.c	FUNCTION_92	ELSE_3	IF_16	CALL_21
0x400d641	     0xfb605000000	           movzx eax, byte [0x0400d648] 	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d648	           0xfb6c0	                           movzx eax, al	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d64b	          0x83f803	                              cmp eax, 3	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d64e	            0x744a	                            je 0x400d69a	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d650	          0x83f804	                              cmp eax, 4	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d653	            0x7407	                            je 0x400d65c	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d655	          0x83f802	                              cmp eax, 2	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d658	            0x7467	                            je 0x400d6c1	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d65a	            0xeb75	                           jmp 0x400d6d1	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d65c	      0xbf04000000	                              mov edi, 4	      7760	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_22
0x400d661	      0xe800000000	                          call 0x400d666	      7760	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_22
0x400d666	        0x488945d8	             mov qword [rbp - 0x28], rax	      7760	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_22
0x400d66a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7761	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d66e	        0x488d5001	                      lea rdx, [rax + 1]	      7761	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d672	        0x488955d8	             mov qword [rbp - 0x28], rdx	      7761	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d676	    0x8b1500000000	            mov edx, dword [0x0400d67c] 	      7761	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d67c	          0xc1ea18	                           shr edx, 0x18	      7761	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d67f	            0x8810	                      mov byte [rax], dl	      7761	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d681	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d685	        0x488d5001	                      lea rdx, [rax + 1]	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d689	        0x488955d8	             mov qword [rbp - 0x28], rdx	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d68d	    0x8b1500000000	            mov edx, dword [0x0400d693] 	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d693	          0xc1ea10	                           shr edx, 0x10	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d696	            0x8810	                      mov byte [rax], dl	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d698	            0xeb4b	                           jmp 0x400d6e5	      7763	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d69a	      0xbf03000000	                              mov edi, 3	      7765	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_23
0x400d69f	      0xe800000000	                          call 0x400d6a4	      7765	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_23
0x400d6a4	        0x488945d8	             mov qword [rbp - 0x28], rax	      7765	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_23
0x400d6a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d6ac	        0x488d5001	                      lea rdx, [rax + 1]	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d6b0	        0x488955d8	             mov qword [rbp - 0x28], rdx	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d6b4	    0x8b1500000000	            mov edx, dword [0x0400d6ba] 	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d6ba	          0xc1ea10	                           shr edx, 0x10	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d6bd	            0x8810	                      mov byte [rax], dl	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d6bf	            0xeb24	                           jmp 0x400d6e5	      7767	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d6c1	      0xbf02000000	                              mov edi, 2	      7769	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_24
0x400d6c6	      0xe800000000	                          call 0x400d6cb	      7769	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_24
0x400d6cb	        0x488945d8	             mov qword [rbp - 0x28], rax	      7769	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_24
0x400d6cf	            0xeb14	                           jmp 0x400d6e5	      7770	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400d6d1	      0xba00000000	                              mov edx, 0	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x400d6d6	      0xbe5c1e0000	                         mov esi, 0x1e5c	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x400d6db	      0xbf00000000	                              mov edi, 0	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x400d6e0	      0xe800000000	                          call 0x400d6e5	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x400d6e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400d6e9	        0x488d5001	                      lea rdx, [rax + 1]	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400d6ed	        0x488955d8	             mov qword [rbp - 0x28], rdx	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400d6f1	    0x8b1500000000	            mov edx, dword [0x0400d6f7] 	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400d6f7	          0xc1ea08	                              shr edx, 8	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400d6fa	            0x8810	                      mov byte [rax], dl	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400d6fc	    0x8b0500000000	            mov eax, dword [0x0400d702] 	      7778	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400d702	            0x89c2	                            mov edx, eax	      7778	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400d704	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7778	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400d708	            0x8810	                      mov byte [rax], dl	      7778	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400d70a	     0xfb605000000	           movzx eax, byte [0x0400d711] 	      7782	tc-i386.c	FUNCTION_92	ELSE_3	IF_17
0x400d711	          0x83e008	                              and eax, 8	      7782	tc-i386.c	FUNCTION_92	ELSE_3	IF_17
0x400d714	            0x84c0	                             test al, al	      7782	tc-i386.c	FUNCTION_92	ELSE_3	IF_17
0x400d716	            0x747a	                            je 0x400d792	      7782	tc-i386.c	FUNCTION_92	ELSE_3	IF_17
0x400d718	    0x8b0500000000	            mov eax, dword [0x0400d71e] 	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400d71e	    0x8b1500000000	            mov edx, dword [0x0400d724] 	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400d724	          0xc1e203	                              shl edx, 3	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400d727	             0x9c2	                             or edx, eax	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400d729	    0x8b0500000000	            mov eax, dword [0x0400d72f] 	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400d72f	          0xc1e006	                              shl eax, 6	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400d732	             0x9d0	                             or eax, edx	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400d734	            0x89c7	                            mov edi, eax	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400d736	      0xe800000000	                          call 0x400d73b	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400d73b	    0x8b0500000000	            mov eax, dword [0x0400d741] 	      7791	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d741	          0x83f804	                              cmp eax, 4	      7791	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d744	            0x754c	                           jne 0x400d792	      7791	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d746	    0x8b0500000000	            mov eax, dword [0x0400d74c] 	      7792	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d74c	          0x83f803	                              cmp eax, 3	      7792	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d74f	            0x7441	                            je 0x400d792	      7792	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d751	    0x488b05000000	            mov rax, qword [0x0400d758] 	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d758	          0x4885c0	                           test rax, rax	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d75b	            0x7412	                            je 0x400d76f	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d75d	    0x488b05000000	            mov rax, qword [0x0400d764] 	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d764	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d768	          0x83e040	                           and eax, 0x40	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d76b	            0x84c0	                             test al, al	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d76d	            0x7523	                           jne 0x400d792	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400d76f	    0x8b0500000000	            mov eax, dword [0x0400d775] 	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400d775	    0x8b1500000000	            mov edx, dword [0x0400d77b] 	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400d77b	          0xc1e203	                              shl edx, 3	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400d77e	             0x9c2	                             or edx, eax	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400d780	    0x8b0500000000	            mov eax, dword [0x0400d786] 	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400d786	          0xc1e006	                              shl eax, 6	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400d789	             0x9d0	                             or eax, edx	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400d78b	            0x89c7	                            mov edi, eax	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400d78d	      0xe800000000	                          call 0x400d792	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400d792	    0x8b0500000000	            mov eax, dword [0x0400d798] 	      7799	tc-i386.c	FUNCTION_92	ELSE_3	IF_19
0x400d798	            0x85c0	                           test eax, eax	      7799	tc-i386.c	FUNCTION_92	ELSE_3	IF_19
0x400d79a	            0x7413	                            je 0x400d7af	      7799	tc-i386.c	FUNCTION_92	ELSE_3	IF_19
0x400d79c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      7800	tc-i386.c	FUNCTION_92	ELSE_3	CALL_28
0x400d7a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7800	tc-i386.c	FUNCTION_92	ELSE_3	CALL_28
0x400d7a4	          0x4889d6	                            mov rsi, rdx	      7800	tc-i386.c	FUNCTION_92	ELSE_3	CALL_28
0x400d7a7	          0x4889c7	                            mov rdi, rax	      7800	tc-i386.c	FUNCTION_92	ELSE_3	CALL_28
0x400d7aa	      0xe822010000	                    call sym.output_disp	      7800	tc-i386.c	FUNCTION_92	ELSE_3	CALL_28
0x400d7af	    0x8b0500000000	            mov eax, dword [0x0400d7b5] 	      7802	tc-i386.c	FUNCTION_92	ELSE_3	IF_20
0x400d7b5	            0x85c0	                           test eax, eax	      7802	tc-i386.c	FUNCTION_92	ELSE_3	IF_20
0x400d7b7	            0x7416	                            je 0x400d7cf	      7802	tc-i386.c	FUNCTION_92	ELSE_3	IF_20
0x400d7b9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      7803	tc-i386.c	FUNCTION_92	ELSE_3	CALL_29
0x400d7bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7803	tc-i386.c	FUNCTION_92	ELSE_3	CALL_29
0x400d7c1	          0x4889d6	                            mov rsi, rdx	      7803	tc-i386.c	FUNCTION_92	ELSE_3	CALL_29
0x400d7c4	          0x4889c7	                            mov rdi, rax	      7803	tc-i386.c	FUNCTION_92	ELSE_3	CALL_29
0x400d7c7	      0xe859060000	                     call sym.output_imm	      7803	tc-i386.c	FUNCTION_92	ELSE_3	CALL_29
0x400d7cc	            0xeb01	                           jmp 0x400d7cf	      7803	tc-i386.c	FUNCTION_92	ELSE_3	CALL_29
0x400d7ce	              0x90	                                     nop	      7659	tc-i386.c	FUNCTION_92	ELSE_3	IF_5	IF_6
0x400d7cf	              0xc9	                                   leave	      7812	tc-i386.c	FUNCTION_92
0x400d7d0	              0xc3	                                     ret	      7812	tc-i386.c	FUNCTION_92
i386_intel_simplify_register	CALL,6:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,9:ELSE,6:DO,0	223
0x40146db	              0x55	                                push rbp	       259	tc-i386-intel.c	FUNCTION_148
0x40146dc	          0x4889e5	                            mov rbp, rsp	       259	tc-i386-intel.c	FUNCTION_148
0x40146df	        0x4883ec20	                           sub rsp, 0x20	       259	tc-i386-intel.c	FUNCTION_148
0x40146e3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       259	tc-i386-intel.c	FUNCTION_148
0x40146e7	    0x8b0500000000	            mov eax, dword [0x040146ed] 	       262	tc-i386-intel.c	FUNCTION_148	IF_1
0x40146ed	            0x85c0	                           test eax, eax	       262	tc-i386-intel.c	FUNCTION_148	IF_1
0x40146ef	            0x780a	                            js 0x40146fb	       262	tc-i386-intel.c	FUNCTION_148	IF_1
0x40146f1	    0x8b0500000000	            mov eax, dword [0x040146f7] 	       262	tc-i386-intel.c	FUNCTION_148	IF_1
0x40146f7	            0x85c0	                           test eax, eax	       262	tc-i386-intel.c	FUNCTION_148	IF_1
0x40146f9	            0x7421	                            je 0x401471c	       262	tc-i386-intel.c	FUNCTION_148	IF_1
0x40146fb	      0xbf00000000	                              mov edi, 0	       264	tc-i386-intel.c	FUNCTION_148	IF_1	CALL_2
0x4014700	      0xe800000000	                          call 0x4014705	       264	tc-i386-intel.c	FUNCTION_148	IF_1	CALL_2
0x4014705	          0x4889c7	                            mov rdi, rax	       264	tc-i386-intel.c	FUNCTION_148	IF_1	CALL_2
0x4014708	      0xb800000000	                              mov eax, 0	       264	tc-i386-intel.c	FUNCTION_148	IF_1	CALL_2
0x401470d	      0xe800000000	                          call 0x4014712	       264	tc-i386-intel.c	FUNCTION_148	IF_1	CALL_2
0x4014712	      0xb800000000	                              mov eax, 0	       265	tc-i386-intel.c	FUNCTION_148	IF_1
0x4014717	      0xe903030000	                           jmp 0x4014a1f	       265	tc-i386-intel.c	FUNCTION_148	IF_1
0x401471c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       268	tc-i386-intel.c	FUNCTION_148	IF_2
0x4014720	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       268	tc-i386-intel.c	FUNCTION_148	IF_2
0x4014724	            0x3c05	                               cmp al, 5	       268	tc-i386-intel.c	FUNCTION_148	IF_2
0x4014726	            0x750d	                           jne 0x4014735	       268	tc-i386-intel.c	FUNCTION_148	IF_2
0x4014728	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       269	tc-i386-intel.c	FUNCTION_148	IF_2
0x401472c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       269	tc-i386-intel.c	FUNCTION_148	IF_2
0x4014730	          0x8945fc	                mov dword [rbp - 4], eax	       269	tc-i386-intel.c	FUNCTION_148	IF_2
0x4014733	            0xeb11	                           jmp 0x4014746	       269	tc-i386-intel.c	FUNCTION_148	IF_2
0x4014735	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       271	tc-i386-intel.c	FUNCTION_148	ELSE_1
0x4014739	         0xfb7401a	           movzx eax, word [rax + 0x1a] 	       271	tc-i386-intel.c	FUNCTION_148	ELSE_1
0x401473d	           0xfb7c0	                           movzx eax, ax	       271	tc-i386-intel.c	FUNCTION_148	ELSE_1
0x4014740	          0x83e801	                              sub eax, 1	       271	tc-i386-intel.c	FUNCTION_148	ELSE_1
0x4014743	          0x8945fc	                mov dword [rbp - 4], eax	       271	tc-i386-intel.c	FUNCTION_148	ELSE_1
0x4014746	    0x8b0500000000	            mov eax, dword [0x0401474c] 	       273	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x401474c	            0x85c0	                           test eax, eax	       273	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x401474e	     0xf85d3000000	                           jne 0x4014827	       273	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x4014754	    0x8b0500000000	            mov eax, dword [0x0401475a] 	       275	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4
0x401475a	            0x4898	                                    cdqe	       275	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4
0x401475c	        0x4883c014	                           add rax, 0x14	       275	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4
0x4014760	    0x488b04c50000	                  mov rax, qword [rax*8]	       275	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4
0x4014768	          0x4885c0	                           test rax, rax	       275	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4
0x401476b	            0x7421	                            je 0x401478e	       275	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4
0x401476d	      0xbf00000000	                              mov edi, 0	       277	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4	CALL_4
0x4014772	      0xe800000000	                          call 0x4014777	       277	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4	CALL_4
0x4014777	          0x4889c7	                            mov rdi, rax	       277	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4	CALL_4
0x401477a	      0xb800000000	                              mov eax, 0	       277	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4	CALL_4
0x401477f	      0xe800000000	                          call 0x4014784	       277	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4	CALL_4
0x4014784	      0xb800000000	                              mov eax, 0	       278	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4
0x4014789	      0xe991020000	                           jmp 0x4014a1f	       278	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_4
0x401478e	          0x8b45fc	                mov eax, dword [rbp - 4]	       280	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x4014791	          0x4863d0	                         movsxd rdx, eax	       280	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x4014794	          0x4889d0	                            mov rax, rdx	       280	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x4014797	          0x4801c0	                            add rax, rax	       280	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x401479a	          0x4801d0	                            add rax, rdx	       280	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x401479d	        0x48c1e003	                              shl rax, 3	       280	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147a1	    0x480500000000	                              add rax, 0	       280	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147a7	         0xfb64009	               movzx eax, byte [rax + 9]	       280	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147ab	          0x83e001	                              and eax, 1	       280	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147ae	            0x84c0	                             test al, al	       280	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147b0	            0x7441	                            je 0x40147f3	       280	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147b2	          0x8b45fc	                mov eax, dword [rbp - 4]	       281	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147b5	          0x4863d0	                         movsxd rdx, eax	       281	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147b8	          0x4889d0	                            mov rax, rdx	       281	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147bb	          0x4801c0	                            add rax, rax	       281	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147be	          0x4801d0	                            add rax, rdx	       281	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147c1	        0x48c1e003	                              shl rax, 3	       281	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147c5	    0x480500000000	                              add rax, 0	       281	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147cb	           0xfb600	                   movzx eax, byte [rax]	       281	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147ce	            0x3cff	                            cmp al, 0xff	       281	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147d0	            0x7521	                           jne 0x40147f3	       281	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147d2	      0xbf00000000	                              mov edi, 0	       283	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5	CALL_6
0x40147d7	      0xe800000000	                          call 0x40147dc	       283	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5	CALL_6
0x40147dc	          0x4889c7	                            mov rdi, rax	       283	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5	CALL_6
0x40147df	      0xb800000000	                              mov eax, 0	       283	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5	CALL_6
0x40147e4	      0xe800000000	                          call 0x40147e9	       283	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5	CALL_6
0x40147e9	      0xb800000000	                              mov eax, 0	       284	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147ee	      0xe92c020000	                           jmp 0x4014a1f	       284	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3	IF_5
0x40147f3	    0x8b0d00000000	            mov ecx, dword [0x040147f9] 	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x40147f9	          0x8b45fc	                mov eax, dword [rbp - 4]	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x40147fc	          0x4863d0	                         movsxd rdx, eax	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x40147ff	          0x4889d0	                            mov rax, rdx	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x4014802	          0x4801c0	                            add rax, rax	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x4014805	          0x4801d0	                            add rax, rdx	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x4014808	        0x48c1e003	                              shl rax, 3	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x401480c	    0x488d90000000	                          lea rdx, [rax]	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x4014813	          0x4863c1	                         movsxd rax, ecx	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x4014816	        0x4883c014	                           add rax, 0x14	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x401481a	    0x488914c50000	                  mov qword [rax*8], rdx	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x4014822	      0xe9f3010000	                           jmp 0x4014a1a	       286	tc-i386-intel.c	FUNCTION_148	ELSE_1	IF_3
0x4014827	    0x488b05000000	            mov rax, qword [0x0401482e] 	       288	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401482e	          0x4885c0	                           test rax, rax	       288	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014831	     0xf85de000000	                           jne 0x4014915	       288	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014837	          0x8b45fc	                mov eax, dword [rbp - 4]	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401483a	          0x4863d0	                         movsxd rdx, eax	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401483d	          0x4889d0	                            mov rax, rdx	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014840	          0x4801c0	                            add rax, rax	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014843	          0x4801d0	                            add rax, rdx	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014846	        0x48c1e003	                              shl rax, 3	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401484a	    0x480500000000	                              add rax, 0	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014850	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014854	          0xc0e803	                               shr al, 3	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014857	          0x83e001	                              and eax, 1	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401485a	            0x84c0	                             test al, al	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401485c	     0xf858e000000	                           jne 0x40148f0	       289	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014862	          0x8b45fc	                mov eax, dword [rbp - 4]	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014865	          0x4863d0	                         movsxd rdx, eax	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014868	          0x4889d0	                            mov rax, rdx	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401486b	          0x4801c0	                            add rax, rax	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401486e	          0x4801d0	                            add rax, rdx	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014871	        0x48c1e003	                              shl rax, 3	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014875	    0x480500000000	                              add rax, 0	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401487b	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401487f	          0xc0e804	                               shr al, 4	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014882	          0x83e001	                              and eax, 1	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014885	            0x84c0	                             test al, al	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014887	            0x7567	                           jne 0x40148f0	       290	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014889	          0x8b45fc	                mov eax, dword [rbp - 4]	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401488c	          0x4863d0	                         movsxd rdx, eax	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401488f	          0x4889d0	                            mov rax, rdx	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014892	          0x4801c0	                            add rax, rax	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014895	          0x4801d0	                            add rax, rdx	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014898	        0x48c1e003	                              shl rax, 3	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x401489c	    0x480500000000	                              add rax, 0	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148a2	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148a6	          0xc0e805	                               shr al, 5	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148a9	          0x83e001	                              and eax, 1	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148ac	            0x84c0	                             test al, al	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148ae	            0x7540	                           jne 0x40148f0	       291	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148b0	          0x8b45fc	                mov eax, dword [rbp - 4]	       292	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148b3	          0x4863d0	                         movsxd rdx, eax	       292	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148b6	          0x4889d0	                            mov rax, rdx	       292	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148b9	          0x4801c0	                            add rax, rax	       292	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148bc	          0x4801d0	                            add rax, rdx	       292	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148bf	        0x48c1e003	                              shl rax, 3	       292	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148c3	    0x480500000000	                              add rax, 0	       292	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148c9	           0xfb600	                   movzx eax, byte [rax]	       292	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148cc	            0x3cfc	                            cmp al, 0xfc	       292	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148ce	            0x7420	                            je 0x40148f0	       292	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148d0	          0x8b45fc	                mov eax, dword [rbp - 4]	       293	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148d3	          0x4863d0	                         movsxd rdx, eax	       293	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148d6	          0x4889d0	                            mov rax, rdx	       293	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148d9	          0x4801c0	                            add rax, rax	       293	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148dc	          0x4801d0	                            add rax, rdx	       293	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148df	        0x48c1e003	                              shl rax, 3	       293	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148e3	    0x480500000000	                              add rax, 0	       293	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148e9	           0xfb600	                   movzx eax, byte [rax]	       293	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148ec	            0x3cfd	                            cmp al, 0xfd	       293	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148ee	            0x7525	                           jne 0x4014915	       293	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148f0	          0x8b45fc	                mov eax, dword [rbp - 4]	       294	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148f3	          0x4863d0	                         movsxd rdx, eax	       294	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148f6	          0x4889d0	                            mov rax, rdx	       294	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148f9	          0x4801c0	                            add rax, rax	       294	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148fc	          0x4801d0	                            add rax, rdx	       294	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x40148ff	        0x48c1e003	                              shl rax, 3	       294	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014903	    0x480500000000	                              add rax, 0	       294	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014909	    0x488905000000	            mov qword [0x04014910], rax 	       294	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014910	      0xe905010000	                           jmp 0x4014a1a	       294	tc-i386-intel.c	FUNCTION_148	ELSE_2	IF_6
0x4014915	    0x488b05000000	            mov rax, qword [0x0401491c] 	       295	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x401491c	          0x4885c0	                           test rax, rax	       295	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x401491f	            0x752f	                           jne 0x4014950	       295	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x4014921	    0x8b0500000000	            mov eax, dword [0x04014927] 	       295	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x4014927	            0x85c0	                           test eax, eax	       295	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x4014929	            0x7525	                           jne 0x4014950	       295	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x401492b	          0x8b45fc	                mov eax, dword [rbp - 4]	       296	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x401492e	          0x4863d0	                         movsxd rdx, eax	       296	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x4014931	          0x4889d0	                            mov rax, rdx	       296	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x4014934	          0x4801c0	                            add rax, rax	       296	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x4014937	          0x4801d0	                            add rax, rdx	       296	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x401493a	        0x48c1e003	                              shl rax, 3	       296	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x401493e	    0x480500000000	                              add rax, 0	       296	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x4014944	    0x488905000000	            mov qword [0x0401494b], rax 	       296	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x401494b	      0xe9ca000000	                           jmp 0x4014a1a	       296	tc-i386-intel.c	FUNCTION_148	ELSE_3	IF_7
0x4014950	    0x488b05000000	            mov rax, qword [0x04014957] 	       297	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8
0x4014957	          0x4885c0	                           test rax, rax	       297	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8
0x401495a	     0xf85ae000000	                           jne 0x4014a0e	       297	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8
0x4014960	    0x8b0500000000	            mov eax, dword [0x04014966] 	       299	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x4014966	            0x85c0	                           test eax, eax	       299	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x4014968	            0x7552	                           jne 0x40149bc	       299	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x401496a	    0x488b05000000	            mov rax, qword [0x04014971] 	       300	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x4014971	          0x488b00	                    mov rax, qword [rax]	       300	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x4014974	          0x8b400c	              mov eax, dword [rax + 0xc]	       300	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x4014977	      0x3d1b0ff300	                       cmp eax, 0xf30f1b	       300	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x401497c	            0x743e	                            je 0x40149bc	       300	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x401497e	    0x488b05000000	            mov rax, qword [0x04014985] 	       301	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x4014985	          0x488b00	                    mov rax, qword [rax]	       301	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x4014988	          0x8b400c	              mov eax, dword [rax + 0xc]	       301	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x401498b	          0x83e0fe	                     and eax, 0xfffffffe	       301	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x401498e	      0x3d1a0f0000	                          cmp eax, 0xf1a	       301	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x4014993	            0x7427	                            je 0x40149bc	       301	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x4014995	          0x8b45fc	                mov eax, dword [rbp - 4]	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x4014998	          0x4863d0	                         movsxd rdx, eax	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x401499b	          0x4889d0	                            mov rax, rdx	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x401499e	          0x4801c0	                            add rax, rax	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149a1	          0x4801d0	                            add rax, rdx	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149a4	        0x48c1e003	                              shl rax, 3	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149a8	    0x480500000000	                              add rax, 0	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149ae	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149b2	          0xc0e806	                               shr al, 6	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149b5	          0x83e001	                              and eax, 1	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149b8	            0x84c0	                             test al, al	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149ba	            0x7422	                            je 0x40149de	       302	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149bc	          0x8b45fc	                mov eax, dword [rbp - 4]	       303	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149bf	          0x4863d0	                         movsxd rdx, eax	       303	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149c2	          0x4889d0	                            mov rax, rdx	       303	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149c5	          0x4801c0	                            add rax, rax	       303	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149c8	          0x4801d0	                            add rax, rdx	       303	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149cb	        0x48c1e003	                              shl rax, 3	       303	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149cf	    0x480500000000	                              add rax, 0	       303	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149d5	    0x488905000000	            mov qword [0x040149dc], rax 	       303	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149dc	            0xeb3c	                           jmp 0x4014a1a	       303	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	IF_9
0x40149de	    0x488b05000000	            mov rax, qword [0x040149e5] 	       307	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	ELSE_5
0x40149e5	    0x488905000000	            mov qword [0x040149ec], rax 	       307	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	ELSE_5
0x40149ec	          0x8b45fc	                mov eax, dword [rbp - 4]	       308	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	ELSE_5
0x40149ef	          0x4863d0	                         movsxd rdx, eax	       308	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	ELSE_5
0x40149f2	          0x4889d0	                            mov rax, rdx	       308	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	ELSE_5
0x40149f5	          0x4801c0	                            add rax, rax	       308	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	ELSE_5
0x40149f8	          0x4801d0	                            add rax, rdx	       308	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	ELSE_5
0x40149fb	        0x48c1e003	                              shl rax, 3	       308	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	ELSE_5
0x40149ff	    0x480500000000	                              add rax, 0	       308	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	ELSE_5
0x4014a05	    0x488905000000	            mov qword [0x04014a0c], rax 	       308	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	ELSE_5
0x4014a0c	            0xeb0c	                           jmp 0x4014a1a	       308	tc-i386-intel.c	FUNCTION_148	ELSE_4	IF_8	ELSE_5
0x4014a0e	      0xb800000000	                              mov eax, 0	       314	tc-i386-intel.c	FUNCTION_148	ELSE_6
0x4014a13	    0x488905000000	            mov qword [0x04014a1a], rax 	       314	tc-i386-intel.c	FUNCTION_148	ELSE_6
0x4014a1a	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_148
0x4014a1f	              0xc9	                                   leave	       317	tc-i386-intel.c	FUNCTION_148
0x4014a20	              0xc3	                                     ret	       317	tc-i386-intel.c	FUNCTION_148
set_intel_mnemonic	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	8
0x4001ffe	              0x55	                                push rbp	      2489	tc-i386.c	FUNCTION_45
0x4001fff	          0x4889e5	                            mov rbp, rsp	      2489	tc-i386.c	FUNCTION_45
0x4002002	          0x897dfc	                mov dword [rbp - 4], edi	      2489	tc-i386.c	FUNCTION_45
0x4002005	          0x8b45fc	                mov eax, dword [rbp - 4]	      2490	tc-i386.c	FUNCTION_45
0x4002008	    0x890500000000	            mov dword [0x0400200e], eax 	      2490	tc-i386.c	FUNCTION_45
0x400200e	              0x90	                                     nop	      2491	tc-i386.c	FUNCTION_45
0x400200f	              0x5d	                                 pop rbp	      2491	tc-i386.c	FUNCTION_45
0x4002010	              0xc3	                                     ret	      2491	tc-i386.c	FUNCTION_45
i386_intel_check	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	31
0x401458c	              0x55	                                push rbp	       223	tc-i386-intel.c	FUNCTION_146
0x401458d	          0x4889e5	                            mov rbp, rsp	       223	tc-i386-intel.c	FUNCTION_146
0x4014590	        0x4883ec20	                           sub rsp, 0x20	       223	tc-i386-intel.c	FUNCTION_146
0x4014594	        0x48897df8	                mov qword [rbp - 8], rdi	       223	tc-i386-intel.c	FUNCTION_146
0x4014598	        0x488975f0	             mov qword [rbp - 0x10], rsi	       223	tc-i386-intel.c	FUNCTION_146
0x401459c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       223	tc-i386-intel.c	FUNCTION_146
0x40145a0	    0x8b0500000000	            mov eax, dword [0x040145a6] 	       224	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145a6	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145a8	            0x781a	                            js 0x40145c4	       224	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145aa	    0x8b0500000000	            mov eax, dword [0x040145b0] 	       225	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145b0	            0x4898	                                    cdqe	       225	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145b2	        0x4883c014	                           add rax, 0x14	       225	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145b6	    0x488b04c50000	                  mov rax, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145be	        0x483b45f8	                cmp rax, qword [rbp - 8]	       225	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145c2	            0x751a	                           jne 0x40145de	       225	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145c4	    0x488b05000000	            mov rax, qword [0x040145cb] 	       226	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145cb	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       226	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145cf	            0x750d	                           jne 0x40145de	       226	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145d1	    0x488b05000000	            mov rax, qword [0x040145d8] 	       227	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145d8	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       227	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145dc	            0x741e	                            je 0x40145fc	       227	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145de	      0xbf00000000	                              mov edi, 0	       229	tc-i386-intel.c	FUNCTION_146	IF_1	CALL_2
0x40145e3	      0xe800000000	                          call 0x40145e8	       229	tc-i386-intel.c	FUNCTION_146	IF_1	CALL_2
0x40145e8	          0x4889c7	                            mov rdi, rax	       229	tc-i386-intel.c	FUNCTION_146	IF_1	CALL_2
0x40145eb	      0xb800000000	                              mov eax, 0	       229	tc-i386-intel.c	FUNCTION_146	IF_1	CALL_2
0x40145f0	      0xe800000000	                          call 0x40145f5	       229	tc-i386-intel.c	FUNCTION_146	IF_1	CALL_2
0x40145f5	      0xb800000000	                              mov eax, 0	       230	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145fa	            0xeb05	                           jmp 0x4014601	       230	tc-i386-intel.c	FUNCTION_146	IF_1
0x40145fc	      0xb801000000	                              mov eax, 1	       232	tc-i386-intel.c	FUNCTION_146
0x4014601	              0xc9	                                   leave	       233	tc-i386-intel.c	FUNCTION_146
0x4014602	              0xc3	                                     ret	       233	tc-i386-intel.c	FUNCTION_146
md_atof	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0	14
0x401175e	              0x55	                                push rbp	     10137	tc-i386.c	FUNCTION_118
0x401175f	          0x4889e5	                            mov rbp, rsp	     10137	tc-i386.c	FUNCTION_118
0x4011762	        0x4883ec20	                           sub rsp, 0x20	     10137	tc-i386.c	FUNCTION_118
0x4011766	          0x897dfc	                mov dword [rbp - 4], edi	     10137	tc-i386.c	FUNCTION_118
0x4011769	        0x488975f0	             mov qword [rbp - 0x10], rsi	     10137	tc-i386.c	FUNCTION_118
0x401176d	        0x488955e8	             mov qword [rbp - 0x18], rdx	     10137	tc-i386.c	FUNCTION_118
0x4011771	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     10140	tc-i386.c	FUNCTION_118	CALL_1
0x4011775	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     10140	tc-i386.c	FUNCTION_118	CALL_1
0x4011779	          0x8b45fc	                mov eax, dword [rbp - 4]	     10140	tc-i386.c	FUNCTION_118	CALL_1
0x401177c	      0xb900000000	                              mov ecx, 0	     10140	tc-i386.c	FUNCTION_118	CALL_1
0x4011781	            0x89c7	                            mov edi, eax	     10140	tc-i386.c	FUNCTION_118	CALL_1
0x4011783	      0xe800000000	                          call 0x4011788	     10140	tc-i386.c	FUNCTION_118	CALL_1
0x4011788	              0xc9	                                   leave	     10141	tc-i386.c	FUNCTION_118
0x4011789	              0xc3	                                     ret	     10141	tc-i386.c	FUNCTION_118
output_interseg_jump	CALL,13:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,10:ELSE,1:DO,0	146
0x400d044	              0x55	                                push rbp	      7546	tc-i386.c	FUNCTION_91
0x400d045	          0x4889e5	                            mov rbp, rsp	      7546	tc-i386.c	FUNCTION_91
0x400d048	              0x53	                                push rbx	      7546	tc-i386.c	FUNCTION_91
0x400d049	        0x4883ec28	                           sub rsp, 0x28	      7546	tc-i386.c	FUNCTION_91
0x400d04d	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      7552	tc-i386.c	FUNCTION_91
0x400d054	    0x8b0500000000	            mov eax, dword [0x0400d05a] 	      7553	tc-i386.c	FUNCTION_91	IF_1
0x400d05a	          0x83f801	                              cmp eax, 1	      7553	tc-i386.c	FUNCTION_91	IF_1
0x400d05d	            0x7507	                           jne 0x400d066	      7553	tc-i386.c	FUNCTION_91	IF_1
0x400d05f	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      7554	tc-i386.c	FUNCTION_91	IF_1
0x400d066	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      7556	tc-i386.c	FUNCTION_91
0x400d06d	     0xfb605000000	           movzx eax, byte [0x0400d074] 	      7557	tc-i386.c	FUNCTION_91	IF_2
0x400d074	            0x84c0	                             test al, al	      7557	tc-i386.c	FUNCTION_91	IF_2
0x400d076	            0x741a	                            je 0x400d092	      7557	tc-i386.c	FUNCTION_91	IF_2
0x400d078	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      7559	tc-i386.c	FUNCTION_91	IF_2
0x400d07f	    0x8b0500000000	            mov eax, dword [0x0400d085] 	      7560	tc-i386.c	FUNCTION_91	IF_2
0x400d085	          0x83e801	                              sub eax, 1	      7560	tc-i386.c	FUNCTION_91	IF_2
0x400d088	    0x890500000000	            mov dword [0x0400d08e], eax 	      7560	tc-i386.c	FUNCTION_91	IF_2
0x400d08e	        0x8375dc01	               xor dword [rbp - 0x24], 1	      7561	tc-i386.c	FUNCTION_91	IF_2
0x400d092	     0xfb605000000	           movzx eax, byte [0x0400d099] 	      7563	tc-i386.c	FUNCTION_91	IF_3
0x400d099	            0x84c0	                             test al, al	      7563	tc-i386.c	FUNCTION_91	IF_3
0x400d09b	            0x7413	                            je 0x400d0b0	      7563	tc-i386.c	FUNCTION_91	IF_3
0x400d09d	        0x8345d801	               add dword [rbp - 0x28], 1	      7565	tc-i386.c	FUNCTION_91	IF_3
0x400d0a1	    0x8b0500000000	            mov eax, dword [0x0400d0a7] 	      7566	tc-i386.c	FUNCTION_91	IF_3
0x400d0a7	          0x83e801	                              sub eax, 1	      7566	tc-i386.c	FUNCTION_91	IF_3
0x400d0aa	    0x890500000000	            mov dword [0x0400d0b0], eax 	      7566	tc-i386.c	FUNCTION_91	IF_3
0x400d0b0	    0xc745d4040000	               mov dword [rbp - 0x2c], 4	      7569	tc-i386.c	FUNCTION_91
0x400d0b7	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      7570	tc-i386.c	FUNCTION_91	IF_4
0x400d0bb	            0x7407	                            je 0x400d0c4	      7570	tc-i386.c	FUNCTION_91	IF_4
0x400d0bd	    0xc745d4020000	               mov dword [rbp - 0x2c], 2	      7571	tc-i386.c	FUNCTION_91	IF_4
0x400d0c4	    0x8b0500000000	            mov eax, dword [0x0400d0ca] 	      7573	tc-i386.c	FUNCTION_91	IF_5
0x400d0ca	            0x85c0	                           test eax, eax	      7573	tc-i386.c	FUNCTION_91	IF_5
0x400d0cc	            0x7421	                            je 0x400d0ef	      7573	tc-i386.c	FUNCTION_91	IF_5
0x400d0ce	    0x8b0500000000	            mov eax, dword [0x0400d0d4] 	      7573	tc-i386.c	FUNCTION_91	IF_5
0x400d0d4	            0x85c0	                           test eax, eax	      7573	tc-i386.c	FUNCTION_91	IF_5
0x400d0d6	            0x7517	                           jne 0x400d0ef	      7573	tc-i386.c	FUNCTION_91	IF_5
0x400d0d8	      0xbf00000000	                              mov edi, 0	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d0dd	      0xe800000000	                          call 0x400d0e2	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d0e2	          0x4889c7	                            mov rdi, rax	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d0e5	      0xb800000000	                              mov eax, 0	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d0ea	      0xe800000000	                          call 0x400d0ef	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d0ef	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400d0f2	          0x8d5003	                      lea edx, [rax + 3]	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400d0f5	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400d0f8	             0x1d0	                            add eax, edx	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400d0fa	            0x4898	                                    cdqe	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400d0fc	          0x4889c7	                            mov rdi, rax	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400d0ff	      0xe800000000	                          call 0x400d104	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400d104	        0x488945e0	             mov qword [rbp - 0x20], rax	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400d108	     0xfb605000000	           movzx eax, byte [0x0400d10f] 	      7579	tc-i386.c	FUNCTION_91	IF_6
0x400d10f	            0x84c0	                             test al, al	      7579	tc-i386.c	FUNCTION_91	IF_6
0x400d111	            0x740f	                            je 0x400d122	      7579	tc-i386.c	FUNCTION_91	IF_6
0x400d113	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7580	tc-i386.c	FUNCTION_91	IF_6
0x400d117	        0x488d5001	                      lea rdx, [rax + 1]	      7580	tc-i386.c	FUNCTION_91	IF_6
0x400d11b	        0x488955e0	             mov qword [rbp - 0x20], rdx	      7580	tc-i386.c	FUNCTION_91	IF_6
0x400d11f	          0xc60066	                    mov byte [rax], 0x66	      7580	tc-i386.c	FUNCTION_91	IF_6
0x400d122	     0xfb605000000	           movzx eax, byte [0x0400d129] 	      7582	tc-i386.c	FUNCTION_91	IF_7
0x400d129	            0x84c0	                             test al, al	      7582	tc-i386.c	FUNCTION_91	IF_7
0x400d12b	            0x7415	                            je 0x400d142	      7582	tc-i386.c	FUNCTION_91	IF_7
0x400d12d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7583	tc-i386.c	FUNCTION_91	IF_7
0x400d131	        0x488d5001	                      lea rdx, [rax + 1]	      7583	tc-i386.c	FUNCTION_91	IF_7
0x400d135	        0x488955e0	             mov qword [rbp - 0x20], rdx	      7583	tc-i386.c	FUNCTION_91	IF_7
0x400d139	     0xfb615000000	           movzx edx, byte [0x0400d140] 	      7583	tc-i386.c	FUNCTION_91	IF_7
0x400d140	            0x8810	                      mov byte [rax], dl	      7583	tc-i386.c	FUNCTION_91	IF_7
0x400d142	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7585	tc-i386.c	FUNCTION_91
0x400d146	        0x488d5001	                      lea rdx, [rax + 1]	      7585	tc-i386.c	FUNCTION_91
0x400d14a	        0x488955e0	             mov qword [rbp - 0x20], rdx	      7585	tc-i386.c	FUNCTION_91
0x400d14e	    0x8b1500000000	            mov edx, dword [0x0400d154] 	      7585	tc-i386.c	FUNCTION_91
0x400d154	            0x8810	                      mov byte [rax], dl	      7585	tc-i386.c	FUNCTION_91
0x400d156	    0x488b05000000	            mov rax, qword [0x0400d15d] 	      7586	tc-i386.c	FUNCTION_91	IF_8
0x400d15d	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      7586	tc-i386.c	FUNCTION_91	IF_8
0x400d161	            0x3c02	                               cmp al, 2	      7586	tc-i386.c	FUNCTION_91	IF_8
0x400d163	            0x7569	                           jne 0x400d1ce	      7586	tc-i386.c	FUNCTION_91	IF_8
0x400d165	    0x488b05000000	            mov rax, qword [0x0400d16c] 	      7588	tc-i386.c	FUNCTION_91	IF_8
0x400d16c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7588	tc-i386.c	FUNCTION_91	IF_8
0x400d170	        0x488945e8	             mov qword [rbp - 0x18], rax	      7588	tc-i386.c	FUNCTION_91	IF_8
0x400d174	        0x837dd402	               cmp dword [rbp - 0x2c], 2	      7590	tc-i386.c	FUNCTION_91	IF_8	IF_9
0x400d178	            0x753c	                           jne 0x400d1b6	      7590	tc-i386.c	FUNCTION_91	IF_8	IF_9
0x400d17a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7591	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_4
0x400d17e	          0x4889c7	                            mov rdi, rax	      7591	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_4
0x400d181	      0xe85545ffff	          call sym.fits_in_unsigned_word	      7591	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_4
0x400d186	            0x85c0	                           test eax, eax	      7591	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_4
0x400d188	            0x752c	                           jne 0x400d1b6	      7591	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_4
0x400d18a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7592	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_5
0x400d18e	          0x4889c7	                            mov rdi, rax	      7592	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_5
0x400d191	      0xe85d45ffff	            call sym.fits_in_signed_word	      7592	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_5
0x400d196	            0x85c0	                           test eax, eax	      7592	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_5
0x400d198	            0x751c	                           jne 0x400d1b6	      7592	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_5
0x400d19a	      0xbf00000000	                              mov edi, 0	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d19f	      0xe800000000	                          call 0x400d1a4	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d1a4	          0x4889c7	                            mov rdi, rax	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d1a7	      0xb800000000	                              mov eax, 0	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d1ac	      0xe800000000	                          call 0x400d1b1	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d1b1	      0xe9c7000000	                           jmp 0x400d27d	      7595	tc-i386.c	FUNCTION_91	IF_8	IF_9
0x400d1b6	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x400d1ba	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x400d1bd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x400d1c1	          0x4889ce	                            mov rsi, rcx	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x400d1c4	          0x4889c7	                            mov rdi, rax	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x400d1c7	      0xe800000000	                          call 0x400d1cc	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x400d1cc	            0xeb54	                           jmp 0x400d222	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x400d1ce	    0x8b1500000000	            mov edx, dword [0x0400d1d4] 	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d1d4	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d1d7	            0x89d1	                            mov ecx, edx	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d1d9	      0xba00000000	                              mov edx, 0	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d1de	      0xbe00000000	                              mov esi, 0	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d1e3	            0x89c7	                            mov edi, eax	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d1e5	      0xe8a05cffff	                          call sym.reloc	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d1ea	            0x89c7	                            mov edi, eax	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d1ec	    0x488b0d000000	            mov rcx, qword [0x0400d1f3] 	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d1f3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d1f7	    0x488b15000000	            mov rdx, qword [0x0400d1fe] 	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d1fe	        0x4883c27c	                           add rdx, 0x7c	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d202	          0x4829d0	                            sub rax, rdx	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d205	            0x89c6	                            mov esi, eax	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d207	    0x488b05000000	            mov rax, qword [0x0400d20e] 	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d20e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d211	          0x4189f9	                            mov r9d, edi	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d214	    0x41b800000000	                              mov r8d, 0	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d21a	          0x4889c7	                            mov rdi, rax	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d21d	      0xe800000000	                          call 0x400d222	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d222	    0x488b05000000	            mov rax, qword [0x0400d229] 	      7602	tc-i386.c	FUNCTION_91	IF_10
0x400d229	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      7602	tc-i386.c	FUNCTION_91	IF_10
0x400d22d	            0x3c02	                               cmp al, 2	      7602	tc-i386.c	FUNCTION_91	IF_10
0x400d22f	            0x7421	                            je 0x400d252	      7602	tc-i386.c	FUNCTION_91	IF_10
0x400d231	    0x488b1d000000	            mov rbx, qword [0x0400d238] 	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400d238	      0xbf00000000	                              mov edi, 0	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400d23d	      0xe800000000	                          call 0x400d242	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400d242	          0x4889de	                            mov rsi, rbx	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400d245	          0x4889c7	                            mov rdi, rax	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400d248	      0xb800000000	                              mov eax, 0	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400d24d	      0xe800000000	                          call 0x400d252	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400d252	    0x488b05000000	            mov rax, qword [0x0400d259] 	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400d259	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400d25d	          0x4889c1	                            mov rcx, rax	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400d260	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400d263	          0x4863d0	                         movsxd rdx, eax	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400d266	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400d26a	          0x4801d0	                            add rax, rdx	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400d26d	      0xba02000000	                              mov edx, 2	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400d272	          0x4889ce	                            mov rsi, rcx	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400d275	          0x4889c7	                            mov rdi, rax	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400d278	      0xe800000000	                          call 0x400d27d	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400d27d	        0x4883c428	                           add rsp, 0x28	      7606	tc-i386.c	FUNCTION_91
0x400d281	              0x5b	                                 pop rbx	      7606	tc-i386.c	FUNCTION_91
0x400d282	              0x5d	                                 pop rbp	      7606	tc-i386.c	FUNCTION_91
0x400d283	              0xc3	                                     ret	      7606	tc-i386.c	FUNCTION_91
mode_from_disp_size	CALL,0:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,2:DO,0	26
0x400165c	              0x55	                                push rbp	      2136	tc-i386.c	FUNCTION_29
0x400165d	          0x4889e5	                            mov rbp, rsp	      2136	tc-i386.c	FUNCTION_29
0x4001660	        0x48897df0	             mov qword [rbp - 0x10], rdi	      2136	tc-i386.c	FUNCTION_29
0x4001664	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      2137	tc-i386.c	FUNCTION_29	IF_1
0x4001668	          0x83e001	                              and eax, 1	      2137	tc-i386.c	FUNCTION_29	IF_1
0x400166b	            0x84c0	                             test al, al	      2137	tc-i386.c	FUNCTION_29	IF_1
0x400166d	            0x7407	                            je 0x4001676	      2137	tc-i386.c	FUNCTION_29	IF_1
0x400166f	      0xb801000000	                              mov eax, 1	      2138	tc-i386.c	FUNCTION_29	IF_1
0x4001674	            0xeb2d	                           jmp 0x40016a3	      2138	tc-i386.c	FUNCTION_29	IF_1
0x4001676	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      2139	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x400167a	          0x83e002	                              and eax, 2	      2139	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x400167d	            0x84c0	                             test al, al	      2139	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x400167f	            0x7516	                           jne 0x4001697	      2139	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001681	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      2140	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001685	          0x83e004	                              and eax, 4	      2140	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001688	            0x84c0	                             test al, al	      2140	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x400168a	            0x750b	                           jne 0x4001697	      2140	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x400168c	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      2141	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001690	          0x83e008	                              and eax, 8	      2141	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001693	            0x84c0	                             test al, al	      2141	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001695	            0x7407	                            je 0x400169e	      2141	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001697	      0xb802000000	                              mov eax, 2	      2142	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x400169c	            0xeb05	                           jmp 0x40016a3	      2142	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x400169e	      0xb800000000	                              mov eax, 0	      2144	tc-i386.c	FUNCTION_29	ELSE_2
0x40016a3	              0x5d	                                 pop rbp	      2145	tc-i386.c	FUNCTION_29	ELSE_2
0x40016a4	              0xc3	                                     ret	      2145	tc-i386.c	FUNCTION_29	ELSE_2
i386_validate_fix	CALL,1:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,8:ELSE,4:DO,0	71
0x4013a2c	              0x55	                                push rbp	     11250	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	ELSE_1
0x4013a2d	          0x4889e5	                            mov rbp, rsp	     11250	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	ELSE_1
0x4013a30	        0x4883ec10	                           sub rsp, 0x10	     11250	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	ELSE_1
0x4013a34	        0x48897df8	                mov qword [rbp - 8], rdi	     11250	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	ELSE_1
0x4013a38	        0x488b45f8	                mov rax, qword [rbp - 8]	     11251	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4013a3c	        0x488b4020	            mov rax, qword [rax + 0x20] 	     11251	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4013a40	          0x4885c0	                           test rax, rax	     11251	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4013a43	     0xf84b0000000	                            je 0x4013af9	     11251	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4013a49	        0x488b45f8	                mov rax, qword [rbp - 8]	     11253	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2
0x4013a4d	        0x488b5020	            mov rdx, qword [rax + 0x20] 	     11253	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2
0x4013a51	    0x488b05000000	            mov rax, qword [0x04013a58] 	     11253	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2
0x4013a58	          0x4839c2	                            cmp rdx, rax	     11253	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2
0x4013a5b	     0xf85c9000000	                           jne 0x4013b2a	     11253	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2
0x4013a61	        0x488b45f8	                mov rax, qword [rbp - 8]	     11255	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	IF_6
0x4013a65	          0x8b4050	            mov eax, dword [rax + 0x50] 	     11255	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	IF_6
0x4013a68	          0x83f809	                              cmp eax, 9	     11255	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	IF_6
0x4013a6b	            0x755c	                           jne 0x4013ac9	     11255	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	IF_6
0x4013a6d	    0x8b0500000000	            mov eax, dword [0x04013a73] 	     11257	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x4013a73	            0x85c0	                           test eax, eax	     11257	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x4013a75	            0x7514	                           jne 0x4013a8b	     11257	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x4013a77	      0xba00000000	                              mov edx, 0	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x4013a7c	      0xbefa2b0000	                         mov esi, 0x2bfa	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x4013a81	      0xbf00000000	                              mov edi, 0	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x4013a86	      0xe800000000	                          call 0x4013a8b	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x4013a8b	        0x488b45f8	                mov rax, qword [rbp - 8]	     11260	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_3
0x4013a8f	           0xfb600	                   movzx eax, byte [rax]	     11260	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_3
0x4013a92	          0x83e010	                           and eax, 0x10	     11260	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_3
0x4013a95	            0x84c0	                             test al, al	     11260	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_3
0x4013a97	            0x7423	                            je 0x4013abc	     11260	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_3
0x4013a99	        0x488b45f8	                mov rax, qword [rbp - 8]	     11262	tc-i386.c	FUNCTION_133	ELSE_3
0x4013a9d	           0xfb600	                   movzx eax, byte [rax]	     11262	tc-i386.c	FUNCTION_133	ELSE_3
0x4013aa0	          0x83e008	                              and eax, 8	     11262	tc-i386.c	FUNCTION_133	ELSE_3
0x4013aa3	            0x84c0	                             test al, al	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x4013aa5	            0x7407	                            je 0x4013aae	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x4013aa7	      0xba9b010000	                          mov edx, 0x19b	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x4013aac	            0xeb05	                           jmp 0x4013ab3	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x4013aae	      0xba9a010000	                          mov edx, 0x19a	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x4013ab3	        0x488b45f8	                mov rax, qword [rbp - 8]	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x4013ab7	          0x895050	             mov dword [rax + 0x50], edx	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x4013aba	            0xeb2f	                           jmp 0x4013aeb	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x4013abc	        0x488b45f8	                mov rax, qword [rbp - 8]	     11266	tc-i386.c	FUNCTION_133	ELSE_3	ELSE_4	IF_7	IF_8
0x4013ac0	    0xc74050830100	          mov dword [rax + 0x50], 0x183 	     11266	tc-i386.c	FUNCTION_133	ELSE_3	ELSE_4	IF_7	IF_8
0x4013ac7	            0xeb22	                           jmp 0x4013aeb	     11266	tc-i386.c	FUNCTION_133	ELSE_3	ELSE_4	IF_7	IF_8
0x4013ac9	    0x8b0500000000	            mov eax, dword [0x04013acf] 	     11270	tc-i386.c	FUNCTION_133
0x4013acf	            0x85c0	                           test eax, eax	     11270	tc-i386.c	FUNCTION_133
0x4013ad1	            0x750d	                           jne 0x4013ae0	     11270	tc-i386.c	FUNCTION_133
0x4013ad3	        0x488b45f8	                mov rax, qword [rbp - 8]	     11271	tc-i386.c	
0x4013ad7	    0xc740506a0100	          mov dword [rax + 0x50], 0x16a 	     11271	tc-i386.c	
0x4013ade	            0xeb0b	                           jmp 0x4013aeb	     11271	tc-i386.c	
0x4013ae0	        0x488b45f8	                mov rax, qword [rbp - 8]	     11273	tc-i386.c	
0x4013ae4	    0xc740508d0100	          mov dword [rax + 0x50], 0x18d 	     11273	tc-i386.c	
0x4013aeb	        0x488b45f8	                mov rax, qword [rbp - 8]	     11275	tc-i386.c	FUNCTION_134
0x4013aef	    0x48c740200000	               mov qword [rax + 0x20], 0	     11275	tc-i386.c	FUNCTION_134
0x4013af7	            0xeb31	                           jmp 0x4013b2a	     11286	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013af9	    0x8b0500000000	            mov eax, dword [0x04013aff] 	     11279	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013aff	            0x85c0	                           test eax, eax	     11279	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013b01	            0x7527	                           jne 0x4013b2a	     11279	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013b03	        0x488b45f8	                mov rax, qword [rbp - 8]	     11281	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013b07	          0x8b4050	            mov eax, dword [rax + 0x50] 	     11281	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013b0a	      0x3d64010000	                          cmp eax, 0x164	     11281	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013b0f	            0x7519	                           jne 0x4013b2a	     11281	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013b11	        0x488b45f8	                mov rax, qword [rbp - 8]	     11282	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013b15	           0xfb600	                   movzx eax, byte [rax]	     11282	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013b18	          0x83e010	                           and eax, 0x10	     11282	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013b1b	            0x84c0	                             test al, al	     11282	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013b1d	            0x740b	                            je 0x4013b2a	     11282	tc-i386.c	FUNCTION_134	SWITCH_1
0x4013b1f	        0x488b45f8	                mov rax, qword [rbp - 8]	     11283	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	CALL_1
0x4013b23	    0xc740507c0100	          mov dword [rax + 0x50], 0x17c 	     11283	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	CALL_1
0x4013b2a	              0x90	                                     nop	     11286	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b2b	              0xc9	                                   leave	     11286	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4013b2c	              0xc3	                                     ret	     11286	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
md_estimate_size_before_relax	CALL,10:FOR,0:WHILE,0:functions,0:SWITCH,1:IF,6:ELSE,3:DO,0	235
0x4010dfb	              0x55	                                push rbp	      9731	tc-i386.c	FUNCTION_115
0x4010dfc	          0x4889e5	                            mov rbp, rsp	      9731	tc-i386.c	FUNCTION_115
0x4010dff	              0x53	                                push rbx	      9731	tc-i386.c	FUNCTION_115
0x4010e00	        0x4883ec38	                           sub rsp, 0x38	      9731	tc-i386.c	FUNCTION_115
0x4010e04	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      9731	tc-i386.c	FUNCTION_115
0x4010e08	        0x488975c0	             mov qword [rbp - 0x40], rsi	      9731	tc-i386.c	FUNCTION_115
0x4010e0c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x4010e10	        0x488b4028	            mov rax, qword [rax + 0x28] 	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x4010e14	          0x4889c7	                            mov rdi, rax	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x4010e17	      0xe800000000	                          call 0x4010e1c	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x4010e1c	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x4010e20	            0x7523	                           jne 0x4010e45	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x4010e22	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9739	tc-i386.c	FUNCTION_115	IF_1	CALL_2
0x4010e26	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9739	tc-i386.c	FUNCTION_115	IF_1	CALL_2
0x4010e2a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9739	tc-i386.c	FUNCTION_115	IF_1	CALL_2
0x4010e2e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      9739	tc-i386.c	FUNCTION_115	IF_1	CALL_2
0x4010e32	          0x4889d6	                            mov rsi, rdx	      9739	tc-i386.c	FUNCTION_115	IF_1	CALL_2
0x4010e35	          0x4889c7	                            mov rdi, rax	      9739	tc-i386.c	FUNCTION_115	IF_1	CALL_2
0x4010e38	      0xe808ffffff	call sym.elf_symbol_resolved_in_segment_p	      9739	tc-i386.c	FUNCTION_115	IF_1	CALL_2
0x4010e3d	            0x85c0	                           test eax, eax	      9738	tc-i386.c	FUNCTION_115	IF_1
0x4010e3f	     0xf85da020000	                           jne 0x401111f	      9738	tc-i386.c	FUNCTION_115	IF_1
0x4010e45	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9750	tc-i386.c	FUNCTION_115	IF_1
0x4010e49	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9750	tc-i386.c	FUNCTION_115	IF_1
0x4010e4c	          0x83e001	                              and eax, 1	      9750	tc-i386.c	FUNCTION_115	IF_1
0x4010e4f	            0x85c0	                           test eax, eax	      9750	tc-i386.c	FUNCTION_115	IF_1
0x4010e51	            0x7407	                            je 0x4010e5a	      9750	tc-i386.c	FUNCTION_115	IF_1
0x4010e53	      0xb802000000	                              mov eax, 2	      9750	tc-i386.c	FUNCTION_115	IF_1
0x4010e58	            0xeb05	                           jmp 0x4010e5f	      9750	tc-i386.c	FUNCTION_115	IF_1
0x4010e5a	      0xb804000000	                              mov eax, 4	      9750	tc-i386.c	FUNCTION_115	IF_1
0x4010e5f	          0x8945d8	             mov dword [rbp - 0x28], eax	      9750	tc-i386.c	FUNCTION_115	IF_1
0x4010e62	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x4010e66	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x4010e6a	        0x4883f847	                           cmp rax, 0x47	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x4010e6e	            0x740d	                            je 0x4010e7d	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x4010e70	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9756	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x4010e74	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9756	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x4010e78	          0x8945d4	             mov dword [rbp - 0x2c], eax	      9756	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x4010e7b	            0xeb33	                           jmp 0x4010eb0	      9756	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x4010e7d	        0x837dd802	               cmp dword [rbp - 0x28], 2	      9757	tc-i386.c	FUNCTION_115	IF_1	ELSE_1	IF_3
0x4010e81	            0x7509	                           jne 0x4010e8c	      9757	tc-i386.c	FUNCTION_115	IF_1	ELSE_1	IF_3
0x4010e83	    0xc745d40b0000	            mov dword [rbp - 0x2c], 0xb 	      9758	tc-i386.c	FUNCTION_115	IF_1	ELSE_1	IF_3
0x4010e8a	            0xeb24	                           jmp 0x4010eb0	      9758	tc-i386.c	FUNCTION_115	IF_1	ELSE_1	IF_3
0x4010e8c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x4010e90	        0x488b4028	            mov rax, qword [rax + 0x28] 	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x4010e94	          0x4889c7	                            mov rdi, rax	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x4010e97	      0xe8e2beffff	                   call sym.need_plt32_p	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x4010e9c	            0x85c0	                           test eax, eax	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x4010e9e	            0x7409	                            je 0x4010ea9	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x4010ea0	    0xc745d47e0100	          mov dword [rbp - 0x2c], 0x17e 	      9761	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4
0x4010ea7	            0xeb07	                           jmp 0x4010eb0	      9761	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4
0x4010ea9	    0xc745d4090000	               mov dword [rbp - 0x2c], 9	      9764	tc-i386.c	FUNCTION_115	IF_1	ELSE_3
0x4010eb0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9766	tc-i386.c	FUNCTION_115	IF_1
0x4010eb4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9766	tc-i386.c	FUNCTION_115	IF_1
0x4010eb8	          0x8945dc	             mov dword [rbp - 0x24], eax	      9766	tc-i386.c	FUNCTION_115	IF_1
0x4010ebb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9767	tc-i386.c	FUNCTION_115	IF_1
0x4010ebf	        0x488b4030	            mov rax, qword [rax + 0x30] 	      9767	tc-i386.c	FUNCTION_115	IF_1
0x4010ec3	        0x488945e0	             mov qword [rbp - 0x20], rax	      9767	tc-i386.c	FUNCTION_115	IF_1
0x4010ec7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010ecb	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010ece	          0xc1e802	                              shr eax, 2	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010ed1	          0x83f801	                              cmp eax, 1	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010ed4	     0xf840d010000	                            je 0x4010fe7	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010eda	          0x83f801	                              cmp eax, 1	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010edd	            0x720a	                            jb 0x4010ee9	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010edf	          0x83f802	                              cmp eax, 2	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010ee2	            0x745d	                            je 0x4010f41	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010ee4	      0xe9ea010000	                           jmp 0x40110d3	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010ee9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9773	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010eed	          0xc600e9	                    mov byte [rax], 0xe9	      9773	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010ef0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9774	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010ef4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9774	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010ef8	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9774	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010efb	            0x4898	                                    cdqe	      9774	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010efd	          0x4801c2	                            add rdx, rax	      9774	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010f00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9774	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010f04	        0x48895010	             mov qword [rax + 0x10], rdx	      9774	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010f08	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f0c	        0x4c8b4020	              mov r8, qword [rax + 0x20]	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f10	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f14	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f18	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f1b	          0x8b75dc	             mov esi, dword [rbp - 0x24]	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f1e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f22	        0x4883ec08	                              sub rsp, 8	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f26	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f29	              0x57	                                push rdi	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f2a	    0x41b901000000	                              mov r9d, 1	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f30	          0x4889c7	                            mov rdi, rax	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f33	      0xe800000000	                          call 0x4010f38	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f38	        0x4883c410	                           add rsp, 0x10	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x4010f3c	      0xe9bf010000	                           jmp 0x4011100	      9779	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4010f41	        0x837dd802	               cmp dword [rbp - 0x28], 2	      9782	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f45	     0xf859c000000	                           jne 0x4010fe7	      9782	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f4b	    0x8b0500000000	            mov eax, dword [0x04010f51] 	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f51	            0x85c0	                           test eax, eax	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f53	            0x7412	                            je 0x4010f67	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f55	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f59	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f5d	        0x4883f847	                           cmp rax, 0x47	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f61	     0xf8480000000	                            je 0x4010fe7	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f67	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9787	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f6b	           0xfb600	                   movzx eax, byte [rax]	      9787	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f6e	          0x83f001	                              xor eax, 1	      9787	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f71	            0x89c2	                            mov edx, eax	      9787	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f73	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9787	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f77	            0x8810	                      mov byte [rax], dl	      9787	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f79	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9788	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f7d	        0x4883c001	                              add rax, 1	      9788	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f81	          0xc60003	                       mov byte [rax], 3	      9788	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f84	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9790	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f88	        0x4883c002	                              add rax, 2	      9790	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f8c	          0xc600e9	                    mov byte [rax], 0xe9	      9790	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f8f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9793	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f93	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9793	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f97	        0x488d5004	                      lea rdx, [rax + 4]	      9793	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f9b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9793	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010f9f	        0x48895010	             mov qword [rax + 0x10], rdx	      9793	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010fa3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fa7	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010faf	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fb3	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fb6	          0x8d7002	                      lea esi, [rax + 2]	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fb9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fbd	        0x4883ec08	                              sub rsp, 8	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fc1	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fc4	              0x51	                                push rcx	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fc5	    0x41b901000000	                              mov r9d, 1	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fcb	          0x4989f8	                             mov r8, rdi	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fce	          0x4889d1	                            mov rcx, rdx	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fd1	      0xba02000000	                              mov edx, 2	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fd6	          0x4889c7	                            mov rdi, rax	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fd9	      0xe800000000	                          call 0x4010fde	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fde	        0x4883c410	                           add rsp, 0x10	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x4010fe2	      0xe919010000	                           jmp 0x4011100	      9798	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x4010fe7	    0x8b0500000000	            mov eax, dword [0x04010fed] 	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4010fed	            0x85c0	                           test eax, eax	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4010fef	            0x7471	                            je 0x4011062	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4010ff1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4010ff5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4010ff9	        0x4883f847	                           cmp rax, 0x47	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4010ffd	            0x7563	                           jne 0x4011062	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4010fff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9807	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4011003	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9807	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4011007	        0x488d5001	                      lea rdx, [rax + 1]	      9807	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x401100b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9807	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x401100f	        0x48895010	             mov qword [rax + 0x10], rdx	      9807	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4011013	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x4011017	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x401101b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x401101f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x4011023	          0x8b75dc	             mov esi, dword [rbp - 0x24]	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x4011026	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x401102a	        0x4883ec08	                              sub rsp, 8	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x401102e	            0x6a0d	                                push 0xd	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x4011030	    0x41b901000000	                              mov r9d, 1	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x4011036	          0x4989c8	                             mov r8, rcx	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x4011039	          0x4889d1	                            mov rcx, rdx	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x401103c	      0xba01000000	                              mov edx, 1	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x4011041	          0x4889c7	                            mov rdi, rax	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x4011044	      0xe800000000	                          call 0x4011049	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x4011049	        0x4883c410	                           add rsp, 0x10	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x401104d	        0x488945e8	             mov qword [rbp - 0x18], rax	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x4011051	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9812	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4011055	           0xfb610	                   movzx edx, byte [rax]	      9812	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4011058	          0x83ca80	                      or edx, 0xffffff80	      9812	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x401105b	            0x8810	                      mov byte [rax], dl	      9812	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x401105d	      0xe99e000000	                           jmp 0x4011100	      9813	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x4011062	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4011066	        0x488d5001	                      lea rdx, [rax + 1]	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x401106a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x401106e	           0xfb600	                   movzx eax, byte [rax]	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4011071	          0x83c010	                           add eax, 0x10	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4011074	            0x8802	                      mov byte [rdx], al	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4011076	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9819	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x401107a	          0xc6000f	                     mov byte [rax], 0xf	      9819	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x401107d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4011081	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4011085	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4011088	          0x83c001	                              add eax, 1	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x401108b	            0x4898	                                    cdqe	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x401108d	          0x4801c2	                            add rdx, rax	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4011090	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4011094	        0x48895010	             mov qword [rax + 0x10], rdx	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x4011098	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x401109c	        0x4c8b4020	              mov r8, qword [rax + 0x20]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110a4	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110a8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110ab	          0x8d7801	                      lea edi, [rax + 1]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110ae	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110b5	        0x4883ec08	                              sub rsp, 8	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110b9	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110bc	              0x56	                                push rsi	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110bd	    0x41b901000000	                              mov r9d, 1	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110c3	            0x89fe	                            mov esi, edi	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110c5	          0x4889c7	                            mov rdi, rax	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110c8	      0xe800000000	                          call 0x40110cd	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110cd	        0x4883c410	                           add rsp, 0x10	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x40110d1	            0xeb2d	                           jmp 0x4011100	      9826	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x40110d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x40110d7	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x40110da	            0x89c3	                            mov ebx, eax	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x40110dc	      0xbf00000000	                              mov edi, 0	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x40110e1	      0xe800000000	                          call 0x40110e6	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x40110e6	      0xb900000000	                              mov ecx, 0	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x40110eb	      0xba65260000	                         mov edx, 0x2665	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x40110f0	          0x4889de	                            mov rsi, rbx	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x40110f3	          0x4889c7	                            mov rdi, rax	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x40110f6	      0xb800000000	                              mov eax, 0	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x40110fb	      0xe800000000	                          call 0x4011100	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x4011100	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9832	tc-i386.c	FUNCTION_115	IF_1	CALL_10
0x4011104	          0x4889c7	                            mov rdi, rax	      9832	tc-i386.c	FUNCTION_115	IF_1	CALL_10
0x4011107	      0xe800000000	                          call 0x401110c	      9832	tc-i386.c	FUNCTION_115	IF_1	CALL_10
0x401110c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9833	tc-i386.c	FUNCTION_115	IF_1
0x4011110	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9833	tc-i386.c	FUNCTION_115	IF_1
0x4011114	            0x89c2	                            mov edx, eax	      9833	tc-i386.c	FUNCTION_115	IF_1
0x4011116	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9833	tc-i386.c	FUNCTION_115	IF_1
0x4011119	            0x29c2	                            sub edx, eax	      9833	tc-i386.c	FUNCTION_115	IF_1
0x401111b	            0x89d0	                            mov eax, edx	      9833	tc-i386.c	FUNCTION_115	IF_1
0x401111d	            0xeb22	                           jmp 0x4011141	      9833	tc-i386.c	FUNCTION_115	IF_1
0x401111f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9842	tc-i386.c	FUNCTION_115
0x4011123	          0x8b4060	            mov eax, dword [rax + 0x60] 	      9842	tc-i386.c	FUNCTION_115
0x4011126	            0x89c2	                            mov edx, eax	      9842	tc-i386.c	FUNCTION_115
0x4011128	          0x4889d0	                            mov rax, rdx	      9842	tc-i386.c	FUNCTION_115
0x401112b	          0x4801c0	                            add rax, rax	      9842	tc-i386.c	FUNCTION_115
0x401112e	          0x4801d0	                            add rax, rdx	      9842	tc-i386.c	FUNCTION_115
0x4011131	        0x48c1e003	                              shl rax, 3	      9842	tc-i386.c	FUNCTION_115
0x4011135	    0x480500000000	                              add rax, 0	      9842	tc-i386.c	FUNCTION_115
0x401113b	           0xfb600	                   movzx eax, byte [rax]	      9842	tc-i386.c	FUNCTION_115
0x401113e	           0xfb6c0	                           movzx eax, al	      9842	tc-i386.c	FUNCTION_115
0x4011141	        0x488b5df8	                mov rbx, qword [rbp - 8]	      9843	tc-i386.c	FUNCTION_115
0x4011145	              0xc9	                                   leave	      9843	tc-i386.c	FUNCTION_115
0x4011146	              0xc3	                                     ret	      9843	tc-i386.c	FUNCTION_115
set_intel_syntax	CALL,10:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,4:ELSE,3:DO,0	113
0x4001e49	              0x55	                                push rbp	      2452	tc-i386.c	FUNCTION_44
0x4001e4a	          0x4889e5	                            mov rbp, rsp	      2452	tc-i386.c	FUNCTION_44
0x4001e4d	        0x4883ec30	                           sub rsp, 0x30	      2452	tc-i386.c	FUNCTION_44
0x4001e51	          0x897ddc	             mov dword [rbp - 0x24], edi	      2452	tc-i386.c	FUNCTION_44
0x4001e54	    0x64488b042528	                mov rax, qword fs:[0x28]	      2452	tc-i386.c	FUNCTION_44
0x4001e5d	        0x488945f8	                mov qword [rbp - 8], rax	      2452	tc-i386.c	FUNCTION_44
0x4001e61	            0x31c0	                            xor eax, eax	      2452	tc-i386.c	FUNCTION_44
0x4001e63	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      2454	tc-i386.c	FUNCTION_44
0x4001e6a	    0x488b05000000	            mov rax, qword [0x04001e71] 	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x4001e71	           0xfb600	                   movzx eax, byte [rax]	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x4001e74	            0x3c20	                            cmp al, 0x20	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x4001e76	            0x7512	                           jne 0x4001e8a	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x4001e78	    0x488b05000000	            mov rax, qword [0x04001e7f] 	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x4001e7f	        0x4883c001	                              add rax, 1	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x4001e83	    0x488905000000	            mov qword [0x04001e8a], rax 	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x4001e8a	    0x488b05000000	            mov rax, qword [0x04001e91] 	      2457	tc-i386.c	FUNCTION_44	IF_1
0x4001e91	           0xfb600	                   movzx eax, byte [rax]	      2457	tc-i386.c	FUNCTION_44	IF_1
0x4001e94	           0xfb6c0	                           movzx eax, al	      2457	tc-i386.c	FUNCTION_44	IF_1
0x4001e97	            0x4898	                                    cdqe	      2457	tc-i386.c	FUNCTION_44	IF_1
0x4001e99	     0xfb680000000	                   movzx eax, byte [rax]	      2457	tc-i386.c	FUNCTION_44	IF_1
0x4001ea0	            0x84c0	                             test al, al	      2457	tc-i386.c	FUNCTION_44	IF_1
0x4001ea2	            0x7572	                           jne 0x4001f16	      2457	tc-i386.c	FUNCTION_44	IF_1
0x4001ea4	        0x488d45f0	                   lea rax, [rbp - 0x10]	      2460	tc-i386.c	FUNCTION_44	IF_1	CALL_2
0x4001ea8	          0x4889c7	                            mov rdi, rax	      2460	tc-i386.c	FUNCTION_44	IF_1	CALL_2
0x4001eab	      0xe800000000	                          call 0x4001eb0	      2460	tc-i386.c	FUNCTION_44	IF_1	CALL_2
0x4001eb0	           0xfbec0	                           movsx eax, al	      2460	tc-i386.c	FUNCTION_44	IF_1	CALL_2
0x4001eb3	          0x8945ec	             mov dword [rbp - 0x14], eax	      2460	tc-i386.c	FUNCTION_44	IF_1	CALL_2
0x4001eb6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x4001eba	      0xbe00000000	                              mov esi, 0	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x4001ebf	          0x4889c7	                            mov rdi, rax	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x4001ec2	      0xe800000000	                          call 0x4001ec7	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x4001ec7	            0x85c0	                           test eax, eax	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x4001ec9	            0x7509	                           jne 0x4001ed4	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x4001ecb	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      2463	tc-i386.c	FUNCTION_44	IF_1	IF_2
0x4001ed2	            0xeb35	                           jmp 0x4001f09	      2463	tc-i386.c	FUNCTION_44	IF_1	IF_2
0x4001ed4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4001ed8	      0xbe00000000	                              mov esi, 0	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4001edd	          0x4889c7	                            mov rdi, rax	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4001ee0	      0xe800000000	                          call 0x4001ee5	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4001ee5	            0x85c0	                           test eax, eax	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4001ee7	            0x7509	                           jne 0x4001ef2	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4001ee9	    0xc745e8ffffff	     mov dword [rbp - 0x18], 0xffffffff 	      2465	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3
0x4001ef0	            0xeb17	                           jmp 0x4001f09	      2465	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3
0x4001ef2	      0xbf00000000	                              mov edi, 0	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4001ef7	      0xe800000000	                          call 0x4001efc	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4001efc	          0x4889c7	                            mov rdi, rax	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4001eff	      0xb800000000	                              mov eax, 0	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4001f04	      0xe800000000	                          call 0x4001f09	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4001f09	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x4001f0c	           0xfbec0	                           movsx eax, al	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x4001f0f	            0x89c7	                            mov edi, eax	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x4001f11	      0xe800000000	                          call 0x4001f16	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x4001f16	      0xe800000000	                          call 0x4001f1b	      2470	tc-i386.c	FUNCTION_44	CALL_8
0x4001f1b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2472	tc-i386.c	FUNCTION_44
0x4001f1e	    0x890500000000	            mov dword [0x04001f24], eax 	      2472	tc-i386.c	FUNCTION_44
0x4001f24	        0x837de800	               cmp dword [rbp - 0x18], 0	      2474	tc-i386.c	FUNCTION_44	IF_4
0x4001f28	            0x7531	                           jne 0x4001f5b	      2474	tc-i386.c	FUNCTION_44	IF_4
0x4001f2a	    0x8b0500000000	            mov eax, dword [0x04001f30] 	      2475	tc-i386.c	FUNCTION_44	IF_4
0x4001f30	            0x85c0	                           test eax, eax	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001f32	            0x741a	                            je 0x4001f4e	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001f34	    0x488b05000000	            mov rax, qword [0x04001f3b] 	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001f3b	        0x488b4008	                mov rax, qword [rax + 8]	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001f3f	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001f43	            0x84c0	                             test al, al	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001f45	            0x7407	                            je 0x4001f4e	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001f47	      0xb801000000	                              mov eax, 1	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001f4c	            0xeb05	                           jmp 0x4001f53	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001f4e	      0xb800000000	                              mov eax, 0	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001f53	    0x890500000000	            mov dword [0x04001f59], eax 	      2475	tc-i386.c	FUNCTION_44	IF_4
0x4001f59	            0xeb0f	                           jmp 0x4001f6a	      2475	tc-i386.c	FUNCTION_44	IF_4
0x4001f5b	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2478	tc-i386.c	FUNCTION_44	ELSE_3
0x4001f5e	          0xc1e81f	                           shr eax, 0x1f	      2478	tc-i386.c	FUNCTION_44	ELSE_3
0x4001f61	           0xfb6c0	                           movzx eax, al	      2478	tc-i386.c	FUNCTION_44	ELSE_3
0x4001f64	    0x890500000000	            mov dword [0x04001f6a], eax 	      2478	tc-i386.c	FUNCTION_44	ELSE_3
0x4001f6a	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001f6e	            0x7407	                            je 0x4001f77	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001f70	      0xb80a000000	                            mov eax, 0xa	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001f75	            0xeb05	                           jmp 0x4001f7c	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001f77	      0xb800000000	                              mov eax, 0	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001f7c	            0x89c6	                            mov esi, eax	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001f7e	      0xbf1f000000	                           mov edi, 0x1f	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001f83	      0xe800000000	                          call 0x4001f88	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001f88	    0x8b0500000000	            mov eax, dword [0x04001f8e] 	      2482	tc-i386.c	FUNCTION_44
0x4001f8e	            0x85c0	                           test eax, eax	      2482	tc-i386.c	FUNCTION_44
0x4001f90	            0x7411	                            je 0x4001fa3	      2482	tc-i386.c	FUNCTION_44
0x4001f92	    0x8b0500000000	            mov eax, dword [0x04001f98] 	      2482	tc-i386.c	FUNCTION_44
0x4001f98	            0x85c0	                           test eax, eax	      2482	tc-i386.c	FUNCTION_44
0x4001f9a	            0x7407	                            je 0x4001fa3	      2482	tc-i386.c	FUNCTION_44
0x4001f9c	      0xb825000000	                           mov eax, 0x25	      2482	tc-i386.c	FUNCTION_44
0x4001fa1	            0xeb05	                           jmp 0x4001fa8	      2482	tc-i386.c	FUNCTION_44
0x4001fa3	      0xb800000000	                              mov eax, 0	      2482	tc-i386.c	FUNCTION_44
0x4001fa8	    0x880500000000	               mov byte [0x04001fae], al	      2482	tc-i386.c	FUNCTION_44
0x4001fae	    0x8b0500000000	            mov eax, dword [0x04001fb4] 	      2483	tc-i386.c	FUNCTION_44
0x4001fb4	            0x85c0	                           test eax, eax	      2483	tc-i386.c	FUNCTION_44
0x4001fb6	            0x7407	                            je 0x4001fbf	      2483	tc-i386.c	FUNCTION_44
0x4001fb8	      0xb824000000	                           mov eax, 0x24	      2483	tc-i386.c	FUNCTION_44
0x4001fbd	            0xeb05	                           jmp 0x4001fc4	      2483	tc-i386.c	FUNCTION_44
0x4001fbf	      0xb800000000	                              mov eax, 0	      2483	tc-i386.c	FUNCTION_44
0x4001fc4	    0x880500000000	               mov byte [0x04001fca], al	      2483	tc-i386.c	FUNCTION_44
0x4001fca	    0x8b0500000000	            mov eax, dword [0x04001fd0] 	      2484	tc-i386.c	FUNCTION_44
0x4001fd0	            0x85c0	                           test eax, eax	      2484	tc-i386.c	FUNCTION_44
0x4001fd2	            0x7407	                            je 0x4001fdb	      2484	tc-i386.c	FUNCTION_44
0x4001fd4	      0xb800000000	                              mov eax, 0	      2484	tc-i386.c	FUNCTION_44
0x4001fd9	            0xeb05	                           jmp 0x4001fe0	      2484	tc-i386.c	FUNCTION_44
0x4001fdb	      0xb800000000	                              mov eax, 0	      2484	tc-i386.c	FUNCTION_44
0x4001fe0	    0x488905000000	            mov qword [0x04001fe7], rax 	      2484	tc-i386.c	FUNCTION_44
0x4001fe7	              0x90	                                     nop	      2485	tc-i386.c	FUNCTION_44
0x4001fe8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2485	tc-i386.c	FUNCTION_44
0x4001fec	    0x644833042528	                xor rax, qword fs:[0x28]	      2485	tc-i386.c	FUNCTION_44
0x4001ff5	            0x7405	                            je 0x4001ffc	      2485	tc-i386.c	FUNCTION_44
0x4001ff7	      0xe800000000	                          call 0x4001ffc	      2485	tc-i386.c	FUNCTION_44
0x4001ffc	              0xc9	                                   leave	      2485	tc-i386.c	FUNCTION_44
0x4001ffd	              0xc3	                                     ret	      2485	tc-i386.c	FUNCTION_44
check_VecOperations	CALL,18:FOR,0:WHILE,1:functions,0:SWITCH,0:IF,19:ELSE,9:DO,0	258
0x400e6ec	              0x55	                                push rbp	      8493	tc-i386.c	FUNCTION_102
0x400e6ed	          0x4889e5	                            mov rbp, rsp	      8493	tc-i386.c	FUNCTION_102
0x400e6f0	            0x4154	                                push r12	      8493	tc-i386.c	FUNCTION_102
0x400e6f2	              0x53	                                push rbx	      8493	tc-i386.c	FUNCTION_102
0x400e6f3	        0x4883ec40	                           sub rsp, 0x40	      8493	tc-i386.c	FUNCTION_102
0x400e6f7	        0x48897db8	             mov qword [rbp - 0x48], rdi	      8493	tc-i386.c	FUNCTION_102
0x400e6fb	        0x488975b0	             mov qword [rbp - 0x50], rsi	      8493	tc-i386.c	FUNCTION_102
0x400e6ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      8493	tc-i386.c	FUNCTION_102
0x400e708	        0x488945e8	             mov qword [rbp - 0x18], rax	      8493	tc-i386.c	FUNCTION_102
0x400e70c	            0x31c0	                            xor eax, eax	      8493	tc-i386.c	FUNCTION_102
0x400e70e	      0xe974030000	                           jmp 0x400ea87	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x400e713	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8501	tc-i386.c	FUNCTION_102	WHILE_1
0x400e717	        0x488945d8	             mov qword [rbp - 0x28], rax	      8501	tc-i386.c	FUNCTION_102	WHILE_1
0x400e71b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8502	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x400e71f	           0xfb600	                   movzx eax, byte [rax]	      8502	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x400e722	            0x3c7b	                            cmp al, 0x7b	      8502	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x400e724	     0xf8535030000	                           jne 0x400ea5f	      8502	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x400e72a	      0x488345b801	               add qword [rbp - 0x48], 1	      8504	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x400e72f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x400e733	      0xba03000000	                              mov edx, 3	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x400e738	      0xbe00000000	                              mov esi, 0	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x400e73d	          0x4889c7	                            mov rdi, rax	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x400e740	      0xe800000000	                          call 0x400e745	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x400e745	            0x85c0	                           test eax, eax	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x400e747	     0xf85ce000000	                           jne 0x400e81b	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x400e74d	    0x488b05000000	            mov rax, qword [0x0400e754] 	      8511	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_3
0x400e754	          0x4885c0	                           test rax, rax	      8511	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_3
0x400e757	     0xf8533020000	                           jne 0x400e990	      8511	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_3
0x400e75d	      0x488345b803	               add qword [rbp - 0x48], 3	      8514	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400e762	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8515	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x400e766	           0xfb600	                   movzx eax, byte [rax]	      8515	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x400e769	            0x3c38	                            cmp al, 0x38	      8515	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x400e76b	            0x7509	                           jne 0x400e776	      8515	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x400e76d	    0xc745cc080000	               mov dword [rbp - 0x34], 8	      8516	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x400e774	            0xeb7b	                           jmp 0x400e7f1	      8516	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x400e776	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8517	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x400e77a	           0xfb600	                   movzx eax, byte [rax]	      8517	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x400e77d	            0x3c34	                            cmp al, 0x34	      8517	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x400e77f	            0x7509	                           jne 0x400e78a	      8517	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x400e781	    0xc745cc040000	               mov dword [rbp - 0x34], 4	      8518	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x400e788	            0xeb67	                           jmp 0x400e7f1	      8518	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x400e78a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8519	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x400e78e	           0xfb600	                   movzx eax, byte [rax]	      8519	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x400e791	            0x3c32	                            cmp al, 0x32	      8519	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x400e793	            0x7509	                           jne 0x400e79e	      8519	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x400e795	    0xc745cc020000	               mov dword [rbp - 0x34], 2	      8520	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x400e79c	            0xeb53	                           jmp 0x400e7f1	      8520	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x400e79e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8521	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7a2	           0xfb600	                   movzx eax, byte [rax]	      8521	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7a5	            0x3c31	                            cmp al, 0x31	      8521	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7a7	            0x751d	                           jne 0x400e7c6	      8521	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7a9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8522	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7ad	        0x4883c001	                              add rax, 1	      8522	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7b1	           0xfb600	                   movzx eax, byte [rax]	      8522	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7b4	            0x3c36	                            cmp al, 0x36	      8522	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7b6	            0x750e	                           jne 0x400e7c6	      8522	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7b8	    0xc745cc100000	           mov dword [rbp - 0x34], 0x10 	      8524	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7bf	      0x488345b801	               add qword [rbp - 0x48], 1	      8525	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7c4	            0xeb2b	                           jmp 0x400e7f1	      8525	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400e7c6	      0xbf00000000	                              mov edi, 0	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400e7cb	      0xe800000000	                          call 0x400e7d0	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400e7d0	          0x4889c2	                            mov rdx, rax	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400e7d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400e7d7	          0x4889c6	                            mov rsi, rax	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400e7da	          0x4889d7	                            mov rdi, rdx	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400e7dd	      0xb800000000	                              mov eax, 0	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400e7e2	      0xe800000000	                          call 0x400e7e7	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400e7e7	      0xb800000000	                              mov eax, 0	      8530	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4
0x400e7ec	      0xe905030000	                           jmp 0x400eaf6	      8530	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4
0x400e7f1	      0x488345b801	               add qword [rbp - 0x48], 1	      8532	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400e7f6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8534	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400e7f9	    0x890500000000	            mov dword [0x0400e7ff], eax 	      8534	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400e7ff	    0x8b0500000000	            mov eax, dword [0x0400e805] 	      8535	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400e805	    0x890500000000	            mov dword [0x0400e80b], eax 	      8535	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400e80b	    0x48c705000000	               mov qword [0x0400e816], 0	      8536	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400e816	      0xe9f6010000	                           jmp 0x400ea11	      8536	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400e81b	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x400e81f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x400e823	          0x4889d6	                            mov rsi, rdx	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x400e826	          0x4889c7	                            mov rdi, rax	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x400e829	      0xe850340000	                 call sym.parse_register	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x400e82e	        0x488945e0	             mov qword [rbp - 0x20], rax	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x400e832	      0x48837de000	               cmp qword [rbp - 0x20], 0	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x400e837	     0xf84f7000000	                            je 0x400e934	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x400e83d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400e841	         0xfb64008	               movzx eax, byte [rax + 8]	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400e845	          0x83e008	                              and eax, 8	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400e848	            0x84c0	                             test al, al	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400e84a	            0x740c	                            je 0x400e858	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400e84c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400e850	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400e854	            0x84c0	                             test al, al	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400e856	            0x7535	                           jne 0x400e88d	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400e858	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x400e85c	          0x4c8b20	                    mov r12, qword [rax]	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x400e85f	    0x488b1d000000	            mov rbx, qword [0x0400e866] 	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x400e866	      0xbf00000000	                              mov edi, 0	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x400e86b	      0xe800000000	                          call 0x400e870	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x400e870	          0x4c89e2	                            mov rdx, r12	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x400e873	          0x4889de	                            mov rsi, rbx	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x400e876	          0x4889c7	                            mov rdi, rax	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x400e879	      0xb800000000	                              mov eax, 0	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x400e87e	      0xe800000000	                          call 0x400e883	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x400e883	      0xb800000000	                              mov eax, 0	      8546	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400e888	      0xe969020000	                           jmp 0x400eaf6	      8546	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400e88d	    0x488b05000000	            mov rax, qword [0x0400e894] 	      8549	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400e894	          0x4885c0	                           test rax, rax	      8549	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400e897	            0x752e	                           jne 0x400e8c7	      8549	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400e899	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8551	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400e89d	    0x488905000000	            mov qword [0x0400e8a4], rax 	      8551	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400e8a4	    0xc70500000000	               mov dword [0x0400e8ae], 0	      8552	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400e8ae	    0x8b0500000000	            mov eax, dword [0x0400e8b4] 	      8553	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400e8b4	    0x890500000000	            mov dword [0x0400e8ba], eax 	      8553	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400e8ba	    0x48c705000000	               mov qword [0x0400e8c5], 0	      8554	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400e8c5	            0xeb60	                           jmp 0x400e927	      8554	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400e8c7	    0x488b05000000	            mov rax, qword [0x0400e8ce] 	      8558	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_11
0x400e8ce	          0x488b00	                    mov rax, qword [rax]	      8558	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_11
0x400e8d1	          0x4885c0	                           test rax, rax	      8558	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_11
0x400e8d4	     0xf85b9000000	                           jne 0x400e993	      8558	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_11
0x400e8da	    0x488b05000000	            mov rax, qword [0x0400e8e1] 	      8561	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6
0x400e8e1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      8561	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6
0x400e8e5	          0x488910	                    mov qword [rax], rdx	      8561	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6
0x400e8e8	    0x488b05000000	            mov rax, qword [0x0400e8ef] 	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x400e8ef	          0x8b500c	              mov edx, dword [rax + 0xc]	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x400e8f2	    0x8b0500000000	            mov eax, dword [0x0400e8f8] 	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x400e8f8	            0x39c2	                            cmp edx, eax	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x400e8fa	            0x742b	                            je 0x400e927	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x400e8fc	      0xbf00000000	                              mov edi, 0	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x400e901	      0xe800000000	                          call 0x400e906	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x400e906	          0x4889c2	                            mov rdx, rax	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x400e909	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x400e90d	          0x4889c6	                            mov rsi, rax	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x400e910	          0x4889d7	                            mov rdi, rdx	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x400e913	      0xb800000000	                              mov eax, 0	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x400e918	      0xe800000000	                          call 0x400e91d	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x400e91d	      0xb800000000	                              mov eax, 0	      8568	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x400e922	      0xe9cf010000	                           jmp 0x400eaf6	      8568	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x400e927	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8572	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8
0x400e92b	        0x488945b8	             mov qword [rbp - 0x48], rax	      8572	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8
0x400e92f	      0xe9dd000000	                           jmp 0x400ea11	      8572	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8
0x400e934	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8575	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x400e938	           0xfb600	                   movzx eax, byte [rax]	      8575	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x400e93b	            0x3c7a	                            cmp al, 0x7a	      8575	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x400e93d	     0xf851b010000	                           jne 0x400ea5e	      8575	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x400e943	    0x488b05000000	            mov rax, qword [0x0400e94a] 	      8577	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400e94a	          0x4885c0	                           test rax, rax	      8577	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400e94d	            0x7531	                           jne 0x400e980	      8577	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400e94f	    0x48c705000000	               mov qword [0x0400e95a], 0	      8579	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400e95a	    0xc70500000000	               mov dword [0x0400e964], 1	      8580	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400e964	    0x8b0500000000	            mov eax, dword [0x0400e96a] 	      8581	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400e96a	    0x890500000000	            mov dword [0x0400e970], eax 	      8581	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400e970	    0x48c705000000	               mov qword [0x0400e97b], 0	      8582	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400e97b	      0xe98c000000	                           jmp 0x400ea0c	      8582	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400e980	    0x488b05000000	            mov rax, qword [0x0400e987] 	      8586	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x400e987	          0x8b4008	                mov eax, dword [rax + 8]	      8586	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x400e98a	            0x85c0	                           test eax, eax	      8586	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x400e98c	            0x7431	                            je 0x400e9bf	      8586	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x400e98e	            0xeb04	                           jmp 0x400e994	      8586	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x400e990	              0x90	                                     nop	      8512	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_3
0x400e991	            0xeb01	                           jmp 0x400e994	      8512	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_3
0x400e993	              0x90	                                     nop	      8559	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_11
0x400e994	      0xbf00000000	                              mov edi, 0	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x400e999	      0xe800000000	                          call 0x400e99e	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x400e99e	          0x4889c2	                            mov rdx, rax	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x400e9a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x400e9a5	          0x4889c6	                            mov rsi, rax	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x400e9a8	          0x4889d7	                            mov rdi, rdx	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x400e9ab	      0xb800000000	                              mov eax, 0	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x400e9b0	      0xe800000000	                          call 0x400e9b5	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x400e9b5	      0xb800000000	                              mov eax, 0	      8590	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x400e9ba	      0xe937010000	                           jmp 0x400eaf6	      8590	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x400e9bf	    0x488b05000000	            mov rax, qword [0x0400e9c6] 	      8593	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8
0x400e9c6	    0xc74008010000	                  mov dword [rax + 8], 1	      8593	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8
0x400e9cd	    0x488b05000000	            mov rax, qword [0x0400e9d4] 	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x400e9d4	          0x8b500c	              mov edx, dword [rax + 0xc]	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x400e9d7	    0x8b0500000000	            mov eax, dword [0x0400e9dd] 	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x400e9dd	            0x39c2	                            cmp edx, eax	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x400e9df	            0x742b	                            je 0x400ea0c	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x400e9e1	      0xbf00000000	                              mov edi, 0	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x400e9e6	      0xe800000000	                          call 0x400e9eb	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x400e9eb	          0x4889c2	                            mov rdx, rax	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x400e9ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x400e9f2	          0x4889c6	                            mov rsi, rax	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x400e9f5	          0x4889d7	                            mov rdi, rdx	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x400e9f8	      0xb800000000	                              mov eax, 0	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x400e9fd	      0xe800000000	                          call 0x400ea02	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x400ea02	      0xb800000000	                              mov eax, 0	      8601	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x400ea07	      0xe9ea000000	                           jmp 0x400eaf6	      8601	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x400ea0c	      0x488345b801	               add qword [rbp - 0x48], 1	      8605	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x400ea11	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8610	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x400ea15	           0xfb600	                   movzx eax, byte [rax]	      8610	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x400ea18	            0x3c7d	                            cmp al, 0x7d	      8610	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x400ea1a	            0x742b	                            je 0x400ea47	      8610	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x400ea1c	      0xbf00000000	                              mov edi, 0	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x400ea21	      0xe800000000	                          call 0x400ea26	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x400ea26	          0x4889c2	                            mov rdx, rax	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x400ea29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x400ea2d	          0x4889c6	                            mov rsi, rax	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x400ea30	          0x4889d7	                            mov rdi, rdx	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x400ea33	      0xb800000000	                              mov eax, 0	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x400ea38	      0xe800000000	                          call 0x400ea3d	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x400ea3d	      0xb800000000	                              mov eax, 0	      8613	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x400ea42	      0xe9af000000	                           jmp 0x400eaf6	      8613	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x400ea47	      0x488345b801	               add qword [rbp - 0x48], 1	      8615	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x400ea4c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8619	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x400ea50	           0xfb600	                   movzx eax, byte [rax]	      8619	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x400ea53	            0x3c20	                            cmp al, 0x20	      8619	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x400ea55	            0x7530	                           jne 0x400ea87	      8619	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x400ea57	      0x488345b801	               add qword [rbp - 0x48], 1	      8620	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x400ea5c	            0xeb29	                           jmp 0x400ea87	      8622	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x400ea5e	              0x90	                                     nop	      8608	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9
0x400ea5f	      0xbf00000000	                              mov edi, 0	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x400ea64	      0xe800000000	                          call 0x400ea69	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x400ea69	          0x4889c2	                            mov rdx, rax	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x400ea6c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x400ea70	          0x4889c6	                            mov rsi, rax	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x400ea73	          0x4889d7	                            mov rdi, rdx	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x400ea76	      0xb800000000	                              mov eax, 0	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x400ea7b	      0xe800000000	                          call 0x400ea80	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x400ea80	      0xb800000000	                              mov eax, 0	      8627	tc-i386.c	FUNCTION_102	WHILE_1
0x400ea85	            0xeb6f	                           jmp 0x400eaf6	      8627	tc-i386.c	FUNCTION_102	WHILE_1
0x400ea87	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x400ea8b	           0xfb600	                   movzx eax, byte [rax]	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x400ea8e	            0x84c0	                             test al, al	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x400ea90	            0x7419	                            je 0x400eaab	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x400ea92	      0x48837db000	               cmp qword [rbp - 0x50], 0	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x400ea97	     0xf8476fcffff	                            je 0x400e713	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x400ea9d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x400eaa1	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x400eaa5	     0xf8268fcffff	                            jb 0x400e713	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x400eaab	    0x488b05000000	            mov rax, qword [0x0400eab2] 	      8630	tc-i386.c	FUNCTION_102	IF_19
0x400eab2	          0x4885c0	                           test rax, rax	      8630	tc-i386.c	FUNCTION_102	IF_19
0x400eab5	            0x743b	                            je 0x400eaf2	      8630	tc-i386.c	FUNCTION_102	IF_19
0x400eab7	    0x488b05000000	            mov rax, qword [0x0400eabe] 	      8630	tc-i386.c	FUNCTION_102	IF_19
0x400eabe	          0x8b4008	                mov eax, dword [rax + 8]	      8630	tc-i386.c	FUNCTION_102	IF_19
0x400eac1	            0x85c0	                           test eax, eax	      8630	tc-i386.c	FUNCTION_102	IF_19
0x400eac3	            0x742d	                            je 0x400eaf2	      8630	tc-i386.c	FUNCTION_102	IF_19
0x400eac5	    0x488b05000000	            mov rax, qword [0x0400eacc] 	      8630	tc-i386.c	FUNCTION_102	IF_19
0x400eacc	          0x488b00	                    mov rax, qword [rax]	      8630	tc-i386.c	FUNCTION_102	IF_19
0x400eacf	          0x4885c0	                           test rax, rax	      8630	tc-i386.c	FUNCTION_102	IF_19
0x400ead2	            0x751e	                           jne 0x400eaf2	      8630	tc-i386.c	FUNCTION_102	IF_19
0x400ead4	      0xbf00000000	                              mov edi, 0	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x400ead9	      0xe800000000	                          call 0x400eade	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x400eade	          0x4889c7	                            mov rdi, rax	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x400eae1	      0xb800000000	                              mov eax, 0	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x400eae6	      0xe800000000	                          call 0x400eaeb	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x400eaeb	      0xb800000000	                              mov eax, 0	      8633	tc-i386.c	FUNCTION_102	IF_19
0x400eaf0	            0xeb04	                           jmp 0x400eaf6	      8633	tc-i386.c	FUNCTION_102	IF_19
0x400eaf2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8636	tc-i386.c	FUNCTION_102
0x400eaf6	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      8637	tc-i386.c	FUNCTION_102
0x400eafa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8637	tc-i386.c	FUNCTION_102
0x400eb03	            0x7405	                            je 0x400eb0a	      8637	tc-i386.c	FUNCTION_102
0x400eb05	      0xe800000000	                          call 0x400eb0a	      8637	tc-i386.c	FUNCTION_102
0x400eb0a	        0x4883c440	                           add rsp, 0x40	      8637	tc-i386.c	FUNCTION_102
0x400eb0e	              0x5b	                                 pop rbx	      8637	tc-i386.c	FUNCTION_102
0x400eb0f	            0x415c	                                 pop r12	      8637	tc-i386.c	FUNCTION_102
0x400eb11	              0x5d	                                 pop rbp	      8637	tc-i386.c	FUNCTION_102
0x400eb12	              0xc3	                                     ret	      8637	tc-i386.c	FUNCTION_102
x86_cons_fix_new	CALL,2:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0	27
0x400e16d	              0x55	                                push rbp	      8111	tc-i386.c	FUNCTION_97
0x400e16e	          0x4889e5	                            mov rbp, rsp	      8111	tc-i386.c	FUNCTION_97
0x400e171	        0x4883ec20	                           sub rsp, 0x20	      8111	tc-i386.c	FUNCTION_97
0x400e175	        0x48897df8	                mov qword [rbp - 8], rdi	      8111	tc-i386.c	FUNCTION_97
0x400e179	          0x8975f4	              mov dword [rbp - 0xc], esi	      8111	tc-i386.c	FUNCTION_97
0x400e17c	          0x8955f0	             mov dword [rbp - 0x10], edx	      8111	tc-i386.c	FUNCTION_97
0x400e17f	        0x48894de8	             mov qword [rbp - 0x18], rcx	      8111	tc-i386.c	FUNCTION_97
0x400e183	        0x448945e4	             mov dword [rbp - 0x1c], r8d	      8111	tc-i386.c	FUNCTION_97
0x400e187	    0x8b1500000000	            mov edx, dword [0x0400e18d] 	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e18d	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e190	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e193	      0xbe00000000	                              mov esi, 0	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e198	            0x89c7	                            mov edi, eax	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e19a	      0xe8eb4cffff	                          call sym.reloc	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e19f	          0x8945e4	             mov dword [rbp - 0x1c], eax	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e1a2	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e1a5	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e1a8	          0x8b7de4	             mov edi, dword [rbp - 0x1c]	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e1ab	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e1af	        0x488b45f8	                mov rax, qword [rbp - 8]	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e1b3	          0x4189f9	                            mov r9d, edi	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e1b6	    0x41b800000000	                              mov r8d, 0	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e1bc	          0x4889c7	                            mov rdi, rax	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e1bf	      0xe800000000	                          call 0x400e1c4	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e1c4	              0x90	                                     nop	      8123	tc-i386.c	FUNCTION_97
0x400e1c5	              0xc9	                                   leave	      8123	tc-i386.c	FUNCTION_97
0x400e1c6	              0xc3	                                     ret	      8123	tc-i386.c	FUNCTION_97
i386_displacement	CALL,10:FOR,0:WHILE,0:functions,0:SWITCH,0:IF,14:ELSE,4:DO,0	266
0x400f08c	              0x55	                                push rbp	      8803	tc-i386.c	FUNCTION_106
0x400f08d	          0x4889e5	                            mov rbp, rsp	      8803	tc-i386.c	FUNCTION_106
0x400f090	              0x53	                                push rbx	      8803	tc-i386.c	FUNCTION_106
0x400f091	        0x4883ec68	                           sub rsp, 0x68	      8803	tc-i386.c	FUNCTION_106
0x400f095	        0x48897d98	             mov qword [rbp - 0x68], rdi	      8803	tc-i386.c	FUNCTION_106
0x400f099	        0x48897590	             mov qword [rbp - 0x70], rsi	      8803	tc-i386.c	FUNCTION_106
0x400f09d	    0x64488b042528	                mov rax, qword fs:[0x28]	      8803	tc-i386.c	FUNCTION_106
0x400f0a6	        0x488945e8	             mov qword [rbp - 0x18], rax	      8803	tc-i386.c	FUNCTION_106
0x400f0aa	            0x31c0	                            xor eax, eax	      8803	tc-i386.c	FUNCTION_106
0x400f0ac	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      8805	tc-i386.c	FUNCTION_106
0x400f0b4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      8809	tc-i386.c	FUNCTION_106
0x400f0bc	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      8809	tc-i386.c	FUNCTION_106
0x400f0c0	          0x83c801	                               or eax, 1	      8809	tc-i386.c	FUNCTION_106
0x400f0c3	          0x8845e2	               mov byte [rbp - 0x1e], al	      8809	tc-i386.c	FUNCTION_106
0x400f0c6	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      8809	tc-i386.c	FUNCTION_106
0x400f0ca	          0x83c802	                               or eax, 2	      8809	tc-i386.c	FUNCTION_106
0x400f0cd	          0x8845e2	               mov byte [rbp - 0x1e], al	      8809	tc-i386.c	FUNCTION_106
0x400f0d0	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      8809	tc-i386.c	FUNCTION_106
0x400f0d4	          0x83c804	                               or eax, 4	      8809	tc-i386.c	FUNCTION_106
0x400f0d7	          0x8845e2	               mov byte [rbp - 0x1e], al	      8809	tc-i386.c	FUNCTION_106
0x400f0da	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      8809	tc-i386.c	FUNCTION_106
0x400f0de	          0x83c808	                               or eax, 8	      8809	tc-i386.c	FUNCTION_106
0x400f0e1	          0x8845e2	               mov byte [rbp - 0x1e], al	      8809	tc-i386.c	FUNCTION_106
0x400f0e4	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      8809	tc-i386.c	FUNCTION_106
0x400f0e8	          0x83c810	                            or eax, 0x10	      8809	tc-i386.c	FUNCTION_106
0x400f0eb	          0x8845e2	               mov byte [rbp - 0x1e], al	      8809	tc-i386.c	FUNCTION_106
0x400f0ee	    0x8b0500000000	            mov eax, dword [0x0400f0f4] 	      8812	tc-i386.c	FUNCTION_106	IF_1
0x400f0f4	          0x83f802	                              cmp eax, 2	      8812	tc-i386.c	FUNCTION_106	IF_1
0x400f0f7	            0x7526	                           jne 0x400f11f	      8812	tc-i386.c	FUNCTION_106	IF_1
0x400f0f9	      0xbf00000000	                              mov edi, 0	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x400f0fe	      0xe800000000	                          call 0x400f103	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x400f103	      0xbe02000000	                              mov esi, 2	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x400f108	          0x4889c7	                            mov rdi, rax	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x400f10b	      0xb800000000	                              mov eax, 0	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x400f110	      0xe800000000	                          call 0x400f115	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x400f115	      0xb800000000	                              mov eax, 0	      8816	tc-i386.c	FUNCTION_106	IF_1
0x400f11a	      0xe966030000	                           jmp 0x400f485	      8816	tc-i386.c	FUNCTION_106	IF_1
0x400f11f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8819	tc-i386.c	FUNCTION_106	CALL_3
0x400f123	      0xbe00000000	                              mov esi, 0	      8819	tc-i386.c	FUNCTION_106	CALL_3
0x400f128	          0x4889c7	                            mov rdi, rax	      8819	tc-i386.c	FUNCTION_106	CALL_3
0x400f12b	      0xe8d113ffff	               call sym.operand_type_set	      8819	tc-i386.c	FUNCTION_106	CALL_3
0x400f130	    0x8b0500000000	            mov eax, dword [0x0400f136] 	      8820	tc-i386.c	FUNCTION_106	IF_2
0x400f136	            0x4898	                                    cdqe	      8820	tc-i386.c	FUNCTION_106	IF_2
0x400f138	        0x4883c00e	                            add rax, 0xe	      8820	tc-i386.c	FUNCTION_106	IF_2
0x400f13c	     0xfb604c50000	                 movzx eax, byte [rax*8]	      8820	tc-i386.c	FUNCTION_106	IF_2
0x400f144	            0xd0e8	                               shr al, 1	      8820	tc-i386.c	FUNCTION_106	IF_2
0x400f146	          0x83e001	                              and eax, 1	      8820	tc-i386.c	FUNCTION_106	IF_2
0x400f149	            0x84c0	                             test al, al	      8820	tc-i386.c	FUNCTION_106	IF_2
0x400f14b	            0x752e	                           jne 0x400f17b	      8820	tc-i386.c	FUNCTION_106	IF_2
0x400f14d	    0x488b05000000	            mov rax, qword [0x0400f154] 	      8821	tc-i386.c	FUNCTION_106	IF_2
0x400f154	          0x488b00	                    mov rax, qword [rax]	      8821	tc-i386.c	FUNCTION_106	IF_2
0x400f157	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      8821	tc-i386.c	FUNCTION_106	IF_2
0x400f15b	          0x83e020	                           and eax, 0x20	      8821	tc-i386.c	FUNCTION_106	IF_2
0x400f15e	            0x84c0	                             test al, al	      8821	tc-i386.c	FUNCTION_106	IF_2
0x400f160	     0xf8590000000	                           jne 0x400f1f6	      8821	tc-i386.c	FUNCTION_106	IF_2
0x400f166	    0x488b05000000	            mov rax, qword [0x0400f16d] 	      8822	tc-i386.c	FUNCTION_106	IF_2
0x400f16d	          0x488b00	                    mov rax, qword [rax]	      8822	tc-i386.c	FUNCTION_106	IF_2
0x400f170	         0xfb64028	           movzx eax, byte [rax + 0x28] 	      8822	tc-i386.c	FUNCTION_106	IF_2
0x400f174	          0x83e040	                           and eax, 0x40	      8822	tc-i386.c	FUNCTION_106	IF_2
0x400f177	            0x84c0	                             test al, al	      8822	tc-i386.c	FUNCTION_106	IF_2
0x400f179	            0x757b	                           jne 0x400f1f6	      8822	tc-i386.c	FUNCTION_106	IF_2
0x400f17b	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      8824	tc-i386.c	FUNCTION_106	IF_2
0x400f17f	          0x83c804	                               or eax, 4	      8824	tc-i386.c	FUNCTION_106	IF_2
0x400f182	          0x8845d2	               mov byte [rbp - 0x2e], al	      8824	tc-i386.c	FUNCTION_106	IF_2
0x400f185	     0xfb605000000	           movzx eax, byte [0x0400f18c] 	      8825	tc-i386.c	FUNCTION_106	IF_2
0x400f18c	            0x84c0	                             test al, al	      8825	tc-i386.c	FUNCTION_106	IF_2
0x400f18e	           0xf95c0	                                setne al	      8825	tc-i386.c	FUNCTION_106	IF_2
0x400f191	           0xfb6c0	                           movzx eax, al	      8825	tc-i386.c	FUNCTION_106	IF_2
0x400f194	          0x8945a8	             mov dword [rbp - 0x58], eax	      8825	tc-i386.c	FUNCTION_106	IF_2
0x400f197	    0x8b0500000000	            mov eax, dword [0x0400f19d] 	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x400f19d	          0x83f802	                              cmp eax, 2	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x400f1a0	            0x7523	                           jne 0x400f1c5	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x400f1a2	        0x837da800	               cmp dword [rbp - 0x58], 0	      8828	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x400f1a6	     0xf8500010000	                           jne 0x400f2ac	      8828	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x400f1ac	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      8830	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x400f1b0	          0x83c808	                               or eax, 8	      8830	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x400f1b3	          0x8845d2	               mov byte [rbp - 0x2e], al	      8830	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x400f1b6	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x400f1ba	          0x83c810	                            or eax, 0x10	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x400f1bd	          0x8845d2	               mov byte [rbp - 0x2e], al	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x400f1c0	      0xe9e7000000	                           jmp 0x400f2ac	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x400f1c5	    0x8b0500000000	            mov eax, dword [0x0400f1cb] 	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1cb	          0x83f801	                              cmp eax, 1	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1ce	           0xf94c0	                                 sete al	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1d1	           0xfb6c0	                           movzx eax, al	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1d4	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1d7	     0xf84cf000000	                            je 0x400f2ac	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1dd	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      8836	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1e1	          0x83e0fb	                     and eax, 0xfffffffb	      8836	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1e4	          0x8845d2	               mov byte [rbp - 0x2e], al	      8836	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1e7	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      8837	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1eb	          0x83c802	                               or eax, 2	      8837	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1ee	          0x8845d2	               mov byte [rbp - 0x2e], al	      8837	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x400f1f1	      0xe9b6000000	                           jmp 0x400f2ac	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x400f1f6	     0xfb605000000	           movzx eax, byte [0x0400f1fd] 	      8844	tc-i386.c	FUNCTION_106	ELSE_2
0x400f1fd	            0x84c0	                             test al, al	      8844	tc-i386.c	FUNCTION_106	ELSE_2
0x400f1ff	           0xf95c0	                                setne al	      8844	tc-i386.c	FUNCTION_106	ELSE_2
0x400f202	           0xfb6c0	                           movzx eax, al	      8844	tc-i386.c	FUNCTION_106	ELSE_2
0x400f205	          0x8945a8	             mov dword [rbp - 0x58], eax	      8844	tc-i386.c	FUNCTION_106	ELSE_2
0x400f208	    0x8b0500000000	            mov eax, dword [0x0400f20e] 	      8845	tc-i386.c	FUNCTION_106	ELSE_2	IF_6
0x400f20e	          0x83f802	                              cmp eax, 2	      8845	tc-i386.c	FUNCTION_106	ELSE_2	IF_6
0x400f211	            0x7533	                           jne 0x400f246	      8845	tc-i386.c	FUNCTION_106	ELSE_2	IF_6
0x400f213	        0x837da800	               cmp dword [rbp - 0x58], 0	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400f217	            0x750b	                           jne 0x400f224	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400f219	     0xfb605000000	           movzx eax, byte [0x0400f220] 	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400f220	            0x3c77	                            cmp al, 0x77	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400f222	            0x750c	                           jne 0x400f230	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400f224	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      8848	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400f228	          0x83c802	                               or eax, 2	      8848	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400f22b	          0x8845d2	               mov byte [rbp - 0x2e], al	      8848	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400f22e	            0xeb7d	                           jmp 0x400f2ad	      8848	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400f230	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      8851	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x400f234	          0x83c804	                               or eax, 4	      8851	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x400f237	          0x8845d2	               mov byte [rbp - 0x2e], al	      8851	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x400f23a	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      8852	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x400f23e	          0x83c808	                               or eax, 8	      8852	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x400f241	          0x8845d2	               mov byte [rbp - 0x2e], al	      8852	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x400f244	            0xeb67	                           jmp 0x400f2ad	      8852	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x400f246	        0x837da800	               cmp dword [rbp - 0x58], 0	      8857	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f24a	            0x752c	                           jne 0x400f278	      8857	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f24c	     0xfb605000000	           movzx eax, byte [0x0400f253] 	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f253	           0xfbec0	                           movsx eax, al	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f256	    0x8b1500000000	            mov edx, dword [0x0400f25c] 	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f25c	          0x83fa01	                              cmp edx, 1	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f25f	            0x7407	                            je 0x400f268	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f261	      0xba77000000	                           mov edx, 0x77	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f266	            0xeb05	                           jmp 0x400f26d	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f268	      0xba6c000000	                           mov edx, 0x6c	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f26d	            0x39d0	                            cmp eax, edx	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f26f	           0xf94c0	                                 sete al	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f272	           0xfb6c0	                           movzx eax, al	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f275	          0x8945a8	             mov dword [rbp - 0x58], eax	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400f278	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x400f27c	          0x83c804	                               or eax, 4	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x400f27f	          0x8845d2	               mov byte [rbp - 0x2e], al	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x400f282	    0x8b0500000000	            mov eax, dword [0x0400f288] 	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f288	          0x83f801	                              cmp eax, 1	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f28b	           0xf94c0	                                 sete al	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f28e	           0xfb6c0	                           movzx eax, al	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f291	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f294	            0x7417	                            je 0x400f2ad	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f296	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      8864	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f29a	          0x83e0fb	                     and eax, 0xfffffffb	      8864	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f29d	          0x8845d2	               mov byte [rbp - 0x2e], al	      8864	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f2a0	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	      8865	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f2a4	          0x83c802	                               or eax, 2	      8865	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f2a7	          0x8845d2	               mov byte [rbp - 0x2e], al	      8865	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f2aa	            0xeb01	                           jmp 0x400f2ad	      8865	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x400f2ac	              0x90	                                     nop	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x400f2ad	    0x8b1500000000	            mov edx, dword [0x0400f2b3] 	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2b3	    0x8b0500000000	            mov eax, dword [0x0400f2b9] 	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2b9	          0x4863d2	                         movsxd rdx, edx	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2bc	        0x488d5a0e	                    lea rbx, [rdx + 0xe]	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2c0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2c4	            0x4898	                                    cdqe	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2c6	        0x4883c00e	                            add rax, 0xe	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2ca	    0x488b04c50000	                  mov rax, qword [rax*8]	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2d2	          0x4889d6	                            mov rsi, rdx	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2d5	          0x4889c7	                            mov rdi, rax	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2d8	      0xe8af17ffff	                call sym.operand_type_or	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2dd	    0x488904dd0000	                  mov qword [rbx*8], rax	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x400f2e5	    0x8b0500000000	            mov eax, dword [0x0400f2eb] 	      8872	tc-i386.c	FUNCTION_106
0x400f2eb	            0x89c0	                            mov eax, eax	      8872	tc-i386.c	FUNCTION_106
0x400f2ed	        0x48c1e005	                              shl rax, 5	      8872	tc-i386.c	FUNCTION_106
0x400f2f1	    0x480500000000	                              add rax, 0	      8872	tc-i386.c	FUNCTION_106
0x400f2f7	        0x488945b8	             mov qword [rbp - 0x48], rax	      8872	tc-i386.c	FUNCTION_106
0x400f2fb	    0x8b0500000000	            mov eax, dword [0x0400f301] 	      8873	tc-i386.c	FUNCTION_106
0x400f301	            0x4898	                                    cdqe	      8873	tc-i386.c	FUNCTION_106
0x400f303	        0x488d5014	                   lea rdx, [rax + 0x14]	      8873	tc-i386.c	FUNCTION_106
0x400f307	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8873	tc-i386.c	FUNCTION_106
0x400f30b	    0x488904d50000	                  mov qword [rdx*8], rax	      8873	tc-i386.c	FUNCTION_106
0x400f313	    0x8b0500000000	            mov eax, dword [0x0400f319] 	      8874	tc-i386.c	FUNCTION_106
0x400f319	          0x83c001	                              add eax, 1	      8874	tc-i386.c	FUNCTION_106
0x400f31c	    0x890500000000	            mov dword [0x0400f322], eax 	      8874	tc-i386.c	FUNCTION_106
0x400f322	    0x488b05000000	            mov rax, qword [0x0400f329] 	      8875	tc-i386.c	FUNCTION_106
0x400f329	        0x488945c0	             mov qword [rbp - 0x40], rax	      8875	tc-i386.c	FUNCTION_106
0x400f32d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      8876	tc-i386.c	FUNCTION_106
0x400f331	    0x488905000000	            mov qword [0x0400f338], rax 	      8876	tc-i386.c	FUNCTION_106
0x400f338	    0x488b05000000	            mov rax, qword [0x0400f33f] 	      8877	tc-i386.c	FUNCTION_106
0x400f33f	        0x488d5001	                      lea rdx, [rax + 1]	      8877	tc-i386.c	FUNCTION_106
0x400f343	    0x488915000000	            mov qword [0x0400f34a], rdx 	      8877	tc-i386.c	FUNCTION_106
0x400f34a	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      8877	tc-i386.c	FUNCTION_106
0x400f34e	           0xfb612	                   movzx edx, byte [rdx]	      8877	tc-i386.c	FUNCTION_106
0x400f351	            0x8810	                      mov byte [rax], dl	      8877	tc-i386.c	FUNCTION_106
0x400f353	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8877	tc-i386.c	FUNCTION_106
0x400f357	          0xc60000	                       mov byte [rax], 0	      8877	tc-i386.c	FUNCTION_106
0x400f35a	    0x8b0500000000	            mov eax, dword [0x0400f360] 	      8923	tc-i386.c	FUNCTION_106
0x400f360	            0x4898	                                    cdqe	      8923	tc-i386.c	FUNCTION_106
0x400f362	        0x4883c034	                           add rax, 0x34	      8923	tc-i386.c	FUNCTION_106
0x400f366	        0x48c1e002	                              shl rax, 2	      8923	tc-i386.c	FUNCTION_106
0x400f36a	    0x480500000000	                              add rax, 0	      8923	tc-i386.c	FUNCTION_106
0x400f370	        0x488d480c	                    lea rcx, [rax + 0xc]	      8923	tc-i386.c	FUNCTION_106
0x400f374	        0x488d45e0	                   lea rax, [rbp - 0x20]	      8923	tc-i386.c	FUNCTION_106
0x400f378	          0x4889c2	                            mov rdx, rax	      8923	tc-i386.c	FUNCTION_106
0x400f37b	      0xbe00000000	                              mov esi, 0	      8923	tc-i386.c	FUNCTION_106
0x400f380	          0x4889cf	                            mov rdi, rcx	      8923	tc-i386.c	FUNCTION_106
0x400f383	      0xe882eeffff	                        call sym.lex_got	      8923	tc-i386.c	FUNCTION_106
0x400f388	        0x488945c8	             mov qword [rbp - 0x38], rax	      8923	tc-i386.c	FUNCTION_106
0x400f38c	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      8924	tc-i386.c	FUNCTION_106	IF_11
0x400f391	            0x740b	                            je 0x400f39e	      8924	tc-i386.c	FUNCTION_106	IF_11
0x400f393	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8925	tc-i386.c	FUNCTION_106	IF_11
0x400f397	    0x488905000000	            mov qword [0x0400f39e], rax 	      8925	tc-i386.c	FUNCTION_106	IF_11
0x400f39e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x400f3a2	      0xba01000000	                              mov edx, 1	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x400f3a7	          0x4889c6	                            mov rsi, rax	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x400f3aa	      0xbf00000000	                              mov edi, 0	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x400f3af	      0xe800000000	                          call 0x400f3b4	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x400f3b4	        0x488945b0	             mov qword [rbp - 0x50], rax	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x400f3b8	    0x488b05000000	            mov rax, qword [0x0400f3bf] 	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x400f3bf	           0xfb600	                   movzx eax, byte [rax]	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x400f3c2	            0x3c20	                            cmp al, 0x20	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x400f3c4	            0x7512	                           jne 0x400f3d8	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x400f3c6	    0x488b05000000	            mov rax, qword [0x0400f3cd] 	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x400f3cd	        0x4883c001	                              add rax, 1	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x400f3d1	    0x488905000000	            mov qword [0x0400f3d8], rax 	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x400f3d8	    0x488b05000000	            mov rax, qword [0x0400f3df] 	      8930	tc-i386.c	FUNCTION_106	IF_12
0x400f3df	           0xfb600	                   movzx eax, byte [rax]	      8930	tc-i386.c	FUNCTION_106	IF_12
0x400f3e2	            0x84c0	                             test al, al	      8930	tc-i386.c	FUNCTION_106	IF_12
0x400f3e4	            0x7421	                            je 0x400f407	      8930	tc-i386.c	FUNCTION_106	IF_12
0x400f3e6	    0x488b1d000000	            mov rbx, qword [0x0400f3ed] 	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x400f3ed	      0xbf00000000	                              mov edi, 0	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x400f3f2	      0xe800000000	                          call 0x400f3f7	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x400f3f7	          0x4889de	                            mov rsi, rbx	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x400f3fa	          0x4889c7	                            mov rdi, rax	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x400f3fd	      0xb800000000	                              mov eax, 0	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x400f402	      0xe800000000	                          call 0x400f407	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x400f407	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8935	tc-i386.c	FUNCTION_106
0x400f40b	    0x488905000000	            mov qword [0x0400f412], rax 	      8935	tc-i386.c	FUNCTION_106
0x400f412	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      8936	tc-i386.c	FUNCTION_106	IF_13
0x400f417	            0x742c	                            je 0x400f445	      8936	tc-i386.c	FUNCTION_106	IF_13
0x400f419	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8938	tc-i386.c	FUNCTION_106	IF_13	CALL_9
0x400f41d	          0x4889c7	                            mov rdi, rax	      8938	tc-i386.c	FUNCTION_106	IF_13	CALL_9
0x400f420	      0xe800000000	                          call 0x400f425	      8938	tc-i386.c	FUNCTION_106	IF_13	CALL_9
0x400f425	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x400f429	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x400f42d	            0x3c02	                               cmp al, 2	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x400f42f	            0x740c	                            je 0x400f43d	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x400f431	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x400f435	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x400f439	            0x3c05	                               cmp al, 5	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x400f43b	            0x7508	                           jne 0x400f445	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x400f43d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8941	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x400f441	        0xc6401800	                mov byte [rax + 0x18], 0	      8941	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x400f445	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x400f449	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x400f44d	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x400f451	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x400f455	          0x4889c7	                            mov rdi, rax	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x400f458	      0xe843000000	     call sym.i386_finalize_displacement	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x400f45d	          0x8945ac	             mov dword [rbp - 0x54], eax	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x400f460	    0x488b05000000	            mov rax, qword [0x0400f467] 	      8946	tc-i386.c	FUNCTION_106
0x400f467	        0x4883e801	                              sub rax, 1	      8946	tc-i386.c	FUNCTION_106
0x400f46b	    0x488905000000	            mov qword [0x0400f472], rax 	      8946	tc-i386.c	FUNCTION_106
0x400f472	    0x488b05000000	            mov rax, qword [0x0400f479] 	      8946	tc-i386.c	FUNCTION_106
0x400f479	           0xfb610	                   movzx edx, byte [rax]	      8946	tc-i386.c	FUNCTION_106
0x400f47c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8946	tc-i386.c	FUNCTION_106
0x400f480	            0x8810	                      mov byte [rax], dl	      8946	tc-i386.c	FUNCTION_106
0x400f482	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      8948	tc-i386.c	FUNCTION_106
0x400f485	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      8949	tc-i386.c	FUNCTION_106
0x400f489	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      8949	tc-i386.c	FUNCTION_106
0x400f492	            0x7405	                            je 0x400f499	      8949	tc-i386.c	FUNCTION_106
0x400f494	      0xe800000000	                          call 0x400f499	      8949	tc-i386.c	FUNCTION_106
0x400f499	        0x4883c468	                           add rsp, 0x68	      8949	tc-i386.c	FUNCTION_106
0x400f49d	              0x5b	                                 pop rbx	      8949	tc-i386.c	FUNCTION_106
0x400f49e	              0x5d	                                 pop rbp	      8949	tc-i386.c	FUNCTION_106
0x400f49f	              0xc3	                                     ret	      8949	tc-i386.c	FUNCTION_106
