_rl_insert_typein	CALL,5:ELSE,0:FOR,0:IF,1:functions,0:DO,0:SWITCH,0:WHILE,1	78
0x40006fe	              0x55	                                push rbp	       367	input.c	FUNCTION_11
0x40006ff	          0x4889e5	                            mov rbp, rsp	       367	input.c	FUNCTION_11
0x4000702	        0x4883ec30	                           sub rsp, 0x30	       367	input.c	FUNCTION_11
0x4000706	          0x897ddc	             mov dword [rbp - 0x24], edi	       367	input.c	FUNCTION_11
0x4000709	    0x64488b042528	                mov rax, qword fs:[0x28]	       367	input.c	FUNCTION_11
0x4000712	        0x488945f8	                mov qword [rbp - 8], rax	       367	input.c	FUNCTION_11
0x4000716	            0x31c0	                            xor eax, eax	       367	input.c	FUNCTION_11
0x4000718	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       371	input.c	FUNCTION_11
0x400071f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       371	input.c	FUNCTION_11
0x4000722	          0x8945e8	             mov dword [rbp - 0x18], eax	       371	input.c	FUNCTION_11
0x4000725	    0x8b0500000000	            mov eax, dword [0x0400072b] 	       372	input.c	FUNCTION_11	CALL_1
0x400072b	          0x83c001	                              add eax, 1	       372	input.c	FUNCTION_11	CALL_1
0x400072e	            0x4898	                                    cdqe	       372	input.c	FUNCTION_11	CALL_1
0x4000730	          0x4889c7	                            mov rdi, rax	       372	input.c	FUNCTION_11	CALL_1
0x4000733	      0xe800000000	                          call 0x4000738	       372	input.c	FUNCTION_11	CALL_1
0x4000738	        0x488945f0	             mov qword [rbp - 0x10], rax	       372	input.c	FUNCTION_11	CALL_1
0x400073c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       373	input.c	FUNCTION_11
0x400073f	          0x8d5001	                      lea edx, [rax + 1]	       373	input.c	FUNCTION_11
0x4000742	          0x8955e8	             mov dword [rbp - 0x18], edx	       373	input.c	FUNCTION_11
0x4000745	          0x4863d0	                         movsxd rdx, eax	       373	input.c	FUNCTION_11
0x4000748	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       373	input.c	FUNCTION_11
0x400074c	          0x4801d0	                            add rax, rdx	       373	input.c	FUNCTION_11
0x400074f	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       373	input.c	FUNCTION_11
0x4000752	            0x8810	                      mov byte [rax], dl	       373	input.c	FUNCTION_11
0x4000754	            0xeb18	                           jmp 0x400076e	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x4000756	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       378	input.c	FUNCTION_11	WHILE_1
0x4000759	          0x8d5001	                      lea edx, [rax + 1]	       378	input.c	FUNCTION_11	WHILE_1
0x400075c	          0x8955e8	             mov dword [rbp - 0x18], edx	       378	input.c	FUNCTION_11	WHILE_1
0x400075f	          0x4863d0	                         movsxd rdx, eax	       378	input.c	FUNCTION_11	WHILE_1
0x4000762	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       378	input.c	FUNCTION_11	WHILE_1
0x4000766	          0x4801d0	                            add rax, rdx	       378	input.c	FUNCTION_11	WHILE_1
0x4000769	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       378	input.c	FUNCTION_11	WHILE_1
0x400076c	            0x8810	                      mov byte [rax], dl	       378	input.c	FUNCTION_11	WHILE_1
0x400076e	        0x488d45e4	                   lea rax, [rbp - 0x1c]	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x4000772	          0x4889c7	                            mov rdi, rax	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x4000775	      0xe823f9ffff	                    call sym.rl_get_char	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x400077a	          0x8945ec	             mov dword [rbp - 0x14], eax	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x400077d	        0x837dec00	               cmp dword [rbp - 0x14], 0	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x4000781	            0x743b	                            je 0x40007be	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x4000783	    0x488b05000000	            mov rax, qword [0x0400078a] 	       376	input.c	FUNCTION_11	WHILE_1
0x400078a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       376	input.c	FUNCTION_11	WHILE_1
0x400078d	          0x4863d2	                         movsxd rdx, edx	       376	input.c	FUNCTION_11	WHILE_1
0x4000790	        0x48c1e204	                              shl rdx, 4	       376	input.c	FUNCTION_11	WHILE_1
0x4000794	          0x4801d0	                            add rax, rdx	       376	input.c	FUNCTION_11	WHILE_1
0x4000797	           0xfb600	                   movzx eax, byte [rax]	       376	input.c	FUNCTION_11	WHILE_1
0x400079a	            0x84c0	                             test al, al	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x400079c	            0x7520	                           jne 0x40007be	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x400079e	    0x488b05000000	            mov rax, qword [0x040007a5] 	       377	input.c	FUNCTION_11	WHILE_1
0x40007a5	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       377	input.c	FUNCTION_11	WHILE_1
0x40007a8	          0x4863d2	                         movsxd rdx, edx	       377	input.c	FUNCTION_11	WHILE_1
0x40007ab	        0x48c1e204	                              shl rdx, 4	       377	input.c	FUNCTION_11	WHILE_1
0x40007af	          0x4801d0	                            add rax, rdx	       377	input.c	FUNCTION_11	WHILE_1
0x40007b2	        0x488b4008	                mov rax, qword [rax + 8]	       377	input.c	FUNCTION_11	WHILE_1
0x40007b6	    0x483d00000000	                              cmp rax, 0	       376	input.c	FUNCTION_11	WHILE_1
0x40007bc	            0x7498	                            je 0x4000756	       376	input.c	FUNCTION_11	WHILE_1
0x40007be	        0x837dec00	               cmp dword [rbp - 0x14], 0	       380	input.c	FUNCTION_11	IF_1
0x40007c2	            0x740a	                            je 0x40007ce	       380	input.c	FUNCTION_11	IF_1
0x40007c4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       381	input.c	FUNCTION_11	CALL_3
0x40007c7	            0x89c7	                            mov edi, eax	       381	input.c	FUNCTION_11	CALL_3
0x40007c9	      0xe800000000	                          call 0x40007ce	       381	input.c	FUNCTION_11	CALL_3
0x40007ce	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       383	input.c	FUNCTION_11
0x40007d1	          0x4863d0	                         movsxd rdx, eax	       383	input.c	FUNCTION_11
0x40007d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       383	input.c	FUNCTION_11
0x40007d8	          0x4801d0	                            add rax, rdx	       383	input.c	FUNCTION_11
0x40007db	          0xc60000	                       mov byte [rax], 0	       383	input.c	FUNCTION_11
0x40007de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       384	input.c	FUNCTION_11	CALL_4
0x40007e2	          0x4889c7	                            mov rdi, rax	       384	input.c	FUNCTION_11	CALL_4
0x40007e5	      0xe800000000	                          call 0x40007ea	       384	input.c	FUNCTION_11	CALL_4
0x40007ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       385	input.c	FUNCTION_11	CALL_5
0x40007ee	          0x4889c7	                            mov rdi, rax	       385	input.c	FUNCTION_11	CALL_5
0x40007f1	      0xe800000000	                          call 0x40007f6	       385	input.c	FUNCTION_11	CALL_5
0x40007f6	              0x90	                                     nop	       386	input.c	FUNCTION_11
0x40007f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       386	input.c	FUNCTION_11
0x40007fb	    0x644833042528	                xor rax, qword fs:[0x28]	       386	input.c	FUNCTION_11
0x4000804	            0x7405	                            je 0x400080b	       386	input.c	FUNCTION_11
0x4000806	      0xe800000000	                          call 0x400080b	       386	input.c	FUNCTION_11
0x400080b	              0xc9	                                   leave	       386	input.c	FUNCTION_11
0x400080c	              0xc3	                                     ret	       386	input.c	FUNCTION_11
rl_getc	CALL,8:ELSE,0:FOR,0:IF,7:functions,0:DO,0:SWITCH,0:WHILE,1	69
0x4000a06	              0x55	                                push rbp	       490	input.c	FUNCTION_16
0x4000a07	          0x4889e5	                            mov rbp, rsp	       490	input.c	FUNCTION_16
0x4000a0a	        0x4883ec20	                           sub rsp, 0x20	       490	input.c	FUNCTION_16
0x4000a0e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       490	input.c	FUNCTION_16
0x4000a12	    0x64488b042528	                mov rax, qword fs:[0x28]	       490	input.c	FUNCTION_16
0x4000a1b	        0x488945f8	                mov qword [rbp - 8], rax	       490	input.c	FUNCTION_16
0x4000a1f	            0x31c0	                            xor eax, eax	       490	input.c	FUNCTION_16
0x4000a21	    0x8b0500000000	            mov eax, dword [0x04000a27] 	       496	input.c	FUNCTION_16	WHILE_1	CALL_1
0x4000a27	            0x85c0	                           test eax, eax	       496	input.c	FUNCTION_16	WHILE_1	CALL_1
0x4000a29	            0x740d	                            je 0x4000a38	       496	input.c	FUNCTION_16	WHILE_1	CALL_1
0x4000a2b	    0x8b0500000000	            mov eax, dword [0x04000a31] 	       496	input.c	FUNCTION_16	WHILE_1	CALL_1
0x4000a31	            0x89c7	                            mov edi, eax	       496	input.c	FUNCTION_16	WHILE_1	CALL_1
0x4000a33	      0xe800000000	                          call 0x4000a38	       496	input.c	FUNCTION_16	WHILE_1	CALL_1
0x4000a38	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	input.c	FUNCTION_16	WHILE_1	CALL_5
0x4000a3c	          0x4889c7	                            mov rdi, rax	       504	input.c	FUNCTION_16	WHILE_1	CALL_5
0x4000a3f	      0xe800000000	                          call 0x4000a44	       504	input.c	FUNCTION_16	WHILE_1	CALL_5
0x4000a44	            0x89c1	                            mov ecx, eax	       504	input.c	FUNCTION_16	WHILE_1	CALL_5
0x4000a46	        0x488d45f3	                    lea rax, [rbp - 0xd]	       504	input.c	FUNCTION_16	WHILE_1	CALL_5
0x4000a4a	      0xba01000000	                              mov edx, 1	       504	input.c	FUNCTION_16	WHILE_1	CALL_5
0x4000a4f	          0x4889c6	                            mov rsi, rax	       504	input.c	FUNCTION_16	WHILE_1	CALL_5
0x4000a52	            0x89cf	                            mov edi, ecx	       504	input.c	FUNCTION_16	WHILE_1	CALL_5
0x4000a54	      0xe800000000	                          call 0x4000a59	       504	input.c	FUNCTION_16	WHILE_1	CALL_5
0x4000a59	          0x8945f4	              mov dword [rbp - 0xc], eax	       504	input.c	FUNCTION_16	WHILE_1	CALL_5
0x4000a5c	        0x837df401	                cmp dword [rbp - 0xc], 1	       506	input.c	FUNCTION_16	WHILE_1	IF_2
0x4000a60	            0x7509	                           jne 0x4000a6b	       506	input.c	FUNCTION_16	WHILE_1	IF_2
0x4000a62	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	       507	input.c	FUNCTION_16	WHILE_1	IF_2
0x4000a66	           0xfb6c0	                           movzx eax, al	       507	input.c	FUNCTION_16	WHILE_1	IF_2
0x4000a69	            0xeb74	                           jmp 0x4000adf	       507	input.c	FUNCTION_16	WHILE_1	IF_2
0x4000a6b	        0x837df400	                cmp dword [rbp - 0xc], 0	       511	input.c	FUNCTION_16	WHILE_1	IF_3
0x4000a6f	            0x7507	                           jne 0x4000a78	       511	input.c	FUNCTION_16	WHILE_1	IF_3
0x4000a71	      0xb8ffffffff	                     mov eax, 0xffffffff	       512	input.c	FUNCTION_16	WHILE_1	IF_3
0x4000a76	            0xeb67	                           jmp 0x4000adf	       512	input.c	FUNCTION_16	WHILE_1	IF_3
0x4000a78	      0xe800000000	                          call 0x4000a7d	       531	input.c	FUNCTION_16	WHILE_1	IF_5
0x4000a7d	            0x8b00	                    mov eax, dword [rax]	       531	input.c	FUNCTION_16	WHILE_1	IF_5
0x4000a7f	          0x83f80b	                            cmp eax, 0xb	       531	input.c	FUNCTION_16	WHILE_1	IF_5
0x4000a82	            0x740c	                            je 0x4000a90	       531	input.c	FUNCTION_16	WHILE_1	IF_5
0x4000a84	      0xe800000000	                          call 0x4000a89	       531	input.c	FUNCTION_16	WHILE_1	IF_5
0x4000a89	            0x8b00	                    mov eax, dword [rax]	       531	input.c	FUNCTION_16	WHILE_1	IF_5
0x4000a8b	          0x83f80b	                            cmp eax, 0xb	       531	input.c	FUNCTION_16	WHILE_1	IF_5
0x4000a8e	            0x751e	                           jne 0x4000aae	       531	input.c	FUNCTION_16	WHILE_1	IF_5
0x4000a90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       533	input.c	FUNCTION_16	WHILE_1	IF_5	IF_6	CALL_7
0x4000a94	          0x4889c7	                            mov rdi, rax	       533	input.c	FUNCTION_16	WHILE_1	IF_5	IF_6	CALL_7
0x4000a97	      0xe800000000	                          call 0x4000a9c	       533	input.c	FUNCTION_16	WHILE_1	IF_5	IF_6	CALL_7
0x4000a9c	            0x89c7	                            mov edi, eax	       533	input.c	FUNCTION_16	WHILE_1	IF_5	IF_6	CALL_7
0x4000a9e	      0xe800000000	                          call 0x4000aa3	       533	input.c	FUNCTION_16	WHILE_1	IF_5	IF_6	CALL_7
0x4000aa3	            0x85c0	                           test eax, eax	       533	input.c	FUNCTION_16	WHILE_1	IF_5	IF_6	CALL_7
0x4000aa5	            0x7932	                           jns 0x4000ad9	       533	input.c	FUNCTION_16	WHILE_1	IF_5	IF_6	CALL_7
0x4000aa7	      0xb8ffffffff	                     mov eax, 0xffffffff	       534	input.c	FUNCTION_16	WHILE_1	IF_5	IF_6
0x4000aac	            0xeb31	                           jmp 0x4000adf	       534	input.c	FUNCTION_16	WHILE_1	IF_5	IF_6
0x4000aae	      0xe800000000	                          call 0x4000ab3	       544	input.c	FUNCTION_16	WHILE_1	IF_7
0x4000ab3	            0x8b00	                    mov eax, dword [rax]	       544	input.c	FUNCTION_16	WHILE_1	IF_7
0x4000ab5	          0x83f804	                              cmp eax, 4	       544	input.c	FUNCTION_16	WHILE_1	IF_7
0x4000ab8	     0xf8463ffffff	                            je 0x4000a21	       544	input.c	FUNCTION_16	WHILE_1	IF_7
0x4000abe	    0x8b0500000000	            mov eax, dword [0x04000ac4] 	       545	input.c	FUNCTION_16	WHILE_1	CALL_8
0x4000ac4	          0x83e008	                              and eax, 8	       545	input.c	FUNCTION_16	WHILE_1	CALL_8
0x4000ac7	            0x85c0	                           test eax, eax	       545	input.c	FUNCTION_16	WHILE_1	CALL_8
0x4000ac9	            0x7407	                            je 0x4000ad2	       545	input.c	FUNCTION_16	WHILE_1	CALL_8
0x4000acb	      0xb8feffffff	                     mov eax, 0xfffffffe	       545	input.c	FUNCTION_16	WHILE_1	CALL_8
0x4000ad0	            0xeb0d	                           jmp 0x4000adf	       545	input.c	FUNCTION_16	WHILE_1	CALL_8
0x4000ad2	      0xb8ffffffff	                     mov eax, 0xffffffff	       545	input.c	FUNCTION_16	WHILE_1	CALL_8
0x4000ad7	            0xeb06	                           jmp 0x4000adf	       545	input.c	FUNCTION_16	WHILE_1	CALL_8
0x4000ad9	              0x90	                                     nop	       535	input.c	FUNCTION_16	WHILE_1	IF_5
0x4000ada	      0xe942ffffff	                           jmp 0x4000a21	       546	input.c	FUNCTION_16	WHILE_1
0x4000adf	        0x488b55f8	                mov rdx, qword [rbp - 8]	       547	input.c	FUNCTION_16
0x4000ae3	    0x644833142528	                xor rdx, qword fs:[0x28]	       547	input.c	FUNCTION_16
0x4000aec	            0x7405	                            je 0x4000af3	       547	input.c	FUNCTION_16
0x4000aee	      0xe800000000	                          call 0x4000af3	       547	input.c	FUNCTION_16
0x4000af3	              0xc9	                                   leave	       547	input.c	FUNCTION_16
0x4000af4	              0xc3	                                     ret	       547	input.c	FUNCTION_16
_rl_pushed_input_available	CALL,0:ELSE,0:FOR,0:IF,0:functions,0:DO,0:SWITCH,0:WHILE,0	9
0x4000156	              0x55	                                push rbp	       190	input.c	FUNCTION_6
0x4000157	          0x4889e5	                            mov rbp, rsp	       190	input.c	FUNCTION_6
0x400015a	    0x8b1500000000	            mov edx, dword [0x04000160] 	       191	input.c	FUNCTION_6
0x4000160	    0x8b0500000000	            mov eax, dword [0x04000166] 	       191	input.c	FUNCTION_6
0x4000166	            0x39c2	                            cmp edx, eax	       191	input.c	FUNCTION_6
0x4000168	           0xf95c0	                                setne al	       191	input.c	FUNCTION_6
0x400016b	           0xfb6c0	                           movzx eax, al	       191	input.c	FUNCTION_6
0x400016e	              0x5d	                                 pop rbp	       192	input.c	FUNCTION_6
0x400016f	              0xc3	                                     ret	       192	input.c	FUNCTION_6
rl_set_keyboard_input_timeout	CALL,0:ELSE,0:FOR,0:IF,1:functions,0:DO,0:SWITCH,0:WHILE,0	12
0x4000529	              0x55	                                push rbp	       298	input.c	FUNCTION_8
0x400052a	          0x4889e5	                            mov rbp, rsp	       298	input.c	FUNCTION_8
0x400052d	          0x897dec	             mov dword [rbp - 0x14], edi	       298	input.c	FUNCTION_8
0x4000530	    0x8b0500000000	            mov eax, dword [0x04000536] 	       301	input.c	FUNCTION_8
0x4000536	          0x8945fc	                mov dword [rbp - 4], eax	       301	input.c	FUNCTION_8
0x4000539	        0x837dec00	               cmp dword [rbp - 0x14], 0	       302	input.c	FUNCTION_8	IF_1
0x400053d	            0x7809	                            js 0x4000548	       302	input.c	FUNCTION_8	IF_1
0x400053f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       303	input.c	FUNCTION_8	IF_1
0x4000542	    0x890500000000	            mov dword [0x04000548], eax 	       303	input.c	FUNCTION_8	IF_1
0x4000548	          0x8b45fc	                mov eax, dword [rbp - 4]	       304	input.c	FUNCTION_8
0x400054b	              0x5d	                                 pop rbp	       305	input.c	FUNCTION_8
0x400054c	              0xc3	                                     ret	       305	input.c	FUNCTION_8
rl_stuff_char	CALL,2:ELSE,0:FOR,0:IF,4:functions,0:DO,0:SWITCH,0:WHILE,0	30
0x400080d	              0x55	                                push rbp	       393	input.c	FUNCTION_12
0x400080e	          0x4889e5	                            mov rbp, rsp	       393	input.c	FUNCTION_12
0x4000811	        0x4883ec08	                              sub rsp, 8	       393	input.c	FUNCTION_12
0x4000815	          0x897dfc	                mov dword [rbp - 4], edi	       393	input.c	FUNCTION_12
0x4000818	      0xe83df8ffff	                  call sym.ibuffer_space	       394	input.c	FUNCTION_12	IF_1	CALL_1
0x400081d	            0x85c0	                           test eax, eax	       394	input.c	FUNCTION_12	IF_1	CALL_1
0x400081f	            0x7507	                           jne 0x4000828	       394	input.c	FUNCTION_12	IF_1	CALL_1
0x4000821	      0xb800000000	                              mov eax, 0	       395	input.c	FUNCTION_12	IF_1
0x4000826	            0xeb61	                           jmp 0x4000889	       395	input.c	FUNCTION_12	IF_1
0x4000828	        0x837dfcff	 cmp dword [rbp - 4], 0xffffffffffffffff	       397	input.c	FUNCTION_12	IF_2
0x400082c	            0x7522	                           jne 0x4000850	       397	input.c	FUNCTION_12	IF_2
0x400082e	    0xc745fc0a0000	                mov dword [rbp - 4], 0xa	       399	input.c	FUNCTION_12	IF_2
0x4000835	    0xc70500000000	     mov dword [0x0400083f], 0xffffffff 	       400	input.c	FUNCTION_12	IF_2
0x400083f	    0x8b0500000000	            mov eax, dword [0x04000845] 	       401	input.c	FUNCTION_12	IF_2	CALL_2
0x4000845	       0xd00000200	                         or eax, 0x20000	       401	input.c	FUNCTION_12	IF_2	CALL_2
0x400084a	    0x890500000000	            mov dword [0x04000850], eax 	       401	input.c	FUNCTION_12	IF_2	CALL_2
0x4000850	    0x8b0500000000	            mov eax, dword [0x04000856] 	       403	input.c	FUNCTION_12
0x4000856	          0x8d5001	                      lea edx, [rax + 1]	       403	input.c	FUNCTION_12
0x4000859	    0x891500000000	            mov dword [0x0400085f], edx 	       403	input.c	FUNCTION_12
0x400085f	          0x8b55fc	                mov edx, dword [rbp - 4]	       403	input.c	FUNCTION_12
0x4000862	            0x4898	                                    cdqe	       403	input.c	FUNCTION_12
0x4000864	    0x889000000000	                      mov byte [rax], dl	       403	input.c	FUNCTION_12
0x400086a	    0x8b1500000000	            mov edx, dword [0x04000870] 	       407	input.c	FUNCTION_12	IF_3	IF_4
0x4000870	    0x8b0500000000	            mov eax, dword [0x04000876] 	       407	input.c	FUNCTION_12	IF_3	IF_4
0x4000876	            0x39c2	                            cmp edx, eax	       407	input.c	FUNCTION_12	IF_3	IF_4
0x4000878	            0x7e0a	                           jle 0x4000884	       407	input.c	FUNCTION_12	IF_3	IF_4
0x400087a	    0xc70500000000	               mov dword [0x04000884], 0	       409	input.c	FUNCTION_12	IF_3	IF_4
0x4000884	      0xb801000000	                              mov eax, 1	       411	input.c	FUNCTION_12
0x4000889	              0xc9	                                   leave	       412	input.c	FUNCTION_12
0x400088a	              0xc3	                                     ret	       412	input.c	FUNCTION_12
_rl_input_available	CALL,8:ELSE,0:FOR,0:IF,2:functions,0:DO,0:SWITCH,0:WHILE,0	97
0x400054d	              0x55	                                push rbp	       315	input.c	FUNCTION_9
0x400054e	          0x4889e5	                            mov rbp, rsp	       315	input.c	FUNCTION_9
0x4000551	    0x4881ec400100	                          sub rsp, 0x140	       315	input.c	FUNCTION_9
0x4000558	    0x64488b042528	                mov rax, qword fs:[0x28]	       315	input.c	FUNCTION_9
0x4000561	        0x488945f8	                mov qword [rbp - 8], rax	       315	input.c	FUNCTION_9
0x4000565	            0x31c0	                            xor eax, eax	       315	input.c	FUNCTION_9
0x4000567	    0x488b05000000	            mov rax, qword [0x0400056e] 	       325	input.c	FUNCTION_9	CALL_1
0x400056e	          0x4889c7	                            mov rdi, rax	       325	input.c	FUNCTION_9	CALL_1
0x4000571	      0xe800000000	                          call 0x4000576	       325	input.c	FUNCTION_9	CALL_1
0x4000576	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	       325	input.c	FUNCTION_9	CALL_1
0x400057c	      0xb800000000	                              mov eax, 0	       328	input.c	FUNCTION_9	CALL_2
0x4000581	      0xb910000000	                           mov ecx, 0x10	       328	input.c	FUNCTION_9	CALL_2
0x4000586	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	       328	input.c	FUNCTION_9	CALL_2
0x400058d	          0x4889d7	                            mov rdi, rdx	       328	input.c	FUNCTION_9	CALL_2
0x4000590	              0xfc	                                     cld	       328	input.c	FUNCTION_9	CALL_2
0x4000591	          0xf348ab	              rep stosq qword [rdi], rax	       328	input.c	FUNCTION_9	CALL_2
0x4000594	            0x89f8	                            mov eax, edi	       328	input.c	FUNCTION_9	CALL_2
0x4000596	            0x89ca	                            mov edx, ecx	       328	input.c	FUNCTION_9	CALL_2
0x4000598	    0x8995d0feffff	            mov dword [rbp - 0x130], edx	       328	input.c	FUNCTION_9	CALL_2
0x400059e	    0x8985d4feffff	            mov dword [rbp - 0x12c], eax	       328	input.c	FUNCTION_9	CALL_2
0x40005a4	      0xb800000000	                              mov eax, 0	       329	input.c	FUNCTION_9	CALL_3
0x40005a9	      0xb910000000	                           mov ecx, 0x10	       329	input.c	FUNCTION_9	CALL_3
0x40005ae	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       329	input.c	FUNCTION_9	CALL_3
0x40005b5	          0x4889d7	                            mov rdi, rdx	       329	input.c	FUNCTION_9	CALL_3
0x40005b8	              0xfc	                                     cld	       329	input.c	FUNCTION_9	CALL_3
0x40005b9	          0xf348ab	              rep stosq qword [rdi], rax	       329	input.c	FUNCTION_9	CALL_3
0x40005bc	            0x89f8	                            mov eax, edi	       329	input.c	FUNCTION_9	CALL_3
0x40005be	            0x89ca	                            mov edx, ecx	       329	input.c	FUNCTION_9	CALL_3
0x40005c0	    0x8995d8feffff	            mov dword [rbp - 0x128], edx	       329	input.c	FUNCTION_9	CALL_3
0x40005c6	    0x8985dcfeffff	            mov dword [rbp - 0x124], eax	       329	input.c	FUNCTION_9	CALL_3
0x40005cc	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	       330	input.c	FUNCTION_9	CALL_4
0x40005d2	          0x8d503f	                   lea edx, [rax + 0x3f]	       330	input.c	FUNCTION_9	CALL_4
0x40005d5	            0x85c0	                           test eax, eax	       330	input.c	FUNCTION_9	CALL_4
0x40005d7	           0xf48c2	                          cmovs eax, edx	       330	input.c	FUNCTION_9	CALL_4
0x40005da	          0xc1f806	                              sar eax, 6	       330	input.c	FUNCTION_9	CALL_4
0x40005dd	            0x89c6	                            mov esi, eax	       330	input.c	FUNCTION_9	CALL_4
0x40005df	          0x4863c6	                         movsxd rax, esi	       330	input.c	FUNCTION_9	CALL_4
0x40005e2	    0x488bbcc5f0fe	    mov rdi, qword [rbp + rax*8 - 0x110]	       330	input.c	FUNCTION_9	CALL_4
0x40005ea	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	       330	input.c	FUNCTION_9	CALL_4
0x40005f0	              0x99	                                     cdq	       330	input.c	FUNCTION_9	CALL_4
0x40005f1	          0xc1ea1a	                           shr edx, 0x1a	       330	input.c	FUNCTION_9	CALL_4
0x40005f4	             0x1d0	                            add eax, edx	       330	input.c	FUNCTION_9	CALL_4
0x40005f6	          0x83e03f	                           and eax, 0x3f	       330	input.c	FUNCTION_9	CALL_4
0x40005f9	            0x29d0	                            sub eax, edx	       330	input.c	FUNCTION_9	CALL_4
0x40005fb	      0xba01000000	                              mov edx, 1	       330	input.c	FUNCTION_9	CALL_4
0x4000600	            0x89c1	                            mov ecx, eax	       330	input.c	FUNCTION_9	CALL_4
0x4000602	          0x48d3e2	                             shl rdx, cl	       330	input.c	FUNCTION_9	CALL_4
0x4000605	          0x4889d0	                            mov rax, rdx	       330	input.c	FUNCTION_9	CALL_4
0x4000608	          0x4809c7	                             or rdi, rax	       330	input.c	FUNCTION_9	CALL_4
0x400060b	          0x4889fa	                            mov rdx, rdi	       330	input.c	FUNCTION_9	CALL_4
0x400060e	          0x4863c6	                         movsxd rax, esi	       330	input.c	FUNCTION_9	CALL_4
0x4000611	    0x488994c5f0fe	    mov qword [rbp + rax*8 - 0x110], rdx	       330	input.c	FUNCTION_9	CALL_4
0x4000619	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	       331	input.c	FUNCTION_9	CALL_5
0x400061f	          0x8d503f	                   lea edx, [rax + 0x3f]	       331	input.c	FUNCTION_9	CALL_5
0x4000622	            0x85c0	                           test eax, eax	       331	input.c	FUNCTION_9	CALL_5
0x4000624	           0xf48c2	                          cmovs eax, edx	       331	input.c	FUNCTION_9	CALL_5
0x4000627	          0xc1f806	                              sar eax, 6	       331	input.c	FUNCTION_9	CALL_5
0x400062a	            0x89c6	                            mov esi, eax	       331	input.c	FUNCTION_9	CALL_5
0x400062c	          0x4863c6	                         movsxd rax, esi	       331	input.c	FUNCTION_9	CALL_5
0x400062f	    0x488bbcc570ff	     mov rdi, qword [rbp + rax*8 - 0x90]	       331	input.c	FUNCTION_9	CALL_5
0x4000637	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	       331	input.c	FUNCTION_9	CALL_5
0x400063d	              0x99	                                     cdq	       331	input.c	FUNCTION_9	CALL_5
0x400063e	          0xc1ea1a	                           shr edx, 0x1a	       331	input.c	FUNCTION_9	CALL_5
0x4000641	             0x1d0	                            add eax, edx	       331	input.c	FUNCTION_9	CALL_5
0x4000643	          0x83e03f	                           and eax, 0x3f	       331	input.c	FUNCTION_9	CALL_5
0x4000646	            0x29d0	                            sub eax, edx	       331	input.c	FUNCTION_9	CALL_5
0x4000648	      0xba01000000	                              mov edx, 1	       331	input.c	FUNCTION_9	CALL_5
0x400064d	            0x89c1	                            mov ecx, eax	       331	input.c	FUNCTION_9	CALL_5
0x400064f	          0x48d3e2	                             shl rdx, cl	       331	input.c	FUNCTION_9	CALL_5
0x4000652	          0x4889d0	                            mov rax, rdx	       331	input.c	FUNCTION_9	CALL_5
0x4000655	          0x4809c7	                             or rdi, rax	       331	input.c	FUNCTION_9	CALL_5
0x4000658	          0x4889fa	                            mov rdx, rdi	       331	input.c	FUNCTION_9	CALL_5
0x400065b	          0x4863c6	                         movsxd rax, esi	       331	input.c	FUNCTION_9	CALL_5
0x400065e	    0x488994c570ff	     mov qword [rbp + rax*8 - 0x90], rdx	       331	input.c	FUNCTION_9	CALL_5
0x4000666	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	       332	input.c	FUNCTION_9
0x4000671	    0x8b0500000000	            mov eax, dword [0x04000677] 	       333	input.c	FUNCTION_9
0x4000677	            0x4898	                                    cdqe	       333	input.c	FUNCTION_9
0x4000679	    0x488985e8feff	            mov qword [rbp - 0x118], rax	       333	input.c	FUNCTION_9
0x4000680	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	       334	input.c	FUNCTION_9	CALL_6
0x4000686	          0x8d7801	                      lea edi, [rax + 1]	       334	input.c	FUNCTION_9	CALL_6
0x4000689	    0x488d8de0feff	                  lea rcx, [rbp - 0x120]	       334	input.c	FUNCTION_9	CALL_6
0x4000690	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       334	input.c	FUNCTION_9	CALL_6
0x4000697	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       334	input.c	FUNCTION_9	CALL_6
0x400069e	          0x4989c8	                             mov r8, rcx	       334	input.c	FUNCTION_9	CALL_6
0x40006a1	          0x4889d1	                            mov rcx, rdx	       334	input.c	FUNCTION_9	CALL_6
0x40006a4	      0xba00000000	                              mov edx, 0	       334	input.c	FUNCTION_9	CALL_6
0x40006a9	          0x4889c6	                            mov rsi, rax	       334	input.c	FUNCTION_9	CALL_6
0x40006ac	      0xe800000000	                          call 0x40006b1	       334	input.c	FUNCTION_9	CALL_6
0x40006b1	            0x85c0	                           test eax, eax	       334	input.c	FUNCTION_9	CALL_6
0x40006b3	           0xf9fc0	                                 setg al	       334	input.c	FUNCTION_9	CALL_6
0x40006b6	           0xfb6c0	                           movzx eax, al	       334	input.c	FUNCTION_9	CALL_6
0x40006b9	        0x488b75f8	                mov rsi, qword [rbp - 8]	       350	input.c	FUNCTION_9
0x40006bd	    0x644833342528	                xor rsi, qword fs:[0x28]	       350	input.c	FUNCTION_9
0x40006c6	            0x7405	                            je 0x40006cd	       350	input.c	FUNCTION_9
0x40006c8	      0xe800000000	                          call 0x40006cd	       350	input.c	FUNCTION_9
0x40006cd	              0xc9	                                   leave	       350	input.c	FUNCTION_9
0x40006ce	              0xc3	                                     ret	       350	input.c	FUNCTION_9
ibuffer_space	CALL,0:ELSE,1:FOR,0:IF,1:functions,0:DO,0:SWITCH,0:WHILE,0	20
0x400005a	              0x55	                                push rbp	       142	input.c	FUNCTION_3
0x400005b	          0x4889e5	                            mov rbp, rsp	       142	input.c	FUNCTION_3
0x400005e	    0x8b1500000000	            mov edx, dword [0x04000064] 	       143	input.c	FUNCTION_3	IF_1
0x4000064	    0x8b0500000000	            mov eax, dword [0x0400006a] 	       143	input.c	FUNCTION_3	IF_1
0x400006a	            0x39c2	                            cmp edx, eax	       143	input.c	FUNCTION_3	IF_1
0x400006c	            0x7e15	                           jle 0x4000083	       143	input.c	FUNCTION_3	IF_1
0x400006e	    0x8b1500000000	            mov edx, dword [0x04000074] 	       144	input.c	FUNCTION_3	IF_1
0x4000074	    0x8b0500000000	            mov eax, dword [0x0400007a] 	       144	input.c	FUNCTION_3	IF_1
0x400007a	            0x29c2	                            sub edx, eax	       144	input.c	FUNCTION_3	IF_1
0x400007c	            0x89d0	                            mov eax, edx	       144	input.c	FUNCTION_3	IF_1
0x400007e	          0x83e801	                              sub eax, 1	       144	input.c	FUNCTION_3	IF_1
0x4000081	            0xeb18	                           jmp 0x400009b	       144	input.c	FUNCTION_3	IF_1
0x4000083	    0x8b0500000000	            mov eax, dword [0x04000089] 	       146	input.c	FUNCTION_3	ELSE_1
0x4000089	    0x8b0d00000000	            mov ecx, dword [0x0400008f] 	       146	input.c	FUNCTION_3	ELSE_1
0x400008f	    0x8b1500000000	            mov edx, dword [0x04000095] 	       146	input.c	FUNCTION_3	ELSE_1
0x4000095	            0x29d1	                            sub ecx, edx	       146	input.c	FUNCTION_3	ELSE_1
0x4000097	            0x89ca	                            mov edx, ecx	       146	input.c	FUNCTION_3	ELSE_1
0x4000099	            0x29d0	                            sub eax, edx	       146	input.c	FUNCTION_3	ELSE_1
0x400009b	              0x5d	                                 pop rbp	       147	input.c	FUNCTION_3
0x400009c	              0xc3	                                     ret	       147	input.c	FUNCTION_3
rl_clear_pending_input	CALL,1:ELSE,0:FOR,0:IF,0:functions,0:DO,0:SWITCH,0:WHILE,0	9
0x40008b3	              0x55	                                push rbp	       427	input.c	FUNCTION_14
0x40008b4	          0x4889e5	                            mov rbp, rsp	       427	input.c	FUNCTION_14
0x40008b7	    0xc70500000000	               mov dword [0x040008c1], 0	       428	input.c	FUNCTION_14
0x40008c1	    0x8b0500000000	            mov eax, dword [0x040008c7] 	       429	input.c	FUNCTION_14	CALL_1
0x40008c7	      0x25fffffdff	                     and eax, 0xfffdffff	       429	input.c	FUNCTION_14	CALL_1
0x40008cc	    0x890500000000	            mov dword [0x040008d2], eax 	       429	input.c	FUNCTION_14	CALL_1
0x40008d2	      0xb800000000	                              mov eax, 0	       430	input.c	FUNCTION_14
0x40008d7	              0x5d	                                 pop rbp	       431	input.c	FUNCTION_14
0x40008d8	              0xc3	                                     ret	       431	input.c	FUNCTION_14
_rl_any_typein	CALL,0:ELSE,0:FOR,0:IF,0:functions,0:DO,0:SWITCH,0:WHILE,0	9
0x4000040	              0x55	                                push rbp	       134	input.c	FUNCTION_2
0x4000041	          0x4889e5	                            mov rbp, rsp	       134	input.c	FUNCTION_2
0x4000044	    0x8b1500000000	            mov edx, dword [0x0400004a] 	       135	input.c	FUNCTION_2
0x400004a	    0x8b0500000000	            mov eax, dword [0x04000050] 	       135	input.c	FUNCTION_2
0x4000050	            0x39c2	                            cmp edx, eax	       135	input.c	FUNCTION_2
0x4000052	           0xf95c0	                                setne al	       135	input.c	FUNCTION_2
0x4000055	           0xfb6c0	                           movzx eax, al	       135	input.c	FUNCTION_2
0x4000058	              0x5d	                                 pop rbp	       136	input.c	FUNCTION_2
0x4000059	              0xc3	                                     ret	       136	input.c	FUNCTION_2
rl_get_char	CALL,0:ELSE,0:FOR,0:IF,3:functions,0:DO,0:SWITCH,0:WHILE,0	25
0x400009d	              0x55	                                push rbp	       155	input.c	FUNCTION_4
0x400009e	          0x4889e5	                            mov rbp, rsp	       155	input.c	FUNCTION_4
0x40000a1	        0x48897df8	                mov qword [rbp - 8], rdi	       155	input.c	FUNCTION_4
0x40000a5	    0x8b1500000000	            mov edx, dword [0x040000ab] 	       156	input.c	FUNCTION_4	IF_1
0x40000ab	    0x8b0500000000	            mov eax, dword [0x040000b1] 	       156	input.c	FUNCTION_4	IF_1
0x40000b1	            0x39c2	                            cmp edx, eax	       156	input.c	FUNCTION_4	IF_1
0x40000b3	            0x7507	                           jne 0x40000bc	       156	input.c	FUNCTION_4	IF_1
0x40000b5	      0xb800000000	                              mov eax, 0	       157	input.c	FUNCTION_4	IF_1
0x40000ba	            0xeb40	                           jmp 0x40000fc	       157	input.c	FUNCTION_4	IF_1
0x40000bc	    0x8b0500000000	            mov eax, dword [0x040000c2] 	       159	input.c	FUNCTION_4
0x40000c2	          0x8d5001	                      lea edx, [rax + 1]	       159	input.c	FUNCTION_4
0x40000c5	    0x891500000000	            mov dword [0x040000cb], edx 	       159	input.c	FUNCTION_4
0x40000cb	            0x4898	                                    cdqe	       159	input.c	FUNCTION_4
0x40000cd	     0xfb680000000	                   movzx eax, byte [rax]	       159	input.c	FUNCTION_4
0x40000d4	           0xfb6d0	                           movzx edx, al	       159	input.c	FUNCTION_4
0x40000d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	input.c	FUNCTION_4
0x40000db	            0x8910	                    mov dword [rax], edx	       159	input.c	FUNCTION_4
0x40000dd	    0x8b1500000000	            mov edx, dword [0x040000e3] 	       163	input.c	FUNCTION_4	IF_2	IF_3
0x40000e3	    0x8b0500000000	            mov eax, dword [0x040000e9] 	       163	input.c	FUNCTION_4	IF_2	IF_3
0x40000e9	            0x39c2	                            cmp edx, eax	       163	input.c	FUNCTION_4	IF_2	IF_3
0x40000eb	            0x7e0a	                           jle 0x40000f7	       163	input.c	FUNCTION_4	IF_2	IF_3
0x40000ed	    0xc70500000000	               mov dword [0x040000f7], 0	       165	input.c	FUNCTION_4	IF_2	IF_3
0x40000f7	      0xb801000000	                              mov eax, 1	       167	input.c	FUNCTION_4
0x40000fc	              0x5d	                                 pop rbp	       168	input.c	FUNCTION_4
0x40000fd	              0xc3	                                     ret	       168	input.c	FUNCTION_4
_rl_unget_char	CALL,1:ELSE,0:FOR,0:IF,2:functions,0:DO,0:SWITCH,0:WHILE,0	24
0x40000fe	              0x55	                                push rbp	       176	input.c	FUNCTION_5
0x40000ff	          0x4889e5	                            mov rbp, rsp	       176	input.c	FUNCTION_5
0x4000102	        0x4883ec08	                              sub rsp, 8	       176	input.c	FUNCTION_5
0x4000106	          0x897dfc	                mov dword [rbp - 4], edi	       176	input.c	FUNCTION_5
0x4000109	      0xe84cffffff	                  call sym.ibuffer_space	       177	input.c	FUNCTION_5	IF_1	CALL_1
0x400010e	            0x85c0	                           test eax, eax	       177	input.c	FUNCTION_5	IF_1	CALL_1
0x4000110	            0x743d	                            je 0x400014f	       177	input.c	FUNCTION_5	IF_1	CALL_1
0x4000112	    0x8b0500000000	            mov eax, dword [0x04000118] 	       179	input.c	FUNCTION_5	IF_1
0x4000118	          0x83e801	                              sub eax, 1	       179	input.c	FUNCTION_5	IF_1
0x400011b	    0x890500000000	            mov dword [0x04000121], eax 	       179	input.c	FUNCTION_5	IF_1
0x4000121	    0x8b0500000000	            mov eax, dword [0x04000127] 	       180	input.c	FUNCTION_5	IF_1	IF_2
0x4000127	            0x85c0	                           test eax, eax	       180	input.c	FUNCTION_5	IF_1	IF_2
0x4000129	            0x790c	                           jns 0x4000137	       180	input.c	FUNCTION_5	IF_1	IF_2
0x400012b	    0x8b0500000000	            mov eax, dword [0x04000131] 	       181	input.c	FUNCTION_5	IF_1	IF_2
0x4000131	    0x890500000000	            mov dword [0x04000137], eax 	       181	input.c	FUNCTION_5	IF_1	IF_2
0x4000137	    0x8b0500000000	            mov eax, dword [0x0400013d] 	       182	input.c	FUNCTION_5	IF_1
0x400013d	          0x8b55fc	                mov edx, dword [rbp - 4]	       182	input.c	FUNCTION_5	IF_1
0x4000140	            0x4898	                                    cdqe	       182	input.c	FUNCTION_5	IF_1
0x4000142	    0x889000000000	                      mov byte [rax], dl	       182	input.c	FUNCTION_5	IF_1
0x4000148	      0xb801000000	                              mov eax, 1	       183	input.c	FUNCTION_5	IF_1
0x400014d	            0xeb05	                           jmp 0x4000154	       183	input.c	FUNCTION_5	IF_1
0x400014f	      0xb800000000	                              mov eax, 0	       185	input.c	FUNCTION_5
0x4000154	              0xc9	                                   leave	       186	input.c	FUNCTION_5
0x4000155	              0xc3	                                     ret	       186	input.c	FUNCTION_5
rl_execute_next	CALL,1:ELSE,0:FOR,0:IF,0:functions,0:DO,0:SWITCH,0:WHILE,0	11
0x400088b	              0x55	                                push rbp	       418	input.c	FUNCTION_13
0x400088c	          0x4889e5	                            mov rbp, rsp	       418	input.c	FUNCTION_13
0x400088f	          0x897dfc	                mov dword [rbp - 4], edi	       418	input.c	FUNCTION_13
0x4000892	          0x8b45fc	                mov eax, dword [rbp - 4]	       419	input.c	FUNCTION_13
0x4000895	    0x890500000000	            mov dword [0x0400089b], eax 	       419	input.c	FUNCTION_13
0x400089b	    0x8b0500000000	            mov eax, dword [0x040008a1] 	       420	input.c	FUNCTION_13	CALL_1
0x40008a1	       0xd00000200	                         or eax, 0x20000	       420	input.c	FUNCTION_13	CALL_1
0x40008a6	    0x890500000000	            mov dword [0x040008ac], eax 	       420	input.c	FUNCTION_13	CALL_1
0x40008ac	      0xb800000000	                              mov eax, 0	       421	input.c	FUNCTION_13
0x40008b1	              0x5d	                                 pop rbp	       422	input.c	FUNCTION_13
0x40008b2	              0xc3	                                     ret	       422	input.c	FUNCTION_13
_rl_input_queued	CALL,3:ELSE,0:FOR,0:IF,0:functions,0:DO,0:SWITCH,0:WHILE,0	16
0x40006cf	              0x55	                                push rbp	       355	input.c	FUNCTION_10
0x40006d0	          0x4889e5	                            mov rbp, rsp	       355	input.c	FUNCTION_10
0x40006d3	        0x4883ec20	                           sub rsp, 0x20	       355	input.c	FUNCTION_10
0x40006d7	          0x897dec	             mov dword [rbp - 0x14], edi	       355	input.c	FUNCTION_10
0x40006da	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       358	input.c	FUNCTION_10	CALL_1
0x40006dd	            0x89c7	                            mov edi, eax	       358	input.c	FUNCTION_10	CALL_1
0x40006df	      0xe800000000	                          call 0x40006e4	       358	input.c	FUNCTION_10	CALL_1
0x40006e4	          0x8945f8	                mov dword [rbp - 8], eax	       358	input.c	FUNCTION_10	CALL_1
0x40006e7	      0xe800000000	                          call 0x40006ec	       359	input.c	FUNCTION_10	CALL_2
0x40006ec	          0x8945fc	                mov dword [rbp - 4], eax	       359	input.c	FUNCTION_10	CALL_2
0x40006ef	          0x8b45f8	                mov eax, dword [rbp - 8]	       360	input.c	FUNCTION_10	CALL_3
0x40006f2	            0x89c7	                            mov edi, eax	       360	input.c	FUNCTION_10	CALL_3
0x40006f4	      0xe800000000	                          call 0x40006f9	       360	input.c	FUNCTION_10	CALL_3
0x40006f9	          0x8b45fc	                mov eax, dword [rbp - 4]	       361	input.c	FUNCTION_10
0x40006fc	              0xc9	                                   leave	       362	input.c	FUNCTION_10
0x40006fd	              0xc3	                                     ret	       362	input.c	FUNCTION_10
rl_read_key	CALL,7:ELSE,2:FOR,0:IF,7:functions,0:DO,0:SWITCH,0:WHILE,1	80
0x40008d9	              0x55	                                push rbp	       442	input.c	FUNCTION_15
0x40008da	          0x4889e5	                            mov rbp, rsp	       442	input.c	FUNCTION_15
0x40008dd	        0x4883ec10	                           sub rsp, 0x10	       442	input.c	FUNCTION_15
0x40008e1	    0x64488b042528	                mov rax, qword fs:[0x28]	       442	input.c	FUNCTION_15
0x40008ea	        0x488945f8	                mov qword [rbp - 8], rax	       442	input.c	FUNCTION_15
0x40008ee	            0x31c0	                            xor eax, eax	       442	input.c	FUNCTION_15
0x40008f0	    0x8b0500000000	            mov eax, dword [0x040008f6] 	       445	input.c	FUNCTION_15
0x40008f6	          0x83c001	                              add eax, 1	       445	input.c	FUNCTION_15
0x40008f9	    0x890500000000	            mov dword [0x040008ff], eax 	       445	input.c	FUNCTION_15
0x40008ff	    0x8b0500000000	            mov eax, dword [0x04000905] 	       447	input.c	FUNCTION_15	IF_1
0x4000905	            0x85c0	                           test eax, eax	       447	input.c	FUNCTION_15	IF_1
0x4000907	            0x7413	                            je 0x400091c	       447	input.c	FUNCTION_15	IF_1
0x4000909	    0x8b0500000000	            mov eax, dword [0x0400090f] 	       449	input.c	FUNCTION_15	IF_1
0x400090f	          0x8945f4	              mov dword [rbp - 0xc], eax	       449	input.c	FUNCTION_15	IF_1
0x4000912	      0xe800000000	                          call 0x4000917	       450	input.c	FUNCTION_15	IF_1	CALL_1
0x4000917	      0xe9d1000000	                           jmp 0x40009ed	       450	input.c	FUNCTION_15	IF_1	CALL_1
0x400091c	      0xe800000000	                          call 0x4000921	       455	input.c	FUNCTION_15	ELSE_1	IF_2	CALL_2
0x4000921	          0x8945f4	              mov dword [rbp - 0xc], eax	       455	input.c	FUNCTION_15	ELSE_1	IF_2	CALL_2
0x4000924	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       455	input.c	FUNCTION_15	ELSE_1	IF_2	CALL_2
0x4000927	            0x85c0	                           test eax, eax	       455	input.c	FUNCTION_15	ELSE_1	IF_2	CALL_2
0x4000929	            0x7408	                            je 0x4000933	       455	input.c	FUNCTION_15	ELSE_1	IF_2	CALL_2
0x400092b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       456	input.c	FUNCTION_15	ELSE_1	IF_2
0x400092e	      0xe9bd000000	                           jmp 0x40009f0	       456	input.c	FUNCTION_15	ELSE_1	IF_2
0x4000933	    0x488b05000000	            mov rax, qword [0x0400093a] 	       459	input.c	FUNCTION_15	ELSE_1	IF_3
0x400093a	          0x4885c0	                           test rax, rax	       459	input.c	FUNCTION_15	ELSE_1	IF_3
0x400093d	            0x746e	                            je 0x40009ad	       459	input.c	FUNCTION_15	ELSE_1	IF_3
0x400093f	            0xeb5e	                           jmp 0x400099f	       461	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1
0x4000941	      0xe82af8ffff	                  call sym.rl_gather_tyi	       463	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4	CALL_3
0x4000946	            0x85c0	                           test eax, eax	       463	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4	CALL_3
0x4000948	            0x7914	                           jns 0x400095e	       463	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4	CALL_3
0x400094a	    0xc70500000000	               mov dword [0x04000954], 1	       465	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4
0x4000954	      0xb80a000000	                            mov eax, 0xa	       466	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4
0x4000959	      0xe992000000	                           jmp 0x40009f0	       466	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4
0x400095e	    0x8b0500000000	            mov eax, dword [0x04000964] 	       468	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	CALL_4
0x4000964	            0x85c0	                           test eax, eax	       468	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	CALL_4
0x4000966	            0x740d	                            je 0x4000975	       468	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	CALL_4
0x4000968	    0x8b0500000000	            mov eax, dword [0x0400096e] 	       468	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	CALL_4
0x400096e	            0x89c7	                            mov edi, eax	       468	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	CALL_4
0x4000970	      0xe800000000	                          call 0x4000975	       468	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	CALL_4
0x4000975	        0x488d45f4	                    lea rax, [rbp - 0xc]	       469	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_5	CALL_5
0x4000979	          0x4889c7	                            mov rdi, rax	       469	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_5	CALL_5
0x400097c	      0xe81cf7ffff	                    call sym.rl_get_char	       469	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_5	CALL_5
0x4000981	            0x85c0	                           test eax, eax	       469	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_5	CALL_5
0x4000983	            0x7567	                           jne 0x40009ec	       469	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_5	CALL_5
0x4000985	    0x8b0500000000	            mov eax, dword [0x0400098b] 	       471	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_6
0x400098b	            0x85c0	                           test eax, eax	       471	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_6
0x400098d	            0x7407	                            je 0x4000996	       471	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_6
0x400098f	      0xb80a000000	                            mov eax, 0xa	       472	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_6
0x4000994	            0xeb5a	                           jmp 0x40009f0	       472	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_6
0x4000996	    0x488b05000000	            mov rax, qword [0x0400099d] 	       473	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1
0x400099d	            0xffd0	                                call rax	       473	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1
0x400099f	    0x488b05000000	            mov rax, qword [0x040009a6] 	       461	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1
0x40009a6	          0x4885c0	                           test rax, rax	       461	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1
0x40009a9	            0x7596	                           jne 0x4000941	       461	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1
0x40009ab	            0xeb40	                           jmp 0x40009ed	       461	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1
0x40009ad	        0x488d45f4	                    lea rax, [rbp - 0xc]	       478	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7	CALL_6
0x40009b1	          0x4889c7	                            mov rdi, rax	       478	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7	CALL_6
0x40009b4	      0xe8e4f6ffff	                    call sym.rl_get_char	       478	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7	CALL_6
0x40009b9	            0x85c0	                           test eax, eax	       478	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7	CALL_6
0x40009bb	            0x7516	                           jne 0x40009d3	       478	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7	CALL_6
0x40009bd	    0x488b05000000	            mov rax, qword [0x040009c4] 	       479	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7
0x40009c4	    0x488b15000000	            mov rdx, qword [0x040009cb] 	       479	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7
0x40009cb	          0x4889d7	                            mov rdi, rdx	       479	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7
0x40009ce	            0xffd0	                                call rax	       479	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7
0x40009d0	          0x8945f4	              mov dword [rbp - 0xc], eax	       479	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7
0x40009d3	    0x8b0500000000	            mov eax, dword [0x040009d9] 	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x40009d9	            0x85c0	                           test eax, eax	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x40009db	            0x7410	                            je 0x40009ed	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x40009dd	    0x8b0500000000	            mov eax, dword [0x040009e3] 	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x40009e3	            0x89c7	                            mov edi, eax	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x40009e5	      0xe800000000	                          call 0x40009ea	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x40009ea	            0xeb01	                           jmp 0x40009ed	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x40009ec	              0x90	                                     nop	       470	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_5
0x40009ed	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       484	input.c	FUNCTION_15
0x40009f0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       485	input.c	FUNCTION_15
0x40009f4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       485	input.c	FUNCTION_15
0x40009fd	            0x7405	                            je 0x4000a04	       485	input.c	FUNCTION_15
0x40009ff	      0xe800000000	                          call 0x4000a04	       485	input.c	FUNCTION_15
0x4000a04	              0xc9	                                   leave	       485	input.c	FUNCTION_15
0x4000a05	              0xc3	                                     ret	       485	input.c	FUNCTION_15
rl_gather_tyi	CALL,18:ELSE,1:FOR,0:IF,12:functions,0:DO,0:SWITCH,0:WHILE,1	243
0x4000170	              0x55	                                push rbp	       199	input.c	FUNCTION_7
0x4000171	          0x4889e5	                            mov rbp, rsp	       199	input.c	FUNCTION_7
0x4000174	            0x4154	                                push r12	       199	input.c	FUNCTION_7
0x4000176	              0x53	                                push rbx	       199	input.c	FUNCTION_7
0x4000177	    0x4881ec400100	                          sub rsp, 0x140	       199	input.c	FUNCTION_7
0x400017e	    0x64488b042528	                mov rax, qword fs:[0x28]	       199	input.c	FUNCTION_7
0x4000187	        0x488945e8	             mov qword [rbp - 0x18], rax	       199	input.c	FUNCTION_7
0x400018b	            0x31c0	                            xor eax, eax	       199	input.c	FUNCTION_7
0x400018d	    0xc785b4feffff	              mov dword [rbp - 0x14c], 0	       209	input.c	FUNCTION_7
0x4000197	    0x488b05000000	            mov rax, qword [0x0400019e] 	       210	input.c	FUNCTION_7	CALL_1
0x400019e	          0x4889c7	                            mov rdi, rax	       210	input.c	FUNCTION_7	CALL_1
0x40001a1	      0xe800000000	                          call 0x40001a6	       210	input.c	FUNCTION_7	CALL_1
0x40001a6	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	       210	input.c	FUNCTION_7	CALL_1
0x40001ac	      0xb800000000	                              mov eax, 0	       213	input.c	FUNCTION_7	CALL_2
0x40001b1	      0xb910000000	                           mov ecx, 0x10	       213	input.c	FUNCTION_7	CALL_2
0x40001b6	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	       213	input.c	FUNCTION_7	CALL_2
0x40001bd	          0x4889d7	                            mov rdi, rdx	       213	input.c	FUNCTION_7	CALL_2
0x40001c0	              0xfc	                                     cld	       213	input.c	FUNCTION_7	CALL_2
0x40001c1	          0xf348ab	              rep stosq qword [rdi], rax	       213	input.c	FUNCTION_7	CALL_2
0x40001c4	            0x89f8	                            mov eax, edi	       213	input.c	FUNCTION_7	CALL_2
0x40001c6	            0x89ca	                            mov edx, ecx	       213	input.c	FUNCTION_7	CALL_2
0x40001c8	    0x8995bcfeffff	            mov dword [rbp - 0x144], edx	       213	input.c	FUNCTION_7	CALL_2
0x40001ce	    0x8985c0feffff	            mov dword [rbp - 0x140], eax	       213	input.c	FUNCTION_7	CALL_2
0x40001d4	      0xb800000000	                              mov eax, 0	       214	input.c	FUNCTION_7	CALL_3
0x40001d9	      0xb910000000	                           mov ecx, 0x10	       214	input.c	FUNCTION_7	CALL_3
0x40001de	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       214	input.c	FUNCTION_7	CALL_3
0x40001e5	          0x4889d7	                            mov rdi, rdx	       214	input.c	FUNCTION_7	CALL_3
0x40001e8	              0xfc	                                     cld	       214	input.c	FUNCTION_7	CALL_3
0x40001e9	          0xf348ab	              rep stosq qword [rdi], rax	       214	input.c	FUNCTION_7	CALL_3
0x40001ec	            0x89f8	                            mov eax, edi	       214	input.c	FUNCTION_7	CALL_3
0x40001ee	            0x89ca	                            mov edx, ecx	       214	input.c	FUNCTION_7	CALL_3
0x40001f0	    0x8995c4feffff	            mov dword [rbp - 0x13c], edx	       214	input.c	FUNCTION_7	CALL_3
0x40001f6	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	       214	input.c	FUNCTION_7	CALL_3
0x40001fc	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       215	input.c	FUNCTION_7	CALL_4
0x4000202	          0x8d503f	                   lea edx, [rax + 0x3f]	       215	input.c	FUNCTION_7	CALL_4
0x4000205	            0x85c0	                           test eax, eax	       215	input.c	FUNCTION_7	CALL_4
0x4000207	           0xf48c2	                          cmovs eax, edx	       215	input.c	FUNCTION_7	CALL_4
0x400020a	          0xc1f806	                              sar eax, 6	       215	input.c	FUNCTION_7	CALL_4
0x400020d	            0x89c6	                            mov esi, eax	       215	input.c	FUNCTION_7	CALL_4
0x400020f	          0x4863c6	                         movsxd rax, esi	       215	input.c	FUNCTION_7	CALL_4
0x4000212	    0x488bbcc5e0fe	    mov rdi, qword [rbp + rax*8 - 0x120]	       215	input.c	FUNCTION_7	CALL_4
0x400021a	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       215	input.c	FUNCTION_7	CALL_4
0x4000220	              0x99	                                     cdq	       215	input.c	FUNCTION_7	CALL_4
0x4000221	          0xc1ea1a	                           shr edx, 0x1a	       215	input.c	FUNCTION_7	CALL_4
0x4000224	             0x1d0	                            add eax, edx	       215	input.c	FUNCTION_7	CALL_4
0x4000226	          0x83e03f	                           and eax, 0x3f	       215	input.c	FUNCTION_7	CALL_4
0x4000229	            0x29d0	                            sub eax, edx	       215	input.c	FUNCTION_7	CALL_4
0x400022b	      0xba01000000	                              mov edx, 1	       215	input.c	FUNCTION_7	CALL_4
0x4000230	            0x89c1	                            mov ecx, eax	       215	input.c	FUNCTION_7	CALL_4
0x4000232	          0x48d3e2	                             shl rdx, cl	       215	input.c	FUNCTION_7	CALL_4
0x4000235	          0x4889d0	                            mov rax, rdx	       215	input.c	FUNCTION_7	CALL_4
0x4000238	          0x4809c7	                             or rdi, rax	       215	input.c	FUNCTION_7	CALL_4
0x400023b	          0x4889fa	                            mov rdx, rdi	       215	input.c	FUNCTION_7	CALL_4
0x400023e	          0x4863c6	                         movsxd rax, esi	       215	input.c	FUNCTION_7	CALL_4
0x4000241	    0x488994c5e0fe	    mov qword [rbp + rax*8 - 0x120], rdx	       215	input.c	FUNCTION_7	CALL_4
0x4000249	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       216	input.c	FUNCTION_7	CALL_5
0x400024f	          0x8d503f	                   lea edx, [rax + 0x3f]	       216	input.c	FUNCTION_7	CALL_5
0x4000252	            0x85c0	                           test eax, eax	       216	input.c	FUNCTION_7	CALL_5
0x4000254	           0xf48c2	                          cmovs eax, edx	       216	input.c	FUNCTION_7	CALL_5
0x4000257	          0xc1f806	                              sar eax, 6	       216	input.c	FUNCTION_7	CALL_5
0x400025a	            0x89c6	                            mov esi, eax	       216	input.c	FUNCTION_7	CALL_5
0x400025c	          0x4863c6	                         movsxd rax, esi	       216	input.c	FUNCTION_7	CALL_5
0x400025f	    0x488bbcc560ff	     mov rdi, qword [rbp + rax*8 - 0xa0]	       216	input.c	FUNCTION_7	CALL_5
0x4000267	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       216	input.c	FUNCTION_7	CALL_5
0x400026d	              0x99	                                     cdq	       216	input.c	FUNCTION_7	CALL_5
0x400026e	          0xc1ea1a	                           shr edx, 0x1a	       216	input.c	FUNCTION_7	CALL_5
0x4000271	             0x1d0	                            add eax, edx	       216	input.c	FUNCTION_7	CALL_5
0x4000273	          0x83e03f	                           and eax, 0x3f	       216	input.c	FUNCTION_7	CALL_5
0x4000276	            0x29d0	                            sub eax, edx	       216	input.c	FUNCTION_7	CALL_5
0x4000278	      0xba01000000	                              mov edx, 1	       216	input.c	FUNCTION_7	CALL_5
0x400027d	            0x89c1	                            mov ecx, eax	       216	input.c	FUNCTION_7	CALL_5
0x400027f	          0x48d3e2	                             shl rdx, cl	       216	input.c	FUNCTION_7	CALL_5
0x4000282	          0x4889d0	                            mov rax, rdx	       216	input.c	FUNCTION_7	CALL_5
0x4000285	          0x4809c7	                             or rdi, rax	       216	input.c	FUNCTION_7	CALL_5
0x4000288	          0x4889fa	                            mov rdx, rdi	       216	input.c	FUNCTION_7	CALL_5
0x400028b	          0x4863c6	                         movsxd rax, esi	       216	input.c	FUNCTION_7	CALL_5
0x400028e	    0x488994c560ff	     mov qword [rbp + rax*8 - 0xa0], rdx	       216	input.c	FUNCTION_7	CALL_5
0x4000296	    0x8b0d00000000	            mov ecx, dword [0x0400029c] 	       217	input.c	FUNCTION_7	CALL_6
0x400029c	      0xba83de1b43	                     mov edx, 0x431bde83	       217	input.c	FUNCTION_7	CALL_6
0x40002a1	            0x89c8	                            mov eax, ecx	       217	input.c	FUNCTION_7	CALL_6
0x40002a3	            0xf7ea	                                imul edx	       217	input.c	FUNCTION_7	CALL_6
0x40002a5	          0xc1fa12	                           sar edx, 0x12	       217	input.c	FUNCTION_7	CALL_6
0x40002a8	            0x89c8	                            mov eax, ecx	       217	input.c	FUNCTION_7	CALL_6
0x40002aa	          0xc1f81f	                           sar eax, 0x1f	       217	input.c	FUNCTION_7	CALL_6
0x40002ad	            0x29c2	                            sub edx, eax	       217	input.c	FUNCTION_7	CALL_6
0x40002af	            0x89d0	                            mov eax, edx	       217	input.c	FUNCTION_7	CALL_6
0x40002b1	            0x4898	                                    cdqe	       217	input.c	FUNCTION_7	CALL_6
0x40002b3	    0x488985d0feff	            mov qword [rbp - 0x130], rax	       217	input.c	FUNCTION_7	CALL_6
0x40002ba	    0x8b0d00000000	            mov ecx, dword [0x040002c0] 	       217	input.c	FUNCTION_7	CALL_6
0x40002c0	      0xba83de1b43	                     mov edx, 0x431bde83	       217	input.c	FUNCTION_7	CALL_6
0x40002c5	            0x89c8	                            mov eax, ecx	       217	input.c	FUNCTION_7	CALL_6
0x40002c7	            0xf7ea	                                imul edx	       217	input.c	FUNCTION_7	CALL_6
0x40002c9	          0xc1fa12	                           sar edx, 0x12	       217	input.c	FUNCTION_7	CALL_6
0x40002cc	            0x89c8	                            mov eax, ecx	       217	input.c	FUNCTION_7	CALL_6
0x40002ce	          0xc1f81f	                           sar eax, 0x1f	       217	input.c	FUNCTION_7	CALL_6
0x40002d1	            0x29c2	                            sub edx, eax	       217	input.c	FUNCTION_7	CALL_6
0x40002d3	            0x89d0	                            mov eax, edx	       217	input.c	FUNCTION_7	CALL_6
0x40002d5	    0x69c040420f00	                  imul eax, eax, 0xf4240	       217	input.c	FUNCTION_7	CALL_6
0x40002db	            0x29c1	                            sub ecx, eax	       217	input.c	FUNCTION_7	CALL_6
0x40002dd	            0x89c8	                            mov eax, ecx	       217	input.c	FUNCTION_7	CALL_6
0x40002df	            0x4898	                                    cdqe	       217	input.c	FUNCTION_7	CALL_6
0x40002e1	    0x488985d8feff	            mov qword [rbp - 0x128], rax	       217	input.c	FUNCTION_7	CALL_6
0x40002e8	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       218	input.c	FUNCTION_7	CALL_7
0x40002ee	          0x8d7801	                      lea edi, [rax + 1]	       218	input.c	FUNCTION_7	CALL_7
0x40002f1	    0x488d8dd0feff	                  lea rcx, [rbp - 0x130]	       218	input.c	FUNCTION_7	CALL_7
0x40002f8	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       218	input.c	FUNCTION_7	CALL_7
0x40002ff	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       218	input.c	FUNCTION_7	CALL_7
0x4000306	          0x4989c8	                             mov r8, rcx	       218	input.c	FUNCTION_7	CALL_7
0x4000309	          0x4889d1	                            mov rcx, rdx	       218	input.c	FUNCTION_7	CALL_7
0x400030c	      0xba00000000	                              mov edx, 0	       218	input.c	FUNCTION_7	CALL_7
0x4000311	          0x4889c6	                            mov rsi, rax	       218	input.c	FUNCTION_7	CALL_7
0x4000314	      0xe800000000	                          call 0x4000319	       218	input.c	FUNCTION_7	CALL_7
0x4000319	          0x4189c4	                           mov r12d, eax	       218	input.c	FUNCTION_7	CALL_7
0x400031c	          0x4585e4	                         test r12d, r12d	       219	input.c	FUNCTION_7	IF_1
0x400031f	            0x7f0a	                            jg 0x400032b	       219	input.c	FUNCTION_7	IF_1
0x4000321	      0xb800000000	                              mov eax, 0	       220	input.c	FUNCTION_7	IF_1
0x4000326	      0xe9de010000	                           jmp 0x4000509	       220	input.c	FUNCTION_7	IF_1
0x400032b	    0x41bcffffffff	                    mov r12d, 0xffffffff	       223	input.c	FUNCTION_7
0x4000331	      0xe800000000	                          call 0x4000336	       225	input.c	FUNCTION_7
0x4000336	    0xc70000000000	                      mov dword [rax], 0	       225	input.c	FUNCTION_7
0x400033c	    0x488d95b4feff	                  lea rdx, [rbp - 0x14c]	       226	input.c	FUNCTION_7	CALL_8
0x4000343	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       226	input.c	FUNCTION_7	CALL_8
0x4000349	      0xbe1b540000	                         mov esi, 0x541b	       226	input.c	FUNCTION_7	CALL_8
0x400034e	            0x89c7	                            mov edi, eax	       226	input.c	FUNCTION_7	CALL_8
0x4000350	      0xb800000000	                              mov eax, 0	       226	input.c	FUNCTION_7	CALL_8
0x4000355	      0xe800000000	                          call 0x400035a	       226	input.c	FUNCTION_7	CALL_8
0x400035a	          0x4189c4	                           mov r12d, eax	       226	input.c	FUNCTION_7	CALL_8
0x400035d	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       227	input.c	FUNCTION_7	IF_2
0x4000361	            0x7516	                           jne 0x4000379	       227	input.c	FUNCTION_7	IF_2
0x4000363	      0xe800000000	                          call 0x4000368	       227	input.c	FUNCTION_7	IF_2
0x4000368	            0x8b00	                    mov eax, dword [rax]	       227	input.c	FUNCTION_7	IF_2
0x400036a	          0x83f805	                              cmp eax, 5	       227	input.c	FUNCTION_7	IF_2
0x400036d	            0x750a	                           jne 0x4000379	       227	input.c	FUNCTION_7	IF_2
0x400036f	      0xb8ffffffff	                     mov eax, 0xffffffff	       228	input.c	FUNCTION_7	IF_2
0x4000374	      0xe990010000	                           jmp 0x4000509	       228	input.c	FUNCTION_7	IF_2
0x4000379	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       232	input.c	FUNCTION_7	IF_3
0x400037d	     0xf85b4000000	                           jne 0x4000437	       232	input.c	FUNCTION_7	IF_3
0x4000383	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       234	input.c	FUNCTION_7	IF_3	CALL_9
0x4000389	      0xba00000000	                              mov edx, 0	       234	input.c	FUNCTION_7	IF_3	CALL_9
0x400038e	      0xbe03000000	                              mov esi, 3	       234	input.c	FUNCTION_7	IF_3	CALL_9
0x4000393	            0x89c7	                            mov edi, eax	       234	input.c	FUNCTION_7	IF_3	CALL_9
0x4000395	      0xb800000000	                              mov eax, 0	       234	input.c	FUNCTION_7	IF_3	CALL_9
0x400039a	      0xe800000000	                          call 0x400039f	       234	input.c	FUNCTION_7	IF_3	CALL_9
0x400039f	            0x89c3	                            mov ebx, eax	       234	input.c	FUNCTION_7	IF_3	CALL_9
0x40003a1	            0x89da	                            mov edx, ebx	       236	input.c	FUNCTION_7	IF_3	CALL_10
0x40003a3	          0x80ce08	                                or dh, 8	       236	input.c	FUNCTION_7	IF_3	CALL_10
0x40003a6	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       236	input.c	FUNCTION_7	IF_3	CALL_10
0x40003ac	      0xbe04000000	                              mov esi, 4	       236	input.c	FUNCTION_7	IF_3	CALL_10
0x40003b1	            0x89c7	                            mov edi, eax	       236	input.c	FUNCTION_7	IF_3	CALL_10
0x40003b3	      0xb800000000	                              mov eax, 0	       236	input.c	FUNCTION_7	IF_3	CALL_10
0x40003b8	      0xe800000000	                          call 0x40003bd	       236	input.c	FUNCTION_7	IF_3	CALL_10
0x40003bd	    0x488d8db3feff	                  lea rcx, [rbp - 0x14d]	       237	input.c	FUNCTION_7	IF_3	CALL_11
0x40003c4	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       237	input.c	FUNCTION_7	IF_3	CALL_11
0x40003ca	      0xba01000000	                              mov edx, 1	       237	input.c	FUNCTION_7	IF_3	CALL_11
0x40003cf	          0x4889ce	                            mov rsi, rcx	       237	input.c	FUNCTION_7	IF_3	CALL_11
0x40003d2	            0x89c7	                            mov edi, eax	       237	input.c	FUNCTION_7	IF_3	CALL_11
0x40003d4	      0xe800000000	                          call 0x40003d9	       237	input.c	FUNCTION_7	IF_3	CALL_11
0x40003d9	    0x8985b4feffff	            mov dword [rbp - 0x14c], eax	       237	input.c	FUNCTION_7	IF_3	CALL_11
0x40003df	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       239	input.c	FUNCTION_7	IF_3	CALL_12
0x40003e5	            0x89da	                            mov edx, ebx	       239	input.c	FUNCTION_7	IF_3	CALL_12
0x40003e7	      0xbe04000000	                              mov esi, 4	       239	input.c	FUNCTION_7	IF_3	CALL_12
0x40003ec	            0x89c7	                            mov edi, eax	       239	input.c	FUNCTION_7	IF_3	CALL_12
0x40003ee	      0xb800000000	                              mov eax, 0	       239	input.c	FUNCTION_7	IF_3	CALL_12
0x40003f3	      0xe800000000	                          call 0x40003f8	       239	input.c	FUNCTION_7	IF_3	CALL_12
0x40003f8	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	       240	input.c	FUNCTION_7	IF_3	IF_4
0x40003fe	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       240	input.c	FUNCTION_7	IF_3	IF_4
0x4000401	            0x7516	                           jne 0x4000419	       240	input.c	FUNCTION_7	IF_3	IF_4
0x4000403	      0xe800000000	                          call 0x4000408	       240	input.c	FUNCTION_7	IF_3	IF_4
0x4000408	            0x8b00	                    mov eax, dword [rax]	       240	input.c	FUNCTION_7	IF_3	IF_4
0x400040a	          0x83f80b	                            cmp eax, 0xb	       240	input.c	FUNCTION_7	IF_3	IF_4
0x400040d	            0x750a	                           jne 0x4000419	       240	input.c	FUNCTION_7	IF_3	IF_4
0x400040f	      0xb800000000	                              mov eax, 0	       241	input.c	FUNCTION_7	IF_3	IF_4
0x4000414	      0xe9f0000000	                           jmp 0x4000509	       241	input.c	FUNCTION_7	IF_3	IF_4
0x4000419	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	       242	input.c	FUNCTION_7	IF_3	IF_5
0x400041f	            0x85c0	                           test eax, eax	       242	input.c	FUNCTION_7	IF_3	IF_5
0x4000421	            0x7514	                           jne 0x4000437	       242	input.c	FUNCTION_7	IF_3	IF_5
0x4000423	      0xbfffffffff	                     mov edi, 0xffffffff	       244	input.c	FUNCTION_7	IF_3	IF_5	CALL_13
0x4000428	      0xe800000000	                          call 0x400042d	       244	input.c	FUNCTION_7	IF_3	IF_5	CALL_13
0x400042d	      0xb800000000	                              mov eax, 0	       245	input.c	FUNCTION_7	IF_3	IF_5
0x4000432	      0xe9d2000000	                           jmp 0x4000509	       245	input.c	FUNCTION_7	IF_3	IF_5
0x4000437	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	       259	input.c	FUNCTION_7	IF_6
0x400043d	            0x85c0	                           test eax, eax	       259	input.c	FUNCTION_7	IF_6
0x400043f	            0x7f0a	                            jg 0x400044b	       259	input.c	FUNCTION_7	IF_6
0x4000441	      0xb800000000	                              mov eax, 0	       260	input.c	FUNCTION_7	IF_6
0x4000446	      0xe9be000000	                           jmp 0x4000509	       260	input.c	FUNCTION_7	IF_6
0x400044b	      0xe80afcffff	                  call sym.ibuffer_space	       262	input.c	FUNCTION_7	CALL_15
0x4000450	            0x89c3	                            mov ebx, eax	       262	input.c	FUNCTION_7	CALL_15
0x4000452	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	       264	input.c	FUNCTION_7	IF_7
0x4000458	            0x39d8	                            cmp eax, ebx	       264	input.c	FUNCTION_7	IF_7
0x400045a	            0x7e06	                           jle 0x4000462	       264	input.c	FUNCTION_7	IF_7
0x400045c	    0x899db4feffff	            mov dword [rbp - 0x14c], ebx	       265	input.c	FUNCTION_7	IF_7
0x4000462	    0x8b0500000000	            mov eax, dword [0x04000468] 	       271	input.c	FUNCTION_7	IF_8
0x4000468	            0x39c3	                            cmp ebx, eax	       271	input.c	FUNCTION_7	IF_8
0x400046a	            0x7d0a	                           jge 0x4000476	       271	input.c	FUNCTION_7	IF_8
0x400046c	    0xc785b4feffff	              mov dword [rbp - 0x14c], 0	       272	input.c	FUNCTION_7	IF_8
0x4000476	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       274	input.c	FUNCTION_7	IF_9
0x400047a	            0x746a	                            je 0x40004e6	       274	input.c	FUNCTION_7	IF_9
0x400047c	            0xeb53	                           jmp 0x40004d1	       276	input.c	FUNCTION_7	IF_9	WHILE_1
0x400047e	    0x8b0500000000	            mov eax, dword [0x04000484] 	       278	input.c	FUNCTION_7	IF_9	WHILE_1	CALL_16
0x4000484	            0x85c0	                           test eax, eax	       278	input.c	FUNCTION_7	IF_9	WHILE_1	CALL_16
0x4000486	            0x740d	                            je 0x4000495	       278	input.c	FUNCTION_7	IF_9	WHILE_1	CALL_16
0x4000488	    0x8b0500000000	            mov eax, dword [0x0400048e] 	       278	input.c	FUNCTION_7	IF_9	WHILE_1	CALL_16
0x400048e	            0x89c7	                            mov edi, eax	       278	input.c	FUNCTION_7	IF_9	WHILE_1	CALL_16
0x4000490	      0xe800000000	                          call 0x4000495	       278	input.c	FUNCTION_7	IF_9	WHILE_1	CALL_16
0x4000495	    0x488b05000000	            mov rax, qword [0x0400049c] 	       279	input.c	FUNCTION_7	IF_9	WHILE_1
0x400049c	    0x488b15000000	            mov rdx, qword [0x040004a3] 	       279	input.c	FUNCTION_7	IF_9	WHILE_1
0x40004a3	          0x4889d7	                            mov rdi, rdx	       279	input.c	FUNCTION_7	IF_9	WHILE_1
0x40004a6	            0xffd0	                                call rax	       279	input.c	FUNCTION_7	IF_9	WHILE_1
0x40004a8	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	       279	input.c	FUNCTION_7	IF_9	WHILE_1
0x40004ae	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	       280	input.c	FUNCTION_7	IF_9	WHILE_1	IF_10	CALL_17
0x40004b4	            0x89c7	                            mov edi, eax	       280	input.c	FUNCTION_7	IF_9	WHILE_1	IF_10	CALL_17
0x40004b6	      0xe800000000	                          call 0x40004bb	       280	input.c	FUNCTION_7	IF_9	WHILE_1	IF_10	CALL_17
0x40004bb	            0x85c0	                           test eax, eax	       280	input.c	FUNCTION_7	IF_9	WHILE_1	IF_10	CALL_17
0x40004bd	            0x7444	                            je 0x4000503	       280	input.c	FUNCTION_7	IF_9	WHILE_1	IF_10	CALL_17
0x40004bf	    0x83bdccfeffff	           cmp dword [rbp - 0x134], 0xa 	       282	input.c	FUNCTION_7	IF_9	WHILE_1	IF_11
0x40004c6	            0x743c	                            je 0x4000504	       282	input.c	FUNCTION_7	IF_9	WHILE_1	IF_11
0x40004c8	    0x83bdccfeffff	           cmp dword [rbp - 0x134], 0xd 	       282	input.c	FUNCTION_7	IF_9	WHILE_1	IF_11
0x40004cf	            0x7433	                            je 0x4000504	       282	input.c	FUNCTION_7	IF_9	WHILE_1	IF_11
0x40004d1	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	       276	input.c	FUNCTION_7	IF_9	WHILE_1
0x40004d7	          0x8d50ff	                      lea edx, [rax - 1]	       276	input.c	FUNCTION_7	IF_9	WHILE_1
0x40004da	    0x8995b4feffff	            mov dword [rbp - 0x14c], edx	       276	input.c	FUNCTION_7	IF_9	WHILE_1
0x40004e0	            0x85c0	                           test eax, eax	       276	input.c	FUNCTION_7	IF_9	WHILE_1
0x40004e2	            0x759a	                           jne 0x400047e	       276	input.c	FUNCTION_7	IF_9	WHILE_1
0x40004e4	            0xeb1e	                           jmp 0x4000504	       276	input.c	FUNCTION_7	IF_9	WHILE_1
0x40004e6	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	       288	input.c	FUNCTION_7	ELSE_1	IF_12
0x40004ec	            0x85c0	                           test eax, eax	       288	input.c	FUNCTION_7	ELSE_1	IF_12
0x40004ee	            0x7414	                            je 0x4000504	       288	input.c	FUNCTION_7	ELSE_1	IF_12
0x40004f0	     0xfb685b3feff	           movzx eax, byte [rbp - 0x14d]	       289	input.c	FUNCTION_7	ELSE_1	CALL_18
0x40004f7	           0xfbec0	                           movsx eax, al	       289	input.c	FUNCTION_7	ELSE_1	CALL_18
0x40004fa	            0x89c7	                            mov edi, eax	       289	input.c	FUNCTION_7	ELSE_1	CALL_18
0x40004fc	      0xe800000000	                          call 0x4000501	       289	input.c	FUNCTION_7	ELSE_1	CALL_18
0x4000501	            0xeb01	                           jmp 0x4000504	       289	input.c	FUNCTION_7	ELSE_1	CALL_18
0x4000503	              0x90	                                     nop	       281	input.c	FUNCTION_7	IF_9	WHILE_1	IF_10
0x4000504	      0xb801000000	                              mov eax, 1	       292	input.c	FUNCTION_7
0x4000509	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       293	input.c	FUNCTION_7
0x400050d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       293	input.c	FUNCTION_7
0x4000516	            0x7405	                            je 0x400051d	       293	input.c	FUNCTION_7
0x4000518	      0xe800000000	                          call 0x400051d	       293	input.c	FUNCTION_7
0x400051d	    0x4881c4400100	                          add rsp, 0x140	       293	input.c	FUNCTION_7
0x4000524	              0x5b	                                 pop rbx	       293	input.c	FUNCTION_7
0x4000525	            0x415c	                                 pop r12	       293	input.c	FUNCTION_7
0x4000527	              0x5d	                                 pop rbp	       293	input.c	FUNCTION_7
0x4000528	              0xc3	                                     ret	       293	input.c	FUNCTION_7
