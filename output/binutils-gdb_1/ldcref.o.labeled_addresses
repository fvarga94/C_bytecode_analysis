check_nocrossref	SWITCH,0:IF,5:DO,0:ELSE,0:CALL,6:WHILE,0:functions,0:FOR,3	104
0x4000e2d	              0x55	                                push rbp	       553	ldcref.c	FUNCTION_10
0x4000e2e	          0x4889e5	                            mov rbp, rsp	       553	ldcref.c	FUNCTION_10
0x4000e31	              0x53	                                push rbx	       553	ldcref.c	FUNCTION_10
0x4000e32	        0x4883ec48	                           sub rsp, 0x48	       553	ldcref.c	FUNCTION_10
0x4000e36	        0x48897db8	             mov qword [rbp - 0x48], rdi	       553	ldcref.c	FUNCTION_10
0x4000e3a	        0x488975b0	             mov qword [rbp - 0x50], rsi	       553	ldcref.c	FUNCTION_10
0x4000e3e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000e42	        0x488b7008	                mov rsi, qword [rax + 8]	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000e46	    0x488b05000000	            mov rax, qword [0x04000e4d] 	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000e4d	    0x41b801000000	                              mov r8d, 1	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000e53	      0xb900000000	                              mov ecx, 0	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000e58	      0xba00000000	                              mov edx, 0	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000e5d	          0x4889c7	                            mov rdi, rax	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000e60	      0xe800000000	                          call 0x4000e65	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000e65	        0x488945d8	             mov qword [rbp - 0x28], rax	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000e69	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       563	ldcref.c	FUNCTION_10	IF_1
0x4000e6e	            0x752c	                           jne 0x4000e9c	       563	ldcref.c	FUNCTION_10	IF_1
0x4000e70	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000e74	        0x488b5808	                mov rbx, qword [rax + 8]	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000e78	      0xbf00000000	                              mov edi, 0	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000e7d	      0xe800000000	                          call 0x4000e82	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000e82	          0x4889de	                            mov rsi, rbx	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000e85	          0x4889c7	                            mov rdi, rax	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000e88	      0xb800000000	                              mov eax, 0	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000e8d	      0xe800000000	                          call 0x4000e92	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000e92	      0xb801000000	                              mov eax, 1	       567	ldcref.c	FUNCTION_10	IF_1
0x4000e97	      0xe912010000	                           jmp 0x4000fae	       567	ldcref.c	FUNCTION_10	IF_1
0x4000e9c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       570	ldcref.c	FUNCTION_10	IF_2
0x4000ea0	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       570	ldcref.c	FUNCTION_10	IF_2
0x4000ea4	            0x3c03	                               cmp al, 3	       570	ldcref.c	FUNCTION_10	IF_2
0x4000ea6	            0x7416	                            je 0x4000ebe	       570	ldcref.c	FUNCTION_10	IF_2
0x4000ea8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       571	ldcref.c	FUNCTION_10	IF_2
0x4000eac	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       571	ldcref.c	FUNCTION_10	IF_2
0x4000eb0	            0x3c04	                               cmp al, 4	       571	ldcref.c	FUNCTION_10	IF_2
0x4000eb2	            0x740a	                            je 0x4000ebe	       571	ldcref.c	FUNCTION_10	IF_2
0x4000eb4	      0xb801000000	                              mov eax, 1	       572	ldcref.c	FUNCTION_10	IF_2
0x4000eb9	      0xe9f0000000	                           jmp 0x4000fae	       572	ldcref.c	FUNCTION_10	IF_2
0x4000ebe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       574	ldcref.c	FUNCTION_10
0x4000ec2	        0x488b4028	            mov rax, qword [rax + 0x28] 	       574	ldcref.c	FUNCTION_10
0x4000ec6	        0x488b4068	            mov rax, qword [rax + 0x68] 	       574	ldcref.c	FUNCTION_10
0x4000eca	        0x488945e0	             mov qword [rbp - 0x20], rax	       574	ldcref.c	FUNCTION_10
0x4000ece	      0x48837de000	               cmp qword [rbp - 0x20], 0	       575	ldcref.c	FUNCTION_10	IF_3
0x4000ed3	            0x750a	                           jne 0x4000edf	       575	ldcref.c	FUNCTION_10	IF_3
0x4000ed5	      0xb801000000	                              mov eax, 1	       576	ldcref.c	FUNCTION_10	IF_3
0x4000eda	      0xe9cf000000	                           jmp 0x4000fae	       576	ldcref.c	FUNCTION_10	IF_3
0x4000edf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       577	ldcref.c	FUNCTION_10	CALL_4
0x4000ee3	          0x488b00	                    mov rax, qword [rax]	       577	ldcref.c	FUNCTION_10	CALL_4
0x4000ee6	        0x488945e8	             mov qword [rbp - 0x18], rax	       577	ldcref.c	FUNCTION_10	CALL_4
0x4000eea	    0x488b05000000	            mov rax, qword [0x04000ef1] 	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000ef1	        0x488945c0	             mov qword [rbp - 0x40], rax	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000ef5	      0xe9a4000000	                           jmp 0x4000f9e	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000efa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000efe	        0x488b4008	                mov rax, qword [rax + 8]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000f02	        0x488945c8	             mov qword [rbp - 0x38], rax	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000f06	            0xeb7d	                           jmp 0x4000f85	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000f08	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000f0c	        0x488b4008	                mov rax, qword [rax + 8]	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000f10	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000f14	          0x4889d6	                            mov rsi, rdx	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000f17	          0x4889c7	                            mov rdi, rax	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000f1a	      0xe800000000	                          call 0x4000f1f	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000f1f	            0x85c0	                           test eax, eax	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000f21	            0x754c	                           jne 0x4000f6f	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000f23	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000f27	        0x488b4020	            mov rax, qword [rax + 0x20] 	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000f2b	        0x488945d0	             mov qword [rbp - 0x30], rax	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000f2f	            0xeb37	                           jmp 0x4000f68	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000f31	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000f35	        0x488b4808	                mov rcx, qword [rax + 8]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000f39	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000f3d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000f41	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000f45	        0x488b4008	                mov rax, qword [rax + 8]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000f49	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000f4d	          0x4989f0	                             mov r8, rsi	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000f50	      0xbe01000000	                              mov esi, 1	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000f55	          0x4889c7	                            mov rdi, rax	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000f58	      0xe858000000	                     call sym.check_refs	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000f5d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000f61	          0x488b00	                    mov rax, qword [rax]	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000f64	        0x488945d0	             mov qword [rbp - 0x30], rax	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000f68	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000f6d	            0x75c2	                           jne 0x4000f31	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000f6f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x4000f73	          0x8b4010	            mov eax, dword [rax + 0x10] 	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x4000f76	            0x85c0	                           test eax, eax	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x4000f78	            0x7518	                           jne 0x4000f92	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x4000f7a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000f7e	          0x488b00	                    mov rax, qword [rax]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000f81	        0x488945c8	             mov qword [rbp - 0x38], rax	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000f85	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000f8a	     0xf8578ffffff	                           jne 0x4000f08	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000f90	            0xeb01	                           jmp 0x4000f93	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000f92	              0x90	                                     nop	       589	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x4000f93	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000f97	          0x488b00	                    mov rax, qword [rax]	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000f9a	        0x488945c0	             mov qword [rbp - 0x40], rax	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000f9e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000fa3	     0xf8551ffffff	                           jne 0x4000efa	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000fa9	      0xb801000000	                              mov eax, 1	       592	ldcref.c	FUNCTION_10
0x4000fae	        0x4883c448	                           add rsp, 0x48	       593	ldcref.c	FUNCTION_10
0x4000fb2	              0x5b	                                 pop rbx	       593	ldcref.c	FUNCTION_10
0x4000fb3	              0x5d	                                 pop rbp	       593	ldcref.c	FUNCTION_10
0x4000fb4	              0xc3	                                     ret	       593	ldcref.c	FUNCTION_10
check_refs	SWITCH,0:IF,1:DO,0:ELSE,0:CALL,5:WHILE,0:functions,0:FOR,0	47
0x4000fb5	              0x55	                                push rbp	       618	ldcref.c	FUNCTION_11
0x4000fb6	          0x4889e5	                            mov rbp, rsp	       618	ldcref.c	FUNCTION_11
0x4000fb9	        0x4883ec60	                           sub rsp, 0x60	       618	ldcref.c	FUNCTION_11
0x4000fbd	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       618	ldcref.c	FUNCTION_11
0x4000fc1	          0x8975c4	             mov dword [rbp - 0x3c], esi	       618	ldcref.c	FUNCTION_11
0x4000fc4	        0x488955b8	             mov qword [rbp - 0x48], rdx	       618	ldcref.c	FUNCTION_11
0x4000fc8	        0x48894db0	             mov qword [rbp - 0x50], rcx	       618	ldcref.c	FUNCTION_11
0x4000fcc	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       618	ldcref.c	FUNCTION_11
0x4000fd0	    0x64488b042528	                mov rax, qword fs:[0x28]	       618	ldcref.c	FUNCTION_11
0x4000fd9	        0x488945f8	                mov qword [rbp - 8], rax	       618	ldcref.c	FUNCTION_11
0x4000fdd	            0x31c0	                            xor eax, eax	       618	ldcref.c	FUNCTION_11
0x4000fdf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000fe3	          0x4889c7	                            mov rdi, rax	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000fe6	      0xe800000000	                          call 0x4000feb	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000feb	            0x85c0	                           test eax, eax	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000fed	            0x7521	                           jne 0x4001010	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000fef	      0xbf00000000	                              mov edi, 0	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000ff4	      0xe800000000	                          call 0x4000ff9	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000ff9	          0x4889c2	                            mov rdx, rax	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000ffc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       628	ldcref.c	FUNCTION_11	CALL_3
0x4001000	          0x4889c6	                            mov rsi, rax	       628	ldcref.c	FUNCTION_11	CALL_3
0x4001003	          0x4889d7	                            mov rdi, rdx	       628	ldcref.c	FUNCTION_11	CALL_3
0x4001006	      0xb800000000	                              mov eax, 0	       628	ldcref.c	FUNCTION_11	CALL_3
0x400100b	      0xe800000000	                          call 0x4001010	       628	ldcref.c	FUNCTION_11	CALL_3
0x4001010	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       630	ldcref.c	FUNCTION_11
0x4001014	        0x488945d0	             mov qword [rbp - 0x30], rax	       630	ldcref.c	FUNCTION_11
0x4001018	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       631	ldcref.c	FUNCTION_11
0x400101b	          0x8945f0	             mov dword [rbp - 0x10], eax	       631	ldcref.c	FUNCTION_11
0x400101e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       632	ldcref.c	FUNCTION_11
0x4001022	        0x488945d8	             mov qword [rbp - 0x28], rax	       632	ldcref.c	FUNCTION_11
0x4001026	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       633	ldcref.c	FUNCTION_11
0x400102a	        0x488945e0	             mov qword [rbp - 0x20], rax	       633	ldcref.c	FUNCTION_11
0x400102e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       634	ldcref.c	FUNCTION_11	CALL_4
0x4001032	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       634	ldcref.c	FUNCTION_11	CALL_4
0x4001039	        0x488945e8	             mov qword [rbp - 0x18], rax	       634	ldcref.c	FUNCTION_11	CALL_4
0x400103d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       635	ldcref.c	FUNCTION_11	CALL_5
0x4001041	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       635	ldcref.c	FUNCTION_11	CALL_5
0x4001045	      0xbe00000000	                              mov esi, 0	       635	ldcref.c	FUNCTION_11	CALL_5
0x400104a	          0x4889c7	                            mov rdi, rax	       635	ldcref.c	FUNCTION_11	CALL_5
0x400104d	      0xe800000000	                          call 0x4001052	       635	ldcref.c	FUNCTION_11	CALL_5
0x4001052	              0x90	                                     nop	       636	ldcref.c	FUNCTION_11
0x4001053	        0x488b45f8	                mov rax, qword [rbp - 8]	       636	ldcref.c	FUNCTION_11
0x4001057	    0x644833042528	                xor rax, qword fs:[0x28]	       636	ldcref.c	FUNCTION_11
0x4001060	            0x7405	                            je 0x4001067	       636	ldcref.c	FUNCTION_11
0x4001062	      0xe800000000	                          call 0x4001067	       636	ldcref.c	FUNCTION_11
0x4001067	              0xc9	                                   leave	       636	ldcref.c	FUNCTION_11
0x4001068	              0xc3	                                     ret	       636	ldcref.c	FUNCTION_11
cref_sort_array	SWITCH,0:IF,1:DO,0:ELSE,1:CALL,2:WHILE,0:functions,0:FOR,0	33
0x400073a	              0x55	                                push rbp	       348	ldcref.c	FUNCTION_5
0x400073b	          0x4889e5	                            mov rbp, rsp	       348	ldcref.c	FUNCTION_5
0x400073e	        0x4883ec20	                           sub rsp, 0x20	       348	ldcref.c	FUNCTION_5
0x4000742	        0x48897de8	             mov qword [rbp - 0x18], rdi	       348	ldcref.c	FUNCTION_5
0x4000746	        0x488975e0	             mov qword [rbp - 0x20], rsi	       348	ldcref.c	FUNCTION_5
0x400074a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       349	ldcref.c	FUNCTION_5
0x400074e	        0x488945f0	             mov qword [rbp - 0x10], rax	       349	ldcref.c	FUNCTION_5
0x4000752	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       351	ldcref.c	FUNCTION_5
0x4000756	        0x488945f8	                mov qword [rbp - 8], rax	       351	ldcref.c	FUNCTION_5
0x400075a	    0x8b0500000000	            mov eax, dword [0x04000760] 	       354	ldcref.c	FUNCTION_5	IF_1
0x4000760	            0x85c0	                           test eax, eax	       354	ldcref.c	FUNCTION_5	IF_1
0x4000762	            0x7423	                            je 0x4000787	       354	ldcref.c	FUNCTION_5	IF_1
0x4000764	        0x488b45f8	                mov rax, qword [rbp - 8]	       355	ldcref.c	FUNCTION_5	CALL_1
0x4000768	          0x488b00	                    mov rax, qword [rax]	       355	ldcref.c	FUNCTION_5	CALL_1
0x400076b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       355	ldcref.c	FUNCTION_5	CALL_1
0x400076f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       355	ldcref.c	FUNCTION_5	CALL_1
0x4000773	          0x488b00	                    mov rax, qword [rax]	       355	ldcref.c	FUNCTION_5	CALL_1
0x4000776	        0x488b4018	            mov rax, qword [rax + 0x18] 	       355	ldcref.c	FUNCTION_5	CALL_1
0x400077a	          0x4889d6	                            mov rsi, rdx	       355	ldcref.c	FUNCTION_5	CALL_1
0x400077d	          0x4889c7	                            mov rdi, rax	       355	ldcref.c	FUNCTION_5	CALL_1
0x4000780	      0xe800000000	                          call 0x4000785	       355	ldcref.c	FUNCTION_5	CALL_1
0x4000785	            0xeb21	                           jmp 0x40007a8	       355	ldcref.c	FUNCTION_5	CALL_1
0x4000787	        0x488b45f8	                mov rax, qword [rbp - 8]	       357	ldcref.c	FUNCTION_5	CALL_2
0x400078b	          0x488b00	                    mov rax, qword [rax]	       357	ldcref.c	FUNCTION_5	CALL_2
0x400078e	        0x488b5008	                mov rdx, qword [rax + 8]	       357	ldcref.c	FUNCTION_5	CALL_2
0x4000792	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       357	ldcref.c	FUNCTION_5	CALL_2
0x4000796	          0x488b00	                    mov rax, qword [rax]	       357	ldcref.c	FUNCTION_5	CALL_2
0x4000799	        0x488b4008	                mov rax, qword [rax + 8]	       357	ldcref.c	FUNCTION_5	CALL_2
0x400079d	          0x4889d6	                            mov rsi, rdx	       357	ldcref.c	FUNCTION_5	CALL_2
0x40007a0	          0x4889c7	                            mov rdi, rax	       357	ldcref.c	FUNCTION_5	CALL_2
0x40007a3	      0xe800000000	                          call 0x40007a8	       357	ldcref.c	FUNCTION_5	CALL_2
0x40007a8	              0xc9	                                   leave	       358	ldcref.c	FUNCTION_5
0x40007a9	              0xc3	                                     ret	       358	ldcref.c	FUNCTION_5
add_cref	SWITCH,0:IF,8:DO,0:ELSE,2:CALL,10:WHILE,0:functions,0:FOR,1	110
0x40000d8	              0x55	                                push rbp	       162	ldcref.c	FUNCTION_2
0x40000d9	          0x4889e5	                            mov rbp, rsp	       162	ldcref.c	FUNCTION_2
0x40000dc	        0x4883ec30	                           sub rsp, 0x30	       162	ldcref.c	FUNCTION_2
0x40000e0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       162	ldcref.c	FUNCTION_2
0x40000e4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       162	ldcref.c	FUNCTION_2
0x40000e8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       162	ldcref.c	FUNCTION_2
0x40000ec	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       162	ldcref.c	FUNCTION_2
0x40000f0	    0x8b0500000000	            mov eax, dword [0x040000f6] 	       166	ldcref.c	FUNCTION_2	IF_1
0x40000f6	            0x85c0	                           test eax, eax	       166	ldcref.c	FUNCTION_2	IF_1
0x40000f8	            0x7539	                           jne 0x4000133	       166	ldcref.c	FUNCTION_2	IF_1
0x40000fa	      0xba28000000	                           mov edx, 0x28	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x40000ff	      0xbe00000000	                              mov esi, 0	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000104	      0xbf00000000	                              mov edi, 0	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000109	      0xe800000000	                          call 0x400010e	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x400010e	            0x85c0	                           test eax, eax	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000110	            0x7517	                           jne 0x4000129	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000112	      0xbf00000000	                              mov edi, 0	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000117	      0xe800000000	                          call 0x400011c	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x400011c	          0x4889c7	                            mov rdi, rax	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x400011f	      0xb800000000	                              mov eax, 0	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000124	      0xe800000000	                          call 0x4000129	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000129	    0xc70500000000	               mov dword [0x04000133], 1	       171	ldcref.c	FUNCTION_2	IF_1
0x4000133	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       174	ldcref.c	FUNCTION_2
0x4000137	      0xb900000000	                              mov ecx, 0	       174	ldcref.c	FUNCTION_2
0x400013c	      0xba01000000	                              mov edx, 1	       174	ldcref.c	FUNCTION_2
0x4000141	          0x4889c6	                            mov rsi, rax	       174	ldcref.c	FUNCTION_2
0x4000144	      0xbf00000000	                              mov edi, 0	       174	ldcref.c	FUNCTION_2
0x4000149	      0xe800000000	                          call 0x400014e	       174	ldcref.c	FUNCTION_2
0x400014e	        0x488945f8	                mov qword [rbp - 8], rax	       174	ldcref.c	FUNCTION_2
0x4000152	      0x48837df800	                  cmp qword [rbp - 8], 0	       175	ldcref.c	FUNCTION_2	IF_3
0x4000157	            0x7517	                           jne 0x4000170	       175	ldcref.c	FUNCTION_2	IF_3
0x4000159	      0xbf00000000	                              mov edi, 0	       176	ldcref.c	FUNCTION_2	CALL_5
0x400015e	      0xe800000000	                          call 0x4000163	       176	ldcref.c	FUNCTION_2	CALL_5
0x4000163	          0x4889c7	                            mov rdi, rax	       176	ldcref.c	FUNCTION_2	CALL_5
0x4000166	      0xb800000000	                              mov eax, 0	       176	ldcref.c	FUNCTION_2	CALL_5
0x400016b	      0xe800000000	                          call 0x4000170	       176	ldcref.c	FUNCTION_2	CALL_5
0x4000170	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	ldcref.c	FUNCTION_2	FOR_1
0x4000174	        0x488b4020	            mov rax, qword [rax + 0x20] 	       178	ldcref.c	FUNCTION_2	FOR_1
0x4000178	        0x488945f0	             mov qword [rbp - 0x10], rax	       178	ldcref.c	FUNCTION_2	FOR_1
0x400017c	            0xeb19	                           jmp 0x4000197	       178	ldcref.c	FUNCTION_2	FOR_1
0x400017e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x4000182	        0x488b4008	                mov rax, qword [rax + 8]	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x4000186	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x400018a	            0x7414	                            je 0x40001a0	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x400018c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       178	ldcref.c	FUNCTION_2	FOR_1
0x4000190	          0x488b00	                    mov rax, qword [rax]	       178	ldcref.c	FUNCTION_2	FOR_1
0x4000193	        0x488945f0	             mov qword [rbp - 0x10], rax	       178	ldcref.c	FUNCTION_2	FOR_1
0x4000197	      0x48837df000	               cmp qword [rbp - 0x10], 0	       178	ldcref.c	FUNCTION_2	FOR_1
0x400019c	            0x75e0	                           jne 0x400017e	       178	ldcref.c	FUNCTION_2	FOR_1
0x400019e	            0xeb01	                           jmp 0x40001a1	       178	ldcref.c	FUNCTION_2	FOR_1
0x40001a0	              0x90	                                     nop	       180	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x40001a1	      0x48837df000	               cmp qword [rbp - 0x10], 0	       182	ldcref.c	FUNCTION_2	IF_5
0x40001a6	     0xf8582000000	                           jne 0x400022e	       182	ldcref.c	FUNCTION_2	IF_5
0x40001ac	      0xbe18000000	                           mov esi, 0x18	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x40001b1	      0xbf00000000	                              mov edi, 0	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x40001b6	      0xe800000000	                          call 0x40001bb	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x40001bb	        0x488945f0	             mov qword [rbp - 0x10], rax	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x40001bf	      0x48837df000	               cmp qword [rbp - 0x10], 0	       185	ldcref.c	FUNCTION_2	IF_5	IF_6
0x40001c4	            0x7517	                           jne 0x40001dd	       185	ldcref.c	FUNCTION_2	IF_5	IF_6
0x40001c6	      0xbf00000000	                              mov edi, 0	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x40001cb	      0xe800000000	                          call 0x40001d0	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x40001d0	          0x4889c7	                            mov rdi, rax	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x40001d3	      0xb800000000	                              mov eax, 0	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x40001d8	      0xe800000000	                          call 0x40001dd	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x40001dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       187	ldcref.c	FUNCTION_2	IF_5
0x40001e1	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       187	ldcref.c	FUNCTION_2	IF_5
0x40001e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       187	ldcref.c	FUNCTION_2	IF_5
0x40001e9	          0x488910	                    mov qword [rax], rdx	       187	ldcref.c	FUNCTION_2	IF_5
0x40001ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       188	ldcref.c	FUNCTION_2	IF_5
0x40001f0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       188	ldcref.c	FUNCTION_2	IF_5
0x40001f4	        0x48895020	             mov qword [rax + 0x20], rdx	       188	ldcref.c	FUNCTION_2	IF_5
0x40001f8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       189	ldcref.c	FUNCTION_2	IF_5
0x40001fc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       189	ldcref.c	FUNCTION_2	IF_5
0x4000200	        0x48895008	                mov qword [rax + 8], rdx	       189	ldcref.c	FUNCTION_2	IF_5
0x4000204	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       190	ldcref.c	FUNCTION_2	IF_5
0x4000208	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       190	ldcref.c	FUNCTION_2	IF_5
0x400020c	          0x83e2fe	                     and edx, 0xfffffffe	       190	ldcref.c	FUNCTION_2	IF_5
0x400020f	          0x885010	               mov byte [rax + 0x10], dl	       190	ldcref.c	FUNCTION_2	IF_5
0x4000212	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       191	ldcref.c	FUNCTION_2	IF_5
0x4000216	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       191	ldcref.c	FUNCTION_2	IF_5
0x400021a	          0x83e2fd	                     and edx, 0xfffffffd	       191	ldcref.c	FUNCTION_2	IF_5
0x400021d	          0x885010	               mov byte [rax + 0x10], dl	       191	ldcref.c	FUNCTION_2	IF_5
0x4000220	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       192	ldcref.c	FUNCTION_2	IF_5
0x4000224	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       192	ldcref.c	FUNCTION_2	IF_5
0x4000228	          0x83e2fb	                     and edx, 0xfffffffb	       192	ldcref.c	FUNCTION_2	IF_5
0x400022b	          0x885010	               mov byte [rax + 0x10], dl	       192	ldcref.c	FUNCTION_2	IF_5
0x400022e	    0x48817dd80000	               cmp qword [rbp - 0x28], 0	       195	ldcref.c	FUNCTION_2	IF_7	CALL_9
0x4000236	            0x7510	                           jne 0x4000248	       195	ldcref.c	FUNCTION_2	IF_7	CALL_9
0x4000238	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	ldcref.c	FUNCTION_2	IF_7
0x400023c	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       196	ldcref.c	FUNCTION_2	IF_7
0x4000240	          0x83ca04	                               or edx, 4	       196	ldcref.c	FUNCTION_2	IF_7
0x4000243	          0x885010	               mov byte [rax + 0x10], dl	       196	ldcref.c	FUNCTION_2	IF_7
0x4000246	            0xeb2e	                           jmp 0x4000276	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000248	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       197	ldcref.c	FUNCTION_2	ELSE_1	IF_8	CALL_10
0x400024c	          0x8b4020	            mov eax, dword [rax + 0x20] 	       197	ldcref.c	FUNCTION_2	ELSE_1	IF_8	CALL_10
0x400024f	      0x2500100000	                         and eax, 0x1000	       197	ldcref.c	FUNCTION_2	ELSE_1	IF_8	CALL_10
0x4000254	            0x85c0	                           test eax, eax	       197	ldcref.c	FUNCTION_2	ELSE_1	IF_8	CALL_10
0x4000256	            0x7410	                            je 0x4000268	       197	ldcref.c	FUNCTION_2	ELSE_1	IF_8	CALL_10
0x4000258	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	ldcref.c	FUNCTION_2	ELSE_1	IF_8
0x400025c	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       198	ldcref.c	FUNCTION_2	ELSE_1	IF_8
0x4000260	          0x83ca02	                               or edx, 2	       198	ldcref.c	FUNCTION_2	ELSE_1	IF_8
0x4000263	          0x885010	               mov byte [rax + 0x10], dl	       198	ldcref.c	FUNCTION_2	ELSE_1	IF_8
0x4000266	            0xeb0e	                           jmp 0x4000276	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000268	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       200	ldcref.c	FUNCTION_2	ELSE_2
0x400026c	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       200	ldcref.c	FUNCTION_2	ELSE_2
0x4000270	          0x83ca01	                               or edx, 1	       200	ldcref.c	FUNCTION_2	ELSE_2
0x4000273	          0x885010	               mov byte [rax + 0x10], dl	       200	ldcref.c	FUNCTION_2	ELSE_2
0x4000276	              0x90	                                     nop	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000277	              0xc9	                                   leave	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000278	              0xc3	                                     ret	       201	ldcref.c	FUNCTION_2	ELSE_2
cref_fill_array	SWITCH,0:IF,1:DO,0:ELSE,0:CALL,2:WHILE,0:functions,0:FOR,0	44
0x4000698	              0x55	                                push rbp	       328	ldcref.c	FUNCTION_4
0x4000699	          0x4889e5	                            mov rbp, rsp	       328	ldcref.c	FUNCTION_4
0x400069c	        0x4883ec20	                           sub rsp, 0x20	       328	ldcref.c	FUNCTION_4
0x40006a0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       328	ldcref.c	FUNCTION_4
0x40006a4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       328	ldcref.c	FUNCTION_4
0x40006a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       329	ldcref.c	FUNCTION_4
0x40006ac	        0x488945f8	                mov qword [rbp - 8], rax	       329	ldcref.c	FUNCTION_4
0x40006b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       331	ldcref.c	FUNCTION_4	CALL_1
0x40006b4	        0x488b4018	            mov rax, qword [rax + 0x18] 	       331	ldcref.c	FUNCTION_4	CALL_1
0x40006b8	          0x4885c0	                           test rax, rax	       331	ldcref.c	FUNCTION_4	CALL_1
0x40006bb	            0x740f	                            je 0x40006cc	       331	ldcref.c	FUNCTION_4	CALL_1
0x40006bd	      0xbe4b010000	                          mov esi, 0x14b	       331	ldcref.c	FUNCTION_4	CALL_1
0x40006c2	      0xbf00000000	                              mov edi, 0	       331	ldcref.c	FUNCTION_4	CALL_1
0x40006c7	      0xe800000000	                          call 0x40006cc	       331	ldcref.c	FUNCTION_4	CALL_1
0x40006cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       332	ldcref.c	FUNCTION_4	CALL_2
0x40006d0	        0x488b4808	                mov rcx, qword [rax + 8]	       332	ldcref.c	FUNCTION_4	CALL_2
0x40006d4	    0x488b05000000	            mov rax, qword [0x040006db] 	       332	ldcref.c	FUNCTION_4	CALL_2
0x40006db	      0xba03000000	                              mov edx, 3	       332	ldcref.c	FUNCTION_4	CALL_2
0x40006e0	          0x4889ce	                            mov rsi, rcx	       332	ldcref.c	FUNCTION_4	CALL_2
0x40006e3	          0x4889c7	                            mov rdi, rax	       332	ldcref.c	FUNCTION_4	CALL_2
0x40006e6	      0xe800000000	                          call 0x40006eb	       332	ldcref.c	FUNCTION_4	CALL_2
0x40006eb	          0x4889c2	                            mov rdx, rax	       332	ldcref.c	FUNCTION_4	CALL_2
0x40006ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       332	ldcref.c	FUNCTION_4	CALL_2
0x40006f2	        0x48895018	             mov qword [rax + 0x18], rdx	       332	ldcref.c	FUNCTION_4	CALL_2
0x40006f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       334	ldcref.c	FUNCTION_4	IF_1
0x40006fa	        0x488b4018	            mov rax, qword [rax + 0x18] 	       334	ldcref.c	FUNCTION_4	IF_1
0x40006fe	          0x4885c0	                           test rax, rax	       334	ldcref.c	FUNCTION_4	IF_1
0x4000701	            0x7510	                           jne 0x4000713	       334	ldcref.c	FUNCTION_4	IF_1
0x4000703	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	ldcref.c	FUNCTION_4	IF_1
0x4000707	        0x488b5008	                mov rdx, qword [rax + 8]	       335	ldcref.c	FUNCTION_4	IF_1
0x400070b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	ldcref.c	FUNCTION_4	IF_1
0x400070f	        0x48895018	             mov qword [rax + 0x18], rdx	       335	ldcref.c	FUNCTION_4	IF_1
0x4000713	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	ldcref.c	FUNCTION_4
0x4000717	          0x488b00	                    mov rax, qword [rax]	       337	ldcref.c	FUNCTION_4
0x400071a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       337	ldcref.c	FUNCTION_4
0x400071e	          0x488910	                    mov qword [rax], rdx	       337	ldcref.c	FUNCTION_4
0x4000721	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	ldcref.c	FUNCTION_4
0x4000725	          0x488b00	                    mov rax, qword [rax]	       339	ldcref.c	FUNCTION_4
0x4000728	        0x488d5008	                      lea rdx, [rax + 8]	       339	ldcref.c	FUNCTION_4
0x400072c	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	ldcref.c	FUNCTION_4
0x4000730	          0x488910	                    mov qword [rax], rdx	       339	ldcref.c	FUNCTION_4
0x4000733	      0xb801000000	                              mov eax, 1	       341	ldcref.c	FUNCTION_4
0x4000738	              0xc9	                                   leave	       342	ldcref.c	FUNCTION_4
0x4000739	              0xc3	                                     ret	       342	ldcref.c	FUNCTION_4
check_local_sym_xref	SWITCH,0:IF,7:DO,0:ELSE,0:CALL,6:WHILE,0:functions,0:FOR,3	109
0x4000c9d	              0x55	                                push rbp	       508	ldcref.c	FUNCTION_9
0x4000c9e	          0x4889e5	                            mov rbp, rsp	       508	ldcref.c	FUNCTION_9
0x4000ca1	        0x4883ec50	                           sub rsp, 0x50	       508	ldcref.c	FUNCTION_9
0x4000ca5	        0x48897db8	             mov qword [rbp - 0x48], rdi	       508	ldcref.c	FUNCTION_9
0x4000ca9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       512	ldcref.c	FUNCTION_9
0x4000cad	        0x488b4020	            mov rax, qword [rax + 0x20] 	       512	ldcref.c	FUNCTION_9
0x4000cb1	        0x488945e8	             mov qword [rbp - 0x18], rax	       512	ldcref.c	FUNCTION_9
0x4000cb5	      0x48837de800	               cmp qword [rbp - 0x18], 0	       513	ldcref.c	FUNCTION_9	IF_1
0x4000cba	     0xf846a010000	                            je 0x4000e2a	       513	ldcref.c	FUNCTION_9	IF_1
0x4000cc0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x4000cc4	          0x4889c7	                            mov rdi, rax	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x4000cc7	      0xe800000000	                          call 0x4000ccc	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x4000ccc	            0x85c0	                           test eax, eax	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x4000cce	            0x7521	                           jne 0x4000cf1	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x4000cd0	      0xbf00000000	                              mov edi, 0	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000cd5	      0xe800000000	                          call 0x4000cda	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000cda	          0x4889c2	                            mov rdx, rax	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000cdd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000ce1	          0x4889c6	                            mov rsi, rax	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000ce4	          0x4889d7	                            mov rdi, rdx	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000ce7	      0xb800000000	                              mov eax, 0	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000cec	      0xe800000000	                          call 0x4000cf1	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000cf1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000cf5	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000cfc	        0x488945c8	             mov qword [rbp - 0x38], rax	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000d00	      0xe913010000	                           jmp 0x4000e18	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000d05	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       521	ldcref.c	FUNCTION_9	FOR_1
0x4000d09	          0x488b00	                    mov rax, qword [rax]	       521	ldcref.c	FUNCTION_9	FOR_1
0x4000d0c	        0x488945f0	             mov qword [rbp - 0x10], rax	       521	ldcref.c	FUNCTION_9	FOR_1
0x4000d10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x4000d14	          0x8b4018	            mov eax, dword [rax + 0x18] 	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x4000d17	      0x2502700000	                         and eax, 0x7002	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x4000d1c	            0x85c0	                           test eax, eax	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x4000d1e	     0xf85ee000000	                           jne 0x4000e12	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x4000d24	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       524	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d28	          0x8b4018	            mov eax, dword [rax + 0x18] 	       524	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d2b	      0x2501010000	                          and eax, 0x101	       524	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d30	            0x85c0	                           test eax, eax	       524	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d32	     0xf84db000000	                            je 0x4000e13	       524	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d38	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d3c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d40	        0x488b4068	            mov rax, qword [rax + 0x68] 	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d44	          0x4885c0	                           test rax, rax	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d47	     0xf84c6000000	                            je 0x4000e13	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       531	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d51	        0x488b4020	            mov rax, qword [rax + 0x20] 	       531	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d55	        0x488b4068	            mov rax, qword [rax + 0x68] 	       531	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d59	          0x488b00	                    mov rax, qword [rax]	       531	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d5c	        0x488945f8	                mov qword [rbp - 8], rax	       531	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d60	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       532	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000d68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       533	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000d6c	          0x8b4018	            mov eax, dword [rax + 0x18] 	       533	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000d6f	      0x2500010000	                          and eax, 0x100	       533	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000d74	            0x85c0	                           test eax, eax	       533	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000d76	            0x750c	                           jne 0x4000d84	       533	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000d78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       534	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000d7c	        0x488b4008	                mov rax, qword [rax + 8]	       534	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000d80	        0x488945d0	             mov qword [rbp - 0x30], rax	       534	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000d84	    0x488b05000000	            mov rax, qword [0x04000d8b] 	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000d8b	        0x488945d8	             mov qword [rbp - 0x28], rax	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000d8f	            0xeb78	                           jmp 0x4000e09	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000d91	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000d95	        0x488b4008	                mov rax, qword [rax + 8]	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000d99	        0x488945e0	             mov qword [rbp - 0x20], rax	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000d9d	            0xeb55	                           jmp 0x4000df4	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000d9f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000da3	        0x488b4008	                mov rax, qword [rax + 8]	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000da7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000dab	          0x4889d6	                            mov rsi, rdx	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000dae	          0x4889c7	                            mov rdi, rax	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000db1	      0xe800000000	                          call 0x4000db6	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000db6	            0x85c0	                           test eax, eax	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000db8	            0x7524	                           jne 0x4000dde	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000dba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000dbe	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000dc2	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000dc6	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000dca	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000dce	          0x4989f0	                             mov r8, rsi	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000dd1	      0xbe00000000	                              mov esi, 0	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000dd6	          0x4889c7	                            mov rdi, rax	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000dd9	      0xe8d7010000	                     call sym.check_refs	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000dde	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000de2	          0x8b4010	            mov eax, dword [rax + 0x10] 	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000de5	            0x85c0	                           test eax, eax	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000de7	            0x7514	                           jne 0x4000dfd	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000de9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000ded	          0x488b00	                    mov rax, qword [rax]	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000df0	        0x488945e0	             mov qword [rbp - 0x20], rax	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000df4	      0x48837de000	               cmp qword [rbp - 0x20], 0	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000df9	            0x75a4	                           jne 0x4000d9f	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000dfb	            0xeb01	                           jmp 0x4000dfe	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000dfd	              0x90	                                     nop	       543	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000dfe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000e02	          0x488b00	                    mov rax, qword [rax]	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000e05	        0x488945d8	             mov qword [rbp - 0x28], rax	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000e09	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000e0e	            0x7581	                           jne 0x4000d91	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000e10	            0xeb01	                           jmp 0x4000e13	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000e12	              0x90	                                     nop	       523	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x4000e13	      0x488345c808	               add qword [rbp - 0x38], 8	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000e18	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000e1c	          0x488b00	                    mov rax, qword [rax]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000e1f	          0x4885c0	                           test rax, rax	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000e22	     0xf85ddfeffff	                           jne 0x4000d05	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000e28	            0xeb01	                           jmp 0x4000e2b	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000e2a	              0x90	                                     nop	       514	ldcref.c	FUNCTION_9	IF_1
0x4000e2b	              0xc9	                                   leave	       547	ldcref.c	FUNCTION_9
0x4000e2c	              0xc3	                                     ret	       547	ldcref.c	FUNCTION_9
check_reloc_refs	SWITCH,0:IF,7:DO,0:ELSE,0:CALL,22:WHILE,0:functions,0:FOR,2	223
0x4001069	              0x55	                                push rbp	       646	ldcref.c	FUNCTION_12
0x400106a	          0x4889e5	                            mov rbp, rsp	       646	ldcref.c	FUNCTION_12
0x400106d	            0x4154	                                push r12	       646	ldcref.c	FUNCTION_12
0x400106f	              0x53	                                push rbx	       646	ldcref.c	FUNCTION_12
0x4001070	    0x4881ec900000	                           sub rsp, 0x90	       646	ldcref.c	FUNCTION_12
0x4001077	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       646	ldcref.c	FUNCTION_12
0x400107e	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       646	ldcref.c	FUNCTION_12
0x4001085	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       646	ldcref.c	FUNCTION_12
0x400108c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       647	ldcref.c	FUNCTION_12
0x4001093	        0x48894598	             mov qword [rbp - 0x68], rax	       647	ldcref.c	FUNCTION_12
0x4001097	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       660	ldcref.c	FUNCTION_12
0x400109e	        0x488b4068	            mov rax, qword [rax + 0x68] 	       660	ldcref.c	FUNCTION_12
0x40010a2	        0x488945a0	             mov qword [rbp - 0x60], rax	       660	ldcref.c	FUNCTION_12
0x40010a6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       661	ldcref.c	FUNCTION_12	CALL_1
0x40010aa	          0x488b00	                    mov rax, qword [rax]	       661	ldcref.c	FUNCTION_12	CALL_1
0x40010ad	        0x488945a8	             mov qword [rbp - 0x58], rax	       661	ldcref.c	FUNCTION_12	CALL_1
0x40010b1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       663	ldcref.c	FUNCTION_12
0x40010b5	        0x488b4008	                mov rax, qword [rax + 8]	       663	ldcref.c	FUNCTION_12
0x40010b9	        0x488b4068	            mov rax, qword [rax + 0x68] 	       663	ldcref.c	FUNCTION_12
0x40010bd	        0x488945b0	             mov qword [rbp - 0x50], rax	       663	ldcref.c	FUNCTION_12
0x40010c1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       664	ldcref.c	FUNCTION_12	CALL_2
0x40010c5	          0x488b00	                    mov rax, qword [rax]	       664	ldcref.c	FUNCTION_12	CALL_2
0x40010c8	        0x488945b8	             mov qword [rbp - 0x48], rax	       664	ldcref.c	FUNCTION_12	CALL_2
0x40010cc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x40010d0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x40010d4	          0x4889d6	                            mov rsi, rdx	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x40010d7	          0x4889c7	                            mov rdi, rax	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x40010da	      0xe800000000	                          call 0x40010df	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x40010df	            0x85c0	                           test eax, eax	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x40010e1	     0xf84c0020000	                            je 0x40013a7	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x40010e7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       670	ldcref.c	FUNCTION_12	FOR_1
0x40010eb	        0x488b4010	            mov rax, qword [rax + 0x10] 	       670	ldcref.c	FUNCTION_12	FOR_1
0x40010ef	        0x488b4008	                mov rax, qword [rax + 8]	       670	ldcref.c	FUNCTION_12	FOR_1
0x40010f3	        0x48894588	             mov qword [rbp - 0x78], rax	       670	ldcref.c	FUNCTION_12	FOR_1
0x40010f7	            0xeb26	                           jmp 0x400111f	       670	ldcref.c	FUNCTION_12	FOR_1
0x40010f9	        0x488b4588	             mov rax, qword [rbp - 0x78]	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x40010fd	        0x488b5008	                mov rdx, qword [rax + 8]	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4001101	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4001105	          0x4889d6	                            mov rsi, rdx	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4001108	          0x4889c7	                            mov rdi, rax	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x400110b	      0xe800000000	                          call 0x4001110	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4001110	            0x85c0	                           test eax, eax	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4001112	            0x7414	                            je 0x4001128	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4001114	        0x488b4588	             mov rax, qword [rbp - 0x78]	       670	ldcref.c	FUNCTION_12	FOR_1
0x4001118	          0x488b00	                    mov rax, qword [rax]	       670	ldcref.c	FUNCTION_12	FOR_1
0x400111b	        0x48894588	             mov qword [rbp - 0x78], rax	       670	ldcref.c	FUNCTION_12	FOR_1
0x400111f	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       670	ldcref.c	FUNCTION_12	FOR_1
0x4001124	            0x75d3	                           jne 0x40010f9	       670	ldcref.c	FUNCTION_12	FOR_1
0x4001126	            0xeb01	                           jmp 0x4001129	       670	ldcref.c	FUNCTION_12	FOR_1
0x4001128	              0x90	                                     nop	       672	ldcref.c	FUNCTION_12	FOR_1	IF_2
0x4001129	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       674	ldcref.c	FUNCTION_12	IF_3
0x400112e	     0xf8476020000	                            je 0x40013aa	       674	ldcref.c	FUNCTION_12	IF_3
0x4001134	        0x488b4598	             mov rax, qword [rbp - 0x68]	       685	ldcref.c	FUNCTION_12
0x4001138	          0x488b00	                    mov rax, qword [rax]	       685	ldcref.c	FUNCTION_12
0x400113b	        0x488945c0	             mov qword [rbp - 0x40], rax	       685	ldcref.c	FUNCTION_12
0x400113f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       686	ldcref.c	FUNCTION_12
0x4001143	          0x8b4020	            mov eax, dword [rax + 0x20] 	       686	ldcref.c	FUNCTION_12
0x4001146	          0x894584	             mov dword [rbp - 0x7c], eax	       686	ldcref.c	FUNCTION_12
0x4001149	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       688	ldcref.c	FUNCTION_12	CALL_5
0x4001150	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       688	ldcref.c	FUNCTION_12	CALL_5
0x4001157	          0x4889d6	                            mov rsi, rdx	       688	ldcref.c	FUNCTION_12	CALL_5
0x400115a	          0x4889c7	                            mov rdi, rax	       688	ldcref.c	FUNCTION_12	CALL_5
0x400115d	      0xe800000000	                          call 0x4001162	       688	ldcref.c	FUNCTION_12	CALL_5
0x4001162	        0x488945c8	             mov qword [rbp - 0x38], rax	       688	ldcref.c	FUNCTION_12	CALL_5
0x4001166	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       689	ldcref.c	FUNCTION_12	IF_4
0x400116b	            0x7924	                           jns 0x4001191	       689	ldcref.c	FUNCTION_12	IF_4
0x400116d	      0xbf00000000	                              mov edi, 0	       690	ldcref.c	FUNCTION_12	CALL_7
0x4001172	      0xe800000000	                          call 0x4001177	       690	ldcref.c	FUNCTION_12	CALL_7
0x4001177	          0x4889c2	                            mov rdx, rax	       690	ldcref.c	FUNCTION_12	CALL_7
0x400117a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       690	ldcref.c	FUNCTION_12	CALL_7
0x4001181	          0x4889c6	                            mov rsi, rax	       690	ldcref.c	FUNCTION_12	CALL_7
0x4001184	          0x4889d7	                            mov rdi, rdx	       690	ldcref.c	FUNCTION_12	CALL_7
0x4001187	      0xb800000000	                              mov eax, 0	       690	ldcref.c	FUNCTION_12	CALL_7
0x400118c	      0xe800000000	                          call 0x4001191	       690	ldcref.c	FUNCTION_12	CALL_7
0x4001191	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       691	ldcref.c	FUNCTION_12	IF_5
0x4001196	     0xf8411020000	                            je 0x40013ad	       691	ldcref.c	FUNCTION_12	IF_5
0x400119c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       694	ldcref.c	FUNCTION_12	CALL_8
0x40011a0	          0x4889c7	                            mov rdi, rax	       694	ldcref.c	FUNCTION_12	CALL_8
0x40011a3	      0xe800000000	                          call 0x40011a8	       694	ldcref.c	FUNCTION_12	CALL_8
0x40011a8	        0x488945d0	             mov qword [rbp - 0x30], rax	       694	ldcref.c	FUNCTION_12	CALL_8
0x40011ac	        0x488b4598	             mov rax, qword [rbp - 0x68]	       695	ldcref.c	FUNCTION_12	CALL_9
0x40011b0	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       695	ldcref.c	FUNCTION_12	CALL_9
0x40011b4	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       695	ldcref.c	FUNCTION_12	CALL_9
0x40011b8	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	       695	ldcref.c	FUNCTION_12	CALL_9
0x40011bf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       695	ldcref.c	FUNCTION_12	CALL_9
0x40011c6	          0x4889c7	                            mov rdi, rax	       695	ldcref.c	FUNCTION_12	CALL_9
0x40011c9	      0xe800000000	                          call 0x40011ce	       695	ldcref.c	FUNCTION_12	CALL_9
0x40011ce	        0x488945d8	             mov qword [rbp - 0x28], rax	       695	ldcref.c	FUNCTION_12	CALL_9
0x40011d2	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       696	ldcref.c	FUNCTION_12	IF_6
0x40011d7	            0x7924	                           jns 0x40011fd	       696	ldcref.c	FUNCTION_12	IF_6
0x40011d9	      0xbf00000000	                              mov edi, 0	       697	ldcref.c	FUNCTION_12	CALL_11
0x40011de	      0xe800000000	                          call 0x40011e3	       697	ldcref.c	FUNCTION_12	CALL_11
0x40011e3	          0x4889c2	                            mov rdx, rax	       697	ldcref.c	FUNCTION_12	CALL_11
0x40011e6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       697	ldcref.c	FUNCTION_12	CALL_11
0x40011ed	          0x4889c6	                            mov rsi, rax	       697	ldcref.c	FUNCTION_12	CALL_11
0x40011f0	          0x4889d7	                            mov rdi, rdx	       697	ldcref.c	FUNCTION_12	CALL_11
0x40011f3	      0xb800000000	                              mov eax, 0	       697	ldcref.c	FUNCTION_12	CALL_11
0x40011f8	      0xe800000000	                          call 0x40011fd	       697	ldcref.c	FUNCTION_12	CALL_11
0x40011fd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       699	ldcref.c	FUNCTION_12
0x4001201	        0x48894590	             mov qword [rbp - 0x70], rax	       699	ldcref.c	FUNCTION_12
0x4001205	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       700	ldcref.c	FUNCTION_12
0x4001209	    0x488d14c50000	                        lea rdx, [rax*8]	       700	ldcref.c	FUNCTION_12
0x4001211	        0x488b4590	             mov rax, qword [rbp - 0x70]	       700	ldcref.c	FUNCTION_12
0x4001215	          0x4801d0	                            add rax, rdx	       700	ldcref.c	FUNCTION_12
0x4001218	        0x488945e0	             mov qword [rbp - 0x20], rax	       700	ldcref.c	FUNCTION_12
0x400121c	      0xe95e010000	                           jmp 0x400137f	       701	ldcref.c	FUNCTION_12	FOR_2
0x4001221	        0x488b4590	             mov rax, qword [rbp - 0x70]	       703	ldcref.c	FUNCTION_12	FOR_2
0x4001225	          0x488b00	                    mov rax, qword [rax]	       703	ldcref.c	FUNCTION_12	FOR_2
0x4001228	        0x488945e8	             mov qword [rbp - 0x18], rax	       703	ldcref.c	FUNCTION_12	FOR_2
0x400122c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001230	          0x488b00	                    mov rax, qword [rax]	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001233	          0x4885c0	                           test rax, rax	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001236	     0xf843e010000	                            je 0x400137a	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400123c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001240	          0x488b00	                    mov rax, qword [rax]	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001243	          0x488b00	                    mov rax, qword [rax]	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001246	          0x4885c0	                           test rax, rax	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001249	     0xf842b010000	                            je 0x400137a	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400124f	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       707	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001253	            0x7446	                            je 0x400129b	       707	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001255	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x4001259	          0x488b00	                    mov rax, qword [rax]	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x400125c	          0x488b00	                    mov rax, qword [rax]	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x400125f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x4001263	    0x483d00000000	                              cmp rax, 0	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x4001269	            0x7473	                            je 0x40012de	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x400126b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x400126f	          0x488b00	                    mov rax, qword [rax]	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x4001272	          0x488b00	                    mov rax, qword [rax]	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x4001275	        0x488b4020	            mov rax, qword [rax + 0x20] 	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x4001279	          0x8b4020	            mov eax, dword [rax + 0x20] 	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x400127c	      0x2500100000	                         and eax, 0x1000	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x4001281	            0x85c0	                           test eax, eax	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x4001283	            0x7559	                           jne 0x40012de	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x4001285	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001289	          0x488b00	                    mov rax, qword [rax]	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400128c	          0x488b00	                    mov rax, qword [rax]	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400128f	          0x8b4018	            mov eax, dword [rax + 0x18] 	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001292	      0x2582000000	                           and eax, 0x82	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001297	            0x85c0	                           test eax, eax	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001299	            0x7543	                           jne 0x40012de	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400129b	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       712	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400129f	     0xf85d5000000	                           jne 0x400137a	       712	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40012a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40012a9	          0x488b00	                    mov rax, qword [rax]	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40012ac	          0x488b00	                    mov rax, qword [rax]	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40012af	          0x8b4018	            mov eax, dword [rax + 0x18] 	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40012b2	      0x2501010000	                          and eax, 0x101	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40012b7	            0x85c0	                           test eax, eax	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40012b9	     0xf84bb000000	                            je 0x400137a	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40012bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x40012c3	          0x488b00	                    mov rax, qword [rax]	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x40012c6	          0x488b00	                    mov rax, qword [rax]	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x40012c9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x40012cd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x40012d1	        0x488b4008	                mov rax, qword [rax + 8]	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x40012d5	          0x4839c2	                            cmp rdx, rax	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x40012d8	     0xf859c000000	                           jne 0x400137a	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x40012de	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40012e3	            0x7424	                            je 0x4001309	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40012e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40012e9	          0x488b00	                    mov rax, qword [rax]	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40012ec	          0x488b00	                    mov rax, qword [rax]	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40012ef	        0x488b4008	                mov rax, qword [rax + 8]	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40012f3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40012f7	          0x4889d6	                            mov rsi, rdx	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40012fa	          0x4889c7	                            mov rdi, rax	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40012fd	      0xe800000000	                          call 0x4001302	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x4001302	            0x85c0	                           test eax, eax	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001304	           0xf94c0	                                 sete al	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001307	            0xeb17	                           jmp 0x4001320	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001309	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       718	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400130d	          0x488b00	                    mov rax, qword [rax]	       718	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001310	          0x488b00	                    mov rax, qword [rax]	       718	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001313	          0x8b4018	            mov eax, dword [rax + 0x18] 	       718	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001316	      0x2500010000	                          and eax, 0x100	       718	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400131b	            0x85c0	                           test eax, eax	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400131d	           0xf95c0	                                setne al	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001320	            0x84c0	                             test al, al	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001322	            0x7456	                            je 0x400137a	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4001324	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       726	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_21
0x4001328	          0x488b00	                    mov rax, qword [rax]	       726	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_21
0x400132b	          0x488b00	                    mov rax, qword [rax]	       726	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_21
0x400132e	        0x4c8b6008	                mov r12, qword [rax + 8]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001332	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001336	        0x488b5808	                mov rbx, qword [rax + 8]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400133a	      0xbf00000000	                              mov edi, 0	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400133f	      0xe800000000	                          call 0x4001344	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001344	          0x4889c7	                            mov rdi, rax	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001347	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400134b	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001352	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001359	        0x4883ec08	                              sub rsp, 8	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400135d	          0xff75b8	                 push qword [rbp - 0x48]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001360	          0x4d89e1	                             mov r9, r12	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001363	          0x4989c8	                             mov r8, rcx	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001366	          0x4889d9	                            mov rcx, rbx	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001369	          0x4889c6	                            mov rsi, rax	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400136c	      0xb800000000	                              mov eax, 0	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001371	      0xe800000000	                          call 0x4001376	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4001376	        0x4883c410	                           add rsp, 0x10	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400137a	      0x4883459008	               add qword [rbp - 0x70], 8	       701	ldcref.c	FUNCTION_12	FOR_2
0x400137f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       701	ldcref.c	FUNCTION_12	FOR_2
0x4001383	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       701	ldcref.c	FUNCTION_12	FOR_2
0x4001387	            0x7310	                           jae 0x4001399	       701	ldcref.c	FUNCTION_12	FOR_2
0x4001389	        0x488b4590	             mov rax, qword [rbp - 0x70]	       701	ldcref.c	FUNCTION_12	FOR_2
0x400138d	          0x488b00	                    mov rax, qword [rax]	       701	ldcref.c	FUNCTION_12	FOR_2
0x4001390	          0x4885c0	                           test rax, rax	       701	ldcref.c	FUNCTION_12	FOR_2
0x4001393	     0xf8588feffff	                           jne 0x4001221	       701	ldcref.c	FUNCTION_12	FOR_2
0x4001399	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       730	ldcref.c	FUNCTION_12	CALL_22
0x400139d	          0x4889c7	                            mov rdi, rax	       730	ldcref.c	FUNCTION_12	CALL_22
0x40013a0	      0xe800000000	                          call 0x40013a5	       730	ldcref.c	FUNCTION_12	CALL_22
0x40013a5	            0xeb07	                           jmp 0x40013ae	       730	ldcref.c	FUNCTION_12	CALL_22
0x40013a7	              0x90	                                     nop	       668	ldcref.c	FUNCTION_12	IF_1
0x40013a8	            0xeb04	                           jmp 0x40013ae	       668	ldcref.c	FUNCTION_12	IF_1
0x40013aa	              0x90	                                     nop	       675	ldcref.c	FUNCTION_12	IF_3
0x40013ab	            0xeb01	                           jmp 0x40013ae	       675	ldcref.c	FUNCTION_12	IF_3
0x40013ad	              0x90	                                     nop	       692	ldcref.c	FUNCTION_12	IF_5
0x40013ae	        0x488d65f0	                   lea rsp, [rbp - 0x10]	       731	ldcref.c	FUNCTION_12
0x40013b2	              0x5b	                                 pop rbx	       731	ldcref.c	FUNCTION_12
0x40013b3	            0x415c	                                 pop r12	       731	ldcref.c	FUNCTION_12
0x40013b5	              0x5d	                                 pop rbp	       731	ldcref.c	FUNCTION_12
0x40013b6	              0xc3	                                     ret	       731	ldcref.c	FUNCTION_12
check_nocrossrefs	SWITCH,0:IF,1:DO,0:ELSE,0:CALL,1:WHILE,0:functions,0:FOR,0	15
0x4000c6c	              0x55	                                push rbp	       495	ldcref.c	FUNCTION_8
0x4000c6d	          0x4889e5	                            mov rbp, rsp	       495	ldcref.c	FUNCTION_8
0x4000c70	    0x8b0500000000	            mov eax, dword [0x04000c76] 	       496	ldcref.c	FUNCTION_8	IF_1
0x4000c76	            0x85c0	                           test eax, eax	       496	ldcref.c	FUNCTION_8	IF_1
0x4000c78	            0x7420	                            je 0x4000c9a	       496	ldcref.c	FUNCTION_8	IF_1
0x4000c7a	      0xba00000000	                              mov edx, 0	       499	ldcref.c	FUNCTION_8
0x4000c7f	      0xbe00000000	                              mov esi, 0	       499	ldcref.c	FUNCTION_8
0x4000c84	      0xbf00000000	                              mov edi, 0	       499	ldcref.c	FUNCTION_8
0x4000c89	      0xe800000000	                          call 0x4000c8e	       499	ldcref.c	FUNCTION_8
0x4000c8e	      0xbf00000000	                              mov edi, 0	       501	ldcref.c	FUNCTION_8	CALL_1
0x4000c93	      0xe800000000	                          call 0x4000c98	       501	ldcref.c	FUNCTION_8	CALL_1
0x4000c98	            0xeb01	                           jmp 0x4000c9b	       501	ldcref.c	FUNCTION_8	CALL_1
0x4000c9a	              0x90	                                     nop	       497	ldcref.c	FUNCTION_8	IF_1
0x4000c9b	              0x5d	                                 pop rbp	       502	ldcref.c	FUNCTION_8
0x4000c9c	              0xc3	                                     ret	       502	ldcref.c	FUNCTION_8
output_cref	SWITCH,0:IF,1:DO,0:ELSE,0:CALL,14:WHILE,1:functions,0:FOR,1	110
0x40007aa	              0x55	                                push rbp	       366	ldcref.c	FUNCTION_6
0x40007ab	          0x4889e5	                            mov rbp, rsp	       366	ldcref.c	FUNCTION_6
0x40007ae	        0x4883ec50	                           sub rsp, 0x50	       366	ldcref.c	FUNCTION_6
0x40007b2	        0x48897db8	             mov qword [rbp - 0x48], rdi	       366	ldcref.c	FUNCTION_6
0x40007b6	    0x64488b042528	                mov rax, qword fs:[0x28]	       366	ldcref.c	FUNCTION_6
0x40007bf	        0x488945f8	                mov qword [rbp - 8], rax	       366	ldcref.c	FUNCTION_6
0x40007c3	            0x31c0	                            xor eax, eax	       366	ldcref.c	FUNCTION_6
0x40007c5	      0xbf00000000	                              mov edi, 0	       371	ldcref.c	FUNCTION_6	CALL_2
0x40007ca	      0xe800000000	                          call 0x40007cf	       371	ldcref.c	FUNCTION_6	CALL_2
0x40007cf	          0x4889c2	                            mov rdx, rax	       371	ldcref.c	FUNCTION_6	CALL_2
0x40007d2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       371	ldcref.c	FUNCTION_6	CALL_2
0x40007d6	          0x4889d6	                            mov rsi, rdx	       371	ldcref.c	FUNCTION_6	CALL_2
0x40007d9	          0x4889c7	                            mov rdi, rax	       371	ldcref.c	FUNCTION_6	CALL_2
0x40007dc	      0xb800000000	                              mov eax, 0	       371	ldcref.c	FUNCTION_6	CALL_2
0x40007e1	      0xe800000000	                          call 0x40007e6	       371	ldcref.c	FUNCTION_6	CALL_2
0x40007e6	      0xbf00000000	                              mov edi, 0	       372	ldcref.c	FUNCTION_6	CALL_3
0x40007eb	      0xe800000000	                          call 0x40007f0	       372	ldcref.c	FUNCTION_6	CALL_3
0x40007f0	        0x488945e0	             mov qword [rbp - 0x20], rax	       372	ldcref.c	FUNCTION_6	CALL_3
0x40007f4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       373	ldcref.c	FUNCTION_6	CALL_4
0x40007f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       373	ldcref.c	FUNCTION_6	CALL_4
0x40007fc	          0x4889d6	                            mov rsi, rdx	       373	ldcref.c	FUNCTION_6	CALL_4
0x40007ff	          0x4889c7	                            mov rdi, rax	       373	ldcref.c	FUNCTION_6	CALL_4
0x4000802	      0xe800000000	                          call 0x4000807	       373	ldcref.c	FUNCTION_6	CALL_4
0x4000807	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       374	ldcref.c	FUNCTION_6	CALL_5
0x400080b	          0x4889c7	                            mov rdi, rax	       374	ldcref.c	FUNCTION_6	CALL_5
0x400080e	      0xe800000000	                          call 0x4000813	       374	ldcref.c	FUNCTION_6	CALL_5
0x4000813	          0x8945cc	             mov dword [rbp - 0x34], eax	       374	ldcref.c	FUNCTION_6	CALL_5
0x4000816	            0xeb15	                           jmp 0x400082d	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000818	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_6
0x400081c	          0x4889c6	                            mov rsi, rax	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_6
0x400081f	      0xbf20000000	                           mov edi, 0x20	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_6
0x4000824	      0xe800000000	                          call 0x4000829	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_6
0x4000829	        0x8345cc01	               add dword [rbp - 0x34], 1	       378	ldcref.c	FUNCTION_6	WHILE_1
0x400082d	        0x837dcc31	           cmp dword [rbp - 0x34], 0x31 	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000831	            0x7ee5	                           jle 0x4000818	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000833	      0xbf00000000	                              mov edi, 0	       380	ldcref.c	FUNCTION_6	CALL_8
0x4000838	      0xe800000000	                          call 0x400083d	       380	ldcref.c	FUNCTION_6	CALL_8
0x400083d	          0x4889c2	                            mov rdx, rax	       380	ldcref.c	FUNCTION_6	CALL_8
0x4000840	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       380	ldcref.c	FUNCTION_6	CALL_8
0x4000844	          0x4889d6	                            mov rsi, rdx	       380	ldcref.c	FUNCTION_6	CALL_8
0x4000847	          0x4889c7	                            mov rdi, rax	       380	ldcref.c	FUNCTION_6	CALL_8
0x400084a	      0xb800000000	                              mov eax, 0	       380	ldcref.c	FUNCTION_6	CALL_8
0x400084f	      0xe800000000	                          call 0x4000854	       380	ldcref.c	FUNCTION_6	CALL_8
0x4000854	    0x8b0500000000	            mov eax, dword [0x0400085a] 	       382	ldcref.c	FUNCTION_6	IF_1
0x400085a	            0x85c0	                           test eax, eax	       382	ldcref.c	FUNCTION_6	IF_1
0x400085c	            0x7526	                           jne 0x4000884	       382	ldcref.c	FUNCTION_6	IF_1
0x400085e	      0xbf00000000	                              mov edi, 0	       384	ldcref.c	FUNCTION_6	IF_1	CALL_10
0x4000863	      0xe800000000	                          call 0x4000868	       384	ldcref.c	FUNCTION_6	IF_1	CALL_10
0x4000868	          0x4889c2	                            mov rdx, rax	       384	ldcref.c	FUNCTION_6	IF_1	CALL_10
0x400086b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       384	ldcref.c	FUNCTION_6	IF_1	CALL_10
0x400086f	          0x4889d6	                            mov rsi, rdx	       384	ldcref.c	FUNCTION_6	IF_1	CALL_10
0x4000872	          0x4889c7	                            mov rdi, rax	       384	ldcref.c	FUNCTION_6	IF_1	CALL_10
0x4000875	      0xb800000000	                              mov eax, 0	       384	ldcref.c	FUNCTION_6	IF_1	CALL_10
0x400087a	      0xe800000000	                          call 0x400087f	       384	ldcref.c	FUNCTION_6	IF_1	CALL_10
0x400087f	      0xe9ce000000	                           jmp 0x4000952	       384	ldcref.c	FUNCTION_6	IF_1	CALL_10
0x4000884	    0x488b05000000	            mov rax, qword [0x0400088b] 	       388	ldcref.c	FUNCTION_6	CALL_11
0x400088b	        0x48c1e003	                              shl rax, 3	       388	ldcref.c	FUNCTION_6	CALL_11
0x400088f	          0x4889c7	                            mov rdi, rax	       388	ldcref.c	FUNCTION_6	CALL_11
0x4000892	      0xe800000000	                          call 0x4000897	       388	ldcref.c	FUNCTION_6	CALL_11
0x4000897	        0x488945e8	             mov qword [rbp - 0x18], rax	       388	ldcref.c	FUNCTION_6	CALL_11
0x400089b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	ldcref.c	FUNCTION_6
0x400089f	        0x488945d0	             mov qword [rbp - 0x30], rax	       390	ldcref.c	FUNCTION_6
0x40008a3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       391	ldcref.c	FUNCTION_6
0x40008a7	          0x4889c2	                            mov rdx, rax	       391	ldcref.c	FUNCTION_6
0x40008aa	      0xbe00000000	                              mov esi, 0	       391	ldcref.c	FUNCTION_6
0x40008af	      0xbf00000000	                              mov edi, 0	       391	ldcref.c	FUNCTION_6
0x40008b4	      0xe800000000	                          call 0x40008b9	       391	ldcref.c	FUNCTION_6
0x40008b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008bd	          0x4889c2	                            mov rdx, rax	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008c4	          0x4829c2	                            sub rdx, rax	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008c7	          0x4889d0	                            mov rax, rdx	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008ca	        0x48c1f803	                              sar rax, 3	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008ce	          0x4889c2	                            mov rdx, rax	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008d1	    0x488b05000000	            mov rax, qword [0x040008d8] 	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008d8	          0x4839c2	                            cmp rdx, rax	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008db	            0x740f	                            je 0x40008ec	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008dd	      0xbe88010000	                          mov esi, 0x188	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008e2	      0xbf00000000	                              mov edi, 0	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008e7	      0xe800000000	                          call 0x40008ec	       392	ldcref.c	FUNCTION_6	CALL_12
0x40008ec	    0x488b35000000	            mov rsi, qword [0x040008f3] 	       394	ldcref.c	FUNCTION_6	CALL_13
0x40008f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       394	ldcref.c	FUNCTION_6	CALL_13
0x40008f7	      0xb900000000	                              mov ecx, 0	       394	ldcref.c	FUNCTION_6	CALL_13
0x40008fc	      0xba08000000	                              mov edx, 8	       394	ldcref.c	FUNCTION_6	CALL_13
0x4000901	          0x4889c7	                            mov rdi, rax	       394	ldcref.c	FUNCTION_6	CALL_13
0x4000904	      0xe800000000	                          call 0x4000909	       394	ldcref.c	FUNCTION_6	CALL_13
0x4000909	    0x488b05000000	            mov rax, qword [0x04000910] 	       396	ldcref.c	FUNCTION_6
0x4000910	    0x488d14c50000	                        lea rdx, [rax*8]	       396	ldcref.c	FUNCTION_6
0x4000918	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       396	ldcref.c	FUNCTION_6
0x400091c	          0x4801d0	                            add rax, rdx	       396	ldcref.c	FUNCTION_6
0x400091f	        0x488945f0	             mov qword [rbp - 0x10], rax	       396	ldcref.c	FUNCTION_6
0x4000923	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000927	        0x488945d8	             mov qword [rbp - 0x28], rax	       397	ldcref.c	FUNCTION_6	FOR_1
0x400092b	            0xeb1b	                           jmp 0x4000948	       397	ldcref.c	FUNCTION_6	FOR_1
0x400092d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       398	ldcref.c	FUNCTION_6	CALL_14
0x4000931	          0x488b10	                    mov rdx, qword [rax]	       398	ldcref.c	FUNCTION_6	CALL_14
0x4000934	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       398	ldcref.c	FUNCTION_6	CALL_14
0x4000938	          0x4889d6	                            mov rsi, rdx	       398	ldcref.c	FUNCTION_6	CALL_14
0x400093b	          0x4889c7	                            mov rdi, rax	       398	ldcref.c	FUNCTION_6	CALL_14
0x400093e	      0xe825000000	                call sym.output_one_cref	       398	ldcref.c	FUNCTION_6	CALL_14
0x4000943	      0x488345d808	               add qword [rbp - 0x28], 8	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000948	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       397	ldcref.c	FUNCTION_6	FOR_1
0x400094c	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000950	            0x72db	                            jb 0x400092d	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000952	        0x488b45f8	                mov rax, qword [rbp - 8]	       399	ldcref.c	FUNCTION_6
0x4000956	    0x644833042528	                xor rax, qword fs:[0x28]	       399	ldcref.c	FUNCTION_6
0x400095f	            0x7405	                            je 0x4000966	       399	ldcref.c	FUNCTION_6
0x4000961	      0xe800000000	                          call 0x4000966	       399	ldcref.c	FUNCTION_6
0x4000966	              0xc9	                                   leave	       399	ldcref.c	FUNCTION_6
0x4000967	              0xc3	                                     ret	       399	ldcref.c	FUNCTION_6
cref_hash_newfunc	SWITCH,0:IF,3:DO,0:ELSE,0:CALL,2:WHILE,0:functions,0:FOR,0	38
0x4000040	              0x55	                                push rbp	       126	ldcref.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       126	ldcref.c	FUNCTION_1
0x4000044	        0x4883ec30	                           sub rsp, 0x30	       126	ldcref.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       126	ldcref.c	FUNCTION_1
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       126	ldcref.c	FUNCTION_1
0x4000050	        0x488955d8	             mov qword [rbp - 0x28], rdx	       126	ldcref.c	FUNCTION_1
0x4000054	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       127	ldcref.c	FUNCTION_1
0x4000058	        0x488945f8	                mov qword [rbp - 8], rax	       127	ldcref.c	FUNCTION_1
0x400005c	      0x48837df800	                  cmp qword [rbp - 8], 0	       131	ldcref.c	FUNCTION_1	IF_1
0x4000061	            0x7515	                           jne 0x4000078	       131	ldcref.c	FUNCTION_1	IF_1
0x4000063	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       132	ldcref.c	FUNCTION_1	IF_1
0x4000067	      0xbe28000000	                           mov esi, 0x28	       132	ldcref.c	FUNCTION_1	IF_1
0x400006c	          0x4889c7	                            mov rdi, rax	       132	ldcref.c	FUNCTION_1	IF_1
0x400006f	      0xe800000000	                          call 0x4000074	       132	ldcref.c	FUNCTION_1	IF_1
0x4000074	        0x488945f8	                mov qword [rbp - 8], rax	       132	ldcref.c	FUNCTION_1	IF_1
0x4000078	      0x48837df800	                  cmp qword [rbp - 8], 0	       134	ldcref.c	FUNCTION_1	IF_2
0x400007d	            0x7507	                           jne 0x4000086	       134	ldcref.c	FUNCTION_1	IF_2
0x400007f	      0xb800000000	                              mov eax, 0	       135	ldcref.c	FUNCTION_1	IF_2
0x4000084	            0xeb50	                           jmp 0x40000d6	       135	ldcref.c	FUNCTION_1	IF_2
0x4000086	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       138	ldcref.c	FUNCTION_1
0x400008a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       138	ldcref.c	FUNCTION_1
0x400008e	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	ldcref.c	FUNCTION_1
0x4000092	          0x4889ce	                            mov rsi, rcx	       138	ldcref.c	FUNCTION_1
0x4000095	          0x4889c7	                            mov rdi, rax	       138	ldcref.c	FUNCTION_1
0x4000098	      0xe800000000	                          call 0x400009d	       138	ldcref.c	FUNCTION_1
0x400009d	        0x488945f8	                mov qword [rbp - 8], rax	       138	ldcref.c	FUNCTION_1
0x40000a1	      0x48837df800	                  cmp qword [rbp - 8], 0	       140	ldcref.c	FUNCTION_1	IF_3
0x40000a6	            0x742a	                            je 0x40000d2	       140	ldcref.c	FUNCTION_1	IF_3
0x40000a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       143	ldcref.c	FUNCTION_1	IF_3
0x40000ac	    0x48c740180000	               mov qword [rax + 0x18], 0	       143	ldcref.c	FUNCTION_1	IF_3
0x40000b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       144	ldcref.c	FUNCTION_1	IF_3
0x40000b8	    0x48c740200000	               mov qword [rax + 0x20], 0	       144	ldcref.c	FUNCTION_1	IF_3
0x40000c0	    0x488b05000000	            mov rax, qword [0x040000c7] 	       148	ldcref.c	FUNCTION_1	IF_3
0x40000c7	        0x4883c001	                              add rax, 1	       148	ldcref.c	FUNCTION_1	IF_3
0x40000cb	    0x488905000000	            mov qword [0x040000d2], rax 	       148	ldcref.c	FUNCTION_1	IF_3
0x40000d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       151	ldcref.c	FUNCTION_1
0x40000d6	              0xc9	                                   leave	       152	ldcref.c	FUNCTION_1
0x40000d7	              0xc3	                                     ret	       152	ldcref.c	FUNCTION_1
output_one_cref	SWITCH,0:IF,10:DO,0:ELSE,2:CALL,14:WHILE,3:functions,0:FOR,4	208
0x4000968	              0x55	                                push rbp	       405	ldcref.c	FUNCTION_7
0x4000969	          0x4889e5	                            mov rbp, rsp	       405	ldcref.c	FUNCTION_7
0x400096c	              0x53	                                push rbx	       405	ldcref.c	FUNCTION_7
0x400096d	        0x4883ec38	                           sub rsp, 0x38	       405	ldcref.c	FUNCTION_7
0x4000971	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       405	ldcref.c	FUNCTION_7
0x4000975	        0x488975c0	             mov qword [rbp - 0x40], rsi	       405	ldcref.c	FUNCTION_7
0x4000979	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       410	ldcref.c	FUNCTION_7	CALL_1
0x400097d	        0x488b7008	                mov rsi, qword [rax + 8]	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000981	    0x488b05000000	            mov rax, qword [0x04000988] 	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000988	    0x41b801000000	                              mov r8d, 1	       410	ldcref.c	FUNCTION_7	CALL_1
0x400098e	      0xb900000000	                              mov ecx, 0	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000993	      0xba00000000	                              mov edx, 0	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000998	          0x4889c7	                            mov rdi, rax	       410	ldcref.c	FUNCTION_7	CALL_1
0x400099b	      0xe800000000	                          call 0x40009a0	       410	ldcref.c	FUNCTION_7	CALL_1
0x40009a0	        0x488945e8	             mov qword [rbp - 0x18], rax	       410	ldcref.c	FUNCTION_7	CALL_1
0x40009a4	      0x48837de800	               cmp qword [rbp - 0x18], 0	       412	ldcref.c	FUNCTION_7	IF_1
0x40009a9	            0x7527	                           jne 0x40009d2	       412	ldcref.c	FUNCTION_7	IF_1
0x40009ab	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x40009af	        0x488b5808	                mov rbx, qword [rax + 8]	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x40009b3	      0xbf00000000	                              mov edi, 0	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x40009b8	      0xe800000000	                          call 0x40009bd	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x40009bd	          0x4889de	                            mov rsi, rbx	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x40009c0	          0x4889c7	                            mov rdi, rax	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x40009c3	      0xb800000000	                              mov eax, 0	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x40009c8	      0xe800000000	                          call 0x40009cd	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x40009cd	      0xe9a2000000	                           jmp 0x4000a74	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x40009d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       419	ldcref.c	FUNCTION_7	ELSE_1	IF_2
0x40009d6	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       419	ldcref.c	FUNCTION_7	ELSE_1	IF_2
0x40009da	            0x3c03	                               cmp al, 3	       419	ldcref.c	FUNCTION_7	ELSE_1	IF_2
0x40009dc	     0xf8592000000	                           jne 0x4000a74	       419	ldcref.c	FUNCTION_7	ELSE_1	IF_2
0x40009e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x40009e6	        0x488b4028	            mov rax, qword [rax + 0x28] 	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x40009ea	        0x488b4068	            mov rax, qword [rax + 0x68] 	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x40009ee	          0x4885c0	                           test rax, rax	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x40009f1	     0xf846a020000	                            je 0x4000c61	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x40009f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x40009fb	        0x488b4028	            mov rax, qword [rax + 0x28] 	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x40009ff	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a06	          0x4885c0	                           test rax, rax	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a09	            0x7469	                            je 0x4000a74	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a0f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a13	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a1a	          0x8b4044	            mov eax, dword [rax + 0x44] 	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a1d	          0xc1e805	                              shr eax, 5	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a20	      0x25ffff0f00	                        and eax, 0xfffff	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a25	          0x83e040	                           and eax, 0x40	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a28	            0x85c0	                           test eax, eax	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a2a	            0x7448	                            je 0x4000a74	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000a2c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000a30	        0x488b4020	            mov rax, qword [rax + 0x20] 	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000a34	        0x488945e0	             mov qword [rbp - 0x20], rax	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000a38	            0xeb25	                           jmp 0x4000a5f	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000a3a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000a3e	        0x488b4008	                mov rax, qword [rax + 8]	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000a42	          0x8b4044	            mov eax, dword [rax + 0x44] 	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000a45	          0xc1e805	                              shr eax, 5	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000a48	      0x25ffff0f00	                        and eax, 0xfffff	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000a4d	          0x83e040	                           and eax, 0x40	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000a50	            0x85c0	                           test eax, eax	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000a52	            0x7414	                            je 0x4000a68	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000a54	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000a58	          0x488b00	                    mov rax, qword [rax]	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000a5b	        0x488945e0	             mov qword [rbp - 0x20], rax	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000a5f	      0x48837de000	               cmp qword [rbp - 0x20], 0	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000a64	            0x75d4	                           jne 0x4000a3a	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000a66	            0xeb01	                           jmp 0x4000a69	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000a68	              0x90	                                     nop	       428	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000a69	      0x48837de000	               cmp qword [rbp - 0x20], 0	       429	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	IF_6
0x4000a6e	     0xf84f0010000	                            je 0x4000c64	       429	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	IF_6
0x4000a74	    0x8b0500000000	            mov eax, dword [0x04000a7a] 	       435	ldcref.c	FUNCTION_7	IF_7
0x4000a7a	            0x85c0	                           test eax, eax	       435	ldcref.c	FUNCTION_7	IF_7
0x4000a7c	            0x7436	                            je 0x4000ab4	       435	ldcref.c	FUNCTION_7	IF_7
0x4000a7e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       437	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000a82	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       437	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000a86	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       437	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000a8a	      0xbe00000000	                              mov esi, 0	       437	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000a8f	          0x4889c7	                            mov rdi, rax	       437	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000a92	      0xb800000000	                              mov eax, 0	       437	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000a97	      0xe800000000	                          call 0x4000a9c	       437	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000a9c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       438	ldcref.c	FUNCTION_7	IF_7	CALL_5
0x4000aa0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       438	ldcref.c	FUNCTION_7	IF_7	CALL_5
0x4000aa4	          0x4889c7	                            mov rdi, rax	       438	ldcref.c	FUNCTION_7	IF_7	CALL_5
0x4000aa7	      0xe800000000	                          call 0x4000aac	       438	ldcref.c	FUNCTION_7	IF_7	CALL_5
0x4000aac	          0x83c001	                              add eax, 1	       438	ldcref.c	FUNCTION_7	IF_7	CALL_5
0x4000aaf	          0x8945dc	             mov dword [rbp - 0x24], eax	       438	ldcref.c	FUNCTION_7	IF_7	CALL_5
0x4000ab2	            0xeb34	                           jmp 0x4000ae8	       438	ldcref.c	FUNCTION_7	IF_7	CALL_5
0x4000ab4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       442	ldcref.c	FUNCTION_7	ELSE_2	CALL_6
0x4000ab8	        0x488b5008	                mov rdx, qword [rax + 8]	       442	ldcref.c	FUNCTION_7	ELSE_2	CALL_6
0x4000abc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       442	ldcref.c	FUNCTION_7	ELSE_2	CALL_6
0x4000ac0	      0xbe00000000	                              mov esi, 0	       442	ldcref.c	FUNCTION_7	ELSE_2	CALL_6
0x4000ac5	          0x4889c7	                            mov rdi, rax	       442	ldcref.c	FUNCTION_7	ELSE_2	CALL_6
0x4000ac8	      0xb800000000	                              mov eax, 0	       442	ldcref.c	FUNCTION_7	ELSE_2	CALL_6
0x4000acd	      0xe800000000	                          call 0x4000ad2	       442	ldcref.c	FUNCTION_7	ELSE_2	CALL_6
0x4000ad2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_7
0x4000ad6	        0x488b4008	                mov rax, qword [rax + 8]	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_7
0x4000ada	          0x4889c7	                            mov rdi, rax	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_7
0x4000add	      0xe800000000	                          call 0x4000ae2	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_7
0x4000ae2	          0x83c001	                              add eax, 1	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_7
0x4000ae5	          0x8945dc	             mov dword [rbp - 0x24], eax	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_7
0x4000ae8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000aec	        0x488b4020	            mov rax, qword [rax + 0x20] 	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000af0	        0x488945e0	             mov qword [rbp - 0x20], rax	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000af4	            0xeb5c	                           jmp 0x4000b52	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000af6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       448	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000afa	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       448	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000afe	          0x83e001	                              and eax, 1	       448	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000b01	            0x84c0	                             test al, al	       448	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000b03	            0x7442	                            je 0x4000b47	       448	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000b05	            0xeb15	                           jmp 0x4000b1c	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000b07	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_8
0x4000b0b	          0x4889c6	                            mov rsi, rax	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_8
0x4000b0e	      0xbf20000000	                           mov edi, 0x20	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_8
0x4000b13	      0xe800000000	                          call 0x4000b18	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_8
0x4000b18	        0x8345dc01	               add dword [rbp - 0x24], 1	       453	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000b1c	        0x837ddc31	           cmp dword [rbp - 0x24], 0x31 	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000b20	            0x7ee5	                           jle 0x4000b07	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000b22	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_9
0x4000b26	        0x488b5008	                mov rdx, qword [rax + 8]	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_9
0x4000b2a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_9
0x4000b2e	      0xbe00000000	                              mov esi, 0	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_9
0x4000b33	          0x4889c7	                            mov rdi, rax	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_9
0x4000b36	      0xb800000000	                              mov eax, 0	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_9
0x4000b3b	      0xe800000000	                          call 0x4000b40	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_9
0x4000b40	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       456	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000b47	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000b4b	          0x488b00	                    mov rax, qword [rax]	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000b4e	        0x488945e0	             mov qword [rbp - 0x20], rax	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000b52	      0x48837de000	               cmp qword [rbp - 0x20], 0	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000b57	            0x759d	                           jne 0x4000af6	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000b59	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000b5d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000b61	        0x488945e0	             mov qword [rbp - 0x20], rax	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000b65	            0xeb5c	                           jmp 0x4000bc3	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000b67	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       462	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000b6b	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       462	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000b6f	          0x83e002	                              and eax, 2	       462	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000b72	            0x84c0	                             test al, al	       462	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000b74	            0x7442	                            je 0x4000bb8	       462	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000b76	            0xeb15	                           jmp 0x4000b8d	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000b78	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_10
0x4000b7c	          0x4889c6	                            mov rsi, rax	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_10
0x4000b7f	      0xbf20000000	                           mov edi, 0x20	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_10
0x4000b84	      0xe800000000	                          call 0x4000b89	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_10
0x4000b89	        0x8345dc01	               add dword [rbp - 0x24], 1	       467	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000b8d	        0x837ddc31	           cmp dword [rbp - 0x24], 0x31 	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000b91	            0x7ee5	                           jle 0x4000b78	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000b93	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_11
0x4000b97	        0x488b5008	                mov rdx, qword [rax + 8]	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_11
0x4000b9b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_11
0x4000b9f	      0xbe00000000	                              mov esi, 0	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_11
0x4000ba4	          0x4889c7	                            mov rdi, rax	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_11
0x4000ba7	      0xb800000000	                              mov eax, 0	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_11
0x4000bac	      0xe800000000	                          call 0x4000bb1	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_11
0x4000bb1	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       470	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000bb8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000bbc	          0x488b00	                    mov rax, qword [rax]	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000bbf	        0x488945e0	             mov qword [rbp - 0x20], rax	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000bc3	      0x48837de000	               cmp qword [rbp - 0x20], 0	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000bc8	            0x759d	                           jne 0x4000b67	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000bca	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000bce	        0x488b4020	            mov rax, qword [rax + 0x20] 	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000bd2	        0x488945e0	             mov qword [rbp - 0x20], rax	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000bd6	            0xeb6b	                           jmp 0x4000c43	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000bd8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000bdc	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000be0	          0x83e001	                              and eax, 1	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000be3	            0x84c0	                             test al, al	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000be5	            0x7551	                           jne 0x4000c38	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000be7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000beb	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000bef	          0x83e002	                              and eax, 2	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000bf2	            0x84c0	                             test al, al	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000bf4	            0x7542	                           jne 0x4000c38	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000bf6	            0xeb15	                           jmp 0x4000c0d	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000bf8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_12
0x4000bfc	          0x4889c6	                            mov rsi, rax	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_12
0x4000bff	      0xbf20000000	                           mov edi, 0x20	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_12
0x4000c04	      0xe800000000	                          call 0x4000c09	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_12
0x4000c09	        0x8345dc01	               add dword [rbp - 0x24], 1	       481	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000c0d	        0x837ddc31	           cmp dword [rbp - 0x24], 0x31 	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000c11	            0x7ee5	                           jle 0x4000bf8	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000c13	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_13
0x4000c17	        0x488b5008	                mov rdx, qword [rax + 8]	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_13
0x4000c1b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_13
0x4000c1f	      0xbe00000000	                              mov esi, 0	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_13
0x4000c24	          0x4889c7	                            mov rdi, rax	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_13
0x4000c27	      0xb800000000	                              mov eax, 0	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_13
0x4000c2c	      0xe800000000	                          call 0x4000c31	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_13
0x4000c31	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       484	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000c38	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000c3c	          0x488b00	                    mov rax, qword [rax]	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000c3f	        0x488945e0	             mov qword [rbp - 0x20], rax	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000c43	      0x48837de000	               cmp qword [rbp - 0x20], 0	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000c48	            0x758e	                           jne 0x4000bd8	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000c4a	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       488	ldcref.c	FUNCTION_7	CALL_14
0x4000c4e	            0x7415	                            je 0x4000c65	       488	ldcref.c	FUNCTION_7	CALL_14
0x4000c50	      0xbee8010000	                          mov esi, 0x1e8	       488	ldcref.c	FUNCTION_7	CALL_14
0x4000c55	      0xbf00000000	                              mov edi, 0	       488	ldcref.c	FUNCTION_7	CALL_14
0x4000c5a	      0xe800000000	                          call 0x4000c5f	       488	ldcref.c	FUNCTION_7	CALL_14
0x4000c5f	            0xeb04	                           jmp 0x4000c65	       488	ldcref.c	FUNCTION_7	CALL_14
0x4000c61	              0x90	                                     nop	       422	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x4000c62	            0xeb01	                           jmp 0x4000c65	       422	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x4000c64	              0x90	                                     nop	       430	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	IF_6
0x4000c65	        0x4883c438	                           add rsp, 0x38	       489	ldcref.c	FUNCTION_7
0x4000c69	              0x5b	                                 pop rbx	       489	ldcref.c	FUNCTION_7
0x4000c6a	              0x5d	                                 pop rbp	       489	ldcref.c	FUNCTION_7
0x4000c6b	              0xc3	                                     ret	       489	ldcref.c	FUNCTION_7
handle_asneeded_cref	SWITCH,0:IF,6:DO,0:ELSE,1:CALL,11:WHILE,0:functions,0:FOR,9	235
0x4000279	              0x55	                                push rbp	       210	ldcref.c	ELSE_2	FUNCTION_3
0x400027a	          0x4889e5	                            mov rbp, rsp	       210	ldcref.c	ELSE_2	FUNCTION_3
0x400027d	        0x4883c480	             add rsp, 0xffffffffffffff80	       210	ldcref.c	ELSE_2	FUNCTION_3
0x4000281	        0x48897d88	             mov qword [rbp - 0x78], rdi	       210	ldcref.c	ELSE_2	FUNCTION_3
0x4000285	          0x897584	             mov dword [rbp - 0x7c], esi	       210	ldcref.c	ELSE_2	FUNCTION_3
0x4000288	    0x8b0500000000	            mov eax, dword [0x0400028e] 	       213	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x400028e	            0x85c0	                           test eax, eax	       213	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x4000290	            0x750a	                           jne 0x400029c	       213	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x4000292	      0xb801000000	                              mov eax, 1	       214	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x4000297	      0xe9fa030000	                           jmp 0x4000696	       214	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x400029c	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       216	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40002a0	     0xf8543020000	                           jne 0x40004e9	       216	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40002a6	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40002ad	      0xe983000000	                           jmp 0x4000335	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40002b2	    0x488b05000000	            mov rax, qword [0x040002b9] 	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002b9	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002bc	        0x48c1e203	                              shl rdx, 3	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002c0	          0x4801d0	                            add rax, rdx	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002c3	          0x488b00	                    mov rax, qword [rax]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002c6	        0x488945a8	             mov qword [rbp - 0x58], rax	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002ca	            0xeb5e	                           jmp 0x400032a	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002cc	    0x8b0500000000	            mov eax, dword [0x040002d2] 	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002d2	            0x89c2	                            mov edx, eax	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002d4	    0x488b05000000	            mov rax, qword [0x040002db] 	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002db	          0x4801d0	                            add rax, rdx	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002de	    0x488905000000	            mov qword [0x040002e5], rax 	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002e5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       229	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002e9	        0x488945e8	             mov qword [rbp - 0x18], rax	       229	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40002ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40002f1	        0x488b4020	            mov rax, qword [rax + 0x20] 	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40002f5	        0x488945b0	             mov qword [rbp - 0x50], rax	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40002f9	            0xeb1d	                           jmp 0x4000318	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40002fb	    0x488b05000000	            mov rax, qword [0x04000302] 	       231	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000302	        0x4883c018	                           add rax, 0x18	       231	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000306	    0x488905000000	            mov qword [0x0400030d], rax 	       231	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x400030d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000311	          0x488b00	                    mov rax, qword [rax]	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000314	        0x488945b0	             mov qword [rbp - 0x50], rax	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000318	      0x48837db000	               cmp qword [rbp - 0x50], 0	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x400031d	            0x75dc	                           jne 0x40002fb	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x400031f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000323	          0x488b00	                    mov rax, qword [rax]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000326	        0x488945a8	             mov qword [rbp - 0x58], rax	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x400032a	      0x48837da800	               cmp qword [rbp - 0x58], 0	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x400032f	            0x759b	                           jne 0x40002cc	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000331	        0x83459401	               add dword [rbp - 0x6c], 1	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000335	    0x8b0500000000	            mov eax, dword [0x0400033b] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400033b	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400033e	     0xf876effffff	                            ja 0x40002b2	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000344	    0x8b0500000000	            mov eax, dword [0x0400034a] 	       235	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x400034a	            0x89c0	                            mov eax, eax	       235	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x400034c	        0x48c1e003	                              shl rax, 3	       235	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000350	    0x488905000000	            mov qword [0x04000357], rax 	       235	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000357	    0x488b15000000	            mov rdx, qword [0x0400035e] 	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x400035e	    0x488b05000000	            mov rax, qword [0x04000365] 	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000365	          0x4801c2	                            add rdx, rax	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000368	    0x488b05000000	            mov rax, qword [0x0400036f] 	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x400036f	          0x4801d0	                            add rax, rdx	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000372	          0x4889c7	                            mov rdi, rax	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000375	      0xe800000000	                          call 0x400037a	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x400037a	    0x488905000000	            mov qword [0x04000381], rax 	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000381	      0xbe01000000	                              mov esi, 1	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000386	      0xbf00000000	                              mov edi, 0	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x400038b	      0xe800000000	                          call 0x4000390	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000390	    0x488905000000	            mov qword [0x04000397], rax 	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000397	    0x488b05000000	            mov rax, qword [0x0400039e] 	       239	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x400039e	          0x4885c0	                           test rax, rax	       239	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x40003a1	            0x750a	                           jne 0x40003ad	       239	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x40003a3	      0xb800000000	                              mov eax, 0	       240	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x40003a8	      0xe9e9020000	                           jmp 0x4000696	       240	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x40003ad	    0x488b15000000	            mov rdx, qword [0x040003b4] 	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x40003b4	    0x488b0d000000	            mov rcx, qword [0x040003bb] 	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x40003bb	    0x488b05000000	            mov rax, qword [0x040003c2] 	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x40003c2	          0x4889ce	                            mov rsi, rcx	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x40003c5	          0x4889c7	                            mov rdi, rax	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x40003c8	      0xe800000000	                          call 0x40003cd	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x40003cd	    0x488b15000000	            mov rdx, qword [0x040003d4] 	       243	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40003d4	    0x488b05000000	            mov rax, qword [0x040003db] 	       243	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40003db	          0x4801d0	                            add rax, rdx	       243	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40003de	        0x48894598	             mov qword [rbp - 0x68], rax	       243	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40003e2	    0x488b15000000	            mov rdx, qword [0x040003e9] 	       244	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40003e9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       244	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40003ed	          0x4801d0	                            add rax, rdx	       244	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40003f0	        0x488945a0	             mov qword [rbp - 0x60], rax	       244	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40003f4	    0x488b05000000	            mov rax, qword [0x040003fb] 	       245	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40003fb	    0x488905000000	            mov qword [0x04000402], rax 	       245	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000402	    0x8b0500000000	            mov eax, dword [0x04000408] 	       246	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000408	    0x890500000000	            mov dword [0x0400040e], eax 	       246	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x400040e	    0x8b0500000000	            mov eax, dword [0x04000414] 	       247	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000414	    0x890500000000	            mov dword [0x0400041a], eax 	       247	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x400041a	    0x488b05000000	            mov rax, qword [0x04000421] 	       248	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000421	    0x488905000000	            mov qword [0x04000428], rax 	       248	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000428	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x400042f	      0xe99c000000	                           jmp 0x40004d0	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000434	    0x488b05000000	            mov rax, qword [0x0400043b] 	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x400043b	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x400043e	        0x48c1e203	                              shl rdx, 3	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000442	          0x4801d0	                            add rax, rdx	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000445	          0x488b00	                    mov rax, qword [rax]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000448	        0x488945b8	             mov qword [rbp - 0x48], rax	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x400044c	            0xeb77	                           jmp 0x40004c5	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x400044e	    0x8b0500000000	            mov eax, dword [0x04000454] 	       258	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	CALL_4
0x4000454	            0x89c2	                            mov edx, eax	       258	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	CALL_4
0x4000456	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       258	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	CALL_4
0x400045a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       258	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	CALL_4
0x400045e	          0x4889ce	                            mov rsi, rcx	       258	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	CALL_4
0x4000461	          0x4889c7	                            mov rdi, rax	       258	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	CALL_4
0x4000464	      0xe800000000	                          call 0x4000469	       258	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	CALL_4
0x4000469	    0x8b0500000000	            mov eax, dword [0x0400046f] 	       259	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x400046f	            0x89c0	                            mov eax, eax	       259	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000471	        0x48014598	            add qword [rbp - 0x68], rax 	       259	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000475	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       260	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000479	        0x488945f0	             mov qword [rbp - 0x10], rax	       260	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x400047d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000481	        0x488b4020	            mov rax, qword [rax + 0x20] 	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000485	        0x488945c0	             mov qword [rbp - 0x40], rax	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000489	            0xeb28	                           jmp 0x40004b3	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x400048b	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       263	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6	CALL_5
0x400048f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       263	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6	CALL_5
0x4000493	      0xba18000000	                           mov edx, 0x18	       263	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6	CALL_5
0x4000498	          0x4889ce	                            mov rsi, rcx	       263	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6	CALL_5
0x400049b	          0x4889c7	                            mov rdi, rax	       263	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6	CALL_5
0x400049e	      0xe800000000	                          call 0x40004a3	       263	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6	CALL_5
0x40004a3	      0x488345a018	            add qword [rbp - 0x60], 0x18	       264	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x40004a8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x40004ac	          0x488b00	                    mov rax, qword [rax]	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x40004af	        0x488945c0	             mov qword [rbp - 0x40], rax	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x40004b3	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x40004b8	            0x75d1	                           jne 0x400048b	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x40004ba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x40004be	          0x488b00	                    mov rax, qword [rax]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x40004c1	        0x488945b8	             mov qword [rbp - 0x48], rax	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x40004c5	      0x48837db800	               cmp qword [rbp - 0x48], 0	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x40004ca	            0x7582	                           jne 0x400044e	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x40004cc	        0x83459401	               add dword [rbp - 0x6c], 1	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x40004d0	    0x8b0500000000	            mov eax, dword [0x040004d6] 	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x40004d6	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x40004d9	     0xf8755ffffff	                            ja 0x4000434	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x40004df	      0xb801000000	                              mov eax, 1	       268	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40004e4	      0xe9ad010000	                           jmp 0x4000696	       268	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40004e9	        0x837d8401	               cmp dword [rbp - 0x7c], 1	       271	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40004ed	     0xf8577010000	                           jne 0x400066a	       271	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40004f3	    0x488b05000000	            mov rax, qword [0x040004fa] 	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x40004fa	          0x4885c0	                           test rax, rax	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x40004fd	            0x751e	                           jne 0x400051d	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x40004ff	      0xbf00000000	                              mov edi, 0	       279	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5	CALL_6
0x4000504	      0xe800000000	                          call 0x4000509	       279	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5	CALL_6
0x4000509	    0xc70500000000	               mov dword [0x04000513], 0	       280	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000513	      0xb801000000	                              mov eax, 1	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000518	      0xe979010000	                           jmp 0x4000696	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x400051d	    0x488b15000000	            mov rdx, qword [0x04000524] 	       284	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000524	    0x488b05000000	            mov rax, qword [0x0400052b] 	       284	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400052b	          0x4801d0	                            add rax, rdx	       284	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400052e	        0x488945c8	             mov qword [rbp - 0x38], rax	       284	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000532	    0x488b15000000	            mov rdx, qword [0x04000539] 	       285	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000539	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       285	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400053d	          0x4801d0	                            add rax, rdx	       285	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000540	        0x488945d0	             mov qword [rbp - 0x30], rax	       285	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000544	    0x488b05000000	            mov rax, qword [0x0400054b] 	       286	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400054b	    0x488905000000	            mov qword [0x04000552], rax 	       286	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000552	    0x8b0500000000	            mov eax, dword [0x04000558] 	       287	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000558	    0x890500000000	            mov dword [0x0400055e], eax 	       287	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400055e	    0x8b0500000000	            mov eax, dword [0x04000564] 	       288	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000564	    0x890500000000	            mov dword [0x0400056a], eax 	       288	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400056a	    0x488b15000000	            mov rdx, qword [0x04000571] 	       289	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_7
0x4000571	    0x488b0d000000	            mov rcx, qword [0x04000578] 	       289	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_7
0x4000578	    0x488b05000000	            mov rax, qword [0x0400057f] 	       289	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_7
0x400057f	          0x4889ce	                            mov rsi, rcx	       289	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_7
0x4000582	          0x4889c7	                            mov rdi, rax	       289	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_7
0x4000585	      0xe800000000	                          call 0x400058a	       289	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_7
0x400058a	    0x488b05000000	            mov rax, qword [0x04000591] 	       290	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000591	    0x488905000000	            mov qword [0x04000598], rax 	       290	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000598	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x400059f	      0xe99c000000	                           jmp 0x4000640	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x40005a4	    0x488b05000000	            mov rax, qword [0x040005ab] 	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005ab	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005ae	        0x48c1e203	                              shl rdx, 3	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005b2	          0x4801d0	                            add rax, rdx	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005b5	          0x488b00	                    mov rax, qword [rax]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005b8	        0x488945d8	             mov qword [rbp - 0x28], rax	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005bc	            0xeb77	                           jmp 0x4000635	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005be	    0x8b0500000000	            mov eax, dword [0x040005c4] 	       300	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	CALL_8
0x40005c4	            0x89c2	                            mov edx, eax	       300	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	CALL_8
0x40005c6	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       300	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	CALL_8
0x40005ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       300	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	CALL_8
0x40005ce	          0x4889ce	                            mov rsi, rcx	       300	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	CALL_8
0x40005d1	          0x4889c7	                            mov rdi, rax	       300	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	CALL_8
0x40005d4	      0xe800000000	                          call 0x40005d9	       300	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	CALL_8
0x40005d9	    0x8b0500000000	            mov eax, dword [0x040005df] 	       301	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005df	            0x89c0	                            mov eax, eax	       301	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005e1	        0x480145c8	            add qword [rbp - 0x38], rax 	       301	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       302	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005e9	        0x488945f8	                mov qword [rbp - 8], rax	       302	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40005ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x40005f1	        0x488b4020	            mov rax, qword [rax + 0x20] 	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x40005f5	        0x488945e0	             mov qword [rbp - 0x20], rax	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x40005f9	            0xeb28	                           jmp 0x4000623	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x40005fb	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       305	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9	CALL_9
0x40005ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       305	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9	CALL_9
0x4000603	      0xba18000000	                           mov edx, 0x18	       305	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9	CALL_9
0x4000608	          0x4889ce	                            mov rsi, rcx	       305	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9	CALL_9
0x400060b	          0x4889c7	                            mov rdi, rax	       305	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9	CALL_9
0x400060e	      0xe800000000	                          call 0x4000613	       305	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9	CALL_9
0x4000613	      0x488345d018	            add qword [rbp - 0x30], 0x18	       306	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000618	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x400061c	          0x488b00	                    mov rax, qword [rax]	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x400061f	        0x488945e0	             mov qword [rbp - 0x20], rax	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000623	      0x48837de000	               cmp qword [rbp - 0x20], 0	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000628	            0x75d1	                           jne 0x40005fb	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x400062a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x400062e	          0x488b00	                    mov rax, qword [rax]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000631	        0x488945d8	             mov qword [rbp - 0x28], rax	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000635	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x400063a	            0x7582	                           jne 0x40005be	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x400063c	        0x83459401	               add dword [rbp - 0x6c], 1	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000640	    0x8b0500000000	            mov eax, dword [0x04000646] 	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000646	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000649	     0xf8755ffffff	                            ja 0x40005a4	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x400064f	    0x488b15000000	            mov rdx, qword [0x04000656] 	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x4000656	    0x488b05000000	            mov rax, qword [0x0400065d] 	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x400065d	          0x4889d6	                            mov rsi, rdx	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x4000660	          0x4889c7	                            mov rdi, rax	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x4000663	      0xe800000000	                          call 0x4000668	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x4000668	            0xeb0d	                           jmp 0x4000677	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x400066a	        0x837d8402	               cmp dword [rbp - 0x7c], 2	       314	ldcref.c	ELSE_2	FUNCTION_3	ELSE_1	IF_6
0x400066e	            0x7407	                            je 0x4000677	       314	ldcref.c	ELSE_2	FUNCTION_3	ELSE_1	IF_6
0x4000670	      0xb800000000	                              mov eax, 0	       315	ldcref.c	ELSE_2	FUNCTION_3	ELSE_1	IF_6
0x4000675	            0xeb1f	                           jmp 0x4000696	       315	ldcref.c	ELSE_2	FUNCTION_3	ELSE_1	IF_6
0x4000677	    0x488b05000000	            mov rax, qword [0x0400067e] 	       317	ldcref.c	ELSE_2	FUNCTION_3	CALL_11
0x400067e	          0x4889c7	                            mov rdi, rax	       317	ldcref.c	ELSE_2	FUNCTION_3	CALL_11
0x4000681	      0xe800000000	                          call 0x4000686	       317	ldcref.c	ELSE_2	FUNCTION_3	CALL_11
0x4000686	    0x48c705000000	               mov qword [0x04000691], 0	       318	ldcref.c	ELSE_2	FUNCTION_3
0x4000691	      0xb801000000	                              mov eax, 1	       319	ldcref.c	ELSE_2	FUNCTION_3
0x4000696	              0xc9	                                   leave	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000697	              0xc3	                                     ret	       320	ldcref.c	ELSE_2	FUNCTION_3
