input_scrub_include_file	DO,0:IF,0:CALL,2:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	14
0x40003be	              0x55	                                push rbp	       253	input-scrub.c	FUNCTION_7
0x40003bf	          0x4889e5	                            mov rbp, rsp	       253	input-scrub.c	FUNCTION_7
0x40003c2	        0x4883ec10	                           sub rsp, 0x10	       253	input-scrub.c	FUNCTION_7
0x40003c6	        0x48897df8	                mov qword [rbp - 8], rdi	       253	input-scrub.c	FUNCTION_7
0x40003ca	        0x488975f0	             mov qword [rbp - 0x10], rsi	       253	input-scrub.c	FUNCTION_7
0x40003ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       254	input-scrub.c	FUNCTION_7	CALL_1
0x40003d2	          0x4889c7	                            mov rdi, rax	       254	input-scrub.c	FUNCTION_7	CALL_1
0x40003d5	      0xe8c9fcffff	               call sym.input_scrub_push	       254	input-scrub.c	FUNCTION_7	CALL_1
0x40003da	    0x488905000000	            mov qword [0x040003e1], rax 	       254	input-scrub.c	FUNCTION_7	CALL_1
0x40003e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       255	input-scrub.c	FUNCTION_7	CALL_2
0x40003e5	          0x4889c7	                            mov rdi, rax	       255	input-scrub.c	FUNCTION_7	CALL_2
0x40003e8	      0xe800000000	                          call 0x40003ed	       255	input-scrub.c	FUNCTION_7	CALL_2
0x40003ed	              0xc9	                                   leave	       256	input-scrub.c	FUNCTION_7
0x40003ee	              0xc3	                                     ret	       256	input-scrub.c	FUNCTION_7
input_scrub_new_file	DO,0:IF,0:CALL,2:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	27
0x4000351	              0x55	                                push rbp	       238	input-scrub.c	FUNCTION_6
0x4000352	          0x4889e5	                            mov rbp, rsp	       238	input-scrub.c	FUNCTION_6
0x4000355	        0x4883ec10	                           sub rsp, 0x10	       238	input-scrub.c	FUNCTION_6
0x4000359	        0x48897df8	                mov qword [rbp - 8], rdi	       238	input-scrub.c	FUNCTION_6
0x400035d	     0xfb605000000	           movzx eax, byte [0x04000364] 	       239	input-scrub.c	FUNCTION_6	CALL_1
0x4000364	            0x84c0	                             test al, al	       239	input-scrub.c	FUNCTION_6	CALL_1
0x4000366	           0xf94c0	                                 sete al	       239	input-scrub.c	FUNCTION_6	CALL_1
0x4000369	           0xfb6d0	                           movzx edx, al	       239	input-scrub.c	FUNCTION_6	CALL_1
0x400036c	        0x488b45f8	                mov rax, qword [rbp - 8]	       239	input-scrub.c	FUNCTION_6	CALL_1
0x4000370	            0x89d6	                            mov esi, edx	       239	input-scrub.c	FUNCTION_6	CALL_1
0x4000372	          0x4889c7	                            mov rdi, rax	       239	input-scrub.c	FUNCTION_6	CALL_1
0x4000375	      0xe800000000	                          call 0x400037a	       239	input-scrub.c	FUNCTION_6	CALL_1
0x400037a	        0x488b45f8	                mov rax, qword [rbp - 8]	       240	input-scrub.c	FUNCTION_6	CALL_2
0x400037e	           0xfb600	                   movzx eax, byte [rax]	       240	input-scrub.c	FUNCTION_6	CALL_2
0x4000381	            0x84c0	                             test al, al	       240	input-scrub.c	FUNCTION_6	CALL_2
0x4000383	            0x750c	                           jne 0x4000391	       240	input-scrub.c	FUNCTION_6	CALL_2
0x4000385	      0xbf00000000	                              mov edi, 0	       240	input-scrub.c	FUNCTION_6	CALL_2
0x400038a	      0xe800000000	                          call 0x400038f	       240	input-scrub.c	FUNCTION_6	CALL_2
0x400038f	            0xeb04	                           jmp 0x4000395	       240	input-scrub.c	FUNCTION_6	CALL_2
0x4000391	        0x488b45f8	                mov rax, qword [rbp - 8]	       240	input-scrub.c	FUNCTION_6	CALL_2
0x4000395	    0x488905000000	            mov qword [0x0400039c], rax 	       240	input-scrub.c	FUNCTION_6	CALL_2
0x400039c	    0xc70500000000	               mov dword [0x040003a6], 0	       241	input-scrub.c	FUNCTION_6
0x40003a6	    0x48c705000000	               mov qword [0x040003b1], 0	       243	input-scrub.c	FUNCTION_6
0x40003b1	    0x488b05000000	            mov rax, qword [0x040003b8] 	       244	input-scrub.c	FUNCTION_6
0x40003b8	        0x4883c001	                              add rax, 1	       244	input-scrub.c	FUNCTION_6
0x40003bc	              0xc9	                                   leave	       245	input-scrub.c	FUNCTION_6
0x40003bd	              0xc3	                                     ret	       245	input-scrub.c	FUNCTION_6
new_logical_line	DO,0:IF,0:CALL,1:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	13
0x400099c	              0x55	                                push rbp	       485	input-scrub.c	ELSE_2	FUNCTION_14
0x400099d	          0x4889e5	                            mov rbp, rsp	       485	input-scrub.c	ELSE_2	FUNCTION_14
0x40009a0	        0x4883ec10	                           sub rsp, 0x10	       485	input-scrub.c	ELSE_2	FUNCTION_14
0x40009a4	        0x48897df8	                mov qword [rbp - 8], rdi	       485	input-scrub.c	ELSE_2	FUNCTION_14
0x40009a8	          0x8975f4	              mov dword [rbp - 0xc], esi	       485	input-scrub.c	ELSE_2	FUNCTION_14
0x40009ab	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       486	input-scrub.c	ELSE_2	FUNCTION_14	CALL_1
0x40009ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       486	input-scrub.c	ELSE_2	FUNCTION_14	CALL_1
0x40009b2	      0xba00000000	                              mov edx, 0	       486	input-scrub.c	ELSE_2	FUNCTION_14	CALL_1
0x40009b7	            0x89ce	                            mov esi, ecx	       486	input-scrub.c	ELSE_2	FUNCTION_14	CALL_1
0x40009b9	          0x4889c7	                            mov rdi, rax	       486	input-scrub.c	ELSE_2	FUNCTION_14	CALL_1
0x40009bc	      0xe800000000	                          call 0x40009c1	       486	input-scrub.c	ELSE_2	FUNCTION_14	CALL_1
0x40009c1	              0xc9	                                   leave	       487	input-scrub.c	ELSE_2	FUNCTION_14
0x40009c2	              0xc3	                                     ret	       487	input-scrub.c	ELSE_2	FUNCTION_14
input_scrub_pop	DO,0:IF,0:CALL,4:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	62
0x40001c3	              0x55	                                push rbp	       184	input-scrub.c	FUNCTION_3
0x40001c4	          0x4889e5	                            mov rbp, rsp	       184	input-scrub.c	FUNCTION_3
0x40001c7	        0x4883ec20	                           sub rsp, 0x20	       184	input-scrub.c	FUNCTION_3
0x40001cb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       184	input-scrub.c	FUNCTION_3
0x40001cf	      0xe800000000	                          call 0x40001d4	       187	input-scrub.c	FUNCTION_3	CALL_1
0x40001d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       189	input-scrub.c	FUNCTION_3	CALL_2
0x40001d8	        0x488b4070	            mov rax, qword [rax + 0x70] 	       189	input-scrub.c	FUNCTION_3	CALL_2
0x40001dc	          0x4889c7	                            mov rdi, rax	       189	input-scrub.c	FUNCTION_3	CALL_2
0x40001df	      0xe800000000	                          call 0x40001e4	       189	input-scrub.c	FUNCTION_3	CALL_2
0x40001e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       190	input-scrub.c	FUNCTION_3
0x40001e8	        0x488b4078	            mov rax, qword [rax + 0x78] 	       190	input-scrub.c	FUNCTION_3
0x40001ec	        0x488945f8	                mov qword [rbp - 8], rax	       190	input-scrub.c	FUNCTION_3
0x40001f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       191	input-scrub.c	FUNCTION_3
0x40001f4	          0x488b00	                    mov rax, qword [rax]	       191	input-scrub.c	FUNCTION_3
0x40001f7	    0x488905000000	            mov qword [0x040001fe], rax 	       191	input-scrub.c	FUNCTION_3
0x40001fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       192	input-scrub.c	FUNCTION_3
0x4000202	        0x488b4020	            mov rax, qword [rax + 0x20] 	       192	input-scrub.c	FUNCTION_3
0x4000206	    0x488905000000	            mov qword [0x0400020d], rax 	       192	input-scrub.c	FUNCTION_3
0x400020d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       193	input-scrub.c	FUNCTION_3
0x4000211	        0x488b4028	            mov rax, qword [rax + 0x28] 	       193	input-scrub.c	FUNCTION_3
0x4000215	    0x488905000000	            mov qword [0x0400021c], rax 	       193	input-scrub.c	FUNCTION_3
0x400021c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       194	input-scrub.c	FUNCTION_3
0x4000220	        0x488b4030	            mov rax, qword [rax + 0x30] 	       194	input-scrub.c	FUNCTION_3
0x4000224	    0x488905000000	            mov qword [0x0400022b], rax 	       194	input-scrub.c	FUNCTION_3
0x400022b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       195	input-scrub.c	FUNCTION_3
0x400022f	          0x8b4038	            mov eax, dword [rax + 0x38] 	       195	input-scrub.c	FUNCTION_3
0x4000232	    0x890500000000	            mov dword [0x04000238], eax 	       195	input-scrub.c	FUNCTION_3
0x4000238	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       196	input-scrub.c	FUNCTION_3
0x400023c	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       196	input-scrub.c	FUNCTION_3
0x400023f	    0x890500000000	            mov dword [0x04000245], eax 	       196	input-scrub.c	FUNCTION_3
0x4000245	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       197	input-scrub.c	FUNCTION_3
0x4000249	        0x488b4040	            mov rax, qword [rax + 0x40] 	       197	input-scrub.c	FUNCTION_3
0x400024d	    0x488905000000	            mov qword [0x04000254], rax 	       197	input-scrub.c	FUNCTION_3
0x4000254	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       198	input-scrub.c	FUNCTION_3
0x4000258	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       198	input-scrub.c	FUNCTION_3
0x400025c	    0x488915000000	            mov qword [0x04000263], rdx 	       198	input-scrub.c	FUNCTION_3
0x4000263	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       198	input-scrub.c	FUNCTION_3
0x4000267	    0x488915000000	            mov qword [0x0400026e], rdx 	       198	input-scrub.c	FUNCTION_3
0x400026e	        0x488b4058	            mov rax, qword [rax + 0x58] 	       198	input-scrub.c	FUNCTION_3
0x4000272	    0x488905000000	            mov qword [0x04000279], rax 	       198	input-scrub.c	FUNCTION_3
0x4000279	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       199	input-scrub.c	FUNCTION_3
0x400027d	          0x8b4060	            mov eax, dword [rax + 0x60] 	       199	input-scrub.c	FUNCTION_3
0x4000280	    0x890500000000	            mov dword [0x04000286], eax 	       199	input-scrub.c	FUNCTION_3
0x4000286	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       200	input-scrub.c	FUNCTION_3
0x400028a	        0x488b4008	                mov rax, qword [rax + 8]	       200	input-scrub.c	FUNCTION_3
0x400028e	    0x488905000000	            mov qword [0x04000295], rax 	       200	input-scrub.c	FUNCTION_3
0x4000295	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       201	input-scrub.c	FUNCTION_3
0x4000299	        0x488b4010	            mov rax, qword [rax + 0x10] 	       201	input-scrub.c	FUNCTION_3
0x400029d	    0x488905000000	            mov qword [0x040002a4], rax 	       201	input-scrub.c	FUNCTION_3
0x40002a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       202	input-scrub.c	FUNCTION_3
0x40002a8	        0x488b4068	            mov rax, qword [rax + 0x68] 	       202	input-scrub.c	FUNCTION_3
0x40002ac	    0x488905000000	            mov qword [0x040002b3], rax 	       202	input-scrub.c	FUNCTION_3
0x40002b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       203	input-scrub.c	FUNCTION_3	CALL_3
0x40002b7	        0x4883c018	                           add rax, 0x18	       203	input-scrub.c	FUNCTION_3	CALL_3
0x40002bb	           0xfb600	                   movzx eax, byte [rax]	       203	input-scrub.c	FUNCTION_3	CALL_3
0x40002be	    0x880500000000	               mov byte [0x040002c4], al	       203	input-scrub.c	FUNCTION_3	CALL_3
0x40002c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       205	input-scrub.c	FUNCTION_3	CALL_4
0x40002c8	          0x4889c7	                            mov rdi, rax	       205	input-scrub.c	FUNCTION_3	CALL_4
0x40002cb	      0xe800000000	                          call 0x40002d0	       205	input-scrub.c	FUNCTION_3	CALL_4
0x40002d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       206	input-scrub.c	FUNCTION_3
0x40002d4	              0xc9	                                   leave	       207	input-scrub.c	FUNCTION_3
0x40002d5	              0xc3	                                     ret	       207	input-scrub.c	FUNCTION_3
input_scrub_close	DO,0:IF,0:CALL,1:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	8
0x40004fb	              0x55	                                push rbp	       304	input-scrub.c	FUNCTION_9
0x40004fc	          0x4889e5	                            mov rbp, rsp	       304	input-scrub.c	FUNCTION_9
0x40004ff	      0xe800000000	                          call 0x4000504	       305	input-scrub.c	FUNCTION_9	CALL_1
0x4000504	    0xc70500000000	               mov dword [0x0400050e], 0	       306	input-scrub.c	FUNCTION_9
0x400050e	    0xc70500000000	     mov dword [0x04000518], 0xffffffff 	       307	input-scrub.c	FUNCTION_9
0x4000518	              0x90	                                     nop	       308	input-scrub.c	FUNCTION_9
0x4000519	              0x5d	                                 pop rbp	       308	input-scrub.c	FUNCTION_9
0x400051a	              0xc3	                                     ret	       308	input-scrub.c	FUNCTION_9
input_scrub_end	DO,0:IF,1:CALL,2:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	13
0x400031f	              0x55	                                push rbp	       224	input-scrub.c	FUNCTION_5
0x4000320	          0x4889e5	                            mov rbp, rsp	       224	input-scrub.c	FUNCTION_5
0x4000323	    0x488b05000000	            mov rax, qword [0x0400032a] 	       225	input-scrub.c	FUNCTION_5	IF_1
0x400032a	          0x4885c0	                           test rax, rax	       225	input-scrub.c	FUNCTION_5	IF_1
0x400032d	            0x741f	                            je 0x400034e	       225	input-scrub.c	FUNCTION_5	IF_1
0x400032f	    0x488b05000000	            mov rax, qword [0x04000336] 	       227	input-scrub.c	FUNCTION_5	IF_1	CALL_1
0x4000336	          0x4889c7	                            mov rdi, rax	       227	input-scrub.c	FUNCTION_5	IF_1	CALL_1
0x4000339	      0xe800000000	                          call 0x400033e	       227	input-scrub.c	FUNCTION_5	IF_1	CALL_1
0x400033e	    0x48c705000000	               mov qword [0x04000349], 0	       228	input-scrub.c	FUNCTION_5	IF_1
0x4000349	      0xe800000000	                          call 0x400034e	       229	input-scrub.c	FUNCTION_5	IF_1	CALL_2
0x400034e	              0x90	                                     nop	       231	input-scrub.c	FUNCTION_5
0x400034f	              0x5d	                                 pop rbp	       231	input-scrub.c	FUNCTION_5
0x4000350	              0xc3	                                     ret	       231	input-scrub.c	FUNCTION_5
as_where	DO,0:IF,2:CALL,1:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	25
0x4000a0b	              0x55	                                push rbp	       511	input-scrub.c	FUNCTION_16
0x4000a0c	          0x4889e5	                            mov rbp, rsp	       511	input-scrub.c	FUNCTION_16
0x4000a0f	        0x4883ec08	                              sub rsp, 8	       511	input-scrub.c	FUNCTION_16
0x4000a13	        0x48897df8	                mov qword [rbp - 8], rdi	       511	input-scrub.c	FUNCTION_16
0x4000a17	    0x488b05000000	            mov rax, qword [0x04000a1e] 	       512	input-scrub.c	FUNCTION_16	IF_1
0x4000a1e	          0x4885c0	                           test rax, rax	       512	input-scrub.c	FUNCTION_16	IF_1
0x4000a21	            0x742f	                            je 0x4000a52	       512	input-scrub.c	FUNCTION_16	IF_1
0x4000a23	      0x48837df800	                  cmp qword [rbp - 8], 0	       513	input-scrub.c	FUNCTION_16	IF_1
0x4000a28	            0x740a	                            je 0x4000a34	       513	input-scrub.c	FUNCTION_16	IF_1
0x4000a2a	    0x8b0500000000	            mov eax, dword [0x04000a30] 	       513	input-scrub.c	FUNCTION_16	IF_1
0x4000a30	            0x85c0	                           test eax, eax	       513	input-scrub.c	FUNCTION_16	IF_1
0x4000a32	            0x781e	                            js 0x4000a52	       513	input-scrub.c	FUNCTION_16	IF_1
0x4000a34	      0x48837df800	                  cmp qword [rbp - 8], 0	       515	input-scrub.c	FUNCTION_16	IF_1	IF_2
0x4000a39	            0x740e	                            je 0x4000a49	       515	input-scrub.c	FUNCTION_16	IF_1	IF_2
0x4000a3b	    0x8b0500000000	            mov eax, dword [0x04000a41] 	       516	input-scrub.c	FUNCTION_16	IF_1	IF_2
0x4000a41	            0x89c2	                            mov edx, eax	       516	input-scrub.c	FUNCTION_16	IF_1	IF_2
0x4000a43	        0x488b45f8	                mov rax, qword [rbp - 8]	       516	input-scrub.c	FUNCTION_16	IF_1	IF_2
0x4000a47	            0x8910	                    mov dword [rax], edx	       516	input-scrub.c	FUNCTION_16	IF_1	IF_2
0x4000a49	    0x488b05000000	            mov rax, qword [0x04000a50] 	       517	input-scrub.c	FUNCTION_16	IF_1
0x4000a50	            0xeb0c	                           jmp 0x4000a5e	       517	input-scrub.c	FUNCTION_16	IF_1
0x4000a52	        0x488b45f8	                mov rax, qword [rbp - 8]	       520	input-scrub.c	FUNCTION_16	CALL_1
0x4000a56	          0x4889c7	                            mov rdi, rax	       520	input-scrub.c	FUNCTION_16	CALL_1
0x4000a59	      0xe800000000	                          call 0x4000a5e	       520	input-scrub.c	FUNCTION_16	CALL_1
0x4000a5e	              0xc9	                                   leave	       521	input-scrub.c	FUNCTION_16
0x4000a5f	              0xc3	                                     ret	       521	input-scrub.c	FUNCTION_16
input_scrub_next_buffer	DO,0:IF,10:CALL,15:WHILE,1:functions,0:SWITCH,0:FOR,1:ELSE,1	176
0x400051b	              0x55	                                push rbp	       312	input-scrub.c	FUNCTION_10
0x400051c	          0x4889e5	                            mov rbp, rsp	       312	input-scrub.c	FUNCTION_10
0x400051f	              0x53	                                push rbx	       312	input-scrub.c	FUNCTION_10
0x4000520	        0x4883ec38	                           sub rsp, 0x38	       312	input-scrub.c	FUNCTION_10
0x4000524	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       312	input-scrub.c	FUNCTION_10
0x4000528	    0x488b05000000	            mov rax, qword [0x0400052f] 	       315	input-scrub.c	FUNCTION_10	IF_1
0x400052f	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       315	input-scrub.c	FUNCTION_10	IF_1
0x4000533	     0xf84df000000	                            je 0x4000618	       315	input-scrub.c	FUNCTION_10	IF_1
0x4000539	    0x488b15000000	            mov rdx, qword [0x04000540] 	       317	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000540	    0x488b05000000	            mov rax, qword [0x04000547] 	       317	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000547	          0x4839c2	                            cmp rdx, rax	       317	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x400054a	            0x7777	                            ja 0x40005c3	       317	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x400054c	      0xbf00000000	                              mov edi, 0	       319	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x4000551	      0xe800000000	                          call 0x4000556	       319	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x4000556	    0x8b0500000000	            mov eax, dword [0x0400055c] 	       320	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_3
0x400055c	            0x85c0	                           test eax, eax	       320	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_3
0x400055e	            0x740d	                            je 0x400056d	       320	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_3
0x4000560	    0x8b0500000000	            mov eax, dword [0x04000566] 	       322	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_3	CALL_2
0x4000566	            0x89c7	                            mov edi, eax	       322	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_3	CALL_2
0x4000568	      0xe800000000	                          call 0x400056d	       322	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_3	CALL_2
0x400056d	    0x8b0500000000	            mov eax, dword [0x04000573] 	       329	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000573	          0x83e801	                              sub eax, 1	       329	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000576	    0x890500000000	            mov dword [0x0400057c], eax 	       329	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x400057c	    0x48c705000000	               mov qword [0x04000587], 0	       330	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000587	    0x48c705000000	               mov qword [0x04000592], 0	       331	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000592	    0x488b05000000	            mov rax, qword [0x04000599] 	       332	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_4
0x4000599	          0x4885c0	                           test rax, rax	       332	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_4
0x400059c	            0x7419	                            je 0x40005b7	       332	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_4
0x400059e	    0x488b05000000	            mov rax, qword [0x040005a5] 	       333	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_4
0x40005a5	          0x4889c7	                            mov rdi, rax	       333	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_4
0x40005a8	      0xe816fcffff	                call sym.input_scrub_pop	       333	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_4
0x40005ad	          0x4889c2	                            mov rdx, rax	       333	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_4
0x40005b0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       333	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_4
0x40005b4	          0x488910	                    mov qword [rax], rdx	       333	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_4
0x40005b7	    0x488b05000000	            mov rax, qword [0x040005be] 	       334	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x40005be	      0xe97f020000	                           jmp 0x4000842	       334	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x40005c3	    0x488b15000000	            mov rdx, qword [0x040005ca] 	       337	input-scrub.c	FUNCTION_10	IF_1
0x40005ca	    0x488b05000000	            mov rax, qword [0x040005d1] 	       337	input-scrub.c	FUNCTION_10	IF_1
0x40005d1	          0x4801d0	                            add rax, rdx	       337	input-scrub.c	FUNCTION_10	IF_1
0x40005d4	    0x488905000000	            mov qword [0x040005db], rax 	       337	input-scrub.c	FUNCTION_10	IF_1
0x40005db	    0x48c705000000	               mov qword [0x040005e6], 0	       338	input-scrub.c	FUNCTION_10	IF_1
0x40005e6	    0x488b15000000	            mov rdx, qword [0x040005ed] 	       339	input-scrub.c	FUNCTION_10	IF_1
0x40005ed	    0x488b05000000	            mov rax, qword [0x040005f4] 	       339	input-scrub.c	FUNCTION_10	IF_1
0x40005f4	          0x4801c2	                            add rdx, rax	       339	input-scrub.c	FUNCTION_10	IF_1
0x40005f7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       339	input-scrub.c	FUNCTION_10	IF_1
0x40005fb	          0x488910	                    mov qword [rax], rdx	       339	input-scrub.c	FUNCTION_10	IF_1
0x40005fe	    0x488b05000000	            mov rax, qword [0x04000605] 	       340	input-scrub.c	FUNCTION_10	IF_1
0x4000605	    0x488905000000	            mov qword [0x0400060c], rax 	       340	input-scrub.c	FUNCTION_10	IF_1
0x400060c	    0x488b05000000	            mov rax, qword [0x04000613] 	       341	input-scrub.c	FUNCTION_10	IF_1
0x4000613	      0xe92a020000	                           jmp 0x4000842	       341	input-scrub.c	FUNCTION_10	IF_1
0x4000618	    0x488b05000000	            mov rax, qword [0x0400061f] 	       344	input-scrub.c	FUNCTION_10	IF_5
0x400061f	          0x4885c0	                           test rax, rax	       344	input-scrub.c	FUNCTION_10	IF_5
0x4000622	            0x7438	                            je 0x400065c	       344	input-scrub.c	FUNCTION_10	IF_5
0x4000624	    0x488b15000000	            mov rdx, qword [0x0400062b] 	       346	input-scrub.c	FUNCTION_10	IF_5	CALL_5
0x400062b	    0x488b05000000	            mov rax, qword [0x04000632] 	       346	input-scrub.c	FUNCTION_10	IF_5	CALL_5
0x4000632	    0x488b0d000000	            mov rcx, qword [0x04000639] 	       346	input-scrub.c	FUNCTION_10	IF_5	CALL_5
0x4000639	        0x4883c101	                              add rcx, 1	       346	input-scrub.c	FUNCTION_10	IF_5	CALL_5
0x400063d	          0x4889c6	                            mov rsi, rax	       346	input-scrub.c	FUNCTION_10	IF_5	CALL_5
0x4000640	          0x4889cf	                            mov rdi, rcx	       346	input-scrub.c	FUNCTION_10	IF_5	CALL_5
0x4000643	      0xe800000000	                          call 0x4000648	       346	input-scrub.c	FUNCTION_10	IF_5	CALL_5
0x4000648	    0x488b05000000	            mov rax, qword [0x0400064f] 	       347	input-scrub.c	FUNCTION_10	IF_5	CALL_6
0x400064f	        0x488d5001	                      lea rdx, [rax + 1]	       347	input-scrub.c	FUNCTION_10	IF_5	CALL_6
0x4000653	     0xfb605000000	           movzx eax, byte [0x0400065a] 	       347	input-scrub.c	FUNCTION_10	IF_5	CALL_6
0x400065a	            0x8802	                      mov byte [rdx], al	       347	input-scrub.c	FUNCTION_10	IF_5	CALL_6
0x400065c	    0x488b05000000	            mov rax, qword [0x04000663] 	       353	input-scrub.c	FUNCTION_10	WHILE_1
0x4000663	    0x488b15000000	            mov rdx, qword [0x0400066a] 	       353	input-scrub.c	FUNCTION_10	WHILE_1
0x400066a	        0x4883c201	                              add rdx, 1	       353	input-scrub.c	FUNCTION_10	WHILE_1
0x400066e	          0x4801d0	                            add rax, rdx	       353	input-scrub.c	FUNCTION_10	WHILE_1
0x4000671	        0x488945e8	             mov qword [rbp - 0x18], rax	       353	input-scrub.c	FUNCTION_10	WHILE_1
0x4000675	    0x488b05000000	            mov rax, qword [0x0400067c] 	       355	input-scrub.c	FUNCTION_10	WHILE_1
0x400067c	        0x488d5001	                      lea rdx, [rax + 1]	       355	input-scrub.c	FUNCTION_10	WHILE_1
0x4000680	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       355	input-scrub.c	FUNCTION_10	WHILE_1
0x4000684	          0x488910	                    mov qword [rax], rdx	       355	input-scrub.c	FUNCTION_10	WHILE_1
0x4000687	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       356	input-scrub.c	FUNCTION_10	WHILE_1	CALL_7
0x400068b	          0x4889c7	                            mov rdi, rax	       356	input-scrub.c	FUNCTION_10	WHILE_1	CALL_7
0x400068e	      0xe800000000	                          call 0x4000693	       356	input-scrub.c	FUNCTION_10	WHILE_1	CALL_7
0x4000693	        0x488945d8	             mov qword [rbp - 0x28], rax	       356	input-scrub.c	FUNCTION_10	WHILE_1	CALL_7
0x4000697	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       357	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x400069c	            0x7559	                           jne 0x40006f7	       357	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x400069e	    0x488b05000000	            mov rax, qword [0x040006a5] 	       359	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	IF_7
0x40006a5	          0x4885c0	                           test rax, rax	       359	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	IF_7
0x40006a8	     0xf8448010000	                            je 0x40007f6	       359	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	IF_7
0x40006ae	      0xbf00000000	                              mov edi, 0	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x40006b3	      0xe800000000	                          call 0x40006b8	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x40006b8	          0x4889c7	                            mov rdi, rax	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x40006bb	      0xb800000000	                              mov eax, 0	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x40006c0	      0xe800000000	                          call 0x40006c5	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x40006c5	    0x488b05000000	            mov rax, qword [0x040006cc] 	       364	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006cc	    0x488b15000000	            mov rdx, qword [0x040006d3] 	       364	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006d3	        0x4883c201	                              add rdx, 1	       364	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006d7	          0x4801d0	                            add rax, rdx	       364	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006da	        0x488945e0	             mov qword [rbp - 0x20], rax	       364	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       365	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006e2	        0x488d5001	                      lea rdx, [rax + 1]	       365	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006e6	        0x488955e0	             mov qword [rbp - 0x20], rdx	       365	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006ea	          0xc6000a	                     mov byte [rax], 0xa	       365	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       366	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006f1	        0x488945d8	             mov qword [rbp - 0x28], rax	       366	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006f5	            0xeb34	                           jmp 0x400072b	       366	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x40006f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       371	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1
0x40006fb	          0xc60000	                       mov byte [rax], 0	       371	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1
0x40006fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x4000702	        0x4883e801	                              sub rax, 1	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x4000706	        0x488945e0	             mov qword [rbp - 0x20], rax	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x400070a	            0xeb0f	                           jmp 0x400071b	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x400070c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       375	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1	IF_8
0x4000710	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       375	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1	IF_8
0x4000714	            0x726a	                            jb 0x4000780	       375	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1	IF_8
0x4000716	      0x48836de001	               sub qword [rbp - 0x20], 1	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x400071b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x400071f	           0xfb600	                   movzx eax, byte [rax]	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x4000722	            0x3c0a	                             cmp al, 0xa	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x4000724	            0x75e6	                           jne 0x400070c	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x4000726	      0x488345e001	               add qword [rbp - 0x20], 1	       377	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1
0x400072b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       381	input-scrub.c	FUNCTION_10	WHILE_1
0x400072f	    0x488905000000	            mov qword [0x04000736], rax 	       381	input-scrub.c	FUNCTION_10	WHILE_1
0x4000736	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       382	input-scrub.c	FUNCTION_10	WHILE_1
0x400073a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       382	input-scrub.c	FUNCTION_10	WHILE_1
0x400073e	          0x4829c2	                            sub rdx, rax	       382	input-scrub.c	FUNCTION_10	WHILE_1
0x4000741	          0x4889d0	                            mov rax, rdx	       382	input-scrub.c	FUNCTION_10	WHILE_1
0x4000744	    0x488905000000	            mov qword [0x0400074b], rax 	       382	input-scrub.c	FUNCTION_10	WHILE_1
0x400074b	    0x488b05000000	            mov rax, qword [0x04000752] 	       385	input-scrub.c	FUNCTION_10	WHILE_1	CALL_10
0x4000752	           0xfb600	                   movzx eax, byte [rax]	       385	input-scrub.c	FUNCTION_10	WHILE_1	CALL_10
0x4000755	    0x880500000000	               mov byte [0x0400075b], al	       385	input-scrub.c	FUNCTION_10	WHILE_1	CALL_10
0x400075b	    0x488b05000000	            mov rax, qword [0x04000762] 	       386	input-scrub.c	FUNCTION_10	WHILE_1	CALL_11
0x4000762	      0xba01000000	                              mov edx, 1	       386	input-scrub.c	FUNCTION_10	WHILE_1	CALL_11
0x4000767	      0xbe00000000	                              mov esi, 0	       386	input-scrub.c	FUNCTION_10	WHILE_1	CALL_11
0x400076c	          0x4889c7	                            mov rdi, rax	       386	input-scrub.c	FUNCTION_10	WHILE_1	CALL_11
0x400076f	      0xe800000000	                          call 0x4000774	       386	input-scrub.c	FUNCTION_10	WHILE_1	CALL_11
0x4000774	    0x488b05000000	            mov rax, qword [0x0400077b] 	       387	input-scrub.c	FUNCTION_10	WHILE_1
0x400077b	      0xe9c2000000	                           jmp 0x4000842	       387	input-scrub.c	FUNCTION_10	WHILE_1
0x4000780	              0x90	                                     nop	       376	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1	IF_8
0x4000781	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       391	input-scrub.c	FUNCTION_10	WHILE_1
0x4000785	    0x488b15000000	            mov rdx, qword [0x0400078c] 	       391	input-scrub.c	FUNCTION_10	WHILE_1
0x400078c	        0x4883c201	                              add rdx, 1	       391	input-scrub.c	FUNCTION_10	WHILE_1
0x4000790	          0x4829d0	                            sub rax, rdx	       391	input-scrub.c	FUNCTION_10	WHILE_1
0x4000793	    0x488905000000	            mov qword [0x0400079a], rax 	       391	input-scrub.c	FUNCTION_10	WHILE_1
0x400079a	    0x488b1d000000	            mov rbx, qword [0x040007a1] 	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40007a1	      0xe800000000	                          call 0x40007a6	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40007a6	          0x4829c3	                            sub rbx, rax	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40007a9	          0x4889da	                            mov rdx, rbx	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40007ac	    0x488b05000000	            mov rax, qword [0x040007b3] 	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40007b3	          0x4839c2	                            cmp rdx, rax	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40007b6	     0xf83a0feffff	                           jae 0x400065c	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40007bc	    0x488b05000000	            mov rax, qword [0x040007c3] 	       396	input-scrub.c	FUNCTION_10	WHILE_1	IF_9
0x40007c3	          0x4801c0	                            add rax, rax	       396	input-scrub.c	FUNCTION_10	WHILE_1	IF_9
0x40007c6	    0x488905000000	            mov qword [0x040007cd], rax 	       396	input-scrub.c	FUNCTION_10	WHILE_1	IF_9
0x40007cd	    0x488b05000000	            mov rax, qword [0x040007d4] 	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x40007d4	        0x488d5003	                      lea rdx, [rax + 3]	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x40007d8	    0x488b05000000	            mov rax, qword [0x040007df] 	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x40007df	          0x4889d6	                            mov rsi, rdx	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x40007e2	          0x4889c7	                            mov rdi, rax	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x40007e5	      0xe800000000	                          call 0x40007ea	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x40007ea	    0x488905000000	            mov qword [0x040007f1], rax 	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x40007f1	      0xe966feffff	                           jmp 0x400065c	       401	input-scrub.c	FUNCTION_10	WHILE_1
0x40007f6	              0x90	                                     nop	       361	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	IF_7
0x40007f7	    0x8b0500000000	            mov eax, dword [0x040007fd] 	       404	input-scrub.c	FUNCTION_10	CALL_14
0x40007fd	            0x85c0	                           test eax, eax	       404	input-scrub.c	FUNCTION_10	CALL_14
0x40007ff	            0x740a	                            je 0x400080b	       404	input-scrub.c	FUNCTION_10	CALL_14
0x4000801	      0xbf00000000	                              mov edi, 0	       404	input-scrub.c	FUNCTION_10	CALL_14
0x4000806	      0xe800000000	                          call 0x400080b	       404	input-scrub.c	FUNCTION_10	CALL_14
0x400080b	    0x48c705000000	               mov qword [0x04000816], 0	       407	input-scrub.c	FUNCTION_10
0x4000816	    0x488b05000000	            mov rax, qword [0x0400081d] 	       408	input-scrub.c	FUNCTION_10	IF_10
0x400081d	          0x4885c0	                           test rax, rax	       408	input-scrub.c	FUNCTION_10	IF_10
0x4000820	            0x7419	                            je 0x400083b	       408	input-scrub.c	FUNCTION_10	IF_10
0x4000822	    0x488b05000000	            mov rax, qword [0x04000829] 	       409	input-scrub.c	FUNCTION_10	CALL_15
0x4000829	          0x4889c7	                            mov rdi, rax	       409	input-scrub.c	FUNCTION_10	CALL_15
0x400082c	      0xe892f9ffff	                call sym.input_scrub_pop	       409	input-scrub.c	FUNCTION_10	CALL_15
0x4000831	          0x4889c2	                            mov rdx, rax	       409	input-scrub.c	FUNCTION_10	CALL_15
0x4000834	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       409	input-scrub.c	FUNCTION_10	CALL_15
0x4000838	          0x488910	                    mov qword [rax], rdx	       409	input-scrub.c	FUNCTION_10	CALL_15
0x400083b	    0x488b05000000	            mov rax, qword [0x04000842] 	       411	input-scrub.c	FUNCTION_10
0x4000842	        0x4883c438	                           add rsp, 0x38	       412	input-scrub.c	FUNCTION_10
0x4000846	              0x5b	                                 pop rbx	       412	input-scrub.c	FUNCTION_10
0x4000847	              0x5d	                                 pop rbp	       412	input-scrub.c	FUNCTION_10
0x4000848	              0xc3	                                     ret	       412	input-scrub.c	FUNCTION_10
input_scrub_reinit	DO,0:IF,0:CALL,4:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	21
0x4000040	              0x55	                                push rbp	       138	input-scrub.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       138	input-scrub.c	FUNCTION_1
0x4000044	      0xe800000000	                          call 0x4000049	       139	input-scrub.c	FUNCTION_1	CALL_1
0x4000049	    0xc70500000000	     mov dword [0x04000053], 0xffffffff 	       140	input-scrub.c	FUNCTION_1
0x4000053	    0x48c705000000	               mov qword [0x0400005e], 0	       141	input-scrub.c	FUNCTION_1
0x400005e	      0xe800000000	                          call 0x4000063	       143	input-scrub.c	FUNCTION_1	CALL_2
0x4000063	          0x4801c0	                            add rax, rax	       143	input-scrub.c	FUNCTION_1	CALL_2
0x4000066	    0x488905000000	            mov qword [0x0400006d], rax 	       143	input-scrub.c	FUNCTION_1	CALL_2
0x400006d	    0x488b05000000	            mov rax, qword [0x04000074] 	       144	input-scrub.c	FUNCTION_1	CALL_3
0x4000074	        0x4883c003	                              add rax, 3	       144	input-scrub.c	FUNCTION_1	CALL_3
0x4000078	          0x4889c7	                            mov rdi, rax	       144	input-scrub.c	FUNCTION_1	CALL_3
0x400007b	      0xe800000000	                          call 0x4000080	       144	input-scrub.c	FUNCTION_1	CALL_3
0x4000080	    0x488905000000	            mov qword [0x04000087], rax 	       144	input-scrub.c	FUNCTION_1	CALL_3
0x4000087	    0x488b05000000	            mov rax, qword [0x0400008e] 	       145	input-scrub.c	FUNCTION_1	CALL_4
0x400008e	      0xba01000000	                              mov edx, 1	       145	input-scrub.c	FUNCTION_1	CALL_4
0x4000093	      0xbe00000000	                              mov esi, 0	       145	input-scrub.c	FUNCTION_1	CALL_4
0x4000098	          0x4889c7	                            mov rdi, rax	       145	input-scrub.c	FUNCTION_1	CALL_4
0x400009b	      0xe800000000	                          call 0x40000a0	       145	input-scrub.c	FUNCTION_1	CALL_4
0x40000a0	              0x90	                                     nop	       146	input-scrub.c	FUNCTION_1
0x40000a1	              0x5d	                                 pop rbp	       146	input-scrub.c	FUNCTION_1
0x40000a2	              0xc3	                                     ret	       146	input-scrub.c	FUNCTION_1
input_scrub_begin	DO,0:IF,0:CALL,6:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	17
0x40002d6	              0x55	                                push rbp	       211	input-scrub.c	FUNCTION_4
0x40002d7	          0x4889e5	                            mov rbp, rsp	       211	input-scrub.c	FUNCTION_4
0x40002da	      0xb800000000	                              mov eax, 0	       213	input-scrub.c	FUNCTION_4	CALL_4
0x40002df	            0x84c0	                             test al, al	       213	input-scrub.c	FUNCTION_4	CALL_4
0x40002e1	            0x7414	                            je 0x40002f7	       213	input-scrub.c	FUNCTION_4	CALL_4
0x40002e3	      0xba00000000	                              mov edx, 0	       213	input-scrub.c	FUNCTION_4	CALL_4
0x40002e8	      0xbed6000000	                           mov esi, 0xd6	       213	input-scrub.c	FUNCTION_4	CALL_4
0x40002ed	      0xbf00000000	                              mov edi, 0	       213	input-scrub.c	FUNCTION_4	CALL_4
0x40002f2	      0xe800000000	                          call 0x40002f7	       213	input-scrub.c	FUNCTION_4	CALL_4
0x40002f7	    0x48c705000000	               mov qword [0x04000302], 0	       216	input-scrub.c	FUNCTION_4
0x4000302	    0x48c705000000	               mov qword [0x0400030d], 0	       217	input-scrub.c	FUNCTION_4
0x400030d	      0xe82efdffff	             call sym.input_scrub_reinit	       218	input-scrub.c	FUNCTION_4	CALL_5
0x4000312	      0xbf00000000	                              mov edi, 0	       219	input-scrub.c	FUNCTION_4	CALL_6
0x4000317	      0xe800000000	                          call 0x400031c	       219	input-scrub.c	FUNCTION_4	CALL_6
0x400031c	              0x90	                                     nop	       220	input-scrub.c	FUNCTION_4
0x400031d	              0x5d	                                 pop rbp	       220	input-scrub.c	FUNCTION_4
0x400031e	              0xc3	                                     ret	       220	input-scrub.c	FUNCTION_4
new_logical_line_flags	DO,0:IF,4:CALL,3:WHILE,0:functions,0:SWITCH,1:FOR,0:ELSE,2	75
0x400089b	              0x55	                                push rbp	       446	input-scrub.c	FUNCTION_13
0x400089c	          0x4889e5	                            mov rbp, rsp	       446	input-scrub.c	FUNCTION_13
0x400089f	        0x4883ec10	                           sub rsp, 0x10	       446	input-scrub.c	FUNCTION_13
0x40008a3	        0x48897df8	                mov qword [rbp - 8], rdi	       446	input-scrub.c	FUNCTION_13
0x40008a7	          0x8975f4	              mov dword [rbp - 0xc], esi	       446	input-scrub.c	FUNCTION_13
0x40008aa	          0x8955f0	             mov dword [rbp - 0x10], edx	       446	input-scrub.c	FUNCTION_13
0x40008ad	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008b0	          0x83f801	                              cmp eax, 1	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008b3	            0x7417	                            je 0x40008cc	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008b5	          0x83f801	                              cmp eax, 1	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008b8	            0x7f06	                            jg 0x40008c0	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008ba	            0x85c0	                           test eax, eax	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008bc	            0x743c	                            je 0x40008fa	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008be	            0xeb26	                           jmp 0x40008e6	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008c0	          0x83f802	                              cmp eax, 2	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008c3	            0x7438	                            je 0x40008fd	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008c5	          0x83f804	                              cmp eax, 4	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008c8	            0x7433	                            je 0x40008fd	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008ca	            0xeb1a	                           jmp 0x40008e6	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008cc	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       452	input-scrub.c	FUNCTION_13	SWITCH_1	IF_1
0x40008d0	            0x742e	                            je 0x4000900	       452	input-scrub.c	FUNCTION_13	SWITCH_1	IF_1
0x40008d2	      0xba00000000	                              mov edx, 0	       453	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_1
0x40008d7	      0xbec5010000	                          mov esi, 0x1c5	       453	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_1
0x40008dc	      0xbf00000000	                              mov edi, 0	       453	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_1
0x40008e1	      0xe800000000	                          call 0x40008e6	       453	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_1
0x40008e6	      0xba00000000	                              mov edx, 0	       460	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_2
0x40008eb	      0xbecc010000	                          mov esi, 0x1cc	       460	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_2
0x40008f0	      0xbf00000000	                              mov edi, 0	       460	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_2
0x40008f5	      0xe800000000	                          call 0x40008fa	       460	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_2
0x40008fa	              0x90	                                     nop	       450	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008fb	            0xeb04	                           jmp 0x4000901	       450	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008fd	              0x90	                                     nop	       458	input-scrub.c	FUNCTION_13	SWITCH_1
0x40008fe	            0xeb01	                           jmp 0x4000901	       458	input-scrub.c	FUNCTION_13	SWITCH_1
0x4000900	              0x90	                                     nop	       454	input-scrub.c	FUNCTION_13	SWITCH_1
0x4000901	        0x837df400	                cmp dword [rbp - 0xc], 0	       463	input-scrub.c	FUNCTION_13	IF_2
0x4000905	            0x780b	                            js 0x4000912	       463	input-scrub.c	FUNCTION_13	IF_2
0x4000907	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       464	input-scrub.c	FUNCTION_13	IF_2
0x400090a	    0x890500000000	            mov dword [0x04000910], eax 	       464	input-scrub.c	FUNCTION_13	IF_2
0x4000910	            0xeb44	                           jmp 0x4000956	       464	input-scrub.c	FUNCTION_13	IF_2
0x4000912	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000916	            0x753e	                           jne 0x4000956	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000918	      0x48837df800	                  cmp qword [rbp - 8], 0	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x400091d	            0x7437	                            je 0x4000956	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x400091f	        0x488b45f8	                mov rax, qword [rbp - 8]	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000923	           0xfb600	                   movzx eax, byte [rax]	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000926	            0x84c0	                             test al, al	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000928	            0x752c	                           jne 0x4000956	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x400092a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x400092d	          0x83e004	                              and eax, 4	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000930	            0x85c0	                           test eax, eax	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000932	            0x7422	                            je 0x4000956	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000934	    0x488b05000000	            mov rax, qword [0x0400093b] 	       467	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x400093b	    0x488905000000	            mov qword [0x04000942], rax 	       467	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000942	    0x8b0500000000	            mov eax, dword [0x04000948] 	       468	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000948	    0x890500000000	            mov dword [0x0400094e], eax 	       468	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x400094e	    0x48c745f80000	                  mov qword [rbp - 8], 0	       469	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000956	      0x48837df800	                  cmp qword [rbp - 8], 0	       472	input-scrub.c	FUNCTION_13	IF_4
0x400095b	            0x7438	                            je 0x4000995	       472	input-scrub.c	FUNCTION_13	IF_4
0x400095d	    0x488b05000000	            mov rax, qword [0x04000964] 	       473	input-scrub.c	FUNCTION_13	IF_4
0x4000964	          0x4885c0	                           test rax, rax	       473	input-scrub.c	FUNCTION_13	IF_4
0x4000967	            0x741a	                            je 0x4000983	       473	input-scrub.c	FUNCTION_13	IF_4
0x4000969	    0x488b05000000	            mov rax, qword [0x04000970] 	       474	input-scrub.c	FUNCTION_13	IF_4	CALL_3
0x4000970	        0x488b55f8	                mov rdx, qword [rbp - 8]	       474	input-scrub.c	FUNCTION_13	IF_4	CALL_3
0x4000974	          0x4889d6	                            mov rsi, rdx	       474	input-scrub.c	FUNCTION_13	IF_4	CALL_3
0x4000977	          0x4889c7	                            mov rdi, rax	       474	input-scrub.c	FUNCTION_13	IF_4	CALL_3
0x400097a	      0xe800000000	                          call 0x400097f	       474	input-scrub.c	FUNCTION_13	IF_4	CALL_3
0x400097f	            0x85c0	                           test eax, eax	       474	input-scrub.c	FUNCTION_13	IF_4	CALL_3
0x4000981	            0x7412	                            je 0x4000995	       474	input-scrub.c	FUNCTION_13	IF_4	CALL_3
0x4000983	        0x488b45f8	                mov rax, qword [rbp - 8]	       476	input-scrub.c	FUNCTION_13	IF_4
0x4000987	    0x488905000000	            mov qword [0x0400098e], rax 	       476	input-scrub.c	FUNCTION_13	IF_4
0x400098e	      0xb801000000	                              mov eax, 1	       477	input-scrub.c	FUNCTION_13	IF_4
0x4000993	            0xeb05	                           jmp 0x400099a	       477	input-scrub.c	FUNCTION_13	IF_4
0x4000995	      0xb800000000	                              mov eax, 0	       480	input-scrub.c	FUNCTION_13	ELSE_2
0x400099a	              0xc9	                                   leave	       481	input-scrub.c	FUNCTION_13	ELSE_2
0x400099b	              0xc3	                                     ret	       481	input-scrub.c	FUNCTION_13	ELSE_2
bump_line_counters	DO,0:IF,2:CALL,0:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	17
0x400085f	              0x55	                                push rbp	       425	input-scrub.c	FUNCTION_12
0x4000860	          0x4889e5	                            mov rbp, rsp	       425	input-scrub.c	FUNCTION_12
0x4000863	    0x488b05000000	            mov rax, qword [0x0400086a] 	       426	input-scrub.c	FUNCTION_12	IF_1
0x400086a	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       426	input-scrub.c	FUNCTION_12	IF_1
0x400086e	            0x7528	                           jne 0x4000898	       426	input-scrub.c	FUNCTION_12	IF_1
0x4000870	    0x8b0500000000	            mov eax, dword [0x04000876] 	       428	input-scrub.c	FUNCTION_12	IF_1
0x4000876	          0x83c001	                              add eax, 1	       428	input-scrub.c	FUNCTION_12	IF_1
0x4000879	    0x890500000000	            mov dword [0x0400087f], eax 	       428	input-scrub.c	FUNCTION_12	IF_1
0x400087f	    0x8b0500000000	            mov eax, dword [0x04000885] 	       429	input-scrub.c	FUNCTION_12	IF_1	IF_2
0x4000885	            0x85c0	                           test eax, eax	       429	input-scrub.c	FUNCTION_12	IF_1	IF_2
0x4000887	            0x780f	                            js 0x4000898	       429	input-scrub.c	FUNCTION_12	IF_1	IF_2
0x4000889	    0x8b0500000000	            mov eax, dword [0x0400088f] 	       430	input-scrub.c	FUNCTION_12	IF_1	IF_2
0x400088f	          0x83c001	                              add eax, 1	       430	input-scrub.c	FUNCTION_12	IF_1	IF_2
0x4000892	    0x890500000000	            mov dword [0x04000898], eax 	       430	input-scrub.c	FUNCTION_12	IF_1	IF_2
0x4000898	              0x90	                                     nop	       432	input-scrub.c	FUNCTION_12
0x4000899	              0x5d	                                 pop rbp	       432	input-scrub.c	FUNCTION_12
0x400089a	              0xc3	                                     ret	       432	input-scrub.c	FUNCTION_12
seen_at_least_1_file	DO,0:IF,0:CALL,0:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	8
0x4000849	              0x55	                                push rbp	       419	input-scrub.c	FUNCTION_11
0x400084a	          0x4889e5	                            mov rbp, rsp	       419	input-scrub.c	FUNCTION_11
0x400084d	    0x488b05000000	            mov rax, qword [0x04000854] 	       420	input-scrub.c	FUNCTION_11
0x4000854	          0x4885c0	                           test rax, rax	       420	input-scrub.c	FUNCTION_11
0x4000857	           0xf95c0	                                setne al	       420	input-scrub.c	FUNCTION_11
0x400085a	           0xfb6c0	                           movzx eax, al	       420	input-scrub.c	FUNCTION_11
0x400085d	              0x5d	                                 pop rbp	       421	input-scrub.c	FUNCTION_11
0x400085e	              0xc3	                                     ret	       421	input-scrub.c	FUNCTION_11
as_where_physical	DO,0:IF,3:CALL,0:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	20
0x40009c3	              0x55	                                push rbp	       494	input-scrub.c	FUNCTION_15
0x40009c4	          0x4889e5	                            mov rbp, rsp	       494	input-scrub.c	FUNCTION_15
0x40009c7	        0x48897df8	                mov qword [rbp - 8], rdi	       494	input-scrub.c	FUNCTION_15
0x40009cb	    0x488b05000000	            mov rax, qword [0x040009d2] 	       495	input-scrub.c	FUNCTION_15	IF_1
0x40009d2	          0x4885c0	                           test rax, rax	       495	input-scrub.c	FUNCTION_15	IF_1
0x40009d5	            0x741c	                            je 0x40009f3	       495	input-scrub.c	FUNCTION_15	IF_1
0x40009d7	      0x48837df800	                  cmp qword [rbp - 8], 0	       497	input-scrub.c	FUNCTION_15	IF_1	IF_2
0x40009dc	            0x740c	                            je 0x40009ea	       497	input-scrub.c	FUNCTION_15	IF_1	IF_2
0x40009de	    0x8b1500000000	            mov edx, dword [0x040009e4] 	       498	input-scrub.c	FUNCTION_15	IF_1	IF_2
0x40009e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       498	input-scrub.c	FUNCTION_15	IF_1	IF_2
0x40009e8	            0x8910	                    mov dword [rax], edx	       498	input-scrub.c	FUNCTION_15	IF_1	IF_2
0x40009ea	    0x488b05000000	            mov rax, qword [0x040009f1] 	       499	input-scrub.c	FUNCTION_15	IF_1
0x40009f1	            0xeb16	                           jmp 0x4000a09	       499	input-scrub.c	FUNCTION_15	IF_1
0x40009f3	      0x48837df800	                  cmp qword [rbp - 8], 0	       502	input-scrub.c	FUNCTION_15	IF_3
0x40009f8	            0x740a	                            je 0x4000a04	       502	input-scrub.c	FUNCTION_15	IF_3
0x40009fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       503	input-scrub.c	FUNCTION_15	IF_3
0x40009fe	    0xc70000000000	                      mov dword [rax], 0	       503	input-scrub.c	FUNCTION_15	IF_3
0x4000a04	      0xb800000000	                              mov eax, 0	       504	input-scrub.c	FUNCTION_15
0x4000a09	              0x5d	                                 pop rbp	       505	input-scrub.c	FUNCTION_15
0x4000a0a	              0xc3	                                     ret	       505	input-scrub.c	FUNCTION_15
input_scrub_push	DO,0:IF,0:CALL,4:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	63
0x40000a3	              0x55	                                push rbp	       154	input-scrub.c	FUNCTION_2
0x40000a4	          0x4889e5	                            mov rbp, rsp	       154	input-scrub.c	FUNCTION_2
0x40000a7	        0x4883ec20	                           sub rsp, 0x20	       154	input-scrub.c	FUNCTION_2
0x40000ab	        0x48897de8	             mov qword [rbp - 0x18], rdi	       154	input-scrub.c	FUNCTION_2
0x40000af	      0xbf80000000	                           mov edi, 0x80	       157	input-scrub.c	FUNCTION_2	CALL_1
0x40000b4	      0xe800000000	                          call 0x40000b9	       157	input-scrub.c	FUNCTION_2	CALL_1
0x40000b9	        0x488945f8	                mov qword [rbp - 8], rax	       157	input-scrub.c	FUNCTION_2	CALL_1
0x40000bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	input-scrub.c	FUNCTION_2
0x40000c1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       159	input-scrub.c	FUNCTION_2
0x40000c5	        0x48895078	             mov qword [rax + 0x78], rdx	       159	input-scrub.c	FUNCTION_2
0x40000c9	    0x488b15000000	            mov rdx, qword [0x040000d0] 	       160	input-scrub.c	FUNCTION_2
0x40000d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       160	input-scrub.c	FUNCTION_2
0x40000d4	          0x488910	                    mov qword [rax], rdx	       160	input-scrub.c	FUNCTION_2
0x40000d7	    0x488b15000000	            mov rdx, qword [0x040000de] 	       161	input-scrub.c	FUNCTION_2
0x40000de	        0x488b45f8	                mov rax, qword [rbp - 8]	       161	input-scrub.c	FUNCTION_2
0x40000e2	        0x48895008	                mov qword [rax + 8], rdx	       161	input-scrub.c	FUNCTION_2
0x40000e6	    0x488b15000000	            mov rdx, qword [0x040000ed] 	       162	input-scrub.c	FUNCTION_2
0x40000ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	input-scrub.c	FUNCTION_2
0x40000f1	        0x48895010	             mov qword [rax + 0x10], rdx	       162	input-scrub.c	FUNCTION_2
0x40000f5	    0x488b15000000	            mov rdx, qword [0x040000fc] 	       163	input-scrub.c	FUNCTION_2
0x40000fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       163	input-scrub.c	FUNCTION_2
0x4000100	        0x48895020	             mov qword [rax + 0x20], rdx	       163	input-scrub.c	FUNCTION_2
0x4000104	    0x488b15000000	            mov rdx, qword [0x0400010b] 	       164	input-scrub.c	FUNCTION_2
0x400010b	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	input-scrub.c	FUNCTION_2
0x400010f	        0x48895028	             mov qword [rax + 0x28], rdx	       164	input-scrub.c	FUNCTION_2
0x4000113	    0x488b15000000	            mov rdx, qword [0x0400011a] 	       165	input-scrub.c	FUNCTION_2
0x400011a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	input-scrub.c	FUNCTION_2
0x400011e	        0x48895030	             mov qword [rax + 0x30], rdx	       165	input-scrub.c	FUNCTION_2
0x4000122	    0x8b1500000000	            mov edx, dword [0x04000128] 	       166	input-scrub.c	FUNCTION_2
0x4000128	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	input-scrub.c	FUNCTION_2
0x400012c	          0x895038	             mov dword [rax + 0x38], edx	       166	input-scrub.c	FUNCTION_2
0x400012f	    0x8b1500000000	            mov edx, dword [0x04000135] 	       167	input-scrub.c	FUNCTION_2
0x4000135	        0x488b45f8	                mov rax, qword [rbp - 8]	       167	input-scrub.c	FUNCTION_2
0x4000139	          0x89503c	             mov dword [rax + 0x3c], edx	       167	input-scrub.c	FUNCTION_2
0x400013c	    0x488b15000000	            mov rdx, qword [0x04000143] 	       168	input-scrub.c	FUNCTION_2
0x4000143	        0x488b45f8	                mov rax, qword [rbp - 8]	       168	input-scrub.c	FUNCTION_2
0x4000147	        0x48895040	             mov qword [rax + 0x40], rdx	       168	input-scrub.c	FUNCTION_2
0x400014b	        0x488b45f8	                mov rax, qword [rbp - 8]	       169	input-scrub.c	FUNCTION_2
0x400014f	    0x488b15000000	            mov rdx, qword [0x04000156] 	       169	input-scrub.c	FUNCTION_2
0x4000156	        0x48895048	             mov qword [rax + 0x48], rdx	       169	input-scrub.c	FUNCTION_2
0x400015a	    0x488b15000000	            mov rdx, qword [0x04000161] 	       169	input-scrub.c	FUNCTION_2
0x4000161	        0x48895050	             mov qword [rax + 0x50], rdx	       169	input-scrub.c	FUNCTION_2
0x4000165	    0x488b15000000	            mov rdx, qword [0x0400016c] 	       169	input-scrub.c	FUNCTION_2
0x400016c	        0x48895058	             mov qword [rax + 0x58], rdx	       169	input-scrub.c	FUNCTION_2
0x4000170	    0x8b1500000000	            mov edx, dword [0x04000176] 	       170	input-scrub.c	FUNCTION_2
0x4000176	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	input-scrub.c	FUNCTION_2
0x400017a	          0x895060	             mov dword [rax + 0x60], edx	       170	input-scrub.c	FUNCTION_2
0x400017d	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	input-scrub.c	FUNCTION_2	CALL_2
0x4000181	        0x488d5018	                   lea rdx, [rax + 0x18]	       171	input-scrub.c	FUNCTION_2	CALL_2
0x4000185	     0xfb605000000	           movzx eax, byte [0x0400018c] 	       171	input-scrub.c	FUNCTION_2	CALL_2
0x400018c	            0x8802	                      mov byte [rdx], al	       171	input-scrub.c	FUNCTION_2	CALL_2
0x400018e	    0x488b15000000	            mov rdx, qword [0x04000195] 	       172	input-scrub.c	FUNCTION_2
0x4000195	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	input-scrub.c	FUNCTION_2
0x4000199	        0x48895068	             mov qword [rax + 0x68], rdx	       172	input-scrub.c	FUNCTION_2
0x400019d	      0xe800000000	                          call 0x40001a2	       173	input-scrub.c	FUNCTION_2	CALL_3
0x40001a2	          0x4889c2	                            mov rdx, rax	       173	input-scrub.c	FUNCTION_2	CALL_3
0x40001a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	input-scrub.c	FUNCTION_2	CALL_3
0x40001a9	        0x48895070	             mov qword [rax + 0x70], rdx	       173	input-scrub.c	FUNCTION_2	CALL_3
0x40001ad	    0x48c705000000	mov qword [0x040001b8], 0xffffffffffffffff 	       175	input-scrub.c	FUNCTION_2
0x40001b8	      0xe883feffff	             call sym.input_scrub_reinit	       177	input-scrub.c	FUNCTION_2	CALL_4
0x40001bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	input-scrub.c	FUNCTION_2
0x40001c1	              0xc9	                                   leave	       180	input-scrub.c	FUNCTION_2
0x40001c2	              0xc3	                                     ret	       180	input-scrub.c	FUNCTION_2
input_scrub_include_sb	DO,0:IF,3:CALL,8:WHILE,0:functions,0:SWITCH,0:FOR,0:ELSE,0	66
0x40003ef	              0x55	                                push rbp	       263	input-scrub.c	FUNCTION_8
0x40003f0	          0x4889e5	                            mov rbp, rsp	       263	input-scrub.c	FUNCTION_8
0x40003f3	        0x4883ec30	                           sub rsp, 0x30	       263	input-scrub.c	FUNCTION_8
0x40003f7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       263	input-scrub.c	FUNCTION_8
0x40003fb	        0x488975e0	             mov qword [rbp - 0x20], rsi	       263	input-scrub.c	FUNCTION_8
0x40003ff	          0x8955dc	             mov dword [rbp - 0x24], edx	       263	input-scrub.c	FUNCTION_8
0x4000402	    0x8b1500000000	            mov edx, dword [0x04000408] 	       266	input-scrub.c	FUNCTION_8	IF_1
0x4000408	    0x8b0500000000	            mov eax, dword [0x0400040e] 	       266	input-scrub.c	FUNCTION_8	IF_1
0x400040e	            0x39c2	                            cmp edx, eax	       266	input-scrub.c	FUNCTION_8	IF_1
0x4000410	            0x7e17	                           jle 0x4000429	       266	input-scrub.c	FUNCTION_8	IF_1
0x4000412	      0xbf00000000	                              mov edi, 0	       267	input-scrub.c	FUNCTION_8	CALL_2
0x4000417	      0xe800000000	                          call 0x400041c	       267	input-scrub.c	FUNCTION_8	CALL_2
0x400041c	          0x4889c7	                            mov rdi, rax	       267	input-scrub.c	FUNCTION_8	CALL_2
0x400041f	      0xb800000000	                              mov eax, 0	       267	input-scrub.c	FUNCTION_8	CALL_2
0x4000424	      0xe800000000	                          call 0x4000429	       267	input-scrub.c	FUNCTION_8	CALL_2
0x4000429	    0x8b0500000000	            mov eax, dword [0x0400042f] 	       268	input-scrub.c	FUNCTION_8
0x400042f	          0x83c001	                              add eax, 1	       268	input-scrub.c	FUNCTION_8
0x4000432	    0x890500000000	            mov dword [0x04000438], eax 	       268	input-scrub.c	FUNCTION_8
0x4000438	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       277	input-scrub.c	FUNCTION_8	CALL_4
0x400043c	          0x4889c7	                            mov rdi, rax	       277	input-scrub.c	FUNCTION_8	CALL_4
0x400043f	      0xe85ffcffff	               call sym.input_scrub_push	       277	input-scrub.c	FUNCTION_8	CALL_4
0x4000444	    0x488905000000	            mov qword [0x0400044b], rax 	       277	input-scrub.c	FUNCTION_8	CALL_4
0x400044b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       280	input-scrub.c	FUNCTION_8
0x400044f	        0x488b4008	                mov rax, qword [rax + 8]	       280	input-scrub.c	FUNCTION_8
0x4000453	          0x4885c0	                           test rax, rax	       280	input-scrub.c	FUNCTION_8
0x4000456	            0x7415	                            je 0x400046d	       280	input-scrub.c	FUNCTION_8
0x4000458	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       280	input-scrub.c	FUNCTION_8
0x400045c	          0x488b00	                    mov rax, qword [rax]	       280	input-scrub.c	FUNCTION_8
0x400045f	           0xfb600	                   movzx eax, byte [rax]	       280	input-scrub.c	FUNCTION_8
0x4000462	            0x3c0a	                             cmp al, 0xa	       280	input-scrub.c	FUNCTION_8
0x4000464	            0x7407	                            je 0x400046d	       280	input-scrub.c	FUNCTION_8
0x4000466	      0xb801000000	                              mov eax, 1	       280	input-scrub.c	FUNCTION_8
0x400046b	            0xeb05	                           jmp 0x4000472	       280	input-scrub.c	FUNCTION_8
0x400046d	      0xb800000000	                              mov eax, 0	       280	input-scrub.c	FUNCTION_8
0x4000472	          0x8945fc	                mov dword [rbp - 4], eax	       280	input-scrub.c	FUNCTION_8
0x4000475	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       281	input-scrub.c	FUNCTION_8	CALL_5
0x4000479	        0x488b5008	                mov rdx, qword [rax + 8]	       281	input-scrub.c	FUNCTION_8	CALL_5
0x400047d	          0x8b45fc	                mov eax, dword [rbp - 4]	       281	input-scrub.c	FUNCTION_8	CALL_5
0x4000480	            0x4898	                                    cdqe	       281	input-scrub.c	FUNCTION_8	CALL_5
0x4000482	          0x4801d0	                            add rax, rdx	       281	input-scrub.c	FUNCTION_8	CALL_5
0x4000485	          0x4889c6	                            mov rsi, rax	       281	input-scrub.c	FUNCTION_8	CALL_5
0x4000488	      0xbf00000000	                              mov edi, 0	       281	input-scrub.c	FUNCTION_8	CALL_5
0x400048d	      0xe800000000	                          call 0x4000492	       281	input-scrub.c	FUNCTION_8	CALL_5
0x4000492	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       282	input-scrub.c	FUNCTION_8
0x4000495	    0x890500000000	            mov dword [0x0400049b], eax 	       282	input-scrub.c	FUNCTION_8
0x400049b	        0x837dfc00	                  cmp dword [rbp - 4], 0	       283	input-scrub.c	FUNCTION_8	IF_3
0x400049f	            0x740f	                            je 0x40004b0	       283	input-scrub.c	FUNCTION_8	IF_3
0x40004a1	      0xbe0a000000	                            mov esi, 0xa	       286	input-scrub.c	FUNCTION_8	IF_3	CALL_6
0x40004a6	      0xbf00000000	                              mov edi, 0	       286	input-scrub.c	FUNCTION_8	IF_3	CALL_6
0x40004ab	      0xe800000000	                          call 0x40004b0	       286	input-scrub.c	FUNCTION_8	IF_3	CALL_6
0x40004b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       288	input-scrub.c	FUNCTION_8	CALL_7
0x40004b4	          0x4889c6	                            mov rsi, rax	       288	input-scrub.c	FUNCTION_8	CALL_7
0x40004b7	      0xbf00000000	                              mov edi, 0	       288	input-scrub.c	FUNCTION_8	CALL_7
0x40004bc	      0xe800000000	                          call 0x40004c1	       288	input-scrub.c	FUNCTION_8	CALL_7
0x40004c1	      0xbf00000000	                              mov edi, 0	       292	input-scrub.c	FUNCTION_8	CALL_8
0x40004c6	      0xe800000000	                          call 0x40004cb	       292	input-scrub.c	FUNCTION_8	CALL_8
0x40004cb	    0x48c705000000	               mov qword [0x040004d6], 1	       294	input-scrub.c	FUNCTION_8
0x40004d6	    0x488b05000000	            mov rax, qword [0x040004dd] 	       298	input-scrub.c	FUNCTION_8
0x40004dd	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       298	input-scrub.c	FUNCTION_8
0x40004e0	    0x890500000000	            mov dword [0x040004e6], eax 	       298	input-scrub.c	FUNCTION_8
0x40004e6	    0x488b05000000	            mov rax, qword [0x040004ed] 	       299	input-scrub.c	FUNCTION_8
0x40004ed	        0x488b4030	            mov rax, qword [rax + 0x30] 	       299	input-scrub.c	FUNCTION_8
0x40004f1	    0x488905000000	            mov qword [0x040004f8], rax 	       299	input-scrub.c	FUNCTION_8
0x40004f8	              0x90	                                     nop	       300	input-scrub.c	FUNCTION_8
0x40004f9	              0xc9	                                   leave	       300	input-scrub.c	FUNCTION_8
0x40004fa	              0xc3	                                     ret	       300	input-scrub.c	FUNCTION_8
