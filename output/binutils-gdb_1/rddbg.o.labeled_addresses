read_symbol_stabs_debugging_info	CALL,17:WHILE,1:IF,8:ELSE,0:SWITCH,0:functions,0:FOR,1:DO,0	162
0x40007ef	              0x55	                                push rbp	       268	rddbg.c	FUNCTION_3
0x40007f0	          0x4889e5	                            mov rbp, rsp	       268	rddbg.c	FUNCTION_3
0x40007f3	    0x4881eca00000	                           sub rsp, 0xa0	       268	rddbg.c	FUNCTION_3
0x40007fa	        0x48897d88	             mov qword [rbp - 0x78], rdi	       268	rddbg.c	FUNCTION_3
0x40007fe	        0x48897580	             mov qword [rbp - 0x80], rsi	       268	rddbg.c	FUNCTION_3
0x4000802	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       268	rddbg.c	FUNCTION_3
0x4000809	    0x48898d70ffff	             mov qword [rbp - 0x90], rcx	       268	rddbg.c	FUNCTION_3
0x4000810	    0x4c898568ffff	              mov qword [rbp - 0x98], r8	       268	rddbg.c	FUNCTION_3
0x4000817	    0x64488b042528	                mov rax, qword fs:[0x28]	       268	rddbg.c	FUNCTION_3
0x4000820	        0x488945f8	                mov qword [rbp - 8], rax	       268	rddbg.c	FUNCTION_3
0x4000824	            0x31c0	                            xor eax, eax	       268	rddbg.c	FUNCTION_3
0x4000826	    0x48c745980000	               mov qword [rbp - 0x68], 0	       272	rddbg.c	FUNCTION_3
0x400082e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       273	rddbg.c	FUNCTION_3
0x4000835	    0x488d14c50000	                        lea rdx, [rax*8]	       273	rddbg.c	FUNCTION_3
0x400083d	        0x488b4580	             mov rax, qword [rbp - 0x80]	       273	rddbg.c	FUNCTION_3
0x4000841	          0x4801d0	                            add rax, rdx	       273	rddbg.c	FUNCTION_3
0x4000844	        0x488945b8	             mov qword [rbp - 0x48], rax	       273	rddbg.c	FUNCTION_3
0x4000848	        0x488b4580	             mov rax, qword [rbp - 0x80]	       274	rddbg.c	FUNCTION_3	FOR_1
0x400084c	        0x488945a0	             mov qword [rbp - 0x60], rax	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000850	      0xe9d9010000	                           jmp 0x4000a2e	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000855	        0x488b4588	             mov rax, qword [rbp - 0x78]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x4000859	        0x488b4008	                mov rax, qword [rax + 8]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x400085d	    0x488b80100200	           mov rax, qword [rax + 0x210] 	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x4000864	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x4000868	          0x488b32	                    mov rsi, qword [rdx]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x400086b	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x400086f	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x4000873	          0x4889cf	                            mov rdi, rcx	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x4000876	            0xffd0	                                call rax	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x4000878	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       280	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x400087c	            0x3c2d	                            cmp al, 0x2d	       280	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x400087e	     0xf85a5010000	                           jne 0x4000a29	       280	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x4000884	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       285	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2
0x4000889	            0x753e	                           jne 0x40008c9	       285	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2
0x400088b	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000892	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000896	        0x488b7588	             mov rsi, qword [rbp - 0x78]	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x400089a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x40008a1	          0x4989c8	                             mov r8, rcx	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x40008a4	          0x4889d1	                            mov rcx, rdx	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x40008a7	      0xba00000000	                              mov edx, 0	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x40008ac	          0x4889c7	                            mov rdi, rax	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x40008af	      0xe800000000	                          call 0x40008b4	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x40008b4	        0x48894598	             mov qword [rbp - 0x68], rax	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x40008b8	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       288	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x40008bd	            0x750a	                           jne 0x40008c9	       288	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x40008bf	      0xb800000000	                              mov eax, 0	       289	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x40008c4	      0xe9a5010000	                           jmp 0x4000a6e	       289	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x40008c9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40008d0	    0xc70001000000	                      mov dword [rax], 1	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40008d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       294	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40008da	        0x488945a8	             mov qword [rbp - 0x58], rax	       294	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40008de	      0x48837da800	               cmp qword [rbp - 0x58], 0	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40008e3	            0x740b	                            je 0x40008f0	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40008e5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40008e9	           0xfb600	                   movzx eax, byte [rax]	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40008ec	            0x84c0	                             test al, al	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40008ee	            0x750a	                           jne 0x40008fa	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40008f0	      0xb800000000	                              mov eax, 0	       296	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4
0x40008f5	      0xe974010000	                           jmp 0x4000a6e	       296	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4
0x40008fa	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       297	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x4000902	      0xe986000000	                           jmp 0x400098d	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x4000907	      0x488345a008	               add qword [rbp - 0x60], 8	       305	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x400090c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x4000910	          0x4889c7	                            mov rdi, rax	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x4000913	      0xe800000000	                          call 0x4000918	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x4000918	        0x488945c0	             mov qword [rbp - 0x40], rax	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x400091c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x4000920	          0x4889c7	                            mov rdi, rax	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x4000923	      0xe800000000	                          call 0x4000928	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x4000928	        0x488d50ff	                      lea rdx, [rax - 1]	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x400092c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x4000930	          0x4801d0	                            add rax, rdx	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x4000933	          0xc60000	                       mov byte [rax], 0	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x4000936	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x400093a	          0x488b00	                    mov rax, qword [rax]	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x400093d	        0x488b4808	                mov rcx, qword [rax + 8]	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000941	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000945	      0xba00000000	                              mov edx, 0	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x400094a	          0x4889ce	                            mov rsi, rcx	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x400094d	          0x4889c7	                            mov rdi, rax	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000950	      0xb800000000	                              mov eax, 0	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000955	      0xe800000000	                          call 0x400095a	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x400095a	        0x488945c8	             mov qword [rbp - 0x38], rax	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x400095e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       309	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_10
0x4000962	          0x4889c7	                            mov rdi, rax	       309	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_10
0x4000965	      0xe800000000	                          call 0x400096a	       309	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_10
0x400096a	      0x48837db000	               cmp qword [rbp - 0x50], 0	       310	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	IF_5
0x400096f	            0x740c	                            je 0x400097d	       310	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	IF_5
0x4000971	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       311	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_11
0x4000975	          0x4889c7	                            mov rdi, rax	       311	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_11
0x4000978	      0xe800000000	                          call 0x400097d	       311	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_11
0x400097d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       312	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x4000981	        0x488945b0	             mov qword [rbp - 0x50], rax	       312	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x4000985	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       313	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x4000989	        0x488945a8	             mov qword [rbp - 0x58], rax	       313	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x400098d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x4000991	           0xfb600	                   movzx eax, byte [rax]	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x4000994	            0x84c0	                             test al, al	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x4000996	            0x7430	                            je 0x40009c8	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x4000998	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x400099c	          0x4889c7	                            mov rdi, rax	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x400099f	      0xe800000000	                          call 0x40009a4	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40009a4	        0x488d50ff	                      lea rdx, [rax - 1]	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40009a8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40009ac	          0x4801d0	                            add rax, rdx	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40009af	           0xfb600	                   movzx eax, byte [rax]	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40009b2	            0x3c5c	                            cmp al, 0x5c	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40009b4	            0x7512	                           jne 0x40009c8	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40009b6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x40009ba	        0x4883c008	                              add rax, 8	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x40009be	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x40009c2	     0xf823fffffff	                            jb 0x4000907	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x40009c8	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x40009cc	         0xfb745ea	            movzx eax, word [rbp - 0x16]	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x40009d0	           0xfbff0	                           movsx esi, ax	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x40009d3	         0xfb645e8	            movzx eax, byte [rbp - 0x18]	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x40009d7	           0xfb6c0	                           movzx eax, al	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x40009da	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x40009de	            0x89c7	                            mov edi, eax	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x40009e0	      0xe89f000000	                      call sym.save_stab	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x40009e5	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40009e9	         0xfb745ea	            movzx eax, word [rbp - 0x16]	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40009ed	           0xfbfc8	                           movsx ecx, ax	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40009f0	         0xfb645e8	            movzx eax, byte [rbp - 0x18]	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40009f4	           0xfb6d0	                           movzx edx, al	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40009f7	        0x4c8b45a8	              mov r8, qword [rbp - 0x58]	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40009fb	        0x488b7598	             mov rsi, qword [rbp - 0x68]	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40009ff	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000a06	          0x4d89c1	                              mov r9, r8	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000a09	          0x4989f8	                             mov r8, rdi	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000a0c	          0x4889c7	                            mov rdi, rax	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000a0f	      0xe800000000	                          call 0x4000a14	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000a14	            0x85c0	                           test eax, eax	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000a16	            0x7511	                           jne 0x4000a29	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000a18	      0xe887010000	                   call sym.stab_context	       321	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_14
0x4000a1d	      0xe82f030000	               call sym.free_saved_stabs	       322	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_15
0x4000a22	      0xb800000000	                              mov eax, 0	       323	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6
0x4000a27	            0xeb45	                           jmp 0x4000a6e	       323	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6
0x4000a29	      0x488345a008	               add qword [rbp - 0x60], 8	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000a2e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000a32	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000a36	     0xf8219feffff	                            jb 0x4000855	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000a3c	      0xe810030000	               call sym.free_saved_stabs	       332	rddbg.c	FUNCTION_3	CALL_16
0x4000a41	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       334	rddbg.c	FUNCTION_3	IF_7
0x4000a46	            0x7421	                            je 0x4000a69	       334	rddbg.c	FUNCTION_3	IF_7
0x4000a48	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x4000a4c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x4000a53	          0x4889d6	                            mov rsi, rdx	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x4000a56	          0x4889c7	                            mov rdi, rax	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x4000a59	      0xe800000000	                          call 0x4000a5e	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x4000a5e	            0x85c0	                           test eax, eax	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x4000a60	            0x7507	                           jne 0x4000a69	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x4000a62	      0xb800000000	                              mov eax, 0	       337	rddbg.c	FUNCTION_3	IF_7	IF_8
0x4000a67	            0xeb05	                           jmp 0x4000a6e	       337	rddbg.c	FUNCTION_3	IF_7	IF_8
0x4000a69	      0xb801000000	                              mov eax, 1	       340	rddbg.c	FUNCTION_3
0x4000a6e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       341	rddbg.c	FUNCTION_3
0x4000a72	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       341	rddbg.c	FUNCTION_3
0x4000a7b	            0x7405	                            je 0x4000a82	       341	rddbg.c	FUNCTION_3
0x4000a7d	      0xe800000000	                          call 0x4000a82	       341	rddbg.c	FUNCTION_3
0x4000a82	              0xc9	                                   leave	       341	rddbg.c	FUNCTION_3
0x4000a83	              0xc3	                                     ret	       341	rddbg.c	FUNCTION_3
read_section_stabs_debugging_info	CALL,39:WHILE,1:IF,12:ELSE,2:SWITCH,0:functions,0:FOR,2:DO,0	367
0x4000187	              0x55	                                push rbp	        93	rddbg.c	FUNCTION_2
0x4000188	          0x4889e5	                            mov rbp, rsp	        93	rddbg.c	FUNCTION_2
0x400018b	            0x4155	                                push r13	        93	rddbg.c	FUNCTION_2
0x400018d	            0x4154	                                push r12	        93	rddbg.c	FUNCTION_2
0x400018f	              0x53	                                push rbx	        93	rddbg.c	FUNCTION_2
0x4000190	    0x4881ecc80000	                           sub rsp, 0xc8	        93	rddbg.c	FUNCTION_2
0x4000197	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	        93	rddbg.c	FUNCTION_2
0x400019e	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	        93	rddbg.c	FUNCTION_2
0x40001a5	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	        93	rddbg.c	FUNCTION_2
0x40001ac	    0x48898d30ffff	             mov qword [rbp - 0xd0], rcx	        93	rddbg.c	FUNCTION_2
0x40001b3	    0x4c898528ffff	              mov qword [rbp - 0xd8], r8	        93	rddbg.c	FUNCTION_2
0x40001ba	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       108	rddbg.c	FUNCTION_2
0x40001c1	    0xc70000000000	                      mov dword [rax], 0	       108	rddbg.c	FUNCTION_2
0x40001c7	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       109	rddbg.c	FUNCTION_2
0x40001d2	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	       111	rddbg.c	FUNCTION_2	FOR_1
0x40001dc	      0xe9c3050000	                           jmp 0x40007a4	       111	rddbg.c	FUNCTION_2	FOR_1
0x40001e1	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x40001e7	        0x48c1e004	                              shl rax, 4	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x40001eb	    0x480500000000	                              add rax, 0	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x40001f1	          0x488b10	                    mov rdx, qword [rax]	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x40001f4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x40001fb	          0x4889d6	                            mov rsi, rdx	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x40001fe	          0x4889c7	                            mov rdi, rax	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000201	      0xe800000000	                          call 0x4000206	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000206	        0x48894598	             mov qword [rbp - 0x68], rax	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x400020a	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000210	        0x48c1e004	                              shl rax, 4	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000214	    0x480500000000	                              add rax, 0	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x400021a	          0x488b10	                    mov rdx, qword [rax]	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x400021d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000224	          0x4889d6	                            mov rsi, rdx	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000227	          0x4889c7	                            mov rdi, rax	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x400022a	      0xe800000000	                          call 0x400022f	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x400022f	        0x488945a0	             mov qword [rbp - 0x60], rax	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000233	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000238	     0xf845f050000	                            je 0x400079d	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x400023e	      0x48837da000	               cmp qword [rbp - 0x60], 0	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000243	     0xf8454050000	                            je 0x400079d	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000249	        0x488b4598	             mov rax, qword [rbp - 0x68]	       124	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_3
0x400024d	        0x488b4038	            mov rax, qword [rax + 0x38] 	       124	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_3
0x4000251	        0x488945a8	             mov qword [rbp - 0x58], rax	       124	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_3
0x4000255	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x4000259	          0x4889c7	                            mov rdi, rax	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x400025c	      0xe800000000	                          call 0x4000261	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x4000261	        0x488945b0	             mov qword [rbp - 0x50], rax	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x4000265	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000269	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400026d	        0x488b7598	             mov rsi, qword [rbp - 0x68]	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000271	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000278	          0x4989c8	                             mov r8, rcx	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400027b	      0xb900000000	                              mov ecx, 0	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000280	          0x4889c7	                            mov rdi, rax	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000283	      0xe800000000	                          call 0x4000288	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000288	            0x85c0	                           test eax, eax	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400028a	            0x7552	                           jne 0x40002de	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400028c	      0xe800000000	                          call 0x4000291	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x4000291	            0x89c7	                            mov edi, eax	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x4000293	      0xe800000000	                          call 0x4000298	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x4000298	          0x4889c6	                            mov rsi, rax	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x400029b	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x40002a1	        0x48c1e004	                              shl rax, 4	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x40002a5	    0x480500000000	                              add rax, 0	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x40002ab	          0x488b08	                    mov rcx, qword [rax]	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x40002ae	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       129	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_7
0x40002b5	          0x488b10	                    mov rdx, qword [rax]	       129	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_7
0x40002b8	    0x488b05000000	            mov rax, qword [0x040002bf] 	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x40002bf	          0x4989f0	                             mov r8, rsi	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x40002c2	      0xbe00000000	                              mov esi, 0	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x40002c7	          0x4889c7	                            mov rdi, rax	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x40002ca	      0xb800000000	                              mov eax, 0	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x40002cf	      0xe800000000	                          call 0x40002d4	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_6
0x40002d4	      0xb800000000	                              mov eax, 0	       131	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40002d9	      0xe906050000	                           jmp 0x40007e4	       131	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40002de	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x40002e2	        0x488b4038	            mov rax, qword [rax + 0x38] 	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x40002e6	        0x488945b8	             mov qword [rbp - 0x48], rax	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x40002ea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_11
0x40002ee	        0x4883c001	                              add rax, 1	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_11
0x40002f2	          0x4889c7	                            mov rdi, rax	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_11
0x40002f5	      0xe800000000	                          call 0x40002fa	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_11
0x40002fa	        0x488945c0	             mov qword [rbp - 0x40], rax	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_11
0x40002fe	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_12
0x4000302	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_12
0x4000306	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_12
0x400030a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_12
0x4000311	          0x4989c8	                             mov r8, rcx	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_12
0x4000314	      0xb900000000	                              mov ecx, 0	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_12
0x4000319	          0x4889c7	                            mov rdi, rax	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_12
0x400031c	      0xe800000000	                          call 0x4000321	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_12
0x4000321	            0x85c0	                           test eax, eax	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_12
0x4000323	            0x7552	                           jne 0x4000377	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_12
0x4000325	      0xe800000000	                          call 0x400032a	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x400032a	            0x89c7	                            mov edi, eax	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x400032c	      0xe800000000	                          call 0x4000331	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x4000331	          0x4889c6	                            mov rsi, rax	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x4000334	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x400033a	        0x48c1e004	                              shl rax, 4	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x400033e	    0x480500000000	                              add rax, 0	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x4000344	          0x488b08	                    mov rcx, qword [rax]	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x4000347	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       139	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_14
0x400034e	          0x488b10	                    mov rdx, qword [rax]	       139	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_14
0x4000351	    0x488b05000000	            mov rax, qword [0x04000358] 	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x4000358	          0x4989f0	                             mov r8, rsi	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x400035b	      0xbe00000000	                              mov esi, 0	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x4000360	          0x4889c7	                            mov rdi, rax	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x4000363	      0xb800000000	                              mov eax, 0	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x4000368	      0xe800000000	                          call 0x400036d	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_13
0x400036d	      0xb800000000	                              mov eax, 0	       141	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000372	      0xe96d040000	                           jmp 0x40007e4	       141	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000377	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x400037b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x400037f	          0x4801d0	                            add rax, rdx	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000382	          0xc60000	                       mov byte [rax], 0	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000385	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       145	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x400038d	            0x754a	                           jne 0x40003d9	       145	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x400038f	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_17
0x4000396	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_17
0x400039d	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_17
0x40003a4	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_17
0x40003ab	          0x4989c8	                             mov r8, rcx	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_17
0x40003ae	          0x4889d1	                            mov rcx, rdx	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_17
0x40003b1	      0xba01000000	                              mov edx, 1	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_17
0x40003b6	          0x4889c7	                            mov rdi, rax	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_17
0x40003b9	      0xe800000000	                          call 0x40003be	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_17
0x40003be	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_17
0x40003c5	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x40003cd	            0x750a	                           jne 0x40003d9	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x40003cf	      0xb800000000	                              mov eax, 0	       149	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x40003d4	      0xe90b040000	                           jmp 0x40007e4	       149	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x40003d9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       152	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40003e0	    0xc70001000000	                      mov dword [rax], 1	       152	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40003e6	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       154	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40003f1	    0x48c745800000	               mov qword [rbp - 0x80], 0	       155	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40003f9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40003fd	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000404	      0xe967030000	                           jmp 0x4000770	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000409	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_18
0x4000410	        0x488b4008	                mov rax, qword [rax + 8]	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_18
0x4000414	        0x488b4038	            mov rax, qword [rax + 0x38] 	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_18
0x4000418	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_18
0x400041f	          0x4889d7	                            mov rdi, rdx	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_18
0x4000422	            0xffd0	                                call rax	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_18
0x4000424	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_18
0x400042a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x4000431	        0x4883c004	                              add rax, 4	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x4000435	           0xfb600	                   movzx eax, byte [rax]	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x4000438	           0xfb6c0	                           movzx eax, al	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x400043b	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x4000441	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       169	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x4000448	        0x4883c005	                              add rax, 5	       169	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x400044c	           0xfb600	                   movzx eax, byte [rax]	       169	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x400044f	           0xfb6c0	                           movzx eax, al	       169	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x4000452	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	       169	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x4000458	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_21
0x400045f	        0x488b4008	                mov rax, qword [rax + 8]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_21
0x4000463	        0x488b4050	            mov rax, qword [rax + 0x50] 	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_21
0x4000467	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_21
0x400046e	        0x4883c206	                              add rdx, 6	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_21
0x4000472	          0x4889d7	                            mov rdi, rdx	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_21
0x4000475	            0xffd0	                                call rax	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_21
0x4000477	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_21
0x400047d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_22
0x4000484	        0x488b4008	                mov rax, qword [rax + 8]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_22
0x4000488	        0x488b4038	            mov rax, qword [rax + 0x38] 	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_22
0x400048c	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_22
0x4000493	        0x4883c208	                              add rdx, 8	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_22
0x4000497	          0x4889d7	                            mov rdi, rdx	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_22
0x400049a	            0xffd0	                                call rax	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_22
0x400049c	        0x488945c8	             mov qword [rbp - 0x38], rax	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_22
0x40004a0	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	       173	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004a7	            0x7518	                           jne 0x40004c1	       173	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004a9	        0x488b4580	             mov rax, qword [rbp - 0x80]	       177	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004ad	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       177	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004b8	        0x48014580	            add qword [rbp - 0x80], rax 	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004bc	      0xe9a7020000	                           jmp 0x4000768	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004c1	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004c7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004ce	          0x4801d0	                            add rax, rdx	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004d1	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004d5	     0xf8295000000	                            jb 0x4000570	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004db	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       189	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004e2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       189	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004e6	          0x4889d1	                            mov rcx, rdx	       189	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004e9	          0x4829c1	                            sub rcx, rax	       189	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004ec	    0x48baabaaaaaa	          movabs rdx, 0x2aaaaaaaaaaaaaab	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x40004f6	          0x4889c8	                            mov rax, rcx	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x40004f9	          0x48f7ea	                                imul rdx	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x40004fc	          0x48d1fa	                              sar rdx, 1	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x40004ff	          0x4889c8	                            mov rax, rcx	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000502	        0x48c1f83f	                           sar rax, 0x3f	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000506	          0x4829c2	                            sub rdx, rax	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000509	          0x4989d5	                            mov r13, rdx	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x400050c	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000512	        0x48c1e004	                              shl rax, 4	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000516	    0x480500000000	                              add rax, 0	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x400051c	          0x4c8b20	                    mov r12, qword [rax]	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x400051f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       188	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_25
0x4000526	          0x488b18	                    mov rbx, qword [rax]	       188	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_25
0x4000529	      0xbf00000000	                              mov edi, 0	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x400052e	      0xe800000000	                          call 0x4000533	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000533	          0x4889c6	                            mov rsi, rax	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000536	    0x488b05000000	            mov rax, qword [0x0400053d] 	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x400053d	    0x8b8d58ffffff	             mov ecx, dword [rbp - 0xa8]	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000543	        0x4883ec08	                              sub rsp, 8	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000547	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x400054d	              0x52	                                push rdx	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x400054e	          0x4189c9	                            mov r9d, ecx	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000551	          0x4d89e8	                             mov r8, r13	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000554	          0x4c89e1	                            mov rcx, r12	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000557	          0x4889da	                            mov rdx, rbx	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x400055a	          0x4889c7	                            mov rdi, rax	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x400055d	      0xb800000000	                              mov eax, 0	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000562	      0xe800000000	                          call 0x4000567	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x4000567	        0x4883c410	                           add rsp, 0x10	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_24
0x400056b	      0xe9f8010000	                           jmp 0x4000768	       190	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x4000570	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x4000576	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x400057d	          0x4801c2	                            add rdx, rax	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x4000580	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x4000584	          0x4801d0	                            add rax, rdx	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x4000587	        0x48894590	             mov qword [rbp - 0x70], rax	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x400058b	    0x48c745880000	               mov qword [rbp - 0x78], 0	       194	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x4000593	      0xe924010000	                           jmp 0x40006bc	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_26
0x4000598	    0x48838570ffff	             add qword [rbp - 0x90], 0xc	       205	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       206	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005a4	        0x488d50ff	                      lea rdx, [rax - 1]	       206	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005a8	        0x488b4590	             mov rax, qword [rbp - 0x70]	       206	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005ac	          0x4801d0	                            add rax, rdx	       206	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005af	        0x488945d8	             mov qword [rbp - 0x28], rax	       206	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       207	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005b7	          0xc60000	                       mov byte [rax], 0	       207	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005ba	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_27
0x40005c1	        0x488b4008	                mov rax, qword [rax + 8]	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_27
0x40005c5	        0x488b4038	            mov rax, qword [rax + 0x38] 	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_27
0x40005c9	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_27
0x40005d0	          0x4889d7	                            mov rdi, rdx	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_27
0x40005d3	            0xffd0	                                call rax	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_27
0x40005d5	            0x89c2	                            mov edx, eax	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_27
0x40005d7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_27
0x40005de	             0x1d0	                            add eax, edx	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_27
0x40005e0	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_27
0x40005e6	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40005ec	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40005f0	            0x727d	                            jb 0x400066f	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40005f2	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       213	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40005f9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       213	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40005fd	          0x4889d1	                            mov rcx, rdx	       213	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x4000600	          0x4829c1	                            sub rcx, rax	       213	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x4000603	    0x48baabaaaaaa	          movabs rdx, 0x2aaaaaaaaaaaaaab	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x400060d	          0x4889c8	                            mov rax, rcx	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000610	          0x48f7ea	                                imul rdx	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000613	          0x48d1fa	                              sar rdx, 1	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000616	          0x4889c8	                            mov rax, rcx	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000619	        0x48c1f83f	                           sar rax, 0x3f	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x400061d	          0x4829c2	                            sub rdx, rax	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000620	          0x4989d5	                            mov r13, rdx	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000623	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000629	        0x48c1e004	                              shl rax, 4	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x400062d	    0x480500000000	                              add rax, 0	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000633	          0x4c8b20	                    mov r12, qword [rax]	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000636	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       212	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_30
0x400063d	          0x488b18	                    mov rbx, qword [rax]	       212	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_30
0x4000640	      0xbf00000000	                              mov edi, 0	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000645	      0xe800000000	                          call 0x400064a	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x400064a	          0x4889c6	                            mov rsi, rax	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x400064d	    0x488b05000000	            mov rax, qword [0x04000654] 	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000654	          0x4d89e8	                             mov r8, r13	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000657	          0x4c89e1	                            mov rcx, r12	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x400065a	          0x4889da	                            mov rdx, rbx	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x400065d	          0x4889c7	                            mov rdi, rax	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000660	      0xb800000000	                              mov eax, 0	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x4000665	      0xe800000000	                          call 0x400066a	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_29
0x400066a	      0xe999000000	                           jmp 0x4000708	       214	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x400066f	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_31
0x4000675	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_31
0x4000679	        0x488d0c02	                    lea rcx, [rdx + rax]	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_31
0x400067d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_31
0x4000681	      0xba00000000	                              mov edx, 0	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_31
0x4000686	          0x4889ce	                            mov rsi, rcx	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_31
0x4000689	          0x4889c7	                            mov rdi, rax	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_31
0x400068c	      0xb800000000	                              mov eax, 0	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_31
0x4000691	      0xe800000000	                          call 0x4000696	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_31
0x4000696	        0x48894590	             mov qword [rbp - 0x70], rax	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_31
0x400069a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       223	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x400069e	          0xc6005c	                    mov byte [rax], 0x5c	       223	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006a1	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       225	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_9
0x40006a6	            0x740c	                            je 0x40006b4	       225	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_9
0x40006a8	        0x488b4588	             mov rax, qword [rbp - 0x78]	       226	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_32
0x40006ac	          0x4889c7	                            mov rdi, rax	       226	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_32
0x40006af	      0xe800000000	                          call 0x40006b4	       226	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_32
0x40006b4	        0x488b4590	             mov rax, qword [rbp - 0x70]	       227	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006b8	        0x48894588	             mov qword [rbp - 0x78], rax	       227	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006bc	        0x488b4590	             mov rax, qword [rbp - 0x70]	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_26
0x40006c0	          0x4889c7	                            mov rdi, rax	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_26
0x40006c3	      0xe800000000	                          call 0x40006c8	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_26
0x40006c8	        0x488945d0	             mov qword [rbp - 0x30], rax	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_26
0x40006cc	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_26
0x40006d1	            0x7435	                            je 0x4000708	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_26
0x40006d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006d7	        0x488d50ff	                      lea rdx, [rax - 1]	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006db	        0x488b4590	             mov rax, qword [rbp - 0x70]	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006df	          0x4801d0	                            add rax, rdx	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006e2	           0xfb600	                   movzx eax, byte [rax]	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006e5	            0x3c5c	                            cmp al, 0x5c	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006e7	            0x751f	                           jne 0x4000708	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006e9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006f0	        0x488d480c	                    lea rcx, [rax + 0xc]	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006f4	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006f8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006fc	          0x4801d0	                            add rax, rdx	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006ff	          0x4839c1	                            cmp rcx, rax	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000702	     0xf8290feffff	                            jb 0x4000598	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000708	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_33
0x400070c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_33
0x4000710	    0x8bb564ffffff	             mov esi, dword [rbp - 0x9c]	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_33
0x4000716	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_33
0x400071c	            0x89c7	                            mov edi, eax	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_33
0x400071e	      0xe861030000	                      call sym.save_stab	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_33
0x4000723	        0x4c8b4590	              mov r8, qword [rbp - 0x70]	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x4000727	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x400072b	    0x8b8d64ffffff	             mov ecx, dword [rbp - 0x9c]	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x4000731	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x4000737	    0x488bb568ffff	             mov rsi, qword [rbp - 0x98]	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x400073e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x4000745	          0x4d89c1	                              mov r9, r8	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x4000748	          0x4989f8	                             mov r8, rdi	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x400074b	          0x4889c7	                            mov rdi, rax	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x400074e	      0xe800000000	                          call 0x4000753	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x4000753	            0x85c0	                           test eax, eax	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x4000755	            0x7511	                           jne 0x4000768	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_34
0x4000757	      0xe848040000	                   call sym.stab_context	       234	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_35
0x400075c	      0xe8f0050000	               call sym.free_saved_stabs	       235	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_36
0x4000761	      0xb800000000	                              mov eax, 0	       236	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10
0x4000766	            0xeb7c	                           jmp 0x40007e4	       236	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10
0x4000768	    0x48838570ffff	             add qword [rbp - 0x90], 0xc	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000770	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000774	        0x488d50f4	                    lea rdx, [rax - 0xc]	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000778	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400077c	          0x4801d0	                            add rax, rdx	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400077f	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000786	     0xf837dfcffff	                           jae 0x4000409	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400078c	      0xe8c0050000	               call sym.free_saved_stabs	       245	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_37
0x4000791	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_38
0x4000795	          0x4889c7	                            mov rdi, rax	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_38
0x4000798	      0xe800000000	                          call 0x400079d	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_38
0x400079d	    0x838554ffffff	               add dword [rbp - 0xac], 1	       111	rddbg.c	FUNCTION_2	FOR_1
0x40007a4	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 2	       111	rddbg.c	FUNCTION_2	FOR_1
0x40007ab	     0xf8630faffff	                           jbe 0x40001e1	       111	rddbg.c	FUNCTION_2	FOR_1
0x40007b1	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       254	rddbg.c	FUNCTION_2	IF_11
0x40007b9	            0x7424	                            je 0x40007df	       254	rddbg.c	FUNCTION_2	IF_11
0x40007bb	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_39
0x40007c2	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_39
0x40007c9	          0x4889d6	                            mov rsi, rdx	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_39
0x40007cc	          0x4889c7	                            mov rdi, rax	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_39
0x40007cf	      0xe800000000	                          call 0x40007d4	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_39
0x40007d4	            0x85c0	                           test eax, eax	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_39
0x40007d6	            0x7507	                           jne 0x40007df	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_39
0x40007d8	      0xb800000000	                              mov eax, 0	       257	rddbg.c	FUNCTION_2	IF_11	IF_12
0x40007dd	            0xeb05	                           jmp 0x40007e4	       257	rddbg.c	FUNCTION_2	IF_11	IF_12
0x40007df	      0xb801000000	                              mov eax, 1	       260	rddbg.c	FUNCTION_2
0x40007e4	        0x488d65e8	                   lea rsp, [rbp - 0x18]	       261	rddbg.c	FUNCTION_2
0x40007e8	              0x5b	                                 pop rbx	       261	rddbg.c	FUNCTION_2
0x40007e9	            0x415c	                                 pop r12	       261	rddbg.c	FUNCTION_2
0x40007eb	            0x415d	                                 pop r13	       261	rddbg.c	FUNCTION_2
0x40007ed	              0x5d	                                 pop rbp	       261	rddbg.c	FUNCTION_2
0x40007ee	              0xc3	                                     ret	       261	rddbg.c	FUNCTION_2
read_debugging_info	CALL,9:WHILE,0:IF,8:ELSE,0:SWITCH,0:functions,0:FOR,0:DO,0	91
0x4000040	              0x55	                                push rbp	        47	rddbg.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        47	rddbg.c	FUNCTION_1
0x4000044	              0x53	                                push rbx	        47	rddbg.c	FUNCTION_1
0x4000045	        0x4883ec48	                           sub rsp, 0x48	        47	rddbg.c	FUNCTION_1
0x4000049	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        47	rddbg.c	FUNCTION_1
0x400004d	        0x488975c0	             mov qword [rbp - 0x40], rsi	        47	rddbg.c	FUNCTION_1
0x4000051	        0x488955b8	             mov qword [rbp - 0x48], rdx	        47	rddbg.c	FUNCTION_1
0x4000055	          0x894db4	             mov dword [rbp - 0x4c], ecx	        47	rddbg.c	FUNCTION_1
0x4000058	    0x64488b042528	                mov rax, qword fs:[0x28]	        47	rddbg.c	FUNCTION_1
0x4000061	        0x488945e8	             mov qword [rbp - 0x18], rax	        47	rddbg.c	FUNCTION_1
0x4000065	            0x31c0	                            xor eax, eax	        47	rddbg.c	FUNCTION_1
0x4000067	      0xe800000000	                          call 0x400006c	        51	rddbg.c	FUNCTION_1	CALL_1
0x400006c	        0x488945e0	             mov qword [rbp - 0x20], rax	        51	rddbg.c	FUNCTION_1	CALL_1
0x4000070	      0x48837de000	               cmp qword [rbp - 0x20], 0	        52	rddbg.c	FUNCTION_1	IF_1
0x4000075	            0x750a	                           jne 0x4000081	        52	rddbg.c	FUNCTION_1	IF_1
0x4000077	      0xb800000000	                              mov eax, 0	        53	rddbg.c	FUNCTION_1	IF_1
0x400007c	      0xe9eb000000	                           jmp 0x400016c	        53	rddbg.c	FUNCTION_1	IF_1
0x4000081	        0x488d7ddc	                   lea rdi, [rbp - 0x24]	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x4000085	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x4000089	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x400008d	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x4000091	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x4000095	          0x4989f8	                             mov r8, rdi	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x4000098	          0x4889c7	                            mov rdi, rax	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x400009b	      0xe8e7000000	call sym.read_section_stabs_debugging_info	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x40000a0	            0x85c0	                           test eax, eax	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x40000a2	            0x750a	                           jne 0x40000ae	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x40000a4	      0xb800000000	                              mov eax, 0	        57	rddbg.c	FUNCTION_1	IF_2
0x40000a9	      0xe9be000000	                           jmp 0x400016c	        57	rddbg.c	FUNCTION_1	IF_2
0x40000ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x40000b2	        0x488b4008	                mov rax, qword [rax + 8]	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x40000b6	          0x8b4008	                mov eax, dword [rax + 8]	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x40000b9	          0x83f801	                              cmp eax, 1	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x40000bc	            0x752d	                           jne 0x40000eb	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x40000be	        0x488d7ddc	                   lea rdi, [rbp - 0x24]	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40000c2	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40000c6	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40000ca	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40000ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40000d2	          0x4989f8	                             mov r8, rdi	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40000d5	          0x4889c7	                            mov rdi, rax	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40000d8	      0xe812070000	call sym.read_symbol_stabs_debugging_info	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40000dd	            0x85c0	                           test eax, eax	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40000df	            0x750a	                           jne 0x40000eb	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40000e1	      0xb800000000	                              mov eax, 0	        63	rddbg.c	FUNCTION_1	IF_3	IF_4
0x40000e6	      0xe981000000	                           jmp 0x400016c	        63	rddbg.c	FUNCTION_1	IF_3	IF_4
0x40000eb	          0x8b45dc	             mov eax, dword [rbp - 0x24]	        68	rddbg.c	FUNCTION_1	IF_5
0x40000ee	            0x85c0	                           test eax, eax	        68	rddbg.c	FUNCTION_1	IF_5
0x40000f0	            0x7541	                           jne 0x4000133	        68	rddbg.c	FUNCTION_1	IF_5
0x40000f2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        69	rddbg.c	FUNCTION_1	IF_5	CALL_5
0x40000f6	        0x488b4008	                mov rax, qword [rax + 8]	        69	rddbg.c	FUNCTION_1	IF_5	CALL_5
0x40000fa	          0x8b4008	                mov eax, dword [rax + 8]	        69	rddbg.c	FUNCTION_1	IF_5	CALL_5
0x40000fd	          0x83f802	                              cmp eax, 2	        69	rddbg.c	FUNCTION_1	IF_5	CALL_5
0x4000100	            0x7531	                           jne 0x4000133	        69	rddbg.c	FUNCTION_1	IF_5	CALL_5
0x4000102	      0x48837db800	               cmp qword [rbp - 0x48], 0	        70	rddbg.c	FUNCTION_1	IF_5
0x4000107	            0x7e2a	                           jle 0x4000133	        70	rddbg.c	FUNCTION_1	IF_5
0x4000109	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x400010d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000111	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000115	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000119	          0x4889c7	                            mov rdi, rax	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x400011c	      0xe800000000	                          call 0x4000121	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000121	            0x85c0	                           test eax, eax	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000123	            0x7507	                           jne 0x400012c	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000125	      0xb800000000	                              mov eax, 0	        73	rddbg.c	FUNCTION_1	IF_5	IF_6
0x400012a	            0xeb40	                           jmp 0x400016c	        73	rddbg.c	FUNCTION_1	IF_5	IF_6
0x400012c	    0xc745dc010000	               mov dword [rbp - 0x24], 1	        74	rddbg.c	FUNCTION_1	IF_5
0x4000133	          0x8b45dc	             mov eax, dword [rbp - 0x24]	        77	rddbg.c	FUNCTION_1	IF_7
0x4000136	            0x85c0	                           test eax, eax	        77	rddbg.c	FUNCTION_1	IF_7
0x4000138	            0x752e	                           jne 0x4000168	        77	rddbg.c	FUNCTION_1	IF_7
0x400013a	        0x837db400	               cmp dword [rbp - 0x4c], 0	        79	rddbg.c	FUNCTION_1	IF_7	IF_8
0x400013e	            0x7521	                           jne 0x4000161	        79	rddbg.c	FUNCTION_1	IF_7	IF_8
0x4000140	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        81	rddbg.c	FUNCTION_1	IF_7	CALL_9
0x4000144	          0x488b18	                    mov rbx, qword [rax]	        81	rddbg.c	FUNCTION_1	IF_7	CALL_9
0x4000147	      0xbf00000000	                              mov edi, 0	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400014c	      0xe800000000	                          call 0x4000151	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000151	          0x4889de	                            mov rsi, rbx	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000154	          0x4889c7	                            mov rdi, rax	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000157	      0xb800000000	                              mov eax, 0	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400015c	      0xe800000000	                          call 0x4000161	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000161	      0xb800000000	                              mov eax, 0	        82	rddbg.c	FUNCTION_1	IF_7
0x4000166	            0xeb04	                           jmp 0x400016c	        82	rddbg.c	FUNCTION_1	IF_7
0x4000168	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        85	rddbg.c	FUNCTION_1
0x400016c	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	        86	rddbg.c	FUNCTION_1
0x4000170	    0x6448331c2528	                xor rbx, qword fs:[0x28]	        86	rddbg.c	FUNCTION_1
0x4000179	            0x7405	                            je 0x4000180	        86	rddbg.c	FUNCTION_1
0x400017b	      0xe800000000	                          call 0x4000180	        86	rddbg.c	FUNCTION_1
0x4000180	        0x4883c448	                           add rsp, 0x48	        86	rddbg.c	FUNCTION_1
0x4000184	              0x5b	                                 pop rbx	        86	rddbg.c	FUNCTION_1
0x4000185	              0x5d	                                 pop rbp	        86	rddbg.c	FUNCTION_1
0x4000186	              0xc3	                                     ret	        86	rddbg.c	FUNCTION_1
free_saved_stabs	CALL,1:WHILE,0:IF,1:ELSE,0:SWITCH,0:functions,0:FOR,1:DO,0	40
0x4000d51	              0x55	                                push rbp	       414	rddbg.c	FUNCTION_6
0x4000d52	          0x4889e5	                            mov rbp, rsp	       414	rddbg.c	FUNCTION_6
0x4000d55	        0x4883ec10	                           sub rsp, 0x10	       414	rddbg.c	FUNCTION_6
0x4000d59	    0xc745fc000000	                  mov dword [rbp - 4], 0	       417	rddbg.c	FUNCTION_6	FOR_1
0x4000d60	            0xeb69	                           jmp 0x4000dcb	       417	rddbg.c	FUNCTION_6	FOR_1
0x4000d62	          0x8b45fc	                mov eax, dword [rbp - 4]	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000d65	          0x4863d0	                         movsxd rdx, eax	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000d68	          0x4889d0	                            mov rax, rdx	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000d6b	          0x4801c0	                            add rax, rax	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000d6e	          0x4801d0	                            add rax, rdx	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000d71	        0x48c1e003	                              shl rax, 3	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000d75	    0x480500000000	                              add rax, 0	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000d7b	          0x488b00	                    mov rax, qword [rax]	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000d7e	          0x4885c0	                           test rax, rax	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000d81	            0x7444	                            je 0x4000dc7	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000d83	          0x8b45fc	                mov eax, dword [rbp - 4]	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000d86	          0x4863d0	                         movsxd rdx, eax	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000d89	          0x4889d0	                            mov rax, rdx	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000d8c	          0x4801c0	                            add rax, rax	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000d8f	          0x4801d0	                            add rax, rdx	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000d92	        0x48c1e003	                              shl rax, 3	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000d96	    0x480500000000	                              add rax, 0	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000d9c	          0x488b00	                    mov rax, qword [rax]	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000d9f	          0x4889c7	                            mov rdi, rax	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000da2	      0xe800000000	                          call 0x4000da7	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000da7	          0x8b45fc	                mov eax, dword [rbp - 4]	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000daa	          0x4863d0	                         movsxd rdx, eax	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000dad	          0x4889d0	                            mov rax, rdx	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000db0	          0x4801c0	                            add rax, rax	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000db3	          0x4801d0	                            add rax, rdx	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000db6	        0x48c1e003	                              shl rax, 3	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000dba	    0x480500000000	                              add rax, 0	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000dc0	    0x48c700000000	                      mov qword [rax], 0	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000dc7	        0x8345fc01	                  add dword [rbp - 4], 1	       417	rddbg.c	FUNCTION_6	FOR_1
0x4000dcb	        0x837dfc0f	                cmp dword [rbp - 4], 0xf	       417	rddbg.c	FUNCTION_6	FOR_1
0x4000dcf	            0x7e91	                           jle 0x4000d62	       417	rddbg.c	FUNCTION_6	FOR_1
0x4000dd1	    0xc70500000000	               mov dword [0x04000ddb], 0	       426	rddbg.c	FUNCTION_6
0x4000ddb	              0x90	                                     nop	       427	rddbg.c	FUNCTION_6
0x4000ddc	              0xc9	                                   leave	       427	rddbg.c	FUNCTION_6
0x4000ddd	              0xc3	                                     ret	       427	rddbg.c	FUNCTION_6
stab_context	CALL,11:WHILE,0:IF,4:ELSE,2:SWITCH,0:functions,0:FOR,0:DO,1	108
0x4000ba4	              0x55	                                push rbp	       376	rddbg.c	FUNCTION_5
0x4000ba5	          0x4889e5	                            mov rbp, rsp	       376	rddbg.c	FUNCTION_5
0x4000ba8	        0x4883ec20	                           sub rsp, 0x20	       376	rddbg.c	FUNCTION_5
0x4000bac	      0xbf00000000	                              mov edi, 0	       379	rddbg.c	FUNCTION_5	CALL_2
0x4000bb1	      0xe800000000	                          call 0x4000bb6	       379	rddbg.c	FUNCTION_5	CALL_2
0x4000bb6	          0x4889c2	                            mov rdx, rax	       379	rddbg.c	FUNCTION_5	CALL_2
0x4000bb9	    0x488b05000000	            mov rax, qword [0x04000bc0] 	       379	rddbg.c	FUNCTION_5	CALL_2
0x4000bc0	          0x4889d6	                            mov rsi, rdx	       379	rddbg.c	FUNCTION_5	CALL_2
0x4000bc3	          0x4889c7	                            mov rdi, rax	       379	rddbg.c	FUNCTION_5	CALL_2
0x4000bc6	      0xb800000000	                              mov eax, 0	       379	rddbg.c	FUNCTION_5	CALL_2
0x4000bcb	      0xe800000000	                          call 0x4000bd0	       379	rddbg.c	FUNCTION_5	CALL_2
0x4000bd0	    0x488b05000000	            mov rax, qword [0x04000bd7] 	       380	rddbg.c	FUNCTION_5	CALL_3
0x4000bd7	          0x4889c1	                            mov rcx, rax	       380	rddbg.c	FUNCTION_5	CALL_3
0x4000bda	      0xba1e000000	                           mov edx, 0x1e	       380	rddbg.c	FUNCTION_5	CALL_3
0x4000bdf	      0xbe01000000	                              mov esi, 1	       380	rddbg.c	FUNCTION_5	CALL_3
0x4000be4	      0xbf00000000	                              mov edi, 0	       380	rddbg.c	FUNCTION_5	CALL_3
0x4000be9	      0xe800000000	                          call 0x4000bee	       380	rddbg.c	FUNCTION_5	CALL_3
0x4000bee	    0x8b0500000000	            mov eax, dword [0x04000bf4] 	       382	rddbg.c	FUNCTION_5
0x4000bf4	          0x8945ec	             mov dword [rbp - 0x14], eax	       382	rddbg.c	FUNCTION_5
0x4000bf7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       387	rddbg.c	FUNCTION_5	DO_1
0x4000bfa	          0x4863d0	                         movsxd rdx, eax	       387	rddbg.c	FUNCTION_5	DO_1
0x4000bfd	          0x4889d0	                            mov rax, rdx	       387	rddbg.c	FUNCTION_5	DO_1
0x4000c00	          0x4801c0	                            add rax, rax	       387	rddbg.c	FUNCTION_5	DO_1
0x4000c03	          0x4801d0	                            add rax, rdx	       387	rddbg.c	FUNCTION_5	DO_1
0x4000c06	        0x48c1e003	                              shl rax, 3	       387	rddbg.c	FUNCTION_5	DO_1
0x4000c0a	    0x480500000000	                              add rax, 0	       387	rddbg.c	FUNCTION_5	DO_1
0x4000c10	        0x488945f0	             mov qword [rbp - 0x10], rax	       387	rddbg.c	FUNCTION_5	DO_1
0x4000c14	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       388	rddbg.c	FUNCTION_5	DO_1	IF_1
0x4000c18	        0x488b4010	            mov rax, qword [rax + 0x10] 	       388	rddbg.c	FUNCTION_5	DO_1	IF_1
0x4000c1c	          0x4885c0	                           test rax, rax	       388	rddbg.c	FUNCTION_5	DO_1	IF_1
0x4000c1f	     0xf8400010000	                            je 0x4000d25	       388	rddbg.c	FUNCTION_5	DO_1	IF_1
0x4000c25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       392	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_4
0x4000c29	            0x8b00	                    mov eax, dword [rax]	       392	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_4
0x4000c2b	            0x89c7	                            mov edi, eax	       392	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_4
0x4000c2d	      0xe800000000	                          call 0x4000c32	       392	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_4
0x4000c32	        0x488945f8	                mov qword [rbp - 8], rax	       392	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_4
0x4000c36	      0x48837df800	                  cmp qword [rbp - 8], 0	       393	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_2
0x4000c3b	            0x741f	                            je 0x4000c5c	       393	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_2
0x4000c3d	    0x488b05000000	            mov rax, qword [0x04000c44] 	       394	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_5
0x4000c44	        0x488b55f8	                mov rdx, qword [rbp - 8]	       394	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_5
0x4000c48	      0xbe00000000	                              mov esi, 0	       394	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_5
0x4000c4d	          0x4889c7	                            mov rdi, rax	       394	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_5
0x4000c50	      0xb800000000	                              mov eax, 0	       394	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_5
0x4000c55	      0xe800000000	                          call 0x4000c5a	       394	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_5
0x4000c5a	            0xeb49	                           jmp 0x4000ca5	       394	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_5
0x4000c5c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000c60	            0x8b00	                    mov eax, dword [rax]	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000c62	            0x85c0	                           test eax, eax	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000c64	            0x7520	                           jne 0x4000c86	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000c66	    0x488b05000000	            mov rax, qword [0x04000c6d] 	       396	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000c6d	          0x4889c1	                            mov rcx, rax	       396	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000c70	      0xba06000000	                              mov edx, 6	       396	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000c75	      0xbe01000000	                              mov esi, 1	       396	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000c7a	      0xbf00000000	                              mov edi, 0	       396	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000c7f	      0xe800000000	                          call 0x4000c84	       396	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000c84	            0xeb1f	                           jmp 0x4000ca5	       396	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000c86	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       398	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_7
0x4000c8a	            0x8b10	                    mov edx, dword [rax]	       398	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_7
0x4000c8c	    0x488b05000000	            mov rax, qword [0x04000c93] 	       398	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_7
0x4000c93	      0xbe00000000	                              mov esi, 0	       398	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_7
0x4000c98	          0x4889c7	                            mov rdi, rax	       398	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_7
0x4000c9b	      0xb800000000	                              mov eax, 0	       398	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_7
0x4000ca0	      0xe800000000	                          call 0x4000ca5	       398	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_7
0x4000ca5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       399	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_8
0x4000ca9	          0x8b5004	                mov edx, dword [rax + 4]	       399	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_8
0x4000cac	    0x488b05000000	            mov rax, qword [0x04000cb3] 	       399	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_8
0x4000cb3	      0xbe00000000	                              mov esi, 0	       399	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_8
0x4000cb8	          0x4889c7	                            mov rdi, rax	       399	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_8
0x4000cbb	      0xb800000000	                              mov eax, 0	       399	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_8
0x4000cc0	      0xe800000000	                          call 0x4000cc5	       399	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_8
0x4000cc5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       400	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_9
0x4000cc9	        0x488b5008	                mov rdx, qword [rax + 8]	       400	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_9
0x4000ccd	    0x488b05000000	            mov rax, qword [0x04000cd4] 	       400	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_9
0x4000cd4	      0xbe00000000	                              mov esi, 0	       400	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_9
0x4000cd9	          0x4889c7	                            mov rdi, rax	       400	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_9
0x4000cdc	      0xb800000000	                              mov eax, 0	       400	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_9
0x4000ce1	      0xe800000000	                          call 0x4000ce6	       400	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_9
0x4000ce6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x4000cea	            0x8b00	                    mov eax, dword [rax]	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x4000cec	            0x85c0	                           test eax, eax	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x4000cee	            0x7421	                            je 0x4000d11	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x4000cf0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       402	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_10
0x4000cf4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       402	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_10
0x4000cf8	    0x488b05000000	            mov rax, qword [0x04000cff] 	       402	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_10
0x4000cff	      0xbe00000000	                              mov esi, 0	       402	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_10
0x4000d04	          0x4889c7	                            mov rdi, rax	       402	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_10
0x4000d07	      0xb800000000	                              mov eax, 0	       402	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_10
0x4000d0c	      0xe800000000	                          call 0x4000d11	       402	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_10
0x4000d11	    0x488b05000000	            mov rax, qword [0x04000d18] 	       403	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_11
0x4000d18	          0x4889c6	                            mov rsi, rax	       403	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_11
0x4000d1b	      0xbf0a000000	                            mov edi, 0xa	       403	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_11
0x4000d20	      0xe800000000	                          call 0x4000d25	       403	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_11
0x4000d25	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       405	rddbg.c	FUNCTION_5	DO_1
0x4000d28	          0x8d5001	                      lea edx, [rax + 1]	       405	rddbg.c	FUNCTION_5	DO_1
0x4000d2b	            0x89d0	                            mov eax, edx	       405	rddbg.c	FUNCTION_5	DO_1
0x4000d2d	          0xc1f81f	                           sar eax, 0x1f	       405	rddbg.c	FUNCTION_5	DO_1
0x4000d30	          0xc1e81c	                           shr eax, 0x1c	       405	rddbg.c	FUNCTION_5	DO_1
0x4000d33	             0x1c2	                            add edx, eax	       405	rddbg.c	FUNCTION_5	DO_1
0x4000d35	          0x83e20f	                            and edx, 0xf	       405	rddbg.c	FUNCTION_5	DO_1
0x4000d38	            0x29c2	                            sub edx, eax	       405	rddbg.c	FUNCTION_5	DO_1
0x4000d3a	            0x89d0	                            mov eax, edx	       405	rddbg.c	FUNCTION_5	DO_1
0x4000d3c	          0x8945ec	             mov dword [rbp - 0x14], eax	       405	rddbg.c	FUNCTION_5	DO_1
0x4000d3f	    0x8b0500000000	            mov eax, dword [0x04000d45] 	       407	rddbg.c	FUNCTION_5
0x4000d45	          0x3945ec	            cmp dword [rbp - 0x14], eax 	       407	rddbg.c	FUNCTION_5
0x4000d48	     0xf85a9feffff	                           jne 0x4000bf7	       407	rddbg.c	FUNCTION_5
0x4000d4e	              0x90	                                     nop	       408	rddbg.c	FUNCTION_5
0x4000d4f	              0xc9	                                   leave	       408	rddbg.c	FUNCTION_5
0x4000d50	              0xc3	                                     ret	       408	rddbg.c	FUNCTION_5
save_stab	CALL,2:WHILE,0:IF,1:ELSE,0:SWITCH,0:functions,0:FOR,0:DO,0	82
0x4000a84	              0x55	                                push rbp	       362	rddbg.c	FUNCTION_4
0x4000a85	          0x4889e5	                            mov rbp, rsp	       362	rddbg.c	FUNCTION_4
0x4000a88	              0x53	                                push rbx	       362	rddbg.c	FUNCTION_4
0x4000a89	        0x4883ec28	                           sub rsp, 0x28	       362	rddbg.c	FUNCTION_4
0x4000a8d	          0x897dec	             mov dword [rbp - 0x14], edi	       362	rddbg.c	FUNCTION_4
0x4000a90	          0x8975e8	             mov dword [rbp - 0x18], esi	       362	rddbg.c	FUNCTION_4
0x4000a93	        0x488955e0	             mov qword [rbp - 0x20], rdx	       362	rddbg.c	FUNCTION_4
0x4000a97	        0x48894dd8	             mov qword [rbp - 0x28], rcx	       362	rddbg.c	FUNCTION_4
0x4000a9b	    0x8b0500000000	            mov eax, dword [0x04000aa1] 	       363	rddbg.c	FUNCTION_4	IF_1
0x4000aa1	          0x4863d0	                         movsxd rdx, eax	       363	rddbg.c	FUNCTION_4	IF_1
0x4000aa4	          0x4889d0	                            mov rax, rdx	       363	rddbg.c	FUNCTION_4	IF_1
0x4000aa7	          0x4801c0	                            add rax, rax	       363	rddbg.c	FUNCTION_4	IF_1
0x4000aaa	          0x4801d0	                            add rax, rdx	       363	rddbg.c	FUNCTION_4	IF_1
0x4000aad	        0x48c1e003	                              shl rax, 3	       363	rddbg.c	FUNCTION_4	IF_1
0x4000ab1	    0x480500000000	                              add rax, 0	       363	rddbg.c	FUNCTION_4	IF_1
0x4000ab7	          0x488b00	                    mov rax, qword [rax]	       363	rddbg.c	FUNCTION_4	IF_1
0x4000aba	          0x4885c0	                           test rax, rax	       363	rddbg.c	FUNCTION_4	IF_1
0x4000abd	            0x7427	                            je 0x4000ae6	       363	rddbg.c	FUNCTION_4	IF_1
0x4000abf	    0x8b0500000000	            mov eax, dword [0x04000ac5] 	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000ac5	          0x4863d0	                         movsxd rdx, eax	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000ac8	          0x4889d0	                            mov rax, rdx	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000acb	          0x4801c0	                            add rax, rax	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000ace	          0x4801d0	                            add rax, rdx	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000ad1	        0x48c1e003	                              shl rax, 3	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000ad5	    0x480500000000	                              add rax, 0	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000adb	          0x488b00	                    mov rax, qword [rax]	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000ade	          0x4889c7	                            mov rdi, rax	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000ae1	      0xe800000000	                          call 0x4000ae6	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000ae6	    0x8b0500000000	            mov eax, dword [0x04000aec] 	       365	rddbg.c	FUNCTION_4
0x4000aec	          0x4863d0	                         movsxd rdx, eax	       365	rddbg.c	FUNCTION_4
0x4000aef	          0x4889d0	                            mov rax, rdx	       365	rddbg.c	FUNCTION_4
0x4000af2	          0x4801c0	                            add rax, rax	       365	rddbg.c	FUNCTION_4
0x4000af5	          0x4801d0	                            add rax, rdx	       365	rddbg.c	FUNCTION_4
0x4000af8	        0x48c1e003	                              shl rax, 3	       365	rddbg.c	FUNCTION_4
0x4000afc	    0x488d90000000	                          lea rdx, [rax]	       365	rddbg.c	FUNCTION_4
0x4000b03	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       365	rddbg.c	FUNCTION_4
0x4000b06	            0x8902	                    mov dword [rdx], eax	       365	rddbg.c	FUNCTION_4
0x4000b08	    0x8b0500000000	            mov eax, dword [0x04000b0e] 	       366	rddbg.c	FUNCTION_4
0x4000b0e	          0x4863d0	                         movsxd rdx, eax	       366	rddbg.c	FUNCTION_4
0x4000b11	          0x4889d0	                            mov rax, rdx	       366	rddbg.c	FUNCTION_4
0x4000b14	          0x4801c0	                            add rax, rax	       366	rddbg.c	FUNCTION_4
0x4000b17	          0x4801d0	                            add rax, rdx	       366	rddbg.c	FUNCTION_4
0x4000b1a	        0x48c1e003	                              shl rax, 3	       366	rddbg.c	FUNCTION_4
0x4000b1e	    0x488d90000000	                          lea rdx, [rax]	       366	rddbg.c	FUNCTION_4
0x4000b25	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       366	rddbg.c	FUNCTION_4
0x4000b28	            0x8902	                    mov dword [rdx], eax	       366	rddbg.c	FUNCTION_4
0x4000b2a	    0x8b0500000000	            mov eax, dword [0x04000b30] 	       367	rddbg.c	FUNCTION_4
0x4000b30	          0x4863d0	                         movsxd rdx, eax	       367	rddbg.c	FUNCTION_4
0x4000b33	          0x4889d0	                            mov rax, rdx	       367	rddbg.c	FUNCTION_4
0x4000b36	          0x4801c0	                            add rax, rax	       367	rddbg.c	FUNCTION_4
0x4000b39	          0x4801d0	                            add rax, rdx	       367	rddbg.c	FUNCTION_4
0x4000b3c	        0x48c1e003	                              shl rax, 3	       367	rddbg.c	FUNCTION_4
0x4000b40	    0x488d90000000	                          lea rdx, [rax]	       367	rddbg.c	FUNCTION_4
0x4000b47	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       367	rddbg.c	FUNCTION_4
0x4000b4b	          0x488902	                    mov qword [rdx], rax	       367	rddbg.c	FUNCTION_4
0x4000b4e	    0x8b1d00000000	            mov ebx, dword [0x04000b54] 	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b54	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b58	          0x4889c7	                            mov rdi, rax	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b5b	      0xe800000000	                          call 0x4000b60	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b60	          0x4889c1	                            mov rcx, rax	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b63	          0x4863d3	                         movsxd rdx, ebx	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b66	          0x4889d0	                            mov rax, rdx	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b69	          0x4801c0	                            add rax, rax	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b6c	          0x4801d0	                            add rax, rdx	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b6f	        0x48c1e003	                              shl rax, 3	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b73	    0x480500000000	                              add rax, 0	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b79	          0x488908	                    mov qword [rax], rcx	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000b7c	    0x8b0500000000	            mov eax, dword [0x04000b82] 	       369	rddbg.c	FUNCTION_4
0x4000b82	          0x8d5001	                      lea edx, [rax + 1]	       369	rddbg.c	FUNCTION_4
0x4000b85	            0x89d0	                            mov eax, edx	       369	rddbg.c	FUNCTION_4
0x4000b87	          0xc1f81f	                           sar eax, 0x1f	       369	rddbg.c	FUNCTION_4
0x4000b8a	          0xc1e81c	                           shr eax, 0x1c	       369	rddbg.c	FUNCTION_4
0x4000b8d	             0x1c2	                            add edx, eax	       369	rddbg.c	FUNCTION_4
0x4000b8f	          0x83e20f	                            and edx, 0xf	       369	rddbg.c	FUNCTION_4
0x4000b92	            0x29c2	                            sub edx, eax	       369	rddbg.c	FUNCTION_4
0x4000b94	            0x89d0	                            mov eax, edx	       369	rddbg.c	FUNCTION_4
0x4000b96	    0x890500000000	            mov dword [0x04000b9c], eax 	       369	rddbg.c	FUNCTION_4
0x4000b9c	              0x90	                                     nop	       370	rddbg.c	FUNCTION_4
0x4000b9d	        0x4883c428	                           add rsp, 0x28	       370	rddbg.c	FUNCTION_4
0x4000ba1	              0x5b	                                 pop rbx	       370	rddbg.c	FUNCTION_4
0x4000ba2	              0x5d	                                 pop rbp	       370	rddbg.c	FUNCTION_4
0x4000ba3	              0xc3	                                     ret	       370	rddbg.c	FUNCTION_4
