_	DO,0:IF,1:CALL,2:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0	15
0x85	              0x55	                                push rbp	        51	gettext.h	FUNCTION_11
0x86	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_11
0x89	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_11
0x8d	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_11
0x91	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_11	IF_1
0x95	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_11	IF_1
0x98	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_11	IF_1
0x9a	            0x7507	                           jne 0x40000e3	        52	gettext.h	FUNCTION_11	IF_1
0x9c	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_11	IF_1
0xa1	            0xeb0c	                           jmp 0x40000ef	        53	gettext.h	FUNCTION_11	IF_1
0xa3	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_11	CALL_2
0xa7	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_11	CALL_2
0xaa	      0xe800000000	                          call 0x40000ef	        54	gettext.h	FUNCTION_11	CALL_2
0xaf	              0xc9	                                   leave	        55	gettext.h	FUNCTION_11
0xb0	              0xc3	                                     ret	        55	gettext.h	FUNCTION_11
action_name	DO,0:IF,0:CALL,0:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0	12
0xb1	              0x55	                                push rbp	        35	revert.c	FUNCTION_1
0xb2	          0x4889e5	                            mov rbp, rsp	        35	revert.c	FUNCTION_1
0xb5	        0x48897df8	                mov qword [rbp - 8], rdi	        35	revert.c	FUNCTION_1
0xb9	        0x488b45f8	                mov rax, qword [rbp - 8]	        36	revert.c	FUNCTION_1
0xbd	            0x8b00	                    mov eax, dword [rax]	        36	revert.c	FUNCTION_1
0xbf	            0x85c0	                           test eax, eax	        36	revert.c	FUNCTION_1
0xc1	            0x7507	                           jne 0x400010a	        36	revert.c	FUNCTION_1
0xc3	      0xb800000000	                              mov eax, 0	        36	revert.c	FUNCTION_1
0xc8	            0xeb05	                           jmp 0x400010f	        36	revert.c	FUNCTION_1
0xca	      0xb800000000	                              mov eax, 0	        36	revert.c	FUNCTION_1
0xcf	              0x5d	                                 pop rbp	        37	revert.c	FUNCTION_1
0xd0	              0xc3	                                     ret	        37	revert.c	FUNCTION_1
option_parse_m	DO,0:IF,2:CALL,2:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0	49
0x223	              0x55	                                push rbp	        60	revert.c	FUNCTION_4
0x224	          0x4889e5	                            mov rbp, rsp	        60	revert.c	FUNCTION_4
0x227	        0x4883ec40	                           sub rsp, 0x40	        60	revert.c	FUNCTION_4
0x22b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        60	revert.c	FUNCTION_4
0x22f	        0x488975d0	             mov qword [rbp - 0x30], rsi	        60	revert.c	FUNCTION_4
0x233	          0x8955cc	             mov dword [rbp - 0x34], edx	        60	revert.c	FUNCTION_4
0x236	    0x64488b042528	                mov rax, qword fs:[0x28]	        60	revert.c	FUNCTION_4
0x23f	        0x488945f8	                mov qword [rbp - 8], rax	        60	revert.c	FUNCTION_4
0x243	            0x31c0	                            xor eax, eax	        60	revert.c	FUNCTION_4
0x245	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        61	revert.c	FUNCTION_4
0x249	        0x488b4010	            mov rax, qword [rax + 0x10] 	        61	revert.c	FUNCTION_4
0x24d	        0x488945f0	             mov qword [rbp - 0x10], rax	        61	revert.c	FUNCTION_4
0x251	        0x837dcc00	               cmp dword [rbp - 0x34], 0	        64	revert.c	FUNCTION_4	IF_1
0x255	            0x7412	                            je 0x40002a9	        64	revert.c	FUNCTION_4	IF_1
0x257	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        65	revert.c	FUNCTION_4	IF_1
0x25b	    0xc7402c000000	               mov dword [rax + 0x2c], 0	        65	revert.c	FUNCTION_4	IF_1
0x262	      0xb800000000	                              mov eax, 0	        66	revert.c	FUNCTION_4	IF_1
0x267	            0xeb59	                           jmp 0x4000302	        66	revert.c	FUNCTION_4	IF_1
0x269	        0x488d4de8	                   lea rcx, [rbp - 0x18]	        69	revert.c	FUNCTION_4	CALL_1
0x26d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        69	revert.c	FUNCTION_4	CALL_1
0x271	      0xba0a000000	                            mov edx, 0xa	        69	revert.c	FUNCTION_4	CALL_1
0x276	          0x4889ce	                            mov rsi, rcx	        69	revert.c	FUNCTION_4	CALL_1
0x279	          0x4889c7	                            mov rdi, rax	        69	revert.c	FUNCTION_4	CALL_1
0x27c	      0xe800000000	                          call 0x40002c1	        69	revert.c	FUNCTION_4	CALL_1
0x281	            0x89c2	                            mov edx, eax	        69	revert.c	FUNCTION_4	CALL_1
0x283	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        69	revert.c	FUNCTION_4	CALL_1
0x287	          0x89502c	             mov dword [rax + 0x2c], edx	        69	revert.c	FUNCTION_4	CALL_1
0x28a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	revert.c	FUNCTION_4	IF_2
0x28e	           0xfb600	                   movzx eax, byte [rax]	        70	revert.c	FUNCTION_4	IF_2
0x291	            0x84c0	                             test al, al	        70	revert.c	FUNCTION_4	IF_2
0x293	            0x750b	                           jne 0x40002e0	        70	revert.c	FUNCTION_4	IF_2
0x295	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        70	revert.c	FUNCTION_4	IF_2
0x299	          0x8b402c	            mov eax, dword [rax + 0x2c] 	        70	revert.c	FUNCTION_4	IF_2
0x29c	            0x85c0	                           test eax, eax	        70	revert.c	FUNCTION_4	IF_2
0x29e	            0x7f1d	                            jg 0x40002fd	        70	revert.c	FUNCTION_4	IF_2
0x2a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        71	revert.c	FUNCTION_4	CALL_2
0x2a4	      0xba00000000	                              mov edx, 0	        71	revert.c	FUNCTION_4	CALL_2
0x2a9	      0xbe00000000	                              mov esi, 0	        71	revert.c	FUNCTION_4	CALL_2
0x2ae	          0x4889c7	                            mov rdi, rax	        71	revert.c	FUNCTION_4	CALL_2
0x2b1	      0xe800000000	                          call 0x40002f6	        71	revert.c	FUNCTION_4	CALL_2
0x2b6	      0xe845fdffff	                    call sym.const_error	        71	revert.c	FUNCTION_4	CALL_2
0x2bb	            0xeb05	                           jmp 0x4000302	        71	revert.c	FUNCTION_4	CALL_2
0x2bd	      0xb800000000	                              mov eax, 0	        73	revert.c	FUNCTION_4
0x2c2	        0x488b4df8	                mov rcx, qword [rbp - 8]	        74	revert.c	FUNCTION_4
0x2c6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        74	revert.c	FUNCTION_4
0x2cf	            0x7405	                            je 0x4000316	        74	revert.c	FUNCTION_4
0x2d1	      0xe800000000	                          call 0x4000316	        74	revert.c	FUNCTION_4
0x2d6	              0xc9	                                   leave	        74	revert.c	FUNCTION_4
0x2d7	              0xc3	                                     ret	        74	revert.c	FUNCTION_4
cmd_revert	DO,0:IF,2:CALL,5:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0	46
0xe12	              0x55	                                push rbp	       204	revert.c	FUNCTION_7
0xe13	          0x4889e5	                            mov rbp, rsp	       204	revert.c	FUNCTION_7
0xe16	    0x4881ecc00000	                           sub rsp, 0xc0	       204	revert.c	FUNCTION_7
0xe1d	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	       204	revert.c	FUNCTION_7
0xe23	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	       204	revert.c	FUNCTION_7
0xe2a	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	       204	revert.c	FUNCTION_7
0xe31	    0x64488b042528	                mov rax, qword fs:[0x28]	       204	revert.c	FUNCTION_7
0xe3a	        0x488945f8	                mov qword [rbp - 8], rax	       204	revert.c	FUNCTION_7
0xe3e	            0x31c0	                            xor eax, eax	       204	revert.c	FUNCTION_7
0xe40	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       205	revert.c	FUNCTION_7
0xe47	      0xb800000000	                              mov eax, 0	       205	revert.c	FUNCTION_7
0xe4c	      0xb911000000	                           mov ecx, 0x11	       205	revert.c	FUNCTION_7
0xe51	          0x4889d7	                            mov rdi, rdx	       205	revert.c	FUNCTION_7
0xe54	          0xf348ab	              rep stosq qword [rdi], rax	       205	revert.c	FUNCTION_7
0xe57	    0xc78570ffffff	     mov dword [rbp - 0x90], 0xffffffff 	       205	revert.c	FUNCTION_7
0xe61	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       205	revert.c	FUNCTION_7
0xe69	      0xbf00000000	                              mov edi, 0	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0xe6e	      0xe800000000	                          call 0x4000eb3	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0xe73	            0x85c0	                           test eax, eax	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0xe75	            0x740a	                            je 0x4000ec1	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0xe77	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	       209	revert.c	FUNCTION_7	IF_1
0xe81	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	       210	revert.c	FUNCTION_7
0xe8b	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       211	revert.c	FUNCTION_7	CALL_2
0xe92	          0x4889c7	                            mov rdi, rax	       211	revert.c	FUNCTION_7	CALL_2
0xe95	      0xe800000000	                          call 0x4000eda	       211	revert.c	FUNCTION_7	CALL_2
0xe9a	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       212	revert.c	FUNCTION_7	CALL_3
0xea1	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       212	revert.c	FUNCTION_7	CALL_3
0xea8	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       212	revert.c	FUNCTION_7	CALL_3
0xeae	          0x4889ce	                            mov rsi, rcx	       212	revert.c	FUNCTION_7	CALL_3
0xeb1	            0x89c7	                            mov edi, eax	       212	revert.c	FUNCTION_7	CALL_3
0xeb3	      0xe8aef5ffff	                  call sym.run_sequencer	       212	revert.c	FUNCTION_7	CALL_3
0xeb8	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       212	revert.c	FUNCTION_7	CALL_3
0xebe	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       213	revert.c	FUNCTION_7	IF_2
0xec5	            0x7917	                           jns 0x4000f1e	       213	revert.c	FUNCTION_7	IF_2
0xec7	      0xbf00000000	                              mov edi, 0	       214	revert.c	FUNCTION_7	CALL_5
0xecc	      0xe8b4f1ffff	                               call sym.	       214	revert.c	FUNCTION_7	CALL_5
0xed1	          0x4889c7	                            mov rdi, rax	       214	revert.c	FUNCTION_7	CALL_5
0xed4	      0xb800000000	                              mov eax, 0	       214	revert.c	FUNCTION_7	CALL_5
0xed9	      0xe800000000	                          call 0x4000f1e	       214	revert.c	FUNCTION_7	CALL_5
0xede	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       215	revert.c	FUNCTION_7
0xee4	        0x488b75f8	                mov rsi, qword [rbp - 8]	       216	revert.c	FUNCTION_7
0xee8	    0x644833342528	                xor rsi, qword fs:[0x28]	       216	revert.c	FUNCTION_7
0xef1	            0x7405	                            je 0x4000f38	       216	revert.c	FUNCTION_7
0xef3	      0xe800000000	                          call 0x4000f38	       216	revert.c	FUNCTION_7
0xef8	              0xc9	                                   leave	       216	revert.c	FUNCTION_7
0xef9	              0xc3	                                     ret	       216	revert.c	FUNCTION_7
verify_opt_compatible	DO,0:IF,2:CALL,6:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,1	84
0x2d8	              0x55	                                push rbp	        78	revert.c	FUNCTION_5
0x2d9	          0x4889e5	                            mov rbp, rsp	        78	revert.c	FUNCTION_5
0x2dc	    0x4881ecf00000	                           sub rsp, 0xf0	        78	revert.c	FUNCTION_5
0x2e3	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	        78	revert.c	FUNCTION_5
0x2ea	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	        78	revert.c	FUNCTION_5
0x2f1	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        78	revert.c	FUNCTION_5
0x2f8	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        78	revert.c	FUNCTION_5
0x2ff	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        78	revert.c	FUNCTION_5
0x306	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        78	revert.c	FUNCTION_5
0x30d	            0x84c0	                             test al, al	        78	revert.c	FUNCTION_5
0x30f	            0x7420	                            je 0x4000371	        78	revert.c	FUNCTION_5
0x311	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        78	revert.c	FUNCTION_5
0x315	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        78	revert.c	FUNCTION_5
0x319	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        78	revert.c	FUNCTION_5
0x31d	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        78	revert.c	FUNCTION_5
0x321	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        78	revert.c	FUNCTION_5
0x325	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        78	revert.c	FUNCTION_5
0x329	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        78	revert.c	FUNCTION_5
0x32d	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        78	revert.c	FUNCTION_5
0x331	    0x64488b042528	                mov rax, qword fs:[0x28]	        78	revert.c	FUNCTION_5
0x33a	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        78	revert.c	FUNCTION_5
0x341	            0x31c0	                            xor eax, eax	        78	revert.c	FUNCTION_5
0x343	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	        82	revert.c	FUNCTION_5	CALL_1
0x34d	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        82	revert.c	FUNCTION_5	CALL_1
0x357	        0x488d4510	                   lea rax, [rbp + 0x10]	        82	revert.c	FUNCTION_5	CALL_1
0x35b	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        82	revert.c	FUNCTION_5	CALL_1
0x362	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        82	revert.c	FUNCTION_5	CALL_1
0x369	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        82	revert.c	FUNCTION_5	CALL_1
0x370	            0xeb46	                           jmp 0x40003f8	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x372	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x378	          0x83f830	                           cmp eax, 0x30	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x37b	            0x7323	                           jae 0x40003e0	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x37d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x384	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x38a	            0x89d2	                            mov edx, edx	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x38c	          0x4801d0	                            add rax, rdx	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x38f	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x395	          0x83c208	                              add edx, 8	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x398	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x39e	            0xeb12	                           jmp 0x40003f2	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x3a0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x3a7	        0x488d5008	                      lea rdx, [rax + 8]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x3ab	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x3b2	            0x8b00	                    mov eax, dword [rax]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x3b4	            0x85c0	                           test eax, eax	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x3b6	            0x755a	                           jne 0x4000452	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x3b8	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3be	          0x83f830	                           cmp eax, 0x30	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3c1	            0x7323	                           jae 0x4000426	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3c3	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3ca	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3d0	            0x89d2	                            mov edx, edx	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3d2	          0x4801d0	                            add rax, rdx	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3d5	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3db	          0x83c208	                              add edx, 8	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3de	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3e4	            0xeb12	                           jmp 0x4000438	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3e6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3ed	        0x488d5008	                      lea rdx, [rax + 8]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3f1	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3f8	          0x488b00	                    mov rax, qword [rax]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x3fb	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x402	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40a	     0xf8562ffffff	                           jne 0x40003b2	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x410	            0xeb01	                           jmp 0x4000453	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x412	              0x90	                                     nop	        85	revert.c	FUNCTION_5	WHILE_1	IF_1
0x413	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	        89	revert.c	FUNCTION_5	IF_2
0x41b	            0x742f	                            je 0x400048c	        89	revert.c	FUNCTION_5	IF_2
0x41d	      0xbf00000000	                              mov edi, 0	        90	revert.c	FUNCTION_5	CALL_6
0x422	      0xe85efcffff	                               call sym.	        90	revert.c	FUNCTION_5	CALL_6
0x427	          0x4889c7	                            mov rdi, rax	        90	revert.c	FUNCTION_5	CALL_6
0x42a	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	        90	revert.c	FUNCTION_5	CALL_6
0x431	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        90	revert.c	FUNCTION_5	CALL_6
0x438	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        90	revert.c	FUNCTION_5	CALL_6
0x43f	          0x4889c6	                            mov rsi, rax	        90	revert.c	FUNCTION_5	CALL_6
0x442	      0xb800000000	                              mov eax, 0	        90	revert.c	FUNCTION_5	CALL_6
0x447	      0xe800000000	                          call 0x400048c	        90	revert.c	FUNCTION_5	CALL_6
0x44c	              0x90	                                     nop	        91	revert.c	FUNCTION_5
0x44d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        91	revert.c	FUNCTION_5
0x454	    0x644833042528	                xor rax, qword fs:[0x28]	        91	revert.c	FUNCTION_5
0x45d	            0x7405	                            je 0x40004a4	        91	revert.c	FUNCTION_5
0x45f	      0xe800000000	                          call 0x40004a4	        91	revert.c	FUNCTION_5
0x464	              0xc9	                                   leave	        91	revert.c	FUNCTION_5
0x465	              0xc3	                                     ret	        91	revert.c	FUNCTION_5
cmd_cherry_pick	DO,0:IF,1:CALL,4:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0	41
0xefa	              0x55	                                push rbp	       219	revert.c	FUNCTION_8
0xefb	          0x4889e5	                            mov rbp, rsp	       219	revert.c	FUNCTION_8
0xefe	    0x4881ecc00000	                           sub rsp, 0xc0	       219	revert.c	FUNCTION_8
0xf05	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	       219	revert.c	FUNCTION_8
0xf0b	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	       219	revert.c	FUNCTION_8
0xf12	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	       219	revert.c	FUNCTION_8
0xf19	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	revert.c	FUNCTION_8
0xf22	        0x488945f8	                mov qword [rbp - 8], rax	       219	revert.c	FUNCTION_8
0xf26	            0x31c0	                            xor eax, eax	       219	revert.c	FUNCTION_8
0xf28	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       220	revert.c	FUNCTION_8
0xf2f	      0xb800000000	                              mov eax, 0	       220	revert.c	FUNCTION_8
0xf34	      0xb911000000	                           mov ecx, 0x11	       220	revert.c	FUNCTION_8
0xf39	          0x4889d7	                            mov rdi, rdx	       220	revert.c	FUNCTION_8
0xf3c	          0xf348ab	              rep stosq qword [rdi], rax	       220	revert.c	FUNCTION_8
0xf3f	    0xc78570ffffff	     mov dword [rbp - 0x90], 0xffffffff 	       220	revert.c	FUNCTION_8
0xf49	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       220	revert.c	FUNCTION_8
0xf51	    0xc78570ffffff	               mov dword [rbp - 0x90], 1	       223	revert.c	FUNCTION_8
0xf5b	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       224	revert.c	FUNCTION_8	CALL_1
0xf62	          0x4889c7	                            mov rdi, rax	       224	revert.c	FUNCTION_8	CALL_1
0xf65	      0xe800000000	                          call 0x4000faa	       224	revert.c	FUNCTION_8	CALL_1
0xf6a	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       225	revert.c	FUNCTION_8	CALL_2
0xf71	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       225	revert.c	FUNCTION_8	CALL_2
0xf78	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       225	revert.c	FUNCTION_8	CALL_2
0xf7e	          0x4889ce	                            mov rsi, rcx	       225	revert.c	FUNCTION_8	CALL_2
0xf81	            0x89c7	                            mov edi, eax	       225	revert.c	FUNCTION_8	CALL_2
0xf83	      0xe8def4ffff	                  call sym.run_sequencer	       225	revert.c	FUNCTION_8	CALL_2
0xf88	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       225	revert.c	FUNCTION_8	CALL_2
0xf8e	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       226	revert.c	FUNCTION_8	IF_1
0xf95	            0x7917	                           jns 0x4000fee	       226	revert.c	FUNCTION_8	IF_1
0xf97	      0xbf00000000	                              mov edi, 0	       227	revert.c	FUNCTION_8	CALL_4
0xf9c	      0xe8e4f0ffff	                               call sym.	       227	revert.c	FUNCTION_8	CALL_4
0xfa1	          0x4889c7	                            mov rdi, rax	       227	revert.c	FUNCTION_8	CALL_4
0xfa4	      0xb800000000	                              mov eax, 0	       227	revert.c	FUNCTION_8	CALL_4
0xfa9	      0xe800000000	                          call 0x4000fee	       227	revert.c	FUNCTION_8	CALL_4
0xfae	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       228	revert.c	FUNCTION_8
0xfb4	        0x488b75f8	                mov rsi, qword [rbp - 8]	       229	revert.c	FUNCTION_8
0xfb8	    0x644833342528	                xor rsi, qword fs:[0x28]	       229	revert.c	FUNCTION_8
0xfc1	            0x7405	                            je 0x4001008	       229	revert.c	FUNCTION_8
0xfc3	      0xe800000000	                          call 0x4001008	       229	revert.c	FUNCTION_8
0xfc8	              0xc9	                                   leave	       229	revert.c	FUNCTION_8
0xfc9	              0xc3	                                     ret	       229	revert.c	FUNCTION_8
option_parse_x	DO,0:IF,1:CALL,2:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0	85
0xf1	              0x55	                                push rbp	        46	revert.c	FUNCTION_3
0xf2	          0x4889e5	                            mov rbp, rsp	        46	revert.c	FUNCTION_3
0xf5	              0x53	                                push rbx	        46	revert.c	FUNCTION_3
0xf6	        0x4883ec38	                           sub rsp, 0x38	        46	revert.c	FUNCTION_3
0xfa	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        46	revert.c	FUNCTION_3
0xfe	        0x488975d0	             mov qword [rbp - 0x30], rsi	        46	revert.c	FUNCTION_3
0x102	          0x8955cc	             mov dword [rbp - 0x34], edx	        46	revert.c	FUNCTION_3
0x105	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        47	revert.c	FUNCTION_3
0x109	        0x488b4010	            mov rax, qword [rax + 0x10] 	        47	revert.c	FUNCTION_3
0x10d	        0x488945e0	             mov qword [rbp - 0x20], rax	        47	revert.c	FUNCTION_3
0x111	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        48	revert.c	FUNCTION_3
0x115	          0x488b00	                    mov rax, qword [rax]	        48	revert.c	FUNCTION_3
0x118	        0x488945e8	             mov qword [rbp - 0x18], rax	        48	revert.c	FUNCTION_3
0x11c	        0x837dcc00	               cmp dword [rbp - 0x34], 0	        50	revert.c	FUNCTION_3	IF_1
0x120	            0x740a	                            je 0x400016c	        50	revert.c	FUNCTION_3	IF_1
0x122	      0xb800000000	                              mov eax, 0	        51	revert.c	FUNCTION_3	IF_1
0x127	      0xe9f0000000	                           jmp 0x400025c	        51	revert.c	FUNCTION_3	IF_1
0x12c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_3	CALL_1
0x130	        0x488b4050	            mov rax, qword [rax + 0x50] 	        53	revert.c	FUNCTION_3	CALL_1
0x134	        0x488d5001	                      lea rdx, [rax + 1]	        53	revert.c	FUNCTION_3	CALL_1
0x138	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_3	CALL_1
0x13c	        0x488b4058	            mov rax, qword [rax + 0x58] 	        53	revert.c	FUNCTION_3	CALL_1
0x140	          0x4839c2	                            cmp rdx, rax	        53	revert.c	FUNCTION_3	CALL_1
0x143	     0xf869b000000	                           jbe 0x4000224	        53	revert.c	FUNCTION_3	CALL_1
0x149	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_3	CALL_1
0x14d	        0x488b5058	            mov rdx, qword [rax + 0x58] 	        53	revert.c	FUNCTION_3	CALL_1
0x151	          0x4889d0	                            mov rax, rdx	        53	revert.c	FUNCTION_3	CALL_1
0x154	          0x4801c0	                            add rax, rax	        53	revert.c	FUNCTION_3	CALL_1
0x157	          0x4801d0	                            add rax, rdx	        53	revert.c	FUNCTION_3	CALL_1
0x15a	        0x4883c030	                           add rax, 0x30	        53	revert.c	FUNCTION_3	CALL_1
0x15e	          0x48d1e8	                              shr rax, 1	        53	revert.c	FUNCTION_3	CALL_1
0x161	          0x4889c2	                            mov rdx, rax	        53	revert.c	FUNCTION_3	CALL_1
0x164	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_3	CALL_1
0x168	        0x488b4050	            mov rax, qword [rax + 0x50] 	        53	revert.c	FUNCTION_3	CALL_1
0x16c	        0x4883c001	                              add rax, 1	        53	revert.c	FUNCTION_3	CALL_1
0x170	          0x4839c2	                            cmp rdx, rax	        53	revert.c	FUNCTION_3	CALL_1
0x173	            0x7316	                           jae 0x40001cb	        53	revert.c	FUNCTION_3	CALL_1
0x175	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_3	CALL_1
0x179	        0x488b4050	            mov rax, qword [rax + 0x50] 	        53	revert.c	FUNCTION_3	CALL_1
0x17d	        0x488d5001	                      lea rdx, [rax + 1]	        53	revert.c	FUNCTION_3	CALL_1
0x181	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_3	CALL_1
0x185	        0x48895058	             mov qword [rax + 0x58], rdx	        53	revert.c	FUNCTION_3	CALL_1
0x189	            0xeb23	                           jmp 0x40001ee	        53	revert.c	FUNCTION_3	CALL_1
0x18b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_3	CALL_1
0x18f	        0x488b5058	            mov rdx, qword [rax + 0x58] 	        53	revert.c	FUNCTION_3	CALL_1
0x193	          0x4889d0	                            mov rax, rdx	        53	revert.c	FUNCTION_3	CALL_1
0x196	          0x4801c0	                            add rax, rax	        53	revert.c	FUNCTION_3	CALL_1
0x199	          0x4801d0	                            add rax, rdx	        53	revert.c	FUNCTION_3	CALL_1
0x19c	        0x4883c030	                           add rax, 0x30	        53	revert.c	FUNCTION_3	CALL_1
0x1a0	          0x48d1e8	                              shr rax, 1	        53	revert.c	FUNCTION_3	CALL_1
0x1a3	          0x4889c2	                            mov rdx, rax	        53	revert.c	FUNCTION_3	CALL_1
0x1a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_3	CALL_1
0x1aa	        0x48895058	             mov qword [rax + 0x58], rdx	        53	revert.c	FUNCTION_3	CALL_1
0x1ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_3	CALL_1
0x1b2	        0x488b4058	            mov rax, qword [rax + 0x58] 	        53	revert.c	FUNCTION_3	CALL_1
0x1b6	          0x4889c6	                            mov rsi, rax	        53	revert.c	FUNCTION_3	CALL_1
0x1b9	      0xbf08000000	                              mov edi, 8	        53	revert.c	FUNCTION_3	CALL_1
0x1be	      0xe848feffff	                        call sym.st_mult	        53	revert.c	FUNCTION_3	CALL_1
0x1c3	          0x4889c2	                            mov rdx, rax	        53	revert.c	FUNCTION_3	CALL_1
0x1c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_3	CALL_1
0x1ca	        0x488b4048	            mov rax, qword [rax + 0x48] 	        53	revert.c	FUNCTION_3	CALL_1
0x1ce	          0x4889d6	                            mov rsi, rdx	        53	revert.c	FUNCTION_3	CALL_1
0x1d1	          0x4889c7	                            mov rdi, rax	        53	revert.c	FUNCTION_3	CALL_1
0x1d4	      0xe800000000	                          call 0x4000219	        53	revert.c	FUNCTION_3	CALL_1
0x1d9	          0x4889c2	                            mov rdx, rax	        53	revert.c	FUNCTION_3	CALL_1
0x1dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_3	CALL_1
0x1e0	        0x48895048	             mov qword [rax + 0x48], rdx	        53	revert.c	FUNCTION_3	CALL_1
0x1e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	revert.c	FUNCTION_3	CALL_2
0x1e8	        0x488b7048	            mov rsi, qword [rax + 0x48] 	        54	revert.c	FUNCTION_3	CALL_2
0x1ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	revert.c	FUNCTION_3	CALL_2
0x1f0	        0x488b4050	            mov rax, qword [rax + 0x50] 	        54	revert.c	FUNCTION_3	CALL_2
0x1f4	        0x488d4801	                      lea rcx, [rax + 1]	        54	revert.c	FUNCTION_3	CALL_2
0x1f8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        54	revert.c	FUNCTION_3	CALL_2
0x1fc	        0x48894a50	             mov qword [rdx + 0x50], rcx	        54	revert.c	FUNCTION_3	CALL_2
0x200	        0x48c1e003	                              shl rax, 3	        54	revert.c	FUNCTION_3	CALL_2
0x204	        0x488d1c06	                    lea rbx, [rsi + rax]	        54	revert.c	FUNCTION_3	CALL_2
0x208	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        54	revert.c	FUNCTION_3	CALL_2
0x20c	          0x4889c7	                            mov rdi, rax	        54	revert.c	FUNCTION_3	CALL_2
0x20f	      0xe800000000	                          call 0x4000254	        54	revert.c	FUNCTION_3	CALL_2
0x214	          0x488903	                    mov qword [rbx], rax	        54	revert.c	FUNCTION_3	CALL_2
0x217	      0xb800000000	                              mov eax, 0	        55	revert.c	FUNCTION_3
0x21c	        0x4883c438	                           add rsp, 0x38	        56	revert.c	FUNCTION_3
0x220	              0x5b	                                 pop rbx	        56	revert.c	FUNCTION_3
0x221	              0x5d	                                 pop rbp	        56	revert.c	FUNCTION_3
0x222	              0xc3	                                     ret	        56	revert.c	FUNCTION_3
st_mult	DO,0:IF,1:CALL,2:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0	22
0xb	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_27
0xc	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_27
0xf	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_27
0x13	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_27
0x17	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_27
0x1b	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x20	            0x7430	                            je 0x4000092	       795	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x22	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x29	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x2e	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x32	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x36	            0x731a	                           jae 0x4000092	       795	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x38	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x3c	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x40	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x43	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x48	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x4d	      0xe800000000	                          call 0x4000092	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x52	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_27
0x56	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_27
0x5b	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_27
0x5c	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_27
run_sequencer	DO,0:IF,13:CALL,57:functions,0:FOR,0:ELSE,3:SWITCH,0:WHILE,0	405
0x466	              0x55	                                push rbp	        94	revert.c	FUNCTION_6
0x467	          0x4889e5	                            mov rbp, rsp	        94	revert.c	FUNCTION_6
0x46a	            0x4154	                                push r12	        94	revert.c	FUNCTION_6
0x46c	              0x53	                                push rbx	        94	revert.c	FUNCTION_6
0x46d	    0x4881ec400500	                          sub rsp, 0x540	        94	revert.c	FUNCTION_6
0x474	    0x89bdccfaffff	            mov dword [rbp - 0x534], edi	        94	revert.c	FUNCTION_6
0x47a	    0x4889b5c0faff	            mov qword [rbp - 0x540], rsi	        94	revert.c	FUNCTION_6
0x481	    0x488995b8faff	            mov qword [rbp - 0x548], rdx	        94	revert.c	FUNCTION_6
0x488	    0x64488b042528	                mov rax, qword fs:[0x28]	        94	revert.c	FUNCTION_6
0x491	        0x488945e8	             mov qword [rbp - 0x18], rax	        94	revert.c	FUNCTION_6
0x495	            0x31c0	                            xor eax, eax	        94	revert.c	FUNCTION_6
0x497	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	        95	revert.c	FUNCTION_6	CALL_1
0x49e	          0x4889c7	                            mov rdi, rax	        95	revert.c	FUNCTION_6	CALL_1
0x4a1	      0xe82bfcffff	    call sym.revert_or_cherry_pick_usage	        95	revert.c	FUNCTION_6	CALL_1
0x4a6	    0x488985f0faff	            mov qword [rbp - 0x510], rax	        95	revert.c	FUNCTION_6	CALL_1
0x4ad	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	        96	revert.c	FUNCTION_6	CALL_2
0x4b4	          0x4889c7	                            mov rdi, rax	        96	revert.c	FUNCTION_6	CALL_2
0x4b7	      0xe8f5fbffff	                    call sym.action_name	        96	revert.c	FUNCTION_6	CALL_2
0x4bc	    0x488985f8faff	            mov qword [rbp - 0x508], rax	        96	revert.c	FUNCTION_6	CALL_2
0x4c3	    0xc785dcfaffff	              mov dword [rbp - 0x524], 0	        97	revert.c	FUNCTION_6
0x4cd	    0x488d95a0fcff	                  lea rdx, [rbp - 0x360]	        98	revert.c	FUNCTION_6
0x4d4	      0xb800000000	                              mov eax, 0	        98	revert.c	FUNCTION_6
0x4d9	      0xb968000000	                           mov ecx, 0x68	        98	revert.c	FUNCTION_6
0x4de	          0x4889d7	                            mov rdi, rdx	        98	revert.c	FUNCTION_6
0x4e1	          0xf348ab	              rep stosq qword [rdi], rax	        98	revert.c	FUNCTION_6
0x4e4	    0xc785a0fcffff	              mov dword [rbp - 0x360], 8	        98	revert.c	FUNCTION_6
0x4ee	    0x48c785a8fcff	              mov qword [rbp - 0x358], 0	        98	revert.c	FUNCTION_6
0x4f9	    0x488d85dcfaff	                  lea rax, [rbp - 0x524]	        98	revert.c	FUNCTION_6
0x500	    0x488985b0fcff	            mov qword [rbp - 0x350], rax	        98	revert.c	FUNCTION_6
0x507	    0x48c785c0fcff	              mov qword [rbp - 0x340], 0	        98	revert.c	FUNCTION_6
0x512	    0xc785c8fcffff	              mov dword [rbp - 0x338], 6	        98	revert.c	FUNCTION_6
0x51c	    0x48c785d8fcff	          mov qword [rbp - 0x328], 0x71 	        98	revert.c	FUNCTION_6
0x527	    0xc785e0fcffff	              mov dword [rbp - 0x320], 8	        98	revert.c	FUNCTION_6
0x531	    0x48c785e8fcff	              mov qword [rbp - 0x318], 0	        98	revert.c	FUNCTION_6
0x53c	    0x488d85dcfaff	                  lea rax, [rbp - 0x524]	        98	revert.c	FUNCTION_6
0x543	    0x488985f0fcff	            mov qword [rbp - 0x310], rax	        98	revert.c	FUNCTION_6
0x54a	    0x48c78500fdff	              mov qword [rbp - 0x300], 0	        98	revert.c	FUNCTION_6
0x555	    0xc78508fdffff	              mov dword [rbp - 0x2f8], 6	        98	revert.c	FUNCTION_6
0x55f	    0x48c78518fdff	          mov qword [rbp - 0x2e8], 0x63 	        98	revert.c	FUNCTION_6
0x56a	    0xc78520fdffff	              mov dword [rbp - 0x2e0], 8	        98	revert.c	FUNCTION_6
0x574	    0x48c78528fdff	              mov qword [rbp - 0x2d8], 0	        98	revert.c	FUNCTION_6
0x57f	    0x488d85dcfaff	                  lea rax, [rbp - 0x524]	        98	revert.c	FUNCTION_6
0x586	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	        98	revert.c	FUNCTION_6
0x58d	    0x48c78540fdff	              mov qword [rbp - 0x2c0], 0	        98	revert.c	FUNCTION_6
0x598	    0xc78548fdffff	              mov dword [rbp - 0x2b8], 6	        98	revert.c	FUNCTION_6
0x5a2	    0x48c78558fdff	          mov qword [rbp - 0x2a8], 0x61 	        98	revert.c	FUNCTION_6
0x5ad	    0xc78560fdffff	              mov dword [rbp - 0x2a0], 7	        98	revert.c	FUNCTION_6
0x5b7	    0xc78564fdffff	          mov dword [rbp - 0x29c], 0x6e 	        98	revert.c	FUNCTION_6
0x5c1	    0x48c78568fdff	              mov qword [rbp - 0x298], 0	        98	revert.c	FUNCTION_6
0x5cc	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       102	revert.c	FUNCTION_6	CALL_10
0x5d3	        0x4883c00c	                            add rax, 0xc	       102	revert.c	FUNCTION_6	CALL_10
0x5d7	    0x48898570fdff	            mov qword [rbp - 0x290], rax	        98	revert.c	FUNCTION_6
0x5de	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	        98	revert.c	FUNCTION_6
0x5e9	    0xc78588fdffff	              mov dword [rbp - 0x278], 2	        98	revert.c	FUNCTION_6
0x5f3	    0x48c78598fdff	              mov qword [rbp - 0x268], 1	        98	revert.c	FUNCTION_6
0x5fe	    0xc785a0fdffff	              mov dword [rbp - 0x260], 7	        98	revert.c	FUNCTION_6
0x608	    0xc785a4fdffff	          mov dword [rbp - 0x25c], 0x65 	        98	revert.c	FUNCTION_6
0x612	    0x48c785a8fdff	              mov qword [rbp - 0x258], 0	        98	revert.c	FUNCTION_6
0x61d	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       103	revert.c	FUNCTION_6	CALL_12
0x624	        0x4883c004	                              add rax, 4	       103	revert.c	FUNCTION_6	CALL_12
0x628	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	        98	revert.c	FUNCTION_6
0x62f	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	        98	revert.c	FUNCTION_6
0x63a	    0xc785c8fdffff	              mov dword [rbp - 0x238], 2	        98	revert.c	FUNCTION_6
0x644	    0x48c785d8fdff	              mov qword [rbp - 0x228], 1	        98	revert.c	FUNCTION_6
0x64f	    0xc785e0fdffff	           mov dword [rbp - 0x220], 0xc 	        98	revert.c	FUNCTION_6
0x659	    0xc785e4fdffff	          mov dword [rbp - 0x21c], 0x72 	        98	revert.c	FUNCTION_6
0x663	    0x48c78500feff	              mov qword [rbp - 0x200], 0	        98	revert.c	FUNCTION_6
0x66e	    0xc78508feffff	            mov dword [rbp - 0x1f8], 0xa	        98	revert.c	FUNCTION_6
0x678	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	        98	revert.c	FUNCTION_6
0x683	    0xc78520feffff	              mov dword [rbp - 0x1e0], 7	        98	revert.c	FUNCTION_6
0x68d	    0xc78524feffff	          mov dword [rbp - 0x1dc], 0x73 	        98	revert.c	FUNCTION_6
0x697	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	        98	revert.c	FUNCTION_6
0x6a2	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       105	revert.c	FUNCTION_6	CALL_15
0x6a9	        0x4883c010	                           add rax, 0x10	       105	revert.c	FUNCTION_6	CALL_15
0x6ad	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	        98	revert.c	FUNCTION_6
0x6b4	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	        98	revert.c	FUNCTION_6
0x6bf	    0xc78548feffff	              mov dword [rbp - 0x1b8], 2	        98	revert.c	FUNCTION_6
0x6c9	    0x48c78558feff	              mov qword [rbp - 0x1a8], 1	        98	revert.c	FUNCTION_6
0x6d4	    0xc78560feffff	           mov dword [rbp - 0x1a0], 0xc 	        98	revert.c	FUNCTION_6
0x6de	    0xc78564feffff	          mov dword [rbp - 0x19c], 0x6d 	        98	revert.c	FUNCTION_6
0x6e8	    0x48c78568feff	              mov qword [rbp - 0x198], 0	        98	revert.c	FUNCTION_6
0x6f3	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	        98	revert.c	FUNCTION_6
0x6fa	    0x48898570feff	            mov qword [rbp - 0x190], rax	        98	revert.c	FUNCTION_6
0x701	    0x48c78578feff	              mov qword [rbp - 0x188], 0	        98	revert.c	FUNCTION_6
0x70c	    0x48c78580feff	              mov qword [rbp - 0x180], 0	        98	revert.c	FUNCTION_6
0x717	    0x48c78590feff	              mov qword [rbp - 0x170], 0	        98	revert.c	FUNCTION_6
0x722	    0xc785a0feffff	           mov dword [rbp - 0x160], 0xc 	        98	revert.c	FUNCTION_6
0x72c	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	        98	revert.c	FUNCTION_6
0x737	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       108	revert.c	FUNCTION_6	CALL_19
0x73e	        0x4883c018	                           add rax, 0x18	       108	revert.c	FUNCTION_6	CALL_19
0x742	    0x488985b0feff	            mov qword [rbp - 0x150], rax	        98	revert.c	FUNCTION_6
0x749	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	        98	revert.c	FUNCTION_6
0x754	    0xc785c8feffff	              mov dword [rbp - 0x138], 2	        98	revert.c	FUNCTION_6
0x75e	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	        98	revert.c	FUNCTION_6
0x769	    0xc785e0feffff	              mov dword [rbp - 0x120], 9	        98	revert.c	FUNCTION_6
0x773	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	        98	revert.c	FUNCTION_6
0x77e	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       109	revert.c	FUNCTION_6	CALL_22
0x785	        0x4883c040	                           add rax, 0x40	       109	revert.c	FUNCTION_6	CALL_22
0x789	    0x488985f0feff	            mov qword [rbp - 0x110], rax	        98	revert.c	FUNCTION_6
0x790	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	        98	revert.c	FUNCTION_6
0x79b	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	        98	revert.c	FUNCTION_6
0x7a6	    0xc78520ffffff	            mov dword [rbp - 0xe0], 0xc 	        98	revert.c	FUNCTION_6
0x7b0	    0xc78524ffffff	           mov dword [rbp - 0xdc], 0x58 	        98	revert.c	FUNCTION_6
0x7ba	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	        98	revert.c	FUNCTION_6
0x7c5	    0x488d85b8faff	                  lea rax, [rbp - 0x548]	        98	revert.c	FUNCTION_6
0x7cc	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	        98	revert.c	FUNCTION_6
0x7d3	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	        98	revert.c	FUNCTION_6
0x7de	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	        98	revert.c	FUNCTION_6
0x7e9	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	        98	revert.c	FUNCTION_6
0x7f4	    0xc78560ffffff	               mov dword [rbp - 0xa0], 9	        98	revert.c	FUNCTION_6
0x7fe	    0xc78564ffffff	           mov dword [rbp - 0x9c], 0x53 	        98	revert.c	FUNCTION_6
0x808	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	        98	revert.c	FUNCTION_6
0x813	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       112	revert.c	FUNCTION_6	CALL_26
0x81a	        0x4883c030	                           add rax, 0x30	       112	revert.c	FUNCTION_6	CALL_26
0x81e	    0x48898570ffff	             mov qword [rbp - 0x90], rax	        98	revert.c	FUNCTION_6
0x825	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	        98	revert.c	FUNCTION_6
0x830	    0x48c745800000	               mov qword [rbp - 0x80], 0	        98	revert.c	FUNCTION_6
0x838	    0xc74588010000	               mov dword [rbp - 0x78], 1	        98	revert.c	FUNCTION_6
0x83f	      0xb800000000	                              mov eax, 0	       113	revert.c	FUNCTION_6	CALL_27
0x844	        0x48894598	             mov qword [rbp - 0x68], rax	        98	revert.c	FUNCTION_6
0x848	    0x488d85a0fcff	                  lea rax, [rbp - 0x360]	       116	revert.c	FUNCTION_6
0x84f	    0x488985e0faff	            mov qword [rbp - 0x520], rax	       116	revert.c	FUNCTION_6
0x856	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       118	revert.c	FUNCTION_6	IF_1
0x85d	            0x8b00	                    mov eax, dword [rax]	       118	revert.c	FUNCTION_6	IF_1
0x85f	          0x83f801	                              cmp eax, 1	       118	revert.c	FUNCTION_6	IF_1
0x862	     0xf8599010000	                           jne 0x4000a41	       118	revert.c	FUNCTION_6	IF_1
0x868	    0x488d9520fbff	                  lea rdx, [rbp - 0x4e0]	       119	revert.c	FUNCTION_6	IF_1
0x86f	      0xb800000000	                              mov eax, 0	       119	revert.c	FUNCTION_6	IF_1
0x874	      0xb930000000	                           mov ecx, 0x30	       119	revert.c	FUNCTION_6	IF_1
0x879	          0x4889d7	                            mov rdi, rdx	       119	revert.c	FUNCTION_6	IF_1
0x87c	          0xf348ab	              rep stosq qword [rdi], rax	       119	revert.c	FUNCTION_6	IF_1
0x87f	    0xc78520fbffff	              mov dword [rbp - 0x4e0], 7	       119	revert.c	FUNCTION_6	IF_1
0x889	    0xc78524fbffff	          mov dword [rbp - 0x4dc], 0x78 	       119	revert.c	FUNCTION_6	IF_1
0x893	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       120	revert.c	FUNCTION_6	IF_1	CALL_30
0x89a	        0x4883c008	                              add rax, 8	       120	revert.c	FUNCTION_6	IF_1	CALL_30
0x89e	    0x48898530fbff	            mov qword [rbp - 0x4d0], rax	       119	revert.c	FUNCTION_6	IF_1
0x8a5	    0x48c78540fbff	              mov qword [rbp - 0x4c0], 0	       119	revert.c	FUNCTION_6	IF_1
0x8b0	    0xc78548fbffff	              mov dword [rbp - 0x4b8], 2	       119	revert.c	FUNCTION_6	IF_1
0x8ba	    0x48c78558fbff	              mov qword [rbp - 0x4a8], 1	       119	revert.c	FUNCTION_6	IF_1
0x8c5	    0xc78560fbffff	              mov dword [rbp - 0x4a0], 7	       119	revert.c	FUNCTION_6	IF_1
0x8cf	    0x48c78568fbff	              mov qword [rbp - 0x498], 0	       119	revert.c	FUNCTION_6	IF_1
0x8da	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       121	revert.c	FUNCTION_6	IF_1	CALL_32
0x8e1	        0x4883c014	                           add rax, 0x14	       121	revert.c	FUNCTION_6	IF_1	CALL_32
0x8e5	    0x48898570fbff	            mov qword [rbp - 0x490], rax	       119	revert.c	FUNCTION_6	IF_1
0x8ec	    0x48c78580fbff	              mov qword [rbp - 0x480], 0	       119	revert.c	FUNCTION_6	IF_1
0x8f7	    0xc78588fbffff	              mov dword [rbp - 0x478], 2	       119	revert.c	FUNCTION_6	IF_1
0x901	    0x48c78598fbff	              mov qword [rbp - 0x468], 1	       119	revert.c	FUNCTION_6	IF_1
0x90c	    0xc785a0fbffff	              mov dword [rbp - 0x460], 7	       119	revert.c	FUNCTION_6	IF_1
0x916	    0x48c785a8fbff	              mov qword [rbp - 0x458], 0	       119	revert.c	FUNCTION_6	IF_1
0x921	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       122	revert.c	FUNCTION_6	IF_1	CALL_34
0x928	        0x4883c01c	                           add rax, 0x1c	       122	revert.c	FUNCTION_6	IF_1	CALL_34
0x92c	    0x488985b0fbff	            mov qword [rbp - 0x450], rax	       119	revert.c	FUNCTION_6	IF_1
0x933	    0x48c785c0fbff	              mov qword [rbp - 0x440], 0	       119	revert.c	FUNCTION_6	IF_1
0x93e	    0xc785c8fbffff	              mov dword [rbp - 0x438], 2	       119	revert.c	FUNCTION_6	IF_1
0x948	    0x48c785d8fbff	              mov qword [rbp - 0x428], 1	       119	revert.c	FUNCTION_6	IF_1
0x953	    0xc785e0fbffff	              mov dword [rbp - 0x420], 7	       119	revert.c	FUNCTION_6	IF_1
0x95d	    0x48c785e8fbff	              mov qword [rbp - 0x418], 0	       119	revert.c	FUNCTION_6	IF_1
0x968	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       123	revert.c	FUNCTION_6	IF_1	CALL_36
0x96f	        0x4883c020	                           add rax, 0x20	       123	revert.c	FUNCTION_6	IF_1	CALL_36
0x973	    0x488985f0fbff	            mov qword [rbp - 0x410], rax	       119	revert.c	FUNCTION_6	IF_1
0x97a	    0x48c78500fcff	              mov qword [rbp - 0x400], 0	       119	revert.c	FUNCTION_6	IF_1
0x985	    0xc78508fcffff	              mov dword [rbp - 0x3f8], 2	       119	revert.c	FUNCTION_6	IF_1
0x98f	    0x48c78518fcff	              mov qword [rbp - 0x3e8], 1	       119	revert.c	FUNCTION_6	IF_1
0x99a	    0xc78520fcffff	              mov dword [rbp - 0x3e0], 7	       119	revert.c	FUNCTION_6	IF_1
0x9a4	    0x48c78528fcff	              mov qword [rbp - 0x3d8], 0	       119	revert.c	FUNCTION_6	IF_1
0x9af	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       124	revert.c	FUNCTION_6	IF_1	CALL_38
0x9b6	        0x4883c024	                           add rax, 0x24	       124	revert.c	FUNCTION_6	IF_1	CALL_38
0x9ba	    0x48898530fcff	            mov qword [rbp - 0x3d0], rax	       119	revert.c	FUNCTION_6	IF_1
0x9c1	    0x48c78540fcff	              mov qword [rbp - 0x3c0], 0	       119	revert.c	FUNCTION_6	IF_1
0x9cc	    0xc78548fcffff	              mov dword [rbp - 0x3b8], 2	       119	revert.c	FUNCTION_6	IF_1
0x9d6	    0x48c78558fcff	              mov qword [rbp - 0x3a8], 1	       119	revert.c	FUNCTION_6	IF_1
0x9e1	    0x488d9520fbff	                  lea rdx, [rbp - 0x4e0]	       127	revert.c	FUNCTION_6	IF_1	CALL_40
0x9e8	    0x488b85e0faff	            mov rax, qword [rbp - 0x520]	       127	revert.c	FUNCTION_6	IF_1	CALL_40
0x9ef	          0x4889d6	                            mov rsi, rdx	       127	revert.c	FUNCTION_6	IF_1	CALL_40
0x9f2	          0x4889c7	                            mov rdi, rax	       127	revert.c	FUNCTION_6	IF_1	CALL_40
0x9f5	      0xe800000000	                          call 0x4000a3a	       127	revert.c	FUNCTION_6	IF_1	CALL_40
0x9fa	    0x488985e0faff	            mov qword [rbp - 0x520], rax	       127	revert.c	FUNCTION_6	IF_1	CALL_40
0xa01	    0x488b8df0faff	            mov rcx, qword [rbp - 0x510]	       130	revert.c	FUNCTION_6	CALL_41
0xa08	    0x488b95e0faff	            mov rdx, qword [rbp - 0x520]	       130	revert.c	FUNCTION_6	CALL_41
0xa0f	    0x488bb5c0faff	            mov rsi, qword [rbp - 0x540]	       130	revert.c	FUNCTION_6	CALL_41
0xa16	    0x8b85ccfaffff	            mov eax, dword [rbp - 0x534]	       130	revert.c	FUNCTION_6	CALL_41
0xa1c	    0x41b90c000000	                            mov r9d, 0xc	       130	revert.c	FUNCTION_6	CALL_41
0xa22	          0x4989c8	                             mov r8, rcx	       130	revert.c	FUNCTION_6	CALL_41
0xa25	          0x4889d1	                            mov rcx, rdx	       130	revert.c	FUNCTION_6	CALL_41
0xa28	      0xba00000000	                              mov edx, 0	       130	revert.c	FUNCTION_6	CALL_41
0xa2d	            0x89c7	                            mov edi, eax	       130	revert.c	FUNCTION_6	CALL_41
0xa2f	      0xe800000000	                          call 0x4000a74	       130	revert.c	FUNCTION_6	CALL_41
0xa34	    0x8985ccfaffff	            mov dword [rbp - 0x534], eax	       130	revert.c	FUNCTION_6	CALL_41
0xa3a	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       135	revert.c	FUNCTION_6	IF_2
0xa41	          0x8b4024	            mov eax, dword [rax + 0x24] 	       135	revert.c	FUNCTION_6	IF_2
0xa44	            0x85c0	                           test eax, eax	       135	revert.c	FUNCTION_6	IF_2
0xa46	            0x740e	                            je 0x4000a96	       135	revert.c	FUNCTION_6	IF_2
0xa48	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       136	revert.c	FUNCTION_6	IF_2
0xa4f	    0xc7401c010000	               mov dword [rax + 0x1c], 1	       136	revert.c	FUNCTION_6	IF_2
0xa56	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       139	revert.c	FUNCTION_6	IF_3
0xa5c	            0x85c0	                           test eax, eax	       139	revert.c	FUNCTION_6	IF_3
0xa5e	     0xf8447010000	                            je 0x4000beb	       139	revert.c	FUNCTION_6	IF_3
0xa64	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       141	revert.c	FUNCTION_6	IF_3	IF_4
0xa6a	          0x83f871	                           cmp eax, 0x71	       141	revert.c	FUNCTION_6	IF_3	IF_4
0xa6d	            0x750d	                           jne 0x4000abc	       141	revert.c	FUNCTION_6	IF_3	IF_4
0xa6f	    0x48c785e8faff	              mov qword [rbp - 0x518], 0	       142	revert.c	FUNCTION_6	IF_3	IF_4
0xa7a	            0xeb47	                           jmp 0x4000b03	       142	revert.c	FUNCTION_6	IF_3	IF_4
0xa7c	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       143	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0xa82	          0x83f863	                           cmp eax, 0x63	       143	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0xa85	            0x750d	                           jne 0x4000ad4	       143	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0xa87	    0x48c785e8faff	              mov qword [rbp - 0x518], 0	       144	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0xa92	            0xeb2f	                           jmp 0x4000b03	       144	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0xa94	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0xa9a	          0x83f861	                           cmp eax, 0x61	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0xa9d	            0x7419	                            je 0x4000af8	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0xa9f	      0xb900000000	                              mov ecx, 0	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0xaa4	      0xba92000000	                           mov edx, 0x92	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0xaa9	      0xbe00000000	                              mov esi, 0	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0xaae	      0xbf00000000	                              mov edi, 0	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0xab3	      0xe800000000	                          call 0x4000af8	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0xab8	    0x48c785e8faff	              mov qword [rbp - 0x518], 0	       147	revert.c	FUNCTION_6	IF_3	ELSE_2
0xac3	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       159	revert.c	FUNCTION_6	IF_3
0xaca	          0x8b4018	            mov eax, dword [rax + 0x18] 	       159	revert.c	FUNCTION_6	IF_3
0xacd	          0x83f802	                              cmp eax, 2	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xad0	           0xf94c0	                                 sete al	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xad3	           0xfb6d8	                           movzx ebx, al	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xad6	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       158	revert.c	FUNCTION_6	IF_3
0xadd	          0x8b4018	            mov eax, dword [rax + 0x18] 	       158	revert.c	FUNCTION_6	IF_3
0xae0	          0x83f801	                              cmp eax, 1	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xae3	           0xf94c0	                                 sete al	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xae6	        0x440fb6d8	                          movzx r11d, al	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xaea	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       157	revert.c	FUNCTION_6	IF_3
0xaf1	        0x448b5014	           mov r10d, dword [rax + 0x14] 	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xaf5	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       156	revert.c	FUNCTION_6	IF_3
0xafc	        0x448b4808	                mov r9d, dword [rax + 8]	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb00	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       155	revert.c	FUNCTION_6	IF_3
0xb07	        0x488b4048	            mov rax, qword [rax + 0x48] 	       155	revert.c	FUNCTION_6	IF_3
0xb0b	          0x4885c0	                           test rax, rax	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb0e	           0xf95c0	                                setne al	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb11	        0x440fb6c0	                           movzx r8d, al	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb15	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       154	revert.c	FUNCTION_6	IF_3
0xb1c	        0x488b4040	            mov rax, qword [rax + 0x40] 	       154	revert.c	FUNCTION_6	IF_3
0xb20	          0x4885c0	                           test rax, rax	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb23	           0xf95c0	                                setne al	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb26	           0xfb6f8	                           movzx edi, al	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb29	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       153	revert.c	FUNCTION_6	IF_3
0xb30	          0x8b482c	            mov ecx, dword [rax + 0x2c] 	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb33	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       152	revert.c	FUNCTION_6	IF_3
0xb3a	        0x448b6010	           mov r12d, dword [rax + 0x10] 	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb3e	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       151	revert.c	FUNCTION_6	IF_3
0xb45	          0x8b500c	              mov edx, dword [rax + 0xc]	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb48	    0x488bb5e8faff	            mov rsi, qword [rbp - 0x518]	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb4f	    0x488b85f8faff	            mov rax, qword [rbp - 0x508]	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb56	        0x4883ec08	                              sub rsp, 8	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb5a	            0x6a00	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb5c	              0x53	                                push rbx	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb5d	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb62	            0x4153	                                push r11	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb64	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb69	            0x4152	                                push r10	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb6b	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb70	            0x4151	                                 push r9	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb72	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb77	            0x4150	                                 push r8	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb79	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb7e	              0x57	                                push rdi	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb7f	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb84	              0x51	                                push rcx	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb85	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb8a	          0x4589e1	                           mov r9d, r12d	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb8d	    0x41b800000000	                              mov r8d, 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb93	            0x89d1	                            mov ecx, edx	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb95	      0xba00000000	                              mov edx, 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb9a	          0x4889c7	                            mov rdi, rax	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xb9d	      0xb800000000	                              mov eax, 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xba2	      0xe831f7ffff	          call sym.verify_opt_compatible	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xba7	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0xbab	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       163	revert.c	FUNCTION_6	IF_6
0xbb2	          0x8b4014	            mov eax, dword [rax + 0x14] 	       163	revert.c	FUNCTION_6	IF_6
0xbb5	            0x85c0	                           test eax, eax	       163	revert.c	FUNCTION_6	IF_6
0xbb7	            0x7467	                            je 0x4000c60	       163	revert.c	FUNCTION_6	IF_6
0xbb9	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       168	revert.c	FUNCTION_6	IF_6
0xbc0	          0x8b7004	                mov esi, dword [rax + 4]	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbc3	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       167	revert.c	FUNCTION_6	IF_6
0xbca	          0x8b4808	                mov ecx, dword [rax + 8]	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbcd	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       166	revert.c	FUNCTION_6	IF_6
0xbd4	          0x8b780c	              mov edi, dword [rax + 0xc]	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbd7	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       165	revert.c	FUNCTION_6	IF_6
0xbde	          0x8b5010	            mov edx, dword [rax + 0x10] 	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbe1	    0x488b85f8faff	            mov rax, qword [rbp - 0x508]	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbe8	        0x4883ec08	                              sub rsp, 8	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbec	            0x6a00	                                  push 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbee	              0x56	                                push rsi	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbef	      0x6800000000	                                  push 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbf4	              0x51	                                push rcx	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbf5	      0x6800000000	                                  push 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbfa	          0x4189f9	                            mov r9d, edi	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xbfd	    0x41b800000000	                              mov r8d, 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xc03	            0x89d1	                            mov ecx, edx	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xc05	      0xba00000000	                              mov edx, 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xc0a	      0xbe00000000	                              mov esi, 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xc0f	          0x4889c7	                            mov rdi, rax	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xc12	      0xb800000000	                              mov eax, 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xc17	      0xe8bcf6ffff	          call sym.verify_opt_compatible	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xc1c	        0x4883c430	                           add rsp, 0x30	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0xc20	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       171	revert.c	FUNCTION_6	IF_7
0xc26	            0x85c0	                           test eax, eax	       171	revert.c	FUNCTION_6	IF_7
0xc28	            0x7417	                            je 0x4000c81	       171	revert.c	FUNCTION_6	IF_7
0xc2a	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       172	revert.c	FUNCTION_6	IF_7
0xc31	    0x48c780800000	               mov qword [rax + 0x80], 0	       172	revert.c	FUNCTION_6	IF_7
0xc3c	      0xe9f3000000	                           jmp 0x4000d74	       172	revert.c	FUNCTION_6	IF_7
0xc41	    0x488b9db8faff	            mov rbx, qword [rbp - 0x548]	       175	revert.c	FUNCTION_6	ELSE_3	CALL_45
0xc48	      0xbfb0080000	                          mov edi, 0x8b0	       175	revert.c	FUNCTION_6	ELSE_3	CALL_45
0xc4d	      0xe800000000	                          call 0x4000c92	       175	revert.c	FUNCTION_6	ELSE_3	CALL_45
0xc52	    0x488983800000	             mov qword [rbx + 0x80], rax	       175	revert.c	FUNCTION_6	ELSE_3	CALL_45
0xc59	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       176	revert.c	FUNCTION_6	ELSE_3	CALL_46
0xc60	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       176	revert.c	FUNCTION_6	ELSE_3	CALL_46
0xc67	      0xbe00000000	                              mov esi, 0	       176	revert.c	FUNCTION_6	ELSE_3	CALL_46
0xc6c	          0x4889c7	                            mov rdi, rax	       176	revert.c	FUNCTION_6	ELSE_3	CALL_46
0xc6f	      0xe800000000	                          call 0x4000cb4	       176	revert.c	FUNCTION_6	ELSE_3	CALL_46
0xc74	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       177	revert.c	FUNCTION_6	ELSE_3
0xc7b	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       177	revert.c	FUNCTION_6	ELSE_3
0xc82	         0xfb65074	           movzx edx, byte [rax + 0x74] 	       177	revert.c	FUNCTION_6	ELSE_3
0xc86	          0x83e2cf	                     and edx, 0xffffffcf	       177	revert.c	FUNCTION_6	ELSE_3
0xc89	          0x83ca20	                            or edx, 0x20	       177	revert.c	FUNCTION_6	ELSE_3
0xc8c	          0x885074	               mov byte [rax + 0x74], dl	       177	revert.c	FUNCTION_6	ELSE_3
0xc8f	    0x83bdccfaffff	              cmp dword [rbp - 0x534], 1	       178	revert.c	FUNCTION_6	ELSE_3	IF_8
0xc96	            0x7f19	                            jg 0x4000cf1	       178	revert.c	FUNCTION_6	ELSE_3	IF_8
0xc98	    0x488b95e0faff	            mov rdx, qword [rbp - 0x520]	       179	revert.c	FUNCTION_6	ELSE_3	CALL_47
0xc9f	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	       179	revert.c	FUNCTION_6	ELSE_3	CALL_47
0xca6	          0x4889d6	                            mov rsi, rdx	       179	revert.c	FUNCTION_6	ELSE_3	CALL_47
0xca9	          0x4889c7	                            mov rdi, rax	       179	revert.c	FUNCTION_6	ELSE_3	CALL_47
0xcac	      0xe800000000	                          call 0x4000cf1	       179	revert.c	FUNCTION_6	ELSE_3	CALL_47
0xcb1	    0x488b85c0faff	            mov rax, qword [rbp - 0x540]	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0xcb8	        0x4883c008	                              add rax, 8	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0xcbc	          0x488b00	                    mov rax, qword [rax]	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0xcbf	      0xbe00000000	                              mov esi, 0	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0xcc4	          0x4889c7	                            mov rdi, rax	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0xcc7	      0xe800000000	                          call 0x4000d0c	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0xccc	            0x85c0	                           test eax, eax	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0xcce	            0x7512	                           jne 0x4000d22	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0xcd0	    0x488b85c0faff	            mov rax, qword [rbp - 0x540]	       181	revert.c	FUNCTION_6	ELSE_3	IF_9
0xcd7	        0x4883c008	                              add rax, 8	       181	revert.c	FUNCTION_6	ELSE_3	IF_9
0xcdb	    0x48c700000000	                      mov qword [rax], 0	       181	revert.c	FUNCTION_6	ELSE_3	IF_9
0xce2	    0x488d8500fbff	                  lea rax, [rbp - 0x500]	       182	revert.c	FUNCTION_6	ELSE_3	CALL_49
0xce9	      0xba20000000	                           mov edx, 0x20	       182	revert.c	FUNCTION_6	ELSE_3	CALL_49
0xcee	      0xbe00000000	                              mov esi, 0	       182	revert.c	FUNCTION_6	ELSE_3	CALL_49
0xcf3	          0x4889c7	                            mov rdi, rax	       182	revert.c	FUNCTION_6	ELSE_3	CALL_49
0xcf6	      0xe800000000	                          call 0x4000d3b	       182	revert.c	FUNCTION_6	ELSE_3	CALL_49
0xcfb	    0xc78518fbffff	              mov dword [rbp - 0x4e8], 1	       183	revert.c	FUNCTION_6	ELSE_3
0xd05	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0xd0c	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0xd13	    0x488d8d00fbff	                  lea rcx, [rbp - 0x500]	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0xd1a	    0x488bb5c0faff	            mov rsi, qword [rbp - 0x540]	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0xd21	    0x8b85ccfaffff	            mov eax, dword [rbp - 0x534]	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0xd27	            0x89c7	                            mov edi, eax	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0xd29	      0xe800000000	                          call 0x4000d6e	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0xd2e	    0x8985ccfaffff	            mov dword [rbp - 0x534], eax	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0xd34	    0x83bdccfaffff	              cmp dword [rbp - 0x534], 1	       187	revert.c	FUNCTION_6	IF_10
0xd3b	            0x7e19	                           jle 0x4000d96	       187	revert.c	FUNCTION_6	IF_10
0xd3d	    0x488b95e0faff	            mov rdx, qword [rbp - 0x520]	       188	revert.c	FUNCTION_6	CALL_51
0xd44	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	       188	revert.c	FUNCTION_6	CALL_51
0xd4b	          0x4889d6	                            mov rsi, rdx	       188	revert.c	FUNCTION_6	CALL_51
0xd4e	          0x4889c7	                            mov rdi, rax	       188	revert.c	FUNCTION_6	CALL_51
0xd51	      0xe800000000	                          call 0x4000d96	       188	revert.c	FUNCTION_6	CALL_51
0xd56	    0x488b9db8faff	            mov rbx, qword [rbp - 0x548]	       191	revert.c	FUNCTION_6	CALL_52
0xd5d	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       191	revert.c	FUNCTION_6	CALL_52
0xd64	        0x488b4030	            mov rax, qword [rax + 0x30] 	       191	revert.c	FUNCTION_6	CALL_52
0xd68	          0x4889c7	                            mov rdi, rax	       191	revert.c	FUNCTION_6	CALL_52
0xd6b	      0xe8edf2ffff	                call sym.xstrdup_or_null	       191	revert.c	FUNCTION_6	CALL_52
0xd70	        0x48894330	             mov qword [rbx + 0x30], rax	       191	revert.c	FUNCTION_6	CALL_52
0xd74	    0x488b9db8faff	            mov rbx, qword [rbp - 0x548]	       192	revert.c	FUNCTION_6	CALL_53
0xd7b	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       192	revert.c	FUNCTION_6	CALL_53
0xd82	        0x488b4040	            mov rax, qword [rax + 0x40] 	       192	revert.c	FUNCTION_6	CALL_53
0xd86	          0x4889c7	                            mov rdi, rax	       192	revert.c	FUNCTION_6	CALL_53
0xd89	      0xe8cff2ffff	                call sym.xstrdup_or_null	       192	revert.c	FUNCTION_6	CALL_53
0xd8e	        0x48894340	             mov qword [rbx + 0x40], rax	       192	revert.c	FUNCTION_6	CALL_53
0xd92	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       194	revert.c	FUNCTION_6	IF_11
0xd98	          0x83f871	                           cmp eax, 0x71	       194	revert.c	FUNCTION_6	IF_11
0xd9b	            0x7511	                           jne 0x4000dee	       194	revert.c	FUNCTION_6	IF_11
0xd9d	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       195	revert.c	FUNCTION_6	CALL_54
0xda4	          0x4889c7	                            mov rdi, rax	       195	revert.c	FUNCTION_6	CALL_54
0xda7	      0xe800000000	                          call 0x4000dec	       195	revert.c	FUNCTION_6	CALL_54
0xdac	            0xeb47	                           jmp 0x4000e35	       195	revert.c	FUNCTION_6	CALL_54
0xdae	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       196	revert.c	FUNCTION_6	IF_12
0xdb4	          0x83f863	                           cmp eax, 0x63	       196	revert.c	FUNCTION_6	IF_12
0xdb7	            0x7511	                           jne 0x4000e0a	       196	revert.c	FUNCTION_6	IF_12
0xdb9	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       197	revert.c	FUNCTION_6	CALL_55
0xdc0	          0x4889c7	                            mov rdi, rax	       197	revert.c	FUNCTION_6	CALL_55
0xdc3	      0xe800000000	                          call 0x4000e08	       197	revert.c	FUNCTION_6	CALL_55
0xdc8	            0xeb2b	                           jmp 0x4000e35	       197	revert.c	FUNCTION_6	CALL_55
0xdca	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       198	revert.c	FUNCTION_6	IF_13
0xdd0	          0x83f861	                           cmp eax, 0x61	       198	revert.c	FUNCTION_6	IF_13
0xdd3	            0x7511	                           jne 0x4000e26	       198	revert.c	FUNCTION_6	IF_13
0xdd5	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       199	revert.c	FUNCTION_6	CALL_56
0xddc	          0x4889c7	                            mov rdi, rax	       199	revert.c	FUNCTION_6	CALL_56
0xddf	      0xe800000000	                          call 0x4000e24	       199	revert.c	FUNCTION_6	CALL_56
0xde4	            0xeb0f	                           jmp 0x4000e35	       199	revert.c	FUNCTION_6	CALL_56
0xde6	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       200	revert.c	FUNCTION_6	CALL_57
0xded	          0x4889c7	                            mov rdi, rax	       200	revert.c	FUNCTION_6	CALL_57
0xdf0	      0xe800000000	                          call 0x4000e35	       200	revert.c	FUNCTION_6	CALL_57
0xdf5	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       201	revert.c	FUNCTION_6
0xdf9	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       201	revert.c	FUNCTION_6
0xe02	            0x7405	                            je 0x4000e49	       201	revert.c	FUNCTION_6
0xe04	      0xe800000000	                          call 0x4000e49	       201	revert.c	FUNCTION_6
0xe09	        0x488d65f0	                   lea rsp, [rbp - 0x10]	       201	revert.c	FUNCTION_6
0xe0d	              0x5b	                                 pop rbx	       201	revert.c	FUNCTION_6
0xe0e	            0x415c	                                 pop r12	       201	revert.c	FUNCTION_6
0xe10	              0x5d	                                 pop rbp	       201	revert.c	FUNCTION_6
0xe11	              0xc3	                                     ret	       201	revert.c	FUNCTION_6
const_error	DO,0:IF,0:CALL,0:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_18
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_18
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_18
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_18
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_18
xstrdup_or_null	DO,0:IF,0:CALL,1:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0	13
0x5d	              0x55	                                push rbp	       923	git-compat-util.h	FUNCTION_31
0x5e	          0x4889e5	                            mov rbp, rsp	       923	git-compat-util.h	FUNCTION_31
0x61	        0x4883ec10	                           sub rsp, 0x10	       923	git-compat-util.h	FUNCTION_31
0x65	        0x48897df8	                mov qword [rbp - 8], rdi	       923	git-compat-util.h	FUNCTION_31
0x69	      0x48837df800	                  cmp qword [rbp - 8], 0	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x6e	            0x740e	                            je 0x40000be	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x70	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x74	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x77	      0xe800000000	                          call 0x40000bc	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x7c	            0xeb05	                           jmp 0x40000c3	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x7e	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x83	              0xc9	                                   leave	       925	git-compat-util.h	FUNCTION_31
0x84	              0xc3	                                     ret	       925	git-compat-util.h	FUNCTION_31
revert_or_cherry_pick_usage	DO,0:IF,0:CALL,0:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0	12
0xd1	              0x55	                                push rbp	        40	revert.c	FUNCTION_2
0xd2	          0x4889e5	                            mov rbp, rsp	        40	revert.c	FUNCTION_2
0xd5	        0x48897df8	                mov qword [rbp - 8], rdi	        40	revert.c	FUNCTION_2
0xd9	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	revert.c	FUNCTION_2
0xdd	            0x8b00	                    mov eax, dword [rax]	        41	revert.c	FUNCTION_2
0xdf	            0x85c0	                           test eax, eax	        41	revert.c	FUNCTION_2
0xe1	            0x7507	                           jne 0x400012a	        41	revert.c	FUNCTION_2
0xe3	      0xb800000000	                              mov eax, 0	        41	revert.c	FUNCTION_2
0xe8	            0xeb05	                           jmp 0x400012f	        41	revert.c	FUNCTION_2
0xea	      0xb800000000	                              mov eax, 0	        41	revert.c	FUNCTION_2
0xef	              0x5d	                                 pop rbp	        42	revert.c	FUNCTION_2
0xf0	              0xc3	                                     ret	        42	revert.c	FUNCTION_2
