parse_color	DO,0:functions,0:SWITCH,0:WHILE,0:IF,9:ELSE,3:CALL,7:FOR,1	132
0x18f	              0x55	                                push rbp	        65	color.c	FUNCTION_3
0x190	          0x4889e5	                            mov rbp, rsp	        65	color.c	FUNCTION_3
0x193	        0x4883ec40	                           sub rsp, 0x40	        65	color.c	FUNCTION_3
0x197	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        65	color.c	FUNCTION_3
0x19b	        0x488975d0	             mov qword [rbp - 0x30], rsi	        65	color.c	FUNCTION_3
0x19f	          0x8955cc	             mov dword [rbp - 0x34], edx	        65	color.c	FUNCTION_3
0x1a2	    0x64488b042528	                mov rax, qword fs:[0x28]	        65	color.c	FUNCTION_3
0x1ab	        0x488945f8	                mov qword [rbp - 8], rax	        65	color.c	FUNCTION_3
0x1af	            0x31c0	                            xor eax, eax	        65	color.c	FUNCTION_3
0x1b1	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	        76	color.c	FUNCTION_3	IF_1	CALL_1
0x1b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        76	color.c	FUNCTION_3	IF_1	CALL_1
0x1b8	      0xba00000000	                              mov edx, 0	        76	color.c	FUNCTION_3	IF_1	CALL_1
0x1bd	            0x89ce	                            mov esi, ecx	        76	color.c	FUNCTION_3	IF_1	CALL_1
0x1bf	          0x4889c7	                            mov rdi, rax	        76	color.c	FUNCTION_3	IF_1	CALL_1
0x1c2	      0xe80effffff	                     call sym.match_word	        76	color.c	FUNCTION_3	IF_1	CALL_1
0x1c7	            0x85c0	                           test eax, eax	        76	color.c	FUNCTION_3	IF_1	CALL_1
0x1c9	            0x7414	                            je 0x400021f	        76	color.c	FUNCTION_3	IF_1	CALL_1
0x1cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        77	color.c	FUNCTION_3	IF_1
0x1cf	    0xc70001000000	                      mov dword [rax], 1	        77	color.c	FUNCTION_3	IF_1
0x1d5	      0xb800000000	                              mov eax, 0	        78	color.c	FUNCTION_3	IF_1
0x1da	      0xe97e010000	                           jmp 0x400039d	        78	color.c	FUNCTION_3	IF_1
0x1df	        0x837dcc07	               cmp dword [rbp - 0x34], 7	        82	color.c	FUNCTION_3	IF_2
0x1e3	            0x757c	                           jne 0x40002a1	        82	color.c	FUNCTION_3	IF_2
0x1e5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        82	color.c	FUNCTION_3	IF_2
0x1e9	           0xfb600	                   movzx eax, byte [rax]	        82	color.c	FUNCTION_3	IF_2
0x1ec	            0x3c23	                            cmp al, 0x23	        82	color.c	FUNCTION_3	IF_2
0x1ee	            0x7571	                           jne 0x40002a1	        82	color.c	FUNCTION_3	IF_2
0x1f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x1f4	        0x488d5005	                      lea rdx, [rax + 5]	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x1f8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x1fc	        0x4883c001	                              add rax, 1	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x200	          0x4889d6	                            mov rsi, rdx	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x203	          0x4889c7	                            mov rdi, rax	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x206	      0xe81cffffff	                  call sym.get_hex_color	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x20b	            0x85c0	                           test eax, eax	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x20d	            0x7552	                           jne 0x40002a1	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x20f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x213	        0x488d5006	                      lea rdx, [rax + 6]	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x217	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x21b	        0x4883c003	                              add rax, 3	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x21f	          0x4889d6	                            mov rsi, rdx	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x222	          0x4889c7	                            mov rdi, rax	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x225	      0xe8fdfeffff	                  call sym.get_hex_color	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x22a	            0x85c0	                           test eax, eax	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x22c	            0x7533	                           jne 0x40002a1	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x22e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	color.c	FUNCTION_3	IF_2	IF_3	CALL_4
0x232	        0x488d5007	                      lea rdx, [rax + 7]	        85	color.c	FUNCTION_3	IF_2	IF_3	CALL_4
0x236	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        85	color.c	FUNCTION_3	IF_2	IF_3	CALL_4
0x23a	        0x4883c005	                              add rax, 5	        85	color.c	FUNCTION_3	IF_2	IF_3	CALL_4
0x23e	          0x4889d6	                            mov rsi, rdx	        85	color.c	FUNCTION_3	IF_2	IF_3	CALL_4
0x241	          0x4889c7	                            mov rdi, rax	        85	color.c	FUNCTION_3	IF_2	IF_3	CALL_4
0x244	      0xe8defeffff	                  call sym.get_hex_color	        85	color.c	FUNCTION_3	IF_2	IF_3	CALL_4
0x249	            0x85c0	                           test eax, eax	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x24b	            0x7514	                           jne 0x40002a1	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x24d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	color.c	FUNCTION_3	IF_2	IF_3
0x251	    0xc70004000000	                      mov dword [rax], 4	        86	color.c	FUNCTION_3	IF_2	IF_3
0x257	      0xb800000000	                              mov eax, 0	        87	color.c	FUNCTION_3	IF_2	IF_3
0x25c	      0xe9fc000000	                           jmp 0x400039d	        87	color.c	FUNCTION_3	IF_2	IF_3
0x261	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        92	color.c	FUNCTION_3	FOR_1	CALL_5
0x268	            0xeb46	                           jmp 0x40002f0	        92	color.c	FUNCTION_3	FOR_1	CALL_5
0x26a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        93	color.c	FUNCTION_3	FOR_1	IF_4	CALL_6
0x26d	            0x4898	                                    cdqe	        93	color.c	FUNCTION_3	FOR_1	IF_4	CALL_6
0x26f	    0x488b14c50000	                  mov rdx, qword [rax*8]	        93	color.c	FUNCTION_3	FOR_1	IF_4	CALL_6
0x277	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	        93	color.c	FUNCTION_3	FOR_1	IF_4	CALL_6
0x27a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        93	color.c	FUNCTION_3	FOR_1	IF_4	CALL_6
0x27e	            0x89ce	                            mov esi, ecx	        93	color.c	FUNCTION_3	FOR_1	IF_4	CALL_6
0x280	          0x4889c7	                            mov rdi, rax	        93	color.c	FUNCTION_3	FOR_1	IF_4	CALL_6
0x283	      0xe84dfeffff	                     call sym.match_word	        93	color.c	FUNCTION_3	FOR_1	IF_4	CALL_6
0x288	            0x85c0	                           test eax, eax	        93	color.c	FUNCTION_3	FOR_1	IF_4	CALL_6
0x28a	            0x7420	                            je 0x40002ec	        93	color.c	FUNCTION_3	FOR_1	IF_4	CALL_6
0x28c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        94	color.c	FUNCTION_3	FOR_1	IF_4
0x290	    0xc70002000000	                      mov dword [rax], 2	        94	color.c	FUNCTION_3	FOR_1	IF_4
0x296	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        95	color.c	FUNCTION_3	FOR_1	IF_4
0x299	            0x89c2	                            mov edx, eax	        95	color.c	FUNCTION_3	FOR_1	IF_4
0x29b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        95	color.c	FUNCTION_3	FOR_1	IF_4
0x29f	          0x885004	                  mov byte [rax + 4], dl	        95	color.c	FUNCTION_3	FOR_1	IF_4
0x2a2	      0xb800000000	                              mov eax, 0	        96	color.c	FUNCTION_3	FOR_1	IF_4
0x2a7	      0xe9b1000000	                           jmp 0x400039d	        96	color.c	FUNCTION_3	FOR_1	IF_4
0x2ac	        0x8345e401	               add dword [rbp - 0x1c], 1	        92	color.c	FUNCTION_3	FOR_1	CALL_5
0x2b0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        92	color.c	FUNCTION_3	FOR_1	CALL_5
0x2b3	          0x83f807	                              cmp eax, 7	        92	color.c	FUNCTION_3	FOR_1	CALL_5
0x2b6	            0x76b2	                           jbe 0x40002aa	        92	color.c	FUNCTION_3	FOR_1	CALL_5
0x2b8	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       101	color.c	FUNCTION_3	CALL_7
0x2bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       101	color.c	FUNCTION_3	CALL_7
0x2c0	      0xba0a000000	                            mov edx, 0xa	       101	color.c	FUNCTION_3	CALL_7
0x2c5	          0x4889ce	                            mov rsi, rcx	       101	color.c	FUNCTION_3	CALL_7
0x2c8	          0x4889c7	                            mov rdi, rax	       101	color.c	FUNCTION_3	CALL_7
0x2cb	      0xe800000000	                          call 0x4000310	       101	color.c	FUNCTION_3	CALL_7
0x2d0	        0x488945f0	             mov qword [rbp - 0x10], rax	       101	color.c	FUNCTION_3	CALL_7
0x2d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	color.c	FUNCTION_3	IF_5
0x2d8	          0x4889c2	                            mov rdx, rax	       102	color.c	FUNCTION_3	IF_5
0x2db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       102	color.c	FUNCTION_3	IF_5
0x2df	          0x4829c2	                            sub rdx, rax	       102	color.c	FUNCTION_3	IF_5
0x2e2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       102	color.c	FUNCTION_3	IF_5
0x2e5	            0x4898	                                    cdqe	       102	color.c	FUNCTION_3	IF_5
0x2e7	          0x4839c2	                            cmp rdx, rax	       102	color.c	FUNCTION_3	IF_5
0x2ea	            0x756c	                           jne 0x4000398	       102	color.c	FUNCTION_3	IF_5
0x2ec	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	       107	color.c	FUNCTION_3	IF_5	IF_6
0x2f1	            0x7c65	                            jl 0x4000398	       107	color.c	FUNCTION_3	IF_5	IF_6
0x2f3	      0x48837df000	               cmp qword [rbp - 0x10], 0	       109	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x2f8	            0x7911	                           jns 0x400034b	       109	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x2fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       110	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x2fe	    0xc70001000000	                      mov dword [rax], 1	       110	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x304	      0xb800000000	                              mov eax, 0	       111	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x309	            0xeb52	                           jmp 0x400039d	       111	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x30b	      0x48837df007	               cmp qword [rbp - 0x10], 7	       113	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x310	            0x7f1e	                            jg 0x4000370	       113	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x312	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x316	    0xc70002000000	                      mov dword [rax], 2	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x31c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       115	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x320	            0x89c2	                            mov edx, eax	       115	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x322	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       115	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x326	          0x885004	                  mov byte [rax + 4], dl	       115	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x329	      0xb800000000	                              mov eax, 0	       116	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x32e	            0xeb2d	                           jmp 0x400039d	       116	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x330	    0x48817df0ff00	           cmp qword [rbp - 0x10], 0xff 	       117	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x338	            0x7f1e	                            jg 0x4000398	       117	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x33a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       118	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x33e	    0xc70003000000	                      mov dword [rax], 3	       118	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x344	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       119	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x348	            0x89c2	                            mov edx, eax	       119	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x34a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       119	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x34e	          0x885004	                  mov byte [rax + 4], dl	       119	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x351	      0xb800000000	                              mov eax, 0	       120	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x356	            0xeb05	                           jmp 0x400039d	       120	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x358	      0xb8ffffffff	                     mov eax, 0xffffffff	       124	color.c	FUNCTION_3
0x35d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       125	color.c	FUNCTION_3
0x361	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       125	color.c	FUNCTION_3
0x36a	            0x7405	                            je 0x40003b1	       125	color.c	FUNCTION_3
0x36c	      0xe800000000	                          call 0x40003b1	       125	color.c	FUNCTION_3
0x371	              0xc9	                                   leave	       125	color.c	FUNCTION_3
0x372	              0xc3	                                     ret	       125	color.c	FUNCTION_3
color_parse_mem	DO,0:functions,0:SWITCH,0:WHILE,4:IF,13:ELSE,1:CALL,23:FOR,1	322
0x5f6	              0x55	                                push rbp	       198	color.c	FUNCTION_8
0x5f7	          0x4889e5	                            mov rbp, rsp	       198	color.c	FUNCTION_8
0x5fa	    0x4881ec900000	                           sub rsp, 0x90	       198	color.c	FUNCTION_8
0x601	        0x48897d88	             mov qword [rbp - 0x78], rdi	       198	color.c	FUNCTION_8
0x605	          0x897584	             mov dword [rbp - 0x7c], esi	       198	color.c	FUNCTION_8
0x608	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       198	color.c	FUNCTION_8
0x60f	    0x64488b042528	                mov rax, qword fs:[0x28]	       198	color.c	FUNCTION_8
0x618	        0x488945f8	                mov qword [rbp - 8], rax	       198	color.c	FUNCTION_8
0x61c	            0x31c0	                            xor eax, eax	       198	color.c	FUNCTION_8
0x61e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       199	color.c	FUNCTION_8
0x622	        0x488945e0	             mov qword [rbp - 0x20], rax	       199	color.c	FUNCTION_8
0x626	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       200	color.c	FUNCTION_8
0x629	          0x894594	             mov dword [rbp - 0x6c], eax	       200	color.c	FUNCTION_8
0x62c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       201	color.c	FUNCTION_8
0x633	        0x4883c04b	                           add rax, 0x4b	       201	color.c	FUNCTION_8
0x637	        0x488945e8	             mov qword [rbp - 0x18], rax	       201	color.c	FUNCTION_8
0x63b	    0xc74598000000	               mov dword [rbp - 0x68], 0	       202	color.c	FUNCTION_8
0x642	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       203	color.c	FUNCTION_8
0x64a	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       204	color.c	FUNCTION_8
0x652	            0xeb09	                           jmp 0x400069d	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x654	      0x488345e001	               add qword [rbp - 0x20], 1	       207	color.c	FUNCTION_8	WHILE_1
0x659	        0x836d9401	               sub dword [rbp - 0x6c], 1	       208	color.c	FUNCTION_8	WHILE_1
0x65d	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x661	            0x7e1d	                           jle 0x40006c0	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x663	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x667	           0xfb600	                   movzx eax, byte [rax]	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x66a	           0xfb6c0	                           movzx eax, al	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x66d	            0x4898	                                    cdqe	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x66f	     0xfb680000000	                   movzx eax, byte [rax]	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x676	           0xfb6c0	                           movzx eax, al	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x679	          0x83e001	                              and eax, 1	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x67c	            0x85c0	                           test eax, eax	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x67e	            0x75d4	                           jne 0x4000694	       206	color.c	FUNCTION_8	WHILE_1	CALL_1
0x680	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       211	color.c	FUNCTION_8	IF_1
0x684	            0x7514	                           jne 0x40006da	       211	color.c	FUNCTION_8	IF_1
0x686	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       212	color.c	FUNCTION_8	IF_1
0x68d	          0xc60000	                       mov byte [rax], 0	       212	color.c	FUNCTION_8	IF_1
0x690	      0xb800000000	                              mov eax, 0	       213	color.c	FUNCTION_8	IF_1
0x695	      0xe947040000	                           jmp 0x4000b21	       213	color.c	FUNCTION_8	IF_1
0x69a	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       216	color.c	FUNCTION_8	IF_2	CALL_2
0x69d	          0x4863d0	                         movsxd rdx, eax	       216	color.c	FUNCTION_8	IF_2	CALL_2
0x6a0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       216	color.c	FUNCTION_8	IF_2	CALL_2
0x6a4	      0xbe00000000	                              mov esi, 0	       216	color.c	FUNCTION_8	IF_2	CALL_2
0x6a9	          0x4889c7	                            mov rdi, rax	       216	color.c	FUNCTION_8	IF_2	CALL_2
0x6ac	      0xe800000000	                          call 0x40006f1	       216	color.c	FUNCTION_8	IF_2	CALL_2
0x6b1	            0x85c0	                           test eax, eax	       216	color.c	FUNCTION_8	IF_2	CALL_2
0x6b3	     0xf8539010000	                           jne 0x4000832	       216	color.c	FUNCTION_8	IF_2	CALL_2
0x6b9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       217	color.c	FUNCTION_8	IF_2	CALL_3
0x6bd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       217	color.c	FUNCTION_8	IF_2	CALL_3
0x6c4	          0x4829c2	                            sub rdx, rax	       217	color.c	FUNCTION_8	IF_2	CALL_3
0x6c7	          0x4889d0	                            mov rax, rdx	       217	color.c	FUNCTION_8	IF_2	CALL_3
0x6ca	          0x4889c1	                            mov rcx, rax	       217	color.c	FUNCTION_8	IF_2	CALL_3
0x6cd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       217	color.c	FUNCTION_8	IF_2	CALL_3
0x6d4	      0xba00000000	                              mov edx, 0	       217	color.c	FUNCTION_8	IF_2	CALL_3
0x6d9	          0x4889ce	                            mov rsi, rcx	       217	color.c	FUNCTION_8	IF_2	CALL_3
0x6dc	          0x4889c7	                            mov rdi, rax	       217	color.c	FUNCTION_8	IF_2	CALL_3
0x6df	      0xb800000000	                              mov eax, 0	       217	color.c	FUNCTION_8	IF_2	CALL_3
0x6e4	      0xe800000000	                          call 0x4000729	       217	color.c	FUNCTION_8	IF_2	CALL_3
0x6e9	      0xb800000000	                              mov eax, 0	       218	color.c	FUNCTION_8	IF_2
0x6ee	      0xe9ee030000	                           jmp 0x4000b21	       218	color.c	FUNCTION_8	IF_2
0x6f3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       223	color.c	FUNCTION_8	WHILE_2
0x6f7	        0x488945f0	             mov qword [rbp - 0x10], rax	       223	color.c	FUNCTION_8	WHILE_2
0x6fb	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       224	color.c	FUNCTION_8	WHILE_2
0x703	    0xc7459c000000	               mov dword [rbp - 0x64], 0	       225	color.c	FUNCTION_8	WHILE_2
0x70a	            0xeb08	                           jmp 0x4000754	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x70c	        0x83459c01	               add dword [rbp - 0x64], 1	       228	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x710	        0x836d9401	               sub dword [rbp - 0x6c], 1	       229	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x714	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x718	            0x7e26	                           jle 0x4000780	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x71a	          0x8b459c	             mov eax, dword [rbp - 0x64]	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x71d	          0x4863d0	                         movsxd rdx, eax	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x720	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x724	          0x4801d0	                            add rax, rdx	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x727	           0xfb600	                   movzx eax, byte [rax]	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x72a	           0xfb6c0	                           movzx eax, al	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x72d	            0x4898	                                    cdqe	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x72f	     0xfb680000000	                   movzx eax, byte [rax]	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x736	           0xfb6c0	                           movzx eax, al	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x739	          0x83e001	                              and eax, 1	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x73c	            0x85c0	                           test eax, eax	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x73e	            0x74cc	                            je 0x400074c	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3	CALL_4
0x740	          0x8b459c	             mov eax, dword [rbp - 0x64]	       232	color.c	FUNCTION_8	WHILE_2
0x743	          0x4863d0	                         movsxd rdx, eax	       232	color.c	FUNCTION_8	WHILE_2
0x746	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       232	color.c	FUNCTION_8	WHILE_2
0x74a	          0x4801d0	                            add rax, rdx	       232	color.c	FUNCTION_8	WHILE_2
0x74d	        0x488945e0	             mov qword [rbp - 0x20], rax	       232	color.c	FUNCTION_8	WHILE_2
0x751	            0xeb09	                           jmp 0x400079c	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x753	      0x488345e001	               add qword [rbp - 0x20], 1	       234	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x758	        0x836d9401	               sub dword [rbp - 0x6c], 1	       235	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x75c	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x760	            0x7e1d	                           jle 0x40007bf	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x762	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x766	           0xfb600	                   movzx eax, byte [rax]	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x769	           0xfb6c0	                           movzx eax, al	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x76c	            0x4898	                                    cdqe	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x76e	     0xfb680000000	                   movzx eax, byte [rax]	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x775	           0xfb6c0	                           movzx eax, al	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x778	          0x83e001	                              and eax, 1	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x77b	            0x85c0	                           test eax, eax	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x77d	            0x75d4	                           jne 0x4000793	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4	CALL_5
0x77f	          0x8b559c	             mov edx, dword [rbp - 0x64]	       238	color.c	FUNCTION_8	WHILE_2	IF_3	CALL_6
0x782	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       238	color.c	FUNCTION_8	WHILE_2	IF_3	CALL_6
0x786	        0x488d45d0	                   lea rax, [rbp - 0x30]	       238	color.c	FUNCTION_8	WHILE_2	IF_3	CALL_6
0x78a	          0x4889ce	                            mov rsi, rcx	       238	color.c	FUNCTION_8	WHILE_2	IF_3	CALL_6
0x78d	          0x4889c7	                            mov rdi, rax	       238	color.c	FUNCTION_8	WHILE_2	IF_3	CALL_6
0x790	      0xe8faf9ffff	                    call sym.parse_color	       238	color.c	FUNCTION_8	WHILE_2	IF_3	CALL_6
0x795	            0x85c0	                           test eax, eax	       238	color.c	FUNCTION_8	WHILE_2	IF_3	CALL_6
0x797	            0x7526	                           jne 0x40007ff	       238	color.c	FUNCTION_8	WHILE_2	IF_3	CALL_6
0x799	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x79c	            0x85c0	                           test eax, eax	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x79e	            0x750a	                           jne 0x40007ea	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x7a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x7a4	        0x488945b0	             mov qword [rbp - 0x50], rax	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x7a8	            0xeb48	                           jmp 0x4000832	       241	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x7aa	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       243	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x7ad	            0x85c0	                           test eax, eax	       243	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x7af	     0xf8500030000	                           jne 0x4000af5	       243	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x7b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x7b9	        0x488945c0	             mov qword [rbp - 0x40], rax	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x7bd	            0xeb33	                           jmp 0x4000832	       245	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x7bf	          0x8b459c	             mov eax, dword [rbp - 0x64]	       249	color.c	FUNCTION_8	WHILE_2	CALL_7
0x7c2	          0x4863d0	                         movsxd rdx, eax	       249	color.c	FUNCTION_8	WHILE_2	CALL_7
0x7c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       249	color.c	FUNCTION_8	WHILE_2	CALL_7
0x7c9	          0x4889d6	                            mov rsi, rdx	       249	color.c	FUNCTION_8	WHILE_2	CALL_7
0x7cc	          0x4889c7	                            mov rdi, rax	       249	color.c	FUNCTION_8	WHILE_2	CALL_7
0x7cf	      0xe89ffbffff	                     call sym.parse_attr	       249	color.c	FUNCTION_8	WHILE_2	CALL_7
0x7d4	          0x8945a8	             mov dword [rbp - 0x58], eax	       249	color.c	FUNCTION_8	WHILE_2	CALL_7
0x7d7	        0x837da800	               cmp dword [rbp - 0x58], 0	       250	color.c	FUNCTION_8	WHILE_2	IF_6
0x7db	     0xf88d7020000	                            js 0x4000af8	       250	color.c	FUNCTION_8	WHILE_2	IF_6
0x7e1	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x7e4	      0xba01000000	                              mov edx, 1	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x7e9	            0x89c1	                            mov ecx, eax	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x7eb	            0xd3e2	                             shl edx, cl	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x7ed	            0x89d0	                            mov eax, edx	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x7ef	           0x94598	              or dword [rbp - 0x68], eax	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x7f2	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       222	color.c	FUNCTION_8	WHILE_2
0x7f6	     0xf8ff7feffff	                            jg 0x4000733	       222	color.c	FUNCTION_8	WHILE_2
0x7fc	        0x837d9800	               cmp dword [rbp - 0x68], 0	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x800	            0x7524	                           jne 0x4000866	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x802	        0x488d45b0	                   lea rax, [rbp - 0x50]	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x806	          0x4889c7	                            mov rdi, rax	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x809	      0xe8cffdffff	                    call sym.color_empty	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x80e	            0x85c0	                           test eax, eax	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x810	            0x7414	                            je 0x4000866	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x812	        0x488d45c0	                   lea rax, [rbp - 0x40]	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x816	          0x4889c7	                            mov rdi, rax	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x819	      0xe8bffdffff	                    call sym.color_empty	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x81e	            0x85c0	                           test eax, eax	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x820	     0xf8557020000	                           jne 0x4000abd	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_9
0x826	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       264	color.c	FUNCTION_8	ELSE_1	IF_7
0x82d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       267	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_10
0x834	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       267	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_10
0x838	            0x750f	                           jne 0x4000889	       267	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_10
0x83a	      0xbf00000000	                              mov edi, 0	       267	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_10
0x83f	      0xb800000000	                              mov eax, 0	       267	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_10
0x844	      0xe800000000	                          call 0x4000889	       267	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_10
0x849	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       267	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_10
0x850	        0x488d5001	                      lea rdx, [rax + 1]	       267	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_10
0x854	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       267	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_10
0x85b	          0xc6001b	                    mov byte [rax], 0x1b	       267	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_10
0x85e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       268	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_11
0x865	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       268	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_11
0x869	            0x750f	                           jne 0x40008ba	       268	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_11
0x86b	      0xbf00000000	                              mov edi, 0	       268	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_11
0x870	      0xb800000000	                              mov eax, 0	       268	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_11
0x875	      0xe800000000	                          call 0x40008ba	       268	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_11
0x87a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       268	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_11
0x881	        0x488d5001	                      lea rdx, [rax + 1]	       268	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_11
0x885	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       268	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_11
0x88c	          0xc6005b	                    mov byte [rax], 0x5b	       268	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_11
0x88f	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x896	      0xe9a7000000	                           jmp 0x4000982	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x89b	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x89e	      0xba01000000	                              mov edx, 1	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x8a3	            0x89c1	                            mov ecx, eax	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x8a5	            0xd3e2	                             shl edx, cl	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x8a7	            0x89d0	                            mov eax, edx	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x8a9	          0x8945ac	             mov dword [rbp - 0x54], eax	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x8ac	          0x8b4598	             mov eax, dword [rbp - 0x68]	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x8af	          0x2345ac	             and eax, dword [rbp - 0x54]	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x8b2	            0x85c0	                           test eax, eax	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x8b4	     0xf8483000000	                            je 0x400097d	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x8ba	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       274	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x8bd	            0xf7d0	                                 not eax	       274	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x8bf	          0x214598	             and dword [rbp - 0x68], eax	       274	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x8c2	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x8c5	          0x8d5001	                      lea edx, [rax + 1]	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x8c8	          0x8955a0	             mov dword [rbp - 0x60], edx	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x8cb	            0x85c0	                           test eax, eax	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x8cd	            0x7431	                            je 0x4000940	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x8cf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_12
0x8d6	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_12
0x8da	            0x750f	                           jne 0x400092b	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_12
0x8dc	      0xbf00000000	                              mov edi, 0	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_12
0x8e1	      0xb800000000	                              mov eax, 0	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_12
0x8e6	      0xe800000000	                          call 0x400092b	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_12
0x8eb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_12
0x8f2	        0x488d5001	                      lea rdx, [rax + 1]	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_12
0x8f6	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_12
0x8fd	          0xc6003b	                    mov byte [rax], 0x3b	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_12
0x900	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x904	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x90b	          0x4829c2	                            sub rdx, rax	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x90e	          0x4889d0	                            mov rax, rdx	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x911	          0x4889c6	                            mov rsi, rax	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x914	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x917	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x91e	            0x89d1	                            mov ecx, edx	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x920	      0xba00000000	                              mov edx, 0	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x925	          0x4889c7	                            mov rdi, rax	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x928	      0xb800000000	                              mov eax, 0	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x92d	      0xe800000000	                          call 0x4000972	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x932	            0x4898	                                    cdqe	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x934	    0x48018578ffff	            add qword [rbp - 0x88], rax 	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x93b	            0xeb01	                           jmp 0x400097e	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_13
0x93d	              0x90	                                     nop	       273	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x93e	        0x8345a401	               add dword [rbp - 0x5c], 1	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x942	        0x837d9800	               cmp dword [rbp - 0x68], 0	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x946	     0xf854fffffff	                           jne 0x40008db	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x94c	        0x488d45b0	                   lea rax, [rbp - 0x50]	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_14
0x950	          0x4889c7	                            mov rdi, rax	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_14
0x953	      0xe885fcffff	                    call sym.color_empty	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_14
0x958	            0x85c0	                           test eax, eax	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_14
0x95a	            0x7570	                           jne 0x4000a0c	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_14
0x95c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x95f	          0x8d5001	                      lea edx, [rax + 1]	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x962	          0x8955a0	             mov dword [rbp - 0x60], edx	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x965	            0x85c0	                           test eax, eax	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x967	            0x7431	                            je 0x40009da	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x969	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_15
0x970	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_15
0x974	            0x750f	                           jne 0x40009c5	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_15
0x976	      0xbf00000000	                              mov edi, 0	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_15
0x97b	      0xb800000000	                              mov eax, 0	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_15
0x980	      0xe800000000	                          call 0x40009c5	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_15
0x985	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_15
0x98c	        0x488d5001	                      lea rdx, [rax + 1]	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_15
0x990	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_15
0x997	          0xc6003b	                    mov byte [rax], 0x3b	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_15
0x99a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_16
0x99e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_16
0x9a5	          0x4829c2	                            sub rdx, rax	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_16
0x9a8	          0x4889d0	                            mov rax, rdx	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_16
0x9ab	            0x89c6	                            mov esi, eax	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_16
0x9ad	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_16
0x9b1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_16
0x9b8	      0xb933000000	                           mov ecx, 0x33	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_16
0x9bd	          0x4889c7	                            mov rdi, rax	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_16
0x9c0	      0xe806fbffff	                   call sym.color_output	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_16
0x9c5	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_16
0x9cc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_17
0x9d0	          0x4889c7	                            mov rdi, rax	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_17
0x9d3	      0xe805fcffff	                    call sym.color_empty	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_17
0x9d8	            0x85c0	                           test eax, eax	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_17
0x9da	            0x7570	                           jne 0x4000a8c	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_17
0x9dc	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x9df	          0x8d5001	                      lea edx, [rax + 1]	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x9e2	          0x8955a0	             mov dword [rbp - 0x60], edx	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x9e5	            0x85c0	                           test eax, eax	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x9e7	            0x7431	                            je 0x4000a5a	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x9e9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_18
0x9f0	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_18
0x9f4	            0x750f	                           jne 0x4000a45	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_18
0x9f6	      0xbf00000000	                              mov edi, 0	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_18
0x9fb	      0xb800000000	                              mov eax, 0	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_18
0xa00	      0xe800000000	                          call 0x4000a45	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_18
0xa05	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_18
0xa0c	        0x488d5001	                      lea rdx, [rax + 1]	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_18
0xa10	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_18
0xa17	          0xc6003b	                    mov byte [rax], 0x3b	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_18
0xa1a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_19
0xa1e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_19
0xa25	          0x4829c2	                            sub rdx, rax	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_19
0xa28	          0x4889d0	                            mov rax, rdx	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_19
0xa2b	            0x89c6	                            mov esi, eax	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_19
0xa2d	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_19
0xa31	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_19
0xa38	      0xb934000000	                           mov ecx, 0x34	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_19
0xa3d	          0x4889c7	                            mov rdi, rax	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_19
0xa40	      0xe886faffff	                   call sym.color_output	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_19
0xa45	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_19
0xa4c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       291	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_20
0xa53	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       291	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_20
0xa57	            0x750f	                           jne 0x4000aa8	       291	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_20
0xa59	      0xbf00000000	                              mov edi, 0	       291	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_20
0xa5e	      0xb800000000	                              mov eax, 0	       291	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_20
0xa63	      0xe800000000	                          call 0x4000aa8	       291	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_20
0xa68	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       291	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_20
0xa6f	        0x488d5001	                      lea rdx, [rax + 1]	       291	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_20
0xa73	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       291	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_20
0xa7a	          0xc6006d	                    mov byte [rax], 0x6d	       291	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_20
0xa7d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       293	color.c	FUNCTION_8	CALL_21
0xa84	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       293	color.c	FUNCTION_8	CALL_21
0xa88	            0x750f	                           jne 0x4000ad9	       293	color.c	FUNCTION_8	CALL_21
0xa8a	      0xbf00000000	                              mov edi, 0	       293	color.c	FUNCTION_8	CALL_21
0xa8f	      0xb800000000	                              mov eax, 0	       293	color.c	FUNCTION_8	CALL_21
0xa94	      0xe800000000	                          call 0x4000ad9	       293	color.c	FUNCTION_8	CALL_21
0xa99	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       293	color.c	FUNCTION_8	CALL_21
0xaa0	        0x488d5001	                      lea rdx, [rax + 1]	       293	color.c	FUNCTION_8	CALL_21
0xaa4	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       293	color.c	FUNCTION_8	CALL_21
0xaab	          0xc60000	                       mov byte [rax], 0	       293	color.c	FUNCTION_8	CALL_21
0xaae	      0xb800000000	                              mov eax, 0	       294	color.c	FUNCTION_8
0xab3	            0xeb2c	                           jmp 0x4000b21	       294	color.c	FUNCTION_8
0xab5	              0x90	                                     nop	       247	color.c	FUNCTION_8	WHILE_2	IF_3
0xab6	            0xeb01	                           jmp 0x4000af9	       247	color.c	FUNCTION_8	WHILE_2	IF_3
0xab8	              0x90	                                     nop	       253	color.c	FUNCTION_8	WHILE_2	ELSE_1
0xab9	      0xbf00000000	                              mov edi, 0	       296	color.c	FUNCTION_8	CALL_23
0xabe	      0xe8cbf5ffff	                               call sym.	       296	color.c	FUNCTION_8	CALL_23
0xac3	          0x4889c1	                            mov rcx, rax	       296	color.c	FUNCTION_8	CALL_23
0xac6	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       296	color.c	FUNCTION_8	CALL_23
0xaca	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       296	color.c	FUNCTION_8	CALL_23
0xacd	            0x89c6	                            mov esi, eax	       296	color.c	FUNCTION_8	CALL_23
0xacf	          0x4889cf	                            mov rdi, rcx	       296	color.c	FUNCTION_8	CALL_23
0xad2	      0xb800000000	                              mov eax, 0	       296	color.c	FUNCTION_8	CALL_23
0xad7	      0xe800000000	                          call 0x4000b1c	       296	color.c	FUNCTION_8	CALL_23
0xadc	      0xe81ff5ffff	                    call sym.const_error	       296	color.c	FUNCTION_8	CALL_23
0xae1	        0x488b4df8	                mov rcx, qword [rbp - 8]	       298	color.c	FUNCTION_8
0xae5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       298	color.c	FUNCTION_8
0xaee	            0x7405	                            je 0x4000b35	       298	color.c	FUNCTION_8
0xaf0	      0xe800000000	                          call 0x4000b35	       298	color.c	FUNCTION_8
0xaf5	              0xc9	                                   leave	       298	color.c	FUNCTION_8
0xaf6	              0xc3	                                     ret	       298	color.c	FUNCTION_8
color_is_nil	DO,0:functions,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:CALL,1:FOR,0	13
0x1000	              0x55	                                push rbp	       420	color.c	FUNCTION_18
0x1001	          0x4889e5	                            mov rbp, rsp	       420	color.c	FUNCTION_18
0x1004	        0x4883ec10	                           sub rsp, 0x10	       420	color.c	FUNCTION_18
0x1008	        0x48897df8	                mov qword [rbp - 8], rdi	       420	color.c	FUNCTION_18
0x100c	        0x488b45f8	                mov rax, qword [rbp - 8]	       421	color.c	FUNCTION_18	CALL_1
0x1010	      0xbe00000000	                              mov esi, 0	       421	color.c	FUNCTION_18	CALL_1
0x1015	          0x4889c7	                            mov rdi, rax	       421	color.c	FUNCTION_18	CALL_1
0x1018	      0xe800000000	                          call 0x400105d	       421	color.c	FUNCTION_18	CALL_1
0x101d	            0x85c0	                           test eax, eax	       421	color.c	FUNCTION_18	CALL_1
0x101f	           0xf94c0	                                 sete al	       421	color.c	FUNCTION_18	CALL_1
0x1022	           0xfb6c0	                           movzx eax, al	       421	color.c	FUNCTION_18	CALL_1
0x1025	              0xc9	                                   leave	       422	color.c	FUNCTION_18
0x1026	              0xc3	                                     ret	       422	color.c	FUNCTION_18
color_vfprintf	DO,0:functions,0:SWITCH,0:WHILE,0:IF,3:ELSE,0:CALL,4:FOR,0	50
0xd7b	              0x55	                                push rbp	       386	color.c	FUNCTION_15
0xd7c	          0x4889e5	                            mov rbp, rsp	       386	color.c	FUNCTION_15
0xd7f	        0x4883ec40	                           sub rsp, 0x40	       386	color.c	FUNCTION_15
0xd83	        0x48897de8	             mov qword [rbp - 0x18], rdi	       386	color.c	FUNCTION_15
0xd87	        0x488975e0	             mov qword [rbp - 0x20], rsi	       386	color.c	FUNCTION_15
0xd8b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       386	color.c	FUNCTION_15
0xd8f	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       386	color.c	FUNCTION_15
0xd93	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       386	color.c	FUNCTION_15
0xd97	    0xc745fc000000	                  mov dword [rbp - 4], 0	       387	color.c	FUNCTION_15
0xd9e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       389	color.c	FUNCTION_15	IF_1
0xda2	           0xfb600	                   movzx eax, byte [rax]	       389	color.c	FUNCTION_15	IF_1
0xda5	            0x84c0	                             test al, al	       389	color.c	FUNCTION_15	IF_1
0xda7	            0x741d	                            je 0x4000e06	       389	color.c	FUNCTION_15	IF_1
0xda9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       390	color.c	FUNCTION_15	CALL_1
0xdad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	color.c	FUNCTION_15	CALL_1
0xdb1	      0xbe00000000	                              mov esi, 0	       390	color.c	FUNCTION_15	CALL_1
0xdb6	          0x4889c7	                            mov rdi, rax	       390	color.c	FUNCTION_15	CALL_1
0xdb9	      0xb800000000	                              mov eax, 0	       390	color.c	FUNCTION_15	CALL_1
0xdbe	      0xe800000000	                          call 0x4000e03	       390	color.c	FUNCTION_15	CALL_1
0xdc3	           0x145fc	                add dword [rbp - 4], eax	       390	color.c	FUNCTION_15	CALL_1
0xdc6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       391	color.c	FUNCTION_15	CALL_2
0xdca	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       391	color.c	FUNCTION_15	CALL_2
0xdce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	color.c	FUNCTION_15	CALL_2
0xdd2	          0x4889ce	                            mov rsi, rcx	       391	color.c	FUNCTION_15	CALL_2
0xdd5	          0x4889c7	                            mov rdi, rax	       391	color.c	FUNCTION_15	CALL_2
0xdd8	      0xe800000000	                          call 0x4000e1d	       391	color.c	FUNCTION_15	CALL_2
0xddd	           0x145fc	                add dword [rbp - 4], eax	       391	color.c	FUNCTION_15	CALL_2
0xde0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       392	color.c	FUNCTION_15	IF_2
0xde4	           0xfb600	                   movzx eax, byte [rax]	       392	color.c	FUNCTION_15	IF_2
0xde7	            0x84c0	                             test al, al	       392	color.c	FUNCTION_15	IF_2
0xde9	            0x741e	                            je 0x4000e49	       392	color.c	FUNCTION_15	IF_2
0xdeb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       393	color.c	FUNCTION_15	CALL_3
0xdef	      0xba00000000	                              mov edx, 0	       393	color.c	FUNCTION_15	CALL_3
0xdf4	      0xbe00000000	                              mov esi, 0	       393	color.c	FUNCTION_15	CALL_3
0xdf9	          0x4889c7	                            mov rdi, rax	       393	color.c	FUNCTION_15	CALL_3
0xdfc	      0xb800000000	                              mov eax, 0	       393	color.c	FUNCTION_15	CALL_3
0xe01	      0xe800000000	                          call 0x4000e46	       393	color.c	FUNCTION_15	CALL_3
0xe06	           0x145fc	                add dword [rbp - 4], eax	       393	color.c	FUNCTION_15	CALL_3
0xe09	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       394	color.c	FUNCTION_15	IF_3
0xe0e	            0x741d	                            je 0x4000e6d	       394	color.c	FUNCTION_15	IF_3
0xe10	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       395	color.c	FUNCTION_15	CALL_4
0xe14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	color.c	FUNCTION_15	CALL_4
0xe18	      0xbe00000000	                              mov esi, 0	       395	color.c	FUNCTION_15	CALL_4
0xe1d	          0x4889c7	                            mov rdi, rax	       395	color.c	FUNCTION_15	CALL_4
0xe20	      0xb800000000	                              mov eax, 0	       395	color.c	FUNCTION_15	CALL_4
0xe25	      0xe800000000	                          call 0x4000e6a	       395	color.c	FUNCTION_15	CALL_4
0xe2a	           0x145fc	                add dword [rbp - 4], eax	       395	color.c	FUNCTION_15	CALL_4
0xe2d	          0x8b45fc	                mov eax, dword [rbp - 4]	       396	color.c	FUNCTION_15
0xe30	              0xc9	                                   leave	       397	color.c	FUNCTION_15
0xe31	              0xc3	                                     ret	       397	color.c	FUNCTION_15
color_output	DO,0:functions,0:SWITCH,1:WHILE,0:IF,1:ELSE,0:CALL,3:FOR,0	79
0x4cb	              0x55	                                push rbp	       170	color.c	FUNCTION_6
0x4cc	          0x4889e5	                            mov rbp, rsp	       170	color.c	FUNCTION_6
0x4cf	        0x4883ec20	                           sub rsp, 0x20	       170	color.c	FUNCTION_6
0x4d3	        0x48897df8	                mov qword [rbp - 8], rdi	       170	color.c	FUNCTION_6
0x4d7	          0x8975f4	              mov dword [rbp - 0xc], esi	       170	color.c	FUNCTION_6
0x4da	        0x488955e8	             mov qword [rbp - 0x18], rdx	       170	color.c	FUNCTION_6
0x4de	            0x89c8	                            mov eax, ecx	       170	color.c	FUNCTION_6
0x4e0	          0x8845f0	               mov byte [rbp - 0x10], al	       170	color.c	FUNCTION_6
0x4e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       171	color.c	FUNCTION_6	SWITCH_1
0x4e7	            0x8b00	                    mov eax, dword [rax]	       171	color.c	FUNCTION_6	SWITCH_1
0x4e9	          0x83f804	                              cmp eax, 4	       171	color.c	FUNCTION_6	SWITCH_1
0x4ec	     0xf87e5000000	                            ja 0x4000617	       171	color.c	FUNCTION_6	SWITCH_1
0x4f2	            0x89c0	                            mov eax, eax	       171	color.c	FUNCTION_6	SWITCH_1
0x4f4	    0x488b04c50000	                  mov rax, qword [rax*8]	       171	color.c	FUNCTION_6	SWITCH_1
0x4fc	            0xffe0	                                 jmp rax	       171	color.c	FUNCTION_6	SWITCH_1
0x4fe	        0x837df401	                cmp dword [rbp - 0xc], 1	       176	color.c	FUNCTION_6	SWITCH_1	IF_1
0x502	            0x7f0f	                            jg 0x4000553	       176	color.c	FUNCTION_6	SWITCH_1	IF_1
0x504	      0xbf00000000	                              mov edi, 0	       177	color.c	FUNCTION_6	SWITCH_1	CALL_1
0x509	      0xb800000000	                              mov eax, 0	       177	color.c	FUNCTION_6	SWITCH_1	CALL_1
0x50e	      0xe800000000	                          call 0x4000553	       177	color.c	FUNCTION_6	SWITCH_1	CALL_1
0x513	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	color.c	FUNCTION_6	SWITCH_1
0x517	        0x488d5001	                      lea rdx, [rax + 1]	       178	color.c	FUNCTION_6	SWITCH_1
0x51b	        0x488955f8	                mov qword [rbp - 8], rdx	       178	color.c	FUNCTION_6	SWITCH_1
0x51f	         0xfb655f0	            movzx edx, byte [rbp - 0x10]	       178	color.c	FUNCTION_6	SWITCH_1
0x523	            0x8810	                      mov byte [rax], dl	       178	color.c	FUNCTION_6	SWITCH_1
0x525	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	color.c	FUNCTION_6	SWITCH_1
0x529	        0x488d5001	                      lea rdx, [rax + 1]	       179	color.c	FUNCTION_6	SWITCH_1
0x52d	        0x488955f8	                mov qword [rbp - 8], rdx	       179	color.c	FUNCTION_6	SWITCH_1
0x531	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       179	color.c	FUNCTION_6	SWITCH_1
0x535	         0xfb65204	               movzx edx, byte [rdx + 4]	       179	color.c	FUNCTION_6	SWITCH_1
0x539	          0x83c230	                           add edx, 0x30	       179	color.c	FUNCTION_6	SWITCH_1
0x53c	            0x8810	                      mov byte [rax], dl	       179	color.c	FUNCTION_6	SWITCH_1
0x53e	      0xe994000000	                           jmp 0x4000617	       180	color.c	FUNCTION_6	SWITCH_1
0x543	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x547	         0xfb64004	               movzx eax, byte [rax + 4]	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x54b	           0xfb6c8	                           movzx ecx, al	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x54e	         0xfbe55f0	            movsx edx, byte [rbp - 0x10]	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x552	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x555	          0x4863f0	                         movsxd rsi, eax	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x558	        0x488b45f8	                mov rax, qword [rbp - 8]	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x55c	          0x4189c8	                            mov r8d, ecx	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x55f	            0x89d1	                            mov ecx, edx	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x561	      0xba00000000	                              mov edx, 0	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x566	          0x4889c7	                            mov rdi, rax	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x569	      0xb800000000	                              mov eax, 0	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x56e	      0xe800000000	                          call 0x40005b3	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x573	            0x4898	                                    cdqe	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x575	        0x480145f8	                add qword [rbp - 8], rax	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x579	            0xeb5c	                           jmp 0x4000617	       183	color.c	FUNCTION_6	SWITCH_1
0x57b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       186	color.c	FUNCTION_6	SWITCH_1
0x57f	         0xfb64007	               movzx eax, byte [rax + 7]	       186	color.c	FUNCTION_6	SWITCH_1
0x583	           0xfb6c8	                           movzx ecx, al	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x586	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       186	color.c	FUNCTION_6	SWITCH_1
0x58a	         0xfb64006	               movzx eax, byte [rax + 6]	       186	color.c	FUNCTION_6	SWITCH_1
0x58e	        0x440fb6c0	                           movzx r8d, al	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x592	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       186	color.c	FUNCTION_6	SWITCH_1
0x596	         0xfb64005	               movzx eax, byte [rax + 5]	       186	color.c	FUNCTION_6	SWITCH_1
0x59a	           0xfb6f8	                           movzx edi, al	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x59d	         0xfbe55f0	            movsx edx, byte [rbp - 0x10]	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5a1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5a4	          0x4863f0	                         movsxd rsi, eax	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5ab	        0x4883ec08	                              sub rsp, 8	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5af	              0x51	                                push rcx	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5b0	          0x4589c1	                            mov r9d, r8d	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5b3	          0x4189f8	                            mov r8d, edi	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5b6	            0x89d1	                            mov ecx, edx	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5b8	      0xba00000000	                              mov edx, 0	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5bd	          0x4889c7	                            mov rdi, rax	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5c0	      0xb800000000	                              mov eax, 0	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5c5	      0xe800000000	                          call 0x400060a	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5ca	        0x4883c410	                           add rsp, 0x10	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5ce	            0x4898	                                    cdqe	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5d0	        0x480145f8	                add qword [rbp - 8], rax	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x5d4	            0xeb01	                           jmp 0x4000617	       187	color.c	FUNCTION_6	SWITCH_1
0x5d6	              0x90	                                     nop	       174	color.c	FUNCTION_6	SWITCH_1
0x5d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	color.c	FUNCTION_6
0x5db	              0xc9	                                   leave	       190	color.c	FUNCTION_6
0x5dc	              0xc3	                                     ret	       190	color.c	FUNCTION_6
const_error	DO,0:functions,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:CALL,0:FOR,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_24
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_24
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_24
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_24
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_24
color_empty	DO,0:functions,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:CALL,0:FOR,0	10
0x5dd	              0x55	                                push rbp	       193	color.c	FUNCTION_7
0x5de	          0x4889e5	                            mov rbp, rsp	       193	color.c	FUNCTION_7
0x5e1	        0x48897df8	                mov qword [rbp - 8], rdi	       193	color.c	FUNCTION_7
0x5e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	color.c	FUNCTION_7
0x5e9	            0x8b00	                    mov eax, dword [rax]	       194	color.c	FUNCTION_7
0x5eb	          0x83f801	                              cmp eax, 1	       194	color.c	FUNCTION_7
0x5ee	           0xf96c0	                                setbe al	       194	color.c	FUNCTION_7
0x5f1	           0xfb6c0	                           movzx eax, al	       194	color.c	FUNCTION_7
0x5f4	              0x5d	                                 pop rbp	       195	color.c	FUNCTION_7
0x5f5	              0xc3	                                     ret	       195	color.c	FUNCTION_7
check_auto_color	DO,0:functions,0:SWITCH,0:WHILE,0:IF,3:ELSE,0:CALL,3:FOR,0	40
0xb95	              0x55	                                push rbp	       323	color.c	FUNCTION_10
0xb96	          0x4889e5	                            mov rbp, rsp	       323	color.c	FUNCTION_10
0xb99	        0x4883ec20	                           sub rsp, 0x20	       323	color.c	FUNCTION_10
0xb9d	          0x897dec	             mov dword [rbp - 0x14], edi	       323	color.c	FUNCTION_10
0xba0	        0x837dec01	               cmp dword [rbp - 0x14], 1	       325	color.c	FUNCTION_10
0xba4	            0x7507	                           jne 0x4000bed	       325	color.c	FUNCTION_10
0xba6	      0xb800000000	                              mov eax, 0	       325	color.c	FUNCTION_10
0xbab	            0xeb05	                           jmp 0x4000bf2	       325	color.c	FUNCTION_10
0xbad	      0xb800000000	                              mov eax, 0	       325	color.c	FUNCTION_10
0xbb2	        0x488945f8	                mov qword [rbp - 8], rax	       325	color.c	FUNCTION_10
0xbb6	        0x488b45f8	                mov rax, qword [rbp - 8]	       326	color.c	FUNCTION_10	IF_1
0xbba	            0x8b00	                    mov eax, dword [rax]	       326	color.c	FUNCTION_10	IF_1
0xbbc	            0x85c0	                           test eax, eax	       326	color.c	FUNCTION_10	IF_1
0xbbe	            0x7912	                           jns 0x4000c12	       326	color.c	FUNCTION_10	IF_1
0xbc0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       327	color.c	FUNCTION_10	CALL_1
0xbc3	            0x89c7	                            mov edi, eax	       327	color.c	FUNCTION_10	CALL_1
0xbc5	      0xe800000000	                          call 0x4000c0a	       327	color.c	FUNCTION_10	CALL_1
0xbca	            0x89c2	                            mov edx, eax	       327	color.c	FUNCTION_10	CALL_1
0xbcc	        0x488b45f8	                mov rax, qword [rbp - 8]	       327	color.c	FUNCTION_10	CALL_1
0xbd0	            0x8910	                    mov dword [rax], edx	       327	color.c	FUNCTION_10	CALL_1
0xbd2	        0x488b45f8	                mov rax, qword [rbp - 8]	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbd6	            0x8b00	                    mov eax, dword [rax]	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbd8	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbda	            0x7519	                           jne 0x4000c35	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbdc	        0x837dec01	               cmp dword [rbp - 0x14], 1	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbe0	            0x7523	                           jne 0x4000c45	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbe2	      0xe800000000	                          call 0x4000c27	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbe7	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbe9	            0x741a	                            je 0x4000c45	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbeb	    0x8b0500000000	            mov eax, dword [0x04000c31] 	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbf1	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbf3	            0x7410	                            je 0x4000c45	       328	color.c	FUNCTION_10	IF_2	CALL_2
0xbf5	      0xe800000000	                          call 0x4000c3a	       329	color.c	FUNCTION_10	IF_2	IF_3	CALL_3
0xbfa	            0x85c0	                           test eax, eax	       329	color.c	FUNCTION_10	IF_2	IF_3	CALL_3
0xbfc	            0x7507	                           jne 0x4000c45	       329	color.c	FUNCTION_10	IF_2	IF_3	CALL_3
0xbfe	      0xb801000000	                              mov eax, 1	       330	color.c	FUNCTION_10	IF_2	IF_3
0xc03	            0xeb05	                           jmp 0x4000c4a	       330	color.c	FUNCTION_10	IF_2	IF_3
0xc05	      0xb800000000	                              mov eax, 0	       332	color.c	FUNCTION_10
0xc0a	              0xc9	                                   leave	       333	color.c	FUNCTION_10
0xc0b	              0xc3	                                     ret	       333	color.c	FUNCTION_10
color_parse	DO,0:functions,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:CALL,2:FOR,0	16
0x499	              0x55	                                push rbp	       160	color.c	FUNCTION_5
0x49a	          0x4889e5	                            mov rbp, rsp	       160	color.c	FUNCTION_5
0x49d	        0x4883ec10	                           sub rsp, 0x10	       160	color.c	FUNCTION_5
0x4a1	        0x48897df8	                mov qword [rbp - 8], rdi	       160	color.c	FUNCTION_5
0x4a5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       160	color.c	FUNCTION_5
0x4a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       161	color.c	FUNCTION_5	CALL_2
0x4ad	          0x4889c7	                            mov rdi, rax	       161	color.c	FUNCTION_5	CALL_2
0x4b0	      0xe800000000	                          call 0x40004f5	       161	color.c	FUNCTION_5	CALL_2
0x4b5	            0x89c1	                            mov ecx, eax	       161	color.c	FUNCTION_5	CALL_2
0x4b7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       161	color.c	FUNCTION_5	CALL_2
0x4bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       161	color.c	FUNCTION_5	CALL_2
0x4bf	            0x89ce	                            mov esi, ecx	       161	color.c	FUNCTION_5	CALL_2
0x4c1	          0x4889c7	                            mov rdi, rax	       161	color.c	FUNCTION_5	CALL_2
0x4c4	      0xe800000000	                          call 0x4000509	       161	color.c	FUNCTION_5	CALL_2
0x4c9	              0xc9	                                   leave	       162	color.c	FUNCTION_5
0x4ca	              0xc3	                                     ret	       162	color.c	FUNCTION_5
color_fprintf_ln	DO,0:functions,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:CALL,3:FOR,0	43
0xf19	              0x55	                                push rbp	       410	color.c	FUNCTION_17
0xf1a	          0x4889e5	                            mov rbp, rsp	       410	color.c	FUNCTION_17
0xf1d	    0x4881ec000100	                          sub rsp, 0x100	       410	color.c	FUNCTION_17
0xf24	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       410	color.c	FUNCTION_17
0xf2b	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       410	color.c	FUNCTION_17
0xf32	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       410	color.c	FUNCTION_17
0xf39	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       410	color.c	FUNCTION_17
0xf40	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       410	color.c	FUNCTION_17
0xf47	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       410	color.c	FUNCTION_17
0xf4e	            0x84c0	                             test al, al	       410	color.c	FUNCTION_17
0xf50	            0x7420	                            je 0x4000fb2	       410	color.c	FUNCTION_17
0xf52	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       410	color.c	FUNCTION_17
0xf56	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       410	color.c	FUNCTION_17
0xf5a	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       410	color.c	FUNCTION_17
0xf5e	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       410	color.c	FUNCTION_17
0xf62	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       410	color.c	FUNCTION_17
0xf66	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       410	color.c	FUNCTION_17
0xf6a	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       410	color.c	FUNCTION_17
0xf6e	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       410	color.c	FUNCTION_17
0xf72	    0x64488b042528	                mov rax, qword fs:[0x28]	       410	color.c	FUNCTION_17
0xf7b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       410	color.c	FUNCTION_17
0xf82	            0x31c0	                            xor eax, eax	       410	color.c	FUNCTION_17
0xf84	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       413	color.c	FUNCTION_17	CALL_1
0xf8e	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       413	color.c	FUNCTION_17	CALL_1
0xf98	        0x488d4510	                   lea rax, [rbp + 0x10]	       413	color.c	FUNCTION_17	CALL_1
0xf9c	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       413	color.c	FUNCTION_17	CALL_1
0xfa3	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       413	color.c	FUNCTION_17	CALL_1
0xfaa	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       413	color.c	FUNCTION_17	CALL_1
0xfb1	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       414	color.c	FUNCTION_17	CALL_2
0xfb8	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	       414	color.c	FUNCTION_17	CALL_2
0xfbf	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       414	color.c	FUNCTION_17	CALL_2
0xfc6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       414	color.c	FUNCTION_17	CALL_2
0xfcd	    0x41b800000000	                              mov r8d, 0	       414	color.c	FUNCTION_17	CALL_2
0xfd3	          0x4889c7	                            mov rdi, rax	       414	color.c	FUNCTION_17	CALL_2
0xfd6	      0xe8a0fdffff	                 call sym.color_vfprintf	       414	color.c	FUNCTION_17	CALL_2
0xfdb	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       414	color.c	FUNCTION_17	CALL_2
0xfe1	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       416	color.c	FUNCTION_17
0xfe7	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	       417	color.c	FUNCTION_17
0xfee	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       417	color.c	FUNCTION_17
0xff7	            0x7405	                            je 0x400103e	       417	color.c	FUNCTION_17
0xff9	      0xe800000000	                          call 0x400103e	       417	color.c	FUNCTION_17
0xffe	              0xc9	                                   leave	       417	color.c	FUNCTION_17
0xfff	              0xc3	                                     ret	       417	color.c	FUNCTION_17
parse_attr	DO,0:functions,0:SWITCH,0:WHILE,0:IF,2:ELSE,0:CALL,11:FOR,1	83
0x373	              0x55	                                push rbp	       128	color.c	FUNCTION_4
0x374	          0x4889e5	                            mov rbp, rsp	       128	color.c	FUNCTION_4
0x377	        0x4883ec20	                           sub rsp, 0x20	       128	color.c	FUNCTION_4
0x37b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       128	color.c	FUNCTION_4
0x37f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       128	color.c	FUNCTION_4
0x383	    0xc745f8000000	                  mov dword [rbp - 8], 0	       144	color.c	FUNCTION_4
0x38a	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       147	color.c	FUNCTION_4	IF_1	CALL_8
0x38e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	color.c	FUNCTION_4	IF_1	CALL_8
0x392	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       147	color.c	FUNCTION_4	IF_1	CALL_8
0x396	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       147	color.c	FUNCTION_4	IF_1	CALL_8
0x39a	          0x4989c8	                             mov r8, rcx	       147	color.c	FUNCTION_4	IF_1	CALL_8
0x39d	          0x4889d1	                            mov rcx, rdx	       147	color.c	FUNCTION_4	IF_1	CALL_8
0x3a0	      0xba00000000	                              mov edx, 0	       147	color.c	FUNCTION_4	IF_1	CALL_8
0x3a5	          0x4889c7	                            mov rdi, rax	       147	color.c	FUNCTION_4	IF_1	CALL_8
0x3a8	      0xe85efcffff	                call sym.skip_prefix_mem	       147	color.c	FUNCTION_4	IF_1	CALL_8
0x3ad	            0x85c0	                           test eax, eax	       147	color.c	FUNCTION_4	IF_1	CALL_8
0x3af	            0x742a	                            je 0x400041b	       147	color.c	FUNCTION_4	IF_1	CALL_8
0x3b1	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       148	color.c	FUNCTION_4	IF_1	CALL_9
0x3b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	color.c	FUNCTION_4	IF_1	CALL_9
0x3b9	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       148	color.c	FUNCTION_4	IF_1	CALL_9
0x3bd	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       148	color.c	FUNCTION_4	IF_1	CALL_9
0x3c1	          0x4989c8	                             mov r8, rcx	       148	color.c	FUNCTION_4	IF_1	CALL_9
0x3c4	          0x4889d1	                            mov rcx, rdx	       148	color.c	FUNCTION_4	IF_1	CALL_9
0x3c7	      0xba00000000	                              mov edx, 0	       148	color.c	FUNCTION_4	IF_1	CALL_9
0x3cc	          0x4889c7	                            mov rdi, rax	       148	color.c	FUNCTION_4	IF_1	CALL_9
0x3cf	      0xe837fcffff	                call sym.skip_prefix_mem	       148	color.c	FUNCTION_4	IF_1	CALL_9
0x3d4	    0xc745f8010000	                  mov dword [rbp - 8], 1	       149	color.c	FUNCTION_4	IF_1
0x3db	    0xc745fc000000	                  mov dword [rbp - 4], 0	       152	color.c	FUNCTION_4	FOR_1	CALL_10
0x3e2	      0xe99f000000	                           jmp 0x40004c6	       152	color.c	FUNCTION_4	FOR_1	CALL_10
0x3e7	          0x8b45fc	                mov eax, dword [rbp - 4]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x3ea	          0x4863d0	                         movsxd rdx, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x3ed	          0x4889d0	                            mov rax, rdx	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x3f0	          0x4801c0	                            add rax, rax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x3f3	          0x4801d0	                            add rax, rdx	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x3f6	        0x48c1e003	                              shl rax, 3	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x3fa	    0x480500000000	                              add rax, 0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x400	          0x488b10	                    mov rdx, qword [rax]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x403	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x407	          0x4839c2	                            cmp rdx, rax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x40a	            0x7576	                           jne 0x40004c2	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x40c	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x410	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x414	          0x8b45fc	                mov eax, dword [rbp - 4]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x417	          0x4863d0	                         movsxd rdx, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x41a	          0x4889d0	                            mov rax, rdx	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x41d	          0x4801c0	                            add rax, rax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x420	          0x4801d0	                            add rax, rdx	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x423	        0x48c1e003	                              shl rax, 3	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x427	    0x480500000000	                              add rax, 0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x42d	          0x488b00	                    mov rax, qword [rax]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x430	          0x4889f2	                            mov rdx, rsi	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x433	          0x4889ce	                            mov rsi, rcx	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x436	          0x4889c7	                            mov rdi, rax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x439	      0xe800000000	                          call 0x400047e	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x43e	            0x85c0	                           test eax, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x440	            0x7540	                           jne 0x40004c2	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_11
0x442	        0x837df800	                  cmp dword [rbp - 8], 0	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x446	            0x741d	                            je 0x40004a5	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x448	          0x8b45fc	                mov eax, dword [rbp - 4]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x44b	          0x4863d0	                         movsxd rdx, eax	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x44e	          0x4889d0	                            mov rax, rdx	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x451	          0x4801c0	                            add rax, rax	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x454	          0x4801d0	                            add rax, rdx	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x457	        0x48c1e003	                              shl rax, 3	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x45b	    0x480500000000	                              add rax, 0	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x461	            0x8b00	                    mov eax, dword [rax]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x463	            0xeb32	                           jmp 0x40004d7	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x465	          0x8b45fc	                mov eax, dword [rbp - 4]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x468	          0x4863d0	                         movsxd rdx, eax	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x46b	          0x4889d0	                            mov rax, rdx	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x46e	          0x4801c0	                            add rax, rax	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x471	          0x4801d0	                            add rax, rdx	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x474	        0x48c1e003	                              shl rax, 3	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x478	    0x480500000000	                              add rax, 0	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x47e	            0x8b00	                    mov eax, dword [rax]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x480	            0xeb15	                           jmp 0x40004d7	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x482	        0x8345fc01	                  add dword [rbp - 4], 1	       152	color.c	FUNCTION_4	FOR_1	CALL_10
0x486	          0x8b45fc	                mov eax, dword [rbp - 4]	       152	color.c	FUNCTION_4	FOR_1	CALL_10
0x489	          0x83f806	                              cmp eax, 6	       152	color.c	FUNCTION_4	FOR_1	CALL_10
0x48c	     0xf8655ffffff	                           jbe 0x4000427	       152	color.c	FUNCTION_4	FOR_1	CALL_10
0x492	      0xb8ffffffff	                     mov eax, 0xffffffff	       156	color.c	FUNCTION_4
0x497	              0xc9	                                   leave	       157	color.c	FUNCTION_4
0x498	              0xc3	                                     ret	       157	color.c	FUNCTION_4
git_color_default_config	DO,0:functions,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:CALL,2:FOR,0	24
0xcba	              0x55	                                push rbp	       368	color.c	FUNCTION_13
0xcbb	          0x4889e5	                            mov rbp, rsp	       368	color.c	FUNCTION_13
0xcbe	        0x4883ec20	                           sub rsp, 0x20	       368	color.c	FUNCTION_13
0xcc2	        0x48897df8	                mov qword [rbp - 8], rdi	       368	color.c	FUNCTION_13
0xcc6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       368	color.c	FUNCTION_13
0xcca	        0x488955e8	             mov qword [rbp - 0x18], rdx	       368	color.c	FUNCTION_13
0xcce	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       369	color.c	FUNCTION_13	IF_1	CALL_1
0xcd2	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       369	color.c	FUNCTION_13	IF_1	CALL_1
0xcd6	        0x488b45f8	                mov rax, qword [rbp - 8]	       369	color.c	FUNCTION_13	IF_1	CALL_1
0xcda	          0x4889ce	                            mov rsi, rcx	       369	color.c	FUNCTION_13	IF_1	CALL_1
0xcdd	          0x4889c7	                            mov rdi, rax	       369	color.c	FUNCTION_13	IF_1	CALL_1
0xce0	      0xe800000000	                          call 0x4000d25	       369	color.c	FUNCTION_13	IF_1	CALL_1
0xce5	            0x85c0	                           test eax, eax	       369	color.c	FUNCTION_13	IF_1	CALL_1
0xce7	            0x7907	                           jns 0x4000d30	       369	color.c	FUNCTION_13	IF_1	CALL_1
0xce9	      0xb8ffffffff	                     mov eax, 0xffffffff	       370	color.c	FUNCTION_13	IF_1
0xcee	            0xeb17	                           jmp 0x4000d47	       370	color.c	FUNCTION_13	IF_1
0xcf0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       372	color.c	FUNCTION_13	CALL_2
0xcf4	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       372	color.c	FUNCTION_13	CALL_2
0xcf8	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	color.c	FUNCTION_13	CALL_2
0xcfc	          0x4889ce	                            mov rsi, rcx	       372	color.c	FUNCTION_13	CALL_2
0xcff	          0x4889c7	                            mov rdi, rax	       372	color.c	FUNCTION_13	CALL_2
0xd02	      0xe800000000	                          call 0x4000d47	       372	color.c	FUNCTION_13	CALL_2
0xd07	              0xc9	                                   leave	       373	color.c	FUNCTION_13
0xd08	              0xc3	                                     ret	       373	color.c	FUNCTION_13
skip_prefix_mem	DO,0:functions,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:CALL,2:FOR,0	38
0xb	              0x55	                                push rbp	       522	git-compat-util.h	FUNCTION_27
0xc	          0x4889e5	                            mov rbp, rsp	       522	git-compat-util.h	FUNCTION_27
0xf	        0x4883ec40	                           sub rsp, 0x40	       522	git-compat-util.h	FUNCTION_27
0x13	        0x48897de8	             mov qword [rbp - 0x18], rdi	       522	git-compat-util.h	FUNCTION_27
0x17	        0x488975e0	             mov qword [rbp - 0x20], rsi	       522	git-compat-util.h	FUNCTION_27
0x1b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       522	git-compat-util.h	FUNCTION_27
0x1f	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       522	git-compat-util.h	FUNCTION_27
0x23	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       522	git-compat-util.h	FUNCTION_27
0x27	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       523	git-compat-util.h	FUNCTION_27	CALL_1
0x2b	          0x4889c7	                            mov rdi, rax	       523	git-compat-util.h	FUNCTION_27	CALL_1
0x2e	      0xe800000000	                          call 0x4000073	       523	git-compat-util.h	FUNCTION_27	CALL_1
0x33	        0x488945f8	                mov qword [rbp - 8], rax	       523	git-compat-util.h	FUNCTION_27	CALL_1
0x37	        0x488b45f8	                mov rax, qword [rbp - 8]	       524	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x3b	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       524	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x3f	            0x7746	                            ja 0x40000c7	       524	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x41	        0x488b55f8	                mov rdx, qword [rbp - 8]	       524	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x45	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       524	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       524	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x4d	          0x4889ce	                            mov rsi, rcx	       524	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x50	          0x4889c7	                            mov rdi, rax	       524	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x53	      0xe800000000	                          call 0x4000098	       524	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x58	            0x85c0	                           test eax, eax	       524	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x5a	            0x752b	                           jne 0x40000c7	       524	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x5c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       525	git-compat-util.h	FUNCTION_27	IF_1
0x60	        0x488b45f8	                mov rax, qword [rbp - 8]	       525	git-compat-util.h	FUNCTION_27	IF_1
0x64	          0x4801c2	                            add rdx, rax	       525	git-compat-util.h	FUNCTION_27	IF_1
0x67	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       525	git-compat-util.h	FUNCTION_27	IF_1
0x6b	          0x488910	                    mov qword [rax], rdx	       525	git-compat-util.h	FUNCTION_27	IF_1
0x6e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       526	git-compat-util.h	FUNCTION_27	IF_1
0x72	        0x482b45f8	                sub rax, qword [rbp - 8]	       526	git-compat-util.h	FUNCTION_27	IF_1
0x76	          0x4889c2	                            mov rdx, rax	       526	git-compat-util.h	FUNCTION_27	IF_1
0x79	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       526	git-compat-util.h	FUNCTION_27	IF_1
0x7d	          0x488910	                    mov qword [rax], rdx	       526	git-compat-util.h	FUNCTION_27	IF_1
0x80	      0xb801000000	                              mov eax, 1	       527	git-compat-util.h	FUNCTION_27	IF_1
0x85	            0xeb05	                           jmp 0x40000cc	       527	git-compat-util.h	FUNCTION_27	IF_1
0x87	      0xb800000000	                              mov eax, 0	       529	git-compat-util.h	FUNCTION_27
0x8c	              0xc9	                                   leave	       530	git-compat-util.h	FUNCTION_27
0x8d	              0xc3	                                     ret	       530	git-compat-util.h	FUNCTION_27
_	DO,0:functions,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:CALL,2:FOR,0	15
0x8e	              0x55	                                push rbp	        51	gettext.h	FUNCTION_48
0x8f	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_48
0x92	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_48
0x96	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_48
0x9a	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_48	IF_1
0x9e	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_48	IF_1
0xa1	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_48	IF_1
0xa3	            0x7507	                           jne 0x40000ec	        52	gettext.h	FUNCTION_48	IF_1
0xa5	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_48	IF_1
0xaa	            0xeb0c	                           jmp 0x40000f8	        53	gettext.h	FUNCTION_48	IF_1
0xac	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_48	CALL_2
0xb0	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_48	CALL_2
0xb3	      0xe800000000	                          call 0x40000f8	        54	gettext.h	FUNCTION_48	CALL_2
0xb8	              0xc9	                                   leave	        55	gettext.h	FUNCTION_48
0xb9	              0xc3	                                     ret	        55	gettext.h	FUNCTION_48
git_config_colorbool	DO,0:functions,0:SWITCH,0:WHILE,0:IF,6:ELSE,0:CALL,4:FOR,0	47
0xaf7	              0x55	                                push rbp	       301	color.c	FUNCTION_9
0xaf8	          0x4889e5	                            mov rbp, rsp	       301	color.c	FUNCTION_9
0xafb	        0x4883ec10	                           sub rsp, 0x10	       301	color.c	FUNCTION_9
0xaff	        0x48897df8	                mov qword [rbp - 8], rdi	       301	color.c	FUNCTION_9
0xb03	        0x488975f0	             mov qword [rbp - 0x10], rsi	       301	color.c	FUNCTION_9
0xb07	      0x48837df000	               cmp qword [rbp - 0x10], 0	       302	color.c	FUNCTION_9	IF_1
0xb0c	            0x7454	                            je 0x4000ba2	       302	color.c	FUNCTION_9	IF_1
0xb0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0xb12	      0xbe00000000	                              mov esi, 0	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0xb17	          0x4889c7	                            mov rdi, rax	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0xb1a	      0xe800000000	                          call 0x4000b5f	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0xb1f	            0x85c0	                           test eax, eax	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0xb21	            0x7507	                           jne 0x4000b6a	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0xb23	      0xb800000000	                              mov eax, 0	       304	color.c	FUNCTION_9	IF_1	IF_2
0xb28	            0xeb69	                           jmp 0x4000bd3	       304	color.c	FUNCTION_9	IF_1	IF_2
0xb2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0xb2e	      0xbe00000000	                              mov esi, 0	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0xb33	          0x4889c7	                            mov rdi, rax	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0xb36	      0xe800000000	                          call 0x4000b7b	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0xb3b	            0x85c0	                           test eax, eax	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0xb3d	            0x7507	                           jne 0x4000b86	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0xb3f	      0xb801000000	                              mov eax, 1	       306	color.c	FUNCTION_9	IF_1	IF_3
0xb44	            0xeb4d	                           jmp 0x4000bd3	       306	color.c	FUNCTION_9	IF_1	IF_3
0xb46	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0xb4a	      0xbe00000000	                              mov esi, 0	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0xb4f	          0x4889c7	                            mov rdi, rax	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0xb52	      0xe800000000	                          call 0x4000b97	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0xb57	            0x85c0	                           test eax, eax	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0xb59	            0x7507	                           jne 0x4000ba2	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0xb5b	      0xb802000000	                              mov eax, 2	       308	color.c	FUNCTION_9	IF_1	IF_4
0xb60	            0xeb31	                           jmp 0x4000bd3	       308	color.c	FUNCTION_9	IF_1	IF_4
0xb62	      0x48837df800	                  cmp qword [rbp - 8], 0	       311	color.c	FUNCTION_9	IF_5
0xb67	            0x7507	                           jne 0x4000bb0	       311	color.c	FUNCTION_9	IF_5
0xb69	      0xb8ffffffff	                     mov eax, 0xffffffff	       312	color.c	FUNCTION_9	IF_5
0xb6e	            0xeb23	                           jmp 0x4000bd3	       312	color.c	FUNCTION_9	IF_5
0xb70	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       315	color.c	FUNCTION_9	IF_6	CALL_4
0xb74	        0x488b45f8	                mov rax, qword [rbp - 8]	       315	color.c	FUNCTION_9	IF_6	CALL_4
0xb78	          0x4889d6	                            mov rsi, rdx	       315	color.c	FUNCTION_9	IF_6	CALL_4
0xb7b	          0x4889c7	                            mov rdi, rax	       315	color.c	FUNCTION_9	IF_6	CALL_4
0xb7e	      0xe800000000	                          call 0x4000bc3	       315	color.c	FUNCTION_9	IF_6	CALL_4
0xb83	            0x85c0	                           test eax, eax	       315	color.c	FUNCTION_9	IF_6	CALL_4
0xb85	            0x7507	                           jne 0x4000bce	       315	color.c	FUNCTION_9	IF_6	CALL_4
0xb87	      0xb800000000	                              mov eax, 0	       316	color.c	FUNCTION_9	IF_6
0xb8c	            0xeb05	                           jmp 0x4000bd3	       316	color.c	FUNCTION_9	IF_6
0xb8e	      0xb802000000	                              mov eax, 2	       319	color.c	FUNCTION_9
0xb93	              0xc9	                                   leave	       320	color.c	FUNCTION_9
0xb94	              0xc3	                                     ret	       320	color.c	FUNCTION_9
match_word	DO,0:functions,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:CALL,1:FOR,0	27
0xd5	              0x55	                                push rbp	        50	color.c	FUNCTION_1
0xd6	          0x4889e5	                            mov rbp, rsp	        50	color.c	FUNCTION_1
0xd9	        0x4883ec20	                           sub rsp, 0x20	        50	color.c	FUNCTION_1
0xdd	        0x48897df8	                mov qword [rbp - 8], rdi	        50	color.c	FUNCTION_1
0xe1	          0x8975f4	              mov dword [rbp - 0xc], esi	        50	color.c	FUNCTION_1
0xe4	        0x488955e8	             mov qword [rbp - 0x18], rdx	        50	color.c	FUNCTION_1
0xe8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        51	color.c	FUNCTION_1	CALL_1
0xeb	          0x4863d0	                         movsxd rdx, eax	        51	color.c	FUNCTION_1	CALL_1
0xee	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        51	color.c	FUNCTION_1	CALL_1
0xf2	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	color.c	FUNCTION_1	CALL_1
0xf6	          0x4889ce	                            mov rsi, rcx	        51	color.c	FUNCTION_1	CALL_1
0xf9	          0x4889c7	                            mov rdi, rax	        51	color.c	FUNCTION_1	CALL_1
0xfc	      0xe800000000	                          call 0x4000141	        51	color.c	FUNCTION_1	CALL_1
0x101	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x103	            0x751b	                           jne 0x4000160	        51	color.c	FUNCTION_1	CALL_1
0x105	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        51	color.c	FUNCTION_1	CALL_1
0x108	          0x4863d0	                         movsxd rdx, eax	        51	color.c	FUNCTION_1	CALL_1
0x10b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	color.c	FUNCTION_1	CALL_1
0x10f	          0x4801d0	                            add rax, rdx	        51	color.c	FUNCTION_1	CALL_1
0x112	           0xfb600	                   movzx eax, byte [rax]	        51	color.c	FUNCTION_1	CALL_1
0x115	            0x84c0	                             test al, al	        51	color.c	FUNCTION_1	CALL_1
0x117	            0x7507	                           jne 0x4000160	        51	color.c	FUNCTION_1	CALL_1
0x119	      0xb801000000	                              mov eax, 1	        51	color.c	FUNCTION_1	CALL_1
0x11e	            0xeb05	                           jmp 0x4000165	        51	color.c	FUNCTION_1	CALL_1
0x120	      0xb800000000	                              mov eax, 0	        51	color.c	FUNCTION_1	CALL_1
0x125	              0xc9	                                   leave	        52	color.c	FUNCTION_1
0x126	              0xc3	                                     ret	        52	color.c	FUNCTION_1
get_hex_color	DO,0:functions,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:CALL,2:FOR,0	36
0x127	              0x55	                                push rbp	        55	color.c	FUNCTION_2
0x128	          0x4889e5	                            mov rbp, rsp	        55	color.c	FUNCTION_2
0x12b	              0x53	                                push rbx	        55	color.c	FUNCTION_2
0x12c	        0x4883ec20	                           sub rsp, 0x20	        55	color.c	FUNCTION_2
0x130	        0x48897de0	             mov qword [rbp - 0x20], rdi	        55	color.c	FUNCTION_2
0x134	        0x488975d8	             mov qword [rbp - 0x28], rsi	        55	color.c	FUNCTION_2
0x138	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	color.c	FUNCTION_2	CALL_2
0x13c	           0xfb600	                   movzx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x13f	           0xfb6c0	                           movzx eax, al	        57	color.c	FUNCTION_2	CALL_2
0x142	            0x89c7	                            mov edi, eax	        57	color.c	FUNCTION_2	CALL_2
0x144	      0xe871ffffff	                         call sym.hexval	        57	color.c	FUNCTION_2	CALL_2
0x149	          0xc1e004	                              shl eax, 4	        57	color.c	FUNCTION_2	CALL_2
0x14c	            0x89c3	                            mov ebx, eax	        57	color.c	FUNCTION_2	CALL_2
0x14e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	color.c	FUNCTION_2	CALL_2
0x152	        0x4883c001	                              add rax, 1	        57	color.c	FUNCTION_2	CALL_2
0x156	           0xfb600	                   movzx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x159	           0xfb6c0	                           movzx eax, al	        57	color.c	FUNCTION_2	CALL_2
0x15c	            0x89c7	                            mov edi, eax	        57	color.c	FUNCTION_2	CALL_2
0x15e	      0xe857ffffff	                         call sym.hexval	        57	color.c	FUNCTION_2	CALL_2
0x163	             0x9d8	                             or eax, ebx	        57	color.c	FUNCTION_2	CALL_2
0x165	          0x8945f4	              mov dword [rbp - 0xc], eax	        57	color.c	FUNCTION_2	CALL_2
0x168	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        58	color.c	FUNCTION_2	IF_1
0x16b	            0xb000	                               mov al, 0	        58	color.c	FUNCTION_2	IF_1
0x16d	            0x85c0	                           test eax, eax	        58	color.c	FUNCTION_2	IF_1
0x16f	            0x7407	                            je 0x40001b8	        58	color.c	FUNCTION_2	IF_1
0x171	      0xb8ffffffff	                     mov eax, 0xffffffff	        59	color.c	FUNCTION_2	IF_1
0x176	            0xeb10	                           jmp 0x40001c8	        59	color.c	FUNCTION_2	IF_1
0x178	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        60	color.c	FUNCTION_2
0x17b	            0x89c2	                            mov edx, eax	        60	color.c	FUNCTION_2
0x17d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        60	color.c	FUNCTION_2
0x181	            0x8810	                      mov byte [rax], dl	        60	color.c	FUNCTION_2
0x183	      0xb800000000	                              mov eax, 0	        61	color.c	FUNCTION_2
0x188	        0x4883c420	                           add rsp, 0x20	        62	color.c	FUNCTION_2
0x18c	              0x5b	                                 pop rbx	        62	color.c	FUNCTION_2
0x18d	              0x5d	                                 pop rbp	        62	color.c	FUNCTION_2
0x18e	              0xc3	                                     ret	        62	color.c	FUNCTION_2
git_color_config	DO,0:functions,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:CALL,2:FOR,0	23
0xc6a	              0x55	                                push rbp	       358	color.c	FUNCTION_12
0xc6b	          0x4889e5	                            mov rbp, rsp	       358	color.c	FUNCTION_12
0xc6e	        0x4883ec20	                           sub rsp, 0x20	       358	color.c	FUNCTION_12
0xc72	        0x48897df8	                mov qword [rbp - 8], rdi	       358	color.c	FUNCTION_12
0xc76	        0x488975f0	             mov qword [rbp - 0x10], rsi	       358	color.c	FUNCTION_12
0xc7a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       358	color.c	FUNCTION_12
0xc7e	        0x488b45f8	                mov rax, qword [rbp - 8]	       359	color.c	FUNCTION_12	IF_1	CALL_1
0xc82	      0xbe00000000	                              mov esi, 0	       359	color.c	FUNCTION_12	IF_1	CALL_1
0xc87	          0x4889c7	                            mov rdi, rax	       359	color.c	FUNCTION_12	IF_1	CALL_1
0xc8a	      0xe800000000	                          call 0x4000ccf	       359	color.c	FUNCTION_12	IF_1	CALL_1
0xc8f	            0x85c0	                           test eax, eax	       359	color.c	FUNCTION_12	IF_1	CALL_1
0xc91	            0x7520	                           jne 0x4000cf3	       359	color.c	FUNCTION_12	IF_1	CALL_1
0xc93	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       360	color.c	FUNCTION_12	IF_1	CALL_2
0xc97	        0x488b45f8	                mov rax, qword [rbp - 8]	       360	color.c	FUNCTION_12	IF_1	CALL_2
0xc9b	          0x4889d6	                            mov rsi, rdx	       360	color.c	FUNCTION_12	IF_1	CALL_2
0xc9e	          0x4889c7	                            mov rdi, rax	       360	color.c	FUNCTION_12	IF_1	CALL_2
0xca1	      0xe800000000	                          call 0x4000ce6	       360	color.c	FUNCTION_12	IF_1	CALL_2
0xca6	    0x890500000000	            mov dword [0x04000cec], eax 	       360	color.c	FUNCTION_12	IF_1	CALL_2
0xcac	      0xb800000000	                              mov eax, 0	       361	color.c	FUNCTION_12	IF_1
0xcb1	            0xeb05	                           jmp 0x4000cf8	       361	color.c	FUNCTION_12	IF_1
0xcb3	      0xb800000000	                              mov eax, 0	       364	color.c	FUNCTION_12
0xcb8	              0xc9	                                   leave	       365	color.c	FUNCTION_12
0xcb9	              0xc3	                                     ret	       365	color.c	FUNCTION_12
color_print_strbuf	DO,0:functions,0:SWITCH,0:WHILE,0:IF,2:ELSE,0:CALL,3:FOR,0	34
0xd09	              0x55	                                push rbp	       376	color.c	FUNCTION_14
0xd0a	          0x4889e5	                            mov rbp, rsp	       376	color.c	FUNCTION_14
0xd0d	        0x4883ec20	                           sub rsp, 0x20	       376	color.c	FUNCTION_14
0xd11	        0x48897df8	                mov qword [rbp - 8], rdi	       376	color.c	FUNCTION_14
0xd15	        0x488975f0	             mov qword [rbp - 0x10], rsi	       376	color.c	FUNCTION_14
0xd19	        0x488955e8	             mov qword [rbp - 0x18], rdx	       376	color.c	FUNCTION_14
0xd1d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       377	color.c	FUNCTION_14	IF_1
0xd21	           0xfb600	                   movzx eax, byte [rax]	       377	color.c	FUNCTION_14	IF_1
0xd24	            0x84c0	                             test al, al	       377	color.c	FUNCTION_14	IF_1
0xd26	            0x7413	                            je 0x4000d7b	       377	color.c	FUNCTION_14	IF_1
0xd28	        0x488b55f8	                mov rdx, qword [rbp - 8]	       378	color.c	FUNCTION_14	CALL_1
0xd2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       378	color.c	FUNCTION_14	CALL_1
0xd30	          0x4889d6	                            mov rsi, rdx	       378	color.c	FUNCTION_14	CALL_1
0xd33	          0x4889c7	                            mov rdi, rax	       378	color.c	FUNCTION_14	CALL_1
0xd36	      0xe800000000	                          call 0x4000d7b	       378	color.c	FUNCTION_14	CALL_1
0xd3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       379	color.c	FUNCTION_14	CALL_2
0xd3f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       379	color.c	FUNCTION_14	CALL_2
0xd43	        0x488b55f8	                mov rdx, qword [rbp - 8]	       379	color.c	FUNCTION_14	CALL_2
0xd47	          0x4889d6	                            mov rsi, rdx	       379	color.c	FUNCTION_14	CALL_2
0xd4a	          0x4889c7	                            mov rdi, rax	       379	color.c	FUNCTION_14	CALL_2
0xd4d	      0xe800000000	                          call 0x4000d92	       379	color.c	FUNCTION_14	CALL_2
0xd52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       380	color.c	FUNCTION_14	IF_2
0xd56	           0xfb600	                   movzx eax, byte [rax]	       380	color.c	FUNCTION_14	IF_2
0xd59	            0x84c0	                             test al, al	       380	color.c	FUNCTION_14	IF_2
0xd5b	            0x741b	                            je 0x4000db8	       380	color.c	FUNCTION_14	IF_2
0xd5d	        0x488b45f8	                mov rax, qword [rbp - 8]	       381	color.c	FUNCTION_14	CALL_3
0xd61	          0x4889c1	                            mov rcx, rax	       381	color.c	FUNCTION_14	CALL_3
0xd64	      0xba03000000	                              mov edx, 3	       381	color.c	FUNCTION_14	CALL_3
0xd69	      0xbe01000000	                              mov esi, 1	       381	color.c	FUNCTION_14	CALL_3
0xd6e	      0xbf00000000	                              mov edi, 0	       381	color.c	FUNCTION_14	CALL_3
0xd73	      0xe800000000	                          call 0x4000db8	       381	color.c	FUNCTION_14	CALL_3
0xd78	              0x90	                                     nop	       382	color.c	FUNCTION_14
0xd79	              0xc9	                                   leave	       382	color.c	FUNCTION_14
0xd7a	              0xc3	                                     ret	       382	color.c	FUNCTION_14
color_fprintf	DO,0:functions,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:CALL,3:FOR,0	43
0xe32	              0x55	                                push rbp	       400	color.c	FUNCTION_16
0xe33	          0x4889e5	                            mov rbp, rsp	       400	color.c	FUNCTION_16
0xe36	    0x4881ec000100	                          sub rsp, 0x100	       400	color.c	FUNCTION_16
0xe3d	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       400	color.c	FUNCTION_16
0xe44	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       400	color.c	FUNCTION_16
0xe4b	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       400	color.c	FUNCTION_16
0xe52	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       400	color.c	FUNCTION_16
0xe59	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       400	color.c	FUNCTION_16
0xe60	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       400	color.c	FUNCTION_16
0xe67	            0x84c0	                             test al, al	       400	color.c	FUNCTION_16
0xe69	            0x7420	                            je 0x4000ecb	       400	color.c	FUNCTION_16
0xe6b	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       400	color.c	FUNCTION_16
0xe6f	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       400	color.c	FUNCTION_16
0xe73	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       400	color.c	FUNCTION_16
0xe77	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       400	color.c	FUNCTION_16
0xe7b	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       400	color.c	FUNCTION_16
0xe7f	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       400	color.c	FUNCTION_16
0xe83	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       400	color.c	FUNCTION_16
0xe87	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       400	color.c	FUNCTION_16
0xe8b	    0x64488b042528	                mov rax, qword fs:[0x28]	       400	color.c	FUNCTION_16
0xe94	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       400	color.c	FUNCTION_16
0xe9b	            0x31c0	                            xor eax, eax	       400	color.c	FUNCTION_16
0xe9d	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       403	color.c	FUNCTION_16	CALL_1
0xea7	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       403	color.c	FUNCTION_16	CALL_1
0xeb1	        0x488d4510	                   lea rax, [rbp + 0x10]	       403	color.c	FUNCTION_16	CALL_1
0xeb5	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       403	color.c	FUNCTION_16	CALL_1
0xebc	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       403	color.c	FUNCTION_16	CALL_1
0xec3	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       403	color.c	FUNCTION_16	CALL_1
0xeca	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       404	color.c	FUNCTION_16	CALL_2
0xed1	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	       404	color.c	FUNCTION_16	CALL_2
0xed8	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       404	color.c	FUNCTION_16	CALL_2
0xedf	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       404	color.c	FUNCTION_16	CALL_2
0xee6	    0x41b800000000	                              mov r8d, 0	       404	color.c	FUNCTION_16	CALL_2
0xeec	          0x4889c7	                            mov rdi, rax	       404	color.c	FUNCTION_16	CALL_2
0xeef	      0xe887feffff	                 call sym.color_vfprintf	       404	color.c	FUNCTION_16	CALL_2
0xef4	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       404	color.c	FUNCTION_16	CALL_2
0xefa	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       406	color.c	FUNCTION_16
0xf00	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	       407	color.c	FUNCTION_16
0xf07	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       407	color.c	FUNCTION_16
0xf10	            0x7405	                            je 0x4000f57	       407	color.c	FUNCTION_16
0xf12	      0xe800000000	                          call 0x4000f57	       407	color.c	FUNCTION_16
0xf17	              0xc9	                                   leave	       407	color.c	FUNCTION_16
0xf18	              0xc3	                                     ret	       407	color.c	FUNCTION_16
want_color_fd	DO,0:functions,0:SWITCH,0:WHILE,0:IF,3:ELSE,0:CALL,1:FOR,0	30
0xc0c	              0x55	                                push rbp	       336	color.c	FUNCTION_11
0xc0d	          0x4889e5	                            mov rbp, rsp	       336	color.c	FUNCTION_11
0xc10	        0x4883ec10	                           sub rsp, 0x10	       336	color.c	FUNCTION_11
0xc14	          0x897dfc	                mov dword [rbp - 4], edi	       336	color.c	FUNCTION_11
0xc17	          0x8975f8	                mov dword [rbp - 8], esi	       336	color.c	FUNCTION_11
0xc1a	        0x837df800	                  cmp dword [rbp - 8], 0	       346	color.c	FUNCTION_11	IF_1
0xc1e	            0x7909	                           jns 0x4000c69	       346	color.c	FUNCTION_11	IF_1
0xc20	    0x8b0500000000	            mov eax, dword [0x04000c66] 	       347	color.c	FUNCTION_11	IF_1
0xc26	          0x8945f8	                mov dword [rbp - 8], eax	       347	color.c	FUNCTION_11	IF_1
0xc29	        0x837df802	                  cmp dword [rbp - 8], 2	       349	color.c	FUNCTION_11	IF_2
0xc2d	            0x7536	                           jne 0x4000ca5	       349	color.c	FUNCTION_11	IF_2
0xc2f	          0x8b45fc	                mov eax, dword [rbp - 4]	       350	color.c	FUNCTION_11	IF_2	IF_3
0xc32	            0x4898	                                    cdqe	       350	color.c	FUNCTION_11	IF_2	IF_3
0xc34	    0x8b0485000000	                  mov eax, dword [rax*4]	       350	color.c	FUNCTION_11	IF_2	IF_3
0xc3b	            0x85c0	                           test eax, eax	       350	color.c	FUNCTION_11	IF_2	IF_3
0xc3d	            0x7918	                           jns 0x4000c97	       350	color.c	FUNCTION_11	IF_2	IF_3
0xc3f	          0x8b45fc	                mov eax, dword [rbp - 4]	       351	color.c	FUNCTION_11	IF_2	CALL_1
0xc42	            0x89c7	                            mov edi, eax	       351	color.c	FUNCTION_11	IF_2	CALL_1
0xc44	      0xe84cffffff	               call sym.check_auto_color	       351	color.c	FUNCTION_11	IF_2	CALL_1
0xc49	            0x89c2	                            mov edx, eax	       351	color.c	FUNCTION_11	IF_2	CALL_1
0xc4b	          0x8b45fc	                mov eax, dword [rbp - 4]	       351	color.c	FUNCTION_11	IF_2	CALL_1
0xc4e	            0x4898	                                    cdqe	       351	color.c	FUNCTION_11	IF_2	CALL_1
0xc50	    0x891485000000	                  mov dword [rax*4], edx	       351	color.c	FUNCTION_11	IF_2	CALL_1
0xc57	          0x8b45fc	                mov eax, dword [rbp - 4]	       352	color.c	FUNCTION_11	IF_2
0xc5a	            0x4898	                                    cdqe	       352	color.c	FUNCTION_11	IF_2
0xc5c	    0x8b0485000000	                  mov eax, dword [rax*4]	       352	color.c	FUNCTION_11	IF_2
0xc63	            0xeb03	                           jmp 0x4000ca8	       352	color.c	FUNCTION_11	IF_2
0xc65	          0x8b45f8	                mov eax, dword [rbp - 8]	       354	color.c	FUNCTION_11
0xc68	              0xc9	                                   leave	       355	color.c	FUNCTION_11
0xc69	              0xc3	                                     ret	       355	color.c	FUNCTION_11
