set_push_cert_flags	IF,0:WHILE,0:functions,0:DO,0:CALL,0:FOR,0:SWITCH,1:ELSE,0	48
0x1164	              0x55	                                push rbp	       482	push.c	FUNCTION_20
0x1165	          0x4889e5	                            mov rbp, rsp	       482	push.c	FUNCTION_20
0x1168	        0x48897df8	                mov qword [rbp - 8], rdi	       482	push.c	FUNCTION_20
0x116c	          0x8975f4	              mov dword [rbp - 0xc], esi	       482	push.c	FUNCTION_20
0x116f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       483	push.c	FUNCTION_20	SWITCH_1
0x1172	          0x83f801	                              cmp eax, 1	       483	push.c	FUNCTION_20	SWITCH_1
0x1175	            0x7442	                            je 0x40011f9	       483	push.c	FUNCTION_20	SWITCH_1
0x1177	          0x83f802	                              cmp eax, 2	       483	push.c	FUNCTION_20	SWITCH_1
0x117a	            0x7419	                            je 0x40011d5	       483	push.c	FUNCTION_20	SWITCH_1
0x117c	            0x85c0	                           test eax, eax	       483	push.c	FUNCTION_20	SWITCH_1
0x117e	            0x7402	                            je 0x40011c2	       483	push.c	FUNCTION_20	SWITCH_1
0x1180	            0xeb5a	                           jmp 0x400121c	       496	push.c	FUNCTION_20
0x1182	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	push.c	FUNCTION_20	SWITCH_1
0x1186	            0x8b00	                    mov eax, dword [rax]	       485	push.c	FUNCTION_20	SWITCH_1
0x1188	          0x80e4e7	                            and ah, 0xe7	       485	push.c	FUNCTION_20	SWITCH_1
0x118b	            0x89c2	                            mov edx, eax	       485	push.c	FUNCTION_20	SWITCH_1
0x118d	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	push.c	FUNCTION_20	SWITCH_1
0x1191	            0x8910	                    mov dword [rax], edx	       485	push.c	FUNCTION_20	SWITCH_1
0x1193	            0xeb47	                           jmp 0x400121c	       486	push.c	FUNCTION_20	SWITCH_1
0x1195	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	push.c	FUNCTION_20	SWITCH_1
0x1199	            0x8b00	                    mov eax, dword [rax]	       488	push.c	FUNCTION_20	SWITCH_1
0x119b	          0x80cc08	                                or ah, 8	       488	push.c	FUNCTION_20	SWITCH_1
0x119e	            0x89c2	                            mov edx, eax	       488	push.c	FUNCTION_20	SWITCH_1
0x11a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	push.c	FUNCTION_20	SWITCH_1
0x11a4	            0x8910	                    mov dword [rax], edx	       488	push.c	FUNCTION_20	SWITCH_1
0x11a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       489	push.c	FUNCTION_20	SWITCH_1
0x11aa	            0x8b00	                    mov eax, dword [rax]	       489	push.c	FUNCTION_20	SWITCH_1
0x11ac	          0x80e4ef	                            and ah, 0xef	       489	push.c	FUNCTION_20	SWITCH_1
0x11af	            0x89c2	                            mov edx, eax	       489	push.c	FUNCTION_20	SWITCH_1
0x11b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       489	push.c	FUNCTION_20	SWITCH_1
0x11b5	            0x8910	                    mov dword [rax], edx	       489	push.c	FUNCTION_20	SWITCH_1
0x11b7	            0xeb23	                           jmp 0x400121c	       490	push.c	FUNCTION_20	SWITCH_1
0x11b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       492	push.c	FUNCTION_20	SWITCH_1
0x11bd	            0x8b00	                    mov eax, dword [rax]	       492	push.c	FUNCTION_20	SWITCH_1
0x11bf	          0x80cc10	                             or ah, 0x10	       492	push.c	FUNCTION_20	SWITCH_1
0x11c2	            0x89c2	                            mov edx, eax	       492	push.c	FUNCTION_20	SWITCH_1
0x11c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       492	push.c	FUNCTION_20	SWITCH_1
0x11c8	            0x8910	                    mov dword [rax], edx	       492	push.c	FUNCTION_20	SWITCH_1
0x11ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       493	push.c	FUNCTION_20	SWITCH_1
0x11ce	            0x8b00	                    mov eax, dword [rax]	       493	push.c	FUNCTION_20	SWITCH_1
0x11d0	          0x80e4f7	                            and ah, 0xf7	       493	push.c	FUNCTION_20	SWITCH_1
0x11d3	            0x89c2	                            mov edx, eax	       493	push.c	FUNCTION_20	SWITCH_1
0x11d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       493	push.c	FUNCTION_20	SWITCH_1
0x11d9	            0x8910	                    mov dword [rax], edx	       493	push.c	FUNCTION_20	SWITCH_1
0x11db	              0x90	                                     nop	       494	push.c	FUNCTION_20	SWITCH_1
0x11dc	              0x90	                                     nop	       496	push.c	FUNCTION_20
0x11dd	              0x5d	                                 pop rbp	       496	push.c	FUNCTION_20
0x11de	              0xc3	                                     ret	       496	push.c	FUNCTION_20
add_refspec	IF,0:WHILE,0:functions,0:DO,0:CALL,1:FOR,0:SWITCH,0:ELSE,0	59
0x172	              0x55	                                push rbp	        66	push.c	FUNCTION_3
0x173	          0x4889e5	                            mov rbp, rsp	        66	push.c	FUNCTION_3
0x176	        0x4883ec10	                           sub rsp, 0x10	        66	push.c	FUNCTION_3
0x17a	        0x48897df8	                mov qword [rbp - 8], rdi	        66	push.c	FUNCTION_3
0x17e	    0x8b0500000000	            mov eax, dword [0x040001c4] 	        67	push.c	FUNCTION_3
0x184	          0x83c001	                              add eax, 1	        67	push.c	FUNCTION_3
0x187	    0x890500000000	            mov dword [0x040001cd], eax 	        67	push.c	FUNCTION_3
0x18d	    0x8b1500000000	            mov edx, dword [0x040001d3] 	        68	push.c	FUNCTION_3	CALL_1
0x193	    0x8b0500000000	            mov eax, dword [0x040001d9] 	        68	push.c	FUNCTION_3	CALL_1
0x199	            0x39c2	                            cmp edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x19b	     0xf8e81000000	                           jle 0x4000262	        68	push.c	FUNCTION_3	CALL_1
0x1a1	    0x8b0500000000	            mov eax, dword [0x040001e7] 	        68	push.c	FUNCTION_3	CALL_1
0x1a7	          0x8d5010	                   lea edx, [rax + 0x10]	        68	push.c	FUNCTION_3	CALL_1
0x1aa	            0x89d0	                            mov eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x1ac	             0x1c0	                            add eax, eax	        68	push.c	FUNCTION_3	CALL_1
0x1ae	             0x1d0	                            add eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x1b0	            0x89c2	                            mov edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x1b2	          0xc1ea1f	                           shr edx, 0x1f	        68	push.c	FUNCTION_3	CALL_1
0x1b5	             0x1d0	                            add eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x1b7	            0xd1f8	                              sar eax, 1	        68	push.c	FUNCTION_3	CALL_1
0x1b9	            0x89c2	                            mov edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x1bb	    0x8b0500000000	            mov eax, dword [0x04000201] 	        68	push.c	FUNCTION_3	CALL_1
0x1c1	            0x39c2	                            cmp edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x1c3	            0x7d0e	                           jge 0x4000213	        68	push.c	FUNCTION_3	CALL_1
0x1c5	    0x8b0500000000	            mov eax, dword [0x0400020b] 	        68	push.c	FUNCTION_3	CALL_1
0x1cb	    0x890500000000	            mov dword [0x04000211], eax 	        68	push.c	FUNCTION_3	CALL_1
0x1d1	            0xeb1e	                           jmp 0x4000231	        68	push.c	FUNCTION_3	CALL_1
0x1d3	    0x8b0500000000	            mov eax, dword [0x04000219] 	        68	push.c	FUNCTION_3	CALL_1
0x1d9	          0x8d5010	                   lea edx, [rax + 0x10]	        68	push.c	FUNCTION_3	CALL_1
0x1dc	            0x89d0	                            mov eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x1de	             0x1c0	                            add eax, eax	        68	push.c	FUNCTION_3	CALL_1
0x1e0	             0x1d0	                            add eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x1e2	            0x89c2	                            mov edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x1e4	          0xc1ea1f	                           shr edx, 0x1f	        68	push.c	FUNCTION_3	CALL_1
0x1e7	             0x1d0	                            add eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x1e9	            0xd1f8	                              sar eax, 1	        68	push.c	FUNCTION_3	CALL_1
0x1eb	    0x890500000000	            mov dword [0x04000231], eax 	        68	push.c	FUNCTION_3	CALL_1
0x1f1	    0x8b0500000000	            mov eax, dword [0x04000237] 	        68	push.c	FUNCTION_3	CALL_1
0x1f7	            0x4898	                                    cdqe	        68	push.c	FUNCTION_3	CALL_1
0x1f9	          0x4889c6	                            mov rsi, rax	        68	push.c	FUNCTION_3	CALL_1
0x1fc	      0xbf08000000	                              mov edi, 8	        68	push.c	FUNCTION_3	CALL_1
0x201	      0xe85bfeffff	                        call sym.st_mult	        68	push.c	FUNCTION_3	CALL_1
0x206	          0x4889c2	                            mov rdx, rax	        68	push.c	FUNCTION_3	CALL_1
0x209	    0x488b05000000	            mov rax, qword [0x04000250] 	        68	push.c	FUNCTION_3	CALL_1
0x210	          0x4889d6	                            mov rsi, rdx	        68	push.c	FUNCTION_3	CALL_1
0x213	          0x4889c7	                            mov rdi, rax	        68	push.c	FUNCTION_3	CALL_1
0x216	      0xe800000000	                          call 0x400025b	        68	push.c	FUNCTION_3	CALL_1
0x21b	    0x488905000000	            mov qword [0x04000262], rax 	        68	push.c	FUNCTION_3	CALL_1
0x222	    0x488b05000000	            mov rax, qword [0x04000269] 	        69	push.c	FUNCTION_3
0x229	    0x8b1500000000	            mov edx, dword [0x0400026f] 	        69	push.c	FUNCTION_3
0x22f	          0x4863d2	                         movsxd rdx, edx	        69	push.c	FUNCTION_3
0x232	        0x48c1e203	                              shl rdx, 3	        69	push.c	FUNCTION_3
0x236	        0x4883ea08	                              sub rdx, 8	        69	push.c	FUNCTION_3
0x23a	          0x4801c2	                            add rdx, rax	        69	push.c	FUNCTION_3
0x23d	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	push.c	FUNCTION_3
0x241	          0x488902	                    mov qword [rdx], rax	        69	push.c	FUNCTION_3
0x244	              0x90	                                     nop	        70	push.c	FUNCTION_3
0x245	              0xc9	                                   leave	        70	push.c	FUNCTION_3
0x246	              0xc3	                                     ret	        70	push.c	FUNCTION_3
st_mult	IF,1:WHILE,0:functions,0:DO,0:CALL,2:FOR,0:SWITCH,0:ELSE,0	22
0x61	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_37
0x62	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_37
0x65	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_37
0x69	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_37
0x6d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_37
0x71	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x76	            0x7430	                            je 0x40000e8	       795	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x78	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x7f	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x84	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x88	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x8c	            0x731a	                           jae 0x40000e8	       795	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x8e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_2
0x92	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_2
0x96	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_2
0x99	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_2
0x9e	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_2
0xa3	      0xe800000000	                          call 0x40000e8	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_2
0xa8	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_37
0xac	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_37
0xb1	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_37
0xb2	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_37
push_with_options	IF,11:WHILE,0:functions,0:DO,0:CALL,20:FOR,0:SWITCH,0:ELSE,4	145
0xbc6	              0x55	                                push rbp	       345	push.c	FUNCTION_17
0xbc7	          0x4889e5	                            mov rbp, rsp	       345	push.c	FUNCTION_17
0xbca	              0x53	                                push rbx	       345	push.c	FUNCTION_17
0xbcb	        0x4883ec28	                           sub rsp, 0x28	       345	push.c	FUNCTION_17
0xbcf	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       345	push.c	FUNCTION_17
0xbd3	          0x8975d4	             mov dword [rbp - 0x2c], esi	       345	push.c	FUNCTION_17
0xbd6	    0x64488b042528	                mov rax, qword fs:[0x28]	       345	push.c	FUNCTION_17
0xbdf	        0x488945e8	             mov qword [rbp - 0x18], rax	       345	push.c	FUNCTION_17
0xbe3	            0x31c0	                            xor eax, eax	       345	push.c	FUNCTION_17
0xbe5	    0x8b1500000000	            mov edx, dword [0x04000c2b] 	       349	push.c	FUNCTION_17	CALL_1
0xbeb	    0x8b0d00000000	            mov ecx, dword [0x04000c31] 	       349	push.c	FUNCTION_17	CALL_1
0xbf1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       349	push.c	FUNCTION_17	CALL_1
0xbf5	            0x89ce	                            mov esi, ecx	       349	push.c	FUNCTION_17	CALL_1
0xbf7	          0x4889c7	                            mov rdi, rax	       349	push.c	FUNCTION_17	CALL_1
0xbfa	      0xe800000000	                          call 0x4000c3f	       349	push.c	FUNCTION_17	CALL_1
0xbff	    0x8b1500000000	            mov edx, dword [0x04000c45] 	       350	push.c	FUNCTION_17
0xc05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       350	push.c	FUNCTION_17
0xc09	          0x895058	             mov dword [rax + 0x58], edx	       350	push.c	FUNCTION_17
0xc0c	    0x488b05000000	            mov rax, qword [0x04000c53] 	       352	push.c	FUNCTION_17	IF_1
0xc13	          0x4885c0	                           test rax, rax	       352	push.c	FUNCTION_17	IF_1
0xc16	            0x7418	                            je 0x4000c70	       352	push.c	FUNCTION_17	IF_1
0xc18	    0x488b15000000	            mov rdx, qword [0x04000c5f] 	       353	push.c	FUNCTION_17	IF_1	CALL_2
0xc1f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       353	push.c	FUNCTION_17	IF_1	CALL_2
0xc23	      0xbe00000000	                              mov esi, 0	       353	push.c	FUNCTION_17	IF_1	CALL_2
0xc28	          0x4889c7	                            mov rdi, rax	       353	push.c	FUNCTION_17	IF_1	CALL_2
0xc2b	      0xe800000000	                          call 0x4000c70	       353	push.c	FUNCTION_17	IF_1	CALL_2
0xc30	    0x8b0500000000	            mov eax, dword [0x04000c76] 	       355	push.c	FUNCTION_17	CALL_3
0xc36	            0x85c0	                           test eax, eax	       355	push.c	FUNCTION_17	CALL_3
0xc38	            0x7407	                            je 0x4000c81	       355	push.c	FUNCTION_17	CALL_3
0xc3a	      0xba00000000	                              mov edx, 0	       355	push.c	FUNCTION_17	CALL_3
0xc3f	            0xeb05	                           jmp 0x4000c86	       355	push.c	FUNCTION_17	CALL_3
0xc41	      0xba00000000	                              mov edx, 0	       355	push.c	FUNCTION_17	CALL_3
0xc46	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       355	push.c	FUNCTION_17	CALL_3
0xc4a	      0xbe00000000	                              mov esi, 0	       355	push.c	FUNCTION_17	CALL_3
0xc4f	          0x4889c7	                            mov rdi, rax	       355	push.c	FUNCTION_17	CALL_3
0xc52	      0xe800000000	                          call 0x4000c97	       355	push.c	FUNCTION_17	CALL_3
0xc57	      0xbf00000000	                              mov edi, 0	       357	push.c	FUNCTION_17	IF_2	CALL_4
0xc5c	      0xe800000000	                          call 0x4000ca1	       357	push.c	FUNCTION_17	IF_2	CALL_4
0xc61	            0x85c0	                           test eax, eax	       357	push.c	FUNCTION_17	IF_2	CALL_4
0xc63	            0x7531	                           jne 0x4000cd6	       357	push.c	FUNCTION_17	IF_2	CALL_4
0xc65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       358	push.c	FUNCTION_17	IF_2	IF_3
0xc69	        0x488b4050	            mov rax, qword [rax + 0x50] 	       358	push.c	FUNCTION_17	IF_2	IF_3
0xc6d	          0x4885c0	                           test rax, rax	       358	push.c	FUNCTION_17	IF_2	IF_3
0xc70	            0x7514	                           jne 0x4000cc6	       358	push.c	FUNCTION_17	IF_2	IF_3
0xc72	      0xbe00000000	                              mov esi, 0	       359	push.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc77	      0xbf00000000	                              mov edi, 0	       359	push.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc7c	      0xb800000000	                              mov eax, 0	       359	push.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc81	      0xe800000000	                          call 0x4000cc6	       359	push.c	FUNCTION_17	IF_2	IF_3	CALL_5
0xc86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       361	push.c	FUNCTION_17	IF_2
0xc8a	        0x488b4050	            mov rax, qword [rax + 0x50] 	       361	push.c	FUNCTION_17	IF_2
0xc8e	    0x48c740280000	               mov qword [rax + 0x28], 0	       361	push.c	FUNCTION_17	IF_2
0xc96	    0x8b0500000000	            mov eax, dword [0x04000cdc] 	       364	push.c	FUNCTION_17	IF_4
0xc9c	            0x85c0	                           test eax, eax	       364	push.c	FUNCTION_17	IF_4
0xc9e	            0x7e2f	                           jle 0x4000d0f	       364	push.c	FUNCTION_17	IF_4
0xca0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       365	push.c	FUNCTION_17	CALL_7
0xca4	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       365	push.c	FUNCTION_17	CALL_7
0xca8	      0xbf00000000	                              mov edi, 0	       365	push.c	FUNCTION_17	CALL_7
0xcad	      0xe801f4ffff	                               call sym.	       365	push.c	FUNCTION_17	CALL_7
0xcb2	          0x4889c1	                            mov rcx, rax	       365	push.c	FUNCTION_17	CALL_7
0xcb5	    0x488b05000000	            mov rax, qword [0x04000cfc] 	       365	push.c	FUNCTION_17	CALL_7
0xcbc	          0x4889da	                            mov rdx, rbx	       365	push.c	FUNCTION_17	CALL_7
0xcbf	          0x4889ce	                            mov rsi, rcx	       365	push.c	FUNCTION_17	CALL_7
0xcc2	          0x4889c7	                            mov rdi, rax	       365	push.c	FUNCTION_17	CALL_7
0xcc5	      0xb800000000	                              mov eax, 0	       365	push.c	FUNCTION_17	CALL_7
0xcca	      0xe800000000	                          call 0x4000d0f	       365	push.c	FUNCTION_17	CALL_7
0xccf	    0x488b15000000	            mov rdx, qword [0x04000d16] 	       366	push.c	FUNCTION_17	CALL_8
0xcd6	    0x8b3500000000	            mov esi, dword [0x04000d1c] 	       366	push.c	FUNCTION_17	CALL_8
0xcdc	        0x488d7de0	                   lea rdi, [rbp - 0x20]	       366	push.c	FUNCTION_17	CALL_8
0xce0	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       366	push.c	FUNCTION_17	CALL_8
0xce3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       366	push.c	FUNCTION_17	CALL_8
0xce7	          0x4989f8	                             mov r8, rdi	       366	push.c	FUNCTION_17	CALL_8
0xcea	          0x4889c7	                            mov rdi, rax	       366	push.c	FUNCTION_17	CALL_8
0xced	      0xe800000000	                          call 0x4000d32	       366	push.c	FUNCTION_17	CALL_8
0xcf2	          0x8945e4	             mov dword [rbp - 0x1c], eax	       366	push.c	FUNCTION_17	CALL_8
0xcf5	        0x837de400	               cmp dword [rbp - 0x1c], 0	       368	push.c	FUNCTION_17	IF_5
0xcf9	            0x7465	                            je 0x4000da0	       368	push.c	FUNCTION_17	IF_5
0xcfb	      0xbf01000000	                              mov edi, 1	       369	push.c	FUNCTION_17	IF_5	CALL_10
0xd00	      0xe825f4ffff	                 call sym.push_get_color	       369	push.c	FUNCTION_17	IF_5	CALL_10
0xd05	          0x4889c2	                            mov rdx, rax	       369	push.c	FUNCTION_17	IF_5	CALL_10
0xd08	    0x488b05000000	            mov rax, qword [0x04000d4f] 	       369	push.c	FUNCTION_17	IF_5	CALL_10
0xd0f	          0x4889c6	                            mov rsi, rax	       369	push.c	FUNCTION_17	IF_5	CALL_10
0xd12	          0x4889d7	                            mov rdi, rdx	       369	push.c	FUNCTION_17	IF_5	CALL_10
0xd15	      0xe800000000	                          call 0x4000d5a	       369	push.c	FUNCTION_17	IF_5	CALL_10
0xd1a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       370	push.c	FUNCTION_17	IF_5	CALL_12
0xd1e	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       370	push.c	FUNCTION_17	IF_5	CALL_12
0xd22	      0xbf00000000	                              mov edi, 0	       370	push.c	FUNCTION_17	IF_5	CALL_12
0xd27	      0xe887f3ffff	                               call sym.	       370	push.c	FUNCTION_17	IF_5	CALL_12
0xd2c	          0x4889de	                            mov rsi, rbx	       370	push.c	FUNCTION_17	IF_5	CALL_12
0xd2f	          0x4889c7	                            mov rdi, rax	       370	push.c	FUNCTION_17	IF_5	CALL_12
0xd32	      0xb800000000	                              mov eax, 0	       370	push.c	FUNCTION_17	IF_5	CALL_12
0xd37	      0xe800000000	                          call 0x4000d7c	       370	push.c	FUNCTION_17	IF_5	CALL_12
0xd3c	      0xe8bff2ffff	                    call sym.const_error	       370	push.c	FUNCTION_17	IF_5	CALL_12
0xd41	      0xbf00000000	                              mov edi, 0	       371	push.c	FUNCTION_17	IF_5	CALL_14
0xd46	      0xe8dff3ffff	                 call sym.push_get_color	       371	push.c	FUNCTION_17	IF_5	CALL_14
0xd4b	          0x4889c2	                            mov rdx, rax	       371	push.c	FUNCTION_17	IF_5	CALL_14
0xd4e	    0x488b05000000	            mov rax, qword [0x04000d95] 	       371	push.c	FUNCTION_17	IF_5	CALL_14
0xd55	          0x4889c6	                            mov rsi, rax	       371	push.c	FUNCTION_17	IF_5	CALL_14
0xd58	          0x4889d7	                            mov rdi, rdx	       371	push.c	FUNCTION_17	IF_5	CALL_14
0xd5b	      0xe800000000	                          call 0x4000da0	       371	push.c	FUNCTION_17	IF_5	CALL_14
0xd60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       374	push.c	FUNCTION_17	CALL_15
0xd64	          0x4889c7	                            mov rdi, rax	       374	push.c	FUNCTION_17	CALL_15
0xd67	      0xe800000000	                          call 0x4000dac	       374	push.c	FUNCTION_17	CALL_15
0xd6c	           0x945e4	              or dword [rbp - 0x1c], eax	       374	push.c	FUNCTION_17	CALL_15
0xd6f	        0x837de400	               cmp dword [rbp - 0x1c], 0	       375	push.c	FUNCTION_17	IF_6
0xd73	            0x7507	                           jne 0x4000dbc	       375	push.c	FUNCTION_17	IF_6
0xd75	      0xb800000000	                              mov eax, 0	       376	push.c	FUNCTION_17	IF_6
0xd7a	            0xeb58	                           jmp 0x4000e14	       376	push.c	FUNCTION_17	IF_6
0xd7c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       378	push.c	FUNCTION_17	IF_7
0xd7f	          0x83e001	                              and eax, 1	       378	push.c	FUNCTION_17	IF_7
0xd82	            0x85c0	                           test eax, eax	       378	push.c	FUNCTION_17	IF_7
0xd84	            0x7407	                            je 0x4000dcd	       378	push.c	FUNCTION_17	IF_7
0xd86	      0xe837fdffff	        call sym.advise_pull_before_push	       379	push.c	FUNCTION_17	IF_7	CALL_16
0xd8b	            0xeb42	                           jmp 0x4000e0f	       379	push.c	FUNCTION_17	IF_7	CALL_16
0xd8d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       380	push.c	FUNCTION_17	ELSE_1	IF_8
0xd90	          0x83e002	                              and eax, 2	       380	push.c	FUNCTION_17	ELSE_1	IF_8
0xd93	            0x85c0	                           test eax, eax	       380	push.c	FUNCTION_17	ELSE_1	IF_8
0xd95	            0x7407	                            je 0x4000dde	       380	push.c	FUNCTION_17	ELSE_1	IF_8
0xd97	      0xe85afdffff	      call sym.advise_checkout_pull_push	       381	push.c	FUNCTION_17	ELSE_1	IF_8	CALL_17
0xd9c	            0xeb31	                           jmp 0x4000e0f	       381	push.c	FUNCTION_17	ELSE_1	IF_8	CALL_17
0xd9e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       382	push.c	FUNCTION_17	ELSE_2	IF_9
0xda1	          0x83e004	                              and eax, 4	       382	push.c	FUNCTION_17	ELSE_2	IF_9
0xda4	            0x85c0	                           test eax, eax	       382	push.c	FUNCTION_17	ELSE_2	IF_9
0xda6	            0x7407	                            je 0x4000def	       382	push.c	FUNCTION_17	ELSE_2	IF_9
0xda8	      0xe87dfdffff	      call sym.advise_ref_already_exists	       383	push.c	FUNCTION_17	ELSE_2	IF_9	CALL_18
0xdad	            0xeb20	                           jmp 0x4000e0f	       383	push.c	FUNCTION_17	ELSE_2	IF_9	CALL_18
0xdaf	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       384	push.c	FUNCTION_17	ELSE_3	IF_10
0xdb2	          0x83e008	                              and eax, 8	       384	push.c	FUNCTION_17	ELSE_3	IF_10
0xdb5	            0x85c0	                           test eax, eax	       384	push.c	FUNCTION_17	ELSE_3	IF_10
0xdb7	            0x7407	                            je 0x4000e00	       384	push.c	FUNCTION_17	ELSE_3	IF_10
0xdb9	      0xe8a0fdffff	         call sym.advise_ref_fetch_first	       385	push.c	FUNCTION_17	ELSE_3	IF_10	CALL_19
0xdbe	            0xeb0f	                           jmp 0x4000e0f	       385	push.c	FUNCTION_17	ELSE_3	IF_10	CALL_19
0xdc0	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       386	push.c	FUNCTION_17	ELSE_4	IF_11
0xdc3	          0x83e010	                           and eax, 0x10	       386	push.c	FUNCTION_17	ELSE_4	IF_11
0xdc6	            0x85c0	                           test eax, eax	       386	push.c	FUNCTION_17	ELSE_4	IF_11
0xdc8	            0x7405	                            je 0x4000e0f	       386	push.c	FUNCTION_17	ELSE_4	IF_11
0xdca	      0xe8c3fdffff	         call sym.advise_ref_needs_force	       387	push.c	FUNCTION_17	ELSE_4	IF_11	CALL_20
0xdcf	      0xb801000000	                              mov eax, 1	       390	push.c	FUNCTION_17
0xdd4	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       391	push.c	FUNCTION_17
0xdd8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       391	push.c	FUNCTION_17
0xde1	            0x7405	                            je 0x4000e28	       391	push.c	FUNCTION_17
0xde3	      0xe800000000	                          call 0x4000e28	       391	push.c	FUNCTION_17
0xde8	        0x4883c428	                           add rsp, 0x28	       391	push.c	FUNCTION_17
0xdec	              0x5b	                                 pop rbx	       391	push.c	FUNCTION_17
0xded	              0x5d	                                 pop rbp	       391	push.c	FUNCTION_17
0xdee	              0xc3	                                     ret	       391	push.c	FUNCTION_17
setup_push_upstream	IF,6:WHILE,0:functions,0:DO,0:CALL,12:FOR,0:SWITCH,0:ELSE,0	120
0x753	              0x55	                                push rbp	       200	push.c	FUNCTION_8
0x754	          0x4889e5	                            mov rbp, rsp	       200	push.c	FUNCTION_8
0x757	            0x4155	                                push r13	       200	push.c	FUNCTION_8
0x759	            0x4154	                                push r12	       200	push.c	FUNCTION_8
0x75b	              0x53	                                push rbx	       200	push.c	FUNCTION_8
0x75c	        0x4883ec48	                           sub rsp, 0x48	       200	push.c	FUNCTION_8
0x760	        0x48897db8	             mov qword [rbp - 0x48], rdi	       200	push.c	FUNCTION_8
0x764	        0x488975b0	             mov qword [rbp - 0x50], rsi	       200	push.c	FUNCTION_8
0x768	          0x8955ac	             mov dword [rbp - 0x54], edx	       200	push.c	FUNCTION_8
0x76b	          0x894da8	             mov dword [rbp - 0x58], ecx	       200	push.c	FUNCTION_8
0x76e	    0x64488b042528	                mov rax, qword fs:[0x28]	       200	push.c	FUNCTION_8
0x777	        0x488945d8	             mov qword [rbp - 0x28], rax	       200	push.c	FUNCTION_8
0x77b	            0x31c0	                            xor eax, eax	       200	push.c	FUNCTION_8
0x77d	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       201	push.c	FUNCTION_8
0x785	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       201	push.c	FUNCTION_8
0x78d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       201	push.c	FUNCTION_8
0x795	      0x48837db000	               cmp qword [rbp - 0x50], 0	       203	push.c	FUNCTION_8	IF_1
0x79a	            0x7522	                           jne 0x40007fe	       203	push.c	FUNCTION_8	IF_1
0x79c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       204	push.c	FUNCTION_8	CALL_2
0x7a0	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       204	push.c	FUNCTION_8	CALL_2
0x7a4	      0xbf00000000	                              mov edi, 0	       204	push.c	FUNCTION_8	CALL_2
0x7a9	      0xe805f9ffff	                               call sym.	       204	push.c	FUNCTION_8	CALL_2
0x7ae	          0x4889de	                            mov rsi, rbx	       204	push.c	FUNCTION_8	CALL_2
0x7b1	          0x4889c7	                            mov rdi, rax	       204	push.c	FUNCTION_8	CALL_2
0x7b4	      0xb800000000	                              mov eax, 0	       204	push.c	FUNCTION_8	CALL_2
0x7b9	      0xe800000000	                          call 0x40007fe	       204	push.c	FUNCTION_8	CALL_2
0x7be	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       205	push.c	FUNCTION_8	IF_2
0x7c2	          0x8b4030	            mov eax, dword [rax + 0x30] 	       205	push.c	FUNCTION_8	IF_2
0x7c5	            0x85c0	                           test eax, eax	       205	push.c	FUNCTION_8	IF_2
0x7c7	            0x741a	                            je 0x4000823	       205	push.c	FUNCTION_8	IF_2
0x7c9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       205	push.c	FUNCTION_8	IF_2
0x7cd	        0x488b4028	            mov rax, qword [rax + 0x28] 	       205	push.c	FUNCTION_8	IF_2
0x7d1	          0x4885c0	                           test rax, rax	       205	push.c	FUNCTION_8	IF_2
0x7d4	            0x740d	                            je 0x4000823	       205	push.c	FUNCTION_8	IF_2
0x7d6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       205	push.c	FUNCTION_8	IF_2
0x7da	        0x488b4010	            mov rax, qword [rax + 0x10] 	       205	push.c	FUNCTION_8	IF_2
0x7de	          0x4885c0	                           test rax, rax	       205	push.c	FUNCTION_8	IF_2
0x7e1	            0x7536	                           jne 0x4000859	       205	push.c	FUNCTION_8	IF_2
0x7e3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x7e7	          0x4c8b28	                    mov r13, qword [rax]	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x7ea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x7ee	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x7f2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x7f6	          0x488b18	                    mov rbx, qword [rax]	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x7f9	      0xbf00000000	                              mov edi, 0	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x7fe	      0xe8b0f8ffff	                               call sym.	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x803	          0x4c89e9	                            mov rcx, r13	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x806	          0x4c89e2	                            mov rdx, r12	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x809	          0x4889de	                            mov rsi, rbx	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x80c	          0x4889c7	                            mov rdi, rax	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x80f	      0xb800000000	                              mov eax, 0	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x814	      0xe800000000	                          call 0x4000859	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x819	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       213	push.c	FUNCTION_8	IF_3
0x81d	          0x8b4030	            mov eax, dword [rax + 0x30] 	       213	push.c	FUNCTION_8	IF_3
0x820	          0x83f801	                              cmp eax, 1	       213	push.c	FUNCTION_8	IF_3
0x823	            0x7421	                            je 0x4000886	       213	push.c	FUNCTION_8	IF_3
0x825	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x829	          0x488b18	                    mov rbx, qword [rax]	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x82c	      0xbf00000000	                              mov edi, 0	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x831	      0xe87df8ffff	                               call sym.	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x836	          0x4889de	                            mov rsi, rbx	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x839	          0x4889c7	                            mov rdi, rax	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x83c	      0xb800000000	                              mov eax, 0	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x841	      0xe800000000	                          call 0x4000886	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x846	        0x837dac00	               cmp dword [rbp - 0x54], 0	       216	push.c	FUNCTION_8	IF_4
0x84a	            0x742c	                            je 0x40008b8	       216	push.c	FUNCTION_8	IF_4
0x84c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x850	          0x4c8b20	                    mov r12, qword [rax]	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x853	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x857	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x85b	      0xbf00000000	                              mov edi, 0	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x860	      0xe84ef8ffff	                               call sym.	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x865	          0x4c89e2	                            mov rdx, r12	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x868	          0x4889de	                            mov rsi, rbx	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x86b	          0x4889c7	                            mov rdi, rax	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x86e	      0xb800000000	                              mov eax, 0	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x873	      0xe800000000	                          call 0x40008b8	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x878	        0x837da800	               cmp dword [rbp - 0x58], 0	       222	push.c	FUNCTION_8	IF_5
0x87c	            0x7439	                            je 0x40008f7	       222	push.c	FUNCTION_8	IF_5
0x87e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x882	        0x488b4028	            mov rax, qword [rax + 0x28] 	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x886	          0x488b00	                    mov rax, qword [rax]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x889	        0x488b5008	                mov rdx, qword [rax + 8]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x88d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x891	        0x488b4008	                mov rax, qword [rax + 8]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x895	          0x4889d6	                            mov rsi, rdx	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x898	          0x4889c7	                            mov rdi, rax	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x89b	      0xe800000000	                          call 0x40008e0	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x8a0	            0x85c0	                           test eax, eax	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x8a2	            0x7413	                            je 0x40008f7	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x8a4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       225	push.c	FUNCTION_8	IF_5	CALL_10
0x8a8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       225	push.c	FUNCTION_8	IF_5	CALL_10
0x8ac	          0x4889d6	                            mov rsi, rdx	       225	push.c	FUNCTION_8	IF_5	CALL_10
0x8af	          0x4889c7	                            mov rdi, rax	       225	push.c	FUNCTION_8	IF_5	CALL_10
0x8b2	      0xe8e8fdffff	                call sym.die_push_simple	       225	push.c	FUNCTION_8	IF_5	CALL_10
0x8b7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       228	push.c	FUNCTION_8	CALL_11
0x8bb	        0x488b4028	            mov rax, qword [rax + 0x28] 	       228	push.c	FUNCTION_8	CALL_11
0x8bf	          0x488b00	                    mov rax, qword [rax]	       228	push.c	FUNCTION_8	CALL_11
0x8c2	        0x488b4808	                mov rcx, qword [rax + 8]	       228	push.c	FUNCTION_8	CALL_11
0x8c6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       228	push.c	FUNCTION_8	CALL_11
0x8ca	        0x488b5008	                mov rdx, qword [rax + 8]	       228	push.c	FUNCTION_8	CALL_11
0x8ce	        0x488d45c0	                   lea rax, [rbp - 0x40]	       228	push.c	FUNCTION_8	CALL_11
0x8d2	      0xbe00000000	                              mov esi, 0	       228	push.c	FUNCTION_8	CALL_11
0x8d7	          0x4889c7	                            mov rdi, rax	       228	push.c	FUNCTION_8	CALL_11
0x8da	      0xb800000000	                              mov eax, 0	       228	push.c	FUNCTION_8	CALL_11
0x8df	      0xe800000000	                          call 0x4000924	       228	push.c	FUNCTION_8	CALL_11
0x8e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       229	push.c	FUNCTION_8	CALL_12
0x8e8	          0x4889c7	                            mov rdi, rax	       229	push.c	FUNCTION_8	CALL_12
0x8eb	      0xe882f8ffff	                    call sym.add_refspec	       229	push.c	FUNCTION_8	CALL_12
0x8f0	              0x90	                                     nop	       230	push.c	FUNCTION_8
0x8f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       230	push.c	FUNCTION_8
0x8f5	    0x644833042528	                xor rax, qword fs:[0x28]	       230	push.c	FUNCTION_8
0x8fe	            0x7405	                            je 0x4000945	       230	push.c	FUNCTION_8
0x900	      0xe800000000	                          call 0x4000945	       230	push.c	FUNCTION_8
0x905	        0x4883c448	                           add rsp, 0x48	       230	push.c	FUNCTION_8
0x909	              0x5b	                                 pop rbx	       230	push.c	FUNCTION_8
0x90a	            0x415c	                                 pop r12	       230	push.c	FUNCTION_8
0x90c	            0x415d	                                 pop r13	       230	push.c	FUNCTION_8
0x90e	              0x5d	                                 pop rbp	       230	push.c	FUNCTION_8
0x90f	              0xc3	                                     ret	       230	push.c	FUNCTION_8
option_parse_recurse_submodules	IF,2:WHILE,0:functions,0:DO,0:CALL,2:FOR,0:SWITCH,0:ELSE,2	35
0x10ea	              0x55	                                push rbp	       468	push.c	FUNCTION_19
0x10eb	          0x4889e5	                            mov rbp, rsp	       468	push.c	FUNCTION_19
0x10ee	        0x4883ec30	                           sub rsp, 0x30	       468	push.c	FUNCTION_19
0x10f2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       468	push.c	FUNCTION_19
0x10f6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       468	push.c	FUNCTION_19
0x10fa	          0x8955dc	             mov dword [rbp - 0x24], edx	       468	push.c	FUNCTION_19
0x10fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       469	push.c	FUNCTION_19
0x1101	        0x488b4010	            mov rax, qword [rax + 0x10] 	       469	push.c	FUNCTION_19
0x1105	        0x488945f8	                mov qword [rbp - 8], rax	       469	push.c	FUNCTION_19
0x1109	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       471	push.c	FUNCTION_19	IF_1
0x110d	            0x740c	                            je 0x400115b	       471	push.c	FUNCTION_19	IF_1
0x110f	        0x488b45f8	                mov rax, qword [rbp - 8]	       472	push.c	FUNCTION_19	IF_1
0x1113	    0xc70000000000	                      mov dword [rax], 0	       472	push.c	FUNCTION_19	IF_1
0x1119	            0xeb42	                           jmp 0x400119d	       472	push.c	FUNCTION_19	IF_1
0x111b	      0x48837de000	               cmp qword [rbp - 0x20], 0	       473	push.c	FUNCTION_19	ELSE_1	IF_2
0x1120	            0x7421	                            je 0x4001183	       473	push.c	FUNCTION_19	ELSE_1	IF_2
0x1122	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x1126	        0x488b4008	                mov rax, qword [rax + 8]	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x112a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x112e	          0x4889d6	                            mov rsi, rdx	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x1131	          0x4889c7	                            mov rdi, rax	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x1134	      0xe800000000	                          call 0x4001179	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x1139	            0x89c2	                            mov edx, eax	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x113b	        0x488b45f8	                mov rax, qword [rbp - 8]	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x113f	            0x8910	                    mov dword [rax], edx	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x1141	            0xeb1a	                           jmp 0x400119d	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x1143	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       476	push.c	FUNCTION_19	CALL_2
0x1147	        0x488b4008	                mov rax, qword [rax + 8]	       476	push.c	FUNCTION_19	CALL_2
0x114b	          0x4889c6	                            mov rsi, rax	       476	push.c	FUNCTION_19	CALL_2
0x114e	      0xbf00000000	                              mov edi, 0	       476	push.c	FUNCTION_19	CALL_2
0x1153	      0xb800000000	                              mov eax, 0	       476	push.c	FUNCTION_19	CALL_2
0x1158	      0xe800000000	                          call 0x400119d	       476	push.c	FUNCTION_19	CALL_2
0x115d	      0xb800000000	                              mov eax, 0	       478	push.c	FUNCTION_19
0x1162	              0xc9	                                   leave	       479	push.c	FUNCTION_19
0x1163	              0xc3	                                     ret	       479	push.c	FUNCTION_19
_	IF,1:WHILE,0:functions,0:DO,0:CALL,2:FOR,0:SWITCH,0:ELSE,0	15
0xb3	              0x55	                                push rbp	        51	gettext.h	FUNCTION_52
0xb4	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_52
0xb7	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_52
0xbb	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_52
0xbf	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_52	IF_1
0xc3	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_52	IF_1
0xc6	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_52	IF_1
0xc8	            0x7507	                           jne 0x4000111	        52	gettext.h	FUNCTION_52	IF_1
0xca	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_52	IF_1
0xcf	            0xeb0c	                           jmp 0x400011d	        53	gettext.h	FUNCTION_52	IF_1
0xd1	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_52	CALL_2
0xd5	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_52	CALL_2
0xd8	      0xe800000000	                          call 0x400011d	        54	gettext.h	FUNCTION_52	CALL_2
0xdd	              0xc9	                                   leave	        55	gettext.h	FUNCTION_52
0xde	              0xc3	                                     ret	        55	gettext.h	FUNCTION_52
advise_checkout_pull_push	IF,1:WHILE,0:functions,0:DO,0:CALL,2:FOR,0:SWITCH,0:ELSE,0	17
0xaf6	              0x55	                                push rbp	       317	push.c	FUNCTION_13
0xaf7	          0x4889e5	                            mov rbp, rsp	       317	push.c	FUNCTION_13
0xafa	    0x8b0500000000	            mov eax, dword [0x04000b40] 	       318	push.c	FUNCTION_13	IF_1
0xb00	            0x85c0	                           test eax, eax	       318	push.c	FUNCTION_13	IF_1
0xb02	            0x7423	                            je 0x4000b67	       318	push.c	FUNCTION_13	IF_1
0xb04	    0x8b0500000000	            mov eax, dword [0x04000b4a] 	       318	push.c	FUNCTION_13	IF_1
0xb0a	            0x85c0	                           test eax, eax	       318	push.c	FUNCTION_13	IF_1
0xb0c	            0x7419	                            je 0x4000b67	       318	push.c	FUNCTION_13	IF_1
0xb0e	      0xbf00000000	                              mov edi, 0	       320	push.c	FUNCTION_13	CALL_2
0xb13	      0xe89bf5ffff	                               call sym.	       320	push.c	FUNCTION_13	CALL_2
0xb18	          0x4889c7	                            mov rdi, rax	       320	push.c	FUNCTION_13	CALL_2
0xb1b	      0xb800000000	                              mov eax, 0	       320	push.c	FUNCTION_13	CALL_2
0xb20	      0xe800000000	                          call 0x4000b65	       320	push.c	FUNCTION_13	CALL_2
0xb25	            0xeb01	                           jmp 0x4000b68	       320	push.c	FUNCTION_13	CALL_2
0xb27	              0x90	                                     nop	       319	push.c	FUNCTION_13	IF_1
0xb28	              0x5d	                                 pop rbp	       321	push.c	FUNCTION_13
0xb29	              0xc3	                                     ret	       321	push.c	FUNCTION_13
skip_prefix	IF,1:WHILE,0:functions,0:DO,1:CALL,0:FOR,0:SWITCH,0:ELSE,0	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_29
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_29
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_29
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_29
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_29
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_29	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_29	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_29	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_29	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_29
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_29
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_29
parse_push_color_slot	IF,2:WHILE,0:functions,0:DO,0:CALL,2:FOR,0:SWITCH,0:ELSE,0	23
0xdf	              0x55	                                push rbp	        34	push.c	FUNCTION_1
0xe0	          0x4889e5	                            mov rbp, rsp	        34	push.c	FUNCTION_1
0xe3	        0x4883ec10	                           sub rsp, 0x10	        34	push.c	FUNCTION_1
0xe7	        0x48897df8	                mov qword [rbp - 8], rdi	        34	push.c	FUNCTION_1
0xeb	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	push.c	FUNCTION_1	IF_1	CALL_1
0xef	      0xbe00000000	                              mov esi, 0	        35	push.c	FUNCTION_1	IF_1	CALL_1
0xf4	          0x4889c7	                            mov rdi, rax	        35	push.c	FUNCTION_1	IF_1	CALL_1
0xf7	      0xe800000000	                          call 0x400013c	        35	push.c	FUNCTION_1	IF_1	CALL_1
0xfc	            0x85c0	                           test eax, eax	        35	push.c	FUNCTION_1	IF_1	CALL_1
0xfe	            0x7507	                           jne 0x4000147	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x100	      0xb800000000	                              mov eax, 0	        36	push.c	FUNCTION_1	IF_1
0x105	            0xeb21	                           jmp 0x4000168	        36	push.c	FUNCTION_1	IF_1
0x107	        0x488b45f8	                mov rax, qword [rbp - 8]	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x10b	      0xbe00000000	                              mov esi, 0	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x110	          0x4889c7	                            mov rdi, rax	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x113	      0xe800000000	                          call 0x4000158	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x118	            0x85c0	                           test eax, eax	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x11a	            0x7507	                           jne 0x4000163	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x11c	      0xb801000000	                              mov eax, 1	        38	push.c	FUNCTION_1	IF_2
0x121	            0xeb05	                           jmp 0x4000168	        38	push.c	FUNCTION_1	IF_2
0x123	      0xb8ffffffff	                     mov eax, 0xffffffff	        39	push.c	FUNCTION_1
0x128	              0xc9	                                   leave	        40	push.c	FUNCTION_1
0x129	              0xc3	                                     ret	        40	push.c	FUNCTION_1
do_push	IF,17:WHILE,0:functions,0:DO,0:CALL,23:FOR,1:SWITCH,0:ELSE,2	203
0xdef	              0x55	                                push rbp	       395	push.c	FUNCTION_18
0xdf0	          0x4889e5	                            mov rbp, rsp	       395	push.c	FUNCTION_18
0xdf3	        0x4883ec60	                           sub rsp, 0x60	       395	push.c	FUNCTION_18
0xdf7	        0x48897db8	             mov qword [rbp - 0x48], rdi	       395	push.c	FUNCTION_18
0xdfb	          0x8975b4	             mov dword [rbp - 0x4c], esi	       395	push.c	FUNCTION_18
0xdfe	        0x488955a8	             mov qword [rbp - 0x58], rdx	       395	push.c	FUNCTION_18
0xe02	    0x64488b042528	                mov rax, qword fs:[0x28]	       395	push.c	FUNCTION_18
0xe0b	        0x488945f8	                mov qword [rbp - 8], rax	       395	push.c	FUNCTION_18
0xe0f	            0x31c0	                            xor eax, eax	       395	push.c	FUNCTION_18
0xe11	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       397	push.c	FUNCTION_18	CALL_1
0xe15	          0x4889c7	                            mov rdi, rax	       397	push.c	FUNCTION_18	CALL_1
0xe18	      0xe800000000	                          call 0x4000e5d	       397	push.c	FUNCTION_18	CALL_1
0xe1d	        0x488945e0	             mov qword [rbp - 0x20], rax	       397	push.c	FUNCTION_18	CALL_1
0xe21	      0x48837de000	               cmp qword [rbp - 0x20], 0	       401	push.c	FUNCTION_18	IF_1
0xe26	            0x753f	                           jne 0x4000ea7	       401	push.c	FUNCTION_18	IF_1
0xe28	      0x48837db800	               cmp qword [rbp - 0x48], 0	       402	push.c	FUNCTION_18	IF_1	IF_2
0xe2d	            0x7421	                            je 0x4000e90	       402	push.c	FUNCTION_18	IF_1	IF_2
0xe2f	      0xbf00000000	                              mov edi, 0	       403	push.c	FUNCTION_18	IF_1	CALL_3
0xe34	      0xe87af2ffff	                               call sym.	       403	push.c	FUNCTION_18	IF_1	CALL_3
0xe39	          0x4889c2	                            mov rdx, rax	       403	push.c	FUNCTION_18	IF_1	CALL_3
0xe3c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       403	push.c	FUNCTION_18	IF_1	CALL_3
0xe40	          0x4889c6	                            mov rsi, rax	       403	push.c	FUNCTION_18	IF_1	CALL_3
0xe43	          0x4889d7	                            mov rdi, rdx	       403	push.c	FUNCTION_18	IF_1	CALL_3
0xe46	      0xb800000000	                              mov eax, 0	       403	push.c	FUNCTION_18	IF_1	CALL_3
0xe4b	      0xe800000000	                          call 0x4000e90	       403	push.c	FUNCTION_18	IF_1	CALL_3
0xe50	      0xbf00000000	                              mov edi, 0	       404	push.c	FUNCTION_18	IF_1	CALL_5
0xe55	      0xe859f2ffff	                               call sym.	       404	push.c	FUNCTION_18	IF_1	CALL_5
0xe5a	          0x4889c7	                            mov rdi, rax	       404	push.c	FUNCTION_18	IF_1	CALL_5
0xe5d	      0xb800000000	                              mov eax, 0	       404	push.c	FUNCTION_18	IF_1	CALL_5
0xe62	      0xe800000000	                          call 0x4000ea7	       404	push.c	FUNCTION_18	IF_1	CALL_5
0xe67	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       414	push.c	FUNCTION_18	IF_3
0xe6b	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       414	push.c	FUNCTION_18	IF_3
0xe71	            0x85c0	                           test eax, eax	       414	push.c	FUNCTION_18	IF_3
0xe73	            0x7404	                            je 0x4000eb9	       414	push.c	FUNCTION_18	IF_3
0xe75	        0x834db40a	              or dword [rbp - 0x4c], 0xa	       415	push.c	FUNCTION_18	IF_3
0xe79	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       417	push.c	FUNCTION_18	IF_4
0xe7d	          0x8b4008	                mov eax, dword [rax + 8]	       417	push.c	FUNCTION_18	IF_4
0xe80	            0x85c0	                           test eax, eax	       417	push.c	FUNCTION_18	IF_4
0xe82	            0x7407	                            je 0x4000ecb	       417	push.c	FUNCTION_18	IF_4
0xe84	    0x814db4004000	           or dword [rbp - 0x4c], 0x4000	       418	push.c	FUNCTION_18	IF_4
0xe8b	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       420	push.c	FUNCTION_18	IF_5
0xe8e	          0x83e001	                              and eax, 1	       420	push.c	FUNCTION_18	IF_5
0xe91	            0x85c0	                           test eax, eax	       420	push.c	FUNCTION_18	IF_5
0xe93	            0x7469	                            je 0x4000f3e	       420	push.c	FUNCTION_18	IF_5
0xe95	    0x488b05000000	            mov rax, qword [0x04000edc] 	       420	push.c	FUNCTION_18	IF_5
0xe9c	          0x4885c0	                           test rax, rax	       420	push.c	FUNCTION_18	IF_5
0xe9f	            0x745d	                            je 0x4000f3e	       420	push.c	FUNCTION_18	IF_5
0xea1	    0x488b05000000	            mov rax, qword [0x04000ee8] 	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0xea8	          0x488b00	                    mov rax, qword [rax]	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0xeab	      0xbe00000000	                              mov esi, 0	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0xeb0	          0x4889c7	                            mov rdi, rax	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0xeb3	      0xe800000000	                          call 0x4000ef8	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0xeb8	            0x85c0	                           test eax, eax	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0xeba	            0x7521	                           jne 0x4000f1d	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0xebc	      0xbf00000000	                              mov edi, 0	       422	push.c	FUNCTION_18	IF_5	CALL_8
0xec1	      0xe8edf1ffff	                               call sym.	       422	push.c	FUNCTION_18	IF_5	CALL_8
0xec6	          0x4889c7	                            mov rdi, rax	       422	push.c	FUNCTION_18	IF_5	CALL_8
0xec9	      0xb800000000	                              mov eax, 0	       422	push.c	FUNCTION_18	IF_5	CALL_8
0xece	      0xe800000000	                          call 0x4000f13	       422	push.c	FUNCTION_18	IF_5	CALL_8
0xed3	      0xe828f1ffff	                    call sym.const_error	       422	push.c	FUNCTION_18	IF_5	CALL_8
0xed8	      0xe9f7010000	                           jmp 0x4001114	       422	push.c	FUNCTION_18	IF_5	CALL_8
0xedd	      0xbf00000000	                              mov edi, 0	       423	push.c	FUNCTION_18	IF_5	CALL_10
0xee2	      0xe8ccf1ffff	                               call sym.	       423	push.c	FUNCTION_18	IF_5	CALL_10
0xee7	          0x4889c7	                            mov rdi, rax	       423	push.c	FUNCTION_18	IF_5	CALL_10
0xeea	      0xb800000000	                              mov eax, 0	       423	push.c	FUNCTION_18	IF_5	CALL_10
0xeef	      0xe800000000	                          call 0x4000f34	       423	push.c	FUNCTION_18	IF_5	CALL_10
0xef4	      0xe807f1ffff	                    call sym.const_error	       423	push.c	FUNCTION_18	IF_5	CALL_10
0xef9	      0xe9d6010000	                           jmp 0x4001114	       423	push.c	FUNCTION_18	IF_5	CALL_10
0xefe	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       426	push.c	FUNCTION_18	IF_7
0xf01	          0x83e008	                              and eax, 8	       426	push.c	FUNCTION_18	IF_7
0xf04	            0x85c0	                           test eax, eax	       426	push.c	FUNCTION_18	IF_7
0xf06	            0x7469	                            je 0x4000fb1	       426	push.c	FUNCTION_18	IF_7
0xf08	    0x488b05000000	            mov rax, qword [0x04000f4f] 	       426	push.c	FUNCTION_18	IF_7
0xf0f	          0x4885c0	                           test rax, rax	       426	push.c	FUNCTION_18	IF_7
0xf12	            0x745d	                            je 0x4000fb1	       426	push.c	FUNCTION_18	IF_7
0xf14	    0x488b05000000	            mov rax, qword [0x04000f5b] 	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_11
0xf1b	          0x488b00	                    mov rax, qword [rax]	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_11
0xf1e	      0xbe00000000	                              mov esi, 0	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_11
0xf23	          0x4889c7	                            mov rdi, rax	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_11
0xf26	      0xe800000000	                          call 0x4000f6b	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_11
0xf2b	            0x85c0	                           test eax, eax	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_11
0xf2d	            0x7521	                           jne 0x4000f90	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_11
0xf2f	      0xbf00000000	                              mov edi, 0	       428	push.c	FUNCTION_18	IF_7	CALL_13
0xf34	      0xe87af1ffff	                               call sym.	       428	push.c	FUNCTION_18	IF_7	CALL_13
0xf39	          0x4889c7	                            mov rdi, rax	       428	push.c	FUNCTION_18	IF_7	CALL_13
0xf3c	      0xb800000000	                              mov eax, 0	       428	push.c	FUNCTION_18	IF_7	CALL_13
0xf41	      0xe800000000	                          call 0x4000f86	       428	push.c	FUNCTION_18	IF_7	CALL_13
0xf46	      0xe8b5f0ffff	                    call sym.const_error	       428	push.c	FUNCTION_18	IF_7	CALL_13
0xf4b	      0xe984010000	                           jmp 0x4001114	       428	push.c	FUNCTION_18	IF_7	CALL_13
0xf50	      0xbf00000000	                              mov edi, 0	       429	push.c	FUNCTION_18	IF_7	CALL_15
0xf55	      0xe859f1ffff	                               call sym.	       429	push.c	FUNCTION_18	IF_7	CALL_15
0xf5a	          0x4889c7	                            mov rdi, rax	       429	push.c	FUNCTION_18	IF_7	CALL_15
0xf5d	      0xb800000000	                              mov eax, 0	       429	push.c	FUNCTION_18	IF_7	CALL_15
0xf62	      0xe800000000	                          call 0x4000fa7	       429	push.c	FUNCTION_18	IF_7	CALL_15
0xf67	      0xe894f0ffff	                    call sym.const_error	       429	push.c	FUNCTION_18	IF_7	CALL_15
0xf6c	      0xe963010000	                           jmp 0x4001114	       429	push.c	FUNCTION_18	IF_7	CALL_15
0xf71	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       432	push.c	FUNCTION_18	IF_9
0xf74	          0x83e009	                              and eax, 9	       432	push.c	FUNCTION_18	IF_9
0xf77	          0x83f809	                              cmp eax, 9	       432	push.c	FUNCTION_18	IF_9
0xf7a	            0x7521	                           jne 0x4000fdd	       432	push.c	FUNCTION_18	IF_9
0xf7c	      0xbf00000000	                              mov edi, 0	       434	push.c	FUNCTION_18	IF_9	CALL_17
0xf81	      0xe82df1ffff	                               call sym.	       434	push.c	FUNCTION_18	IF_9	CALL_17
0xf86	          0x4889c7	                            mov rdi, rax	       434	push.c	FUNCTION_18	IF_9	CALL_17
0xf89	      0xb800000000	                              mov eax, 0	       434	push.c	FUNCTION_18	IF_9	CALL_17
0xf8e	      0xe800000000	                          call 0x4000fd3	       434	push.c	FUNCTION_18	IF_9	CALL_17
0xf93	      0xe868f0ffff	                    call sym.const_error	       434	push.c	FUNCTION_18	IF_9	CALL_17
0xf98	      0xe937010000	                           jmp 0x4001114	       434	push.c	FUNCTION_18	IF_9	CALL_17
0xf9d	    0x488b05000000	            mov rax, qword [0x04000fe4] 	       437	push.c	FUNCTION_18	IF_10
0xfa4	          0x4885c0	                           test rax, rax	       437	push.c	FUNCTION_18	IF_10
0xfa7	            0x7549	                           jne 0x4001032	       437	push.c	FUNCTION_18	IF_10
0xfa9	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       437	push.c	FUNCTION_18	IF_10
0xfac	          0x83e001	                              and eax, 1	       437	push.c	FUNCTION_18	IF_10
0xfaf	            0x85c0	                           test eax, eax	       437	push.c	FUNCTION_18	IF_10
0xfb1	            0x753f	                           jne 0x4001032	       437	push.c	FUNCTION_18	IF_10
0xfb3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       438	push.c	FUNCTION_18	IF_10	IF_11
0xfb7	          0x8b4058	            mov eax, dword [rax + 0x58] 	       438	push.c	FUNCTION_18	IF_10	IF_11
0xfba	            0x85c0	                           test eax, eax	       438	push.c	FUNCTION_18	IF_10	IF_11
0xfbc	            0x741e	                            je 0x400101c	       438	push.c	FUNCTION_18	IF_10	IF_11
0xfbe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       439	push.c	FUNCTION_18	IF_10	IF_11
0xfc2	        0x488b4048	            mov rax, qword [rax + 0x48] 	       439	push.c	FUNCTION_18	IF_10	IF_11
0xfc6	    0x488905000000	            mov qword [0x0400100d], rax 	       439	push.c	FUNCTION_18	IF_10	IF_11
0xfcd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       440	push.c	FUNCTION_18	IF_10	IF_11
0xfd1	          0x8b4058	            mov eax, dword [rax + 0x58] 	       440	push.c	FUNCTION_18	IF_10	IF_11
0xfd4	    0x890500000000	            mov dword [0x0400101a], eax 	       440	push.c	FUNCTION_18	IF_10	IF_11
0xfda	            0xeb16	                           jmp 0x4001032	       440	push.c	FUNCTION_18	IF_10	IF_11
0xfdc	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       441	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0xfdf	          0x83e008	                              and eax, 8	       441	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0xfe2	            0x85c0	                           test eax, eax	       441	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0xfe4	            0x750c	                           jne 0x4001032	       441	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0xfe6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       442	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0xfea	          0x4889c7	                            mov rdi, rax	       442	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0xfed	      0xe806faffff	    call sym.setup_default_push_refspecs	       442	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0xff2	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       444	push.c	FUNCTION_18
0xff9	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       445	push.c	FUNCTION_18	CALL_19
0xffd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       445	push.c	FUNCTION_18	CALL_19
0x1001	          0x4889d6	                            mov rsi, rdx	       445	push.c	FUNCTION_18	CALL_19
0x1004	          0x4889c7	                            mov rdi, rax	       445	push.c	FUNCTION_18	CALL_19
0x1007	      0xe84cf6ffff	             call sym.push_url_of_remote	       445	push.c	FUNCTION_18	CALL_19
0x100c	          0x8945d4	             mov dword [rbp - 0x2c], eax	       445	push.c	FUNCTION_18	CALL_19
0x100f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       446	push.c	FUNCTION_18	IF_13
0x1013	            0x746f	                            je 0x40010c4	       446	push.c	FUNCTION_18	IF_13
0x1015	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x101c	            0xeb5c	                           jmp 0x40010ba	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x101e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_20
0x1022	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_20
0x1025	          0x4863d2	                         movsxd rdx, edx	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_20
0x1028	        0x48c1e203	                              shl rdx, 3	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_20
0x102c	          0x4801d0	                            add rax, rdx	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_20
0x102f	          0x488b10	                    mov rdx, qword [rax]	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_20
0x1032	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x1036	          0x4889d6	                            mov rsi, rdx	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x1039	          0x4889c7	                            mov rdi, rax	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x103c	      0xe800000000	                          call 0x4001081	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x1041	        0x488945e8	             mov qword [rbp - 0x18], rax	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x1045	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       450	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x1048	      0x2500400000	                         and eax, 0x4000	       450	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x104d	            0x85c0	                           test eax, eax	       450	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x104f	            0x740c	                            je 0x400109d	       450	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x1051	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       451	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x1055	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       451	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x1059	        0x48895030	             mov qword [rax + 0x30], rdx	       451	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x105d	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_21
0x1060	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_21
0x1064	            0x89d6	                            mov esi, edx	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_21
0x1066	          0x4889c7	                            mov rdi, rax	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_21
0x1069	      0xe858fbffff	              call sym.push_with_options	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_21
0x106e	            0x85c0	                           test eax, eax	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_21
0x1070	            0x7404	                            je 0x40010b6	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_21
0x1072	        0x8345d001	               add dword [rbp - 0x30], 1	       453	push.c	FUNCTION_18	IF_13	FOR_1	IF_15
0x1076	        0x8345cc01	               add dword [rbp - 0x34], 1	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x107a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x107d	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x1080	            0x7c9c	                            jl 0x400105e	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x1082	            0xeb46	                           jmp 0x400110a	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x1084	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       456	push.c	FUNCTION_18	ELSE_2
0x1088	      0xbe00000000	                              mov esi, 0	       456	push.c	FUNCTION_18	ELSE_2
0x108d	          0x4889c7	                            mov rdi, rax	       456	push.c	FUNCTION_18	ELSE_2
0x1090	      0xe800000000	                          call 0x40010d5	       456	push.c	FUNCTION_18	ELSE_2
0x1095	        0x488945f0	             mov qword [rbp - 0x10], rax	       456	push.c	FUNCTION_18	ELSE_2
0x1099	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       458	push.c	FUNCTION_18	ELSE_2	IF_16
0x109c	      0x2500400000	                         and eax, 0x4000	       458	push.c	FUNCTION_18	ELSE_2	IF_16
0x10a1	            0x85c0	                           test eax, eax	       458	push.c	FUNCTION_18	ELSE_2	IF_16
0x10a3	            0x740c	                            je 0x40010f1	       458	push.c	FUNCTION_18	ELSE_2	IF_16
0x10a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       459	push.c	FUNCTION_18	ELSE_2	IF_16
0x10a9	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       459	push.c	FUNCTION_18	ELSE_2	IF_16
0x10ad	        0x48895030	             mov qword [rax + 0x30], rdx	       459	push.c	FUNCTION_18	ELSE_2	IF_16
0x10b1	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_23
0x10b4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_23
0x10b8	            0x89d6	                            mov esi, edx	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_23
0x10ba	          0x4889c7	                            mov rdi, rax	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_23
0x10bd	      0xe804fbffff	              call sym.push_with_options	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_23
0x10c2	            0x85c0	                           test eax, eax	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_23
0x10c4	            0x7404	                            je 0x400110a	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_23
0x10c6	        0x8345d001	               add dword [rbp - 0x30], 1	       461	push.c	FUNCTION_18	ELSE_2	IF_17
0x10ca	        0x837dd000	               cmp dword [rbp - 0x30], 0	       463	push.c	FUNCTION_18
0x10ce	           0xf95c0	                                setne al	       463	push.c	FUNCTION_18
0x10d1	           0xfb6c0	                           movzx eax, al	       463	push.c	FUNCTION_18
0x10d4	        0x488b4df8	                mov rcx, qword [rbp - 8]	       464	push.c	FUNCTION_18
0x10d8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       464	push.c	FUNCTION_18
0x10e1	            0x7405	                            je 0x4001128	       464	push.c	FUNCTION_18
0x10e3	      0xe800000000	                          call 0x4001128	       464	push.c	FUNCTION_18
0x10e8	              0xc9	                                   leave	       464	push.c	FUNCTION_18
0x10e9	              0xc3	                                     ret	       464	push.c	FUNCTION_18
advise_pull_before_push	IF,1:WHILE,0:functions,0:DO,0:CALL,2:FOR,0:SWITCH,0:ELSE,0	17
0xac2	              0x55	                                push rbp	       310	push.c	FUNCTION_12
0xac3	          0x4889e5	                            mov rbp, rsp	       310	push.c	FUNCTION_12
0xac6	    0x8b0500000000	            mov eax, dword [0x04000b0c] 	       311	push.c	FUNCTION_12	IF_1
0xacc	            0x85c0	                           test eax, eax	       311	push.c	FUNCTION_12	IF_1
0xace	            0x7423	                            je 0x4000b33	       311	push.c	FUNCTION_12	IF_1
0xad0	    0x8b0500000000	            mov eax, dword [0x04000b16] 	       311	push.c	FUNCTION_12	IF_1
0xad6	            0x85c0	                           test eax, eax	       311	push.c	FUNCTION_12	IF_1
0xad8	            0x7419	                            je 0x4000b33	       311	push.c	FUNCTION_12	IF_1
0xada	      0xbf00000000	                              mov edi, 0	       313	push.c	FUNCTION_12	CALL_2
0xadf	      0xe8cff5ffff	                               call sym.	       313	push.c	FUNCTION_12	CALL_2
0xae4	          0x4889c7	                            mov rdi, rax	       313	push.c	FUNCTION_12	CALL_2
0xae7	      0xb800000000	                              mov eax, 0	       313	push.c	FUNCTION_12	CALL_2
0xaec	      0xe800000000	                          call 0x4000b31	       313	push.c	FUNCTION_12	CALL_2
0xaf1	            0xeb01	                           jmp 0x4000b34	       313	push.c	FUNCTION_12	CALL_2
0xaf3	              0x90	                                     nop	       312	push.c	FUNCTION_12	IF_1
0xaf4	              0x5d	                                 pop rbp	       314	push.c	FUNCTION_12
0xaf5	              0xc3	                                     ret	       314	push.c	FUNCTION_12
setup_default_push_refspecs	IF,1:WHILE,0:functions,0:DO,0:CALL,9:FOR,0:SWITCH,1:ELSE,1	56
0x9f8	              0x55	                                push rbp	       249	push.c	FUNCTION_11
0x9f9	          0x4889e5	                            mov rbp, rsp	       249	push.c	FUNCTION_11
0x9fc	        0x4883ec20	                           sub rsp, 0x20	       249	push.c	FUNCTION_11
0xa00	        0x48897de8	             mov qword [rbp - 0x18], rdi	       249	push.c	FUNCTION_11
0xa04	      0xbf00000000	                              mov edi, 0	       250	push.c	FUNCTION_11	CALL_1
0xa09	      0xe800000000	                          call 0x4000a4e	       250	push.c	FUNCTION_11	CALL_1
0xa0e	        0x488945f8	                mov qword [rbp - 8], rax	       250	push.c	FUNCTION_11	CALL_1
0xa12	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       251	push.c	FUNCTION_11	CALL_2
0xa16	          0x4889c7	                            mov rdi, rax	       251	push.c	FUNCTION_11	CALL_2
0xa19	      0xe8a1ffffff	         call sym.is_workflow_triangular	       251	push.c	FUNCTION_11	CALL_2
0xa1e	          0x8945f4	              mov dword [rbp - 0xc], eax	       251	push.c	FUNCTION_11	CALL_2
0xa21	    0x8b0500000000	            mov eax, dword [0x04000a67] 	       253	push.c	FUNCTION_11	SWITCH_1
0xa27	          0x83f805	                              cmp eax, 5	       253	push.c	FUNCTION_11	SWITCH_1
0xa2a	            0x770c	                            ja 0x4000a78	       253	push.c	FUNCTION_11	SWITCH_1
0xa2c	            0x89c0	                            mov eax, eax	       253	push.c	FUNCTION_11	SWITCH_1
0xa2e	    0x488b04c50000	                  mov rax, qword [rax*8]	       253	push.c	FUNCTION_11	SWITCH_1
0xa36	            0xffe0	                                 jmp rax	       253	push.c	FUNCTION_11	SWITCH_1
0xa38	      0xbf00000000	                              mov edi, 0	       256	push.c	FUNCTION_11	SWITCH_1	CALL_3
0xa3d	      0xe830f7ffff	                    call sym.add_refspec	       256	push.c	FUNCTION_11	SWITCH_1	CALL_3
0xa42	            0xeb7b	                           jmp 0x4000aff	       257	push.c	FUNCTION_11	SWITCH_1
0xa44	        0x837df400	                cmp dword [rbp - 0xc], 0	       261	push.c	FUNCTION_11	SWITCH_1	IF_1
0xa48	            0x7415	                            je 0x4000a9f	       261	push.c	FUNCTION_11	SWITCH_1	IF_1
0xa4a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       262	push.c	FUNCTION_11	SWITCH_1	CALL_4
0xa4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       262	push.c	FUNCTION_11	SWITCH_1	CALL_4
0xa52	          0x4889d6	                            mov rsi, rdx	       262	push.c	FUNCTION_11	SWITCH_1	CALL_4
0xa55	          0x4889c7	                            mov rdi, rax	       262	push.c	FUNCTION_11	SWITCH_1	CALL_4
0xa58	      0xe8b3feffff	             call sym.setup_push_current	       262	push.c	FUNCTION_11	SWITCH_1	CALL_4
0xa5d	            0xeb60	                           jmp 0x4000aff	       265	push.c	FUNCTION_11	SWITCH_1
0xa5f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0xa62	        0x488b75f8	                mov rsi, qword [rbp - 8]	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0xa66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0xa6a	      0xb901000000	                              mov ecx, 1	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0xa6f	          0x4889c7	                            mov rdi, rax	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0xa72	      0xe8dcfcffff	            call sym.setup_push_upstream	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0xa77	            0xeb46	                           jmp 0x4000aff	       265	push.c	FUNCTION_11	SWITCH_1
0xa79	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0xa7c	        0x488b75f8	                mov rsi, qword [rbp - 8]	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0xa80	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0xa84	      0xb900000000	                              mov ecx, 0	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0xa89	          0x4889c7	                            mov rdi, rax	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0xa8c	      0xe8c2fcffff	            call sym.setup_push_upstream	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0xa91	            0xeb2c	                           jmp 0x4000aff	       269	push.c	FUNCTION_11	SWITCH_1
0xa93	        0x488b55f8	                mov rdx, qword [rbp - 8]	       272	push.c	FUNCTION_11	SWITCH_1	CALL_7
0xa97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       272	push.c	FUNCTION_11	SWITCH_1	CALL_7
0xa9b	          0x4889d6	                            mov rsi, rdx	       272	push.c	FUNCTION_11	SWITCH_1	CALL_7
0xa9e	          0x4889c7	                            mov rdi, rax	       272	push.c	FUNCTION_11	SWITCH_1	CALL_7
0xaa1	      0xe86afeffff	             call sym.setup_push_current	       272	push.c	FUNCTION_11	SWITCH_1	CALL_7
0xaa6	            0xeb17	                           jmp 0x4000aff	       273	push.c	FUNCTION_11	SWITCH_1
0xaa8	      0xbf00000000	                              mov edi, 0	       276	push.c	FUNCTION_11	SWITCH_1	CALL_9
0xaad	      0xe801f6ffff	                               call sym.	       276	push.c	FUNCTION_11	SWITCH_1	CALL_9
0xab2	          0x4889c7	                            mov rdi, rax	       276	push.c	FUNCTION_11	SWITCH_1	CALL_9
0xab5	      0xb800000000	                              mov eax, 0	       276	push.c	FUNCTION_11	SWITCH_1	CALL_9
0xaba	      0xe800000000	                          call 0x4000aff	       276	push.c	FUNCTION_11	SWITCH_1	CALL_9
0xabf	              0x90	                                     nop	       280	push.c	FUNCTION_11
0xac0	              0xc9	                                   leave	       280	push.c	FUNCTION_11
0xac1	              0xc3	                                     ret	       280	push.c	FUNCTION_11
is_workflow_triangular	IF,0:WHILE,0:functions,0:DO,0:CALL,1:FOR,0:SWITCH,0:ELSE,0	17
0x9bf	              0x55	                                push rbp	       243	push.c	FUNCTION_10
0x9c0	          0x4889e5	                            mov rbp, rsp	       243	push.c	FUNCTION_10
0x9c3	        0x4883ec20	                           sub rsp, 0x20	       243	push.c	FUNCTION_10
0x9c7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       243	push.c	FUNCTION_10
0x9cb	      0xbf00000000	                              mov edi, 0	       244	push.c	FUNCTION_10	CALL_1
0x9d0	      0xe800000000	                          call 0x4000a15	       244	push.c	FUNCTION_10	CALL_1
0x9d5	        0x488945f8	                mov qword [rbp - 8], rax	       244	push.c	FUNCTION_10	CALL_1
0x9d9	      0x48837df800	                  cmp qword [rbp - 8], 0	       245	push.c	FUNCTION_10
0x9de	            0x7411	                            je 0x4000a31	       245	push.c	FUNCTION_10
0x9e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       245	push.c	FUNCTION_10
0x9e4	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       245	push.c	FUNCTION_10
0x9e8	            0x7407	                            je 0x4000a31	       245	push.c	FUNCTION_10
0x9ea	      0xb801000000	                              mov eax, 1	       245	push.c	FUNCTION_10
0x9ef	            0xeb05	                           jmp 0x4000a36	       245	push.c	FUNCTION_10
0x9f1	      0xb800000000	                              mov eax, 0	       245	push.c	FUNCTION_10
0x9f6	              0xc9	                                   leave	       246	push.c	FUNCTION_10
0x9f7	              0xc3	                                     ret	       246	push.c	FUNCTION_10
set_refspecs	IF,7:WHILE,0:functions,0:DO,0:CALL,16:FOR,1:SWITCH,0:ELSE,3	131
0x432	              0x55	                                push rbp	       110	push.c	FUNCTION_5
0x433	          0x4889e5	                            mov rbp, rsp	       110	push.c	FUNCTION_5
0x436	        0x4883ec60	                           sub rsp, 0x60	       110	push.c	FUNCTION_5
0x43a	        0x48897db8	             mov qword [rbp - 0x48], rdi	       110	push.c	FUNCTION_5
0x43e	          0x8975b4	             mov dword [rbp - 0x4c], esi	       110	push.c	FUNCTION_5
0x441	        0x488955a8	             mov qword [rbp - 0x58], rdx	       110	push.c	FUNCTION_5
0x445	    0x64488b042528	                mov rax, qword fs:[0x28]	       110	push.c	FUNCTION_5
0x44e	        0x488945f8	                mov qword [rbp - 8], rax	       110	push.c	FUNCTION_5
0x452	            0x31c0	                            xor eax, eax	       110	push.c	FUNCTION_5
0x454	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       111	push.c	FUNCTION_5
0x45c	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       112	push.c	FUNCTION_5
0x464	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       115	push.c	FUNCTION_5	FOR_1
0x46b	      0xe9c5010000	                           jmp 0x4000675	       115	push.c	FUNCTION_5	FOR_1
0x470	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       116	push.c	FUNCTION_5	FOR_1
0x473	            0x4898	                                    cdqe	       116	push.c	FUNCTION_5	FOR_1
0x475	    0x488d14c50000	                        lea rdx, [rax*8]	       116	push.c	FUNCTION_5	FOR_1
0x47d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       116	push.c	FUNCTION_5	FOR_1
0x481	          0x4801d0	                            add rax, rdx	       116	push.c	FUNCTION_5	FOR_1
0x484	          0x488b00	                    mov rax, qword [rax]	       116	push.c	FUNCTION_5	FOR_1
0x487	        0x488945d8	             mov qword [rbp - 0x28], rax	       116	push.c	FUNCTION_5	FOR_1
0x48b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x48f	          0x4889c6	                            mov rsi, rax	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x492	      0xbf00000000	                              mov edi, 0	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x497	      0xe800000000	                          call 0x40004dc	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x49c	            0x85c0	                           test eax, eax	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x49e	     0xf85b0000000	                           jne 0x4000594	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x4a4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       118	push.c	FUNCTION_5	FOR_1	IF_1
0x4ac	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       118	push.c	FUNCTION_5	FOR_1	IF_1
0x4b4	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       118	push.c	FUNCTION_5	FOR_1	IF_1
0x4bc	        0x8345c401	               add dword [rbp - 0x3c], 1	       119	push.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4c0	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       119	push.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4c3	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       119	push.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4c6	            0x7c17	                            jl 0x400051f	       119	push.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4c8	      0xbf00000000	                              mov edi, 0	       120	push.c	FUNCTION_5	FOR_1	IF_1	CALL_3
0x4cd	      0xe8e1fbffff	                               call sym.	       120	push.c	FUNCTION_5	FOR_1	IF_1	CALL_3
0x4d2	          0x4889c7	                            mov rdi, rax	       120	push.c	FUNCTION_5	FOR_1	IF_1	CALL_3
0x4d5	      0xb800000000	                              mov eax, 0	       120	push.c	FUNCTION_5	FOR_1	IF_1	CALL_3
0x4da	      0xe800000000	                          call 0x400051f	       120	push.c	FUNCTION_5	FOR_1	IF_1	CALL_3
0x4df	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4e2	            0x4898	                                    cdqe	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4e4	    0x488d14c50000	                        lea rdx, [rax*8]	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4f0	          0x4801d0	                            add rax, rdx	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4f3	          0x488b00	                    mov rax, qword [rax]	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4f6	        0x488945d8	             mov qword [rbp - 0x28], rax	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4fa	    0x8b0500000000	            mov eax, dword [0x04000540] 	       122	push.c	FUNCTION_5	FOR_1	IF_1	IF_3
0x500	            0x85c0	                           test eax, eax	       122	push.c	FUNCTION_5	FOR_1	IF_1	IF_3
0x502	            0x741c	                            je 0x4000560	       122	push.c	FUNCTION_5	FOR_1	IF_1	IF_3
0x504	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x508	        0x488d45e0	                   lea rax, [rbp - 0x20]	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x50c	      0xbe00000000	                              mov esi, 0	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x511	          0x4889c7	                            mov rdi, rax	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x514	      0xb800000000	                              mov eax, 0	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x519	      0xe800000000	                          call 0x400055e	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x51e	            0xeb1a	                           jmp 0x400057a	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x520	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x524	        0x488d45e0	                   lea rax, [rbp - 0x20]	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x528	      0xbe00000000	                              mov esi, 0	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x52d	          0x4889c7	                            mov rdi, rax	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x530	      0xb800000000	                              mov eax, 0	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x535	      0xe800000000	                          call 0x400057a	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x53a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x53e	      0xbe00000000	                              mov esi, 0	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x543	          0x4889c7	                            mov rdi, rax	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x546	      0xe800000000	                          call 0x400058b	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x54b	        0x488945d8	             mov qword [rbp - 0x28], rax	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x54f	      0xe9d1000000	                           jmp 0x4000665	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x554	    0x8b0500000000	            mov eax, dword [0x0400059a] 	       127	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x55a	            0x85c0	                           test eax, eax	       127	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x55c	            0x7476	                            je 0x4000614	       127	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x55e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       128	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x566	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       128	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x56e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       128	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x576	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x57a	      0xbe3a000000	                           mov esi, 0x3a	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x57f	          0x4889c7	                            mov rdi, rax	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x582	      0xe800000000	                          call 0x40005c7	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x587	          0x4885c0	                           test rax, rax	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x58a	            0x7417	                            je 0x40005e3	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x58c	      0xbf00000000	                              mov edi, 0	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x591	      0xe81dfbffff	                               call sym.	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x596	          0x4889c7	                            mov rdi, rax	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x599	      0xb800000000	                              mov eax, 0	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x59e	      0xe800000000	                          call 0x40005e3	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x5a3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x5a7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x5ab	      0xbe00000000	                              mov esi, 0	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x5b0	          0x4889c7	                            mov rdi, rax	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x5b3	      0xb800000000	                              mov eax, 0	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x5b8	      0xe800000000	                          call 0x40005fd	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x5bd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x5c1	      0xbe00000000	                              mov esi, 0	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x5c6	          0x4889c7	                            mov rdi, rax	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x5c9	      0xe800000000	                          call 0x400060e	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x5ce	        0x488945d8	             mov qword [rbp - 0x28], rax	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x5d2	            0xeb51	                           jmp 0x4000665	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x5d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x5d8	      0xbe3a000000	                           mov esi, 0x3a	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x5dd	          0x4889c7	                            mov rdi, rax	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x5e0	      0xe800000000	                          call 0x4000625	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x5e5	          0x4885c0	                           test rax, rax	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x5e8	            0x753b	                           jne 0x4000665	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x5ea	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       134	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7
0x5ef	            0x7519	                           jne 0x400064a	       134	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7
0x5f1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       136	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_13
0x5f5	          0x4889c7	                            mov rdi, rax	       136	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_13
0x5f8	      0xe800000000	                          call 0x400063d	       136	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_13
0x5fd	        0x488945c8	             mov qword [rbp - 0x38], rax	       136	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_13
0x601	      0xe800000000	                          call 0x4000646	       137	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_14
0x606	        0x488945d0	             mov qword [rbp - 0x30], rax	       137	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_14
0x60a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x60e	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x612	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x616	          0x4889ce	                            mov rsi, rcx	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x619	          0x4889c7	                            mov rdi, rax	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x61c	      0xe826fcffff	                    call sym.map_refspec	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x621	        0x488945d8	             mov qword [rbp - 0x28], rax	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x625	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       141	push.c	FUNCTION_5	FOR_1	CALL_16
0x629	          0x4889c7	                            mov rdi, rax	       141	push.c	FUNCTION_5	FOR_1	CALL_16
0x62c	      0xe841fbffff	                    call sym.add_refspec	       141	push.c	FUNCTION_5	FOR_1	CALL_16
0x631	        0x8345c401	               add dword [rbp - 0x3c], 1	       115	push.c	FUNCTION_5	FOR_1
0x635	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       115	push.c	FUNCTION_5	FOR_1
0x638	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       115	push.c	FUNCTION_5	FOR_1
0x63b	     0xf8c2ffeffff	                            jl 0x40004b0	       115	push.c	FUNCTION_5	FOR_1
0x641	              0x90	                                     nop	       143	push.c	FUNCTION_5
0x642	        0x488b45f8	                mov rax, qword [rbp - 8]	       143	push.c	FUNCTION_5
0x646	    0x644833042528	                xor rax, qword fs:[0x28]	       143	push.c	FUNCTION_5
0x64f	            0x7405	                            je 0x4000696	       143	push.c	FUNCTION_5
0x651	      0xe800000000	                          call 0x4000696	       143	push.c	FUNCTION_5
0x656	              0xc9	                                   leave	       143	push.c	FUNCTION_5
0x657	              0xc3	                                     ret	       143	push.c	FUNCTION_5
advise_ref_already_exists	IF,1:WHILE,0:functions,0:DO,0:CALL,2:FOR,0:SWITCH,0:ELSE,0	17
0xb2a	              0x55	                                push rbp	       324	push.c	FUNCTION_14
0xb2b	          0x4889e5	                            mov rbp, rsp	       324	push.c	FUNCTION_14
0xb2e	    0x8b0500000000	            mov eax, dword [0x04000b74] 	       325	push.c	FUNCTION_14	IF_1
0xb34	            0x85c0	                           test eax, eax	       325	push.c	FUNCTION_14	IF_1
0xb36	            0x7423	                            je 0x4000b9b	       325	push.c	FUNCTION_14	IF_1
0xb38	    0x8b0500000000	            mov eax, dword [0x04000b7e] 	       325	push.c	FUNCTION_14	IF_1
0xb3e	            0x85c0	                           test eax, eax	       325	push.c	FUNCTION_14	IF_1
0xb40	            0x7419	                            je 0x4000b9b	       325	push.c	FUNCTION_14	IF_1
0xb42	      0xbf00000000	                              mov edi, 0	       327	push.c	FUNCTION_14	CALL_2
0xb47	      0xe867f5ffff	                               call sym.	       327	push.c	FUNCTION_14	CALL_2
0xb4c	          0x4889c7	                            mov rdi, rax	       327	push.c	FUNCTION_14	CALL_2
0xb4f	      0xb800000000	                              mov eax, 0	       327	push.c	FUNCTION_14	CALL_2
0xb54	      0xe800000000	                          call 0x4000b99	       327	push.c	FUNCTION_14	CALL_2
0xb59	            0xeb01	                           jmp 0x4000b9c	       327	push.c	FUNCTION_14	CALL_2
0xb5b	              0x90	                                     nop	       326	push.c	FUNCTION_14	IF_1
0xb5c	              0x5d	                                 pop rbp	       328	push.c	FUNCTION_14
0xb5d	              0xc3	                                     ret	       328	push.c	FUNCTION_14
advise_ref_fetch_first	IF,1:WHILE,0:functions,0:DO,0:CALL,2:FOR,0:SWITCH,0:ELSE,0	17
0xb5e	              0x55	                                push rbp	       331	push.c	FUNCTION_15
0xb5f	          0x4889e5	                            mov rbp, rsp	       331	push.c	FUNCTION_15
0xb62	    0x8b0500000000	            mov eax, dword [0x04000ba8] 	       332	push.c	FUNCTION_15	IF_1
0xb68	            0x85c0	                           test eax, eax	       332	push.c	FUNCTION_15	IF_1
0xb6a	            0x7423	                            je 0x4000bcf	       332	push.c	FUNCTION_15	IF_1
0xb6c	    0x8b0500000000	            mov eax, dword [0x04000bb2] 	       332	push.c	FUNCTION_15	IF_1
0xb72	            0x85c0	                           test eax, eax	       332	push.c	FUNCTION_15	IF_1
0xb74	            0x7419	                            je 0x4000bcf	       332	push.c	FUNCTION_15	IF_1
0xb76	      0xbf00000000	                              mov edi, 0	       334	push.c	FUNCTION_15	CALL_2
0xb7b	      0xe833f5ffff	                               call sym.	       334	push.c	FUNCTION_15	CALL_2
0xb80	          0x4889c7	                            mov rdi, rax	       334	push.c	FUNCTION_15	CALL_2
0xb83	      0xb800000000	                              mov eax, 0	       334	push.c	FUNCTION_15	CALL_2
0xb88	      0xe800000000	                          call 0x4000bcd	       334	push.c	FUNCTION_15	CALL_2
0xb8d	            0xeb01	                           jmp 0x4000bd0	       334	push.c	FUNCTION_15	CALL_2
0xb8f	              0x90	                                     nop	       333	push.c	FUNCTION_15	IF_1
0xb90	              0x5d	                                 pop rbp	       335	push.c	FUNCTION_15
0xb91	              0xc3	                                     ret	       335	push.c	FUNCTION_15
const_error	IF,0:WHILE,0:functions,0:DO,0:CALL,0:FOR,0:SWITCH,0:ELSE,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_28
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_28
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_28
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_28
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_28
die_push_simple	IF,1:WHILE,0:functions,0:DO,0:CALL,4:FOR,0:SWITCH,0:ELSE,0	47
0x69f	              0x55	                                push rbp	       155	push.c	FUNCTION_7
0x6a0	          0x4889e5	                            mov rbp, rsp	       155	push.c	FUNCTION_7
0x6a3	            0x4156	                                push r14	       155	push.c	FUNCTION_7
0x6a5	            0x4155	                                push r13	       155	push.c	FUNCTION_7
0x6a7	            0x4154	                                push r12	       155	push.c	FUNCTION_7
0x6a9	              0x53	                                push rbx	       155	push.c	FUNCTION_7
0x6aa	        0x4883ec30	                           sub rsp, 0x30	       155	push.c	FUNCTION_7
0x6ae	        0x48897db8	             mov qword [rbp - 0x48], rdi	       155	push.c	FUNCTION_7
0x6b2	        0x488975b0	             mov qword [rbp - 0x50], rsi	       155	push.c	FUNCTION_7
0x6b6	    0x64488b042528	                mov rax, qword fs:[0x28]	       155	push.c	FUNCTION_7
0x6bf	        0x488945d8	             mov qword [rbp - 0x28], rax	       155	push.c	FUNCTION_7
0x6c3	            0x31c0	                            xor eax, eax	       155	push.c	FUNCTION_7
0x6c5	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       164	push.c	FUNCTION_7
0x6cd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       165	push.c	FUNCTION_7
0x6d1	        0x488b4028	            mov rax, qword [rax + 0x28] 	       165	push.c	FUNCTION_7
0x6d5	          0x488b00	                    mov rax, qword [rax]	       165	push.c	FUNCTION_7
0x6d8	        0x488b4008	                mov rax, qword [rax + 8]	       165	push.c	FUNCTION_7
0x6dc	        0x488945c8	             mov qword [rbp - 0x38], rax	       165	push.c	FUNCTION_7
0x6e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       167	push.c	FUNCTION_7	CALL_1
0x6e4	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       167	push.c	FUNCTION_7	CALL_1
0x6e8	      0xbe00000000	                              mov esi, 0	       167	push.c	FUNCTION_7	CALL_1
0x6ed	          0x4889c7	                            mov rdi, rax	       167	push.c	FUNCTION_7	CALL_1
0x6f0	      0xe816f9ffff	                    call sym.skip_prefix	       167	push.c	FUNCTION_7	CALL_1
0x6f5	    0x8b0500000000	            mov eax, dword [0x0400073b] 	       173	push.c	FUNCTION_7	IF_1
0x6fb	          0x83f805	                              cmp eax, 5	       173	push.c	FUNCTION_7	IF_1
0x6fe	            0x750e	                           jne 0x400074e	       173	push.c	FUNCTION_7	IF_1
0x700	      0xbf00000000	                              mov edi, 0	       174	push.c	FUNCTION_7	IF_1	CALL_2
0x705	      0xe8a9f9ffff	                               call sym.	       174	push.c	FUNCTION_7	IF_1	CALL_2
0x70a	        0x488945d0	             mov qword [rbp - 0x30], rax	       174	push.c	FUNCTION_7	IF_1	CALL_2
0x70e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       177	push.c	FUNCTION_7	CALL_4
0x712	          0x4c8b30	                    mov r14, qword [rax]	       177	push.c	FUNCTION_7	CALL_4
0x715	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       177	push.c	FUNCTION_7	CALL_4
0x719	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	       177	push.c	FUNCTION_7	CALL_4
0x71d	        0x4c8b65c8	             mov r12, qword [rbp - 0x38]	       177	push.c	FUNCTION_7	CALL_4
0x721	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       177	push.c	FUNCTION_7	CALL_4
0x725	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       177	push.c	FUNCTION_7	CALL_4
0x729	      0xbf00000000	                              mov edi, 0	       177	push.c	FUNCTION_7	CALL_4
0x72e	      0xe880f9ffff	                               call sym.	       177	push.c	FUNCTION_7	CALL_4
0x733	          0x4889c7	                            mov rdi, rax	       177	push.c	FUNCTION_7	CALL_4
0x736	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       177	push.c	FUNCTION_7	CALL_4
0x73a	          0x4989c1	                             mov r9, rax	       177	push.c	FUNCTION_7	CALL_4
0x73d	          0x4d89f0	                             mov r8, r14	       177	push.c	FUNCTION_7	CALL_4
0x740	          0x4c89e9	                            mov rcx, r13	       177	push.c	FUNCTION_7	CALL_4
0x743	          0x4c89e2	                            mov rdx, r12	       177	push.c	FUNCTION_7	CALL_4
0x746	          0x4889de	                            mov rsi, rbx	       177	push.c	FUNCTION_7	CALL_4
0x749	      0xb800000000	                              mov eax, 0	       177	push.c	FUNCTION_7	CALL_4
0x74e	      0xe800000000	            call sym.setup_push_upstream	       177	push.c	FUNCTION_7	CALL_4
git_push_config	IF,16:WHILE,0:functions,0:DO,0:CALL,27:FOR,0:SWITCH,1:ELSE,10	229
0x11df	              0x55	                                push rbp	       500	push.c	FUNCTION_21
0x11e0	          0x4889e5	                            mov rbp, rsp	       500	push.c	FUNCTION_21
0x11e3	        0x4883ec50	                           sub rsp, 0x50	       500	push.c	FUNCTION_21
0x11e7	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       500	push.c	FUNCTION_21
0x11eb	        0x488975c0	             mov qword [rbp - 0x40], rsi	       500	push.c	FUNCTION_21
0x11ef	        0x488955b8	             mov qword [rbp - 0x48], rdx	       500	push.c	FUNCTION_21
0x11f3	    0x64488b042528	                mov rax, qword fs:[0x28]	       500	push.c	FUNCTION_21
0x11fc	        0x488945f8	                mov qword [rbp - 8], rax	       500	push.c	FUNCTION_21
0x1200	            0x31c0	                            xor eax, eax	       500	push.c	FUNCTION_21
0x1202	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       502	push.c	FUNCTION_21
0x1206	        0x488945f0	             mov qword [rbp - 0x10], rax	       502	push.c	FUNCTION_21
0x120a	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       505	push.c	FUNCTION_21	CALL_1
0x120e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       505	push.c	FUNCTION_21	CALL_1
0x1212	      0xba00000000	                              mov edx, 0	       505	push.c	FUNCTION_21	CALL_1
0x1217	          0x4889ce	                            mov rsi, rcx	       505	push.c	FUNCTION_21	CALL_1
0x121a	          0x4889c7	                            mov rdi, rax	       505	push.c	FUNCTION_21	CALL_1
0x121d	      0xe800000000	                          call 0x4001262	       505	push.c	FUNCTION_21	CALL_1
0x1222	          0x8945dc	             mov dword [rbp - 0x24], eax	       505	push.c	FUNCTION_21	CALL_1
0x1225	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       506	push.c	FUNCTION_21	IF_1
0x1229	            0x7408	                            je 0x4001273	       506	push.c	FUNCTION_21	IF_1
0x122b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       507	push.c	FUNCTION_21	IF_1
0x122e	      0xe9f2020000	                           jmp 0x4001565	       507	push.c	FUNCTION_21	IF_1
0x1233	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x1237	      0xbe00000000	                              mov esi, 0	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x123c	          0x4889c7	                            mov rdi, rax	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x123f	      0xe800000000	                          call 0x4001284	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x1244	            0x85c0	                           test eax, eax	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x1246	            0x7545	                           jne 0x40012cd	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x1248	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x124c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x1250	          0x4889d6	                            mov rsi, rdx	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x1253	          0x4889c7	                            mov rdi, rax	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x1256	      0xe800000000	                          call 0x400129b	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x125b	            0x85c0	                           test eax, eax	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x125d	            0x7413	                            je 0x40012b2	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x125f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       511	push.c	FUNCTION_21	IF_2	IF_3
0x1263	            0x8b00	                    mov eax, dword [rax]	       511	push.c	FUNCTION_21	IF_2	IF_3
0x1265	          0x80cc04	                                or ah, 4	       511	push.c	FUNCTION_21	IF_2	IF_3
0x1268	            0x89c2	                            mov edx, eax	       511	push.c	FUNCTION_21	IF_2	IF_3
0x126a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       511	push.c	FUNCTION_21	IF_2	IF_3
0x126e	            0x8910	                    mov dword [rax], edx	       511	push.c	FUNCTION_21	IF_2	IF_3
0x1270	            0xeb11	                           jmp 0x40012c3	       511	push.c	FUNCTION_21	IF_2	IF_3
0x1272	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x1276	            0x8b00	                    mov eax, dword [rax]	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x1278	          0x80e4fb	                            and ah, 0xfb	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x127b	            0x89c2	                            mov edx, eax	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x127d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x1281	            0x8910	                    mov dword [rax], edx	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x1283	      0xb800000000	                              mov eax, 0	       514	push.c	FUNCTION_21	IF_2	ELSE_1
0x1288	      0xe998020000	                           jmp 0x4001565	       514	push.c	FUNCTION_21	IF_2	ELSE_1
0x128d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x1291	      0xbe00000000	                              mov esi, 0	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x1296	          0x4889c7	                            mov rdi, rax	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x1299	      0xe800000000	                          call 0x40012de	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x129e	            0x85c0	                           test eax, eax	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x12a0	     0xf85b0000000	                           jne 0x4001396	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x12a6	        0x488d45e8	                   lea rax, [rbp - 0x18]	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x12aa	          0x4889c6	                            mov rsi, rax	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x12ad	      0xbf00000000	                              mov edi, 0	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x12b2	      0xe800000000	                          call 0x40012f7	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x12b7	            0x85c0	                           test eax, eax	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x12b9	     0xf854e020000	                           jne 0x400154d	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x12bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x12c3	          0x4889c7	                            mov rdi, rax	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x12c6	      0xe800000000	                          call 0x400130b	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x12cb	            0x85c0	                           test eax, eax	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x12cd	            0x7407	                            je 0x4001316	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x12cf	          0x83f801	                              cmp eax, 1	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x12d2	            0x7418	                            je 0x400132c	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x12d4	            0xeb2c	                           jmp 0x4001342	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x12d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       520	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_7
0x12da	      0xbe00000000	                              mov esi, 0	       520	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_7
0x12df	          0x4889c7	                            mov rdi, rax	       520	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_7
0x12e2	      0xe87dfeffff	            call sym.set_push_cert_flags	       520	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_7
0x12e7	      0xe921020000	                           jmp 0x400154d	       521	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1
0x12ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       523	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_8
0x12f0	      0xbe02000000	                              mov esi, 2	       523	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_8
0x12f5	          0x4889c7	                            mov rdi, rax	       523	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_8
0x12f8	      0xe867feffff	            call sym.set_push_cert_flags	       523	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_8
0x12fd	      0xe90b020000	                           jmp 0x400154d	       524	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1
0x1302	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x1306	          0x4885c0	                           test rax, rax	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x1309	            0x742b	                            je 0x4001376	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x130b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x130f	      0xbe00000000	                              mov esi, 0	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x1314	          0x4889c7	                            mov rdi, rax	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x1317	      0xe800000000	                          call 0x400135c	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x131c	            0x85c0	                           test eax, eax	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x131e	            0x7516	                           jne 0x4001376	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x1320	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       527	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_10
0x1324	      0xbe01000000	                              mov esi, 1	       527	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_10
0x1329	          0x4889c7	                            mov rdi, rax	       527	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_10
0x132c	      0xe833feffff	            call sym.set_push_cert_flags	       527	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_10
0x1331	      0xe9d7010000	                           jmp 0x400154d	       527	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_10
0x1336	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_11
0x133a	          0x4889c6	                            mov rsi, rax	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_11
0x133d	      0xbf00000000	                              mov edi, 0	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_11
0x1342	      0xb800000000	                              mov eax, 0	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_11
0x1347	      0xe800000000	                          call 0x400138c	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_11
0x134c	      0xe8afecffff	                    call sym.const_error	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_11
0x1351	      0xe9cf010000	                           jmp 0x4001565	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_11
0x1356	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_12
0x135a	      0xbe00000000	                              mov esi, 0	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_12
0x135f	          0x4889c7	                            mov rdi, rax	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_12
0x1362	      0xe800000000	                          call 0x40013a7	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_12
0x1367	            0x85c0	                           test eax, eax	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_12
0x1369	            0x7537	                           jne 0x40013e2	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_12
0x136b	        0x488d45e8	                   lea rax, [rbp - 0x18]	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_13
0x136f	          0x4889c6	                            mov rsi, rax	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_13
0x1372	      0xbf00000000	                              mov edi, 0	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_13
0x1377	      0xe800000000	                          call 0x40013bc	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_13
0x137c	            0x85c0	                           test eax, eax	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_13
0x137e	     0xf8589010000	                           jne 0x400154d	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_13
0x1384	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_14
0x1388	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_14
0x138c	          0x4889d6	                            mov rsi, rdx	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_14
0x138f	          0x4889c7	                            mov rdi, rax	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_14
0x1392	      0xe800000000	                          call 0x40013d7	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_14
0x1397	    0x890500000000	            mov dword [0x040013dd], eax 	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_14
0x139d	      0xe96b010000	                           jmp 0x400154d	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_14
0x13a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x13a6	      0xbe00000000	                              mov esi, 0	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x13ab	          0x4889c7	                            mov rdi, rax	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x13ae	      0xe800000000	                          call 0x40013f3	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x13b3	            0x85c0	                           test eax, eax	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x13b5	            0x7534	                           jne 0x400142b	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x13b7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_16
0x13bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_16
0x13bf	          0x4889d6	                            mov rsi, rdx	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_16
0x13c2	          0x4889c7	                            mov rdi, rax	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_16
0x13c5	      0xe800000000	                          call 0x400140a	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_16
0x13ca	            0x85c0	                           test eax, eax	       538	push.c	FUNCTION_21	ELSE_5	IF_9
0x13cc	            0x7407	                            je 0x4001415	       538	push.c	FUNCTION_21	ELSE_5	IF_9
0x13ce	      0xb8ffffffff	                     mov eax, 0xffffffff	       538	push.c	FUNCTION_21	ELSE_5	IF_9
0x13d3	            0xeb05	                           jmp 0x400141a	       538	push.c	FUNCTION_21	ELSE_5	IF_9
0x13d5	      0xb800000000	                              mov eax, 0	       538	push.c	FUNCTION_21	ELSE_5	IF_9
0x13da	          0x8945e4	             mov dword [rbp - 0x1c], eax	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_16
0x13dd	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       539	push.c	FUNCTION_21	ELSE_5	IF_9
0x13e0	    0x890500000000	            mov dword [0x04001426], eax 	       539	push.c	FUNCTION_21	ELSE_5	IF_9
0x13e6	      0xe922010000	                           jmp 0x400154d	       539	push.c	FUNCTION_21	ELSE_5	IF_9
0x13eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x13ef	      0xbe00000000	                              mov esi, 0	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x13f4	          0x4889c7	                            mov rdi, rax	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x13f7	      0xe800000000	                          call 0x400143c	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x13fc	            0x85c0	                           test eax, eax	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x13fe	            0x7554	                           jne 0x4001494	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x1400	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       541	push.c	FUNCTION_21	ELSE_6	IF_10	IF_11
0x1405	            0x7516	                           jne 0x400145d	       541	push.c	FUNCTION_21	ELSE_6	IF_10	IF_11
0x1407	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_18
0x140b	          0x4889c7	                            mov rdi, rax	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_18
0x140e	      0xe800000000	                          call 0x4001453	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_18
0x1413	      0xe8e8ebffff	                    call sym.const_error	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_18
0x1418	      0xe908010000	                           jmp 0x4001565	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_18
0x141d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       544	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x1421	           0xfb600	                   movzx eax, byte [rax]	       544	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x1424	            0x84c0	                             test al, al	       544	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x1426	            0x7511	                           jne 0x4001479	       544	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x1428	      0xbe00000000	                              mov esi, 0	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x142d	      0xbf00000000	                              mov edi, 0	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x1432	      0xe800000000	                          call 0x4001477	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x1437	            0xeb11	                           jmp 0x400148a	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x1439	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_20
0x143d	          0x4889c6	                            mov rsi, rax	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_20
0x1440	      0xbf00000000	                              mov edi, 0	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_20
0x1445	      0xe800000000	                          call 0x400148a	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_20
0x144a	      0xb800000000	                              mov eax, 0	       548	push.c	FUNCTION_21	ELSE_6	IF_10
0x144f	      0xe9d1000000	                           jmp 0x4001565	       548	push.c	FUNCTION_21	ELSE_6	IF_10
0x1454	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x1458	      0xbe00000000	                              mov esi, 0	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x145d	          0x4889c7	                            mov rdi, rax	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x1460	      0xe800000000	                          call 0x40014a5	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x1465	            0x85c0	                           test eax, eax	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x1467	            0x7523	                           jne 0x40014cc	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x1469	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_22
0x146d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_22
0x1471	          0x4889d6	                            mov rsi, rdx	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_22
0x1474	          0x4889c7	                            mov rdi, rax	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_22
0x1477	      0xe800000000	                          call 0x40014bc	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_22
0x147c	    0x890500000000	            mov dword [0x040014c2], eax 	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_22
0x1482	      0xb800000000	                              mov eax, 0	       551	push.c	FUNCTION_21	ELSE_9	IF_13
0x1487	      0xe999000000	                           jmp 0x4001565	       551	push.c	FUNCTION_21	ELSE_9	IF_13
0x148c	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_23
0x1490	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_23
0x1494	      0xbe00000000	                              mov esi, 0	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_23
0x1499	          0x4889c7	                            mov rdi, rax	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_23
0x149c	      0xe86aebffff	                    call sym.skip_prefix	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_23
0x14a1	            0x85c0	                           test eax, eax	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_23
0x14a3	            0x7468	                            je 0x400154d	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_23
0x14a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       553	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_24
0x14a9	          0x4889c7	                            mov rdi, rax	       553	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_24
0x14ac	      0xe82eecffff	          call sym.parse_push_color_slot	       553	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_24
0x14b1	          0x8945e0	             mov dword [rbp - 0x20], eax	       553	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_24
0x14b4	        0x837de000	               cmp dword [rbp - 0x20], 0	       554	push.c	FUNCTION_21	ELSE_10	IF_14	IF_15
0x14b8	            0x7907	                           jns 0x4001501	       554	push.c	FUNCTION_21	ELSE_10	IF_14	IF_15
0x14ba	      0xb800000000	                              mov eax, 0	       555	push.c	FUNCTION_21	ELSE_10	IF_14	IF_15
0x14bf	            0xeb64	                           jmp 0x4001565	       555	push.c	FUNCTION_21	ELSE_10	IF_14	IF_15
0x14c1	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       556	push.c	FUNCTION_21	ELSE_10	IF_14	IF_16
0x14c6	            0x7513	                           jne 0x400151b	       556	push.c	FUNCTION_21	ELSE_10	IF_14	IF_16
0x14c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       557	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x14cc	          0x4889c7	                            mov rdi, rax	       557	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x14cf	      0xe800000000	                          call 0x4001514	       557	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x14d4	      0xe827ebffff	                    call sym.const_error	       557	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x14d9	            0xeb4a	                           jmp 0x4001565	       557	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x14db	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x14de	          0x4863d0	                         movsxd rdx, eax	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x14e1	          0x4889d0	                            mov rax, rdx	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x14e4	        0x48c1e002	                              shl rax, 2	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x14e8	          0x4801d0	                            add rax, rdx	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x14eb	          0x4889c2	                            mov rdx, rax	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x14ee	        0x48c1e204	                              shl rdx, 4	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x14f2	          0x4829c2	                            sub rdx, rax	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x14f5	    0x4881c2000000	                              add rdx, 0	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x14fc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x1500	          0x4889d6	                            mov rsi, rdx	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x1503	          0x4889c7	                            mov rdi, rax	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x1506	      0xe800000000	                          call 0x400154b	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x150b	            0xeb18	                           jmp 0x4001565	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_26
0x150d	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       561	push.c	FUNCTION_21	CALL_27
0x1511	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       561	push.c	FUNCTION_21	CALL_27
0x1515	      0xba00000000	                              mov edx, 0	       561	push.c	FUNCTION_21	CALL_27
0x151a	          0x4889ce	                            mov rsi, rcx	       561	push.c	FUNCTION_21	CALL_27
0x151d	          0x4889c7	                            mov rdi, rax	       561	push.c	FUNCTION_21	CALL_27
0x1520	      0xe800000000	                          call 0x4001565	       561	push.c	FUNCTION_21	CALL_27
0x1525	        0x488b4df8	                mov rcx, qword [rbp - 8]	       562	push.c	FUNCTION_21
0x1529	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       562	push.c	FUNCTION_21
0x1532	            0x7405	                            je 0x4001579	       562	push.c	FUNCTION_21
0x1534	      0xe800000000	                          call 0x4001579	       562	push.c	FUNCTION_21
0x1539	              0xc9	                                   leave	       562	push.c	FUNCTION_21
0x153a	              0xc3	                                     ret	       562	push.c	FUNCTION_21
push_url_of_remote	IF,1:WHILE,0:functions,0:DO,0:CALL,0:FOR,0:SWITCH,0:ELSE,0	23
0x658	              0x55	                                push rbp	       146	push.c	FUNCTION_6
0x659	          0x4889e5	                            mov rbp, rsp	       146	push.c	FUNCTION_6
0x65c	        0x48897df8	                mov qword [rbp - 8], rdi	       146	push.c	FUNCTION_6
0x660	        0x488975f0	             mov qword [rbp - 0x10], rsi	       146	push.c	FUNCTION_6
0x664	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	push.c	FUNCTION_6	IF_1
0x668	          0x8b4040	            mov eax, dword [rax + 0x40] 	       147	push.c	FUNCTION_6	IF_1
0x66b	            0x85c0	                           test eax, eax	       147	push.c	FUNCTION_6	IF_1
0x66d	            0x7418	                            je 0x40006c7	       147	push.c	FUNCTION_6	IF_1
0x66f	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	push.c	FUNCTION_6	IF_1
0x673	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       148	push.c	FUNCTION_6	IF_1
0x677	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       148	push.c	FUNCTION_6	IF_1
0x67b	          0x488910	                    mov qword [rax], rdx	       148	push.c	FUNCTION_6	IF_1
0x67e	        0x488b45f8	                mov rax, qword [rbp - 8]	       149	push.c	FUNCTION_6	IF_1
0x682	          0x8b4040	            mov eax, dword [rax + 0x40] 	       149	push.c	FUNCTION_6	IF_1
0x685	            0xeb16	                           jmp 0x40006dd	       149	push.c	FUNCTION_6	IF_1
0x687	        0x488b45f8	                mov rax, qword [rbp - 8]	       151	push.c	FUNCTION_6
0x68b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       151	push.c	FUNCTION_6
0x68f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       151	push.c	FUNCTION_6
0x693	          0x488910	                    mov qword [rax], rdx	       151	push.c	FUNCTION_6
0x696	        0x488b45f8	                mov rax, qword [rbp - 8]	       152	push.c	FUNCTION_6
0x69a	          0x8b4030	            mov eax, dword [rax + 0x30] 	       152	push.c	FUNCTION_6
0x69d	              0x5d	                                 pop rbp	       153	push.c	FUNCTION_6
0x69e	              0xc3	                                     ret	       153	push.c	FUNCTION_6
cmd_push	IF,9:WHILE,0:functions,0:DO,0:CALL,66:FOR,0:SWITCH,0:ELSE,3	343
0x153b	              0x55	                                push rbp	       565	push.c	FUNCTION_22
0x153c	          0x4889e5	                            mov rbp, rsp	       565	push.c	FUNCTION_22
0x153f	    0x4881ec000700	                          sub rsp, 0x700	       565	push.c	FUNCTION_22
0x1546	    0x89bd1cf9ffff	            mov dword [rbp - 0x6e4], edi	       565	push.c	FUNCTION_22
0x154c	    0x4889b510f9ff	            mov qword [rbp - 0x6f0], rsi	       565	push.c	FUNCTION_22
0x1553	    0x48899508f9ff	            mov qword [rbp - 0x6f8], rdx	       565	push.c	FUNCTION_22
0x155a	    0x64488b042528	                mov rax, qword fs:[0x28]	       565	push.c	FUNCTION_22
0x1563	        0x488945f8	                mov qword [rbp - 8], rax	       565	push.c	FUNCTION_22
0x1567	            0x31c0	                            xor eax, eax	       565	push.c	FUNCTION_22
0x1569	    0xc78528f9ffff	              mov dword [rbp - 0x6d8], 0	       566	push.c	FUNCTION_22
0x1573	    0xc7852cf9ffff	              mov dword [rbp - 0x6d4], 0	       567	push.c	FUNCTION_22
0x157d	    0xc78530f9ffff	    mov dword [rbp - 0x6d0], 0xffffffff 	       568	push.c	FUNCTION_22
0x1587	    0x48c78538f9ff	              mov qword [rbp - 0x6c8], 0	       570	push.c	FUNCTION_22
0x1592	    0x48c78550f9ff	              mov qword [rbp - 0x6b0], 0	       571	push.c	FUNCTION_22
0x159d	    0xc78558f9ffff	              mov dword [rbp - 0x6a8], 0	       571	push.c	FUNCTION_22
0x15a7	    0xc7855cf9ffff	              mov dword [rbp - 0x6a4], 0	       571	push.c	FUNCTION_22
0x15b1	     0xfb68560f9ff	           movzx eax, byte [rbp - 0x6a0]	       571	push.c	FUNCTION_22
0x15b8	          0x83c801	                               or eax, 1	       571	push.c	FUNCTION_22
0x15bb	    0x888560f9ffff	              mov byte [rbp - 0x6a0], al	       571	push.c	FUNCTION_22
0x15c1	    0x48c78568f9ff	              mov qword [rbp - 0x698], 0	       571	push.c	FUNCTION_22
0x15cc	    0x488d9570f9ff	                  lea rdx, [rbp - 0x690]	       575	push.c	FUNCTION_22
0x15d3	      0xb800000000	                              mov eax, 0	       575	push.c	FUNCTION_22
0x15d8	      0xb9d0000000	                           mov ecx, 0xd0	       575	push.c	FUNCTION_22
0x15dd	          0x4889d7	                            mov rdi, rdx	       575	push.c	FUNCTION_22
0x15e0	          0xf348ab	              rep stosq qword [rdi], rax	       575	push.c	FUNCTION_22
0x15e3	    0xc78570f9ffff	           mov dword [rbp - 0x690], 0xc 	       575	push.c	FUNCTION_22
0x15ed	    0xc78574f9ffff	          mov dword [rbp - 0x68c], 0x76 	       575	push.c	FUNCTION_22
0x15f7	    0x48c78578f9ff	              mov qword [rbp - 0x688], 0	       575	push.c	FUNCTION_22
0x1602	    0x48c78580f9ff	              mov qword [rbp - 0x680], 0	       575	push.c	FUNCTION_22
0x160d	    0x48c78590f9ff	              mov qword [rbp - 0x670], 0	       575	push.c	FUNCTION_22
0x1618	    0xc78598f9ffff	              mov dword [rbp - 0x668], 2	       575	push.c	FUNCTION_22
0x1622	    0x48c785a0f9ff	              mov qword [rbp - 0x660], 0	       575	push.c	FUNCTION_22
0x162d	    0xc785b0f9ffff	           mov dword [rbp - 0x650], 0xc 	       575	push.c	FUNCTION_22
0x1637	    0xc785b4f9ffff	          mov dword [rbp - 0x64c], 0x71 	       575	push.c	FUNCTION_22
0x1641	    0x48c785b8f9ff	              mov qword [rbp - 0x648], 0	       575	push.c	FUNCTION_22
0x164c	    0x48c785c0f9ff	              mov qword [rbp - 0x640], 0	       575	push.c	FUNCTION_22
0x1657	    0x48c785d0f9ff	              mov qword [rbp - 0x630], 0	       575	push.c	FUNCTION_22
0x1662	    0xc785d8f9ffff	              mov dword [rbp - 0x628], 2	       575	push.c	FUNCTION_22
0x166c	    0x48c785e0f9ff	              mov qword [rbp - 0x620], 0	       575	push.c	FUNCTION_22
0x1677	    0xc785f0f9ffff	              mov dword [rbp - 0x610], 9	       575	push.c	FUNCTION_22
0x1681	    0x48c785f8f9ff	              mov qword [rbp - 0x608], 0	       575	push.c	FUNCTION_22
0x168c	    0x488d8538f9ff	                  lea rax, [rbp - 0x6c8]	       575	push.c	FUNCTION_22
0x1693	    0x48898500faff	            mov qword [rbp - 0x600], rax	       575	push.c	FUNCTION_22
0x169a	    0x48c78508faff	              mov qword [rbp - 0x5f8], 0	       575	push.c	FUNCTION_22
0x16a5	    0x48c78510faff	              mov qword [rbp - 0x5f0], 0	       575	push.c	FUNCTION_22
0x16b0	    0xc78530faffff	              mov dword [rbp - 0x5d0], 4	       575	push.c	FUNCTION_22
0x16ba	    0x48c78538faff	              mov qword [rbp - 0x5c8], 0	       575	push.c	FUNCTION_22
0x16c5	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x16cc	    0x48898540faff	            mov qword [rbp - 0x5c0], rax	       575	push.c	FUNCTION_22
0x16d3	    0x48c78550faff	              mov qword [rbp - 0x5b0], 0	       575	push.c	FUNCTION_22
0x16de	    0xc78558faffff	              mov dword [rbp - 0x5a8], 2	       575	push.c	FUNCTION_22
0x16e8	    0x48c78568faff	              mov qword [rbp - 0x598], 1	       575	push.c	FUNCTION_22
0x16f3	    0xc78570faffff	              mov dword [rbp - 0x590], 4	       575	push.c	FUNCTION_22
0x16fd	    0x48c78578faff	              mov qword [rbp - 0x588], 0	       575	push.c	FUNCTION_22
0x1708	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x170f	    0x48898580faff	            mov qword [rbp - 0x580], rax	       575	push.c	FUNCTION_22
0x1716	    0x48c78590faff	              mov qword [rbp - 0x570], 0	       575	push.c	FUNCTION_22
0x1721	    0xc78598faffff	              mov dword [rbp - 0x568], 2	       575	push.c	FUNCTION_22
0x172b	    0x48c785a8faff	            mov qword [rbp - 0x558], 0xa	       575	push.c	FUNCTION_22
0x1736	    0xc785b0faffff	              mov dword [rbp - 0x550], 7	       575	push.c	FUNCTION_22
0x1740	    0xc785b4faffff	          mov dword [rbp - 0x54c], 0x64 	       575	push.c	FUNCTION_22
0x174a	    0x48c785b8faff	              mov qword [rbp - 0x548], 0	       575	push.c	FUNCTION_22
0x1755	    0x48c785c0faff	              mov qword [rbp - 0x540], 0	       575	push.c	FUNCTION_22
0x1760	    0x48c785d0faff	              mov qword [rbp - 0x530], 0	       575	push.c	FUNCTION_22
0x176b	    0xc785d8faffff	              mov dword [rbp - 0x528], 2	       575	push.c	FUNCTION_22
0x1775	    0x48c785e8faff	              mov qword [rbp - 0x518], 1	       575	push.c	FUNCTION_22
0x1780	    0xc785f0faffff	              mov dword [rbp - 0x510], 7	       575	push.c	FUNCTION_22
0x178a	    0x48c785f8faff	              mov qword [rbp - 0x508], 0	       575	push.c	FUNCTION_22
0x1795	    0x488d852cf9ff	                  lea rax, [rbp - 0x6d4]	       575	push.c	FUNCTION_22
0x179c	    0x48898500fbff	            mov qword [rbp - 0x500], rax	       575	push.c	FUNCTION_22
0x17a3	    0x48c78510fbff	              mov qword [rbp - 0x4f0], 0	       575	push.c	FUNCTION_22
0x17ae	    0xc78518fbffff	              mov dword [rbp - 0x4e8], 2	       575	push.c	FUNCTION_22
0x17b8	    0x48c78528fbff	              mov qword [rbp - 0x4d8], 1	       575	push.c	FUNCTION_22
0x17c3	    0xc78530fbffff	              mov dword [rbp - 0x4d0], 4	       575	push.c	FUNCTION_22
0x17cd	    0xc78534fbffff	          mov dword [rbp - 0x4cc], 0x6e 	       575	push.c	FUNCTION_22
0x17d7	    0x48c78538fbff	              mov qword [rbp - 0x4c8], 0	       575	push.c	FUNCTION_22
0x17e2	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x17e9	    0x48898540fbff	            mov qword [rbp - 0x4c0], rax	       575	push.c	FUNCTION_22
0x17f0	    0x48c78550fbff	              mov qword [rbp - 0x4b0], 0	       575	push.c	FUNCTION_22
0x17fb	    0xc78558fbffff	              mov dword [rbp - 0x4a8], 2	       575	push.c	FUNCTION_22
0x1805	    0x48c78568fbff	              mov qword [rbp - 0x498], 4	       575	push.c	FUNCTION_22
0x1810	    0xc78570fbffff	              mov dword [rbp - 0x490], 4	       575	push.c	FUNCTION_22
0x181a	    0x48c78578fbff	              mov qword [rbp - 0x488], 0	       575	push.c	FUNCTION_22
0x1825	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x182c	    0x48898580fbff	            mov qword [rbp - 0x480], rax	       575	push.c	FUNCTION_22
0x1833	    0x48c78590fbff	              mov qword [rbp - 0x470], 0	       575	push.c	FUNCTION_22
0x183e	    0xc78598fbffff	              mov dword [rbp - 0x468], 2	       575	push.c	FUNCTION_22
0x1848	    0x48c785a8fbff	          mov qword [rbp - 0x458], 0x10 	       575	push.c	FUNCTION_22
0x1853	    0xc785b0fbffff	              mov dword [rbp - 0x450], 4	       575	push.c	FUNCTION_22
0x185d	    0xc785b4fbffff	          mov dword [rbp - 0x44c], 0x66 	       575	push.c	FUNCTION_22
0x1867	    0x48c785b8fbff	              mov qword [rbp - 0x448], 0	       575	push.c	FUNCTION_22
0x1872	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x1879	    0x488985c0fbff	            mov qword [rbp - 0x440], rax	       575	push.c	FUNCTION_22
0x1880	    0x48c785d0fbff	              mov qword [rbp - 0x430], 0	       575	push.c	FUNCTION_22
0x188b	    0xc785d8fbffff	              mov dword [rbp - 0x428], 2	       575	push.c	FUNCTION_22
0x1895	    0x48c785e8fbff	              mov qword [rbp - 0x418], 2	       575	push.c	FUNCTION_22
0x18a0	    0xc785f0fbffff	           mov dword [rbp - 0x410], 0xc 	       575	push.c	FUNCTION_22
0x18aa	    0x48c785f8fbff	              mov qword [rbp - 0x408], 0	       575	push.c	FUNCTION_22
0x18b5	    0x48c78500fcff	              mov qword [rbp - 0x400], 0	       575	push.c	FUNCTION_22
0x18c0	    0x48c78508fcff	              mov qword [rbp - 0x3f8], 0	       575	push.c	FUNCTION_22
0x18cb	    0x48c78510fcff	              mov qword [rbp - 0x3f0], 0	       575	push.c	FUNCTION_22
0x18d6	    0xc78518fcffff	              mov dword [rbp - 0x3e8], 1	       575	push.c	FUNCTION_22
0x18e0	    0x48c78520fcff	              mov qword [rbp - 0x3e0], 0	       575	push.c	FUNCTION_22
0x18eb	    0xc78530fcffff	           mov dword [rbp - 0x3d0], 0xc 	       575	push.c	FUNCTION_22
0x18f5	    0x48c78538fcff	              mov qword [rbp - 0x3c8], 0	       575	push.c	FUNCTION_22
0x1900	    0x48c78540fcff	              mov qword [rbp - 0x3c0], 0	       575	push.c	FUNCTION_22
0x190b	    0x48c78548fcff	              mov qword [rbp - 0x3b8], 0	       575	push.c	FUNCTION_22
0x1916	    0x48c78550fcff	              mov qword [rbp - 0x3b0], 0	       575	push.c	FUNCTION_22
0x1921	    0xc78558fcffff	              mov dword [rbp - 0x3a8], 1	       575	push.c	FUNCTION_22
0x192b	    0x48c78560fcff	              mov qword [rbp - 0x3a0], 0	       575	push.c	FUNCTION_22
0x1936	    0xc78570fcffff	              mov dword [rbp - 0x390], 7	       575	push.c	FUNCTION_22
0x1940	    0x48c78578fcff	              mov qword [rbp - 0x388], 0	       575	push.c	FUNCTION_22
0x194b	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	       575	push.c	FUNCTION_22
0x1956	    0x48c78590fcff	              mov qword [rbp - 0x370], 0	       575	push.c	FUNCTION_22
0x1961	    0xc78598fcffff	         mov dword [rbp - 0x368], 0x202 	       575	push.c	FUNCTION_22
0x196b	    0x48c785a8fcff	              mov qword [rbp - 0x358], 1	       575	push.c	FUNCTION_22
0x1976	    0xc785b0fcffff	              mov dword [rbp - 0x350], 9	       575	push.c	FUNCTION_22
0x1980	    0x48c785b8fcff	              mov qword [rbp - 0x348], 0	       575	push.c	FUNCTION_22
0x198b	    0x48c785c0fcff	              mov qword [rbp - 0x340], 0	       575	push.c	FUNCTION_22
0x1996	    0x48c785c8fcff	              mov qword [rbp - 0x338], 0	       575	push.c	FUNCTION_22
0x19a1	    0x48c785d0fcff	              mov qword [rbp - 0x330], 0	       575	push.c	FUNCTION_22
0x19ac	    0xc785f0fcffff	              mov dword [rbp - 0x310], 9	       575	push.c	FUNCTION_22
0x19b6	    0x48c785f8fcff	              mov qword [rbp - 0x308], 0	       575	push.c	FUNCTION_22
0x19c1	    0x48c78500fdff	              mov qword [rbp - 0x300], 0	       575	push.c	FUNCTION_22
0x19cc	    0x48c78508fdff	              mov qword [rbp - 0x2f8], 0	       575	push.c	FUNCTION_22
0x19d7	    0x48c78510fdff	              mov qword [rbp - 0x2f0], 0	       575	push.c	FUNCTION_22
0x19e2	    0xc78530fdffff	              mov dword [rbp - 0x2d0], 4	       575	push.c	FUNCTION_22
0x19ec	    0xc78534fdffff	          mov dword [rbp - 0x2cc], 0x75 	       575	push.c	FUNCTION_22
0x19f6	    0x48c78538fdff	              mov qword [rbp - 0x2c8], 0	       575	push.c	FUNCTION_22
0x1a01	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x1a08	    0x48898540fdff	            mov qword [rbp - 0x2c0], rax	       575	push.c	FUNCTION_22
0x1a0f	    0x48c78550fdff	              mov qword [rbp - 0x2b0], 0	       575	push.c	FUNCTION_22
0x1a1a	    0xc78558fdffff	              mov dword [rbp - 0x2a8], 2	       575	push.c	FUNCTION_22
0x1a24	    0x48c78568fdff	          mov qword [rbp - 0x298], 0x20 	       575	push.c	FUNCTION_22
0x1a2f	    0xc78570fdffff	              mov dword [rbp - 0x290], 7	       575	push.c	FUNCTION_22
0x1a39	    0x48c78578fdff	              mov qword [rbp - 0x288], 0	       575	push.c	FUNCTION_22
0x1a44	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	       575	push.c	FUNCTION_22
0x1a4f	    0x48c78590fdff	              mov qword [rbp - 0x270], 0	       575	push.c	FUNCTION_22
0x1a5a	    0xc78598fdffff	              mov dword [rbp - 0x268], 2	       575	push.c	FUNCTION_22
0x1a64	    0x48c785a8fdff	              mov qword [rbp - 0x258], 1	       575	push.c	FUNCTION_22
0x1a6f	    0xc785b0fdffff	              mov dword [rbp - 0x250], 4	       575	push.c	FUNCTION_22
0x1a79	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	       575	push.c	FUNCTION_22
0x1a84	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x1a8b	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	       575	push.c	FUNCTION_22
0x1a92	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	       575	push.c	FUNCTION_22
0x1a9d	    0xc785d8fdffff	              mov dword [rbp - 0x228], 2	       575	push.c	FUNCTION_22
0x1aa7	    0x48c785e8fdff	          mov qword [rbp - 0x218], 0x80 	       575	push.c	FUNCTION_22
0x1ab2	    0xc785f0fdffff	              mov dword [rbp - 0x210], 4	       575	push.c	FUNCTION_22
0x1abc	    0x48c785f8fdff	              mov qword [rbp - 0x208], 0	       575	push.c	FUNCTION_22
0x1ac7	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x1ace	    0x48898500feff	            mov qword [rbp - 0x200], rax	       575	push.c	FUNCTION_22
0x1ad5	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	       575	push.c	FUNCTION_22
0x1ae0	    0xc78518feffff	              mov dword [rbp - 0x1e8], 2	       575	push.c	FUNCTION_22
0x1aea	    0x48c78528feff	         mov qword [rbp - 0x1d8], 0x200 	       575	push.c	FUNCTION_22
0x1af5	    0xc78530feffff	              mov dword [rbp - 0x1d0], 4	       575	push.c	FUNCTION_22
0x1aff	    0x48c78538feff	              mov qword [rbp - 0x1c8], 0	       575	push.c	FUNCTION_22
0x1b0a	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x1b11	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	       575	push.c	FUNCTION_22
0x1b18	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	       575	push.c	FUNCTION_22
0x1b23	    0xc78558feffff	              mov dword [rbp - 0x1a8], 2	       575	push.c	FUNCTION_22
0x1b2d	    0x48c78568feff	         mov qword [rbp - 0x198], 0x400 	       575	push.c	FUNCTION_22
0x1b38	    0xc78570feffff	           mov dword [rbp - 0x190], 0xc 	       575	push.c	FUNCTION_22
0x1b42	    0x48c78578feff	              mov qword [rbp - 0x188], 0	       575	push.c	FUNCTION_22
0x1b4d	    0x488d8530f9ff	                  lea rax, [rbp - 0x6d0]	       575	push.c	FUNCTION_22
0x1b54	    0x48898580feff	            mov qword [rbp - 0x180], rax	       575	push.c	FUNCTION_22
0x1b5b	    0x48c78588feff	              mov qword [rbp - 0x178], 0	       575	push.c	FUNCTION_22
0x1b66	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       575	push.c	FUNCTION_22
0x1b71	    0xc78598feffff	              mov dword [rbp - 0x168], 1	       575	push.c	FUNCTION_22
0x1b7b	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	       575	push.c	FUNCTION_22
0x1b86	    0xc785b0feffff	              mov dword [rbp - 0x150], 4	       575	push.c	FUNCTION_22
0x1b90	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       575	push.c	FUNCTION_22
0x1b9b	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x1ba2	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       575	push.c	FUNCTION_22
0x1ba9	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       575	push.c	FUNCTION_22
0x1bb4	    0xc785d8feffff	              mov dword [rbp - 0x128], 2	       575	push.c	FUNCTION_22
0x1bbe	    0x48c785e8feff	         mov qword [rbp - 0x118], 0x2000	       575	push.c	FUNCTION_22
0x1bc9	    0xc785f0feffff	           mov dword [rbp - 0x110], 0xc 	       575	push.c	FUNCTION_22
0x1bd3	    0xc785f4feffff	          mov dword [rbp - 0x10c], 0x6f 	       575	push.c	FUNCTION_22
0x1bdd	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       575	push.c	FUNCTION_22
0x1be8	    0x488d8550f9ff	                  lea rax, [rbp - 0x6b0]	       575	push.c	FUNCTION_22
0x1bef	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       575	push.c	FUNCTION_22
0x1bf6	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	       575	push.c	FUNCTION_22
0x1c01	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       575	push.c	FUNCTION_22
0x1c0c	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       575	push.c	FUNCTION_22
0x1c17	    0xc78530ffffff	               mov dword [rbp - 0xd0], 7	       575	push.c	FUNCTION_22
0x1c21	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x34 	       575	push.c	FUNCTION_22
0x1c2b	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       575	push.c	FUNCTION_22
0x1c36	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       575	push.c	FUNCTION_22
0x1c41	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       575	push.c	FUNCTION_22
0x1c4c	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	       575	push.c	FUNCTION_22
0x1c56	    0x48c78568ffff	               mov qword [rbp - 0x98], 1	       575	push.c	FUNCTION_22
0x1c61	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	       575	push.c	FUNCTION_22
0x1c6b	    0xc78574ffffff	           mov dword [rbp - 0x8c], 0x36 	       575	push.c	FUNCTION_22
0x1c75	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       575	push.c	FUNCTION_22
0x1c80	    0x48c745800000	               mov qword [rbp - 0x80], 0	       575	push.c	FUNCTION_22
0x1c88	    0x48c745900000	               mov qword [rbp - 0x70], 0	       575	push.c	FUNCTION_22
0x1c90	    0xc74598020000	               mov dword [rbp - 0x68], 2	       575	push.c	FUNCTION_22
0x1c97	    0x48c745a80200	               mov qword [rbp - 0x58], 2	       575	push.c	FUNCTION_22
0x1c9f	      0xbf00000000	                              mov edi, 0	       616	push.c	FUNCTION_22	CALL_49
0x1ca4	      0xe800000000	                          call 0x4001ce9	       616	push.c	FUNCTION_22	CALL_49
0x1ca9	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       617	push.c	FUNCTION_22	CALL_50
0x1cb0	          0x4889c6	                            mov rsi, rax	       617	push.c	FUNCTION_22	CALL_50
0x1cb3	      0xbf00000000	                              mov edi, 0	       617	push.c	FUNCTION_22	CALL_50
0x1cb8	      0xe800000000	                          call 0x4001cfd	       617	push.c	FUNCTION_22	CALL_50
0x1cbd	    0x488d8d70f9ff	                  lea rcx, [rbp - 0x690]	       618	push.c	FUNCTION_22	CALL_51
0x1cc4	    0x488b9508f9ff	            mov rdx, qword [rbp - 0x6f8]	       618	push.c	FUNCTION_22	CALL_51
0x1ccb	    0x488bb510f9ff	            mov rsi, qword [rbp - 0x6f0]	       618	push.c	FUNCTION_22	CALL_51
0x1cd2	    0x8b851cf9ffff	            mov eax, dword [rbp - 0x6e4]	       618	push.c	FUNCTION_22	CALL_51
0x1cd8	    0x41b900000000	                              mov r9d, 0	       618	push.c	FUNCTION_22	CALL_51
0x1cde	    0x41b800000000	                              mov r8d, 0	       618	push.c	FUNCTION_22	CALL_51
0x1ce4	            0x89c7	                            mov edi, eax	       618	push.c	FUNCTION_22	CALL_51
0x1ce6	      0xe800000000	                          call 0x4001d2b	       618	push.c	FUNCTION_22	CALL_51
0x1ceb	    0x89851cf9ffff	            mov dword [rbp - 0x6e4], eax	       618	push.c	FUNCTION_22	CALL_51
0x1cf1	    0x8b8558f9ffff	            mov eax, dword [rbp - 0x6a8]	       619	push.c	FUNCTION_22
0x1cf7	            0x85c0	                           test eax, eax	       621	push.c	FUNCTION_22
0x1cf9	            0x7409	                            je 0x4001d44	       621	push.c	FUNCTION_22
0x1cfb	    0x488d8550f9ff	                  lea rax, [rbp - 0x6b0]	       621	push.c	FUNCTION_22
0x1d02	            0xeb05	                           jmp 0x4001d49	       621	push.c	FUNCTION_22
0x1d04	      0xb800000000	                              mov eax, 0	       621	push.c	FUNCTION_22
0x1d09	    0x48898548f9ff	            mov qword [rbp - 0x6b8], rax	       619	push.c	FUNCTION_22
0x1d10	    0x8b9530f9ffff	            mov edx, dword [rbp - 0x6d0]	       622	push.c	FUNCTION_22	CALL_52
0x1d16	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       622	push.c	FUNCTION_22	CALL_52
0x1d1d	            0x89d6	                            mov esi, edx	       622	push.c	FUNCTION_22	CALL_52
0x1d1f	          0x4889c7	                            mov rdi, rax	       622	push.c	FUNCTION_22	CALL_52
0x1d22	      0xe83df4ffff	            call sym.set_push_cert_flags	       622	push.c	FUNCTION_22	CALL_52
0x1d27	    0x8b0500000000	            mov eax, dword [0x04001d6d] 	       624	push.c	FUNCTION_22	IF_1
0x1d2d	            0x85c0	                           test eax, eax	       624	push.c	FUNCTION_22	IF_1
0x1d2f	            0x742e	                            je 0x4001d9f	       624	push.c	FUNCTION_22	IF_1
0x1d31	    0x8b852cf9ffff	            mov eax, dword [rbp - 0x6d4]	       624	push.c	FUNCTION_22	IF_1
0x1d37	            0x85c0	                           test eax, eax	       624	push.c	FUNCTION_22	IF_1
0x1d39	            0x750d	                           jne 0x4001d88	       624	push.c	FUNCTION_22	IF_1
0x1d3b	    0x8b8528f9ffff	            mov eax, dword [rbp - 0x6d8]	       624	push.c	FUNCTION_22	IF_1
0x1d41	          0x83e009	                              and eax, 9	       624	push.c	FUNCTION_22	IF_1
0x1d44	            0x85c0	                           test eax, eax	       624	push.c	FUNCTION_22	IF_1
0x1d46	            0x7417	                            je 0x4001d9f	       624	push.c	FUNCTION_22	IF_1
0x1d48	      0xbf00000000	                              mov edi, 0	       625	push.c	FUNCTION_22	CALL_54
0x1d4d	      0xe861e3ffff	                               call sym.	       625	push.c	FUNCTION_22	CALL_54
0x1d52	          0x4889c7	                            mov rdi, rax	       625	push.c	FUNCTION_22	CALL_54
0x1d55	      0xb800000000	                              mov eax, 0	       625	push.c	FUNCTION_22	CALL_54
0x1d5a	      0xe800000000	                          call 0x4001d9f	       625	push.c	FUNCTION_22	CALL_54
0x1d5f	    0x8b0500000000	            mov eax, dword [0x04001da5] 	       626	push.c	FUNCTION_22	IF_2
0x1d65	            0x85c0	                           test eax, eax	       626	push.c	FUNCTION_22	IF_2
0x1d67	            0x7420	                            je 0x4001dc9	       626	push.c	FUNCTION_22	IF_2
0x1d69	    0x83bd1cf9ffff	              cmp dword [rbp - 0x6e4], 1	       626	push.c	FUNCTION_22	IF_2
0x1d70	            0x7f17	                            jg 0x4001dc9	       626	push.c	FUNCTION_22	IF_2
0x1d72	      0xbf00000000	                              mov edi, 0	       627	push.c	FUNCTION_22	CALL_56
0x1d77	      0xe837e3ffff	                               call sym.	       627	push.c	FUNCTION_22	CALL_56
0x1d7c	          0x4889c7	                            mov rdi, rax	       627	push.c	FUNCTION_22	CALL_56
0x1d7f	      0xb800000000	                              mov eax, 0	       627	push.c	FUNCTION_22	CALL_56
0x1d84	      0xe800000000	                          call 0x4001dc9	       627	push.c	FUNCTION_22	CALL_56
0x1d89	    0x8b0500000000	            mov eax, dword [0x04001dcf] 	       629	push.c	FUNCTION_22	IF_3
0x1d8f	          0x83f8fc	             cmp eax, 0xfffffffffffffffc	       629	push.c	FUNCTION_22	IF_3
0x1d92	            0x7511	                           jne 0x4001de5	       629	push.c	FUNCTION_22	IF_3
0x1d94	    0x8b8528f9ffff	            mov eax, dword [rbp - 0x6d8]	       630	push.c	FUNCTION_22	IF_3
0x1d9a	          0x83c840	                            or eax, 0x40	       630	push.c	FUNCTION_22	IF_3
0x1d9d	    0x898528f9ffff	            mov dword [rbp - 0x6d8], eax	       630	push.c	FUNCTION_22	IF_3
0x1da3	            0xeb36	                           jmp 0x4001e1b	       630	push.c	FUNCTION_22	IF_3
0x1da5	    0x8b0500000000	            mov eax, dword [0x04001deb] 	       631	push.c	FUNCTION_22	ELSE_1	IF_4
0x1dab	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       631	push.c	FUNCTION_22	ELSE_1	IF_4
0x1dae	            0x7511	                           jne 0x4001e01	       631	push.c	FUNCTION_22	ELSE_1	IF_4
0x1db0	    0x8b8528f9ffff	            mov eax, dword [rbp - 0x6d8]	       632	push.c	FUNCTION_22	ELSE_1	IF_4
0x1db6	          0x80cc01	                                or ah, 1	       632	push.c	FUNCTION_22	ELSE_1	IF_4
0x1db9	    0x898528f9ffff	            mov dword [rbp - 0x6d8], eax	       632	push.c	FUNCTION_22	ELSE_1	IF_4
0x1dbf	            0xeb1a	                           jmp 0x4001e1b	       632	push.c	FUNCTION_22	ELSE_1	IF_4
0x1dc1	    0x8b0500000000	            mov eax, dword [0x04001e07] 	       633	push.c	FUNCTION_22	ELSE_2	IF_5
0x1dc7	          0x83f8fb	             cmp eax, 0xfffffffffffffffb	       633	push.c	FUNCTION_22	ELSE_2	IF_5
0x1dca	            0x750f	                           jne 0x4001e1b	       633	push.c	FUNCTION_22	ELSE_2	IF_5
0x1dcc	    0x8b8528f9ffff	            mov eax, dword [rbp - 0x6d8]	       634	push.c	FUNCTION_22	ELSE_2	IF_5
0x1dd2	          0x80cc80	                             or ah, 0x80	       634	push.c	FUNCTION_22	ELSE_2	IF_5
0x1dd5	    0x898528f9ffff	            mov dword [rbp - 0x6d8], eax	       634	push.c	FUNCTION_22	ELSE_2	IF_5
0x1ddb	    0x8b852cf9ffff	            mov eax, dword [rbp - 0x6d4]	       636	push.c	FUNCTION_22	IF_6
0x1de1	            0x85c0	                           test eax, eax	       636	push.c	FUNCTION_22	IF_6
0x1de3	            0x740a	                            je 0x4001e2f	       636	push.c	FUNCTION_22	IF_6
0x1de5	      0xbf00000000	                              mov edi, 0	       637	push.c	FUNCTION_22	CALL_57
0x1dea	      0xe883e3ffff	                    call sym.add_refspec	       637	push.c	FUNCTION_22	CALL_57
0x1def	    0x83bd1cf9ffff	              cmp dword [rbp - 0x6e4], 0	       639	push.c	FUNCTION_22	IF_7
0x1df6	            0x7e37	                           jle 0x4001e6f	       639	push.c	FUNCTION_22	IF_7
0x1df8	    0x488b8510f9ff	            mov rax, qword [rbp - 0x6f0]	       640	push.c	FUNCTION_22	IF_7
0x1dff	          0x488b00	                    mov rax, qword [rax]	       640	push.c	FUNCTION_22	IF_7
0x1e02	    0x48898538f9ff	            mov qword [rbp - 0x6c8], rax	       640	push.c	FUNCTION_22	IF_7
0x1e09	    0x488b8538f9ff	            mov rax, qword [rbp - 0x6c8]	       641	push.c	FUNCTION_22	IF_7	CALL_58
0x1e10	    0x8b951cf9ffff	            mov edx, dword [rbp - 0x6e4]	       641	push.c	FUNCTION_22	IF_7	CALL_58
0x1e16	          0x8d72ff	                      lea esi, [rdx - 1]	       641	push.c	FUNCTION_22	IF_7	CALL_58
0x1e19	    0x488b9510f9ff	            mov rdx, qword [rbp - 0x6f0]	       641	push.c	FUNCTION_22	IF_7	CALL_58
0x1e20	        0x488d4a08	                      lea rcx, [rdx + 8]	       641	push.c	FUNCTION_22	IF_7	CALL_58
0x1e24	          0x4889c2	                            mov rdx, rax	       641	push.c	FUNCTION_22	IF_7	CALL_58
0x1e27	          0x4889cf	                            mov rdi, rcx	       641	push.c	FUNCTION_22	IF_7	CALL_58
0x1e2a	      0xe803e6ffff	                   call sym.set_refspecs	       641	push.c	FUNCTION_22	IF_7	CALL_58
0x1e2f	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       644	push.c	FUNCTION_22	CALL_59
0x1e36	          0x488b00	                    mov rax, qword [rax]	       644	push.c	FUNCTION_22	CALL_59
0x1e39	    0x48898540f9ff	            mov qword [rbp - 0x6c0], rax	       644	push.c	FUNCTION_22	CALL_59
0x1e40	            0xeb3b	                           jmp 0x4001ebd	       644	push.c	FUNCTION_22	CALL_59
0x1e42	    0x488b8540f9ff	            mov rax, qword [rbp - 0x6c0]	       645	push.c	FUNCTION_22	IF_8	CALL_60
0x1e49	          0x488b00	                    mov rax, qword [rax]	       645	push.c	FUNCTION_22	IF_8	CALL_60
0x1e4c	      0xbe0a000000	                            mov esi, 0xa	       645	push.c	FUNCTION_22	IF_8	CALL_60
0x1e51	          0x4889c7	                            mov rdi, rax	       645	push.c	FUNCTION_22	IF_8	CALL_60
0x1e54	      0xe800000000	                          call 0x4001e99	       645	push.c	FUNCTION_22	IF_8	CALL_60
0x1e59	          0x4885c0	                           test rax, rax	       645	push.c	FUNCTION_22	IF_8	CALL_60
0x1e5c	            0x7417	                            je 0x4001eb5	       645	push.c	FUNCTION_22	IF_8	CALL_60
0x1e5e	      0xbf00000000	                              mov edi, 0	       646	push.c	FUNCTION_22	CALL_62
0x1e63	      0xe84be2ffff	                               call sym.	       646	push.c	FUNCTION_22	CALL_62
0x1e68	          0x4889c7	                            mov rdi, rax	       646	push.c	FUNCTION_22	CALL_62
0x1e6b	      0xb800000000	                              mov eax, 0	       646	push.c	FUNCTION_22	CALL_62
0x1e70	      0xe800000000	                          call 0x4001eb5	       646	push.c	FUNCTION_22	CALL_62
0x1e75	    0x48838540f9ff	           add qword [rbp - 0x6c0], 0x10	       644	push.c	FUNCTION_22	CALL_59
0x1e7d	    0x4883bd40f9ff	              cmp qword [rbp - 0x6c0], 0	       644	push.c	FUNCTION_22	CALL_59
0x1e85	            0x7426	                            je 0x4001eed	       644	push.c	FUNCTION_22	CALL_59
0x1e87	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       644	push.c	FUNCTION_22	CALL_59
0x1e8e	          0x488b10	                    mov rdx, qword [rax]	       644	push.c	FUNCTION_22	CALL_59
0x1e91	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       644	push.c	FUNCTION_22	CALL_59
0x1e98	          0x8b4008	                mov eax, dword [rax + 8]	       644	push.c	FUNCTION_22	CALL_59
0x1e9b	            0x89c0	                            mov eax, eax	       644	push.c	FUNCTION_22	CALL_59
0x1e9d	        0x48c1e004	                              shl rax, 4	       644	push.c	FUNCTION_22	CALL_59
0x1ea1	          0x4801d0	                            add rax, rdx	       644	push.c	FUNCTION_22	CALL_59
0x1ea4	    0x483b8540f9ff	            cmp rax, qword [rbp - 0x6c0]	       644	push.c	FUNCTION_22	CALL_59
0x1eab	            0x7795	                            ja 0x4001e82	       644	push.c	FUNCTION_22	CALL_59
0x1ead	    0x8b8d28f9ffff	            mov ecx, dword [rbp - 0x6d8]	       648	push.c	FUNCTION_22	CALL_63
0x1eb3	    0x488b8538f9ff	            mov rax, qword [rbp - 0x6c8]	       648	push.c	FUNCTION_22	CALL_63
0x1eba	    0x488b9548f9ff	            mov rdx, qword [rbp - 0x6b8]	       648	push.c	FUNCTION_22	CALL_63
0x1ec1	            0x89ce	                            mov esi, ecx	       648	push.c	FUNCTION_22	CALL_63
0x1ec3	          0x4889c7	                            mov rdi, rax	       648	push.c	FUNCTION_22	CALL_63
0x1ec6	      0xe824efffff	                        call sym.do_push	       648	push.c	FUNCTION_22	CALL_63
0x1ecb	    0x898534f9ffff	            mov dword [rbp - 0x6cc], eax	       648	push.c	FUNCTION_22	CALL_63
0x1ed1	    0x488d8550f9ff	                  lea rax, [rbp - 0x6b0]	       649	push.c	FUNCTION_22	CALL_64
0x1ed8	      0xbe00000000	                              mov esi, 0	       649	push.c	FUNCTION_22	CALL_64
0x1edd	          0x4889c7	                            mov rdi, rax	       649	push.c	FUNCTION_22	CALL_64
0x1ee0	      0xe800000000	                          call 0x4001f25	       649	push.c	FUNCTION_22	CALL_64
0x1ee5	      0xbe00000000	                              mov esi, 0	       650	push.c	FUNCTION_22	CALL_65
0x1eea	      0xbf00000000	                              mov edi, 0	       650	push.c	FUNCTION_22	CALL_65
0x1eef	      0xe800000000	                          call 0x4001f34	       650	push.c	FUNCTION_22	CALL_65
0x1ef4	    0x83bd34f9ffff	cmp dword [rbp - 0x6cc], 0xffffffffffffffff	       651	push.c	FUNCTION_22	IF_9
0x1efb	            0x7514	                           jne 0x4001f51	       651	push.c	FUNCTION_22	IF_9
0x1efd	    0x488d8570f9ff	                  lea rax, [rbp - 0x690]	       652	push.c	FUNCTION_22	CALL_66
0x1f04	          0x4889c6	                            mov rsi, rax	       652	push.c	FUNCTION_22	CALL_66
0x1f07	      0xbf00000000	                              mov edi, 0	       652	push.c	FUNCTION_22	CALL_66
0x1f0c	      0xe800000000	                          call 0x4001f51	       652	push.c	FUNCTION_22	CALL_66
0x1f11	    0x8b8534f9ffff	            mov eax, dword [rbp - 0x6cc]	       654	push.c	FUNCTION_22	ELSE_3
0x1f17	        0x488b4df8	                mov rcx, qword [rbp - 8]	       655	push.c	FUNCTION_22
0x1f1b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       655	push.c	FUNCTION_22
0x1f24	            0x7405	                            je 0x4001f6b	       655	push.c	FUNCTION_22
0x1f26	      0xe800000000	                          call 0x4001f6b	       655	push.c	FUNCTION_22
0x1f2b	              0xc9	                                   leave	       655	push.c	FUNCTION_22
0x1f2c	              0xc3	                                     ret	       655	push.c	FUNCTION_22
setup_push_current	IF,1:WHILE,0:functions,0:DO,0:CALL,4:FOR,0:SWITCH,0:ELSE,0	43
0x910	              0x55	                                push rbp	       233	push.c	FUNCTION_9
0x911	          0x4889e5	                            mov rbp, rsp	       233	push.c	FUNCTION_9
0x914	              0x53	                                push rbx	       233	push.c	FUNCTION_9
0x915	        0x4883ec38	                           sub rsp, 0x38	       233	push.c	FUNCTION_9
0x919	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       233	push.c	FUNCTION_9
0x91d	        0x488975c0	             mov qword [rbp - 0x40], rsi	       233	push.c	FUNCTION_9
0x921	    0x64488b042528	                mov rax, qword fs:[0x28]	       233	push.c	FUNCTION_9
0x92a	        0x488945e8	             mov qword [rbp - 0x18], rax	       233	push.c	FUNCTION_9
0x92e	            0x31c0	                            xor eax, eax	       233	push.c	FUNCTION_9
0x930	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       234	push.c	FUNCTION_9
0x938	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       234	push.c	FUNCTION_9
0x940	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       234	push.c	FUNCTION_9
0x948	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       236	push.c	FUNCTION_9	IF_1
0x94d	            0x7522	                           jne 0x40009b1	       236	push.c	FUNCTION_9	IF_1
0x94f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       237	push.c	FUNCTION_9	CALL_2
0x953	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       237	push.c	FUNCTION_9	CALL_2
0x957	      0xbf00000000	                              mov edi, 0	       237	push.c	FUNCTION_9	CALL_2
0x95c	      0xe852f7ffff	                               call sym.	       237	push.c	FUNCTION_9	CALL_2
0x961	          0x4889de	                            mov rsi, rbx	       237	push.c	FUNCTION_9	CALL_2
0x964	          0x4889c7	                            mov rdi, rax	       237	push.c	FUNCTION_9	CALL_2
0x967	      0xb800000000	                              mov eax, 0	       237	push.c	FUNCTION_9	CALL_2
0x96c	      0xe800000000	                          call 0x40009b1	       237	push.c	FUNCTION_9	CALL_2
0x971	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       238	push.c	FUNCTION_9	CALL_3
0x975	        0x488b4808	                mov rcx, qword [rax + 8]	       238	push.c	FUNCTION_9	CALL_3
0x979	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       238	push.c	FUNCTION_9	CALL_3
0x97d	        0x488b5008	                mov rdx, qword [rax + 8]	       238	push.c	FUNCTION_9	CALL_3
0x981	        0x488d45d0	                   lea rax, [rbp - 0x30]	       238	push.c	FUNCTION_9	CALL_3
0x985	      0xbe00000000	                              mov esi, 0	       238	push.c	FUNCTION_9	CALL_3
0x98a	          0x4889c7	                            mov rdi, rax	       238	push.c	FUNCTION_9	CALL_3
0x98d	      0xb800000000	                              mov eax, 0	       238	push.c	FUNCTION_9	CALL_3
0x992	      0xe800000000	                          call 0x40009d7	       238	push.c	FUNCTION_9	CALL_3
0x997	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       239	push.c	FUNCTION_9	CALL_4
0x99b	          0x4889c7	                            mov rdi, rax	       239	push.c	FUNCTION_9	CALL_4
0x99e	      0xe8cff7ffff	                    call sym.add_refspec	       239	push.c	FUNCTION_9	CALL_4
0x9a3	              0x90	                                     nop	       240	push.c	FUNCTION_9
0x9a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       240	push.c	FUNCTION_9
0x9a8	    0x644833042528	                xor rax, qword fs:[0x28]	       240	push.c	FUNCTION_9
0x9b1	            0x7405	                            je 0x40009f8	       240	push.c	FUNCTION_9
0x9b3	      0xe800000000	                          call 0x40009f8	       240	push.c	FUNCTION_9
0x9b8	        0x4883c438	                           add rsp, 0x38	       240	push.c	FUNCTION_9
0x9bc	              0x5b	                                 pop rbx	       240	push.c	FUNCTION_9
0x9bd	              0x5d	                                 pop rbp	       240	push.c	FUNCTION_9
0x9be	              0xc3	                                     ret	       240	push.c	FUNCTION_9
map_refspec	IF,5:WHILE,0:functions,0:DO,0:CALL,9:FOR,0:SWITCH,0:ELSE,0	121
0x247	              0x55	                                push rbp	        74	push.c	FUNCTION_4
0x248	          0x4889e5	                            mov rbp, rsp	        74	push.c	FUNCTION_4
0x24b	        0x4883ec70	                           sub rsp, 0x70	        74	push.c	FUNCTION_4
0x24f	        0x48897da8	             mov qword [rbp - 0x58], rdi	        74	push.c	FUNCTION_4
0x253	        0x488975a0	             mov qword [rbp - 0x60], rsi	        74	push.c	FUNCTION_4
0x257	        0x48895598	             mov qword [rbp - 0x68], rdx	        74	push.c	FUNCTION_4
0x25b	    0x64488b042528	                mov rax, qword fs:[0x28]	        74	push.c	FUNCTION_4
0x264	        0x488945f8	                mov qword [rbp - 8], rax	        74	push.c	FUNCTION_4
0x268	            0x31c0	                            xor eax, eax	        74	push.c	FUNCTION_4
0x26a	    0x48c745b00000	               mov qword [rbp - 0x50], 0	        75	push.c	FUNCTION_4
0x272	        0x488d55b0	                   lea rdx, [rbp - 0x50]	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x276	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x27a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x27e	          0x4889ce	                            mov rsi, rcx	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x281	          0x4889c7	                            mov rdi, rax	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x284	      0xe800000000	                          call 0x40002c9	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x289	          0x83f801	                              cmp eax, 1	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x28c	            0x7409	                            je 0x40002d7	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x28e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        79	push.c	FUNCTION_4	IF_1
0x292	      0xe985010000	                           jmp 0x400045c	        79	push.c	FUNCTION_4	IF_1
0x297	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        81	push.c	FUNCTION_4	IF_2
0x29b	        0x488b4050	            mov rax, qword [rax + 0x50] 	        81	push.c	FUNCTION_4	IF_2
0x29f	          0x4885c0	                           test rax, rax	        81	push.c	FUNCTION_4	IF_2
0x2a2	     0xf84b8000000	                            je 0x40003a0	        81	push.c	FUNCTION_4	IF_2
0x2a8	        0x488d45c0	                   lea rax, [rbp - 0x40]	        83	push.c	FUNCTION_4	IF_2	CALL_2
0x2ac	      0xba18000000	                           mov edx, 0x18	        83	push.c	FUNCTION_4	IF_2	CALL_2
0x2b1	      0xbe00000000	                              mov esi, 0	        83	push.c	FUNCTION_4	IF_2	CALL_2
0x2b6	          0x4889c7	                            mov rdi, rax	        83	push.c	FUNCTION_4	IF_2	CALL_2
0x2b9	      0xe800000000	                          call 0x40002fe	        83	push.c	FUNCTION_4	IF_2	CALL_2
0x2be	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        84	push.c	FUNCTION_4	IF_2
0x2c2	        0x4883c070	                           add rax, 0x70	        84	push.c	FUNCTION_4	IF_2
0x2c6	        0x488945c8	             mov qword [rbp - 0x38], rax	        84	push.c	FUNCTION_4	IF_2
0x2ca	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2ce	          0x8b4858	            mov ecx, dword [rax + 0x58] 	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2d1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2d5	        0x488b4050	            mov rax, qword [rax + 0x50] 	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2d9	        0x488d55c0	                   lea rdx, [rbp - 0x40]	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2dd	            0x89ce	                            mov esi, ecx	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2df	          0x4889c7	                            mov rdi, rax	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2e2	      0xe800000000	                          call 0x4000327	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2e7	            0x85c0	                           test eax, eax	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2e9	            0x7575	                           jne 0x40003a0	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2eb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        86	push.c	FUNCTION_4	IF_2	IF_3
0x2ef	          0x4885c0	                           test rax, rax	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2f2	            0x746c	                            je 0x40003a0	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x2f4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        87	push.c	FUNCTION_4	IF_2	IF_3
0x2fc	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        87	push.c	FUNCTION_4	IF_2	IF_3
0x304	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        87	push.c	FUNCTION_4	IF_2	IF_3
0x30c	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x310	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x314	         0xfb645c0	            movzx eax, byte [rbp - 0x40]	        89	push.c	FUNCTION_4	IF_2	IF_3
0x318	          0x83e001	                              and eax, 1	        89	push.c	FUNCTION_4	IF_2	IF_3
0x31b	            0x84c0	                             test al, al	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x31d	            0x7407	                            je 0x4000366	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x31f	      0xbe00000000	                              mov esi, 0	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x324	            0xeb05	                           jmp 0x400036b	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x326	      0xbe00000000	                              mov esi, 0	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x32b	        0x488d45e0	                   lea rax, [rbp - 0x20]	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x32f	          0x4989c8	                             mov r8, rcx	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x332	          0x4889d1	                            mov rcx, rdx	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x335	          0x4889f2	                            mov rdx, rsi	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x338	      0xbe00000000	                              mov esi, 0	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x33d	          0x4889c7	                            mov rdi, rax	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x340	      0xb800000000	                              mov eax, 0	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x345	      0xe800000000	                          call 0x400038a	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x34a	        0x488d45e0	                   lea rax, [rbp - 0x20]	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x34e	      0xbe00000000	                              mov esi, 0	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x353	          0x4889c7	                            mov rdi, rax	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x356	      0xe800000000	                          call 0x400039b	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x35b	      0xe9bc000000	                           jmp 0x400045c	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x360	    0x8b0500000000	            mov eax, dword [0x040003a6] 	        95	push.c	FUNCTION_4	IF_4
0x366	          0x83f803	                              cmp eax, 3	        95	push.c	FUNCTION_4	IF_4
0x369	     0xf85a9000000	                           jne 0x4000458	        95	push.c	FUNCTION_4	IF_4
0x36f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x373	        0x4883c070	                           add rax, 0x70	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x377	      0xbe00000000	                              mov esi, 0	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x37c	          0x4889c7	                            mov rdi, rax	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x37f	      0xe800000000	                          call 0x40003c4	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x384	            0x85c0	                           test eax, eax	        95	push.c	FUNCTION_4	IF_4
0x386	     0xf848c000000	                            je 0x4000458	        95	push.c	FUNCTION_4	IF_4
0x38c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x390	        0x4883c070	                           add rax, 0x70	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x394	        0x4883c00b	                            add rax, 0xb	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x398	          0x4889c7	                            mov rdi, rax	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x39b	      0xe800000000	                          call 0x40003e0	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x3a0	        0x488945b8	             mov qword [rbp - 0x48], rax	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x3a4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        98	push.c	FUNCTION_4	IF_4	IF_5
0x3a8	          0x8b4030	            mov eax, dword [rax + 0x30] 	        98	push.c	FUNCTION_4	IF_4	IF_5
0x3ab	          0x83f801	                              cmp eax, 1	        98	push.c	FUNCTION_4	IF_4	IF_5
0x3ae	            0x7568	                           jne 0x4000458	        98	push.c	FUNCTION_4	IF_4	IF_5
0x3b0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        98	push.c	FUNCTION_4	IF_4	IF_5
0x3b4	        0x488b4028	            mov rax, qword [rax + 0x28] 	        98	push.c	FUNCTION_4	IF_4	IF_5
0x3b8	          0x488b00	                    mov rax, qword [rax]	        98	push.c	FUNCTION_4	IF_4	IF_5
0x3bb	        0x488b4008	                mov rax, qword [rax + 8]	        98	push.c	FUNCTION_4	IF_4	IF_5
0x3bf	          0x4885c0	                           test rax, rax	        98	push.c	FUNCTION_4	IF_4	IF_5
0x3c2	            0x7454	                            je 0x4000458	        98	push.c	FUNCTION_4	IF_4	IF_5
0x3c4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        99	push.c	FUNCTION_4	IF_4	IF_5
0x3cc	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        99	push.c	FUNCTION_4	IF_4	IF_5
0x3d4	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        99	push.c	FUNCTION_4	IF_4	IF_5
0x3dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       101	push.c	FUNCTION_4	IF_4	IF_5
0x3e0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       101	push.c	FUNCTION_4	IF_4	IF_5
0x3e4	          0x488b00	                    mov rax, qword [rax]	       101	push.c	FUNCTION_4	IF_4	IF_5
0x3e7	        0x488b4808	                mov rcx, qword [rax + 8]	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x3eb	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x3ef	        0x488d45e0	                   lea rax, [rbp - 0x20]	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x3f3	      0xbe00000000	                              mov esi, 0	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x3f8	          0x4889c7	                            mov rdi, rax	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x3fb	      0xb800000000	                              mov eax, 0	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x400	      0xe800000000	                          call 0x4000445	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x405	        0x488d45e0	                   lea rax, [rbp - 0x20]	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x409	      0xbe00000000	                              mov esi, 0	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x40e	          0x4889c7	                            mov rdi, rax	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x411	      0xe800000000	                          call 0x4000456	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x416	            0xeb04	                           jmp 0x400045c	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x418	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       106	push.c	FUNCTION_4
0x41c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       107	push.c	FUNCTION_4
0x420	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       107	push.c	FUNCTION_4
0x429	            0x7405	                            je 0x4000470	       107	push.c	FUNCTION_4
0x42b	      0xe800000000	                          call 0x4000470	       107	push.c	FUNCTION_4
0x430	              0xc9	                                   leave	       107	push.c	FUNCTION_4
0x431	              0xc3	                                     ret	       107	push.c	FUNCTION_4
push_get_color	IF,1:WHILE,0:functions,0:DO,0:CALL,1:FOR,0:SWITCH,0:ELSE,0	22
0x12a	              0x55	                                push rbp	        43	push.c	FUNCTION_2
0x12b	          0x4889e5	                            mov rbp, rsp	        43	push.c	FUNCTION_2
0x12e	        0x4883ec10	                           sub rsp, 0x10	        43	push.c	FUNCTION_2
0x132	          0x897dfc	                mov dword [rbp - 4], edi	        43	push.c	FUNCTION_2
0x135	    0x8b0500000000	            mov eax, dword [0x0400017b] 	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x13b	            0x89c6	                            mov esi, eax	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x13d	      0xbf02000000	                              mov edi, 2	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x142	      0xe800000000	                          call 0x4000187	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x147	            0x85c0	                           test eax, eax	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x149	            0x7420	                            je 0x40001ab	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x14b	          0x8b55fc	                mov edx, dword [rbp - 4]	        45	push.c	FUNCTION_2	IF_1
0x14e	          0x4889d0	                            mov rax, rdx	        45	push.c	FUNCTION_2	IF_1
0x151	        0x48c1e002	                              shl rax, 2	        45	push.c	FUNCTION_2	IF_1
0x155	          0x4801d0	                            add rax, rdx	        45	push.c	FUNCTION_2	IF_1
0x158	          0x4889c2	                            mov rdx, rax	        45	push.c	FUNCTION_2	IF_1
0x15b	        0x48c1e204	                              shl rdx, 4	        45	push.c	FUNCTION_2	IF_1
0x15f	          0x4829c2	                            sub rdx, rax	        45	push.c	FUNCTION_2	IF_1
0x162	    0x488d82000000	                          lea rax, [rdx]	        45	push.c	FUNCTION_2	IF_1
0x169	            0xeb05	                           jmp 0x40001b0	        45	push.c	FUNCTION_2	IF_1
0x16b	      0xb800000000	                              mov eax, 0	        46	push.c	FUNCTION_2
0x170	              0xc9	                                   leave	        47	push.c	FUNCTION_2
0x171	              0xc3	                                     ret	        47	push.c	FUNCTION_2
advise_ref_needs_force	IF,1:WHILE,0:functions,0:DO,0:CALL,2:FOR,0:SWITCH,0:ELSE,0	17
0xb92	              0x55	                                push rbp	       338	push.c	FUNCTION_16
0xb93	          0x4889e5	                            mov rbp, rsp	       338	push.c	FUNCTION_16
0xb96	    0x8b0500000000	            mov eax, dword [0x04000bdc] 	       339	push.c	FUNCTION_16	IF_1
0xb9c	            0x85c0	                           test eax, eax	       339	push.c	FUNCTION_16	IF_1
0xb9e	            0x7423	                            je 0x4000c03	       339	push.c	FUNCTION_16	IF_1
0xba0	    0x8b0500000000	            mov eax, dword [0x04000be6] 	       339	push.c	FUNCTION_16	IF_1
0xba6	            0x85c0	                           test eax, eax	       339	push.c	FUNCTION_16	IF_1
0xba8	            0x7419	                            je 0x4000c03	       339	push.c	FUNCTION_16	IF_1
0xbaa	      0xbf00000000	                              mov edi, 0	       341	push.c	FUNCTION_16	CALL_2
0xbaf	      0xe8fff4ffff	                               call sym.	       341	push.c	FUNCTION_16	CALL_2
0xbb4	          0x4889c7	                            mov rdi, rax	       341	push.c	FUNCTION_16	CALL_2
0xbb7	      0xb800000000	                              mov eax, 0	       341	push.c	FUNCTION_16	CALL_2
0xbbc	      0xe800000000	                          call 0x4000c01	       341	push.c	FUNCTION_16	CALL_2
0xbc1	            0xeb01	                           jmp 0x4000c04	       341	push.c	FUNCTION_16	CALL_2
0xbc3	              0x90	                                     nop	       340	push.c	FUNCTION_16	IF_1
0xbc4	              0x5d	                                 pop rbp	       342	push.c	FUNCTION_16
0xbc5	              0xc3	                                     ret	       342	push.c	FUNCTION_16
