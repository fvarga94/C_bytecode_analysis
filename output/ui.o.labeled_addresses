vcol2col	CALL,3:WHILE,1:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	50
0x502e	              0x55	                                push rbp	      3261	ui.c	FUNCTION_79
0x502f	          0x4889e5	                            mov rbp, rsp	      3261	ui.c	FUNCTION_79
0x5032	        0x4883ec40	                           sub rsp, 0x40	      3261	ui.c	FUNCTION_79
0x5036	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3261	ui.c	FUNCTION_79
0x503a	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3261	ui.c	FUNCTION_79
0x503e	          0x8955cc	             mov dword [rbp - 0x34], edx	      3261	ui.c	FUNCTION_79
0x5041	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3263	ui.c	FUNCTION_79
0x5048	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3267	ui.c	FUNCTION_79	CALL_1
0x504c	        0x488b4008	                mov rax, qword [rax + 8]	      3267	ui.c	FUNCTION_79	CALL_1
0x5050	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      3267	ui.c	FUNCTION_79	CALL_1
0x5054	      0xba00000000	                              mov edx, 0	      3267	ui.c	FUNCTION_79	CALL_1
0x5059	          0x4889ce	                            mov rsi, rcx	      3267	ui.c	FUNCTION_79	CALL_1
0x505c	          0x4889c7	                            mov rdi, rax	      3267	ui.c	FUNCTION_79	CALL_1
0x505f	      0xe800000000	                          call 0x40050a4	      3267	ui.c	FUNCTION_79	CALL_1
0x5064	        0x488945f0	             mov qword [rbp - 0x10], rax	      3267	ui.c	FUNCTION_79	CALL_1
0x5068	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3267	ui.c	FUNCTION_79	CALL_1
0x506c	        0x488945f8	                mov qword [rbp - 8], rax	      3267	ui.c	FUNCTION_79	CALL_1
0x5070	            0xeb47	                           jmp 0x40050f9	      3268	ui.c	FUNCTION_79	WHILE_1
0x5072	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x5075	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x5079	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x507d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x5081	    0x41b800000000	                              mov r8d, 0	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x5087	          0x4889c7	                            mov rdi, rax	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x508a	      0xe800000000	                          call 0x40050cf	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x508f	           0x145ec	             add dword [rbp - 0x14], eax	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x5092	    0x8b0500000000	            mov eax, dword [0x040050d8] 	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x5098	            0x85c0	                           test eax, eax	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x509a	            0x7412	                            je 0x40050ee	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x509c	    0x488b05000000	            mov rax, qword [0x040050e3] 	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x50a3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x50a7	          0x4889d7	                            mov rdi, rdx	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x50aa	            0xffd0	                                call rax	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x50ac	            0xeb05	                           jmp 0x40050f3	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x50ae	      0xb801000000	                              mov eax, 1	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x50b3	            0x4898	                                    cdqe	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x50b5	        0x480145f0	            add qword [rbp - 0x10], rax 	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x50b9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3268	ui.c	FUNCTION_79	WHILE_1
0x50bc	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      3268	ui.c	FUNCTION_79	WHILE_1
0x50bf	            0x7d0b	                           jge 0x400510c	      3268	ui.c	FUNCTION_79	WHILE_1
0x50c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3268	ui.c	FUNCTION_79	WHILE_1
0x50c5	           0xfb600	                   movzx eax, byte [rax]	      3268	ui.c	FUNCTION_79	WHILE_1
0x50c8	            0x84c0	                             test al, al	      3268	ui.c	FUNCTION_79	WHILE_1
0x50ca	            0x75a6	                           jne 0x40050b2	      3268	ui.c	FUNCTION_79	WHILE_1
0x50cc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3273	ui.c	FUNCTION_79
0x50d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      3273	ui.c	FUNCTION_79
0x50d4	          0x4829c2	                            sub rdx, rax	      3273	ui.c	FUNCTION_79
0x50d7	          0x4889d0	                            mov rax, rdx	      3273	ui.c	FUNCTION_79
0x50da	              0xc9	                                   leave	      3274	ui.c	FUNCTION_79
0x50db	              0xc3	                                     ret	      3274	ui.c	FUNCTION_79
clip_isautosel_star	CALL,1:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	16
0xcbd	              0x55	                                push rbp	       688	ui.c	FUNCTION_23
0xcbe	          0x4889e5	                            mov rbp, rsp	       688	ui.c	FUNCTION_23
0xcc1	    0x8b0500000000	            mov eax, dword [0x04000d07] 	       691	ui.c	FUNCTION_23	CALL_1
0xcc7	            0x85c0	                           test eax, eax	       691	ui.c	FUNCTION_23	CALL_1
0xcc9	            0x741f	                            je 0x4000d2a	       691	ui.c	FUNCTION_23	CALL_1
0xccb	    0x488b05000000	            mov rax, qword [0x04000d12] 	       691	ui.c	FUNCTION_23	CALL_1
0xcd2	      0xbe61000000	                           mov esi, 0x61	       691	ui.c	FUNCTION_23	CALL_1
0xcd7	          0x4889c7	                            mov rdi, rax	       691	ui.c	FUNCTION_23	CALL_1
0xcda	      0xe800000000	                          call 0x4000d1f	       691	ui.c	FUNCTION_23	CALL_1
0xcdf	          0x4885c0	                           test rax, rax	       691	ui.c	FUNCTION_23	CALL_1
0xce2	           0xf95c0	                                setne al	       691	ui.c	FUNCTION_23	CALL_1
0xce5	           0xfb6c0	                           movzx eax, al	       691	ui.c	FUNCTION_23	CALL_1
0xce8	            0xeb06	                           jmp 0x4000d30	       689	ui.c	FUNCTION_23
0xcea	    0x8b0500000000	            mov eax, dword [0x04000d30] 	       691	ui.c	FUNCTION_23	CALL_1
0xcf0	              0x5d	                                 pop rbp	       694	ui.c	FUNCTION_23
0xcf1	              0xc3	                                     ret	       694	ui.c	FUNCTION_23
ui_wait_for_chars_or_timer	CALL,3:WHILE,1:IF,6:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	70
0x444	              0x55	                                push rbp	       221	ui.c	FUNCTION_4
0x445	          0x4889e5	                            mov rbp, rsp	       221	ui.c	FUNCTION_4
0x448	        0x4883ec30	                           sub rsp, 0x30	       221	ui.c	FUNCTION_4
0x44c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       221	ui.c	FUNCTION_4
0x450	        0x488975e0	             mov qword [rbp - 0x20], rsi	       221	ui.c	FUNCTION_4
0x454	        0x488955d8	             mov qword [rbp - 0x28], rdx	       221	ui.c	FUNCTION_4
0x458	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       221	ui.c	FUNCTION_4
0x45b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       223	ui.c	FUNCTION_4
0x45f	        0x488945f8	                mov qword [rbp - 8], rax	       223	ui.c	FUNCTION_4
0x463	    0x8b0500000000	            mov eax, dword [0x040004a9] 	       224	ui.c	FUNCTION_4
0x469	          0x8945f4	              mov dword [rbp - 0xc], eax	       224	ui.c	FUNCTION_4
0x46c	      0x48837de800	               cmp qword [rbp - 0x18], 0	       227	ui.c	FUNCTION_4	IF_1
0x471	     0xf88aa000000	                            js 0x4000561	       227	ui.c	FUNCTION_4	IF_1
0x477	      0x48837de809	               cmp qword [rbp - 0x18], 9	       227	ui.c	FUNCTION_4	IF_1
0x47c	     0xf8f9f000000	                            jg 0x4000561	       227	ui.c	FUNCTION_4	IF_1
0x482	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       228	ui.c	FUNCTION_4	CALL_1
0x485	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       228	ui.c	FUNCTION_4	CALL_1
0x489	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       228	ui.c	FUNCTION_4	CALL_1
0x48d	      0xbe00000000	                              mov esi, 0	       228	ui.c	FUNCTION_4	CALL_1
0x492	          0x4889cf	                            mov rdi, rcx	       228	ui.c	FUNCTION_4	CALL_1
0x495	            0xffd0	                                call rax	       228	ui.c	FUNCTION_4	CALL_1
0x497	      0xe9a0000000	                           jmp 0x400057c	       228	ui.c	FUNCTION_4	CALL_1
0x49c	      0xe800000000	                          call 0x40004e1	       234	ui.c	FUNCTION_4	WHILE_1	CALL_2
0x4a1	          0x8945f0	             mov dword [rbp - 0x10], eax	       234	ui.c	FUNCTION_4	WHILE_1	CALL_2
0x4a4	    0x8b0500000000	            mov eax, dword [0x040004ea] 	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4aa	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4ad	            0x740a	                            je 0x40004f9	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4af	      0xb800000000	                              mov eax, 0	       238	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4b4	      0xe983000000	                           jmp 0x400057c	       238	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4b9	        0x837df000	               cmp dword [rbp - 0x10], 0	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4bd	            0x7e12	                           jle 0x4000511	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4bf	      0x48837de800	               cmp qword [rbp - 0x18], 0	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4c4	            0x7e12	                           jle 0x4000518	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4c6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4c9	            0x4898	                                    cdqe	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4cb	        0x483b45f8	                cmp rax, qword [rbp - 8]	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4cf	            0x7e07	                           jle 0x4000518	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       241	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4d5	          0x8945f0	             mov dword [rbp - 0x10], eax	       241	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4d8	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4db	          0x4863c8	                         movsxd rcx, eax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4de	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4e1	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4e9	          0x4889cf	                            mov rdi, rcx	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4ec	            0xffd0	                                call rax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4ee	            0x85c0	                           test eax, eax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4f0	            0x7407	                            je 0x4000539	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4f2	      0xb801000000	                              mov eax, 1	       243	ui.c	FUNCTION_4	WHILE_1	IF_4
0x4f7	            0xeb43	                           jmp 0x400057c	       243	ui.c	FUNCTION_4	WHILE_1	IF_4
0x4f9	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4fe	            0x7411	                            je 0x4000551	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x500	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x504	            0x8b00	                    mov eax, dword [rax]	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x506	            0x85c0	                           test eax, eax	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x508	            0x7407	                            je 0x4000551	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x50a	      0xb800000000	                              mov eax, 0	       247	ui.c	FUNCTION_4	WHILE_1	IF_5
0x50f	            0xeb2b	                           jmp 0x400057c	       247	ui.c	FUNCTION_4	WHILE_1	IF_5
0x511	      0x48837de800	               cmp qword [rbp - 0x18], 0	       248	ui.c	FUNCTION_4	WHILE_1	IF_6
0x516	            0x7e09	                           jle 0x4000561	       248	ui.c	FUNCTION_4	WHILE_1	IF_6
0x518	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x51b	            0x4898	                                    cdqe	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x51d	        0x482945f8	                sub qword [rbp - 8], rax	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x521	      0x48837de800	               cmp qword [rbp - 0x18], 0	       230	ui.c	FUNCTION_4	WHILE_1
0x526	     0xf8870ffffff	                            js 0x40004dc	       230	ui.c	FUNCTION_4	WHILE_1
0x52c	      0x48837df800	                  cmp qword [rbp - 8], 0	       230	ui.c	FUNCTION_4	WHILE_1
0x531	     0xf8f65ffffff	                            jg 0x40004dc	       230	ui.c	FUNCTION_4	WHILE_1
0x537	      0xb800000000	                              mov eax, 0	       251	ui.c	FUNCTION_4
0x53c	              0xc9	                                   leave	       252	ui.c	FUNCTION_4
0x53d	              0xc3	                                     ret	       252	ui.c	FUNCTION_4
clip_lose_selection	CALL,13:WHILE,0:IF,4:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	61
0xa27	              0x55	                                push rbp	       550	ui.c	FUNCTION_17
0xa28	          0x4889e5	                            mov rbp, rsp	       550	ui.c	FUNCTION_17
0xa2b	        0x4883ec20	                           sub rsp, 0x20	       550	ui.c	FUNCTION_17
0xa2f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       550	ui.c	FUNCTION_17
0xa33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       552	ui.c	FUNCTION_17
0xa37	          0x8b4004	                mov eax, dword [rax + 4]	       552	ui.c	FUNCTION_17
0xa3a	          0x8945fc	                mov dword [rbp - 4], eax	       552	ui.c	FUNCTION_17
0xa3d	    0xc745f8000000	                  mov dword [rbp - 8], 0	       554	ui.c	FUNCTION_17
0xa44	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       556	ui.c	FUNCTION_17	IF_1
0xa4c	            0x740a	                            je 0x4000a98	       556	ui.c	FUNCTION_17	IF_1
0xa4e	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       556	ui.c	FUNCTION_17	IF_1
0xa56	            0x7507	                           jne 0x4000a9f	       556	ui.c	FUNCTION_17	IF_1
0xa58	    0xc745f8010000	                  mov dword [rbp - 8], 1	       557	ui.c	FUNCTION_17	IF_1
0xa5f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       559	ui.c	FUNCTION_17	CALL_1
0xa63	          0x4889c7	                            mov rdi, rax	       559	ui.c	FUNCTION_17	CALL_1
0xa66	      0xe800000000	                          call 0x4000aab	       559	ui.c	FUNCTION_17	CALL_1
0xa6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       560	ui.c	FUNCTION_17
0xa6f	    0xc74004000000	                  mov dword [rax + 4], 0	       560	ui.c	FUNCTION_17
0xa76	        0x837df800	                  cmp dword [rbp - 8], 0	       561	ui.c	FUNCTION_17	IF_2
0xa7a	            0x740c	                            je 0x4000ac8	       561	ui.c	FUNCTION_17	IF_2
0xa7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	ui.c	FUNCTION_17	CALL_2
0xa80	          0x4889c7	                            mov rdi, rax	       562	ui.c	FUNCTION_17	CALL_2
0xa83	      0xe800000000	                          call 0x4000ac8	       562	ui.c	FUNCTION_17	CALL_2
0xa88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       563	ui.c	FUNCTION_17	CALL_3
0xa8c	          0x4889c7	                            mov rdi, rax	       563	ui.c	FUNCTION_17	CALL_3
0xa8f	      0xe800000000	                          call 0x4000ad4	       563	ui.c	FUNCTION_17	CALL_3
0xa94	        0x837df800	                  cmp dword [rbp - 8], 0	       565	ui.c	FUNCTION_17	IF_3
0xa98	            0x7473	                            je 0x4000b4d	       565	ui.c	FUNCTION_17	IF_3
0xa9a	        0x837dfc00	                  cmp dword [rbp - 4], 0	       570	ui.c	FUNCTION_17	IF_3	IF_4
0xa9e	            0x746d	                            je 0x4000b4d	       570	ui.c	FUNCTION_17	IF_3	IF_4
0xaa0	      0xe800000000	                          call 0x4000ae5	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0xaa5	          0x83f802	                              cmp eax, 2	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0xaa8	            0x740c	                            je 0x4000af6	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0xaaa	      0xe800000000	                          call 0x4000aef	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0xaaf	      0x3d00100000	                         cmp eax, 0x1000	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0xab4	            0x7557	                           jne 0x4000b4d	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0xab6	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       573	ui.c	FUNCTION_17	IF_3	IF_4
0xabe	            0x750c	                           jne 0x4000b0c	       573	ui.c	FUNCTION_17	IF_3	IF_4
0xac0	      0xe800000000	                          call 0x4000b05	       574	ui.c	FUNCTION_17	IF_3	IF_4	CALL_7
0xac5	            0x85c0	                           test eax, eax	       573	ui.c	FUNCTION_17	IF_3	IF_4
0xac7	           0xf95c0	                                setne al	       573	ui.c	FUNCTION_17	IF_3	IF_4
0xaca	            0xeb0a	                           jmp 0x4000b16	       573	ui.c	FUNCTION_17	IF_3	IF_4
0xacc	      0xe800000000	                          call 0x4000b11	       574	ui.c	FUNCTION_17	IF_3	IF_4	CALL_7
0xad1	            0x85c0	                           test eax, eax	       573	ui.c	FUNCTION_17	IF_3	IF_4
0xad3	           0xf95c0	                                setne al	       573	ui.c	FUNCTION_17	IF_3	IF_4
0xad6	            0x84c0	                             test al, al	       573	ui.c	FUNCTION_17	IF_3	IF_4
0xad8	            0x7433	                            je 0x4000b4d	       573	ui.c	FUNCTION_17	IF_3	IF_4
0xada	    0x8b1500000000	            mov edx, dword [0x04000b20] 	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0xae0	    0x8b0500000000	            mov eax, dword [0x04000b26] 	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0xae6	            0x39c2	                            cmp edx, eax	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0xae8	            0x7423	                            je 0x4000b4d	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0xaea	      0xbf19000000	                           mov edi, 0x19	       577	ui.c	FUNCTION_17	IF_3	IF_4	CALL_10
0xaef	      0xe800000000	                          call 0x4000b34	       577	ui.c	FUNCTION_17	IF_3	IF_4	CALL_10
0xaf4	      0xe800000000	                          call 0x4000b39	       578	ui.c	FUNCTION_17	IF_3	IF_4	CALL_11
0xaf9	      0xe800000000	                          call 0x4000b3e	       579	ui.c	FUNCTION_17	IF_3	IF_4	CALL_12
0xafe	      0xbe00000000	                              mov esi, 0	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0xb03	      0xbf01000000	                              mov edi, 1	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0xb08	      0xe800000000	                          call 0x4000b4d	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0xb0d	              0x90	                                     nop	       584	ui.c	FUNCTION_17
0xb0e	              0xc9	                                   leave	       584	ui.c	FUNCTION_17
0xb0f	              0xc3	                                     ret	       584	ui.c	FUNCTION_17
clip_gen_owner_exists	CALL,2:WHILE,0:IF,1:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	16
0x2594	              0x55	                                push rbp	      1563	ui.c	FUNCTION_43
0x2595	          0x4889e5	                            mov rbp, rsp	      1563	ui.c	FUNCTION_43
0x2598	        0x4883ec10	                           sub rsp, 0x10	      1563	ui.c	FUNCTION_43
0x259c	        0x48897df8	                mov qword [rbp - 8], rdi	      1563	ui.c	FUNCTION_43
0x25a0	    0x8b0500000000	            mov eax, dword [0x040025e6] 	      1566	ui.c	FUNCTION_43	IF_1
0x25a6	            0x85c0	                           test eax, eax	      1566	ui.c	FUNCTION_43	IF_1
0x25a8	            0x740e	                            je 0x40025f8	      1566	ui.c	FUNCTION_43	IF_1
0x25aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1567	ui.c	FUNCTION_43	CALL_1
0x25ae	          0x4889c7	                            mov rdi, rax	      1567	ui.c	FUNCTION_43	CALL_1
0x25b1	      0xe800000000	                          call 0x40025f6	      1567	ui.c	FUNCTION_43	CALL_1
0x25b6	            0xeb0c	                           jmp 0x4002604	      1567	ui.c	FUNCTION_43	CALL_1
0x25b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1570	ui.c	FUNCTION_43	CALL_2
0x25bc	          0x4889c7	                            mov rdi, rax	      1570	ui.c	FUNCTION_43	CALL_2
0x25bf	      0xe800000000	                          call 0x4002604	      1570	ui.c	FUNCTION_43	CALL_2
0x25c4	              0xc9	                                   leave	      1574	ui.c	FUNCTION_43
0x25c5	              0xc3	                                     ret	      1574	ui.c	FUNCTION_43
ui_delay	CALL,2:WHILE,0:IF,1:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	24
0x56f	              0x55	                                push rbp	       285	ui.c	FUNCTION_6
0x570	          0x4889e5	                            mov rbp, rsp	       285	ui.c	FUNCTION_6
0x573	        0x4883ec10	                           sub rsp, 0x10	       285	ui.c	FUNCTION_6
0x577	        0x48897df8	                mov qword [rbp - 8], rdi	       285	ui.c	FUNCTION_6
0x57b	          0x8975f4	              mov dword [rbp - 0xc], esi	       285	ui.c	FUNCTION_6
0x57e	    0x8b0500000000	            mov eax, dword [0x040005c4] 	       287	ui.c	FUNCTION_6	IF_1
0x584	            0x85c0	                           test eax, eax	       287	ui.c	FUNCTION_6	IF_1
0x586	            0x741c	                            je 0x40005e4	       287	ui.c	FUNCTION_6	IF_1
0x588	        0x837df400	                cmp dword [rbp - 0xc], 0	       287	ui.c	FUNCTION_6	IF_1
0x58c	            0x7516	                           jne 0x40005e4	       287	ui.c	FUNCTION_6	IF_1
0x58e	    0x8b1500000000	            mov edx, dword [0x040005d4] 	       288	ui.c	FUNCTION_6	CALL_1
0x594	        0x488b45f8	                mov rax, qword [rbp - 8]	       288	ui.c	FUNCTION_6	CALL_1
0x598	            0x89d6	                            mov esi, edx	       288	ui.c	FUNCTION_6	CALL_1
0x59a	          0x4889c7	                            mov rdi, rax	       288	ui.c	FUNCTION_6	CALL_1
0x59d	      0xe800000000	                          call 0x40005e2	       288	ui.c	FUNCTION_6	CALL_1
0x5a2	            0xeb11	                           jmp 0x40005f5	       288	ui.c	FUNCTION_6	CALL_1
0x5a4	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       291	ui.c	FUNCTION_6	CALL_2
0x5a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       291	ui.c	FUNCTION_6	CALL_2
0x5ab	            0x89d6	                            mov esi, edx	       291	ui.c	FUNCTION_6	CALL_2
0x5ad	          0x4889c7	                            mov rdi, rax	       291	ui.c	FUNCTION_6	CALL_2
0x5b0	      0xe800000000	                          call 0x40005f5	       291	ui.c	FUNCTION_6	CALL_2
0x5b5	              0x90	                                     nop	       292	ui.c	FUNCTION_6
0x5b6	              0xc9	                                   leave	       292	ui.c	FUNCTION_6
0x5b7	              0xc3	                                     ret	       292	ui.c	FUNCTION_6
clip_gen_own_selection	CALL,3:WHILE,0:IF,1:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	16
0x2486	              0x55	                                push rbp	      1492	ui.c	FUNCTION_39
0x2487	          0x4889e5	                            mov rbp, rsp	      1492	ui.c	FUNCTION_39
0x248a	        0x4883ec10	                           sub rsp, 0x10	      1492	ui.c	FUNCTION_39
0x248e	        0x48897df8	                mov qword [rbp - 8], rdi	      1492	ui.c	FUNCTION_39
0x2492	    0x8b0500000000	            mov eax, dword [0x040024d8] 	      1495	ui.c	FUNCTION_39	IF_1
0x2498	            0x85c0	                           test eax, eax	      1495	ui.c	FUNCTION_39	IF_1
0x249a	            0x740e	                            je 0x40024ea	      1495	ui.c	FUNCTION_39	IF_1
0x249c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1496	ui.c	FUNCTION_39	CALL_1
0x24a0	          0x4889c7	                            mov rdi, rax	      1496	ui.c	FUNCTION_39	CALL_1
0x24a3	      0xe800000000	                          call 0x40024e8	      1496	ui.c	FUNCTION_39	CALL_1
0x24a8	            0xeb0c	                           jmp 0x40024f6	      1496	ui.c	FUNCTION_39	CALL_1
0x24aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1499	ui.c	FUNCTION_39	CALL_2
0x24ae	          0x4889c7	                            mov rdi, rax	      1499	ui.c	FUNCTION_39	CALL_2
0x24b1	      0xe800000000	                          call 0x40024f6	      1499	ui.c	FUNCTION_39	CALL_2
0x24b6	              0xc9	                                   leave	      1503	ui.c	FUNCTION_39
0x24b7	              0xc3	                                     ret	      1503	ui.c	FUNCTION_39
get_fpos_of_mouse	CALL,3:WHILE,0:IF,7:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	86
0x4eed	              0x55	                                push rbp	      3213	ui.c	FUNCTION_78
0x4eee	          0x4889e5	                            mov rbp, rsp	      3213	ui.c	FUNCTION_78
0x4ef1	        0x4883ec30	                           sub rsp, 0x30	      3213	ui.c	FUNCTION_78
0x4ef5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3213	ui.c	FUNCTION_78
0x4ef9	    0x64488b042528	                mov rax, qword fs:[0x28]	      3213	ui.c	FUNCTION_78
0x4f02	        0x488945f8	                mov qword [rbp - 8], rax	      3213	ui.c	FUNCTION_78
0x4f06	            0x31c0	                            xor eax, eax	      3213	ui.c	FUNCTION_78
0x4f08	    0x8b0500000000	            mov eax, dword [0x04004f4e] 	      3215	ui.c	FUNCTION_78
0x4f0e	          0x8945e8	             mov dword [rbp - 0x18], eax	      3215	ui.c	FUNCTION_78
0x4f11	    0x8b0500000000	            mov eax, dword [0x04004f57] 	      3216	ui.c	FUNCTION_78
0x4f17	          0x8945ec	             mov dword [rbp - 0x14], eax	      3216	ui.c	FUNCTION_78
0x4f1a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3218	ui.c	FUNCTION_78	IF_1
0x4f1d	            0x85c0	                           test eax, eax	      3218	ui.c	FUNCTION_78	IF_1
0x4f1f	            0x7807	                            js 0x4004f68	      3218	ui.c	FUNCTION_78	IF_1
0x4f21	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3218	ui.c	FUNCTION_78	IF_1
0x4f24	            0x85c0	                           test eax, eax	      3218	ui.c	FUNCTION_78	IF_1
0x4f26	            0x790a	                           jns 0x4004f72	      3218	ui.c	FUNCTION_78	IF_1
0x4f28	      0xb800000000	                              mov eax, 0	      3219	ui.c	FUNCTION_78	IF_1
0x4f2d	      0xe9e6000000	                           jmp 0x4005058	      3219	ui.c	FUNCTION_78	IF_1
0x4f32	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      3222	ui.c	FUNCTION_78	CALL_1
0x4f36	        0x488d45e8	                   lea rax, [rbp - 0x18]	      3222	ui.c	FUNCTION_78	CALL_1
0x4f3a	          0x4889d6	                            mov rsi, rdx	      3222	ui.c	FUNCTION_78	CALL_1
0x4f3d	          0x4889c7	                            mov rdi, rax	      3222	ui.c	FUNCTION_78	CALL_1
0x4f40	      0xe800000000	                          call 0x4004f85	      3222	ui.c	FUNCTION_78	CALL_1
0x4f45	        0x488945f0	             mov qword [rbp - 0x10], rax	      3222	ui.c	FUNCTION_78	CALL_1
0x4f49	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3223	ui.c	FUNCTION_78	IF_2
0x4f4e	            0x750a	                           jne 0x4004f9a	      3223	ui.c	FUNCTION_78	IF_2
0x4f50	      0xb800000000	                              mov eax, 0	      3224	ui.c	FUNCTION_78	IF_2
0x4f55	      0xe9be000000	                           jmp 0x4005058	      3224	ui.c	FUNCTION_78	IF_2
0x4f5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3228	ui.c	FUNCTION_78	IF_3
0x4f5e	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      3228	ui.c	FUNCTION_78	IF_3
0x4f64	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3228	ui.c	FUNCTION_78	IF_3
0x4f67	            0x39c2	                            cmp edx, eax	      3228	ui.c	FUNCTION_78	IF_3
0x4f69	            0x7f0a	                            jg 0x4004fb5	      3228	ui.c	FUNCTION_78	IF_3
0x4f6b	      0xb802000000	                              mov eax, 2	      3229	ui.c	FUNCTION_78	IF_3
0x4f70	      0xe9a3000000	                           jmp 0x4005058	      3229	ui.c	FUNCTION_78	IF_3
0x4f75	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3230	ui.c	FUNCTION_78	IF_4
0x4f79	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      3230	ui.c	FUNCTION_78	IF_4
0x4f7f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3230	ui.c	FUNCTION_78	IF_4
0x4f82	            0x39c2	                            cmp edx, eax	      3230	ui.c	FUNCTION_78	IF_4
0x4f84	            0x7f0a	                            jg 0x4004fd0	      3230	ui.c	FUNCTION_78	IF_4
0x4f86	      0xb804000000	                              mov eax, 4	      3231	ui.c	FUNCTION_78	IF_4
0x4f8b	      0xe988000000	                           jmp 0x4005058	      3231	ui.c	FUNCTION_78	IF_4
0x4f90	    0x488b05000000	            mov rax, qword [0x04004fd7] 	      3233	ui.c	FUNCTION_78	IF_5
0x4f97	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      3233	ui.c	FUNCTION_78	IF_5
0x4f9b	            0x7407	                            je 0x4004fe4	      3233	ui.c	FUNCTION_78	IF_5
0x4f9d	      0xb800000000	                              mov eax, 0	      3234	ui.c	FUNCTION_78	IF_5
0x4fa2	            0xeb74	                           jmp 0x4005058	      3234	ui.c	FUNCTION_78	IF_5
0x4fa4	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4fa8	    0x488b05000000	            mov rax, qword [0x04004fef] 	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4faf	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4fb3	        0x488d75e8	                   lea rsi, [rbp - 0x18]	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4fb7	          0x4889c7	                            mov rdi, rax	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4fba	      0xe800000000	                          call 0x4004fff	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4fbf	            0x85c0	                           test eax, eax	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4fc1	            0x7407	                            je 0x400500a	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4fc3	      0xb802000000	                              mov eax, 2	      3238	ui.c	FUNCTION_78	IF_6
0x4fc8	            0xeb4e	                           jmp 0x4005058	      3238	ui.c	FUNCTION_78	IF_6
0x4fca	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3240	ui.c	FUNCTION_78	CALL_3
0x4fcd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3240	ui.c	FUNCTION_78	CALL_3
0x4fd1	          0x488b08	                    mov rcx, qword [rax]	      3240	ui.c	FUNCTION_78	CALL_3
0x4fd4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3240	ui.c	FUNCTION_78	CALL_3
0x4fd8	          0x4889ce	                            mov rsi, rcx	      3240	ui.c	FUNCTION_78	CALL_3
0x4fdb	          0x4889c7	                            mov rdi, rax	      3240	ui.c	FUNCTION_78	CALL_3
0x4fde	      0xe800000000	                          call 0x4005023	      3240	ui.c	FUNCTION_78	CALL_3
0x4fe3	            0x89c2	                            mov edx, eax	      3240	ui.c	FUNCTION_78	CALL_3
0x4fe5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3240	ui.c	FUNCTION_78	CALL_3
0x4fe9	          0x895008	                mov dword [rax + 8], edx	      3240	ui.c	FUNCTION_78	CALL_3
0x4fec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3242	ui.c	FUNCTION_78	IF_7
0x4ff0	          0x8b4008	                mov eax, dword [rax + 8]	      3242	ui.c	FUNCTION_78	IF_7
0x4ff3	            0x85c0	                           test eax, eax	      3242	ui.c	FUNCTION_78	IF_7
0x4ff5	            0x7e11	                           jle 0x4005048	      3242	ui.c	FUNCTION_78	IF_7
0x4ff7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3243	ui.c	FUNCTION_78	IF_7
0x4ffb	          0x8b4008	                mov eax, dword [rax + 8]	      3243	ui.c	FUNCTION_78	IF_7
0x4ffe	          0x8d50ff	                      lea edx, [rax - 1]	      3243	ui.c	FUNCTION_78	IF_7
0x5001	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3243	ui.c	FUNCTION_78	IF_7
0x5005	          0x895008	                mov dword [rax + 8], edx	      3243	ui.c	FUNCTION_78	IF_7
0x5008	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3245	ui.c	FUNCTION_78
0x500c	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3245	ui.c	FUNCTION_78
0x5013	      0xb801000000	                              mov eax, 1	      3247	ui.c	FUNCTION_78
0x5018	        0x488b7df8	                mov rdi, qword [rbp - 8]	      3248	ui.c	FUNCTION_78
0x501c	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3248	ui.c	FUNCTION_78
0x5025	            0x7405	                            je 0x400506c	      3248	ui.c	FUNCTION_78
0x5027	      0xe800000000	                          call 0x400506c	      3248	ui.c	FUNCTION_78
0x502c	              0xc9	                                   leave	      3248	ui.c	FUNCTION_78
0x502d	              0xc3	                                     ret	      3248	ui.c	FUNCTION_78
clip_start_selection	CALL,10:WHILE,0:IF,4:ELSE,1:DO,0:SWITCH,1:functions,0:FOR,0	162
0xe94	              0x55	                                push rbp	       785	ui.c	FUNCTION_27
0xe95	          0x4889e5	                            mov rbp, rsp	       785	ui.c	FUNCTION_27
0xe98	        0x4883ec20	                           sub rsp, 0x20	       785	ui.c	FUNCTION_27
0xe9c	          0x897dec	             mov dword [rbp - 0x14], edi	       785	ui.c	FUNCTION_27
0xe9f	          0x8975e8	             mov dword [rbp - 0x18], esi	       785	ui.c	FUNCTION_27
0xea2	          0x8955e4	             mov dword [rbp - 0x1c], edx	       785	ui.c	FUNCTION_27
0xea5	    0x48c745f80000	                  mov qword [rbp - 8], 0	       786	ui.c	FUNCTION_27
0xead	        0x488b45f8	                mov rax, qword [rbp - 8]	       788	ui.c	FUNCTION_27	IF_1
0xeb1	         0xfb74048	           movzx eax, word [rax + 0x48] 	       788	ui.c	FUNCTION_27	IF_1
0xeb5	        0x6683f802	                               cmp ax, 2	       788	ui.c	FUNCTION_27	IF_1
0xeb9	            0x750c	                           jne 0x4000f07	       788	ui.c	FUNCTION_27	IF_1
0xebb	        0x488b45f8	                mov rax, qword [rbp - 8]	       789	ui.c	FUNCTION_27	CALL_1
0xebf	          0x4889c7	                            mov rdi, rax	       789	ui.c	FUNCTION_27	CALL_1
0xec2	      0xe800000000	                          call 0x4000f07	       789	ui.c	FUNCTION_27	CALL_1
0xec7	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       791	ui.c	FUNCTION_27	CALL_2
0xeca	            0x89c7	                            mov edi, eax	       791	ui.c	FUNCTION_27	CALL_2
0xecc	      0xe800000000	                          call 0x4000f11	       791	ui.c	FUNCTION_27	CALL_2
0xed1	          0x8945e8	             mov dword [rbp - 0x18], eax	       791	ui.c	FUNCTION_27	CALL_2
0xed4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       792	ui.c	FUNCTION_27	CALL_3
0xed7	            0x89c7	                            mov edi, eax	       792	ui.c	FUNCTION_27	CALL_3
0xed9	      0xe800000000	                          call 0x4000f1e	       792	ui.c	FUNCTION_27	CALL_3
0xede	          0x8945ec	             mov dword [rbp - 0x14], eax	       792	ui.c	FUNCTION_27	CALL_3
0xee1	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       794	ui.c	FUNCTION_27	CALL_4
0xee4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       794	ui.c	FUNCTION_27	CALL_4
0xee7	            0x89d6	                            mov esi, edx	       794	ui.c	FUNCTION_27	CALL_4
0xee9	            0x89c7	                            mov edi, eax	       794	ui.c	FUNCTION_27	CALL_4
0xeeb	      0xe800000000	                          call 0x4000f30	       794	ui.c	FUNCTION_27	CALL_4
0xef0	          0x8945ec	             mov dword [rbp - 0x14], eax	       794	ui.c	FUNCTION_27	CALL_4
0xef3	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       797	ui.c	FUNCTION_27
0xef6	          0x4863d0	                         movsxd rdx, eax	       797	ui.c	FUNCTION_27
0xef9	        0x488b45f8	                mov rax, qword [rbp - 8]	       797	ui.c	FUNCTION_27
0xefd	        0x48895008	                mov qword [rax + 8], rdx	       797	ui.c	FUNCTION_27
0xf01	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	ui.c	FUNCTION_27
0xf05	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       798	ui.c	FUNCTION_27
0xf08	          0x895010	             mov dword [rax + 0x10], edx	       798	ui.c	FUNCTION_27
0xf0b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       799	ui.c	FUNCTION_27
0xf0f	        0x488b45f8	                mov rax, qword [rbp - 8]	       799	ui.c	FUNCTION_27
0xf13	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       799	ui.c	FUNCTION_27
0xf17	        0x488b4008	                mov rax, qword [rax + 8]	       799	ui.c	FUNCTION_27
0xf1b	        0x48894118	             mov qword [rcx + 0x18], rax	       799	ui.c	FUNCTION_27
0xf1f	        0x48895120	             mov qword [rcx + 0x20], rdx	       799	ui.c	FUNCTION_27
0xf23	        0x488b45f8	                mov rax, qword [rbp - 8]	       800	ui.c	FUNCTION_27
0xf27	        0x488b4008	                mov rax, qword [rax + 8]	       800	ui.c	FUNCTION_27
0xf2b	            0x89c2	                            mov edx, eax	       800	ui.c	FUNCTION_27
0xf2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       800	ui.c	FUNCTION_27
0xf31	        0x6689502c	               mov word [rax + 0x2c], dx	       800	ui.c	FUNCTION_27
0xf35	        0x488b45f8	                mov rax, qword [rbp - 8]	       801	ui.c	FUNCTION_27
0xf39	    0x66c740480100	                mov word [rax + 0x48], 1	       801	ui.c	FUNCTION_27
0xf3f	        0x837de400	               cmp dword [rbp - 0x1c], 0	       803	ui.c	FUNCTION_27	IF_2
0xf43	            0x742d	                            je 0x4000fb2	       803	ui.c	FUNCTION_27	IF_2
0xf45	        0x488b45f8	                mov rax, qword [rbp - 8]	       805	ui.c	FUNCTION_27	IF_2	IF_3
0xf49	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       805	ui.c	FUNCTION_27	IF_2	IF_3
0xf4d	          0x8d5001	                      lea edx, [rax + 1]	       805	ui.c	FUNCTION_27	IF_2	IF_3
0xf50	        0x488b45f8	                mov rax, qword [rbp - 8]	       805	ui.c	FUNCTION_27	IF_2	IF_3
0xf54	        0x6689504a	               mov word [rax + 0x4a], dx	       805	ui.c	FUNCTION_27	IF_2	IF_3
0xf58	        0x488b45f8	                mov rax, qword [rbp - 8]	       805	ui.c	FUNCTION_27	IF_2	IF_3
0xf5c	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       805	ui.c	FUNCTION_27	IF_2	IF_3
0xf60	        0x6683f802	                               cmp ax, 2	       805	ui.c	FUNCTION_27	IF_2	IF_3
0xf64	            0x7616	                           jbe 0x4000fbc	       805	ui.c	FUNCTION_27	IF_2	IF_3
0xf66	        0x488b45f8	                mov rax, qword [rbp - 8]	       806	ui.c	FUNCTION_27	IF_2	IF_3
0xf6a	    0x66c7404a0000	                mov word [rax + 0x4a], 0	       806	ui.c	FUNCTION_27	IF_2	IF_3
0xf70	            0xeb0a	                           jmp 0x4000fbc	       806	ui.c	FUNCTION_27	IF_2	IF_3
0xf72	        0x488b45f8	                mov rax, qword [rbp - 8]	       809	ui.c	FUNCTION_27	ELSE_1
0xf76	    0x66c7404a0000	                mov word [rax + 0x4a], 0	       809	ui.c	FUNCTION_27	ELSE_1
0xf7c	    0x8b0500000000	            mov eax, dword [0x04000fc2] 	       813	ui.c	FUNCTION_27	IF_4
0xf82	            0x85c0	                           test eax, eax	       813	ui.c	FUNCTION_27	IF_4
0xf84	            0x7405	                            je 0x4000fcb	       813	ui.c	FUNCTION_27	IF_4
0xf86	      0xe800000000	                          call 0x4000fcb	       814	ui.c	FUNCTION_27	CALL_5
0xf8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       817	ui.c	FUNCTION_27	SWITCH_1
0xf8f	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       817	ui.c	FUNCTION_27	SWITCH_1
0xf93	           0xfb7c0	                           movzx eax, ax	       817	ui.c	FUNCTION_27	SWITCH_1
0xf96	          0x83f801	                              cmp eax, 1	       817	ui.c	FUNCTION_27	SWITCH_1
0xf99	            0x7440	                            je 0x400101b	       817	ui.c	FUNCTION_27	SWITCH_1
0xf9b	          0x83f802	                              cmp eax, 2	       817	ui.c	FUNCTION_27	SWITCH_1
0xf9e	     0xf84d7000000	                            je 0x40010bb	       817	ui.c	FUNCTION_27	SWITCH_1
0xfa4	            0x85c0	                           test eax, eax	       817	ui.c	FUNCTION_27	SWITCH_1
0xfa6	     0xf8518010000	                           jne 0x4001104	       817	ui.c	FUNCTION_27	SWITCH_1
0xfac	        0x488b45f8	                mov rax, qword [rbp - 8]	       820	ui.c	FUNCTION_27	SWITCH_1
0xfb0	          0x8b4010	            mov eax, dword [rax + 0x10] 	       820	ui.c	FUNCTION_27	SWITCH_1
0xfb3	            0x89c2	                            mov edx, eax	       820	ui.c	FUNCTION_27	SWITCH_1
0xfb5	        0x488b45f8	                mov rax, qword [rbp - 8]	       820	ui.c	FUNCTION_27	SWITCH_1
0xfb9	        0x6689502e	               mov word [rax + 0x2e], dx	       820	ui.c	FUNCTION_27	SWITCH_1
0xfbd	        0x488b45f8	                mov rax, qword [rbp - 8]	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0xfc1	        0x488b4008	                mov rax, qword [rax + 8]	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0xfc5	            0x89c7	                            mov edi, eax	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0xfc7	      0xe871130000	              call sym.clip_get_line_end	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0xfcc	            0x89c2	                            mov edx, eax	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0xfce	        0x488b45f8	                mov rax, qword [rbp - 8]	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0xfd2	        0x66895034	               mov word [rax + 0x34], dx	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0xfd6	      0xe9e9000000	                           jmp 0x4001104	       822	ui.c	FUNCTION_27	SWITCH_1
0xfdb	        0x488b45f8	                mov rax, qword [rbp - 8]	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0xfdf	          0x8b5010	            mov edx, dword [rax + 0x10] 	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0xfe2	        0x488b45f8	                mov rax, qword [rbp - 8]	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0xfe6	        0x488b4008	                mov rax, qword [rax + 8]	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0xfea	            0x89c1	                            mov ecx, eax	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0xfec	        0x488b45f8	                mov rax, qword [rbp - 8]	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0xff0	            0x89ce	                            mov esi, ecx	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0xff2	          0x4889c7	                            mov rdi, rax	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0xff5	      0xe8e5100000	       call sym.clip_get_word_boundaries	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0xffa	        0x488b45f8	                mov rax, qword [rbp - 8]	       826	ui.c	FUNCTION_27	SWITCH_1
0xffe	         0xfb75032	           movzx edx, word [rax + 0x32] 	       826	ui.c	FUNCTION_27	SWITCH_1
0x1002	        0x488b45f8	                mov rax, qword [rbp - 8]	       826	ui.c	FUNCTION_27	SWITCH_1
0x1006	        0x6689502e	               mov word [rax + 0x2e], dx	       826	ui.c	FUNCTION_27	SWITCH_1
0x100a	        0x488b45f8	                mov rax, qword [rbp - 8]	       827	ui.c	FUNCTION_27	SWITCH_1
0x100e	         0xfb75034	           movzx edx, word [rax + 0x34] 	       827	ui.c	FUNCTION_27	SWITCH_1
0x1012	        0x488b45f8	                mov rax, qword [rbp - 8]	       827	ui.c	FUNCTION_27	SWITCH_1
0x1016	        0x66895030	               mov word [rax + 0x30], dx	       827	ui.c	FUNCTION_27	SWITCH_1
0x101a	        0x488b45f8	                mov rax, qword [rbp - 8]	       830	ui.c	FUNCTION_27	SWITCH_1
0x101e	         0xfb74034	           movzx eax, word [rax + 0x34] 	       830	ui.c	FUNCTION_27	SWITCH_1
0x1022	           0xfb7d0	                           movzx edx, ax	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x1025	        0x488b45f8	                mov rax, qword [rbp - 8]	       830	ui.c	FUNCTION_27	SWITCH_1
0x1029	        0x488b4018	            mov rax, qword [rax + 0x18] 	       830	ui.c	FUNCTION_27	SWITCH_1
0x102d	            0x89c6	                            mov esi, eax	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x102f	        0x488b45f8	                mov rax, qword [rbp - 8]	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x1033	         0xfb74032	           movzx eax, word [rax + 0x32] 	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x1037	           0xfb7c0	                           movzx eax, ax	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x103a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x103e	        0x488b4908	                mov rcx, qword [rcx + 8]	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x1042	            0x89cf	                            mov edi, ecx	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x1044	    0x41b802000000	                              mov r8d, 2	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x104a	            0x89d1	                            mov ecx, edx	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x104c	            0x89f2	                            mov edx, esi	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x104e	            0x89c6	                            mov esi, eax	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x1050	      0xe816090000	               call sym.clip_invert_area	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x1055	        0x488b45f8	                mov rax, qword [rbp - 8]	       831	ui.c	FUNCTION_27	SWITCH_1
0x1059	         0xfb74032	           movzx eax, word [rax + 0x32] 	       831	ui.c	FUNCTION_27	SWITCH_1
0x105d	           0xfb7d0	                           movzx edx, ax	       831	ui.c	FUNCTION_27	SWITCH_1
0x1060	        0x488b45f8	                mov rax, qword [rbp - 8]	       831	ui.c	FUNCTION_27	SWITCH_1
0x1064	          0x895010	             mov dword [rax + 0x10], edx	       831	ui.c	FUNCTION_27	SWITCH_1
0x1067	        0x488b45f8	                mov rax, qword [rbp - 8]	       832	ui.c	FUNCTION_27	SWITCH_1
0x106b	         0xfb74034	           movzx eax, word [rax + 0x34] 	       832	ui.c	FUNCTION_27	SWITCH_1
0x106f	           0xfb7d0	                           movzx edx, ax	       832	ui.c	FUNCTION_27	SWITCH_1
0x1072	        0x488b45f8	                mov rax, qword [rbp - 8]	       832	ui.c	FUNCTION_27	SWITCH_1
0x1076	          0x895020	             mov dword [rax + 0x20], edx	       832	ui.c	FUNCTION_27	SWITCH_1
0x1079	            0xeb49	                           jmp 0x4001104	       833	ui.c	FUNCTION_27	SWITCH_1
0x107b	    0x488b05000000	            mov rax, qword [0x040010c2] 	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x1082	            0x89c1	                            mov ecx, eax	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x1084	        0x488b45f8	                mov rax, qword [rbp - 8]	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x1088	        0x488b4008	                mov rax, qword [rax + 8]	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x108c	            0x89c2	                            mov edx, eax	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x108e	        0x488b45f8	                mov rax, qword [rbp - 8]	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x1092	        0x488b4008	                mov rax, qword [rax + 8]	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x1096	    0x41b802000000	                              mov r8d, 2	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x109c	      0xbe00000000	                              mov esi, 0	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x10a1	            0x89c7	                            mov edi, eax	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x10a3	      0xe8c3080000	               call sym.clip_invert_area	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x10a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       838	ui.c	FUNCTION_27	SWITCH_1
0x10ac	    0xc74010000000	               mov dword [rax + 0x10], 0	       838	ui.c	FUNCTION_27	SWITCH_1
0x10b3	    0x488b05000000	            mov rax, qword [0x040010fa] 	       839	ui.c	FUNCTION_27	SWITCH_1
0x10ba	            0x89c2	                            mov edx, eax	       839	ui.c	FUNCTION_27	SWITCH_1
0x10bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       839	ui.c	FUNCTION_27	SWITCH_1
0x10c0	          0x895020	             mov dword [rax + 0x20], edx	       839	ui.c	FUNCTION_27	SWITCH_1
0x10c3	              0x90	                                     nop	       840	ui.c	FUNCTION_27	SWITCH_1
0x10c4	        0x488b4df8	                mov rcx, qword [rbp - 8]	       843	ui.c	FUNCTION_27
0x10c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       843	ui.c	FUNCTION_27
0x10cc	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       843	ui.c	FUNCTION_27
0x10d0	        0x488b4008	                mov rax, qword [rax + 8]	       843	ui.c	FUNCTION_27
0x10d4	        0x48894138	             mov qword [rcx + 0x38], rax	       843	ui.c	FUNCTION_27
0x10d8	        0x48895140	             mov qword [rcx + 0x40], rdx	       843	ui.c	FUNCTION_27
0x10dc	              0x90	                                     nop	       848	ui.c	FUNCTION_27
0x10dd	              0xc9	                                   leave	       848	ui.c	FUNCTION_27
0x10de	              0xc3	                                     ret	       848	ui.c	FUNCTION_27
clip_scroll_selection	CALL,0:WHILE,0:IF,5:ELSE,4:DO,0:SWITCH,0:functions,0:FOR,0	49
0x18b8	              0x55	                                push rbp	      1092	ui.c	FUNCTION_32
0x18b9	          0x4889e5	                            mov rbp, rsp	      1092	ui.c	FUNCTION_32
0x18bc	          0x897dec	             mov dword [rbp - 0x14], edi	      1092	ui.c	FUNCTION_32
0x18bf	     0xfb705000000	           movzx eax, word [0x04001906] 	      1095	ui.c	FUNCTION_32	IF_1
0x18c6	          0x6685c0	                             test ax, ax	      1095	ui.c	FUNCTION_32	IF_1
0x18c9	     0xf8499000000	                            je 0x40019a8	      1095	ui.c	FUNCTION_32	IF_1
0x18cf	    0x488b05000000	            mov rax, qword [0x04001916] 	      1098	ui.c	FUNCTION_32
0x18d6	            0x89c2	                            mov edx, eax	      1098	ui.c	FUNCTION_32
0x18d8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1098	ui.c	FUNCTION_32
0x18db	            0x29c2	                            sub edx, eax	      1098	ui.c	FUNCTION_32
0x18dd	            0x89d0	                            mov eax, edx	      1098	ui.c	FUNCTION_32
0x18df	          0x8945fc	                mov dword [rbp - 4], eax	      1098	ui.c	FUNCTION_32
0x18e2	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1099	ui.c	FUNCTION_32	IF_2
0x18e6	            0x7f0d	                            jg 0x4001935	      1099	ui.c	FUNCTION_32	IF_2
0x18e8	    0x48c705000000	               mov qword [0x04001933], 0	      1100	ui.c	FUNCTION_32	IF_2
0x18f3	            0xeb22	                           jmp 0x4001957	      1100	ui.c	FUNCTION_32	IF_2
0x18f5	    0x8b0500000000	            mov eax, dword [0x0400193b] 	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x18fb	          0x3945fc	                cmp dword [rbp - 4], eax	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x18fe	            0x7c0b	                            jl 0x400194b	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x1900	    0x66c705000000	                mov word [0x04001949], 0	      1102	ui.c	FUNCTION_32	ELSE_1	IF_3
0x1909	            0xeb0c	                           jmp 0x4001957	      1102	ui.c	FUNCTION_32	ELSE_1	IF_3
0x190b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1104	ui.c	FUNCTION_32	ELSE_2
0x190e	            0x4898	                                    cdqe	      1104	ui.c	FUNCTION_32	ELSE_2
0x1910	    0x488905000000	            mov qword [0x04001957], rax 	      1104	ui.c	FUNCTION_32	ELSE_2
0x1917	    0x488b05000000	            mov rax, qword [0x0400195e] 	      1106	ui.c	FUNCTION_32
0x191e	            0x89c2	                            mov edx, eax	      1106	ui.c	FUNCTION_32
0x1920	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1106	ui.c	FUNCTION_32
0x1923	            0x29c2	                            sub edx, eax	      1106	ui.c	FUNCTION_32
0x1925	            0x89d0	                            mov eax, edx	      1106	ui.c	FUNCTION_32
0x1927	          0x8945fc	                mov dword [rbp - 4], eax	      1106	ui.c	FUNCTION_32
0x192a	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1107	ui.c	FUNCTION_32	IF_4
0x192e	            0x790b	                           jns 0x400197b	      1107	ui.c	FUNCTION_32	IF_4
0x1930	    0x66c705000000	                mov word [0x04001979], 0	      1108	ui.c	FUNCTION_32	IF_4
0x1939	            0xeb2e	                           jmp 0x40019a9	      1108	ui.c	FUNCTION_32	IF_4
0x193b	    0x8b0500000000	            mov eax, dword [0x04001981] 	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x1941	          0x3945fc	                cmp dword [rbp - 4], eax	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x1944	            0x7c14	                            jl 0x400199a	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x1946	    0x8b0500000000	            mov eax, dword [0x0400198c] 	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x194c	          0x83e801	                              sub eax, 1	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x194f	            0x4898	                                    cdqe	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x1951	    0x488905000000	            mov qword [0x04001998], rax 	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x1958	            0xeb0f	                           jmp 0x40019a9	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x195a	          0x8b45fc	                mov eax, dword [rbp - 4]	      1112	ui.c	FUNCTION_32	ELSE_4
0x195d	            0x4898	                                    cdqe	      1112	ui.c	FUNCTION_32	ELSE_4
0x195f	    0x488905000000	            mov qword [0x040019a6], rax 	      1112	ui.c	FUNCTION_32	ELSE_4
0x1966	            0xeb01	                           jmp 0x40019a9	      1112	ui.c	FUNCTION_32	ELSE_4
0x1968	              0x90	                                     nop	      1096	ui.c	FUNCTION_32	IF_1
0x1969	              0x5d	                                 pop rbp	      1113	ui.c	FUNCTION_32	ELSE_4
0x196a	              0xc3	                                     ret	      1113	ui.c	FUNCTION_32	ELSE_4
clip_get_line_end	CALL,0:WHILE,0:IF,2:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,1	37
0x233d	              0x55	                                push rbp	      1448	ui.c	FUNCTION_37
0x233e	          0x4889e5	                            mov rbp, rsp	      1448	ui.c	FUNCTION_37
0x2341	          0x897dec	             mov dword [rbp - 0x14], edi	      1448	ui.c	FUNCTION_37
0x2344	    0x8b0500000000	            mov eax, dword [0x0400238a] 	      1451	ui.c	FUNCTION_37	IF_1
0x234a	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      1451	ui.c	FUNCTION_37	IF_1
0x234d	            0x7d0c	                           jge 0x400239b	      1451	ui.c	FUNCTION_37	IF_1
0x234f	    0x488b05000000	            mov rax, qword [0x04002396] 	      1451	ui.c	FUNCTION_37	IF_1
0x2356	          0x4885c0	                           test rax, rax	      1451	ui.c	FUNCTION_37	IF_1
0x2359	            0x7507	                           jne 0x40023a2	      1451	ui.c	FUNCTION_37	IF_1
0x235b	      0xb800000000	                              mov eax, 0	      1452	ui.c	FUNCTION_37	IF_1
0x2360	            0xeb4c	                           jmp 0x40023ee	      1452	ui.c	FUNCTION_37	IF_1
0x2362	    0x8b0500000000	            mov eax, dword [0x040023a8] 	      1453	ui.c	FUNCTION_37	FOR_1
0x2368	          0x8945fc	                mov dword [rbp - 4], eax	      1453	ui.c	FUNCTION_37	FOR_1
0x236b	            0xeb35	                           jmp 0x40023e2	      1453	ui.c	FUNCTION_37	FOR_1
0x236d	    0x488b05000000	            mov rax, qword [0x040023b4] 	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x2374	    0x488b15000000	            mov rdx, qword [0x040023bb] 	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x237b	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x237e	          0x4863c9	                         movsxd rcx, ecx	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x2381	        0x48c1e102	                              shl rcx, 2	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x2385	          0x4801ca	                            add rdx, rcx	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x2388	            0x8b0a	                    mov ecx, dword [rdx]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x238a	          0x8b55fc	                mov edx, dword [rbp - 4]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x238d	             0x1ca	                            add edx, ecx	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x238f	          0x83ea01	                              sub edx, 1	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x2392	            0x89d2	                            mov edx, edx	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x2394	          0x4801d0	                            add rax, rdx	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x2397	           0xfb600	                   movzx eax, byte [rax]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x239a	            0x3c20	                            cmp al, 0x20	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x239c	            0x750c	                           jne 0x40023ea	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x239e	        0x836dfc01	                  sub dword [rbp - 4], 1	      1453	ui.c	FUNCTION_37	FOR_1
0x23a2	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1453	ui.c	FUNCTION_37	FOR_1
0x23a6	            0x7fc5	                            jg 0x40023ad	      1453	ui.c	FUNCTION_37	FOR_1
0x23a8	            0xeb01	                           jmp 0x40023eb	      1453	ui.c	FUNCTION_37	FOR_1
0x23aa	              0x90	                                     nop	      1455	ui.c	FUNCTION_37	FOR_1	IF_2
0x23ab	          0x8b45fc	                mov eax, dword [rbp - 4]	      1456	ui.c	FUNCTION_37
0x23ae	              0x5d	                                 pop rbp	      1457	ui.c	FUNCTION_37
0x23af	              0xc3	                                     ret	      1457	ui.c	FUNCTION_37
ui_new_shellsize	CALL,2:WHILE,0:IF,2:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	17
0x663	              0x55	                                push rbp	       381	ui.c	FUNCTION_11
0x664	          0x4889e5	                            mov rbp, rsp	       381	ui.c	FUNCTION_11
0x667	    0x8b0500000000	            mov eax, dword [0x040006ad] 	       382	ui.c	FUNCTION_11	IF_1
0x66d	            0x85c0	                           test eax, eax	       382	ui.c	FUNCTION_11	IF_1
0x66f	            0x7420	                            je 0x40006d1	       382	ui.c	FUNCTION_11	IF_1
0x671	    0x8b0500000000	            mov eax, dword [0x040006b7] 	       382	ui.c	FUNCTION_11	IF_1
0x677	            0x85c0	                           test eax, eax	       382	ui.c	FUNCTION_11	IF_1
0x679	            0x7516	                           jne 0x40006d1	       382	ui.c	FUNCTION_11	IF_1
0x67b	    0x8b0500000000	            mov eax, dword [0x040006c1] 	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x681	            0x85c0	                           test eax, eax	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x683	            0x7407	                            je 0x40006cc	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x685	      0xe800000000	                          call 0x40006ca	       386	ui.c	FUNCTION_11	IF_1	CALL_1
0x68a	            0xeb05	                           jmp 0x40006d1	       391	ui.c	FUNCTION_11
0x68c	      0xe800000000	                          call 0x40006d1	       389	ui.c	FUNCTION_11	IF_1	CALL_2
0x691	              0x90	                                     nop	       391	ui.c	FUNCTION_11
0x692	              0x5d	                                 pop rbp	       391	ui.c	FUNCTION_11
0x693	              0xc3	                                     ret	       391	ui.c	FUNCTION_11
vim_used_in_input_buf	CALL,0:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	5
0x25f1	              0x55	                                push rbp	      1641	ui.c	FUNCTION_47
0x25f2	          0x4889e5	                            mov rbp, rsp	      1641	ui.c	FUNCTION_47
0x25f5	    0x8b0500000000	            mov eax, dword [0x0400263b] 	      1642	ui.c	FUNCTION_47
0x25fb	              0x5d	                                 pop rbp	      1643	ui.c	FUNCTION_47
0x25fc	              0xc3	                                     ret	      1643	ui.c	FUNCTION_47
read_error_exit	CALL,4:WHILE,0:IF,1:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	18
0x2bb1	              0x55	                                push rbp	      1948	ui.c	FUNCTION_56
0x2bb2	          0x4889e5	                            mov rbp, rsp	      1948	ui.c	FUNCTION_56
0x2bb5	    0x8b0500000000	            mov eax, dword [0x04002bfb] 	      1949	ui.c	FUNCTION_56	IF_1
0x2bbb	            0x85c0	                           test eax, eax	      1949	ui.c	FUNCTION_56	IF_1
0x2bbd	            0x740a	                            je 0x4002c09	      1949	ui.c	FUNCTION_56	IF_1
0x2bbf	      0xbf00000000	                              mov edi, 0	      1950	ui.c	FUNCTION_56	CALL_1
0x2bc4	      0xe800000000	                          call 0x4002c09	      1950	ui.c	FUNCTION_56	CALL_1
0x2bc9	      0xbf00000000	                              mov edi, 0	      1951	ui.c	FUNCTION_56	CALL_3
0x2bce	      0xe800000000	                          call 0x4002c13	      1951	ui.c	FUNCTION_56	CALL_3
0x2bd3	          0x4889c2	                            mov rdx, rax	      1951	ui.c	FUNCTION_56	CALL_3
0x2bd6	    0x488b05000000	            mov rax, qword [0x04002c1d] 	      1951	ui.c	FUNCTION_56	CALL_3
0x2bdd	          0x4889d6	                            mov rsi, rdx	      1951	ui.c	FUNCTION_56	CALL_3
0x2be0	          0x4889c7	                            mov rdi, rax	      1951	ui.c	FUNCTION_56	CALL_3
0x2be3	      0xe800000000	                          call 0x4002c28	      1951	ui.c	FUNCTION_56	CALL_3
0x2be8	      0xe800000000	                          call 0x4002c2d	      1952	ui.c	FUNCTION_56	CALL_4
0x2bed	              0x90	                                     nop	      1953	ui.c	FUNCTION_56
0x2bee	              0x5d	                                 pop rbp	      1953	ui.c	FUNCTION_56
0x2bef	              0xc3	                                     ret	      1953	ui.c	FUNCTION_56
clip_modeless	CALL,5:WHILE,0:IF,5:ELSE,3:DO,0:SWITCH,0:functions,0:FOR,0	77
0xd27	              0x55	                                push rbp	       734	ui.c	FUNCTION_25
0xd28	          0x4889e5	                            mov rbp, rsp	       734	ui.c	FUNCTION_25
0xd2b	        0x4883ec20	                           sub rsp, 0x20	       734	ui.c	FUNCTION_25
0xd2f	          0x897dec	             mov dword [rbp - 0x14], edi	       734	ui.c	FUNCTION_25
0xd32	          0x8975e8	             mov dword [rbp - 0x18], esi	       734	ui.c	FUNCTION_25
0xd35	          0x8955e4	             mov dword [rbp - 0x1c], edx	       734	ui.c	FUNCTION_25
0xd38	     0xfb705000000	           movzx eax, word [0x04000d7f] 	       737	ui.c	FUNCTION_25
0xd3f	          0x6685c0	                             test ax, ax	       740	ui.c	FUNCTION_25
0xd42	            0x740d	                            je 0x4000d91	       740	ui.c	FUNCTION_25
0xd44	     0xfb705000000	           movzx eax, word [0x04000d8b] 	       738	ui.c	FUNCTION_25
0xd4b	        0x6683f802	                               cmp ax, 2	       738	ui.c	FUNCTION_25
0xd4f	            0x750d	                           jne 0x4000d9e	       738	ui.c	FUNCTION_25
0xd51	    0x8b0500000000	            mov eax, dword [0x04000d97] 	       739	ui.c	FUNCTION_25
0xd57	          0x83e020	                           and eax, 0x20	       739	ui.c	FUNCTION_25
0xd5a	            0x85c0	                           test eax, eax	       739	ui.c	FUNCTION_25
0xd5c	            0x751a	                           jne 0x4000db8	       739	ui.c	FUNCTION_25
0xd5e	     0xfb705000000	           movzx eax, word [0x04000da5] 	       740	ui.c	FUNCTION_25
0xd65	        0x6683f801	                               cmp ax, 1	       740	ui.c	FUNCTION_25
0xd69	            0x7514	                           jne 0x4000dbf	       740	ui.c	FUNCTION_25
0xd6b	    0x8b0500000000	            mov eax, dword [0x04000db1] 	       741	ui.c	FUNCTION_25
0xd71	          0x83e040	                           and eax, 0x40	       741	ui.c	FUNCTION_25
0xd74	            0x85c0	                           test eax, eax	       741	ui.c	FUNCTION_25
0xd76	            0x7407	                            je 0x4000dbf	       741	ui.c	FUNCTION_25
0xd78	      0xb801000000	                              mov eax, 1	       740	ui.c	FUNCTION_25
0xd7d	            0xeb05	                           jmp 0x4000dc4	       740	ui.c	FUNCTION_25
0xd7f	      0xb800000000	                              mov eax, 0	       740	ui.c	FUNCTION_25
0xd84	          0x8945fc	                mov dword [rbp - 4], eax	       737	ui.c	FUNCTION_25
0xd87	        0x837de800	               cmp dword [rbp - 0x18], 0	       742	ui.c	FUNCTION_25	IF_1
0xd8b	            0x7447	                            je 0x4000e14	       742	ui.c	FUNCTION_25	IF_1
0xd8d	        0x837dec02	               cmp dword [rbp - 0x14], 2	       742	ui.c	FUNCTION_25	IF_1
0xd91	            0x7541	                           jne 0x4000e14	       742	ui.c	FUNCTION_25	IF_1
0xd93	     0xfb705000000	           movzx eax, word [0x04000dda] 	       746	ui.c	FUNCTION_25	IF_1	IF_2
0xd9a	          0x6685c0	                             test ax, ax	       746	ui.c	FUNCTION_25	IF_1	IF_2
0xd9d	            0x751a	                           jne 0x4000df9	       746	ui.c	FUNCTION_25	IF_1	IF_2
0xd9f	    0x8b0d00000000	            mov ecx, dword [0x04000de5] 	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0xda5	    0x8b0500000000	            mov eax, dword [0x04000deb] 	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0xdab	      0xba00000000	                              mov edx, 0	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0xdb0	            0x89ce	                            mov esi, ecx	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0xdb2	            0x89c7	                            mov edi, eax	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0xdb4	      0xe800000000	                          call 0x4000df9	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0xdb9	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0xdbc	    0x8b1500000000	            mov edx, dword [0x04000e02] 	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0xdc2	    0x8b3500000000	            mov esi, dword [0x04000e08] 	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0xdc8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0xdcb	            0x89c7	                            mov edi, eax	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0xdcd	      0xe800000000	                          call 0x4000e12	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0xdd2	            0xeb6a	                           jmp 0x4000e7e	       761	ui.c	FUNCTION_25
0xdd4	        0x837de800	               cmp dword [rbp - 0x18], 0	       750	ui.c	FUNCTION_25	ELSE_1	IF_3
0xdd8	            0x741a	                            je 0x4000e34	       750	ui.c	FUNCTION_25	ELSE_1	IF_3
0xdda	    0x8b0d00000000	            mov ecx, dword [0x04000e20] 	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0xde0	    0x8b0500000000	            mov eax, dword [0x04000e26] 	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0xde6	          0x8b55fc	                mov edx, dword [rbp - 4]	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0xde9	            0x89ce	                            mov esi, ecx	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0xdeb	            0x89c7	                            mov edi, eax	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0xded	      0xe800000000	                          call 0x4000e32	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0xdf2	            0xeb4a	                           jmp 0x4000e7e	       761	ui.c	FUNCTION_25
0xdf4	        0x837de400	               cmp dword [rbp - 0x1c], 0	       752	ui.c	FUNCTION_25	ELSE_2	IF_4
0xdf8	            0x7427	                            je 0x4000e61	       752	ui.c	FUNCTION_25	ELSE_2	IF_4
0xdfa	     0xfb705000000	           movzx eax, word [0x04000e41] 	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0xe01	          0x6685c0	                             test ax, ax	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0xe04	            0x7438	                            je 0x4000e7e	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0xe06	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0xe09	    0x8b1500000000	            mov edx, dword [0x04000e4f] 	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0xe0f	    0x8b3500000000	            mov esi, dword [0x04000e55] 	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0xe15	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0xe18	            0x89c7	                            mov edi, eax	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0xe1a	      0xe800000000	                          call 0x4000e5f	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0xe1f	            0xeb1d	                           jmp 0x4000e7e	       761	ui.c	FUNCTION_25
0xe21	    0x8b1500000000	            mov edx, dword [0x04000e67] 	       760	ui.c	FUNCTION_25	CALL_5
0xe27	    0x8b0500000000	            mov eax, dword [0x04000e6d] 	       760	ui.c	FUNCTION_25	CALL_5
0xe2d	      0xb900000000	                              mov ecx, 0	       760	ui.c	FUNCTION_25	CALL_5
0xe32	            0x89c6	                            mov esi, eax	       760	ui.c	FUNCTION_25	CALL_5
0xe34	      0xbf03000000	                              mov edi, 3	       760	ui.c	FUNCTION_25	CALL_5
0xe39	      0xe800000000	                          call 0x4000e7e	       760	ui.c	FUNCTION_25	CALL_5
0xe3e	              0x90	                                     nop	       761	ui.c	FUNCTION_25
0xe3f	              0xc9	                                   leave	       761	ui.c	FUNCTION_25
0xe40	              0xc3	                                     ret	       761	ui.c	FUNCTION_25
clip_invert_rectangle	CALL,2:WHILE,0:IF,1:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	29
0x1aac	              0x55	                                push rbp	      1190	ui.c	FUNCTION_34
0x1aad	          0x4889e5	                            mov rbp, rsp	      1190	ui.c	FUNCTION_34
0x1ab0	        0x4883ec20	                           sub rsp, 0x20	      1190	ui.c	FUNCTION_34
0x1ab4	          0x897dfc	                mov dword [rbp - 4], edi	      1190	ui.c	FUNCTION_34
0x1ab7	          0x8975f8	                mov dword [rbp - 8], esi	      1190	ui.c	FUNCTION_34
0x1aba	          0x8955f4	              mov dword [rbp - 0xc], edx	      1190	ui.c	FUNCTION_34
0x1abd	          0x894df0	             mov dword [rbp - 0x10], ecx	      1190	ui.c	FUNCTION_34
0x1ac0	        0x448945ec	             mov dword [rbp - 0x14], r8d	      1190	ui.c	FUNCTION_34
0x1ac4	    0x8b0500000000	            mov eax, dword [0x04001b0a] 	      1192	ui.c	FUNCTION_34	IF_1
0x1aca	            0x85c0	                           test eax, eax	      1192	ui.c	FUNCTION_34	IF_1
0x1acc	            0x7415	                            je 0x4001b23	      1192	ui.c	FUNCTION_34	IF_1
0x1ace	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      1193	ui.c	FUNCTION_34	CALL_1
0x1ad1	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1193	ui.c	FUNCTION_34	CALL_1
0x1ad4	          0x8b75f8	                mov esi, dword [rbp - 8]	      1193	ui.c	FUNCTION_34	CALL_1
0x1ad7	          0x8b45fc	                mov eax, dword [rbp - 4]	      1193	ui.c	FUNCTION_34	CALL_1
0x1ada	            0x89c7	                            mov edi, eax	      1193	ui.c	FUNCTION_34	CALL_1
0x1adc	      0xe800000000	                          call 0x4001b21	      1193	ui.c	FUNCTION_34	CALL_1
0x1ae1	            0xeb19	                           jmp 0x4001b3c	      1197	ui.c	FUNCTION_34
0x1ae3	          0x8b7dec	             mov edi, dword [rbp - 0x14]	      1196	ui.c	FUNCTION_34	CALL_2
0x1ae6	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      1196	ui.c	FUNCTION_34	CALL_2
0x1ae9	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1196	ui.c	FUNCTION_34	CALL_2
0x1aec	          0x8b75f8	                mov esi, dword [rbp - 8]	      1196	ui.c	FUNCTION_34	CALL_2
0x1aef	          0x8b45fc	                mov eax, dword [rbp - 4]	      1196	ui.c	FUNCTION_34	CALL_2
0x1af2	          0x4189f8	                            mov r8d, edi	      1196	ui.c	FUNCTION_34	CALL_2
0x1af5	            0x89c7	                            mov edi, eax	      1196	ui.c	FUNCTION_34	CALL_2
0x1af7	      0xe800000000	                          call 0x4001b3c	      1196	ui.c	FUNCTION_34	CALL_2
0x1afc	              0x90	                                     nop	      1197	ui.c	FUNCTION_34
0x1afd	              0xc9	                                   leave	      1197	ui.c	FUNCTION_34
0x1afe	              0xc3	                                     ret	      1197	ui.c	FUNCTION_34
check_col	CALL,0:WHILE,0:IF,2:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	16
0x2c2f	              0x55	                                push rbp	      1992	ui.c	FUNCTION_59
0x2c30	          0x4889e5	                            mov rbp, rsp	      1992	ui.c	FUNCTION_59
0x2c33	          0x897dfc	                mov dword [rbp - 4], edi	      1992	ui.c	FUNCTION_59
0x2c36	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1993	ui.c	FUNCTION_59	IF_1
0x2c3a	            0x7907	                           jns 0x4002c83	      1993	ui.c	FUNCTION_59	IF_1
0x2c3c	      0xb800000000	                              mov eax, 0	      1994	ui.c	FUNCTION_59	IF_1
0x2c41	            0xeb19	                           jmp 0x4002c9c	      1994	ui.c	FUNCTION_59	IF_1
0x2c43	    0x8b0500000000	            mov eax, dword [0x04002c89] 	      1995	ui.c	FUNCTION_59	IF_2
0x2c49	          0x3945fc	                cmp dword [rbp - 4], eax	      1995	ui.c	FUNCTION_59	IF_2
0x2c4c	            0x7c0b	                            jl 0x4002c99	      1995	ui.c	FUNCTION_59	IF_2
0x2c4e	    0x8b0500000000	            mov eax, dword [0x04002c94] 	      1996	ui.c	FUNCTION_59	IF_2
0x2c54	          0x83e801	                              sub eax, 1	      1996	ui.c	FUNCTION_59	IF_2
0x2c57	            0xeb03	                           jmp 0x4002c9c	      1996	ui.c	FUNCTION_59	IF_2
0x2c59	          0x8b45fc	                mov eax, dword [rbp - 4]	      1997	ui.c	FUNCTION_59
0x2c5c	              0x5d	                                 pop rbp	      1998	ui.c	FUNCTION_59
0x2c5d	              0xc3	                                     ret	      1998	ui.c	FUNCTION_59
ui_breakcheck_force	CALL,2:WHILE,0:IF,1:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	22
0x6a5	              0x55	                                push rbp	       405	ui.c	FUNCTION_13
0x6a6	          0x4889e5	                            mov rbp, rsp	       405	ui.c	FUNCTION_13
0x6a9	        0x4883ec20	                           sub rsp, 0x20	       405	ui.c	FUNCTION_13
0x6ad	          0x897dec	             mov dword [rbp - 0x14], edi	       405	ui.c	FUNCTION_13
0x6b0	    0x8b0500000000	            mov eax, dword [0x040006f6] 	       406	ui.c	FUNCTION_13
0x6b6	          0x8945fc	                mov dword [rbp - 4], eax	       406	ui.c	FUNCTION_13
0x6b9	    0x8b0500000000	            mov eax, dword [0x040006ff] 	       409	ui.c	FUNCTION_13
0x6bf	          0x83c001	                              add eax, 1	       409	ui.c	FUNCTION_13
0x6c2	    0x890500000000	            mov dword [0x04000708], eax 	       409	ui.c	FUNCTION_13
0x6c8	    0x8b0500000000	            mov eax, dword [0x0400070e] 	       412	ui.c	FUNCTION_13	IF_1
0x6ce	            0x85c0	                           test eax, eax	       412	ui.c	FUNCTION_13	IF_1
0x6d0	            0x7407	                            je 0x4000719	       412	ui.c	FUNCTION_13	IF_1
0x6d2	      0xe800000000	                          call 0x4000717	       413	ui.c	FUNCTION_13	CALL_1
0x6d7	            0xeb0a	                           jmp 0x4000723	       413	ui.c	FUNCTION_13	CALL_1
0x6d9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       416	ui.c	FUNCTION_13	CALL_2
0x6dc	            0x89c7	                            mov edi, eax	       416	ui.c	FUNCTION_13	CALL_2
0x6de	      0xe800000000	                          call 0x4000723	       416	ui.c	FUNCTION_13	CALL_2
0x6e3	          0x8b45fc	                mov eax, dword [rbp - 4]	       418	ui.c	FUNCTION_13
0x6e6	    0x890500000000	            mov dword [0x0400072c], eax 	       418	ui.c	FUNCTION_13
0x6ec	              0x90	                                     nop	       419	ui.c	FUNCTION_13
0x6ed	              0xc9	                                   leave	       419	ui.c	FUNCTION_13
0x6ee	              0xc3	                                     ret	       419	ui.c	FUNCTION_13
ui_cursor_shape	CALL,1:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	7
0x2c1e	              0x55	                                push rbp	      1980	ui.c	FUNCTION_58
0x2c1f	          0x4889e5	                            mov rbp, rsp	      1980	ui.c	FUNCTION_58
0x2c22	      0xbf00000000	                              mov edi, 0	      1981	ui.c	FUNCTION_58	CALL_1
0x2c27	      0xe800000000	                          call 0x4002c6c	      1981	ui.c	FUNCTION_58	CALL_1
0x2c2c	              0x90	                                     nop	      1982	ui.c	FUNCTION_58
0x2c2d	              0x5d	                                 pop rbp	      1982	ui.c	FUNCTION_58
0x2c2e	              0xc3	                                     ret	      1982	ui.c	FUNCTION_58
ui_set_shellsize	CALL,2:WHILE,0:IF,1:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	17
0x630	              0x55	                                push rbp	       366	ui.c	FUNCTION_10
0x631	          0x4889e5	                            mov rbp, rsp	       366	ui.c	FUNCTION_10
0x634	        0x4883ec10	                           sub rsp, 0x10	       366	ui.c	FUNCTION_10
0x638	          0x897dfc	                mov dword [rbp - 4], edi	       366	ui.c	FUNCTION_10
0x63b	    0x8b0500000000	            mov eax, dword [0x04000681] 	       368	ui.c	FUNCTION_10	IF_1
0x641	            0x85c0	                           test eax, eax	       368	ui.c	FUNCTION_10	IF_1
0x643	            0x7416	                            je 0x400069b	       368	ui.c	FUNCTION_10	IF_1
0x645	          0x8b45fc	                mov eax, dword [rbp - 4]	       369	ui.c	FUNCTION_10	CALL_1
0x648	      0xba0f000000	                            mov edx, 0xf	       369	ui.c	FUNCTION_10	CALL_1
0x64d	      0xbe01000000	                              mov esi, 1	       369	ui.c	FUNCTION_10	CALL_1
0x652	            0x89c7	                            mov edi, eax	       369	ui.c	FUNCTION_10	CALL_1
0x654	      0xe800000000	                          call 0x4000699	       369	ui.c	FUNCTION_10	CALL_1
0x659	            0xeb05	                           jmp 0x40006a0	       373	ui.c	FUNCTION_10
0x65b	      0xe800000000	                          call 0x40006a0	       372	ui.c	FUNCTION_10	CALL_2
0x660	              0x90	                                     nop	       373	ui.c	FUNCTION_10
0x661	              0xc9	                                   leave	       373	ui.c	FUNCTION_10
0x662	              0xc3	                                     ret	       373	ui.c	FUNCTION_10
open_app_context	CALL,2:WHILE,0:IF,1:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	11
0x2c8d	              0x55	                                push rbp	      2028	ui.c	FUNCTION_61
0x2c8e	          0x4889e5	                            mov rbp, rsp	      2028	ui.c	FUNCTION_61
0x2c91	    0x488b05000000	            mov rax, qword [0x04002cd8] 	      2029	ui.c	FUNCTION_61	IF_1
0x2c98	          0x4885c0	                           test rax, rax	      2029	ui.c	FUNCTION_61	IF_1
0x2c9b	            0x7511	                           jne 0x4002cee	      2029	ui.c	FUNCTION_61	IF_1
0x2c9d	      0xe800000000	                          call 0x4002ce2	      2031	ui.c	FUNCTION_61	IF_1	CALL_1
0x2ca2	      0xe800000000	                          call 0x4002ce7	      2032	ui.c	FUNCTION_61	IF_1	CALL_2
0x2ca7	    0x488905000000	            mov qword [0x04002cee], rax 	      2032	ui.c	FUNCTION_61	IF_1	CALL_2
0x2cae	              0x90	                                     nop	      2034	ui.c	FUNCTION_61
0x2caf	              0x5d	                                 pop rbp	      2034	ui.c	FUNCTION_61
0x2cb0	              0xc3	                                     ret	      2034	ui.c	FUNCTION_61
clip_init	CALL,0:WHILE,0:IF,1:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,1	27
0x6ef	              0x55	                                push rbp	       448	ui.c	FUNCTION_14
0x6f0	          0x4889e5	                            mov rbp, rsp	       448	ui.c	FUNCTION_14
0x6f3	          0x897dec	             mov dword [rbp - 0x14], edi	       448	ui.c	FUNCTION_14
0x6f6	    0x48c745f80000	                  mov qword [rbp - 8], 0	       451	ui.c	FUNCTION_14
0x6fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       454	ui.c	FUNCTION_14	FOR_1
0x702	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       454	ui.c	FUNCTION_14	FOR_1
0x705	            0x8910	                    mov dword [rax], edx	       454	ui.c	FUNCTION_14	FOR_1
0x707	        0x488b45f8	                mov rax, qword [rbp - 8]	       455	ui.c	FUNCTION_14	FOR_1
0x70b	    0xc74004000000	                  mov dword [rax + 4], 0	       455	ui.c	FUNCTION_14	FOR_1
0x712	        0x488b45f8	                mov rax, qword [rbp - 8]	       456	ui.c	FUNCTION_14	FOR_1
0x716	    0x48c740080000	                  mov qword [rax + 8], 0	       456	ui.c	FUNCTION_14	FOR_1
0x71e	        0x488b45f8	                mov rax, qword [rbp - 8]	       457	ui.c	FUNCTION_14	FOR_1
0x722	    0xc74010000000	               mov dword [rax + 0x10], 0	       457	ui.c	FUNCTION_14	FOR_1
0x729	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	ui.c	FUNCTION_14	FOR_1
0x72d	    0x48c740180000	               mov qword [rax + 0x18], 0	       458	ui.c	FUNCTION_14	FOR_1
0x735	        0x488b45f8	                mov rax, qword [rbp - 8]	       459	ui.c	FUNCTION_14	FOR_1
0x739	    0xc74020000000	               mov dword [rax + 0x20], 0	       459	ui.c	FUNCTION_14	FOR_1
0x740	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	ui.c	FUNCTION_14	FOR_1
0x744	    0x66c740480000	                mov word [rax + 0x48], 0	       460	ui.c	FUNCTION_14	FOR_1
0x74a	    0x48817df80000	                  cmp qword [rbp - 8], 0	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x752	            0x740a	                            je 0x400079e	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x754	    0x48c745f80000	                  mov qword [rbp - 8], 0	       464	ui.c	FUNCTION_14	FOR_1
0x75c	            0xeba0	                           jmp 0x400073e	       465	ui.c	FUNCTION_14	FOR_1
0x75e	              0x90	                                     nop	       463	ui.c	FUNCTION_14	FOR_1	IF_1
0x75f	              0x90	                                     nop	       466	ui.c	FUNCTION_14
0x760	              0x5d	                                 pop rbp	       466	ui.c	FUNCTION_14
0x761	              0xc3	                                     ret	       466	ui.c	FUNCTION_14
im_save_status	CALL,0:WHILE,0:IF,3:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	36
0x5252	              0x55	                                push rbp	      3350	ui.c	FUNCTION_81
0x5253	          0x4889e5	                            mov rbp, rsp	      3350	ui.c	FUNCTION_81
0x5256	        0x48897df8	                mov qword [rbp - 8], rdi	      3350	ui.c	FUNCTION_81
0x525a	    0x8b0500000000	            mov eax, dword [0x040052a0] 	      3358	ui.c	FUNCTION_81	IF_1
0x5260	            0x85c0	                           test eax, eax	      3358	ui.c	FUNCTION_81	IF_1
0x5262	            0x7563	                           jne 0x4005307	      3358	ui.c	FUNCTION_81	IF_1
0x5264	    0x8b0500000000	            mov eax, dword [0x040052aa] 	      3358	ui.c	FUNCTION_81	IF_1
0x526a	            0x85c0	                           test eax, eax	      3358	ui.c	FUNCTION_81	IF_1
0x526c	            0x7459	                            je 0x4005307	      3358	ui.c	FUNCTION_81	IF_1
0x526e	    0x8b0500000000	            mov eax, dword [0x040052b4] 	      3358	ui.c	FUNCTION_81	IF_1
0x5274	            0x85c0	                           test eax, eax	      3358	ui.c	FUNCTION_81	IF_1
0x5276	            0x754f	                           jne 0x4005307	      3358	ui.c	FUNCTION_81	IF_1
0x5278	    0x488b05000000	            mov rax, qword [0x040052bf] 	      3360	ui.c	FUNCTION_81	IF_1
0x527f	          0x4885c0	                           test rax, rax	      3360	ui.c	FUNCTION_81	IF_1
0x5282	            0x7443	                            je 0x4005307	      3360	ui.c	FUNCTION_81	IF_1
0x5284	    0x8b0500000000	            mov eax, dword [0x040052ca] 	      3363	ui.c	FUNCTION_81	IF_1
0x528a	            0x85c0	                           test eax, eax	      3363	ui.c	FUNCTION_81	IF_1
0x528c	            0x740a	                            je 0x40052d8	      3363	ui.c	FUNCTION_81	IF_1
0x528e	    0x8b0500000000	            mov eax, dword [0x040052d4] 	      3363	ui.c	FUNCTION_81	IF_1
0x5294	            0x85c0	                           test eax, eax	      3363	ui.c	FUNCTION_81	IF_1
0x5296	            0x742f	                            je 0x4005307	      3363	ui.c	FUNCTION_81	IF_1
0x5298	    0x8b0500000000	            mov eax, dword [0x040052de] 	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x529e	            0x85c0	                           test eax, eax	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x52a0	            0x740d	                            je 0x40052ef	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x52a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x52a6	    0x48c700020000	                      mov qword [rax], 2	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x52ad	            0xeb18	                           jmp 0x4005307	      3373	ui.c	FUNCTION_81
0x52af	        0x488b45f8	                mov rax, qword [rbp - 8]	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x52b3	          0x488b00	                    mov rax, qword [rax]	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x52b6	        0x4883f802	                              cmp rax, 2	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x52ba	            0x750b	                           jne 0x4005307	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x52bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3371	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x52c0	    0x48c700000000	                      mov qword [rax], 0	      3371	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x52c7	              0x90	                                     nop	      3373	ui.c	FUNCTION_81
0x52c8	              0x5d	                                 pop rbp	      3373	ui.c	FUNCTION_81
0x52c9	              0xc3	                                     ret	      3373	ui.c	FUNCTION_81
clip_own_selection	CALL,9:WHILE,0:IF,4:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	55
0x96b	              0x55	                                push rbp	       514	ui.c	FUNCTION_16
0x96c	          0x4889e5	                            mov rbp, rsp	       514	ui.c	FUNCTION_16
0x96f	        0x4883ec20	                           sub rsp, 0x20	       514	ui.c	FUNCTION_16
0x973	        0x48897de8	             mov qword [rbp - 0x18], rdi	       514	ui.c	FUNCTION_16
0x977	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       522	ui.c	FUNCTION_16	IF_1
0x97b	            0x8b00	                    mov eax, dword [rax]	       522	ui.c	FUNCTION_16	IF_1
0x97d	            0x85c0	                           test eax, eax	       522	ui.c	FUNCTION_16	IF_1
0x97f	     0xf849f000000	                            je 0x4000a64	       522	ui.c	FUNCTION_16	IF_1
0x985	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       524	ui.c	FUNCTION_16	IF_1
0x989	          0x8b4004	                mov eax, dword [rax + 4]	       524	ui.c	FUNCTION_16	IF_1
0x98c	          0x8945fc	                mov dword [rbp - 4], eax	       524	ui.c	FUNCTION_16	IF_1
0x98f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x993	          0x4889c7	                            mov rdi, rax	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x996	      0xe800000000	                          call 0x40009db	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x99b	          0x83f801	                              cmp eax, 1	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x99e	           0xf94c0	                                 sete al	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x9a1	           0xfb6d0	                           movzx edx, al	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x9a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x9a8	          0x895004	                mov dword [rax + 4], edx	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x9ab	        0x837dfc00	                  cmp dword [rbp - 4], 0	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x9af	            0x7573	                           jne 0x4000a64	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x9b1	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x9b9	            0x740a	                            je 0x4000a05	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x9bb	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x9c3	            0x755f	                           jne 0x4000a64	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x9c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x9c9	          0x8b4004	                mov eax, dword [rax + 4]	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x9cc	            0x85c0	                           test eax, eax	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x9ce	            0x7454	                            je 0x4000a64	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x9d0	      0xe800000000	                          call 0x4000a15	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x9d5	          0x83f802	                              cmp eax, 2	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x9d8	            0x740c	                            je 0x4000a26	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x9da	      0xe800000000	                          call 0x4000a1f	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x9df	      0x3d00100000	                         cmp eax, 0x1000	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x9e4	            0x753e	                           jne 0x4000a64	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x9e6	    0x48817de80000	               cmp qword [rbp - 0x18], 0	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x9ee	            0x750c	                           jne 0x4000a3c	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x9f0	      0xe800000000	                          call 0x4000a35	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x9f5	            0x85c0	                           test eax, eax	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x9f7	           0xf95c0	                                setne al	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x9fa	            0xeb0a	                           jmp 0x4000a46	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x9fc	      0xe800000000	                          call 0x4000a41	       536	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_5
0xa01	            0x85c0	                           test eax, eax	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0xa03	           0xf95c0	                                setne al	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0xa06	            0x84c0	                             test al, al	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0xa08	            0x741a	                            je 0x4000a64	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0xa0a	    0x8b1500000000	            mov edx, dword [0x04000a50] 	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0xa10	    0x8b0500000000	            mov eax, dword [0x04000a56] 	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0xa16	            0x39c2	                            cmp edx, eax	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0xa18	            0x740a	                            je 0x4000a64	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0xa1a	      0xbf19000000	                           mov edi, 0x19	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0xa1f	      0xe800000000	                          call 0x4000a64	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0xa24	              0x90	                                     nop	       546	ui.c	FUNCTION_16
0xa25	              0xc9	                                   leave	       546	ui.c	FUNCTION_16
0xa26	              0xc3	                                     ret	       546	ui.c	FUNCTION_16
clip_copy_modeless_selection	CALL,15:WHILE,0:IF,24:ELSE,9:DO,0:SWITCH,0:functions,0:FOR,4	433
0x1aff	              0x55	                                push rbp	      1206	ui.c	FUNCTION_35
0x1b00	          0x4889e5	                            mov rbp, rsp	      1206	ui.c	FUNCTION_35
0x1b03	        0x4883ec60	                           sub rsp, 0x60	      1206	ui.c	FUNCTION_35
0x1b07	          0x897dac	             mov dword [rbp - 0x54], edi	      1206	ui.c	FUNCTION_35
0x1b0a	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1213	ui.c	FUNCTION_35
0x1b11	    0x488b05000000	            mov rax, qword [0x04001b58] 	      1218	ui.c	FUNCTION_35
0x1b18	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1218	ui.c	FUNCTION_35
0x1b1b	    0x8b0500000000	            mov eax, dword [0x04001b61] 	      1219	ui.c	FUNCTION_35
0x1b21	          0x8945c8	             mov dword [rbp - 0x38], eax	      1219	ui.c	FUNCTION_35
0x1b24	    0x488b05000000	            mov rax, qword [0x04001b6b] 	      1220	ui.c	FUNCTION_35
0x1b2b	          0x8945cc	             mov dword [rbp - 0x34], eax	      1220	ui.c	FUNCTION_35
0x1b2e	    0x8b0500000000	            mov eax, dword [0x04001b74] 	      1221	ui.c	FUNCTION_35
0x1b34	          0x8945d0	             mov dword [rbp - 0x30], eax	      1221	ui.c	FUNCTION_35
0x1b37	    0x488b05000000	            mov rax, qword [0x04001b7e] 	      1224	ui.c	FUNCTION_35	IF_1
0x1b3e	          0x4885c0	                           test rax, rax	      1224	ui.c	FUNCTION_35	IF_1
0x1b41	     0xf8492050000	                            je 0x4002119	      1224	ui.c	FUNCTION_35	IF_1
0x1b47	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1230	ui.c	FUNCTION_35	IF_2
0x1b4a	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1230	ui.c	FUNCTION_35	IF_2
0x1b4d	            0x7e26	                           jle 0x4001bb5	      1230	ui.c	FUNCTION_35	IF_2
0x1b4f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1232	ui.c	FUNCTION_35	IF_2
0x1b52	          0x8945b0	             mov dword [rbp - 0x50], eax	      1232	ui.c	FUNCTION_35	IF_2
0x1b55	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1232	ui.c	FUNCTION_35	IF_2
0x1b58	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1232	ui.c	FUNCTION_35	IF_2
0x1b5b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1232	ui.c	FUNCTION_35	IF_2
0x1b5e	          0x8945cc	             mov dword [rbp - 0x34], eax	      1232	ui.c	FUNCTION_35	IF_2
0x1b61	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1233	ui.c	FUNCTION_35	IF_2
0x1b64	          0x8945b0	             mov dword [rbp - 0x50], eax	      1233	ui.c	FUNCTION_35	IF_2
0x1b67	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1233	ui.c	FUNCTION_35	IF_2
0x1b6a	          0x8945c8	             mov dword [rbp - 0x38], eax	      1233	ui.c	FUNCTION_35	IF_2
0x1b6d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1233	ui.c	FUNCTION_35	IF_2
0x1b70	          0x8945d0	             mov dword [rbp - 0x30], eax	      1233	ui.c	FUNCTION_35	IF_2
0x1b73	            0xeb22	                           jmp 0x4001bd7	      1233	ui.c	FUNCTION_35	IF_2
0x1b75	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b78	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b7b	            0x751a	                           jne 0x4001bd7	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b7d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b80	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b83	            0x7e12	                           jle 0x4001bd7	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b85	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b88	          0x8945b0	             mov dword [rbp - 0x50], eax	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b8b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b8e	          0x8945c8	             mov dword [rbp - 0x38], eax	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b91	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b94	          0x8945d0	             mov dword [rbp - 0x30], eax	      1237	ui.c	FUNCTION_35	ELSE_1	IF_3
0x1b97	    0x488b05000000	            mov rax, qword [0x04001bde] 	      1241	ui.c	FUNCTION_35
0x1b9e	    0x488b15000000	            mov rdx, qword [0x04001be5] 	      1241	ui.c	FUNCTION_35
0x1ba5	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      1241	ui.c	FUNCTION_35
0x1ba8	          0x4863c9	                         movsxd rcx, ecx	      1241	ui.c	FUNCTION_35
0x1bab	        0x48c1e102	                              shl rcx, 2	      1241	ui.c	FUNCTION_35
0x1baf	          0x4801ca	                            add rdx, rcx	      1241	ui.c	FUNCTION_35
0x1bb2	            0x8b12	                    mov edx, dword [rdx]	      1241	ui.c	FUNCTION_35
0x1bb4	            0x89d2	                            mov edx, edx	      1241	ui.c	FUNCTION_35
0x1bb6	          0x4801d0	                            add rax, rdx	      1241	ui.c	FUNCTION_35
0x1bb9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1241	ui.c	FUNCTION_35
0x1bbd	    0x8b0500000000	            mov eax, dword [0x04001c03] 	      1242	ui.c	FUNCTION_35	IF_4
0x1bc3	            0x85c0	                           test eax, eax	      1242	ui.c	FUNCTION_35	IF_4
0x1bc5	            0x7425	                            je 0x4001c2c	      1242	ui.c	FUNCTION_35	IF_4
0x1bc7	    0x488b05000000	            mov rax, qword [0x04001c0e] 	      1243	ui.c	FUNCTION_35	IF_4
0x1bce	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1243	ui.c	FUNCTION_35	IF_4
0x1bd1	          0x4863ca	                         movsxd rcx, edx	      1243	ui.c	FUNCTION_35	IF_4
0x1bd4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1243	ui.c	FUNCTION_35	IF_4
0x1bd8	          0x4801d1	                            add rcx, rdx	      1243	ui.c	FUNCTION_35	IF_4
0x1bdb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1243	ui.c	FUNCTION_35	IF_4
0x1bdf	          0x4889ce	                            mov rsi, rcx	      1243	ui.c	FUNCTION_35	IF_4
0x1be2	          0x4889d7	                            mov rdi, rdx	      1243	ui.c	FUNCTION_35	IF_4
0x1be5	            0xffd0	                                call rax	      1243	ui.c	FUNCTION_35	IF_4
0x1be7	          0x2945c8	             sub dword [rbp - 0x38], eax	      1243	ui.c	FUNCTION_35	IF_4
0x1bea	            0xeb22	                           jmp 0x4001c4e	      1243	ui.c	FUNCTION_35	IF_4
0x1bec	    0x8b0500000000	            mov eax, dword [0x04001c32] 	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x1bf2	            0x85c0	                           test eax, eax	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x1bf4	            0x7418	                            je 0x4001c4e	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x1bf6	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x1bf9	          0x4863d0	                         movsxd rdx, eax	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x1bfc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x1c00	          0x4801d0	                            add rax, rdx	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x1c03	           0xfb600	                   movzx eax, byte [rax]	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x1c06	            0x84c0	                             test al, al	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x1c08	            0x7504	                           jne 0x4001c4e	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x1c0a	        0x836dc801	               sub dword [rbp - 0x38], 1	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x1c0e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1249	ui.c	FUNCTION_35
0x1c11	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	      1249	ui.c	FUNCTION_35
0x1c14	          0x83c001	                              add eax, 1	      1249	ui.c	FUNCTION_35
0x1c17	            0x89c2	                            mov edx, eax	      1249	ui.c	FUNCTION_35
0x1c19	    0x488b05000000	            mov rax, qword [0x04001c60] 	      1249	ui.c	FUNCTION_35
0x1c20	           0xfafc2	                           imul eax, edx	      1249	ui.c	FUNCTION_35
0x1c23	          0x83c001	                              add eax, 1	      1249	ui.c	FUNCTION_35
0x1c26	          0x8945c0	             mov dword [rbp - 0x40], eax	      1249	ui.c	FUNCTION_35
0x1c29	    0x8b0500000000	            mov eax, dword [0x04001c6f] 	      1251	ui.c	FUNCTION_35	IF_6
0x1c2f	            0x85c0	                           test eax, eax	      1251	ui.c	FUNCTION_35	IF_6
0x1c31	            0x7405	                            je 0x4001c78	      1251	ui.c	FUNCTION_35	IF_6
0x1c33	          0xd165c0	               shl dword [rbp - 0x40], 1	      1252	ui.c	FUNCTION_35	IF_6
0x1c36	            0xeb1c	                           jmp 0x4001c94	      1252	ui.c	FUNCTION_35	IF_6
0x1c38	    0x8b0500000000	            mov eax, dword [0x04001c7e] 	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x1c3e	            0x85c0	                           test eax, eax	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x1c40	            0x7412	                            je 0x4001c94	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x1c42	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x1c45	            0x89d0	                            mov eax, edx	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x1c47	          0xc1e002	                              shl eax, 2	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x1c4a	             0x1d0	                            add eax, edx	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x1c4c	          0xc1e002	                              shl eax, 2	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x1c4f	             0x1d0	                            add eax, edx	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x1c51	          0x8945c0	             mov dword [rbp - 0x40], eax	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x1c54	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1256	ui.c	FUNCTION_35	CALL_1
0x1c57	            0x4898	                                    cdqe	      1256	ui.c	FUNCTION_35	CALL_1
0x1c59	      0xbe01000000	                              mov esi, 1	      1256	ui.c	FUNCTION_35	CALL_1
0x1c5e	          0x4889c7	                            mov rdi, rax	      1256	ui.c	FUNCTION_35	CALL_1
0x1c61	      0xe800000000	                          call 0x4001ca6	      1256	ui.c	FUNCTION_35	CALL_1
0x1c66	        0x488945f8	                mov qword [rbp - 8], rax	      1256	ui.c	FUNCTION_35	CALL_1
0x1c6a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1257	ui.c	FUNCTION_35	IF_8
0x1c6f	     0xf8467040000	                            je 0x400211c	      1257	ui.c	FUNCTION_35	IF_8
0x1c75	        0x488b45f8	                mov rax, qword [rbp - 8]	      1261	ui.c	FUNCTION_35	FOR_1
0x1c79	        0x488945e8	             mov qword [rbp - 0x18], rax	      1261	ui.c	FUNCTION_35	FOR_1
0x1c7d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1261	ui.c	FUNCTION_35	FOR_1
0x1c80	          0x8945b0	             mov dword [rbp - 0x50], eax	      1261	ui.c	FUNCTION_35	FOR_1
0x1c83	      0xe99e030000	                           jmp 0x4002066	      1261	ui.c	FUNCTION_35	FOR_1
0x1c88	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1263	ui.c	FUNCTION_35	FOR_1	IF_9
0x1c8b	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      1263	ui.c	FUNCTION_35	FOR_1	IF_9
0x1c8e	            0x7508	                           jne 0x4001cd8	      1263	ui.c	FUNCTION_35	FOR_1	IF_9
0x1c90	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1264	ui.c	FUNCTION_35	FOR_1	IF_9
0x1c93	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1264	ui.c	FUNCTION_35	FOR_1	IF_9
0x1c96	            0xeb07	                           jmp 0x4001cdf	      1264	ui.c	FUNCTION_35	FOR_1	IF_9
0x1c98	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x1c9f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x1ca2	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x1ca5	            0x7508	                           jne 0x4001cef	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x1ca7	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x1caa	          0x8945b8	             mov dword [rbp - 0x48], eax	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x1cad	            0xeb0a	                           jmp 0x4001cf9	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x1caf	    0x488b05000000	            mov rax, qword [0x04001cf6] 	      1271	ui.c	FUNCTION_35	FOR_1	ELSE_5
0x1cb6	          0x8945b8	             mov dword [rbp - 0x48], eax	      1271	ui.c	FUNCTION_35	FOR_1	ELSE_5
0x1cb9	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1273	ui.c	FUNCTION_35	FOR_1	CALL_2
0x1cbc	            0x89c7	                            mov edi, eax	      1273	ui.c	FUNCTION_35	FOR_1	CALL_2
0x1cbe	      0xe87a060000	              call sym.clip_get_line_end	      1273	ui.c	FUNCTION_35	FOR_1	CALL_2
0x1cc3	          0x8945e0	             mov dword [rbp - 0x20], eax	      1273	ui.c	FUNCTION_35	FOR_1	CALL_2
0x1cc6	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x1cc9	          0x4863d0	                         movsxd rdx, eax	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x1ccc	    0x488b05000000	            mov rax, qword [0x04001d13] 	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x1cd3	          0x4839c2	                            cmp rdx, rax	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x1cd6	            0x7c33	                            jl 0x4001d4b	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x1cd8	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x1cdb	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x1cde	            0x7c08	                            jl 0x4001d28	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x1ce0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x1ce3	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x1ce6	            0x7e23	                           jle 0x4001d4b	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x1ce8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1279	ui.c	FUNCTION_35	FOR_1	IF_11
0x1ceb	          0x8945b8	             mov dword [rbp - 0x48], eax	      1279	ui.c	FUNCTION_35	FOR_1	IF_11
0x1cee	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1280	ui.c	FUNCTION_35	FOR_1	IF_11	IF_12
0x1cf1	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      1280	ui.c	FUNCTION_35	FOR_1	IF_11	IF_12
0x1cf4	            0x7d06	                           jge 0x4001d3c	      1280	ui.c	FUNCTION_35	FOR_1	IF_11	IF_12
0x1cf6	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1281	ui.c	FUNCTION_35	FOR_1	IF_11	IF_12
0x1cf9	          0x8945b8	             mov dword [rbp - 0x48], eax	      1281	ui.c	FUNCTION_35	FOR_1	IF_11	IF_12
0x1cfc	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1284	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x1cff	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1284	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x1d02	            0x7507	                           jne 0x4001d4b	      1284	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x1d04	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x1d0b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d0e	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d11	            0x7e2a	                           jle 0x4001d7d	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d13	    0x488b05000000	            mov rax, qword [0x04001d5a] 	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d1a	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d1d	          0x4863d2	                         movsxd rdx, edx	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d20	        0x4883ea01	                              sub rdx, 1	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d24	          0x4801d0	                            add rax, rdx	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d27	           0xfb600	                   movzx eax, byte [rax]	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d2a	            0x84c0	                             test al, al	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d2c	            0x750f	                           jne 0x4001d7d	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d32	        0x488d5001	                      lea rdx, [rax + 1]	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d36	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d3a	          0xc6000a	                     mov byte [rax], 0xa	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x1d3d	    0x8b0500000000	            mov eax, dword [0x04001d83] 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x1d43	          0x3945b0	            cmp dword [rbp - 0x50], eax 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x1d46	     0xf8dd6020000	                           jge 0x4002062	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x1d4c	    0x8b0500000000	            mov eax, dword [0x04001d92] 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x1d52	          0x3945b8	            cmp dword [rbp - 0x48], eax 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x1d55	     0xf8fc7020000	                            jg 0x4002062	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x1d5b	    0x8b0500000000	            mov eax, dword [0x04001da1] 	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d61	            0x85c0	                           test eax, eax	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d63	     0xf8410010000	                            je 0x4001eb9	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d69	    0x488b05000000	            mov rax, qword [0x04001db0] 	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d70	    0x488b15000000	            mov rdx, qword [0x04001db7] 	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d77	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d7a	          0x4863c9	                         movsxd rcx, ecx	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d7d	        0x48c1e102	                              shl rcx, 2	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d81	          0x4801ca	                            add rdx, rcx	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d84	            0x8b12	                    mov edx, dword [rdx]	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d86	            0x89d2	                            mov edx, edx	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d88	          0x4801d0	                            add rax, rdx	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d8b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x1d8f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x1d92	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x1d95	      0xe9ce000000	                           jmp 0x4001ea8	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x1d9a	    0x8b0500000000	            mov eax, dword [0x04001de0] 	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1da0	      0x3dcc260000	                         cmp eax, 0x26cc	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1da5	            0x755d	                           jne 0x4001e44	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1da7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1daa	          0x4863d0	                         movsxd rdx, eax	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1db1	          0x4801d0	                            add rax, rdx	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1db4	           0xfb600	                   movzx eax, byte [rax]	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1db7	            0x3c8e	                            cmp al, 0x8e	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1db9	            0x7549	                           jne 0x4001e44	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1304	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dbf	        0x488d5001	                      lea rdx, [rax + 1]	      1304	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dc3	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1304	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dc7	          0xc6008e	                    mov byte [rax], 0x8e	      1304	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dce	        0x488d5001	                      lea rdx, [rax + 1]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dd2	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dd6	    0x488b15000000	            mov rdx, qword [0x04001e1d] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1ddd	    0x488b0d000000	            mov rcx, qword [0x04001e24] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1de4	          0x8b75b0	             mov esi, dword [rbp - 0x50]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1de7	          0x4863f6	                         movsxd rsi, esi	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dea	        0x48c1e602	                              shl rsi, 2	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dee	          0x4801f1	                            add rcx, rsi	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1df1	            0x8b31	                    mov esi, dword [rcx]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1df3	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1df6	             0x1f1	                            add ecx, esi	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1df8	            0x89c9	                            mov ecx, ecx	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dfa	          0x4801ca	                            add rdx, rcx	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1dfd	           0xfb612	                   movzx edx, byte [rdx]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1e00	            0x8810	                      mov byte [rax], dl	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1e02	            0xeb60	                           jmp 0x4001ea4	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x1e04	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x1e08	        0x488d5001	                      lea rdx, [rax + 1]	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x1e0c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x1e10	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x1e13	          0x4863ca	                         movsxd rcx, edx	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x1e16	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x1e1a	          0x4801ca	                            add rdx, rcx	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x1e1d	           0xfb612	                   movzx edx, byte [rdx]	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x1e20	            0x8810	                      mov byte [rax], dl	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x1e22	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x1e25	          0x4863d0	                         movsxd rdx, eax	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x1e28	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x1e2c	          0x4801d0	                            add rax, rdx	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x1e2f	           0xfb600	                   movzx eax, byte [rax]	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x1e32	           0xfb6c0	                           movzx eax, al	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x1e35	            0x4898	                                    cdqe	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x1e37	     0xfb680000000	                   movzx eax, byte [rax]	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x1e3e	            0x3c02	                               cmp al, 2	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x1e40	            0x7522	                           jne 0x4001ea4	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x1e42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x1e46	        0x488d5001	                      lea rdx, [rax + 1]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x1e4a	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x1e4e	        0x8345d401	               add dword [rbp - 0x2c], 1	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x1e52	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x1e55	          0x4863ca	                         movsxd rcx, edx	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x1e58	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x1e5c	          0x4801ca	                            add rdx, rcx	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x1e5f	           0xfb612	                   movzx edx, byte [rdx]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x1e62	            0x8810	                      mov byte [rax], dl	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x1e64	        0x8345d401	               add dword [rbp - 0x2c], 1	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x1e68	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x1e6b	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x1e6e	     0xf8c26ffffff	                            jl 0x4001dda	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x1e74	      0xe9a9010000	                           jmp 0x4002062	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x1e79	    0x8b0500000000	            mov eax, dword [0x04001ebf] 	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x1e7f	            0x85c0	                           test eax, eax	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x1e81	     0xf844c010000	                            je 0x4002013	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x1e87	    0x488b05000000	            mov rax, qword [0x04001ece] 	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x1e8e	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x1e91	          0x4863d2	                         movsxd rdx, edx	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x1e94	        0x48c1e202	                              shl rdx, 2	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x1e98	          0x4801d0	                            add rax, rdx	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x1e9b	            0x8b00	                    mov eax, dword [rax]	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x1e9d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x1ea0	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x1ea3	          0x8945d8	             mov dword [rbp - 0x28], eax	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x1ea6	      0xe91a010000	                           jmp 0x4002005	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x1eab	    0x488b05000000	            mov rax, qword [0x04001ef2] 	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1eb2	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1eb5	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1eb8	             0x1ca	                            add edx, ecx	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1eba	          0x4863d2	                         movsxd rdx, edx	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ebd	        0x48c1e202	                              shl rdx, 2	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ec1	          0x4801d0	                            add rax, rdx	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ec4	            0x8b00	                    mov eax, dword [rax]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ec6	            0x85c0	                           test eax, eax	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ec8	            0x752b	                           jne 0x4001f35	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1eca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ece	        0x488d5001	                      lea rdx, [rax + 1]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ed2	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ed6	    0x488b0d000000	            mov rcx, qword [0x04001f1d] 	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1edd	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ee0	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ee3	             0x1f2	                            add edx, esi	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ee5	          0x4863d2	                         movsxd rdx, edx	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ee8	          0x4801ca	                            add rdx, rcx	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1eeb	           0xfb612	                   movzx edx, byte [rdx]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1eee	            0x8810	                      mov byte [rax], dl	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ef0	      0xe9a8000000	                           jmp 0x4001fdd	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x1ef5	    0x488b05000000	            mov rax, qword [0x04001f3c] 	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1efc	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1eff	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f02	             0x1ca	                            add edx, ecx	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f04	          0x4863d2	                         movsxd rdx, edx	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f07	        0x48c1e202	                              shl rdx, 2	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f0b	          0x4801d0	                            add rax, rdx	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f0e	            0x8b00	                    mov eax, dword [rax]	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f10	            0x89c2	                            mov edx, eax	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f12	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f16	          0x4889c6	                            mov rsi, rax	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f19	            0x89d7	                            mov edi, edx	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f1b	      0xe800000000	                          call 0x4001f60	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f20	            0x4898	                                    cdqe	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f22	        0x480145e8	            add qword [rbp - 0x18], rax 	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x1f26	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x1f2d	            0xeb60	                           jmp 0x4001fcf	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x1f2f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f32	            0x4898	                                    cdqe	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f34	    0x488b04c50000	                  mov rax, qword [rax*8]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f3c	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f3f	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f42	             0x1ca	                            add edx, ecx	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f44	          0x4863d2	                         movsxd rdx, edx	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f47	        0x48c1e202	                              shl rdx, 2	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f4b	          0x4801d0	                            add rax, rdx	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f4e	            0x8b00	                    mov eax, dword [rax]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f50	            0x85c0	                           test eax, eax	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f52	            0x7448	                            je 0x4001fdc	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f54	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f57	            0x4898	                                    cdqe	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f59	    0x488b04c50000	                  mov rax, qword [rax*8]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f61	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f64	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f67	             0x1ca	                            add edx, ecx	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f69	          0x4863d2	                         movsxd rdx, edx	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f6c	        0x48c1e202	                              shl rdx, 2	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f70	          0x4801d0	                            add rax, rdx	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f73	            0x8b00	                    mov eax, dword [rax]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f75	            0x89c2	                            mov edx, eax	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f7b	          0x4889c6	                            mov rsi, rax	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f7e	            0x89d7	                            mov edi, edx	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f80	      0xe800000000	                          call 0x4001fc5	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f85	            0x4898	                                    cdqe	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f87	        0x480145e8	            add qword [rbp - 0x18], rax 	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x1f8b	        0x8345dc01	               add dword [rbp - 0x24], 1	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x1f8f	    0x8b0500000000	            mov eax, dword [0x04001fd5] 	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x1f95	          0x3945dc	            cmp dword [rbp - 0x24], eax 	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x1f98	            0x7c95	                            jl 0x4001f6f	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x1f9a	            0xeb01	                           jmp 0x4001fdd	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x1f9c	              0x90	                                     nop	      1334	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x1f9d	    0x488b05000000	            mov rax, qword [0x04001fe4] 	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x1fa4	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x1fa7	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x1faa	             0x1ca	                            add edx, ecx	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x1fac	          0x4863d2	                         movsxd rdx, edx	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x1faf	        0x4883c201	                              add rdx, 1	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x1fb3	          0x4801d0	                            add rax, rdx	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x1fb6	           0xfb600	                   movzx eax, byte [rax]	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x1fb9	            0x84c0	                             test al, al	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x1fbb	            0x7504	                           jne 0x4002001	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x1fbd	        0x8345d801	               add dword [rbp - 0x28], 1	      1341	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x1fc1	        0x8345d801	               add dword [rbp - 0x28], 1	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x1fc5	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x1fc8	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x1fcb	     0xf8cdafeffff	                            jl 0x4001eeb	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x1fd1	            0xeb4f	                           jmp 0x4002062	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x1fd3	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1fd6	          0x2b45b4	             sub eax, dword [rbp - 0x4c]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1fd9	          0x4863d0	                         movsxd rdx, eax	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1fdc	    0x488b05000000	            mov rax, qword [0x04002023] 	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1fe3	    0x488b0d000000	            mov rcx, qword [0x0400202a] 	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1fea	          0x8b75b0	             mov esi, dword [rbp - 0x50]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1fed	          0x4863f6	                         movsxd rsi, esi	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1ff0	        0x48c1e602	                              shl rsi, 2	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1ff4	          0x4801f1	                            add rcx, rsi	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1ff7	            0x8b09	                    mov ecx, dword [rcx]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1ff9	            0x89ce	                            mov esi, ecx	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1ffb	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x1ffe	          0x4863c9	                         movsxd rcx, ecx	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x2001	          0x4801f1	                            add rcx, rsi	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x2004	          0x4801c1	                            add rcx, rax	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x2007	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x200b	          0x4889ce	                            mov rsi, rcx	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x200e	          0x4889c7	                            mov rdi, rax	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x2011	      0xe800000000	                          call 0x4002056	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x2016	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1349	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9
0x2019	          0x2b45b4	             sub eax, dword [rbp - 0x4c]	      1349	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9
0x201c	            0x4898	                                    cdqe	      1349	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9
0x201e	        0x480145e8	            add qword [rbp - 0x18], rax 	      1349	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9
0x2022	        0x8345b001	               add dword [rbp - 0x50], 1	      1261	ui.c	FUNCTION_35	FOR_1
0x2026	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1261	ui.c	FUNCTION_35	FOR_1
0x2029	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1261	ui.c	FUNCTION_35	FOR_1
0x202c	     0xf8e56fcffff	                           jle 0x4001cc8	      1261	ui.c	FUNCTION_35	FOR_1
0x2032	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1355	ui.c	FUNCTION_35	IF_23
0x2036	            0x740f	                            je 0x4002087	      1355	ui.c	FUNCTION_35	IF_23
0x2038	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1356	ui.c	FUNCTION_35	IF_23
0x203c	        0x488d5001	                      lea rdx, [rax + 1]	      1356	ui.c	FUNCTION_35	IF_23
0x2040	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1356	ui.c	FUNCTION_35	IF_23
0x2044	          0xc6000a	                     mov byte [rax], 0xa	      1356	ui.c	FUNCTION_35	IF_23
0x2047	      0xbf00000000	                              mov edi, 0	      1359	ui.c	FUNCTION_35	CALL_7
0x204c	      0xe800000000	                          call 0x4002091	      1359	ui.c	FUNCTION_35	CALL_7
0x2051	      0xbf00000000	                              mov edi, 0	      1360	ui.c	FUNCTION_35	CALL_8
0x2056	      0xe800000000	                          call 0x400209b	      1360	ui.c	FUNCTION_35	CALL_8
0x205b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1363	ui.c	FUNCTION_35	CALL_9
0x205f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1363	ui.c	FUNCTION_35	CALL_9
0x2063	          0x4829c2	                            sub rdx, rax	      1363	ui.c	FUNCTION_35	CALL_9
0x2066	        0x488b45f8	                mov rax, qword [rbp - 8]	      1363	ui.c	FUNCTION_35	CALL_9
0x206a	      0xb900000000	                              mov ecx, 0	      1363	ui.c	FUNCTION_35	CALL_9
0x206f	          0x4889c6	                            mov rsi, rax	      1363	ui.c	FUNCTION_35	CALL_9
0x2072	      0xbf00000000	                              mov edi, 0	      1363	ui.c	FUNCTION_35	CALL_9
0x2077	      0xe800000000	                          call 0x40020bc	      1363	ui.c	FUNCTION_35	CALL_9
0x207c	      0xbf00000000	                              mov edi, 0	      1366	ui.c	FUNCTION_35	CALL_10
0x2081	      0xe800000000	                          call 0x40020c6	      1366	ui.c	FUNCTION_35	CALL_10
0x2086	        0x837dac00	               cmp dword [rbp - 0x54], 0	      1369	ui.c	FUNCTION_35	IF_24
0x208a	            0x743f	                            je 0x400210b	      1369	ui.c	FUNCTION_35	IF_24
0x208c	      0xbf00000000	                              mov edi, 0	      1372	ui.c	FUNCTION_35	IF_24	CALL_11
0x2091	      0xe800000000	                          call 0x40020d6	      1372	ui.c	FUNCTION_35	IF_24	CALL_11
0x2096	      0xbf00000000	                              mov edi, 0	      1373	ui.c	FUNCTION_35	IF_24	CALL_12
0x209b	      0xe800000000	                          call 0x40020e0	      1373	ui.c	FUNCTION_35	IF_24	CALL_12
0x20a0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x20a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x20a8	          0x4829c2	                            sub rdx, rax	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x20ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x20af	      0xb900000000	                              mov ecx, 0	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x20b4	          0x4889c6	                            mov rsi, rax	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x20b7	      0xbf00000000	                              mov edi, 0	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x20bc	      0xe800000000	                          call 0x4002101	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x20c1	      0xbf00000000	                              mov edi, 0	      1375	ui.c	FUNCTION_35	IF_24	CALL_14
0x20c6	      0xe800000000	                          call 0x400210b	      1375	ui.c	FUNCTION_35	IF_24	CALL_14
0x20cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1378	ui.c	FUNCTION_35	CALL_15
0x20cf	          0x4889c7	                            mov rdi, rax	      1378	ui.c	FUNCTION_35	CALL_15
0x20d2	      0xe800000000	                          call 0x4002117	      1378	ui.c	FUNCTION_35	CALL_15
0x20d7	            0xeb04	                           jmp 0x400211d	      1378	ui.c	FUNCTION_35	CALL_15
0x20d9	              0x90	                                     nop	      1225	ui.c	FUNCTION_35	IF_1
0x20da	            0xeb01	                           jmp 0x400211d	      1225	ui.c	FUNCTION_35	IF_1
0x20dc	              0x90	                                     nop	      1258	ui.c	FUNCTION_35	IF_8
0x20dd	              0xc9	                                   leave	      1379	ui.c	FUNCTION_35
0x20de	              0xc3	                                     ret	      1379	ui.c	FUNCTION_35
get_input_buf	CALL,4:WHILE,0:IF,2:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	33
0x25fd	              0x55	                                push rbp	      1652	ui.c	FUNCTION_48
0x25fe	          0x4889e5	                            mov rbp, rsp	      1652	ui.c	FUNCTION_48
0x2601	        0x4883ec10	                           sub rsp, 0x10	      1652	ui.c	FUNCTION_48
0x2605	      0xbf18000000	                           mov edi, 0x18	      1656	ui.c	FUNCTION_48	CALL_1
0x260a	      0xe800000000	                          call 0x400264f	      1656	ui.c	FUNCTION_48	CALL_1
0x260f	        0x488945f8	                mov qword [rbp - 8], rax	      1656	ui.c	FUNCTION_48	CALL_1
0x2613	      0x48837df800	                  cmp qword [rbp - 8], 0	      1657	ui.c	FUNCTION_48	IF_1
0x2618	            0x7452	                            je 0x40026ac	      1657	ui.c	FUNCTION_48	IF_1
0x261a	    0x8b0500000000	            mov eax, dword [0x04002660] 	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x2620	          0x83c001	                              add eax, 1	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x2623	            0x89c7	                            mov edi, eax	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x2625	      0xe800000000	                          call 0x400266a	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x262a	          0x4889c2	                            mov rdx, rax	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x262d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x2631	        0x48895010	             mov qword [rax + 0x10], rdx	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x2635	        0x488b45f8	                mov rax, qword [rbp - 8]	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x2639	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x263d	          0x4885c0	                           test rax, rax	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x2640	            0x741e	                            je 0x40026a0	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x2642	    0x8b0500000000	            mov eax, dword [0x04002688] 	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x2648	          0x4863d0	                         movsxd rdx, eax	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x264b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x264f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x2653	      0xbe00000000	                              mov esi, 0	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x2658	          0x4889c7	                            mov rdi, rax	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x265b	      0xe800000000	                          call 0x40026a0	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x2660	    0x8b1500000000	            mov edx, dword [0x040026a6] 	      1663	ui.c	FUNCTION_48	IF_1
0x2666	        0x488b45f8	                mov rax, qword [rbp - 8]	      1663	ui.c	FUNCTION_48	IF_1
0x266a	            0x8910	                    mov dword [rax], edx	      1663	ui.c	FUNCTION_48	IF_1
0x266c	      0xe800000000	                          call 0x40026b1	      1665	ui.c	FUNCTION_48	CALL_4
0x2671	        0x488b45f8	                mov rax, qword [rbp - 8]	      1666	ui.c	FUNCTION_48
0x2675	              0xc9	                                   leave	      1667	ui.c	FUNCTION_48
0x2676	              0xc3	                                     ret	      1667	ui.c	FUNCTION_48
ui_cursor_shape_forced	CALL,4:WHILE,0:IF,1:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	16
0x2bf0	              0x55	                                push rbp	      1961	ui.c	FUNCTION_57
0x2bf1	          0x4889e5	                            mov rbp, rsp	      1961	ui.c	FUNCTION_57
0x2bf4	        0x4883ec10	                           sub rsp, 0x10	      1961	ui.c	FUNCTION_57
0x2bf8	          0x897dfc	                mov dword [rbp - 4], edi	      1961	ui.c	FUNCTION_57
0x2bfb	    0x8b0500000000	            mov eax, dword [0x04002c41] 	      1963	ui.c	FUNCTION_57	IF_1
0x2c01	            0x85c0	                           test eax, eax	      1963	ui.c	FUNCTION_57	IF_1
0x2c03	            0x7407	                            je 0x4002c4c	      1963	ui.c	FUNCTION_57	IF_1
0x2c05	      0xe800000000	                          call 0x4002c4a	      1964	ui.c	FUNCTION_57	CALL_1
0x2c0a	            0xeb0a	                           jmp 0x4002c56	      1964	ui.c	FUNCTION_57	CALL_1
0x2c0c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1967	ui.c	FUNCTION_57	CALL_2
0x2c0f	            0x89c7	                            mov edi, eax	      1967	ui.c	FUNCTION_57	CALL_2
0x2c11	      0xe800000000	                          call 0x4002c56	      1967	ui.c	FUNCTION_57	CALL_2
0x2c16	      0xe800000000	                          call 0x4002c5b	      1974	ui.c	FUNCTION_57	CALL_4
0x2c1b	              0x90	                                     nop	      1976	ui.c	FUNCTION_57
0x2c1c	              0xc9	                                   leave	      1976	ui.c	FUNCTION_57
0x2c1d	              0xc3	                                     ret	      1976	ui.c	FUNCTION_57
clip_process_selection	CALL,28:WHILE,0:IF,20:ELSE,6:DO,0:SWITCH,1:functions,0:FOR,0	473
0x10df	              0x55	                                push rbp	       859	ui.c	FUNCTION_28
0x10e0	          0x4889e5	                            mov rbp, rsp	       859	ui.c	FUNCTION_28
0x10e3	        0x4883ec20	                           sub rsp, 0x20	       859	ui.c	FUNCTION_28
0x10e7	          0x897dec	             mov dword [rbp - 0x14], edi	       859	ui.c	FUNCTION_28
0x10ea	          0x8975e8	             mov dword [rbp - 0x18], esi	       859	ui.c	FUNCTION_28
0x10ed	          0x8955e4	             mov dword [rbp - 0x1c], edx	       859	ui.c	FUNCTION_28
0x10f0	          0x894de0	             mov dword [rbp - 0x20], ecx	       859	ui.c	FUNCTION_28
0x10f3	    0x48c745f80000	                  mov qword [rbp - 8], 0	       860	ui.c	FUNCTION_28
0x10fb	    0xc745f0010000	               mov dword [rbp - 0x10], 1	       862	ui.c	FUNCTION_28
0x1102	        0x837dec03	               cmp dword [rbp - 0x14], 3	       864	ui.c	FUNCTION_28	IF_1
0x1106	     0xf85b9000000	                           jne 0x4001205	       864	ui.c	FUNCTION_28	IF_1
0x110c	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x1110	        0x488b5008	                mov rdx, qword [rax + 8]	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x1114	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x1118	        0x488b4018	            mov rax, qword [rax + 0x18] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x111c	          0x4839c2	                            cmp rdx, rax	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x111f	            0x753a	                           jne 0x400119b	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x1121	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x1125	          0x8b5010	            mov edx, dword [rax + 0x10] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x1128	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x112c	          0x8b4020	            mov eax, dword [rax + 0x20] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x112f	            0x39c2	                            cmp edx, eax	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x1131	            0x7528	                           jne 0x400119b	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x1133	    0x8b0500000000	            mov eax, dword [0x04001179] 	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x1139	            0x85c0	                           test eax, eax	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x113b	            0x740f	                            je 0x400118c	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x113d	      0xbe00000000	                              mov esi, 0	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x1142	      0xbf00000000	                              mov edi, 0	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x1147	      0xe800000000	                          call 0x400118c	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x114c	        0x488b45f8	                mov rax, qword [rbp - 8]	       873	ui.c	FUNCTION_28	IF_1	IF_2
0x1150	    0x66c740480000	                mov word [rax + 0x48], 0	       873	ui.c	FUNCTION_28	IF_1	IF_2
0x1156	      0xe9ee050000	                           jmp 0x4001789	       874	ui.c	FUNCTION_28	IF_1	IF_2
0x115b	      0xe800000000	                          call 0x40011a0	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x1160	            0x85c0	                           test eax, eax	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x1162	            0x752f	                           jne 0x40011d3	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x1164	    0x8b0500000000	            mov eax, dword [0x040011aa] 	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x116a	            0x85c0	                           test eax, eax	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x116c	            0x741b	                            je 0x40011c9	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x116e	    0x488b05000000	            mov rax, qword [0x040011b5] 	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x1175	      0xbe41000000	                           mov esi, 0x41	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x117a	          0x4889c7	                            mov rdi, rax	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x117d	      0xe800000000	                          call 0x40011c2	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x1182	          0x4885c0	                           test rax, rax	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x1185	            0x750c	                           jne 0x40011d3	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x1187	            0xeb14	                           jmp 0x40011dd	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x1189	    0x8b0500000000	            mov eax, dword [0x040011cf] 	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x118f	            0x85c0	                           test eax, eax	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x1191	            0x740a	                            je 0x40011dd	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x1193	      0xbf00000000	                              mov edi, 0	       887	ui.c	FUNCTION_28	IF_1	CALL_5
0x1198	      0xe800000000	                          call 0x40011dd	       887	ui.c	FUNCTION_28	IF_1	CALL_5
0x119d	    0x8b0500000000	            mov eax, dword [0x040011e3] 	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x11a3	            0x85c0	                           test eax, eax	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x11a5	            0x740f	                            je 0x40011f6	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x11a7	      0xbe00000000	                              mov esi, 0	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x11ac	      0xbf00000000	                              mov edi, 0	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x11b1	      0xe800000000	                          call 0x40011f6	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x11b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       893	ui.c	FUNCTION_28	IF_1
0x11ba	    0x66c740480200	                mov word [rax + 0x48], 2	       893	ui.c	FUNCTION_28	IF_1
0x11c0	      0xe984050000	                           jmp 0x4001789	       894	ui.c	FUNCTION_28	IF_1
0x11c5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       897	ui.c	FUNCTION_28	CALL_7
0x11c8	            0x89c7	                            mov edi, eax	       897	ui.c	FUNCTION_28	CALL_7
0x11ca	      0xe800000000	                          call 0x400120f	       897	ui.c	FUNCTION_28	CALL_7
0x11cf	          0x8945e4	             mov dword [rbp - 0x1c], eax	       897	ui.c	FUNCTION_28	CALL_7
0x11d2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       898	ui.c	FUNCTION_28	CALL_8
0x11d5	            0x89c7	                            mov edi, eax	       898	ui.c	FUNCTION_28	CALL_8
0x11d7	      0xe800000000	                          call 0x400121c	       898	ui.c	FUNCTION_28	CALL_8
0x11dc	          0x8945e8	             mov dword [rbp - 0x18], eax	       898	ui.c	FUNCTION_28	CALL_8
0x11df	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       900	ui.c	FUNCTION_28	CALL_9
0x11e2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       900	ui.c	FUNCTION_28	CALL_9
0x11e5	            0x89d6	                            mov esi, edx	       900	ui.c	FUNCTION_28	CALL_9
0x11e7	            0x89c7	                            mov edi, eax	       900	ui.c	FUNCTION_28	CALL_9
0x11e9	      0xe800000000	                          call 0x400122e	       900	ui.c	FUNCTION_28	CALL_9
0x11ee	          0x8945e8	             mov dword [rbp - 0x18], eax	       900	ui.c	FUNCTION_28	CALL_9
0x11f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       903	ui.c	FUNCTION_28	IF_6
0x11f5	          0x8b4040	            mov eax, dword [rax + 0x40] 	       903	ui.c	FUNCTION_28	IF_6
0x11f8	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       903	ui.c	FUNCTION_28	IF_6
0x11fb	            0x751d	                           jne 0x400125a	       903	ui.c	FUNCTION_28	IF_6
0x11fd	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       903	ui.c	FUNCTION_28	IF_6
0x1200	          0x4863d0	                         movsxd rdx, eax	       903	ui.c	FUNCTION_28	IF_6
0x1203	        0x488b45f8	                mov rax, qword [rbp - 8]	       903	ui.c	FUNCTION_28	IF_6
0x1207	        0x488b4038	            mov rax, qword [rax + 0x38] 	       903	ui.c	FUNCTION_28	IF_6
0x120b	          0x4839c2	                            cmp rdx, rax	       903	ui.c	FUNCTION_28	IF_6
0x120e	            0x750a	                           jne 0x400125a	       903	ui.c	FUNCTION_28	IF_6
0x1210	        0x837de000	               cmp dword [rbp - 0x20], 0	       903	ui.c	FUNCTION_28	IF_6
0x1214	     0xf8428050000	                            je 0x4001782	       903	ui.c	FUNCTION_28	IF_6
0x121a	        0x488b45f8	                mov rax, qword [rbp - 8]	       910	ui.c	FUNCTION_28	IF_7
0x121e	         0xfb74048	           movzx eax, word [rax + 0x48] 	       910	ui.c	FUNCTION_28	IF_7
0x1222	        0x6683f802	                               cmp ax, 2	       910	ui.c	FUNCTION_28	IF_7
0x1226	     0xf8569010000	                           jne 0x40013d5	       910	ui.c	FUNCTION_28	IF_7
0x122c	        0x837dec02	               cmp dword [rbp - 0x14], 2	       910	ui.c	FUNCTION_28	IF_7
0x1230	     0xf855f010000	                           jne 0x40013d5	       910	ui.c	FUNCTION_28	IF_7
0x1236	        0x488b45f8	                mov rax, qword [rbp - 8]	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x123a	          0x8b5010	            mov edx, dword [rax + 0x10] 	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x123d	        0x488b45f8	                mov rax, qword [rbp - 8]	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x1241	        0x488b4008	                mov rax, qword [rax + 8]	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x1245	            0x89c7	                            mov edi, eax	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x1247	          0x8b75e8	             mov esi, dword [rbp - 0x18]	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x124a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x124d	            0x89d1	                            mov ecx, edx	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x124f	            0x89fa	                            mov edx, edi	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x1251	            0x89c7	                            mov edi, eax	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x1253	      0xe8e9fbffff	               call sym.clip_compare_pos	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x1258	            0x85c0	                           test eax, eax	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x125a	     0xf88ac000000	                            js 0x400134c	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x1260	        0x488b45f8	                mov rax, qword [rbp - 8]	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x1264	          0x8b5020	            mov edx, dword [rax + 0x20] 	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x1267	        0x488b45f8	                mov rax, qword [rbp - 8]	       919	ui.c	FUNCTION_28	IF_7	IF_8
0x126b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       919	ui.c	FUNCTION_28	IF_7	IF_8
0x126f	            0x89c7	                            mov edi, eax	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x1271	          0x8b75e8	             mov esi, dword [rbp - 0x18]	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x1274	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x1277	            0x89d1	                            mov ecx, edx	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x1279	            0x89fa	                            mov edx, edi	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x127b	            0x89c7	                            mov edi, eax	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x127d	      0xe8bffbffff	               call sym.clip_compare_pos	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x1282	            0x85c0	                           test eax, eax	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x1284	     0xf89b9000000	                           jns 0x4001383	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x128a	        0x488b45f8	                mov rax, qword [rbp - 8]	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x128e	        0x488b5008	                mov rdx, qword [rax + 8]	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x1292	        0x488b45f8	                mov rax, qword [rbp - 8]	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x1296	        0x488b4018	            mov rax, qword [rax + 0x18] 	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x129a	          0x4839c2	                            cmp rdx, rax	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x129d	            0x751e	                           jne 0x40012fd	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x129f	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x12a3	          0x8b4020	            mov eax, dword [rax + 0x20] 	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x12a6	          0x2b45e8	             sub eax, dword [rbp - 0x18]	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x12a9	            0x89c2	                            mov edx, eax	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x12ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x12af	          0x8b4010	            mov eax, dword [rax + 0x10] 	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x12b2	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x12b5	            0x29c1	                            sub ecx, eax	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x12b7	            0x89c8	                            mov eax, ecx	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x12b9	            0x39c2	                            cmp edx, eax	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x12bb	            0x7f4f	                            jg 0x400134c	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x12bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12c1	        0x488b4018	            mov rax, qword [rax + 0x18] 	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12c5	            0x89c2	                            mov edx, eax	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12c7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12ca	            0x29c2	                            sub edx, eax	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       923	ui.c	FUNCTION_28	IF_7	IF_8
0x12d0	        0x488b4008	                mov rax, qword [rax + 8]	       923	ui.c	FUNCTION_28	IF_7	IF_8
0x12d4	            0x89c1	                            mov ecx, eax	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12d6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12d9	            0x29c1	                            sub ecx, eax	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12db	            0x89c8	                            mov eax, ecx	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12dd	             0x1d0	                            add eax, edx	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12df	          0x8945f4	              mov dword [rbp - 0xc], eax	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12e2	        0x837df400	                cmp dword [rbp - 0xc], 0	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12e6	            0x7f24	                            jg 0x400134c	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x12e8	        0x837df400	                cmp dword [rbp - 0xc], 0	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x12ec	            0x7555	                           jne 0x4001383	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x12ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x12f2	          0x8b5010	            mov edx, dword [rax + 0x10] 	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x12f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x12f9	          0x8b4020	            mov eax, dword [rax + 0x20] 	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x12fc	             0x1d0	                            add eax, edx	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x12fe	            0x89c2	                            mov edx, eax	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x1300	          0xc1ea1f	                           shr edx, 0x1f	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x1303	             0x1d0	                            add eax, edx	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x1305	            0xd1f8	                              sar eax, 1	       925	ui.c	FUNCTION_28	IF_7	IF_8
0x1307	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x130a	            0x7e37	                           jle 0x4001383	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x130c	        0x488b45f8	                mov rax, qword [rbp - 8]	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x1310	        0x488b4018	            mov rax, qword [rax + 0x18] 	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x1314	            0x89c2	                            mov edx, eax	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x1316	        0x488b45f8	                mov rax, qword [rbp - 8]	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x131a	        0x6689502c	               mov word [rax + 0x2c], dx	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x131e	        0x488b45f8	                mov rax, qword [rbp - 8]	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x1322	          0x8b4020	            mov eax, dword [rax + 0x20] 	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x1325	          0x8d50ff	                      lea edx, [rax - 1]	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x1328	        0x488b45f8	                mov rax, qword [rbp - 8]	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x132c	        0x6689502e	               mov word [rax + 0x2e], dx	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x1330	        0x488b45f8	                mov rax, qword [rbp - 8]	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x1334	          0x8b4020	            mov eax, dword [rax + 0x20] 	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x1337	            0x89c2	                            mov edx, eax	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x1339	        0x488b45f8	                mov rax, qword [rbp - 8]	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x133d	        0x66895030	               mov word [rax + 0x30], dx	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x1341	            0xeb34	                           jmp 0x40013b7	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x1343	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x1347	        0x488b4008	                mov rax, qword [rax + 8]	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x134b	            0x89c2	                            mov edx, eax	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x134d	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x1351	        0x6689502c	               mov word [rax + 0x2c], dx	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x1355	        0x488b45f8	                mov rax, qword [rbp - 8]	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x1359	          0x8b4010	            mov eax, dword [rax + 0x10] 	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x135c	            0x89c2	                            mov edx, eax	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x135e	        0x488b45f8	                mov rax, qword [rbp - 8]	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x1362	        0x6689502e	               mov word [rax + 0x2e], dx	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x1366	        0x488b45f8	                mov rax, qword [rbp - 8]	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x136a	          0x8b4010	            mov eax, dword [rax + 0x10] 	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x136d	            0x89c2	                            mov edx, eax	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x136f	        0x488b45f8	                mov rax, qword [rbp - 8]	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x1373	        0x66895030	               mov word [rax + 0x30], dx	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x1377	        0x488b45f8	                mov rax, qword [rbp - 8]	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x137b	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x137f	        0x6683f801	                               cmp ax, 1	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x1383	            0x7510	                           jne 0x40013d5	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x1385	        0x837de000	               cmp dword [rbp - 0x20], 0	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x1389	            0x750a	                           jne 0x40013d5	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x138b	        0x488b45f8	                mov rax, qword [rbp - 8]	       938	ui.c	FUNCTION_28	IF_7	IF_9
0x138f	    0x66c7404a0000	                mov word [rax + 0x4a], 0	       938	ui.c	FUNCTION_28	IF_7	IF_9
0x1395	        0x488b45f8	                mov rax, qword [rbp - 8]	       942	ui.c	FUNCTION_28
0x1399	    0x66c740480100	                mov word [rax + 0x48], 1	       942	ui.c	FUNCTION_28
0x139f	        0x837de000	               cmp dword [rbp - 0x20], 0	       948	ui.c	FUNCTION_28	IF_10
0x13a3	            0x742b	                            je 0x4001410	       948	ui.c	FUNCTION_28	IF_10
0x13a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       948	ui.c	FUNCTION_28	IF_10
0x13a9	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       948	ui.c	FUNCTION_28	IF_10
0x13ad	          0x8d5001	                      lea edx, [rax + 1]	       948	ui.c	FUNCTION_28	IF_10
0x13b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       948	ui.c	FUNCTION_28	IF_10
0x13b4	        0x6689504a	               mov word [rax + 0x4a], dx	       948	ui.c	FUNCTION_28	IF_10
0x13b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       948	ui.c	FUNCTION_28	IF_10
0x13bc	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       948	ui.c	FUNCTION_28	IF_10
0x13c0	        0x6683f802	                               cmp ax, 2	       948	ui.c	FUNCTION_28	IF_10
0x13c4	            0x760a	                           jbe 0x4001410	       948	ui.c	FUNCTION_28	IF_10
0x13c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       949	ui.c	FUNCTION_28	IF_10
0x13ca	    0x66c7404a0000	                mov word [rax + 0x4a], 0	       949	ui.c	FUNCTION_28	IF_10
0x13d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       951	ui.c	FUNCTION_28	SWITCH_1
0x13d4	         0xfb7404a	           movzx eax, word [rax + 0x4a] 	       951	ui.c	FUNCTION_28	SWITCH_1
0x13d8	           0xfb7c0	                           movzx eax, ax	       951	ui.c	FUNCTION_28	SWITCH_1
0x13db	          0x83f801	                              cmp eax, 1	       951	ui.c	FUNCTION_28	SWITCH_1
0x13de	     0xf84bb010000	                            je 0x40015df	       951	ui.c	FUNCTION_28	SWITCH_1
0x13e4	          0x83f802	                              cmp eax, 2	       951	ui.c	FUNCTION_28	SWITCH_1
0x13e7	     0xf849a020000	                            je 0x40016c7	       951	ui.c	FUNCTION_28	SWITCH_1
0x13ed	            0x85c0	                           test eax, eax	       951	ui.c	FUNCTION_28	SWITCH_1
0x13ef	     0xf8533030000	                           jne 0x4001768	       951	ui.c	FUNCTION_28	SWITCH_1
0x13f5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x13f8	          0x4863d0	                         movsxd rdx, eax	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x13fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x13ff	        0x488b4038	            mov rax, qword [rax + 0x38] 	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x1403	          0x4839c2	                            cmp rdx, rax	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x1406	            0x7414	                            je 0x400145c	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x1408	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x140b	            0x89c7	                            mov edi, eax	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x140d	      0xe82b0f0000	              call sym.clip_get_line_end	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x1412	            0x89c2	                            mov edx, eax	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x1414	        0x488b45f8	                mov rax, qword [rbp - 8]	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x1418	        0x66895034	               mov word [rax + 0x34], dx	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x141c	        0x488b45f8	                mov rax, qword [rbp - 8]	       960	ui.c	FUNCTION_28	SWITCH_1	IF_12
0x1420	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       960	ui.c	FUNCTION_28	SWITCH_1	IF_12
0x1424	           0xfb7c8	                           movzx ecx, ax	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x1427	        0x488b45f8	                mov rax, qword [rbp - 8]	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x142b	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x142f	           0xfb7d0	                           movzx edx, ax	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x1432	          0x8b75e8	             mov esi, dword [rbp - 0x18]	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x1435	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x1438	            0x89c7	                            mov edi, eax	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x143a	      0xe802faffff	               call sym.clip_compare_pos	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x143f	            0x85c0	                           test eax, eax	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x1441	     0xf88a0000000	                            js 0x4001527	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x1447	        0x488b45f8	                mov rax, qword [rbp - 8]	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x144b	         0xfb74034	           movzx eax, word [rax + 0x34] 	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x144f	           0xfb7c0	                           movzx eax, ax	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x1452	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x1455	            0x7f36	                            jg 0x40014cd	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x1457	    0x488b05000000	            mov rax, qword [0x0400149e] 	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x145e	            0x89c7	                            mov edi, eax	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x1460	        0x488b45f8	                mov rax, qword [rbp - 8]	       964	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x1464	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       964	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x1468	           0xfb7d0	                           movzx edx, ax	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x146b	        0x488b45f8	                mov rax, qword [rbp - 8]	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x146f	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x1473	           0xfb7f0	                           movzx esi, ax	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x1476	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x1479	        0x488b45f8	                mov rax, qword [rbp - 8]	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x147d	          0x4189f8	                            mov r8d, edi	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x1480	          0x4889c7	                            mov rdi, rax	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x1483	      0xe8280f0000	 call sym.clip_update_modeless_selection	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x1488	      0xe99b020000	                           jmp 0x4001768	       989	ui.c	FUNCTION_28	SWITCH_1
0x148d	    0x8b0500000000	            mov eax, dword [0x040014d3] 	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x1493	            0x85c0	                           test eax, eax	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x1495	            0x741a	                            je 0x40014f1	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x1497	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x149a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x149d	            0x89d6	                            mov esi, edx	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x149f	            0x89c7	                            mov edi, eax	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x14a1	      0xe800000000	                          call 0x40014e6	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x14a6	            0x85c0	                           test eax, eax	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x14a8	            0x7407	                            je 0x40014f1	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x14aa	    0xc745f0020000	               mov dword [rbp - 0x10], 2	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x14b1	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14b4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14b7	          0x8d3c02	                    lea edi, [rdx + rax]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       972	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2
0x14be	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       972	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2
0x14c2	           0xfb7d0	                           movzx edx, ax	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14c9	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14cd	           0xfb7f0	                           movzx esi, ax	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14d0	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14d7	          0x4189f8	                            mov r8d, edi	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14da	          0x4889c7	                            mov rdi, rax	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14dd	      0xe8ce0e0000	 call sym.clip_update_modeless_selection	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x14e2	      0xe941020000	                           jmp 0x4001768	       989	ui.c	FUNCTION_28	SWITCH_1
0x14e7	    0x8b0500000000	            mov eax, dword [0x0400152d] 	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x14ed	            0x85c0	                           test eax, eax	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x14ef	            0x742a	                            je 0x400155b	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x14f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x14f5	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x14f9	           0xfb7d0	                           movzx edx, ax	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x14fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x1500	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x1504	           0xfb7c0	                           movzx eax, ax	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x1507	            0x89d6	                            mov esi, edx	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x1509	            0x89c7	                            mov edi, eax	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x150b	      0xe800000000	                          call 0x4001550	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x1510	            0x85c0	                           test eax, eax	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x1512	            0x7407	                            je 0x400155b	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x1514	    0xc745f0020000	               mov dword [rbp - 0x10], 2	       980	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x151b	        0x488b45f8	                mov rax, qword [rbp - 8]	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x151f	         0xfb74034	           movzx eax, word [rax + 0x34] 	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x1523	           0xfb7c0	                           movzx eax, ax	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x1526	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x1529	            0x7f3e	                            jg 0x40015a9	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x152b	        0x488b45f8	                mov rax, qword [rbp - 8]	       984	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x152f	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       984	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x1533	           0xfb7d0	                           movzx edx, ax	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x1536	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x1539	          0x8d3c02	                    lea edi, [rdx + rax]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x153c	        0x488b45f8	                mov rax, qword [rbp - 8]	       984	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x1540	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       984	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x1544	           0xfb7c8	                           movzx ecx, ax	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x1547	        0x488b45f8	                mov rax, qword [rbp - 8]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x154b	         0xfb74034	           movzx eax, word [rax + 0x34] 	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x154f	           0xfb7d0	                           movzx edx, ax	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x1552	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x1555	        0x488b45f8	                mov rax, qword [rbp - 8]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x1559	          0x4189f8	                            mov r8d, edi	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x155c	          0x4889c7	                            mov rdi, rax	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x155f	      0xe84c0e0000	 call sym.clip_update_modeless_selection	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x1564	      0xe9bf010000	                           jmp 0x4001768	       989	ui.c	FUNCTION_28	SWITCH_1
0x1569	        0x488b45f8	                mov rax, qword [rbp - 8]	       987	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4
0x156d	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	       987	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4
0x1571	           0xfb7d0	                           movzx edx, ax	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x1574	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x1577	          0x8d3c02	                    lea edi, [rdx + rax]	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x157a	        0x488b45f8	                mov rax, qword [rbp - 8]	       987	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4
0x157e	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	       987	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4
0x1582	           0xfb7c8	                           movzx ecx, ax	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x1585	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x1588	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x158b	        0x488b45f8	                mov rax, qword [rbp - 8]	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x158f	          0x4189f8	                            mov r8d, edi	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x1592	          0x4889c7	                            mov rdi, rax	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x1595	      0xe8160e0000	 call sym.clip_update_modeless_selection	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x159a	      0xe989010000	                           jmp 0x4001768	       989	ui.c	FUNCTION_28	SWITCH_1
0x159f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15a2	          0x4863d0	                         movsxd rdx, eax	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15a9	        0x488b4038	            mov rax, qword [rax + 0x38] 	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15ad	          0x4839c2	                            cmp rdx, rax	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15b0	            0x752a	                           jne 0x400161c	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15b6	         0xfb74032	           movzx eax, word [rax + 0x32] 	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15ba	           0xfb7c0	                           movzx eax, ax	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15bd	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15c0	            0x7f1a	                            jg 0x400161c	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15c6	         0xfb74034	           movzx eax, word [rax + 0x34] 	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15ca	           0xfb7c0	                           movzx eax, ax	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15cd	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15d0	            0x7e0a	                           jle 0x400161c	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15d2	        0x837de000	               cmp dword [rbp - 0x20], 0	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15d6	     0xf8469010000	                            je 0x4001785	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x15dc	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x15df	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x15e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x15e6	            0x89ce	                            mov esi, ecx	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x15e8	          0x4889c7	                            mov rdi, rax	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x15eb	      0xe8ef0a0000	       call sym.clip_get_word_boundaries	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x15f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1002	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x15f4	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	      1002	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x15f8	           0xfb7c8	                           movzx ecx, ax	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x15fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x15ff	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x1603	           0xfb7d0	                           movzx edx, ax	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x1606	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x1609	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x160c	            0x89c7	                            mov edi, eax	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x160e	      0xe82ef8ffff	               call sym.clip_compare_pos	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x1613	            0x85c0	                           test eax, eax	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x1615	            0x7838	                            js 0x400168f	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x1617	        0x488b45f8	                mov rax, qword [rbp - 8]	      1004	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x161b	         0xfb74034	           movzx eax, word [rax + 0x34] 	      1004	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x161f	           0xfb7f8	                           movzx edi, ax	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x1622	        0x488b45f8	                mov rax, qword [rbp - 8]	      1004	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x1626	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	      1004	ui.c	FUNCTION_28	SWITCH_1	IF_18
0x162a	           0xfb7d0	                           movzx edx, ax	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x162d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x1631	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x1635	           0xfb7f0	                           movzx esi, ax	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x1638	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x163b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x163f	          0x4189f8	                            mov r8d, edi	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x1642	          0x4889c7	                            mov rdi, rax	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x1645	      0xe8660d0000	 call sym.clip_update_modeless_selection	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x164a	      0xe9d9000000	                           jmp 0x4001768	      1008	ui.c	FUNCTION_28	SWITCH_1
0x164f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1007	ui.c	FUNCTION_28	SWITCH_1	ELSE_5
0x1653	         0xfb74030	           movzx eax, word [rax + 0x30] 	      1007	ui.c	FUNCTION_28	SWITCH_1	ELSE_5
0x1657	           0xfb7f8	                           movzx edi, ax	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x165a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1007	ui.c	FUNCTION_28	SWITCH_1	ELSE_5
0x165e	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1007	ui.c	FUNCTION_28	SWITCH_1	ELSE_5
0x1662	           0xfb7c8	                           movzx ecx, ax	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x1665	        0x488b45f8	                mov rax, qword [rbp - 8]	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x1669	         0xfb74032	           movzx eax, word [rax + 0x32] 	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x166d	           0xfb7d0	                           movzx edx, ax	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x1670	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x1673	        0x488b45f8	                mov rax, qword [rbp - 8]	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x1677	          0x4189f8	                            mov r8d, edi	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x167a	          0x4889c7	                            mov rdi, rax	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x167d	      0xe82e0d0000	 call sym.clip_update_modeless_selection	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x1682	      0xe9a1000000	                           jmp 0x4001768	      1008	ui.c	FUNCTION_28	SWITCH_1
0x1687	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x168a	          0x4863d0	                         movsxd rdx, eax	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x168d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x1691	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x1695	          0x4839c2	                            cmp rdx, rax	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x1698	            0x750a	                           jne 0x40016e4	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x169a	        0x837de000	               cmp dword [rbp - 0x20], 0	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x169e	     0xf84a4000000	                            je 0x4001788	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x16a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1015	ui.c	FUNCTION_28	SWITCH_1	IF_20
0x16a8	         0xfb7402e	           movzx eax, word [rax + 0x2e] 	      1015	ui.c	FUNCTION_28	SWITCH_1	IF_20
0x16ac	           0xfb7c8	                           movzx ecx, ax	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x16af	        0x488b45f8	                mov rax, qword [rbp - 8]	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x16b3	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x16b7	           0xfb7d0	                           movzx edx, ax	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x16ba	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x16bd	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x16c0	            0x89c7	                            mov edi, eax	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x16c2	      0xe87af7ffff	               call sym.clip_compare_pos	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x16c7	            0x85c0	                           test eax, eax	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x16c9	            0x782f	                            js 0x400173a	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x16cb	    0x488b05000000	            mov rax, qword [0x04001712] 	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16d2	            0x89c1	                            mov ecx, eax	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16d8	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16dc	           0xfb7f0	                           movzx esi, ax	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16df	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16e6	          0x4189c8	                            mov r8d, ecx	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16e9	            0x89d1	                            mov ecx, edx	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16eb	      0xba00000000	                              mov edx, 0	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16f0	          0x4889c7	                            mov rdi, rax	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16f3	      0xe8b80c0000	 call sym.clip_update_modeless_selection	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x16f8	            0xeb2d	                           jmp 0x4001767	      1021	ui.c	FUNCTION_28	SWITCH_1
0x16fa	    0x488b05000000	            mov rax, qword [0x04001741] 	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x1701	            0x89c1	                            mov ecx, eax	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x1703	        0x488b45f8	                mov rax, qword [rbp - 8]	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x1707	         0xfb7402c	           movzx eax, word [rax + 0x2c] 	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x170b	           0xfb7d0	                           movzx edx, ax	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x170e	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x1711	        0x488b45f8	                mov rax, qword [rbp - 8]	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x1715	          0x4189c8	                            mov r8d, ecx	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x1718	            0x89d1	                            mov ecx, edx	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x171a	      0xba00000000	                              mov edx, 0	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x171f	          0x4889c7	                            mov rdi, rax	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x1722	      0xe8890c0000	 call sym.clip_update_modeless_selection	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x1727	              0x90	                                     nop	      1021	ui.c	FUNCTION_28	SWITCH_1
0x1728	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1024	ui.c	FUNCTION_28
0x172b	          0x4863d0	                         movsxd rdx, eax	      1024	ui.c	FUNCTION_28
0x172e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1024	ui.c	FUNCTION_28
0x1732	        0x48895038	             mov qword [rax + 0x38], rdx	      1024	ui.c	FUNCTION_28
0x1736	        0x488b45f8	                mov rax, qword [rbp - 8]	      1025	ui.c	FUNCTION_28
0x173a	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1025	ui.c	FUNCTION_28
0x173d	          0x895040	             mov dword [rax + 0x40], edx	      1025	ui.c	FUNCTION_28
0x1740	            0xeb07	                           jmp 0x4001789	      1025	ui.c	FUNCTION_28
0x1742	              0x90	                                     nop	       904	ui.c	FUNCTION_28	IF_6
0x1743	            0xeb04	                           jmp 0x4001789	       904	ui.c	FUNCTION_28	IF_6
0x1745	              0x90	                                     nop	       995	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x1746	            0xeb01	                           jmp 0x4001789	       995	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x1748	              0x90	                                     nop	      1012	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x1749	              0xc9	                                   leave	      1031	ui.c	FUNCTION_28
0x174a	              0xc3	                                     ret	      1031	ui.c	FUNCTION_28
clip_auto_select	CALL,4:WHILE,0:IF,2:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	15
0xc90	              0x55	                                push rbp	       675	ui.c	FUNCTION_22
0xc91	          0x4889e5	                            mov rbp, rsp	       675	ui.c	FUNCTION_22
0xc94	      0xe800000000	                          call 0x4000cd9	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0xc99	            0x85c0	                           test eax, eax	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0xc9b	            0x740a	                            je 0x4000ce7	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0xc9d	      0xbf00000000	                              mov edi, 0	       677	ui.c	FUNCTION_22	CALL_2
0xca2	      0xe869feffff	            call sym.clip_copy_selection	       677	ui.c	FUNCTION_22	CALL_2
0xca7	      0xe800000000	                          call 0x4000cec	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0xcac	            0x85c0	                           test eax, eax	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0xcae	            0x740a	                            je 0x4000cfa	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0xcb0	      0xbf00000000	                              mov edi, 0	       679	ui.c	FUNCTION_22	CALL_4
0xcb5	      0xe856feffff	            call sym.clip_copy_selection	       679	ui.c	FUNCTION_22	CALL_4
0xcba	              0x90	                                     nop	       680	ui.c	FUNCTION_22
0xcbb	              0x5d	                                 pop rbp	       680	ui.c	FUNCTION_22
0xcbc	              0xc3	                                     ret	       680	ui.c	FUNCTION_22
end_global_changes	CALL,4:WHILE,0:IF,5:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	39
0xbea	              0x55	                                push rbp	       642	ui.c	FUNCTION_21
0xbeb	          0x4889e5	                            mov rbp, rsp	       642	ui.c	FUNCTION_21
0xbee	    0x8b0500000000	            mov eax, dword [0x04000c34] 	       643	ui.c	FUNCTION_21	IF_1
0xbf4	          0x83e801	                              sub eax, 1	       643	ui.c	FUNCTION_21	IF_1
0xbf7	    0x890500000000	            mov dword [0x04000c3d], eax 	       643	ui.c	FUNCTION_21	IF_1
0xbfd	    0x8b0500000000	            mov eax, dword [0x04000c43] 	       643	ui.c	FUNCTION_21	IF_1
0xc03	            0x85c0	                           test eax, eax	       643	ui.c	FUNCTION_21	IF_1
0xc05	     0xf8f82000000	                            jg 0x4000ccd	       643	ui.c	FUNCTION_21	IF_1
0xc0b	    0x8b0500000000	            mov eax, dword [0x04000c51] 	       646	ui.c	FUNCTION_21	IF_2
0xc11	            0x85c0	                           test eax, eax	       646	ui.c	FUNCTION_21	IF_2
0xc13	            0x756c	                           jne 0x4000cc1	       646	ui.c	FUNCTION_21	IF_2
0xc15	    0xc70500000000	               mov dword [0x04000c5f], 1	       648	ui.c	FUNCTION_21	IF_2
0xc1f	    0x8b0500000000	            mov eax, dword [0x04000c65] 	       649	ui.c	FUNCTION_21	IF_2
0xc25	    0x890500000000	            mov dword [0x04000c6b], eax 	       649	ui.c	FUNCTION_21	IF_2
0xc2b	    0xc70500000000	               mov dword [0x04000c75], 0	       650	ui.c	FUNCTION_21	IF_2
0xc35	    0x8b0500000000	            mov eax, dword [0x04000c7b] 	       651	ui.c	FUNCTION_21	IF_2	IF_3
0xc3b	            0x85c0	                           test eax, eax	       651	ui.c	FUNCTION_21	IF_2	IF_3
0xc3d	            0x7442	                            je 0x4000cc1	       651	ui.c	FUNCTION_21	IF_2	IF_3
0xc3f	    0x8b0500000000	            mov eax, dword [0x04000c85] 	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0xc45	          0x83e001	                              and eax, 1	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0xc48	            0x85c0	                           test eax, eax	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0xc4a	            0x7414	                            je 0x4000ca0	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0xc4c	      0xbf00000000	                              mov edi, 0	       657	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_1
0xc51	      0xe800000000	                          call 0x4000c96	       657	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_1
0xc56	      0xbf00000000	                              mov edi, 0	       658	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_2
0xc5b	      0xe800000000	                          call 0x4000ca0	       658	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_2
0xc60	    0x8b0500000000	            mov eax, dword [0x04000ca6] 	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0xc66	          0x83e002	                              and eax, 2	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0xc69	            0x85c0	                           test eax, eax	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0xc6b	            0x7414	                            je 0x4000cc1	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0xc6d	      0xbf00000000	                              mov edi, 0	       662	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_3
0xc72	      0xe800000000	                          call 0x4000cb7	       662	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_3
0xc77	      0xbf00000000	                              mov edi, 0	       663	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_4
0xc7c	      0xe800000000	                          call 0x4000cc1	       663	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_4
0xc81	    0xc70500000000	               mov dword [0x04000ccb], 0	       667	ui.c	FUNCTION_21
0xc8b	            0xeb01	                           jmp 0x4000cce	       667	ui.c	FUNCTION_21
0xc8d	              0x90	                                     nop	       645	ui.c	FUNCTION_21	IF_1
0xc8e	              0x5d	                                 pop rbp	       668	ui.c	FUNCTION_21
0xc8f	              0xc3	                                     ret	       668	ui.c	FUNCTION_21
clip_x11_owner_exists	CALL,1:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	23
0x3d1b	              0x55	                                push rbp	      2551	ui.c	FUNCTION_73
0x3d1c	          0x4889e5	                            mov rbp, rsp	      2551	ui.c	FUNCTION_73
0x3d1f	              0x53	                                push rbx	      2551	ui.c	FUNCTION_73
0x3d20	        0x4883ec18	                           sub rsp, 0x18	      2551	ui.c	FUNCTION_73
0x3d24	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2551	ui.c	FUNCTION_73
0x3d28	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2552	ui.c	FUNCTION_73	CALL_1
0x3d2c	        0x488b5850	            mov rbx, qword [rax + 0x50] 	      2552	ui.c	FUNCTION_73	CALL_1
0x3d30	    0x8b0500000000	            mov eax, dword [0x04003d76] 	      2552	ui.c	FUNCTION_73	CALL_1
0x3d36	            0x85c0	                           test eax, eax	      2552	ui.c	FUNCTION_73	CALL_1
0x3d38	            0x7407	                            je 0x4003d81	      2552	ui.c	FUNCTION_73	CALL_1
0x3d3a	      0xe800000000	                          call 0x4003d7f	      2552	ui.c	FUNCTION_73	CALL_1
0x3d3f	            0xeb07	                           jmp 0x4003d88	      2552	ui.c	FUNCTION_73	CALL_1
0x3d41	    0x488b05000000	            mov rax, qword [0x04003d88] 	      2552	ui.c	FUNCTION_73	CALL_1
0x3d48	          0x4889de	                            mov rsi, rbx	      2552	ui.c	FUNCTION_73	CALL_1
0x3d4b	          0x4889c7	                            mov rdi, rax	      2552	ui.c	FUNCTION_73	CALL_1
0x3d4e	      0xe800000000	                          call 0x4003d93	      2552	ui.c	FUNCTION_73	CALL_1
0x3d53	          0x4885c0	                           test rax, rax	      2552	ui.c	FUNCTION_73	CALL_1
0x3d56	           0xf95c0	                                setne al	      2552	ui.c	FUNCTION_73	CALL_1
0x3d59	           0xfb6c0	                           movzx eax, al	      2552	ui.c	FUNCTION_73	CALL_1
0x3d5c	        0x4883c418	                           add rsp, 0x18	      2553	ui.c	FUNCTION_73
0x3d60	              0x5b	                                 pop rbx	      2553	ui.c	FUNCTION_73
0x3d61	              0x5d	                                 pop rbp	      2553	ui.c	FUNCTION_73
0x3d62	              0xc3	                                     ret	      2553	ui.c	FUNCTION_73
clip_gen_request_selection	CALL,3:WHILE,0:IF,1:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	17
0x2561	              0x55	                                push rbp	      1548	ui.c	FUNCTION_42
0x2562	          0x4889e5	                            mov rbp, rsp	      1548	ui.c	FUNCTION_42
0x2565	        0x4883ec10	                           sub rsp, 0x10	      1548	ui.c	FUNCTION_42
0x2569	        0x48897df8	                mov qword [rbp - 8], rdi	      1548	ui.c	FUNCTION_42
0x256d	    0x8b0500000000	            mov eax, dword [0x040025b3] 	      1551	ui.c	FUNCTION_42	IF_1
0x2573	            0x85c0	                           test eax, eax	      1551	ui.c	FUNCTION_42	IF_1
0x2575	            0x740e	                            je 0x40025c5	      1551	ui.c	FUNCTION_42	IF_1
0x2577	        0x488b45f8	                mov rax, qword [rbp - 8]	      1552	ui.c	FUNCTION_42	CALL_1
0x257b	          0x4889c7	                            mov rdi, rax	      1552	ui.c	FUNCTION_42	CALL_1
0x257e	      0xe800000000	                          call 0x40025c3	      1552	ui.c	FUNCTION_42	CALL_1
0x2583	            0xeb0c	                           jmp 0x40025d1	      1559	ui.c	FUNCTION_42
0x2585	        0x488b45f8	                mov rax, qword [rbp - 8]	      1555	ui.c	FUNCTION_42	CALL_2
0x2589	          0x4889c7	                            mov rdi, rax	      1555	ui.c	FUNCTION_42	CALL_2
0x258c	      0xe800000000	                          call 0x40025d1	      1555	ui.c	FUNCTION_42	CALL_2
0x2591	              0x90	                                     nop	      1559	ui.c	FUNCTION_42
0x2592	              0xc9	                                   leave	      1559	ui.c	FUNCTION_42
0x2593	              0xc3	                                     ret	      1559	ui.c	FUNCTION_42
clip_x11_own_selection	CALL,8:WHILE,0:IF,3:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	65
0x3c2c	              0x55	                                push rbp	      2514	ui.c	FUNCTION_71
0x3c2d	          0x4889e5	                            mov rbp, rsp	      2514	ui.c	FUNCTION_71
0x3c30	            0x4155	                                push r13	      2514	ui.c	FUNCTION_71
0x3c32	            0x4154	                                push r12	      2514	ui.c	FUNCTION_71
0x3c34	              0x53	                                push rbx	      2514	ui.c	FUNCTION_71
0x3c35	        0x4883ec18	                           sub rsp, 0x18	      2514	ui.c	FUNCTION_71
0x3c39	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2514	ui.c	FUNCTION_71
0x3c3d	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2514	ui.c	FUNCTION_71
0x3c41	    0x8b0500000000	            mov eax, dword [0x04003c87] 	      2520	ui.c	FUNCTION_71	IF_1
0x3c47	            0x85c0	                           test eax, eax	      2520	ui.c	FUNCTION_71	IF_1
0x3c49	            0x7447	                            je 0x4003cd2	      2520	ui.c	FUNCTION_71	IF_1
0x3c4b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c4f	          0x4889c7	                            mov rdi, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c52	      0xe800000000	                          call 0x4003c97	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c57	          0x4889c7	                            mov rdi, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c5a	      0xe800000000	                          call 0x4003c9f	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c5f	          0x4889c2	                            mov rdx, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c62	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c66	        0x488b7050	            mov rsi, qword [rax + 0x50] 	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c6a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c6e	    0x41b900000000	                              mov r9d, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c74	    0x41b800000000	                              mov r8d, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c7a	      0xb900000000	                              mov ecx, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c7f	          0x4889c7	                            mov rdi, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c82	      0xe800000000	                          call 0x4003cc7	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c87	            0x84c0	                             test al, al	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c89	            0x7561	                           jne 0x4003d2c	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x3c8b	      0xb800000000	                              mov eax, 0	      2526	ui.c	FUNCTION_71	IF_1	IF_2
0x3c90	            0xeb73	                           jmp 0x4003d45	      2526	ui.c	FUNCTION_71	IF_1	IF_2
0x3c92	    0x4c8b25000000	            mov r12, qword [0x04003cd9] 	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3c99	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3c9d	        0x488b5850	            mov rbx, qword [rax + 0x50] 	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3ca1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3ca5	          0x4889c7	                            mov rdi, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3ca8	      0xe800000000	                          call 0x4003ced	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cad	          0x4989c5	                            mov r13, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cb4	          0x4889c7	                            mov rdi, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cb7	      0xe800000000	                          call 0x4003cfc	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cbc	            0x6a00	                                  push 0	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cbe	            0x6a00	                                  push 0	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cc0	    0x41b902000000	                              mov r9d, 2	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cc6	    0x41b820000000	                           mov r8d, 0x20	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3ccc	          0x4c89e1	                            mov rcx, r12	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3ccf	          0x4889da	                            mov rdx, rbx	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cd2	          0x4c89ee	                            mov rsi, r13	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cd5	          0x4889c7	                            mov rdi, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cd8	      0xe800000000	                          call 0x4003d1d	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3cdd	        0x4883c410	                           add rsp, 0x10	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3ce1	            0x85c0	                           test eax, eax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3ce3	            0x7507	                           jne 0x4003d2c	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x3ce5	      0xb800000000	                              mov eax, 0	      2533	ui.c	FUNCTION_71	ELSE_1	IF_3
0x3cea	            0xeb19	                           jmp 0x4003d45	      2533	ui.c	FUNCTION_71	ELSE_1	IF_3
0x3cec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2536	ui.c	FUNCTION_71	CALL_8
0x3cf0	          0x4889c7	                            mov rdi, rax	      2536	ui.c	FUNCTION_71	CALL_8
0x3cf3	      0xe800000000	                          call 0x4003d38	      2536	ui.c	FUNCTION_71	CALL_8
0x3cf8	          0x4889c7	                            mov rdi, rax	      2536	ui.c	FUNCTION_71	CALL_8
0x3cfb	      0xe800000000	                          call 0x4003d40	      2536	ui.c	FUNCTION_71	CALL_8
0x3d00	      0xb801000000	                              mov eax, 1	      2537	ui.c	FUNCTION_71
0x3d05	        0x488d65e8	                   lea rsp, [rbp - 0x18]	      2538	ui.c	FUNCTION_71
0x3d09	              0x5b	                                 pop rbx	      2538	ui.c	FUNCTION_71
0x3d0a	            0x415c	                                 pop r12	      2538	ui.c	FUNCTION_71
0x3d0c	            0x415d	                                 pop r13	      2538	ui.c	FUNCTION_71
0x3d0e	              0x5d	                                 pop rbp	      2538	ui.c	FUNCTION_71
0x3d0f	              0xc3	                                     ret	      2538	ui.c	FUNCTION_71
trash_input_buf	CALL,0:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	6
0x27d1	              0x55	                                push rbp	      1762	ui.c	FUNCTION_53
0x27d2	          0x4889e5	                            mov rbp, rsp	      1762	ui.c	FUNCTION_53
0x27d5	    0xc70500000000	               mov dword [0x0400281f], 0	      1763	ui.c	FUNCTION_53
0x27df	              0x90	                                     nop	      1764	ui.c	FUNCTION_53
0x27e0	              0x5d	                                 pop rbp	      1764	ui.c	FUNCTION_53
0x27e1	              0xc3	                                     ret	      1764	ui.c	FUNCTION_53
ui_char_avail	CALL,4:WHILE,0:IF,2:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	16
0x53e	              0x55	                                push rbp	       260	ui.c	FUNCTION_5
0x53f	          0x4889e5	                            mov rbp, rsp	       260	ui.c	FUNCTION_5
0x542	    0x8b0500000000	            mov eax, dword [0x04000588] 	       262	ui.c	FUNCTION_5	IF_1
0x548	            0x85c0	                           test eax, eax	       262	ui.c	FUNCTION_5	IF_1
0x54a	            0x740c	                            je 0x4000598	       262	ui.c	FUNCTION_5	IF_1
0x54c	      0xe800000000	                          call 0x4000591	       264	ui.c	FUNCTION_5	IF_1	CALL_1
0x551	      0xe800000000	                          call 0x4000596	       265	ui.c	FUNCTION_5	IF_1	CALL_2
0x556	            0xeb15	                           jmp 0x40005ad	       265	ui.c	FUNCTION_5	IF_1	CALL_2
0x558	      0xe800000000	                          call 0x400059d	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x55d	            0x85c0	                           test eax, eax	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x55f	            0x7407	                            je 0x40005a8	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x561	      0xb800000000	                              mov eax, 0	       271	ui.c	FUNCTION_5	IF_2
0x566	            0xeb05	                           jmp 0x40005ad	       271	ui.c	FUNCTION_5	IF_2
0x568	      0xe800000000	                          call 0x40005ad	       273	ui.c	FUNCTION_5	CALL_4
0x56d	              0x5d	                                 pop rbp	       277	ui.c	FUNCTION_5
0x56e	              0xc3	                                     ret	       277	ui.c	FUNCTION_5
check_row	CALL,0:WHILE,0:IF,2:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	16
0x2c5e	              0x55	                                push rbp	      2005	ui.c	FUNCTION_60
0x2c5f	          0x4889e5	                            mov rbp, rsp	      2005	ui.c	FUNCTION_60
0x2c62	          0x897dfc	                mov dword [rbp - 4], edi	      2005	ui.c	FUNCTION_60
0x2c65	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2006	ui.c	FUNCTION_60	IF_1
0x2c69	            0x7907	                           jns 0x4002cb2	      2006	ui.c	FUNCTION_60	IF_1
0x2c6b	      0xb800000000	                              mov eax, 0	      2007	ui.c	FUNCTION_60	IF_1
0x2c70	            0xeb19	                           jmp 0x4002ccb	      2007	ui.c	FUNCTION_60	IF_1
0x2c72	    0x8b0500000000	            mov eax, dword [0x04002cb8] 	      2008	ui.c	FUNCTION_60	IF_2
0x2c78	          0x3945fc	                cmp dword [rbp - 4], eax	      2008	ui.c	FUNCTION_60	IF_2
0x2c7b	            0x7c0b	                            jl 0x4002cc8	      2008	ui.c	FUNCTION_60	IF_2
0x2c7d	    0x8b0500000000	            mov eax, dword [0x04002cc3] 	      2009	ui.c	FUNCTION_60	IF_2
0x2c83	          0x83e801	                              sub eax, 1	      2009	ui.c	FUNCTION_60	IF_2
0x2c86	            0xeb03	                           jmp 0x4002ccb	      2009	ui.c	FUNCTION_60	IF_2
0x2c88	          0x8b45fc	                mov eax, dword [rbp - 4]	      2010	ui.c	FUNCTION_60
0x2c8b	              0x5d	                                 pop rbp	      2011	ui.c	FUNCTION_60
0x2c8c	              0xc3	                                     ret	      2011	ui.c	FUNCTION_60
ui_suspend	CALL,2:WHILE,0:IF,1:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	10
0x5b8	              0x55	                                push rbp	       301	ui.c	FUNCTION_7
0x5b9	          0x4889e5	                            mov rbp, rsp	       301	ui.c	FUNCTION_7
0x5bc	    0x8b0500000000	            mov eax, dword [0x04000602] 	       303	ui.c	FUNCTION_7	IF_1
0x5c2	            0x85c0	                           test eax, eax	       303	ui.c	FUNCTION_7	IF_1
0x5c4	            0x7407	                            je 0x400060d	       303	ui.c	FUNCTION_7	IF_1
0x5c6	      0xe800000000	                          call 0x400060b	       305	ui.c	FUNCTION_7	IF_1	CALL_1
0x5cb	            0xeb05	                           jmp 0x4000612	       306	ui.c	FUNCTION_7	IF_1
0x5cd	      0xe800000000	                          call 0x4000612	       309	ui.c	FUNCTION_7	CALL_2
0x5d2	              0x5d	                                 pop rbp	       310	ui.c	FUNCTION_7
0x5d3	              0xc3	                                     ret	       310	ui.c	FUNCTION_7
ui_write	CALL,5:WHILE,0:IF,6:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	63
0x0	              0x55	                                push rbp	        29	ui.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        29	ui.c	FUNCTION_1
0x4	        0x4883ec20	                           sub rsp, 0x20	        29	ui.c	FUNCTION_1
0x8	        0x48897de8	             mov qword [rbp - 0x18], rdi	        29	ui.c	FUNCTION_1
0xc	          0x8975e4	             mov dword [rbp - 0x1c], esi	        29	ui.c	FUNCTION_1
0xf	    0x8b0500000000	            mov eax, dword [0x04000055] 	        31	ui.c	FUNCTION_1	IF_1
0x15	            0x85c0	                           test eax, eax	        31	ui.c	FUNCTION_1	IF_1
0x17	            0x744e	                            je 0x40000a7	        31	ui.c	FUNCTION_1	IF_1
0x19	    0x8b0500000000	            mov eax, dword [0x0400005f] 	        31	ui.c	FUNCTION_1	IF_1
0x1f	            0x85c0	                           test eax, eax	        31	ui.c	FUNCTION_1	IF_1
0x21	            0x7544	                           jne 0x40000a7	        31	ui.c	FUNCTION_1	IF_1
0x23	    0x8b0500000000	            mov eax, dword [0x04000069] 	        31	ui.c	FUNCTION_1	IF_1
0x29	            0x85c0	                           test eax, eax	        31	ui.c	FUNCTION_1	IF_1
0x2b	            0x753a	                           jne 0x40000a7	        31	ui.c	FUNCTION_1	IF_1
0x2d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x34	            0x89d6	                            mov esi, edx	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x36	          0x4889c7	                            mov rdi, rax	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x39	      0xe800000000	                          call 0x400007e	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x3e	    0x488b05000000	            mov rax, qword [0x04000085] 	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x45	          0x4885c0	                           test rax, rax	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x48	     0xf8492000000	                            je 0x4000120	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x4e	    0x8b1500000000	            mov edx, dword [0x04000094] 	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x54	    0x488b05000000	            mov rax, qword [0x0400009b] 	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x5b	            0x89d6	                            mov esi, edx	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x5d	          0x4889c7	                            mov rdi, rax	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x60	      0xe800000000	                          call 0x40000a5	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x65	            0xeb79	                           jmp 0x4000120	        36	ui.c	FUNCTION_1	IF_1
0x67	    0x8b0500000000	            mov eax, dword [0x040000ad] 	        41	ui.c	FUNCTION_1	IF_3
0x6d	            0x85c0	                           test eax, eax	        41	ui.c	FUNCTION_1	IF_3
0x6f	            0x740c	                            je 0x40000bd	        41	ui.c	FUNCTION_1	IF_3
0x71	    0x488b05000000	            mov rax, qword [0x040000b8] 	        41	ui.c	FUNCTION_1	IF_3
0x78	          0x4885c0	                           test rax, rax	        41	ui.c	FUNCTION_1	IF_3
0x7b	            0x7464	                            je 0x4000121	        41	ui.c	FUNCTION_1	IF_3
0x7d	    0x48c745f80000	                  mov qword [rbp - 8], 0	        44	ui.c	FUNCTION_1	IF_3
0x85	    0x8b0500000000	            mov eax, dword [0x040000cb] 	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x8b	            0x85c0	                           test eax, eax	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x8d	            0x7428	                            je 0x40000f7	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x8f	        0x488d55e4	                   lea rdx, [rbp - 0x1c]	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x97	          0x4889c6	                            mov rsi, rax	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x9a	      0xbf00000000	                              mov edi, 0	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x9f	      0xe800000000	                          call 0x40000e4	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0xa4	        0x488945f8	                mov qword [rbp - 8], rax	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0xa8	      0x48837df800	                  cmp qword [rbp - 8], 0	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0xad	            0x7408	                            je 0x40000f7	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0xaf	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0xb3	        0x488945e8	             mov qword [rbp - 0x18], rax	        51	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0xb7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0xba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0xbe	            0x89d6	                            mov esi, edx	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0xc0	          0x4889c7	                            mov rdi, rax	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0xc3	      0xe800000000	                          call 0x4000108	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0xc8	    0x8b0500000000	            mov eax, dword [0x0400010e] 	        58	ui.c	FUNCTION_1	IF_3	IF_6
0xce	            0x85c0	                           test eax, eax	        58	ui.c	FUNCTION_1	IF_3	IF_6
0xd0	            0x740f	                            je 0x4000121	        58	ui.c	FUNCTION_1	IF_3	IF_6
0xd2	        0x488b45f8	                mov rax, qword [rbp - 8]	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0xd6	          0x4889c7	                            mov rdi, rax	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0xd9	      0xe800000000	                          call 0x400011e	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0xde	            0xeb01	                           jmp 0x4000121	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0xe0	              0x90	                                     nop	        36	ui.c	FUNCTION_1	IF_1
0xe1	              0xc9	                                   leave	        63	ui.c	FUNCTION_1
0xe2	              0xc3	                                     ret	        63	ui.c	FUNCTION_1
is_clipboard_needs_update	CALL,0:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	5
0xbde	              0x55	                                push rbp	       633	ui.c	FUNCTION_20
0xbdf	          0x4889e5	                            mov rbp, rsp	       633	ui.c	FUNCTION_20
0xbe2	    0x8b0500000000	            mov eax, dword [0x04000c28] 	       634	ui.c	FUNCTION_20
0xbe8	              0x5d	                                 pop rbp	       635	ui.c	FUNCTION_20
0xbe9	              0xc3	                                     ret	       635	ui.c	FUNCTION_20
clip_update_selection	CALL,8:WHILE,0:IF,4:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	139
0x762	              0x55	                                push rbp	       477	ui.c	FUNCTION_15
0x763	          0x4889e5	                            mov rbp, rsp	       477	ui.c	FUNCTION_15
0x766	              0x53	                                push rbx	       477	ui.c	FUNCTION_15
0x767	        0x4883ec38	                           sub rsp, 0x38	       477	ui.c	FUNCTION_15
0x76b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       477	ui.c	FUNCTION_15
0x76f	    0x8b0500000000	            mov eax, dword [0x040007b5] 	       481	ui.c	FUNCTION_15	IF_1
0x775	            0x85c0	                           test eax, eax	       481	ui.c	FUNCTION_15	IF_1
0x777	     0xf85e6010000	                           jne 0x40009a3	       481	ui.c	FUNCTION_15	IF_1
0x77d	    0x8b0500000000	            mov eax, dword [0x040007c3] 	       481	ui.c	FUNCTION_15	IF_1
0x783	            0x85c0	                           test eax, eax	       481	ui.c	FUNCTION_15	IF_1
0x785	     0xf84d8010000	                            je 0x40009a3	       481	ui.c	FUNCTION_15	IF_1
0x78b	    0x8b0500000000	            mov eax, dword [0x040007d1] 	       481	ui.c	FUNCTION_15	IF_1
0x791	          0x83e001	                              and eax, 1	       481	ui.c	FUNCTION_15	IF_1
0x794	            0x85c0	                           test eax, eax	       481	ui.c	FUNCTION_15	IF_1
0x796	     0xf84c7010000	                            je 0x40009a3	       481	ui.c	FUNCTION_15	IF_1
0x79c	    0x488b15000000	            mov rdx, qword [0x040007e3] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7a3	    0x488b05000000	            mov rax, qword [0x040007ea] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7aa	        0x488b4038	            mov rax, qword [rax + 0x38] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7ae	          0x4839c2	                            cmp rdx, rax	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7b1	            0x741a	                            je 0x400080d	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7b3	    0x488b15000000	            mov rdx, qword [0x040007fa] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7ba	    0x488b05000000	            mov rax, qword [0x04000801] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7c1	        0x488b4038	            mov rax, qword [rax + 0x38] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7c5	          0x4839c2	                            cmp rdx, rax	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7c8	           0xf9cc0	                                 setl al	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7cb	            0xeb40	                           jmp 0x400084d	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7cd	    0x8b1500000000	            mov edx, dword [0x04000813] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7d3	    0x488b05000000	            mov rax, qword [0x0400081a] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7da	          0x8b4040	            mov eax, dword [rax + 0x40] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7dd	            0x39c2	                            cmp edx, eax	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7df	            0x7417	                            je 0x4000838	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7e1	    0x8b1500000000	            mov edx, dword [0x04000827] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7e7	    0x488b05000000	            mov rax, qword [0x0400082e] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7ee	          0x8b4040	            mov eax, dword [rax + 0x40] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7f1	            0x39c2	                            cmp edx, eax	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7f3	           0xf9cc0	                                 setl al	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7f6	            0xeb15	                           jmp 0x400084d	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7f8	    0x8b1500000000	            mov edx, dword [0x0400083e] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x7fe	    0x488b05000000	            mov rax, qword [0x04000845] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x805	          0x8b4044	            mov eax, dword [rax + 0x44] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x808	            0x39c2	                            cmp edx, eax	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x80a	           0xf9cc0	                                 setl al	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x80d	            0x84c0	                             test al, al	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x80f	            0x7455	                            je 0x40008a6	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x811	    0x488b05000000	            mov rax, qword [0x04000858] 	       485	ui.c	FUNCTION_15	IF_1	IF_2
0x818	    0x488b15000000	            mov rdx, qword [0x0400085f] 	       485	ui.c	FUNCTION_15	IF_1	IF_2
0x81f	        0x488945d0	             mov qword [rbp - 0x30], rax	       485	ui.c	FUNCTION_15	IF_1	IF_2
0x823	        0x488955d8	             mov qword [rbp - 0x28], rdx	       485	ui.c	FUNCTION_15	IF_1	IF_2
0x827	    0x488b05000000	            mov rax, qword [0x0400086e] 	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x82e	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x832	        0x488b4038	            mov rax, qword [rax + 0x38] 	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x836	        0x488945e0	             mov qword [rbp - 0x20], rax	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x83a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x83e	    0x8b0500000000	            mov eax, dword [0x04000884] 	       488	ui.c	FUNCTION_15	IF_1	IF_2	IF_3
0x844	            0x85c0	                           test eax, eax	       488	ui.c	FUNCTION_15	IF_1	IF_2	IF_3
0x846	            0x744b	                            je 0x40008d3	       488	ui.c	FUNCTION_15	IF_1	IF_2	IF_3
0x848	    0x488b1d000000	            mov rbx, qword [0x0400088f] 	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x84f	      0xe800000000	                          call 0x4000894	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x854	          0x4889c7	                            mov rdi, rax	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x857	            0xffd3	                                call rbx	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x859	          0x8d50ff	                      lea edx, [rax - 1]	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x85c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x85f	             0x1d0	                            add eax, edx	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x861	          0x8945e8	             mov dword [rbp - 0x18], eax	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x864	            0xeb2d	                           jmp 0x40008d3	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x866	    0x488b05000000	            mov rax, qword [0x040008ad] 	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x86d	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x871	        0x488b4038	            mov rax, qword [rax + 0x38] 	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x875	        0x488945d0	             mov qword [rbp - 0x30], rax	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x879	        0x488955d8	             mov qword [rbp - 0x28], rdx	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x87d	    0x488b05000000	            mov rax, qword [0x040008c4] 	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x884	    0x488b15000000	            mov rdx, qword [0x040008cb] 	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x88b	        0x488945e0	             mov qword [rbp - 0x20], rax	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x88f	        0x488955e8	             mov qword [rbp - 0x18], rdx	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x893	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x897	        0x488b5008	                mov rdx, qword [rax + 8]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x89b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x89f	          0x4839c2	                            cmp rdx, rax	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8a2	            0x755a	                           jne 0x400093e	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8a8	          0x8b5010	            mov edx, dword [rax + 0x10] 	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8ab	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8ae	            0x39c2	                            cmp edx, eax	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8b0	            0x754c	                           jne 0x400093e	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8b2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8b6	          0x8b5014	            mov edx, dword [rax + 0x14] 	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8b9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8bc	            0x39c2	                            cmp edx, eax	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8be	            0x753e	                           jne 0x400093e	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x8c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8c4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8c8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8cc	          0x4839c2	                            cmp rdx, rax	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8cf	            0x752d	                           jne 0x400093e	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8d1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8d5	          0x8b5020	            mov edx, dword [rax + 0x20] 	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8d8	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8db	            0x39c2	                            cmp edx, eax	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8dd	            0x751f	                           jne 0x400093e	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8e3	          0x8b5024	            mov edx, dword [rax + 0x24] 	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8e6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8e9	            0x39c2	                            cmp edx, eax	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8eb	            0x7511	                           jne 0x400093e	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x8ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x8f1	          0x8b5028	            mov edx, dword [rax + 0x28] 	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x8f4	    0x8b0500000000	            mov eax, dword [0x0400093a] 	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x8fa	            0x39c2	                            cmp edx, eax	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x8fc	            0x7465	                            je 0x40009a3	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x8fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       501	ui.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x902	          0x4889c7	                            mov rdi, rax	       501	ui.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x905	      0xe800000000	                          call 0x400094a	       501	ui.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x90a	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x90e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x912	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x916	        0x48894108	                mov qword [rcx + 8], rax	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x91a	        0x48895110	             mov qword [rcx + 0x10], rdx	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x91e	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x922	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x926	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x92a	        0x48894118	             mov qword [rcx + 0x18], rax	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x92e	        0x48895120	             mov qword [rcx + 0x20], rdx	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x932	    0x8b1500000000	            mov edx, dword [0x04000978] 	       504	ui.c	FUNCTION_15	IF_1	IF_4
0x938	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       504	ui.c	FUNCTION_15	IF_1	IF_4
0x93c	          0x895028	             mov dword [rax + 0x28], edx	       504	ui.c	FUNCTION_15	IF_1	IF_4
0x93f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       505	ui.c	FUNCTION_15	IF_1	IF_4	CALL_6
0x943	          0x4889c7	                            mov rdi, rax	       505	ui.c	FUNCTION_15	IF_1	IF_4	CALL_6
0x946	      0xe800000000	                          call 0x400098b	       505	ui.c	FUNCTION_15	IF_1	IF_4	CALL_6
0x94b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       506	ui.c	FUNCTION_15	IF_1	IF_4	CALL_7
0x94f	          0x4889c7	                            mov rdi, rax	       506	ui.c	FUNCTION_15	IF_1	IF_4	CALL_7
0x952	      0xe800000000	                          call 0x4000997	       506	ui.c	FUNCTION_15	IF_1	IF_4	CALL_7
0x957	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       507	ui.c	FUNCTION_15	IF_1	IF_4	CALL_8
0x95b	          0x4889c7	                            mov rdi, rax	       507	ui.c	FUNCTION_15	IF_1	IF_4	CALL_8
0x95e	      0xe800000000	                          call 0x40009a3	       507	ui.c	FUNCTION_15	IF_1	IF_4	CALL_8
0x963	              0x90	                                     nop	       510	ui.c	FUNCTION_15
0x964	        0x4883c438	                           add rsp, 0x38	       510	ui.c	FUNCTION_15
0x968	              0x5b	                                 pop rbx	       510	ui.c	FUNCTION_15
0x969	              0x5d	                                 pop rbp	       510	ui.c	FUNCTION_15
0x96a	              0xc3	                                     ret	       510	ui.c	FUNCTION_15
clip_get_word_boundaries	CALL,6:WHILE,0:IF,7:ELSE,3:DO,0:SWITCH,0:functions,0:FOR,2	184
0x20df	              0x55	                                push rbp	      1389	ui.c	FUNCTION_36
0x20e0	          0x4889e5	                            mov rbp, rsp	      1389	ui.c	FUNCTION_36
0x20e3	        0x4883ec30	                           sub rsp, 0x30	      1389	ui.c	FUNCTION_36
0x20e7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1389	ui.c	FUNCTION_36
0x20eb	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1389	ui.c	FUNCTION_36
0x20ee	          0x8955d0	             mov dword [rbp - 0x30], edx	      1389	ui.c	FUNCTION_36
0x20f1	    0x8b0500000000	            mov eax, dword [0x04002137] 	      1397	ui.c	FUNCTION_36	IF_1
0x20f7	          0x3945d4	            cmp dword [rbp - 0x2c], eax 	      1397	ui.c	FUNCTION_36	IF_1
0x20fa	     0xf8d3a020000	                           jge 0x400237a	      1397	ui.c	FUNCTION_36	IF_1
0x2100	    0x8b0500000000	            mov eax, dword [0x04002146] 	      1397	ui.c	FUNCTION_36	IF_1
0x2106	          0x3945d0	            cmp dword [rbp - 0x30], eax 	      1397	ui.c	FUNCTION_36	IF_1
0x2109	     0xf8d2b020000	                           jge 0x400237a	      1397	ui.c	FUNCTION_36	IF_1
0x210f	    0x488b05000000	            mov rax, qword [0x04002156] 	      1397	ui.c	FUNCTION_36	IF_1
0x2116	          0x4885c0	                           test rax, rax	      1397	ui.c	FUNCTION_36	IF_1
0x2119	     0xf841b020000	                            je 0x400237a	      1397	ui.c	FUNCTION_36	IF_1
0x211f	    0x488b05000000	            mov rax, qword [0x04002166] 	      1400	ui.c	FUNCTION_36
0x2126	    0x488b15000000	            mov rdx, qword [0x0400216d] 	      1400	ui.c	FUNCTION_36
0x212d	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      1400	ui.c	FUNCTION_36
0x2130	          0x4863c9	                         movsxd rcx, ecx	      1400	ui.c	FUNCTION_36
0x2133	        0x48c1e102	                              shl rcx, 2	      1400	ui.c	FUNCTION_36
0x2137	          0x4801ca	                            add rdx, rcx	      1400	ui.c	FUNCTION_36
0x213a	            0x8b12	                    mov edx, dword [rdx]	      1400	ui.c	FUNCTION_36
0x213c	            0x89d2	                            mov edx, edx	      1400	ui.c	FUNCTION_36
0x213e	          0x4801d0	                            add rax, rdx	      1400	ui.c	FUNCTION_36
0x2141	        0x488945f8	                mov qword [rbp - 8], rax	      1400	ui.c	FUNCTION_36
0x2145	    0x8b0500000000	            mov eax, dword [0x0400218b] 	      1403	ui.c	FUNCTION_36	IF_2
0x214b	            0x85c0	                           test eax, eax	      1403	ui.c	FUNCTION_36	IF_2
0x214d	            0x7421	                            je 0x40021b0	      1403	ui.c	FUNCTION_36	IF_2
0x214f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1404	ui.c	FUNCTION_36	CALL_1
0x2152	          0x4863d0	                         movsxd rdx, eax	      1404	ui.c	FUNCTION_36	CALL_1
0x2155	        0x488b45f8	                mov rax, qword [rbp - 8]	      1404	ui.c	FUNCTION_36	CALL_1
0x2159	          0x4801c2	                            add rdx, rax	      1404	ui.c	FUNCTION_36	CALL_1
0x215c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1404	ui.c	FUNCTION_36	CALL_1
0x2160	          0x4889d6	                            mov rsi, rdx	      1404	ui.c	FUNCTION_36	CALL_1
0x2163	          0x4889c7	                            mov rdi, rax	      1404	ui.c	FUNCTION_36	CALL_1
0x2166	      0xe800000000	                          call 0x40021ab	      1404	ui.c	FUNCTION_36	CALL_1
0x216b	          0x2945d0	             sub dword [rbp - 0x30], eax	      1404	ui.c	FUNCTION_36	CALL_1
0x216e	            0xeb22	                           jmp 0x40021d2	      1404	ui.c	FUNCTION_36	CALL_1
0x2170	    0x8b0500000000	            mov eax, dword [0x040021b6] 	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x2176	            0x85c0	                           test eax, eax	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x2178	            0x7418	                            je 0x40021d2	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x217a	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x217d	          0x4863d0	                         movsxd rdx, eax	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x2180	        0x488b45f8	                mov rax, qword [rbp - 8]	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x2184	          0x4801d0	                            add rax, rdx	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x2187	           0xfb600	                   movzx eax, byte [rax]	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x218a	            0x84c0	                             test al, al	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x218c	            0x7504	                           jne 0x40021d2	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x218e	        0x836dd001	               sub dword [rbp - 0x30], 1	      1406	ui.c	FUNCTION_36	ELSE_1	IF_3
0x2192	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1408	ui.c	FUNCTION_36	CALL_2
0x2195	          0x4863d0	                         movsxd rdx, eax	      1408	ui.c	FUNCTION_36	CALL_2
0x2198	        0x488b45f8	                mov rax, qword [rbp - 8]	      1408	ui.c	FUNCTION_36	CALL_2
0x219c	          0x4801d0	                            add rax, rdx	      1408	ui.c	FUNCTION_36	CALL_2
0x219f	           0xfb600	                   movzx eax, byte [rax]	      1408	ui.c	FUNCTION_36	CALL_2
0x21a2	            0x3c20	                            cmp al, 0x20	      1408	ui.c	FUNCTION_36	CALL_2
0x21a4	            0x761c	                           jbe 0x4002202	      1408	ui.c	FUNCTION_36	CALL_2
0x21a6	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1408	ui.c	FUNCTION_36	CALL_2
0x21a9	          0x4863d0	                         movsxd rdx, eax	      1408	ui.c	FUNCTION_36	CALL_2
0x21ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1408	ui.c	FUNCTION_36	CALL_2
0x21b0	          0x4801d0	                            add rax, rdx	      1408	ui.c	FUNCTION_36	CALL_2
0x21b3	           0xfb600	                   movzx eax, byte [rax]	      1408	ui.c	FUNCTION_36	CALL_2
0x21b6	           0xfb6c0	                           movzx eax, al	      1408	ui.c	FUNCTION_36	CALL_2
0x21b9	            0x89c7	                            mov edi, eax	      1408	ui.c	FUNCTION_36	CALL_2
0x21bb	      0xe800000000	                          call 0x4002200	      1408	ui.c	FUNCTION_36	CALL_2
0x21c0	            0xeb05	                           jmp 0x4002207	      1408	ui.c	FUNCTION_36	CALL_2
0x21c2	      0xb820000000	                           mov eax, 0x20	      1408	ui.c	FUNCTION_36	CALL_2
0x21c7	          0x8945f0	             mov dword [rbp - 0x10], eax	      1408	ui.c	FUNCTION_36	CALL_2
0x21ca	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1410	ui.c	FUNCTION_36
0x21cd	          0x8945ec	             mov dword [rbp - 0x14], eax	      1410	ui.c	FUNCTION_36
0x21d0	      0xe99f000000	                           jmp 0x40022b4	      1411	ui.c	FUNCTION_36	FOR_1
0x21d5	    0x8b0500000000	            mov eax, dword [0x0400221b] 	      1413	ui.c	FUNCTION_36	FOR_1	IF_4
0x21db	            0x85c0	                           test eax, eax	      1413	ui.c	FUNCTION_36	FOR_1	IF_4
0x21dd	            0x7430	                            je 0x400224f	      1413	ui.c	FUNCTION_36	FOR_1	IF_4
0x21df	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x21e2	            0x4898	                                    cdqe	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x21e4	        0x488d50ff	                      lea rdx, [rax - 1]	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x21e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x21ec	          0x4801c2	                            add rdx, rax	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x21ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x21f3	          0x4889d6	                            mov rsi, rdx	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x21f6	          0x4889c7	                            mov rdi, rax	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x21f9	      0xe800000000	                          call 0x400223e	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x21fe	          0x8945f4	              mov dword [rbp - 0xc], eax	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x2201	        0x837df400	                cmp dword [rbp - 0xc], 0	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x2205	            0x7e08	                           jle 0x400224f	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_3
0x2207	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1415	ui.c	FUNCTION_36	FOR_1	IF_4
0x220a	          0x2945ec	             sub dword [rbp - 0x14], eax	      1415	ui.c	FUNCTION_36	FOR_1	IF_4
0x220d	            0xeb61	                           jmp 0x40022b0	      1415	ui.c	FUNCTION_36	FOR_1	IF_4
0x220f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2212	            0x4898	                                    cdqe	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2214	        0x488d50ff	                      lea rdx, [rax - 1]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2218	        0x488b45f8	                mov rax, qword [rbp - 8]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x221c	          0x4801d0	                            add rax, rdx	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x221f	           0xfb600	                   movzx eax, byte [rax]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2222	            0x3c20	                            cmp al, 0x20	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2224	            0x761f	                           jbe 0x4002285	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2226	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2229	            0x4898	                                    cdqe	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x222b	        0x488d50ff	                      lea rdx, [rax - 1]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x222f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2233	          0x4801d0	                            add rax, rdx	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2236	           0xfb600	                   movzx eax, byte [rax]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2239	           0xfb6c0	                           movzx eax, al	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x223c	            0x89c7	                            mov edi, eax	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x223e	      0xe800000000	                          call 0x4002283	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2243	            0xeb05	                           jmp 0x400228a	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x2245	      0xb820000000	                           mov eax, 0x20	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x224a	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x224d	            0x7421	                            je 0x40022b0	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5	CALL_4
0x224f	    0x8b0500000000	            mov eax, dword [0x04002295] 	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x2255	            0x85c0	                           test eax, eax	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x2257	            0x7425	                            je 0x40022be	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x2259	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x225c	            0x4898	                                    cdqe	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x225e	        0x488d50ff	                      lea rdx, [rax - 1]	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x2262	        0x488b45f8	                mov rax, qword [rbp - 8]	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x2266	          0x4801d0	                            add rax, rdx	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x2269	           0xfb600	                   movzx eax, byte [rax]	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x226c	            0x84c0	                             test al, al	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x226e	            0x750e	                           jne 0x40022be	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x2270	        0x836dec01	               sub dword [rbp - 0x14], 1	      1411	ui.c	FUNCTION_36	FOR_1
0x2274	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1411	ui.c	FUNCTION_36	FOR_1
0x2278	     0xf8f57ffffff	                            jg 0x4002215	      1411	ui.c	FUNCTION_36	FOR_1
0x227e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1424	ui.c	FUNCTION_36
0x2281	            0x89c2	                            mov edx, eax	      1424	ui.c	FUNCTION_36
0x2283	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1424	ui.c	FUNCTION_36
0x2287	        0x66895032	               mov word [rax + 0x32], dx	      1424	ui.c	FUNCTION_36
0x228b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1426	ui.c	FUNCTION_36
0x228e	          0x8945ec	             mov dword [rbp - 0x14], eax	      1426	ui.c	FUNCTION_36
0x2291	      0xe986000000	                           jmp 0x400235c	      1427	ui.c	FUNCTION_36	FOR_2
0x2296	    0x8b0500000000	            mov eax, dword [0x040022dc] 	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_5
0x229c	            0x85c0	                           test eax, eax	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_5
0x229e	            0x7420	                            je 0x4002300	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_5
0x22a0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_5
0x22a3	          0x4863d0	                         movsxd rdx, eax	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_5
0x22a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_5
0x22aa	          0x4801d0	                            add rax, rdx	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_5
0x22ad	          0x4889c7	                            mov rdi, rax	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_5
0x22b0	      0xe800000000	                          call 0x40022f5	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_5
0x22b5	          0x83f802	                              cmp eax, 2	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_5
0x22b8	            0x7506	                           jne 0x4002300	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_5
0x22ba	        0x8345ec01	               add dword [rbp - 0x14], 1	      1430	ui.c	FUNCTION_36	FOR_2	IF_6
0x22be	            0xeb58	                           jmp 0x4002358	      1430	ui.c	FUNCTION_36	FOR_2	IF_6
0x22c0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22c3	          0x4863d0	                         movsxd rdx, eax	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22c6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22ca	          0x4801d0	                            add rax, rdx	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22cd	           0xfb600	                   movzx eax, byte [rax]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22d0	            0x3c20	                            cmp al, 0x20	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22d2	            0x761c	                           jbe 0x4002330	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22d4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22d7	          0x4863d0	                         movsxd rdx, eax	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22da	        0x488b45f8	                mov rax, qword [rbp - 8]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22de	          0x4801d0	                            add rax, rdx	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22e1	           0xfb600	                   movzx eax, byte [rax]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22e4	           0xfb6c0	                           movzx eax, al	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22e7	            0x89c7	                            mov edi, eax	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22e9	      0xe800000000	                          call 0x400232e	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22ee	            0xeb05	                           jmp 0x4002335	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22f0	      0xb820000000	                           mov eax, 0x20	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22f5	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22f8	            0x741e	                            je 0x4002358	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7	CALL_6
0x22fa	    0x8b0500000000	            mov eax, dword [0x04002340] 	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x2300	            0x85c0	                           test eax, eax	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x2302	            0x7427	                            je 0x400236b	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x2304	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x2307	          0x4863d0	                         movsxd rdx, eax	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x230a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x230e	          0x4801d0	                            add rax, rdx	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x2311	           0xfb600	                   movzx eax, byte [rax]	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x2314	            0x84c0	                             test al, al	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x2316	            0x7513	                           jne 0x400236b	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x2318	        0x8345ec01	               add dword [rbp - 0x14], 1	      1427	ui.c	FUNCTION_36	FOR_2
0x231c	    0x8b0500000000	            mov eax, dword [0x04002362] 	      1427	ui.c	FUNCTION_36	FOR_2
0x2322	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      1427	ui.c	FUNCTION_36	FOR_2
0x2325	     0xf8c6bffffff	                            jl 0x40022d6	      1427	ui.c	FUNCTION_36	FOR_2
0x232b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1439	ui.c	FUNCTION_36
0x232e	            0x89c2	                            mov edx, eax	      1439	ui.c	FUNCTION_36
0x2330	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1439	ui.c	FUNCTION_36
0x2334	        0x66895034	               mov word [rax + 0x34], dx	      1439	ui.c	FUNCTION_36
0x2338	            0xeb01	                           jmp 0x400237b	      1439	ui.c	FUNCTION_36
0x233a	              0x90	                                     nop	      1398	ui.c	FUNCTION_36	IF_1
0x233b	              0xc9	                                   leave	      1440	ui.c	FUNCTION_36
0x233c	              0xc3	                                     ret	      1440	ui.c	FUNCTION_36
clip_invert_area	CALL,5:WHILE,0:IF,7:ELSE,2:DO,0:SWITCH,0:functions,0:FOR,0	99
0x196b	              0x55	                                push rbp	      1130	ui.c	ELSE_4	FUNCTION_33
0x196c	          0x4889e5	                            mov rbp, rsp	      1130	ui.c	ELSE_4	FUNCTION_33
0x196f	        0x4883ec30	                           sub rsp, 0x30	      1130	ui.c	ELSE_4	FUNCTION_33
0x1973	          0x897dec	             mov dword [rbp - 0x14], edi	      1130	ui.c	ELSE_4	FUNCTION_33
0x1976	          0x8975e8	             mov dword [rbp - 0x18], esi	      1130	ui.c	ELSE_4	FUNCTION_33
0x1979	          0x8955e4	             mov dword [rbp - 0x1c], edx	      1130	ui.c	ELSE_4	FUNCTION_33
0x197c	          0x894de0	             mov dword [rbp - 0x20], ecx	      1130	ui.c	ELSE_4	FUNCTION_33
0x197f	        0x448945dc	             mov dword [rbp - 0x24], r8d	      1130	ui.c	ELSE_4	FUNCTION_33
0x1983	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1131	ui.c	ELSE_4	FUNCTION_33
0x198a	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      1133	ui.c	ELSE_4	FUNCTION_33	IF_1
0x198e	            0x7507	                           jne 0x40019d7	      1133	ui.c	ELSE_4	FUNCTION_33	IF_1
0x1990	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      1134	ui.c	ELSE_4	FUNCTION_33	IF_1
0x1997	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x199a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x199d	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x19a0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x19a3	            0x89c7	                            mov edi, eax	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x19a5	      0xe897f4ffff	               call sym.clip_compare_pos	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x19aa	            0x85c0	                           test eax, eax	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x19ac	            0x7e26	                           jle 0x4001a14	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x19ae	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1141	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19b1	          0x8945f8	                mov dword [rbp - 8], eax	      1141	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19b4	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1142	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19b7	          0x8945fc	                mov dword [rbp - 4], eax	      1142	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19ba	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1143	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19bd	          0x8945ec	             mov dword [rbp - 0x14], eax	      1143	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19c0	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1144	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19c3	          0x8945e8	             mov dword [rbp - 0x18], eax	      1144	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19c6	          0x8b45f8	                mov eax, dword [rbp - 8]	      1145	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19c9	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1145	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19cc	          0x8b45fc	                mov eax, dword [rbp - 4]	      1146	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19cf	          0x8945e0	             mov dword [rbp - 0x20], eax	      1146	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19d2	            0xeb0d	                           jmp 0x4001a21	      1146	ui.c	ELSE_4	FUNCTION_33	IF_2
0x19d4	        0x837ddc03	               cmp dword [rbp - 0x24], 3	      1148	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x19d8	            0x7507	                           jne 0x4001a21	      1148	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x19da	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      1149	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x19e1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1152	ui.c	ELSE_4	FUNCTION_33	IF_4
0x19e4	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1152	ui.c	ELSE_4	FUNCTION_33	IF_4
0x19e7	            0x7527	                           jne 0x4001a50	      1152	ui.c	ELSE_4	FUNCTION_33	IF_4
0x19e9	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x19ec	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x19ef	            0x89c2	                            mov edx, eax	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x19f1	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x19f4	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x19f7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x19fa	          0x4189c8	                            mov r8d, ecx	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x19fd	            0x89d1	                            mov ecx, edx	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x19ff	      0xba01000000	                              mov edx, 1	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x1a04	            0x89c7	                            mov edi, eax	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x1a06	      0xe8a1000000	          call sym.clip_invert_rectangle	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x1a0b	      0xe999000000	                           jmp 0x4001ae9	      1177	ui.c	ELSE_4	FUNCTION_33
0x1a10	        0x837de800	               cmp dword [rbp - 0x18], 0	      1159	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x1a14	            0x7e2a	                           jle 0x4001a80	      1159	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x1a16	    0x488b05000000	            mov rax, qword [0x04001a5d] 	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x1a1d	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x1a20	            0x89c2	                            mov edx, eax	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x1a22	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x1a25	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x1a28	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x1a2b	          0x4189c8	                            mov r8d, ecx	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x1a2e	            0x89d1	                            mov ecx, edx	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x1a30	      0xba01000000	                              mov edx, 1	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x1a35	            0x89c7	                            mov edi, eax	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x1a37	      0xe870000000	          call sym.clip_invert_rectangle	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x1a3c	        0x8345ec01	               add dword [rbp - 0x14], 1	      1162	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x1a40	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x1a43	            0x4898	                                    cdqe	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x1a45	    0x488b15000000	            mov rdx, qword [0x04001a8c] 	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x1a4c	        0x4883ea01	                              sub rdx, 1	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x1a50	          0x4839d0	                            cmp rax, rdx	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x1a53	            0x7d23	                           jge 0x4001ab8	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x1a55	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x1a58	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x1a5b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x1a5e	          0x4189c8	                            mov r8d, ecx	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x1a61	            0x89d1	                            mov ecx, edx	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x1a63	      0xba01000000	                              mov edx, 1	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x1a68	      0xbe00000000	                              mov esi, 0	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x1a6d	            0x89c7	                            mov edi, eax	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x1a6f	      0xe838000000	          call sym.clip_invert_rectangle	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x1a74	        0x836de401	               sub dword [rbp - 0x1c], 1	      1169	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x1a78	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1173	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7
0x1a7b	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1173	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7
0x1a7e	            0x7c29	                            jl 0x4001ae9	      1173	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7
0x1a80	    0x488b05000000	            mov rax, qword [0x04001ac7] 	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1a87	            0x89c6	                            mov esi, eax	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1a89	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1a8c	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1a8f	          0x8d5001	                      lea edx, [rax + 1]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1a92	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1a95	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1a98	          0x4189c8	                            mov r8d, ecx	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1a9b	            0x89f1	                            mov ecx, esi	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1a9d	      0xbe00000000	                              mov esi, 0	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1aa2	            0x89c7	                            mov edi, eax	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1aa4	      0xe803000000	          call sym.clip_invert_rectangle	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x1aa9	              0x90	                                     nop	      1177	ui.c	ELSE_4	FUNCTION_33
0x1aaa	              0xc9	                                   leave	      1177	ui.c	ELSE_4	FUNCTION_33
0x1aab	              0xc3	                                     ret	      1177	ui.c	ELSE_4	FUNCTION_33
clip_may_clear_selection	CALL,1:WHILE,0:IF,1:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	23
0x186c	              0x55	                                push rbp	      1078	ui.c	FUNCTION_31
0x186d	          0x4889e5	                            mov rbp, rsp	      1078	ui.c	FUNCTION_31
0x1870	        0x4883ec10	                           sub rsp, 0x10	      1078	ui.c	FUNCTION_31
0x1874	          0x897dfc	                mov dword [rbp - 4], edi	      1078	ui.c	FUNCTION_31
0x1877	          0x8975f8	                mov dword [rbp - 8], esi	      1078	ui.c	FUNCTION_31
0x187a	     0xfb705000000	           movzx eax, word [0x040018c1] 	      1079	ui.c	FUNCTION_31	IF_1
0x1881	        0x6683f802	                               cmp ax, 2	      1079	ui.c	FUNCTION_31	IF_1
0x1885	            0x752e	                           jne 0x40018f5	      1079	ui.c	FUNCTION_31	IF_1
0x1887	          0x8b45f8	                mov eax, dword [rbp - 8]	      1080	ui.c	FUNCTION_31	IF_1
0x188a	          0x4863d0	                         movsxd rdx, eax	      1080	ui.c	FUNCTION_31	IF_1
0x188d	    0x488b05000000	            mov rax, qword [0x040018d4] 	      1080	ui.c	FUNCTION_31	IF_1
0x1894	          0x4839c2	                            cmp rdx, rax	      1080	ui.c	FUNCTION_31	IF_1
0x1897	            0x7c1c	                            jl 0x40018f5	      1080	ui.c	FUNCTION_31	IF_1
0x1899	          0x8b45fc	                mov eax, dword [rbp - 4]	      1081	ui.c	FUNCTION_31	IF_1
0x189c	          0x4863d0	                         movsxd rdx, eax	      1081	ui.c	FUNCTION_31	IF_1
0x189f	    0x488b05000000	            mov rax, qword [0x040018e6] 	      1081	ui.c	FUNCTION_31	IF_1
0x18a6	          0x4839c2	                            cmp rdx, rax	      1081	ui.c	FUNCTION_31	IF_1
0x18a9	            0x7f0a	                            jg 0x40018f5	      1081	ui.c	FUNCTION_31	IF_1
0x18ab	      0xbf00000000	                              mov edi, 0	      1082	ui.c	FUNCTION_31	CALL_1
0x18b0	      0xe800000000	                          call 0x40018f5	      1082	ui.c	FUNCTION_31	CALL_1
0x18b5	              0x90	                                     nop	      1083	ui.c	FUNCTION_31
0x18b6	              0xc9	                                   leave	      1083	ui.c	FUNCTION_31
0x18b7	              0xc3	                                     ret	      1083	ui.c	FUNCTION_31
jump_to_mouse	CALL,33:WHILE,0:IF,57:ELSE,18:DO,0:SWITCH,0:functions,0:FOR,2	759
0x3ebb	              0x55	                                push rbp	      2641	ui.c	FUNCTION_75
0x3ebc	          0x4889e5	                            mov rbp, rsp	      2641	ui.c	FUNCTION_75
0x3ebf	              0x53	                                push rbx	      2641	ui.c	FUNCTION_75
0x3ec0	        0x4883ec68	                           sub rsp, 0x68	      2641	ui.c	FUNCTION_75
0x3ec4	          0x897d9c	             mov dword [rbp - 0x64], edi	      2641	ui.c	FUNCTION_75
0x3ec7	        0x48897590	             mov qword [rbp - 0x70], rsi	      2641	ui.c	FUNCTION_75
0x3ecb	          0x895598	             mov dword [rbp - 0x68], edx	      2641	ui.c	FUNCTION_75
0x3ece	    0x64488b042528	                mov rax, qword fs:[0x28]	      2641	ui.c	FUNCTION_75
0x3ed7	        0x488945e8	             mov qword [rbp - 0x18], rax	      2641	ui.c	FUNCTION_75
0x3edb	            0x31c0	                            xor eax, eax	      2641	ui.c	FUNCTION_75
0x3edd	    0x8b0500000000	            mov eax, dword [0x04003f23] 	      2656	ui.c	FUNCTION_75
0x3ee3	          0x8945ac	             mov dword [rbp - 0x54], eax	      2656	ui.c	FUNCTION_75
0x3ee6	    0x8b0500000000	            mov eax, dword [0x04003f2c] 	      2657	ui.c	FUNCTION_75
0x3eec	          0x8945b0	             mov dword [rbp - 0x50], eax	      2657	ui.c	FUNCTION_75
0x3eef	    0xc70500000000	               mov dword [0x04003f39], 0	      2662	ui.c	FUNCTION_75
0x3ef9	    0xc70500000000	               mov dword [0x04003f43], 0	      2663	ui.c	FUNCTION_75
0x3f03	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2665	ui.c	FUNCTION_75	IF_1
0x3f06	          0x83e020	                           and eax, 0x20	      2665	ui.c	FUNCTION_75	IF_1
0x3f09	            0x85c0	                           test eax, eax	      2665	ui.c	FUNCTION_75	IF_1
0x3f0b	            0x742f	                            je 0x4003f7c	      2665	ui.c	FUNCTION_75	IF_1
0x3f0d	    0x488b05000000	            mov rax, qword [0x04003f54] 	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x3f14	          0x4885c0	                           test rax, rax	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x3f17	            0x740e	                            je 0x4003f67	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x3f19	    0x8b0500000000	            mov eax, dword [0x04003f5f] 	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x3f1f	            0x85c0	                           test eax, eax	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x3f21	            0x7504	                           jne 0x4003f67	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x3f23	        0x83659cfa	      and dword [rbp - 0x64], 0xfffffffa	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x3f27	    0x48c705000000	               mov qword [0x04003f72], 0	      2671	ui.c	FUNCTION_75	IF_1
0x3f32	    0xc70500000000	               mov dword [0x04003f7c], 0	      2672	ui.c	FUNCTION_75	IF_1
0x3f3c	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2675	ui.c	FUNCTION_75	IF_3
0x3f3f	          0x83e004	                              and eax, 4	      2675	ui.c	FUNCTION_75	IF_3
0x3f42	            0x85c0	                           test eax, eax	      2675	ui.c	FUNCTION_75	IF_3
0x3f44	     0xf8402010000	                            je 0x400408c	      2675	ui.c	FUNCTION_75	IF_3
0x3f4a	    0x8b1500000000	            mov edx, dword [0x04003f90] 	      2676	ui.c	FUNCTION_75	IF_3
0x3f50	    0x8b0500000000	            mov eax, dword [0x04003f96] 	      2676	ui.c	FUNCTION_75	IF_3
0x3f56	            0x39c2	                            cmp edx, eax	      2676	ui.c	FUNCTION_75	IF_3
0x3f58	     0xf85ee000000	                           jne 0x400408c	      2676	ui.c	FUNCTION_75	IF_3
0x3f5e	    0x8b1500000000	            mov edx, dword [0x04003fa4] 	      2677	ui.c	FUNCTION_75	IF_3
0x3f64	    0x8b0500000000	            mov eax, dword [0x04003faa] 	      2677	ui.c	FUNCTION_75	IF_3
0x3f6a	            0x39c2	                            cmp edx, eax	      2677	ui.c	FUNCTION_75	IF_3
0x3f6c	     0xf85da000000	                           jne 0x400408c	      2677	ui.c	FUNCTION_75	IF_3
0x3f72	            0xeb01	                           jmp 0x4003fb5	      2677	ui.c	FUNCTION_75	IF_3
0x3f74	              0x90	                                     nop	      2718	ui.c	FUNCTION_75	IF_11
0x3f75	    0x8b0500000000	            mov eax, dword [0x04003fbb] 	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x3f7b	            0x85c0	                           test eax, eax	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x3f7d	            0x740a	                            je 0x4003fc9	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x3f7f	      0xb802000000	                              mov eax, 2	      2683	ui.c	FUNCTION_75	IF_3	IF_4
0x3f84	      0xe99f0b0000	                           jmp 0x4004b68	      2683	ui.c	FUNCTION_75	IF_3	IF_4
0x3f89	    0x8b0500000000	            mov eax, dword [0x04003fcf] 	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x3f8f	            0x85c0	                           test eax, eax	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x3f91	            0x740a	                            je 0x4003fdd	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x3f93	      0xb804000000	                              mov eax, 4	      2685	ui.c	FUNCTION_75	IF_3	IF_5
0x3f98	      0xe98b0b0000	                           jmp 0x4004b68	      2685	ui.c	FUNCTION_75	IF_3	IF_5
0x3f9d	    0x8b0500000000	            mov eax, dword [0x04003fe3] 	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x3fa3	            0x85c0	                           test eax, eax	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x3fa5	            0x745a	                            je 0x4004041	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x3fa7	    0x8b0500000000	            mov eax, dword [0x04003fed] 	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x3fad	          0x83e060	                           and eax, 0x60	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x3fb0	            0x85c0	                           test eax, eax	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x3fb2	            0x7443	                            je 0x4004037	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x3fb4	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x3fb7	          0x83e020	                           and eax, 0x20	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x3fba	            0x85c0	                           test eax, eax	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x3fbc	            0x7539	                           jne 0x4004037	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x3fbe	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x3fc2	        0x488d45ac	                   lea rax, [rbp - 0x54]	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x3fc6	          0x4889d6	                            mov rsi, rdx	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x3fc9	          0x4889c7	                            mov rdi, rax	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x3fcc	      0xe800000000	                          call 0x4004011	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x3fd1	        0x488945c8	             mov qword [rbp - 0x38], rax	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x3fd5	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2694	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x3fda	            0x750a	                           jne 0x4004026	      2694	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x3fdc	      0xb800000000	                              mov eax, 0	      2695	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x3fe1	      0xe9420b0000	                           jmp 0x4004b68	      2695	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x3fe6	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x3fe9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x3fed	            0x89d6	                            mov esi, edx	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x3fef	          0x4889c7	                            mov rdi, rax	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x3ff2	      0xe800000000	                          call 0x4004037	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x3ff7	      0xb808080000	                          mov eax, 0x808	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x3ffc	      0xe9270b0000	                           jmp 0x4004b68	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x4001	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x4004	          0x83e010	                           and eax, 0x10	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x4007	            0x85c0	                           test eax, eax	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x4009	            0x740f	                            je 0x400405a	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x400b	      0xe800000000	                          call 0x4004050	      2703	ui.c	FUNCTION_75	IF_3	IF_9	CALL_3
0x4010	      0xbf14000000	                           mov edi, 0x14	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x4015	      0xe800000000	                          call 0x400405a	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x401a	    0x8b0500000000	            mov eax, dword [0x04004060] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4020	            0x85c0	                           test eax, eax	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4022	            0x741e	                            je 0x4004082	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4024	    0x488b05000000	            mov rax, qword [0x0400406b] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x402b	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4031	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4034	            0x39c2	                            cmp edx, eax	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4036	            0x7e0a	                           jle 0x4004082	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4038	      0xb808000000	                              mov eax, 8	      2709	ui.c	FUNCTION_75	IF_3	IF_10
0x403d	      0xe9e60a0000	                           jmp 0x4004b68	      2709	ui.c	FUNCTION_75	IF_3	IF_10
0x4042	      0xb801000000	                              mov eax, 1	      2711	ui.c	FUNCTION_75	IF_3
0x4047	      0xe9dc0a0000	                           jmp 0x4004b68	      2711	ui.c	FUNCTION_75	IF_3
0x404c	    0x8b0500000000	            mov eax, dword [0x04004092] 	      2714	ui.c	FUNCTION_75
0x4052	    0x890500000000	            mov dword [0x04004098], eax 	      2714	ui.c	FUNCTION_75
0x4058	    0x8b0500000000	            mov eax, dword [0x0400409e] 	      2715	ui.c	FUNCTION_75
0x405e	    0x890500000000	            mov dword [0x040040a4], eax 	      2715	ui.c	FUNCTION_75
0x4064	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2717	ui.c	FUNCTION_75	IF_11
0x4067	          0x83e008	                              and eax, 8	      2717	ui.c	FUNCTION_75	IF_11
0x406a	            0x85c0	                           test eax, eax	      2717	ui.c	FUNCTION_75	IF_11
0x406c	     0xf8502ffffff	                           jne 0x4003fb4	      2717	ui.c	FUNCTION_75	IF_11
0x4072	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2723	ui.c	FUNCTION_75	IF_12
0x4075	            0x85c0	                           test eax, eax	      2723	ui.c	FUNCTION_75	IF_12
0x4077	            0x7869	                            js 0x4004122	      2723	ui.c	FUNCTION_75	IF_12
0x4079	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2723	ui.c	FUNCTION_75	IF_12
0x407c	          0x4863d0	                         movsxd rdx, eax	      2723	ui.c	FUNCTION_75	IF_12
0x407f	    0x488b05000000	            mov rax, qword [0x040040c6] 	      2723	ui.c	FUNCTION_75	IF_12
0x4086	          0x4839c2	                            cmp rdx, rax	      2723	ui.c	FUNCTION_75	IF_12
0x4089	            0x7d57	                           jge 0x4004122	      2723	ui.c	FUNCTION_75	IF_12
0x408b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2723	ui.c	FUNCTION_75	IF_12
0x408e	            0x85c0	                           test eax, eax	      2723	ui.c	FUNCTION_75	IF_12
0x4090	            0x7850	                            js 0x4004122	      2723	ui.c	FUNCTION_75	IF_12
0x4092	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2723	ui.c	FUNCTION_75	IF_12
0x4095	          0x4863d0	                         movsxd rdx, eax	      2723	ui.c	FUNCTION_75	IF_12
0x4098	    0x488b05000000	            mov rax, qword [0x040040df] 	      2723	ui.c	FUNCTION_75	IF_12
0x409f	          0x4839c2	                            cmp rdx, rax	      2723	ui.c	FUNCTION_75	IF_12
0x40a2	            0x7f3e	                            jg 0x4004122	      2723	ui.c	FUNCTION_75	IF_12
0x40a4	    0x488b05000000	            mov rax, qword [0x040040eb] 	      2724	ui.c	FUNCTION_75	IF_12
0x40ab	          0x4885c0	                           test rax, rax	      2724	ui.c	FUNCTION_75	IF_12
0x40ae	            0x7432	                            je 0x4004122	      2724	ui.c	FUNCTION_75	IF_12
0x40b0	    0x488b05000000	            mov rax, qword [0x040040f7] 	      2725	ui.c	FUNCTION_75	IF_12
0x40b7	    0x488b15000000	            mov rdx, qword [0x040040fe] 	      2725	ui.c	FUNCTION_75	IF_12
0x40be	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      2725	ui.c	FUNCTION_75	IF_12
0x40c1	          0x4863c9	                         movsxd rcx, ecx	      2725	ui.c	FUNCTION_75	IF_12
0x40c4	        0x48c1e102	                              shl rcx, 2	      2725	ui.c	FUNCTION_75	IF_12
0x40c8	          0x4801ca	                            add rdx, rcx	      2725	ui.c	FUNCTION_75	IF_12
0x40cb	            0x8b12	                    mov edx, dword [rdx]	      2725	ui.c	FUNCTION_75	IF_12
0x40cd	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      2725	ui.c	FUNCTION_75	IF_12
0x40d0	             0x1ca	                            add edx, ecx	      2725	ui.c	FUNCTION_75	IF_12
0x40d2	            0x89d2	                            mov edx, edx	      2725	ui.c	FUNCTION_75	IF_12
0x40d4	          0x4801d0	                            add rax, rdx	      2725	ui.c	FUNCTION_75	IF_12
0x40d7	           0xfb600	                   movzx eax, byte [rax]	      2725	ui.c	FUNCTION_75	IF_12
0x40da	           0xfb6c0	                           movzx eax, al	      2725	ui.c	FUNCTION_75	IF_12
0x40dd	          0x8945bc	             mov dword [rbp - 0x44], eax	      2725	ui.c	FUNCTION_75	IF_12
0x40e0	            0xeb07	                           jmp 0x4004129	      2725	ui.c	FUNCTION_75	IF_12
0x40e2	    0xc745bc200000	           mov dword [rbp - 0x44], 0x20 	      2727	ui.c	FUNCTION_75	ELSE_1
0x40e9	    0x488b05000000	            mov rax, qword [0x04004130] 	      2730	ui.c	FUNCTION_75	ELSE_1
0x40f0	        0x488945c0	             mov qword [rbp - 0x40], rax	      2730	ui.c	FUNCTION_75	ELSE_1
0x40f4	    0x488b05000000	            mov rax, qword [0x0400413b] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x40fb	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x40ff	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4103	        0x488945d0	             mov qword [rbp - 0x30], rax	      2731	ui.c	FUNCTION_75	ELSE_1
0x4107	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2731	ui.c	FUNCTION_75	ELSE_1
0x410b	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x410e	          0x83e001	                              and eax, 1	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4111	            0x85c0	                           test eax, eax	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4113	     0xf8533030000	                           jne 0x400448c	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4119	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x411c	            0x85c0	                           test eax, eax	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x411e	            0x7807	                            js 0x4004167	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4120	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4123	            0x85c0	                           test eax, eax	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4125	            0x790a	                           jns 0x4004171	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4127	      0xb800000000	                              mov eax, 0	      2736	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x412c	      0xe9f7090000	                           jmp 0x4004b68	      2736	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4131	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4135	        0x488d45ac	                   lea rax, [rbp - 0x54]	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4139	          0x4889d6	                            mov rsi, rdx	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x413c	          0x4889c7	                            mov rdi, rax	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x413f	      0xe800000000	                          call 0x4004184	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4144	        0x488945c8	             mov qword [rbp - 0x38], rax	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x4148	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2740	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x414d	            0x750a	                           jne 0x4004199	      2740	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x414f	      0xb800000000	                              mov eax, 0	      2741	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x4154	      0xe9cf090000	                           jmp 0x4004b68	      2741	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x4159	    0x48c705000000	               mov qword [0x040041a4], 0	      2742	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4164	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4167	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x416a	            0x7525	                           jne 0x40041d1	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x416c	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x416f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x4173	            0x89d6	                            mov esi, edx	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x4175	          0x4889c7	                            mov rdi, rax	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x4178	      0xe800000000	                          call 0x40041bd	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x417d	    0xc70500000000	               mov dword [0x040041c7], 1	      2750	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4187	      0xb808080000	                          mov eax, 0x808	      2751	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x418c	      0xe997090000	                           jmp 0x4004b68	      2751	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4191	    0xc70500000000	               mov dword [0x040041db], 0	      2753	ui.c	FUNCTION_75	ELSE_1	IF_13
0x419b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x419f	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41a5	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41a8	            0x39c2	                            cmp edx, eax	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41aa	            0x7f27	                            jg 0x4004213	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41ac	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41b3	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41b9	            0x29c2	                            sub edx, eax	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41bb	            0x89d0	                            mov eax, edx	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41bd	          0x83c001	                              add eax, 1	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41c0	    0x890500000000	            mov dword [0x04004206], eax 	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41ca	    0x488905000000	            mov qword [0x04004211], rax 	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41d1	            0xeb0a	                           jmp 0x400421d	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x41d3	    0xc70500000000	               mov dword [0x0400421d], 0	      2765	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2
0x41dd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x41e1	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x41e7	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x41ea	            0x39c2	                            cmp edx, eax	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x41ec	            0x7f27	                            jg 0x4004255	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x41ee	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x41f1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x41f5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x41fb	            0x29c2	                            sub edx, eax	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x41fd	            0x89d0	                            mov eax, edx	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x41ff	          0x83c001	                              add eax, 1	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4202	    0x890500000000	            mov dword [0x04004248], eax 	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4208	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x420c	    0x488905000000	            mov qword [0x04004253], rax 	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4213	            0xeb0a	                           jmp 0x400425f	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4215	    0xc70500000000	               mov dword [0x0400425f], 0	      2772	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3
0x421f	    0x8b0500000000	            mov eax, dword [0x04004265] 	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4225	            0x85c0	                           test eax, eax	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4227	            0x7430	                            je 0x4004299	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4229	    0x8b0500000000	            mov eax, dword [0x0400426f] 	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x422f	            0x85c0	                           test eax, eax	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4231	            0x7426	                            je 0x4004299	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4233	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4237	          0x4889c7	                            mov rdi, rax	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x423a	      0xe800000000	                          call 0x400427f	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x423f	            0x85c0	                           test eax, eax	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4241	            0x740c	                            je 0x400428f	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4243	    0xc70500000000	               mov dword [0x0400428d], 0	      2779	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20
0x424d	            0xeb0a	                           jmp 0x4004299	      2779	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20
0x424f	    0xc70500000000	               mov dword [0x04004299], 0	      2781	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	ELSE_4
0x4259	    0x8b0500000000	            mov eax, dword [0x0400429f] 	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x425f	            0x85c0	                           test eax, eax	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4261	     0xf84c8000000	                            je 0x400436f	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4267	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x426b	        0x488b5008	                mov rdx, qword [rax + 8]	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x426f	    0x488b05000000	            mov rax, qword [0x040042b6] 	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4276	        0x488b4008	                mov rax, qword [rax + 8]	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x427a	          0x4839c2	                            cmp rdx, rax	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x427d	     0xf859d000000	                           jne 0x4004360	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4283	    0x8b0500000000	            mov eax, dword [0x040042c9] 	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4289	            0x85c0	                           test eax, eax	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x428b	     0xf859e000000	                           jne 0x400436f	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4291	    0x8b0500000000	            mov eax, dword [0x040042d7] 	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4297	            0x85c0	                           test eax, eax	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4299	     0xf8590000000	                           jne 0x400436f	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x429f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42a3	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42a9	            0x85c0	                           test eax, eax	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42ab	            0x742b	                            je 0x4004318	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42ad	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42b0	          0x4863d0	                         movsxd rdx, eax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42b7	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42bd	          0x4863c8	                         movsxd rcx, eax	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42c4	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42cb	          0x4829c1	                            sub rcx, rax	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42ce	          0x4889c8	                            mov rax, rcx	      2792	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42d1	          0x4839c2	                            cmp rdx, rax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42d4	            0x7c40	                            jl 0x4004356	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42d6	            0xeb57	                           jmp 0x400436f	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42d8	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42db	          0x4863d0	                         movsxd rdx, eax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2794	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42e2	    0x488b88c80100	           mov rcx, qword [rax + 0x1c8] 	      2794	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42e9	    0x8b0500000000	            mov eax, dword [0x0400432f] 	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42ef	            0x85c0	                           test eax, eax	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42f1	            0x750d	                           jne 0x4004340	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42f3	    0x488b05000000	            mov rax, qword [0x0400433a] 	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42fa	        0x483945c8	            cmp qword [rbp - 0x38], rax 	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x42fe	            0x7407	                            je 0x4004347	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4300	      0xb801000000	                              mov eax, 1	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4305	            0xeb05	                           jmp 0x400434c	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4307	      0xb800000000	                              mov eax, 0	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x430c	            0x4898	                                    cdqe	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x430e	          0x4801c8	                            add rax, rcx	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4311	          0x4839c2	                            cmp rdx, rax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4314	            0x7c19	                            jl 0x400436f	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4316	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4319	          0x83e010	                           and eax, 0x10	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x431c	            0x85c0	                           test eax, eax	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x431e	            0x740f	                            je 0x400436f	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4320	      0xe800000000	                          call 0x4004365	      2802	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_8
0x4325	      0xbf14000000	                           mov edi, 0x14	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x432a	      0xe800000000	                          call 0x400436f	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x432f	    0x8b0500000000	            mov eax, dword [0x04004375] 	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4335	            0x85c0	                           test eax, eax	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4337	            0x7435	                            je 0x40043ae	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4339	    0x488b05000000	            mov rax, qword [0x04004380] 	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4340	        0x483945c8	            cmp qword [rbp - 0x38], rax 	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4344	            0x7428	                            je 0x40043ae	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4346	    0xc70500000000	               mov dword [0x04004390], 0	      2810	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4350	    0x8b0500000000	            mov eax, dword [0x04004396] 	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x4356	            0x85c0	                           test eax, eax	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x4358	            0x740a	                            je 0x40043a4	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x435a	      0xb802000000	                              mov eax, 2	      2813	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x435f	      0xe9c4070000	                           jmp 0x4004b68	      2813	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x4364	      0xb808000000	                              mov eax, 8	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4369	      0xe9ba070000	                           jmp 0x4004b68	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x436e	    0x488b05000000	            mov rax, qword [0x040043b5] 	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4375	          0x4885c0	                           test rax, rax	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4378	            0x740a	                            je 0x40043c4	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x437a	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x437d	          0x83e020	                           and eax, 0x20	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4380	            0x85c0	                           test eax, eax	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4382	            0x7411	                            je 0x40043d5	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4384	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x4388	      0xbe01000000	                              mov esi, 1	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x438d	          0x4889c7	                            mov rdi, rax	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x4390	      0xe800000000	                          call 0x40043d5	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x4395	    0x488b05000000	            mov rax, qword [0x040043dc] 	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x439c	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x43a0	            0x7414	                            je 0x40043f6	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x43a2	    0x488b05000000	            mov rax, qword [0x040043e9] 	      2832	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_11
0x43a9	          0x4889c7	                            mov rdi, rax	      2832	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_11
0x43ac	      0xe800000000	                          call 0x40043f1	      2832	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_11
0x43b1	      0xe800000000	                          call 0x40043f6	      2836	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_12
0x43b6	    0x8b0500000000	            mov eax, dword [0x040043fc] 	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x43bc	            0x85c0	                           test eax, eax	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x43be	            0x7421	                            je 0x4004421	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x43c0	    0x488b05000000	            mov rax, qword [0x04004407] 	      2842	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x43c7	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      2842	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x43cb	            0x750a	                           jne 0x4004417	      2842	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x43cd	      0xb802000000	                              mov eax, 2	      2843	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x43d2	      0xe951070000	                           jmp 0x4004b68	      2843	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x43d7	      0xb802010000	                          mov eax, 0x102	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x43dc	      0xe947070000	                           jmp 0x4004b68	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x43e1	    0x8b0500000000	            mov eax, dword [0x04004427] 	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x43e7	            0x85c0	                           test eax, eax	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x43e9	            0x7421	                            je 0x400444c	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x43eb	    0x488b05000000	            mov rax, qword [0x04004432] 	      2850	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x43f2	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      2850	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x43f6	            0x750a	                           jne 0x4004442	      2850	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x43f8	      0xb804000000	                              mov eax, 4	      2851	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x43fd	      0xe926070000	                           jmp 0x4004b68	      2851	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x4402	      0xb804010000	                          mov eax, 0x104	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x4407	      0xe91c070000	                           jmp 0x4004b68	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x440c	    0x488b05000000	            mov rax, qword [0x04004453] 	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4413	    0x488b15000000	            mov rdx, qword [0x0400445a] 	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x441a	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x441e	        0x48895038	             mov qword [rax + 0x38], rdx	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4422	    0x488b05000000	            mov rax, qword [0x04004469] 	      2859	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4429	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2859	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x442d	    0x488905000000	            mov qword [0x04004474], rax 	      2859	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4434	    0x488b05000000	            mov rax, qword [0x0400447b] 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x443b	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4441	    0x890500000000	            mov dword [0x04004487], eax 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4447	      0xe90b050000	                           jmp 0x4004997	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x444c	    0x8b0500000000	            mov eax, dword [0x04004492] 	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4452	            0x85c0	                           test eax, eax	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4454	            0x7472	                            je 0x4004508	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4456	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x445a	            0x756c	                           jne 0x4004508	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x445c	    0x488b05000000	            mov rax, qword [0x040044a3] 	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4463	          0x4885c0	                           test rax, rax	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4466	            0x7456	                            je 0x40044fe	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4468	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x446b	    0x488b05000000	            mov rax, qword [0x040044b2] 	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4472	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4478	            0x29c2	                            sub edx, eax	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x447a	    0x488b05000000	            mov rax, qword [0x040044c1] 	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4481	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4487	            0x29c2	                            sub edx, eax	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4489	            0x89d0	                            mov eax, edx	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x448b	          0x8d5001	                      lea edx, [rax + 1]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x448e	    0x8b0500000000	            mov eax, dword [0x040044d4] 	      2871	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4494	            0x29c2	                            sub edx, eax	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4496	            0x89d0	                            mov eax, edx	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4498	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x449b	    0x488b05000000	            mov rax, qword [0x040044e2] 	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x44a2	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x44a5	            0x89d6	                            mov esi, edx	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x44a7	          0x4889c7	                            mov rdi, rax	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x44aa	      0xe800000000	                          call 0x40044ef	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x44af	    0x8b0500000000	            mov eax, dword [0x040044f5] 	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x44b5	           0xb45b4	              or eax, dword [rbp - 0x4c]	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x44b8	    0x890500000000	            mov dword [0x040044fe], eax 	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x44be	      0xb802000000	                              mov eax, 2	      2875	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x44c3	      0xe960060000	                           jmp 0x4004b68	      2875	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x44c8	    0x8b0500000000	            mov eax, dword [0x0400450e] 	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x44ce	            0x85c0	                           test eax, eax	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x44d0	            0x7472	                            je 0x4004584	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x44d2	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x44d6	            0x756c	                           jne 0x4004584	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x44d8	    0x488b05000000	            mov rax, qword [0x0400451f] 	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x44df	          0x4885c0	                           test rax, rax	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x44e2	            0x7456	                            je 0x400457a	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x44e4	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x44e7	    0x488b05000000	            mov rax, qword [0x0400452e] 	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x44ee	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x44f4	            0x29c2	                            sub edx, eax	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x44f6	    0x488b05000000	            mov rax, qword [0x0400453d] 	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x44fd	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4503	            0x29c2	                            sub edx, eax	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4505	            0x89d0	                            mov eax, edx	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4507	          0x8d5001	                      lea edx, [rax + 1]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x450a	    0x8b0500000000	            mov eax, dword [0x04004550] 	      2883	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4510	            0x29c2	                            sub edx, eax	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4512	            0x89d0	                            mov eax, edx	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4514	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4517	    0x488b05000000	            mov rax, qword [0x0400455e] 	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x451e	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x4521	            0x89d6	                            mov esi, edx	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x4523	          0x4889c7	                            mov rdi, rax	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x4526	      0xe800000000	                          call 0x400456b	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x452b	    0x8b0500000000	            mov eax, dword [0x04004571] 	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4531	           0xb45b4	              or eax, dword [rbp - 0x4c]	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4534	    0x890500000000	            mov dword [0x0400457a], eax 	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x453a	      0xb804000000	                              mov eax, 4	      2887	ui.c	FUNCTION_75	ELSE_8	IF_32
0x453f	      0xe9e4050000	                           jmp 0x4004b68	      2887	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4544	    0x8b0500000000	            mov eax, dword [0x0400458a] 	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x454a	            0x85c0	                           test eax, eax	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x454c	            0x740a	                            je 0x4004598	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x454e	      0xb808080000	                          mov eax, 0x808	      2893	ui.c	FUNCTION_75	ELSE_9	IF_34
0x4553	      0xe9d0050000	                           jmp 0x4004b68	      2893	ui.c	FUNCTION_75	ELSE_9	IF_34
0x4558	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x455b	          0x83e010	                           and eax, 0x10	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x455e	            0x85c0	                           test eax, eax	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x4560	            0x740f	                            je 0x40045b1	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x4562	      0xe800000000	                          call 0x40045a7	      2901	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_15
0x4567	      0xbf14000000	                           mov edi, 0x14	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x456c	      0xe800000000	                          call 0x40045b1	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x4571	    0x8b0500000000	            mov eax, dword [0x040045b7] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4577	            0x85c0	                           test eax, eax	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4579	            0x741e	                            je 0x40045d9	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x457b	    0x488b05000000	            mov rax, qword [0x040045c2] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4582	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4588	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x458b	            0x39c2	                            cmp edx, eax	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x458d	            0x7e0a	                           jle 0x40045d9	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x458f	      0xb808000000	                              mov eax, 8	      2908	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4594	      0xe98f050000	                           jmp 0x4004b68	      2908	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4599	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x459c	    0x488b05000000	            mov rax, qword [0x040045e3] 	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x45a3	    0x8b889c000000	            mov ecx, dword [rax + 0x9c] 	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x45a9	    0x488b05000000	            mov rax, qword [0x040045f0] 	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x45b0	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x45b6	             0x1c8	                            add eax, ecx	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x45b8	            0x29c2	                            sub edx, eax	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x45ba	            0x89d0	                            mov eax, edx	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x45bc	          0x8945ac	             mov dword [rbp - 0x54], eax	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x45bf	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2912	ui.c	FUNCTION_75	ELSE_10
0x45c2	    0x488b05000000	            mov rax, qword [0x04004609] 	      2912	ui.c	FUNCTION_75	ELSE_10
0x45c9	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      2912	ui.c	FUNCTION_75	ELSE_10
0x45cf	            0x29c2	                            sub edx, eax	      2912	ui.c	FUNCTION_75	ELSE_10
0x45d1	            0x89d0	                            mov eax, edx	      2912	ui.c	FUNCTION_75	ELSE_10
0x45d3	          0x8945b0	             mov dword [rbp - 0x50], eax	      2912	ui.c	FUNCTION_75	ELSE_10
0x45d6	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x45d9	            0x85c0	                           test eax, eax	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x45db	     0xf896b010000	                           jns 0x400478c	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x45e1	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      2920	ui.c	FUNCTION_75	ELSE_10	IF_37
0x45e8	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x45ef	      0xe9f9000000	                           jmp 0x400472d	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x45f4	    0x488b05000000	            mov rax, qword [0x0400463b] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x45fb	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4601	    0x488b05000000	            mov rax, qword [0x04004648] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4608	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x460c	    0x488b05000000	            mov rax, qword [0x04004653] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4613	          0x4889d6	                            mov rsi, rdx	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4616	          0x4889c7	                            mov rdi, rax	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4619	      0xe800000000	                          call 0x400465e	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x461e	            0x39c3	                            cmp ebx, eax	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4620	            0x7d06	                           jge 0x4004668	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4622	        0x8345b401	               add dword [rbp - 0x4c], 1	      2925	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38
0x4626	            0xeb1a	                           jmp 0x4004682	      2925	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38
0x4628	    0x488b05000000	            mov rax, qword [0x0400466f] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x462f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4633	        0x4883e801	                              sub rax, 1	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4637	          0x4889c7	                            mov rdi, rax	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x463a	      0xe800000000	                          call 0x400467f	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x463f	           0x145b4	             add dword [rbp - 0x4c], eax	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4642	        0x837db800	               cmp dword [rbp - 0x48], 0	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4646	            0x750e	                           jne 0x4004696	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4648	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x464b	            0xf7d8	                                 neg eax	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x464d	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4650	     0xf8cae000000	                            jl 0x4004744	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4656	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      2931	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x465d	    0x488b05000000	            mov rax, qword [0x040046a4] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4664	        0x488d4878	                   lea rcx, [rax + 0x78]	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4668	    0x488b05000000	            mov rax, qword [0x040046af] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x466f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4673	      0xba00000000	                              mov edx, 0	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4678	          0x4889ce	                            mov rsi, rcx	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x467b	          0x4889c7	                            mov rdi, rax	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x467e	      0xe800000000	                          call 0x40046c3	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4683	    0x488b05000000	            mov rax, qword [0x040046ca] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x468a	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4690	    0x488b05000000	            mov rax, qword [0x040046d7] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4697	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x469b	    0x488b05000000	            mov rax, qword [0x040046e2] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x46a2	          0x4889d6	                            mov rsi, rdx	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x46a5	          0x4889c7	                            mov rdi, rax	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x46a8	      0xe800000000	                          call 0x40046ed	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x46ad	            0x39c3	                            cmp ebx, eax	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x46af	            0x7d18	                           jge 0x4004709	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x46b1	    0x488b05000000	            mov rax, qword [0x040046f8] 	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x46b8	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x46be	          0x83c201	                              add edx, 1	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x46c1	    0x899084000000	             mov dword [rax + 0x84], edx	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x46c7	            0xeb24	                           jmp 0x400472d	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x46c9	    0x488b05000000	            mov rax, qword [0x04004710] 	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x46d0	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x46d4	        0x4883ea01	                              sub rdx, 1	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x46d8	        0x48895078	             mov qword [rax + 0x78], rdx	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x46dc	    0x488b05000000	            mov rax, qword [0x04004723] 	      2943	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x46e3	    0xc78084000000	               mov dword [rax + 0x84], 0	      2943	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x46ed	    0x488b05000000	            mov rax, qword [0x04004734] 	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x46f4	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x46f8	        0x4883f801	                              cmp rax, 1	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x46fc	     0xf8ff2feffff	                            jg 0x4004634	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x4702	            0xeb01	                           jmp 0x4004745	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x4704	              0x90	                                     nop	      2930	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4705	    0x488b05000000	            mov rax, qword [0x0400474c] 	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x470c	      0xbe00000000	                              mov esi, 0	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4711	          0x4889c7	                            mov rdi, rax	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4714	      0xe800000000	                          call 0x4004759	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4719	    0x488b05000000	            mov rax, qword [0x04004760] 	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4720	    0x488b15000000	            mov rdx, qword [0x04004767] 	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4727	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x472d	          0x83e28e	                     and edx, 0xffffff8e	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4730	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4736	      0xbf0a000000	                            mov edi, 0xa	      2952	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_23
0x473b	      0xe800000000	                          call 0x4004780	      2952	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_23
0x4740	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4747	      0xe90b020000	                           jmp 0x4004997	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x474c	    0x488b05000000	            mov rax, qword [0x04004793] 	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4753	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4759	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x475c	            0x39c2	                            cmp edx, eax	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x475e	     0xf8f8c010000	                            jg 0x4004930	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4764	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      2957	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x476b	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4772	      0xe905010000	                           jmp 0x40048bc	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4777	    0x488b05000000	            mov rax, qword [0x040047be] 	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x477e	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4784	            0x85c0	                           test eax, eax	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4786	            0x7e06	                           jle 0x40047ce	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4788	        0x8345b401	               add dword [rbp - 0x4c], 1	      2962	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x478c	            0xeb16	                           jmp 0x40047e4	      2962	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x478e	    0x488b05000000	            mov rax, qword [0x040047d5] 	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x4795	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x4799	          0x4889c7	                            mov rdi, rax	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x479c	      0xe800000000	                          call 0x40047e1	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x47a1	           0x145b4	             add dword [rbp - 0x4c], eax	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x47a4	        0x837db800	               cmp dword [rbp - 0x48], 0	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x47a8	            0x7520	                           jne 0x400480a	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x47aa	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x47ad	    0x488b05000000	            mov rax, qword [0x040047f4] 	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x47b4	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x47ba	            0x29c2	                            sub edx, eax	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x47bc	            0x89d0	                            mov eax, edx	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x47be	          0x83c001	                              add eax, 1	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x47c1	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x47c4	     0xf8cd2000000	                            jl 0x40048dc	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x47ca	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      2968	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x47d1	    0x488b05000000	            mov rax, qword [0x04004818] 	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x47d8	        0x488d5078	                   lea rdx, [rax + 0x78]	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x47dc	    0x488b05000000	            mov rax, qword [0x04004823] 	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x47e3	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x47e7	      0xbe00000000	                              mov esi, 0	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x47ec	          0x4889c7	                            mov rdi, rax	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x47ef	      0xe800000000	                          call 0x4004834	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x47f4	            0x85c0	                           test eax, eax	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x47f6	            0x741e	                            je 0x4004856	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x47f8	    0x488b05000000	            mov rax, qword [0x0400483f] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x47ff	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4803	    0x488b05000000	            mov rax, qword [0x0400484a] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x480a	          0x488b00	                    mov rax, qword [rax]	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x480d	          0x4839c2	                            cmp rdx, rax	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4810	     0xf8489000000	                            je 0x40048df	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4816	    0x488b05000000	            mov rax, qword [0x0400485d] 	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x481d	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4823	            0x85c0	                           test eax, eax	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4825	            0x7e18	                           jle 0x400487f	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4827	    0x488b05000000	            mov rax, qword [0x0400486e] 	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x482e	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4834	          0x83ea01	                              sub edx, 1	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4837	    0x899084000000	             mov dword [rax + 0x84], edx	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x483d	            0xeb3d	                           jmp 0x40048bc	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x483f	    0x488b05000000	            mov rax, qword [0x04004886] 	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4846	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x484a	        0x4883c201	                              add rdx, 1	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x484e	        0x48895078	             mov qword [rax + 0x78], rdx	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4852	    0x488b1d000000	            mov rbx, qword [0x04004899] 	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4859	    0x488b05000000	            mov rax, qword [0x040048a0] 	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x4860	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x4864	    0x488b05000000	            mov rax, qword [0x040048ab] 	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x486b	          0x4889d6	                            mov rsi, rdx	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x486e	          0x4889c7	                            mov rdi, rax	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x4871	      0xe800000000	                          call 0x40048b6	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x4876	    0x898384000000	             mov dword [rbx + 0x84], eax	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x487c	    0x488b05000000	            mov rax, qword [0x040048c3] 	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4883	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4887	    0x488b05000000	            mov rax, qword [0x040048ce] 	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x488e	          0x488b00	                    mov rax, qword [rax]	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4891	          0x4839c2	                            cmp rdx, rax	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4894	     0xf8cddfeffff	                            jl 0x40047b7	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x489a	            0xeb04	                           jmp 0x40048e0	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x489c	              0x90	                                     nop	      2967	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x489d	            0xeb01	                           jmp 0x40048e0	      2967	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x489f	              0x90	                                     nop	      2972	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x48a0	    0x488b05000000	            mov rax, qword [0x040048e7] 	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x48a7	      0xbe00000000	                              mov esi, 0	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x48ac	          0x4889c7	                            mov rdi, rax	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x48af	      0xe800000000	                          call 0x40048f4	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x48b4	      0xbf0a000000	                            mov edi, 0xa	      2990	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_28
0x48b9	      0xe800000000	                          call 0x40048fe	      2990	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_28
0x48be	    0x488b05000000	            mov rax, qword [0x04004905] 	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x48c5	    0x488b15000000	            mov rdx, qword [0x0400490c] 	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x48cc	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x48d2	          0x83e28e	                     and edx, 0xffffff8e	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x48d5	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x48db	    0x488b05000000	            mov rax, qword [0x04004922] 	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x48e2	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x48e8	          0x83e801	                              sub eax, 1	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x48eb	          0x8945ac	             mov dword [rbp - 0x54], eax	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x48ee	            0xeb67	                           jmp 0x4004997	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x48f0	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x48f3	            0x85c0	                           test eax, eax	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x48f5	            0x7560	                           jne 0x4004997	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x48f7	    0x8b0500000000	            mov eax, dword [0x0400493d] 	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x48fd	            0x85c0	                           test eax, eax	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x48ff	            0x7e56	                           jle 0x4004997	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4901	    0x488b05000000	            mov rax, qword [0x04004948] 	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4908	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x490c	    0x488b05000000	            mov rax, qword [0x04004953] 	      3002	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4913	        0x488b4008	                mov rax, qword [rax + 8]	      3002	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4917	          0x488b00	                    mov rax, qword [rax]	      3002	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x491a	          0x4839c2	                            cmp rdx, rax	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x491d	            0x7538	                           jne 0x4004997	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x491f	    0x488b05000000	            mov rax, qword [0x04004966] 	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4926	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x492a	    0x488b05000000	            mov rax, qword [0x04004971] 	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4931	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4935	          0x4839c2	                            cmp rdx, rax	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4938	            0x751d	                           jne 0x4004997	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x493a	    0x488b05000000	            mov rax, qword [0x04004981] 	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4941	    0x488b15000000	            mov rdx, qword [0x04004988] 	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4948	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x494e	          0x80e27f	                            and dl, 0x7f	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4951	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4957	    0x488b05000000	            mov rax, qword [0x0400499e] 	      3012	ui.c	FUNCTION_75	IF_48
0x495e	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      3012	ui.c	FUNCTION_75	IF_48
0x4964	            0x85c0	                           test eax, eax	      3012	ui.c	FUNCTION_75	IF_48
0x4966	            0x7432	                            je 0x40049da	      3012	ui.c	FUNCTION_75	IF_48
0x4968	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3012	ui.c	FUNCTION_75	IF_48
0x496b	          0x4863d0	                         movsxd rdx, eax	      3012	ui.c	FUNCTION_75	IF_48
0x496e	    0x488b05000000	            mov rax, qword [0x040049b5] 	      3012	ui.c	FUNCTION_75	IF_48
0x4975	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      3012	ui.c	FUNCTION_75	IF_48
0x497b	          0x4863c8	                         movsxd rcx, eax	      3012	ui.c	FUNCTION_75	IF_48
0x497e	    0x488b05000000	            mov rax, qword [0x040049c5] 	      3012	ui.c	FUNCTION_75	IF_48
0x4985	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      3012	ui.c	FUNCTION_75	IF_48
0x498c	          0x4829c1	                            sub rcx, rax	      3012	ui.c	FUNCTION_75	IF_48
0x498f	          0x4889c8	                            mov rax, rcx	      3012	ui.c	FUNCTION_75	IF_48
0x4992	          0x4839c2	                            cmp rdx, rax	      3012	ui.c	FUNCTION_75	IF_48
0x4995	           0xf9cc0	                                 setl al	      3012	ui.c	FUNCTION_75	IF_48
0x4998	            0xeb2d	                           jmp 0x4004a07	      3012	ui.c	FUNCTION_75	IF_48
0x499a	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3012	ui.c	FUNCTION_75	IF_48
0x499d	          0x4863d0	                         movsxd rdx, eax	      3012	ui.c	FUNCTION_75	IF_48
0x49a0	    0x488b05000000	            mov rax, qword [0x040049e7] 	      3014	ui.c	FUNCTION_75	IF_48
0x49a7	    0x488b88c80100	           mov rcx, qword [rax + 0x1c8] 	      3014	ui.c	FUNCTION_75	IF_48
0x49ae	    0x8b0500000000	            mov eax, dword [0x040049f4] 	      3016	ui.c	FUNCTION_75	IF_48
0x49b4	            0x85c0	                           test eax, eax	      3016	ui.c	FUNCTION_75	IF_48
0x49b6	           0xf95c0	                                setne al	      3016	ui.c	FUNCTION_75	IF_48
0x49b9	           0xfb6c0	                           movzx eax, al	      3016	ui.c	FUNCTION_75	IF_48
0x49bc	            0x4898	                                    cdqe	      3016	ui.c	FUNCTION_75	IF_48
0x49be	          0x4801c8	                            add rax, rcx	      3016	ui.c	FUNCTION_75	IF_48
0x49c1	          0x4839c2	                            cmp rdx, rax	      3012	ui.c	FUNCTION_75	IF_48
0x49c4	           0xf9dc0	                                setge al	      3012	ui.c	FUNCTION_75	IF_48
0x49c7	            0x84c0	                             test al, al	      3010	ui.c	FUNCTION_75	IF_48
0x49c9	            0x7407	                            je 0x4004a12	      3010	ui.c	FUNCTION_75	IF_48
0x49cb	    0xc745bc200000	           mov dword [rbp - 0x44], 0x20 	      3019	ui.c	FUNCTION_75	IF_48
0x49d2	    0x488b05000000	            mov rax, qword [0x04004a19] 	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x49d9	        0x488d4838	                   lea rcx, [rax + 0x38]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x49dd	    0x488b05000000	            mov rax, qword [0x04004a24] 	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x49e4	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x49e8	        0x488d75ac	                   lea rsi, [rbp - 0x54]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x49ec	          0x4889c7	                            mov rdi, rax	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x49ef	      0xe800000000	                          call 0x4004a34	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x49f4	            0x85c0	                           test eax, eax	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x49f6	            0x740a	                            je 0x4004a42	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x49f8	    0xc70500000000	               mov dword [0x04004a42], 1	      3024	ui.c	FUNCTION_75	IF_49
0x4a02	          0x8b459c	             mov eax, dword [rbp - 0x64]	      3027	ui.c	FUNCTION_75	IF_50
0x4a05	          0x83e002	                              and eax, 2	      3027	ui.c	FUNCTION_75	IF_50
0x4a08	            0x85c0	                           test eax, eax	      3027	ui.c	FUNCTION_75	IF_50
0x4a0a	            0x7466	                            je 0x4004ab2	      3027	ui.c	FUNCTION_75	IF_50
0x4a0c	    0x8b0500000000	            mov eax, dword [0x04004a52] 	      3027	ui.c	FUNCTION_75	IF_50
0x4a12	            0x85c0	                           test eax, eax	      3027	ui.c	FUNCTION_75	IF_50
0x4a14	            0x755c	                           jne 0x4004ab2	      3027	ui.c	FUNCTION_75	IF_50
0x4a16	      0xe800000000	                          call 0x4004a5b	      3029	ui.c	FUNCTION_75	IF_50	CALL_30
0x4a1b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3030	ui.c	FUNCTION_75	IF_50
0x4a1f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3030	ui.c	FUNCTION_75	IF_50
0x4a23	    0x488905000000	            mov qword [0x04004a6a], rax 	      3030	ui.c	FUNCTION_75	IF_50
0x4a2a	    0x488915000000	            mov qword [0x04004a71], rdx 	      3030	ui.c	FUNCTION_75	IF_50
0x4a31	    0xc70500000000	               mov dword [0x04004a7b], 1	      3031	ui.c	FUNCTION_75	IF_50
0x4a3b	    0xc70500000000	               mov dword [0x04004a85], 1	      3032	ui.c	FUNCTION_75	IF_50
0x4a45	      0xbf6f000000	                           mov edi, 0x6f	      3034	ui.c	FUNCTION_75	IF_50	CALL_31
0x4a4a	      0xe800000000	                          call 0x4004a8f	      3034	ui.c	FUNCTION_75	IF_50	CALL_31
0x4a4f	      0xe800000000	                          call 0x4004a94	      3035	ui.c	FUNCTION_75	IF_50	CALL_32
0x4a54	    0x8b0500000000	            mov eax, dword [0x04004a9a] 	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4a5a	            0x85c0	                           test eax, eax	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4a5c	            0x7414	                            je 0x4004ab2	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4a5e	    0x8b0500000000	            mov eax, dword [0x04004aa4] 	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4a64	            0x85c0	                           test eax, eax	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4a66	            0x750a	                           jne 0x4004ab2	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4a68	    0xc70500000000	               mov dword [0x04004ab2], 1	      3037	ui.c	FUNCTION_75	IF_50	IF_51
0x4a72	    0x488b05000000	            mov rax, qword [0x04004ab9] 	      3040	ui.c	FUNCTION_75
0x4a79	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      3040	ui.c	FUNCTION_75
0x4a7c	          0x895048	             mov dword [rax + 0x48], edx	      3040	ui.c	FUNCTION_75
0x4a7f	    0x488b05000000	            mov rax, qword [0x04004ac6] 	      3041	ui.c	FUNCTION_75
0x4a86	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      3041	ui.c	FUNCTION_75
0x4a8d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4a90	            0x89c7	                            mov edi, eax	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4a92	      0xe800000000	                          call 0x4004ad7	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4a97	            0x85c0	                           test eax, eax	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4a99	            0x751d	                           jne 0x4004af8	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4a9b	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3044	ui.c	FUNCTION_75	IF_52	IF_53
0x4aa0	            0x740a	                            je 0x4004aec	      3044	ui.c	FUNCTION_75	IF_52	IF_53
0x4aa2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3045	ui.c	FUNCTION_75	IF_52	IF_53
0x4aa6	    0xc70001000000	                      mov dword [rax], 1	      3045	ui.c	FUNCTION_75	IF_52	IF_53
0x4aac	    0xc70500000000	               mov dword [0x04004af6], 1	      3046	ui.c	FUNCTION_75	IF_52
0x4ab6	            0xeb11	                           jmp 0x4004b09	      3046	ui.c	FUNCTION_75	IF_52
0x4ab8	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3048	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4abd	            0x740a	                            je 0x4004b09	      3048	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4abf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3049	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4ac3	    0xc70000000000	                      mov dword [rax], 0	      3049	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4ac9	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      3051	ui.c	FUNCTION_75
0x4ad0	    0x488b05000000	            mov rax, qword [0x04004b17] 	      3052	ui.c	FUNCTION_75	IF_55
0x4ad7	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      3052	ui.c	FUNCTION_75	IF_55
0x4adb	            0x7525	                           jne 0x4004b42	      3052	ui.c	FUNCTION_75	IF_55
0x4add	    0x488b05000000	            mov rax, qword [0x04004b24] 	      3052	ui.c	FUNCTION_75	IF_55
0x4ae4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3052	ui.c	FUNCTION_75	IF_55
0x4ae8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3052	ui.c	FUNCTION_75	IF_55
0x4aec	          0x4839c2	                            cmp rdx, rax	      3052	ui.c	FUNCTION_75	IF_55
0x4aef	            0x7511	                           jne 0x4004b42	      3052	ui.c	FUNCTION_75	IF_55
0x4af1	    0x488b05000000	            mov rax, qword [0x04004b38] 	      3053	ui.c	FUNCTION_75	IF_55
0x4af8	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3053	ui.c	FUNCTION_75	IF_55
0x4afb	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3053	ui.c	FUNCTION_75	IF_55
0x4afe	            0x39c2	                            cmp edx, eax	      3053	ui.c	FUNCTION_75	IF_55
0x4b00	            0x7407	                            je 0x4004b49	      3053	ui.c	FUNCTION_75	IF_55
0x4b02	    0x814db4000100	            or dword [rbp - 0x4c], 0x100	      3054	ui.c	FUNCTION_75	IF_55
0x4b09	        0x837dbc2b	           cmp dword [rbp - 0x44], 0x2b 	      3057	ui.c	FUNCTION_75	IF_56
0x4b0d	            0x7509	                           jne 0x4004b58	      3057	ui.c	FUNCTION_75	IF_56
0x4b0f	    0x814db4000400	            or dword [rbp - 0x4c], 0x400	      3058	ui.c	FUNCTION_75	IF_56
0x4b16	            0xeb0d	                           jmp 0x4004b65	      3058	ui.c	FUNCTION_75	IF_56
0x4b18	        0x837dbc20	           cmp dword [rbp - 0x44], 0x20 	      3059	ui.c	FUNCTION_75	ELSE_18	IF_57
0x4b1c	            0x7407	                            je 0x4004b65	      3059	ui.c	FUNCTION_75	ELSE_18	IF_57
0x4b1e	    0x814db4000200	            or dword [rbp - 0x4c], 0x200	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x4b25	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3063	ui.c	FUNCTION_75
0x4b28	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3064	ui.c	FUNCTION_75
0x4b2c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3064	ui.c	FUNCTION_75
0x4b35	            0x7405	                            je 0x4004b7c	      3064	ui.c	FUNCTION_75
0x4b37	      0xe800000000	                          call 0x4004b7c	      3064	ui.c	FUNCTION_75
0x4b3c	        0x4883c468	                           add rsp, 0x68	      3064	ui.c	FUNCTION_75
0x4b40	              0x5b	                                 pop rbx	      3064	ui.c	FUNCTION_75
0x4b41	              0x5d	                                 pop rbp	      3064	ui.c	FUNCTION_75
0x4b42	              0xc3	                                     ret	      3064	ui.c	FUNCTION_75
clip_x11_timestamp_cb	CALL,3:WHILE,0:IF,6:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	102
0x2db3	              0x55	                                push rbp	      2081	ui.c	FUNCTION_63
0x2db4	          0x4889e5	                            mov rbp, rsp	      2081	ui.c	FUNCTION_63
0x2db7	        0x4883ec60	                           sub rsp, 0x60	      2081	ui.c	FUNCTION_63
0x2dbb	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2081	ui.c	FUNCTION_63
0x2dbf	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2081	ui.c	FUNCTION_63
0x2dc3	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2081	ui.c	FUNCTION_63
0x2dc7	        0x48894da0	             mov qword [rbp - 0x60], rcx	      2081	ui.c	FUNCTION_63
0x2dcb	    0x64488b042528	                mov rax, qword fs:[0x28]	      2081	ui.c	FUNCTION_63
0x2dd4	        0x488945f8	                mov qword [rbp - 8], rax	      2081	ui.c	FUNCTION_63
0x2dd8	            0x31c0	                            xor eax, eax	      2081	ui.c	FUNCTION_63
0x2dda	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2085	ui.c	FUNCTION_63
0x2de2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2086	ui.c	FUNCTION_63
0x2de6	        0x488945f0	             mov qword [rbp - 0x10], rax	      2086	ui.c	FUNCTION_63
0x2dea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2090	ui.c	FUNCTION_63	IF_1
0x2dee	            0x8b00	                    mov eax, dword [rax]	      2090	ui.c	FUNCTION_63	IF_1
0x2df0	          0x83f81c	                           cmp eax, 0x1c	      2090	ui.c	FUNCTION_63	IF_1
0x2df3	     0xf8523010000	                           jne 0x4002f5c	      2090	ui.c	FUNCTION_63	IF_1
0x2df9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2090	ui.c	FUNCTION_63	IF_1
0x2dfd	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2090	ui.c	FUNCTION_63	IF_1
0x2e00	            0x85c0	                           test eax, eax	      2090	ui.c	FUNCTION_63	IF_1
0x2e02	     0xf8514010000	                           jne 0x4002f5c	      2090	ui.c	FUNCTION_63	IF_1
0x2e08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2091	ui.c	FUNCTION_63	IF_1
0x2e0c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2091	ui.c	FUNCTION_63	IF_1
0x2e10	    0x488b05000000	            mov rax, qword [0x04002e57] 	      2091	ui.c	FUNCTION_63	IF_1
0x2e17	          0x4839c2	                            cmp rdx, rax	      2091	ui.c	FUNCTION_63	IF_1
0x2e1a	            0x7418	                            je 0x4002e74	      2091	ui.c	FUNCTION_63	IF_1
0x2e1c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2092	ui.c	FUNCTION_63	IF_1
0x2e20	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2092	ui.c	FUNCTION_63	IF_1
0x2e24	    0x488b05000000	            mov rax, qword [0x04002e6b] 	      2092	ui.c	FUNCTION_63	IF_1
0x2e2b	          0x4839c2	                            cmp rdx, rax	      2092	ui.c	FUNCTION_63	IF_1
0x2e2e	     0xf85e8000000	                           jne 0x4002f5c	      2092	ui.c	FUNCTION_63	IF_1
0x2e34	    0x488b0d000000	            mov rcx, qword [0x04002e7b] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e3b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e3f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e43	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e47	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e4f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e53	        0x488d7de8	                   lea rdi, [rbp - 0x18]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e57	              0x57	                                push rdi	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e58	        0x488d7de0	                   lea rdi, [rbp - 0x20]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e5c	              0x57	                                push rdi	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e5d	        0x488d7dd8	                   lea rdi, [rbp - 0x28]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e61	              0x57	                                push rdi	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e62	        0x488d7dcc	                   lea rdi, [rbp - 0x34]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e66	              0x57	                                push rdi	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e67	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e6b	              0x57	                                push rdi	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e6c	              0x51	                                push rcx	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e6d	    0x41b900000000	                              mov r9d, 0	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e73	    0x41b800000000	                              mov r8d, 0	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e79	      0xb900000000	                              mov ecx, 0	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e7e	          0x4889c7	                            mov rdi, rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e81	      0xe800000000	                          call 0x4002ec6	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e86	        0x4883c430	                           add rsp, 0x30	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e8a	            0x85c0	                           test eax, eax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e8c	     0xf858d000000	                           jne 0x4002f5f	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x2e92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2100	ui.c	FUNCTION_63	IF_3
0x2e96	          0x4885c0	                           test rax, rax	      2100	ui.c	FUNCTION_63	IF_3
0x2e99	            0x740c	                            je 0x4002ee7	      2100	ui.c	FUNCTION_63	IF_3
0x2e9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2101	ui.c	FUNCTION_63	CALL_2
0x2e9f	          0x4889c7	                            mov rdi, rax	      2101	ui.c	FUNCTION_63	CALL_2
0x2ea2	      0xe800000000	                          call 0x4002ee7	      2101	ui.c	FUNCTION_63	CALL_2
0x2ea7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2104	ui.c	FUNCTION_63	IF_4
0x2eab	    0x488b05000000	            mov rax, qword [0x04002ef2] 	      2104	ui.c	FUNCTION_63	IF_4
0x2eb2	          0x4839c2	                            cmp rdx, rax	      2104	ui.c	FUNCTION_63	IF_4
0x2eb5	            0x756b	                           jne 0x4002f62	      2104	ui.c	FUNCTION_63	IF_4
0x2eb7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2104	ui.c	FUNCTION_63	IF_4
0x2eba	          0x83f820	                           cmp eax, 0x20	      2104	ui.c	FUNCTION_63	IF_4
0x2ebd	            0x7563	                           jne 0x4002f62	      2104	ui.c	FUNCTION_63	IF_4
0x2ebf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2ec3	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2ec7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2ecb	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2ecf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2ed3	    0x41b900000000	                              mov r9d, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2ed9	    0x41b800000000	                              mov r8d, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2edf	      0xb900000000	                              mov ecx, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2ee4	          0x4889c7	                            mov rdi, rax	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2ee7	      0xe800000000	                          call 0x4002f2c	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2eec	            0x3c01	                               cmp al, 1	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2eee	            0x7533	                           jne 0x4002f63	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x2ef0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x2ef4	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x2ef8	    0x488b05000000	            mov rax, qword [0x04002f3f] 	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x2eff	          0x4839c2	                            cmp rdx, rax	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x2f02	            0x750c	                           jne 0x4002f50	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x2f04	    0xc70500000000	               mov dword [0x04002f4e], 1	      2115	ui.c	FUNCTION_63	IF_5	IF_6
0x2f0e	            0xeb13	                           jmp 0x4002f63	      2115	ui.c	FUNCTION_63	IF_5	IF_6
0x2f10	    0xc70500000000	               mov dword [0x04002f5a], 1	      2117	ui.c	FUNCTION_63	IF_5	ELSE_1
0x2f1a	            0xeb07	                           jmp 0x4002f63	      2117	ui.c	FUNCTION_63	IF_5	ELSE_1
0x2f1c	              0x90	                                     nop	      2093	ui.c	FUNCTION_63	IF_1
0x2f1d	            0xeb04	                           jmp 0x4002f63	      2093	ui.c	FUNCTION_63	IF_1
0x2f1f	              0x90	                                     nop	      2098	ui.c	FUNCTION_63	IF_2
0x2f20	            0xeb01	                           jmp 0x4002f63	      2098	ui.c	FUNCTION_63	IF_2
0x2f22	              0x90	                                     nop	      2105	ui.c	FUNCTION_63	IF_4
0x2f23	        0x488b45f8	                mov rax, qword [rbp - 8]	      2119	ui.c	FUNCTION_63	ELSE_1
0x2f27	    0x644833042528	                xor rax, qword fs:[0x28]	      2119	ui.c	FUNCTION_63	ELSE_1
0x2f30	            0x7405	                            je 0x4002f77	      2119	ui.c	FUNCTION_63	ELSE_1
0x2f32	      0xe800000000	                          call 0x4002f77	      2119	ui.c	FUNCTION_63	ELSE_1
0x2f37	              0xc9	                                   leave	      2119	ui.c	FUNCTION_63	ELSE_1
0x2f38	              0xc3	                                     ret	      2119	ui.c	FUNCTION_63	ELSE_1
add_to_input_buf	CALL,2:WHILE,1:IF,3:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	28
0x26e8	              0x55	                                push rbp	      1697	ui.c	FUNCTION_50
0x26e9	          0x4889e5	                            mov rbp, rsp	      1697	ui.c	FUNCTION_50
0x26ec	        0x48897df8	                mov qword [rbp - 8], rdi	      1697	ui.c	FUNCTION_50
0x26f0	          0x8975f4	              mov dword [rbp - 0xc], esi	      1697	ui.c	FUNCTION_50
0x26f3	    0x8b1500000000	            mov edx, dword [0x04002739] 	      1698	ui.c	FUNCTION_50	IF_1
0x26f9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1698	ui.c	FUNCTION_50	IF_1
0x26fc	             0x1d0	                            add eax, edx	      1698	ui.c	FUNCTION_50	IF_1
0x26fe	      0x3d06100000	                         cmp eax, 0x1006	      1698	ui.c	FUNCTION_50	IF_1
0x2703	            0x7f38	                            jg 0x400277d	      1698	ui.c	FUNCTION_50	IF_1
0x2705	            0xeb27	                           jmp 0x400276e	      1707	ui.c	FUNCTION_50	WHILE_1
0x2707	    0x8b1500000000	            mov edx, dword [0x0400274d] 	      1708	ui.c	FUNCTION_50	WHILE_1
0x270d	          0x8d4201	                      lea eax, [rdx + 1]	      1708	ui.c	FUNCTION_50	WHILE_1
0x2710	    0x890500000000	            mov dword [0x04002756], eax 	      1708	ui.c	FUNCTION_50	WHILE_1
0x2716	        0x488b45f8	                mov rax, qword [rbp - 8]	      1708	ui.c	FUNCTION_50	WHILE_1
0x271a	        0x488d4801	                      lea rcx, [rax + 1]	      1708	ui.c	FUNCTION_50	WHILE_1
0x271e	        0x48894df8	                mov qword [rbp - 8], rcx	      1708	ui.c	FUNCTION_50	WHILE_1
0x2722	           0xfb608	                   movzx ecx, byte [rax]	      1708	ui.c	FUNCTION_50	WHILE_1
0x2725	          0x4863c2	                         movsxd rax, edx	      1708	ui.c	FUNCTION_50	WHILE_1
0x2728	    0x888800000000	                      mov byte [rax], cl	      1708	ui.c	FUNCTION_50	WHILE_1
0x272e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1707	ui.c	FUNCTION_50	WHILE_1
0x2731	          0x8d50ff	                      lea edx, [rax - 1]	      1707	ui.c	FUNCTION_50	WHILE_1
0x2734	          0x8955f4	              mov dword [rbp - 0xc], edx	      1707	ui.c	FUNCTION_50	WHILE_1
0x2737	            0x85c0	                           test eax, eax	      1707	ui.c	FUNCTION_50	WHILE_1
0x2739	            0x75cc	                           jne 0x4002747	      1707	ui.c	FUNCTION_50	WHILE_1
0x273b	            0xeb01	                           jmp 0x400277e	      1707	ui.c	FUNCTION_50	WHILE_1
0x273d	              0x90	                                     nop	      1699	ui.c	FUNCTION_50	IF_1
0x273e	              0x5d	                                 pop rbp	      1709	ui.c	FUNCTION_50
0x273f	              0xc3	                                     ret	      1709	ui.c	FUNCTION_50
yank_cut_buffer0	CALL,12:WHILE,0:IF,6:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	84
0x3d63	              0x55	                                push rbp	      2563	ui.c	FUNCTION_74
0x3d64	          0x4889e5	                            mov rbp, rsp	      2563	ui.c	FUNCTION_74
0x3d67	        0x4883ec50	                           sub rsp, 0x50	      2563	ui.c	FUNCTION_74
0x3d6b	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2563	ui.c	FUNCTION_74
0x3d6f	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2563	ui.c	FUNCTION_74
0x3d73	    0x64488b042528	                mov rax, qword fs:[0x28]	      2563	ui.c	FUNCTION_74
0x3d7c	        0x488945f8	                mov qword [rbp - 8], rax	      2563	ui.c	FUNCTION_74
0x3d80	            0x31c0	                            xor eax, eax	      2563	ui.c	FUNCTION_74
0x3d82	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      2564	ui.c	FUNCTION_74
0x3d89	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      2565	ui.c	FUNCTION_74	CALL_1
0x3d8d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2565	ui.c	FUNCTION_74	CALL_1
0x3d91	      0xba00000000	                              mov edx, 0	      2565	ui.c	FUNCTION_74	CALL_1
0x3d96	          0x4889ce	                            mov rsi, rcx	      2565	ui.c	FUNCTION_74	CALL_1
0x3d99	          0x4889c7	                            mov rdi, rax	      2565	ui.c	FUNCTION_74	CALL_1
0x3d9c	      0xe800000000	                          call 0x4003de1	      2565	ui.c	FUNCTION_74	CALL_1
0x3da1	        0x488945d0	             mov qword [rbp - 0x30], rax	      2565	ui.c	FUNCTION_74	CALL_1
0x3da5	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2567	ui.c	FUNCTION_74	IF_1
0x3da8	            0x85c0	                           test eax, eax	      2567	ui.c	FUNCTION_74	IF_1
0x3daa	     0xf8ef4000000	                           jle 0x4003ee4	      2567	ui.c	FUNCTION_74	IF_1
0x3db0	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2570	ui.c	FUNCTION_74	IF_1
0x3db7	    0x8b0500000000	            mov eax, dword [0x04003dfd] 	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x3dbd	            0x85c0	                           test eax, eax	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x3dbf	     0xf848a000000	                            je 0x4003e8f	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x3dc5	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      2581	ui.c	FUNCTION_74	IF_1	IF_2
0x3dcc	    0x488b15000000	            mov rdx, qword [0x04003e13] 	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x3dd3	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x3dd7	      0xbe00000000	                              mov esi, 0	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x3ddc	          0x4889c7	                            mov rdi, rax	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x3ddf	      0xe800000000	                          call 0x4003e24	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x3de4	          0x83f801	                              cmp eax, 1	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x3de7	            0x7566	                           jne 0x4003e8f	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x3de9	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x3ded	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x3df1	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x3df5	          0x4889ce	                            mov rsi, rcx	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x3df8	          0x4889c7	                            mov rdi, rax	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x3dfb	      0xe800000000	                          call 0x4003e40	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x3e00	        0x488945d8	             mov qword [rbp - 0x28], rax	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x3e04	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2585	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x3e09	            0x742e	                            je 0x4003e79	      2585	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x3e0b	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x3e0e	          0x4863d0	                         movsxd rdx, eax	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x3e11	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x3e15	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x3e19	          0x4889c6	                            mov rsi, rax	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x3e1c	      0xbf00000000	                              mov edi, 0	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x3e21	      0xe800000000	                          call 0x4003e66	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x3e26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x3e2a	          0x4889c7	                            mov rdi, rax	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x3e2d	      0xe800000000	                          call 0x4003e72	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x3e32	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      2589	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x3e39	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x3e3d	      0xba00000000	                              mov edx, 0	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x3e42	      0xbe00000000	                              mov esi, 0	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x3e47	          0x4889c7	                            mov rdi, rax	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x3e4a	      0xe800000000	                          call 0x4003e8f	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x3e4f	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2594	ui.c	FUNCTION_74	IF_1	IF_5
0x3e53	            0x751b	                           jne 0x4003eb0	      2594	ui.c	FUNCTION_74	IF_1	IF_5
0x3e55	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x3e58	          0x4863d0	                         movsxd rdx, eax	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x3e5b	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x3e5f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x3e63	          0x4889c6	                            mov rsi, rax	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x3e66	      0xbf00000000	                              mov edi, 0	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x3e6b	      0xe800000000	                          call 0x4003eb0	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x3e70	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x3e74	          0x4889c7	                            mov rdi, rax	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x3e77	      0xe800000000	                          call 0x4003ebc	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x3e7c	    0x488b05000000	            mov rax, qword [0x04003ec3] 	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x3e83	          0x4885c0	                           test rax, rax	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x3e86	            0x7e1c	                           jle 0x4003ee4	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x3e88	      0xe800000000	                          call 0x4003ecd	      2600	ui.c	FUNCTION_74	IF_1	IF_6	CALL_9
0x3e8d	      0xbf00000000	                              mov edi, 0	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x3e92	      0xe800000000	                          call 0x4003ed7	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x3e97	          0x4889c7	                            mov rdi, rax	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x3e9a	      0xe800000000	                          call 0x4003edf	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x3e9f	      0xe800000000	                          call 0x4003ee4	      2602	ui.c	FUNCTION_74	IF_1	IF_6	CALL_12
0x3ea4	              0x90	                                     nop	      2605	ui.c	FUNCTION_74
0x3ea5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2605	ui.c	FUNCTION_74
0x3ea9	    0x644833042528	                xor rax, qword fs:[0x28]	      2605	ui.c	FUNCTION_74
0x3eb2	            0x7405	                            je 0x4003ef9	      2605	ui.c	FUNCTION_74
0x3eb4	      0xe800000000	                          call 0x4003ef9	      2605	ui.c	FUNCTION_74
0x3eb9	              0xc9	                                   leave	      2605	ui.c	FUNCTION_74
0x3eba	              0xc3	                                     ret	      2605	ui.c	FUNCTION_74
clip_may_redraw_selection	CALL,1:WHILE,0:IF,4:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	58
0x174b	              0x55	                                push rbp	      1040	ui.c	FUNCTION_29
0x174c	          0x4889e5	                            mov rbp, rsp	      1040	ui.c	FUNCTION_29
0x174f	        0x4883ec20	                           sub rsp, 0x20	      1040	ui.c	FUNCTION_29
0x1753	          0x897dec	             mov dword [rbp - 0x14], edi	      1040	ui.c	FUNCTION_29
0x1756	          0x8975e8	             mov dword [rbp - 0x18], esi	      1040	ui.c	FUNCTION_29
0x1759	          0x8955e4	             mov dword [rbp - 0x1c], edx	      1040	ui.c	FUNCTION_29
0x175c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1041	ui.c	FUNCTION_29
0x175f	          0x8945f8	                mov dword [rbp - 8], eax	      1041	ui.c	FUNCTION_29
0x1762	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1042	ui.c	FUNCTION_29
0x1765	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1042	ui.c	FUNCTION_29
0x1768	             0x1d0	                            add eax, edx	      1042	ui.c	FUNCTION_29
0x176a	          0x8945fc	                mov dword [rbp - 4], eax	      1042	ui.c	FUNCTION_29
0x176d	     0xfb705000000	           movzx eax, word [0x040017b4] 	      1044	ui.c	FUNCTION_29	IF_1
0x1774	          0x6685c0	                             test ax, ax	      1044	ui.c	FUNCTION_29	IF_1
0x1777	     0xf8491000000	                            je 0x400184e	      1044	ui.c	FUNCTION_29	IF_1
0x177d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1045	ui.c	FUNCTION_29	IF_1
0x1780	          0x4863d0	                         movsxd rdx, eax	      1045	ui.c	FUNCTION_29	IF_1
0x1783	    0x488b05000000	            mov rax, qword [0x040017ca] 	      1045	ui.c	FUNCTION_29	IF_1
0x178a	          0x4839c2	                            cmp rdx, rax	      1045	ui.c	FUNCTION_29	IF_1
0x178d	            0x7c7f	                            jl 0x400184e	      1045	ui.c	FUNCTION_29	IF_1
0x178f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1046	ui.c	FUNCTION_29	IF_1
0x1792	          0x4863d0	                         movsxd rdx, eax	      1046	ui.c	FUNCTION_29	IF_1
0x1795	    0x488b05000000	            mov rax, qword [0x040017dc] 	      1046	ui.c	FUNCTION_29	IF_1
0x179c	          0x4839c2	                            cmp rdx, rax	      1046	ui.c	FUNCTION_29	IF_1
0x179f	            0x7f6d	                            jg 0x400184e	      1046	ui.c	FUNCTION_29	IF_1
0x17a1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x17a4	          0x4863d0	                         movsxd rdx, eax	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x17a7	    0x488b05000000	            mov rax, qword [0x040017ee] 	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x17ae	          0x4839c2	                            cmp rdx, rax	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x17b1	            0x7514	                           jne 0x4001807	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x17b3	    0x8b0500000000	            mov eax, dword [0x040017f9] 	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x17b9	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x17bc	            0x7e09	                           jle 0x4001807	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x17be	    0x8b0500000000	            mov eax, dword [0x04001804] 	      1049	ui.c	FUNCTION_29	IF_1	IF_2
0x17c4	          0x8945f8	                mov dword [rbp - 8], eax	      1049	ui.c	FUNCTION_29	IF_1	IF_2
0x17c7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x17ca	          0x4863d0	                         movsxd rdx, eax	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x17cd	    0x488b05000000	            mov rax, qword [0x04001814] 	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x17d4	          0x4839c2	                            cmp rdx, rax	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x17d7	            0x7514	                           jne 0x400182d	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x17d9	    0x8b0500000000	            mov eax, dword [0x0400181f] 	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x17df	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x17e2	            0x7d09	                           jge 0x400182d	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x17e4	    0x8b0500000000	            mov eax, dword [0x0400182a] 	      1051	ui.c	FUNCTION_29	IF_1	IF_3
0x17ea	          0x8945fc	                mov dword [rbp - 4], eax	      1051	ui.c	FUNCTION_29	IF_1	IF_3
0x17ed	          0x8b45fc	                mov eax, dword [rbp - 4]	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x17f0	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x17f3	            0x7e19	                           jle 0x400184e	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x17f5	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x17f8	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x17fb	          0x8b75f8	                mov esi, dword [rbp - 8]	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x17fe	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x1801	    0x41b800000000	                              mov r8d, 0	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x1807	            0x89c7	                            mov edi, eax	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x1809	      0xe85d010000	               call sym.clip_invert_area	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x180e	              0x90	                                     nop	      1055	ui.c	FUNCTION_29
0x180f	              0xc9	                                   leave	      1055	ui.c	FUNCTION_29
0x1810	              0xc3	                                     ret	      1055	ui.c	FUNCTION_29
mouse_comp_pos	CALL,9:WHILE,1:IF,9:ELSE,2:DO,0:SWITCH,0:functions,0:FOR,0	164
0x4b43	              0x55	                                push rbp	      3077	ui.c	FUNCTION_76
0x4b44	          0x4889e5	                            mov rbp, rsp	      3077	ui.c	FUNCTION_76
0x4b47	              0x53	                                push rbx	      3077	ui.c	FUNCTION_76
0x4b48	        0x4883ec58	                           sub rsp, 0x58	      3077	ui.c	FUNCTION_76
0x4b4c	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3077	ui.c	FUNCTION_76
0x4b50	        0x488975b0	             mov qword [rbp - 0x50], rsi	      3077	ui.c	FUNCTION_76
0x4b54	        0x488955a8	             mov qword [rbp - 0x58], rdx	      3077	ui.c	FUNCTION_76
0x4b58	        0x48894da0	             mov qword [rbp - 0x60], rcx	      3077	ui.c	FUNCTION_76
0x4b5c	    0x64488b042528	                mov rax, qword fs:[0x28]	      3077	ui.c	FUNCTION_76
0x4b65	        0x488945e8	             mov qword [rbp - 0x18], rax	      3077	ui.c	FUNCTION_76
0x4b69	            0x31c0	                            xor eax, eax	      3077	ui.c	FUNCTION_76
0x4b6b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3078	ui.c	FUNCTION_76
0x4b6f	            0x8b00	                    mov eax, dword [rax]	      3078	ui.c	FUNCTION_76
0x4b71	          0x8945cc	             mov dword [rbp - 0x34], eax	      3078	ui.c	FUNCTION_76
0x4b74	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3079	ui.c	FUNCTION_76
0x4b78	            0x8b00	                    mov eax, dword [rax]	      3079	ui.c	FUNCTION_76
0x4b7a	          0x8945d0	             mov dword [rbp - 0x30], eax	      3079	ui.c	FUNCTION_76
0x4b7d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      3081	ui.c	FUNCTION_76
0x4b84	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3086	ui.c	FUNCTION_76	IF_1
0x4b88	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      3086	ui.c	FUNCTION_76	IF_1
0x4b8e	            0x85c0	                           test eax, eax	      3086	ui.c	FUNCTION_76	IF_1
0x4b90	            0x7413	                            je 0x4004be5	      3086	ui.c	FUNCTION_76	IF_1
0x4b92	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3087	ui.c	FUNCTION_76	IF_1
0x4b96	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      3087	ui.c	FUNCTION_76	IF_1
0x4b9c	          0x83e801	                              sub eax, 1	      3087	ui.c	FUNCTION_76	IF_1
0x4b9f	          0x2b45cc	             sub eax, dword [rbp - 0x34]	      3087	ui.c	FUNCTION_76	IF_1
0x4ba2	          0x8945cc	             mov dword [rbp - 0x34], eax	      3087	ui.c	FUNCTION_76	IF_1
0x4ba5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3090	ui.c	FUNCTION_76
0x4ba9	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3090	ui.c	FUNCTION_76
0x4bad	        0x488945e0	             mov qword [rbp - 0x20], rax	      3090	ui.c	FUNCTION_76
0x4bb1	      0xe905010000	                           jmp 0x4004cfb	      3092	ui.c	FUNCTION_76	WHILE_1
0x4bb6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x4bba	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x4bc0	            0x85c0	                           test eax, eax	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x4bc2	            0x747d	                            je 0x4004c81	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x4bc4	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4bc8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4bcc	    0x41b900000000	                              mov r9d, 0	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4bd2	    0x41b801000000	                              mov r8d, 1	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4bd8	      0xb900000000	                              mov ecx, 0	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4bdd	      0xba00000000	                              mov edx, 0	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4be2	          0x4889c7	                            mov rdi, rax	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4be5	      0xe800000000	                          call 0x4004c2a	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4bea	            0x85c0	                           test eax, eax	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4bec	            0x7553	                           jne 0x4004c81	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4bee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4bf2	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4bf6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4bfa	          0x4839c2	                            cmp rdx, rax	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4bfd	            0x750f	                           jne 0x4004c4e	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4bff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4c03	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4c09	          0x2945d0	             sub dword [rbp - 0x30], eax	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4c0c	            0xeb16	                           jmp 0x4004c64	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4c0e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4c12	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4c16	          0x4889d6	                            mov rsi, rdx	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4c19	          0x4889c7	                            mov rdi, rax	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4c1c	      0xe800000000	                          call 0x4004c61	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4c21	          0x2945d0	             sub dword [rbp - 0x30], eax	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4c24	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4c28	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4c2c	      0xba01000000	                              mov edx, 1	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4c31	          0x4889ce	                            mov rsi, rcx	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4c34	          0x4889c7	                            mov rdi, rax	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4c37	      0xe800000000	                          call 0x4004c7c	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4c3c	          0x8945d8	             mov dword [rbp - 0x28], eax	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4c3f	            0xeb1b	                           jmp 0x4004c9c	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4c41	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4c45	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4c49	      0xba01000000	                              mov edx, 1	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4c4e	          0x4889ce	                            mov rsi, rcx	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4c51	          0x4889c7	                            mov rdi, rax	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4c54	      0xe800000000	                          call 0x4004c99	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4c59	          0x8945d8	             mov dword [rbp - 0x28], eax	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4c5c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4c5f	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4c62	            0x7f63	                            jg 0x4004d07	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4c64	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4c68	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4c6c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4c70	    0x41b900000000	                              mov r9d, 0	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4c76	    0x41b801000000	                              mov r8d, 1	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4c7c	          0x4889d1	                            mov rcx, rdx	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4c7f	      0xba00000000	                              mov edx, 0	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4c84	          0x4889c7	                            mov rdi, rax	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4c87	      0xe800000000	                          call 0x4004ccc	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4c8c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4c90	        0x488b4008	                mov rax, qword [rax + 8]	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4c94	          0x488b10	                    mov rdx, qword [rax]	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4c97	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4c9b	          0x4839c2	                            cmp rdx, rax	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4c9e	            0x7509	                           jne 0x4004ce9	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4ca0	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      3118	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4ca7	            0xeb1f	                           jmp 0x4004d08	      3119	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4ca9	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3121	ui.c	FUNCTION_76	WHILE_1
0x4cac	          0x2945d0	             sub dword [rbp - 0x30], eax	      3121	ui.c	FUNCTION_76	WHILE_1
0x4caf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3122	ui.c	FUNCTION_76	WHILE_1
0x4cb3	        0x4883c001	                              add rax, 1	      3122	ui.c	FUNCTION_76	WHILE_1
0x4cb7	        0x488945e0	             mov qword [rbp - 0x20], rax	      3122	ui.c	FUNCTION_76	WHILE_1
0x4cbb	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3092	ui.c	FUNCTION_76	WHILE_1
0x4cbf	     0xf8ff1feffff	                            jg 0x4004bf6	      3092	ui.c	FUNCTION_76	WHILE_1
0x4cc5	            0xeb01	                           jmp 0x4004d08	      3092	ui.c	FUNCTION_76	WHILE_1
0x4cc7	              0x90	                                     nop	      3112	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4cc8	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3125	ui.c	FUNCTION_76	IF_6
0x4ccc	            0x7550	                           jne 0x4004d5e	      3125	ui.c	FUNCTION_76	IF_6
0x4cce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4cd2	          0x4889c7	                            mov rdi, rax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4cd5	      0xe800000000	                          call 0x4004d1a	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4cda	            0x89c3	                            mov ebx, eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4cdc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4ce0	          0x4889c7	                            mov rdi, rax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4ce3	      0xe800000000	                          call 0x4004d28	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4ce8	            0x29c3	                            sub ebx, eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4cea	            0x89d8	                            mov eax, ebx	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4cec	          0x8945dc	             mov dword [rbp - 0x24], eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4cef	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3129	ui.c	FUNCTION_76	IF_6	IF_7
0x4cf2	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      3129	ui.c	FUNCTION_76	IF_6	IF_7
0x4cf5	            0x7d06	                           jge 0x4004d3d	      3129	ui.c	FUNCTION_76	IF_6	IF_7
0x4cf7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3130	ui.c	FUNCTION_76	IF_6	IF_7
0x4cfa	          0x8945cc	             mov dword [rbp - 0x34], eax	      3130	ui.c	FUNCTION_76	IF_6	IF_7
0x4cfd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3131	ui.c	FUNCTION_76	IF_6
0x4d01	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      3131	ui.c	FUNCTION_76	IF_6
0x4d07	          0x2b45dc	             sub eax, dword [rbp - 0x24]	      3131	ui.c	FUNCTION_76	IF_6
0x4d0a	         0xfaf45d0	            imul eax, dword [rbp - 0x30]	      3131	ui.c	FUNCTION_76	IF_6
0x4d0e	           0x145cc	             add dword [rbp - 0x34], eax	      3131	ui.c	FUNCTION_76	IF_6
0x4d11	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3133	ui.c	FUNCTION_76	IF_6
0x4d15	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      3133	ui.c	FUNCTION_76	IF_6
0x4d1b	           0x145cc	             add dword [rbp - 0x34], eax	      3133	ui.c	FUNCTION_76	IF_6
0x4d1e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3136	ui.c	FUNCTION_76	IF_8
0x4d22	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      3136	ui.c	FUNCTION_76	IF_8
0x4d28	            0x85c0	                           test eax, eax	      3136	ui.c	FUNCTION_76	IF_8
0x4d2a	            0x750d	                           jne 0x4004d79	      3136	ui.c	FUNCTION_76	IF_8
0x4d2c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3137	ui.c	FUNCTION_76	IF_8
0x4d30	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      3137	ui.c	FUNCTION_76	IF_8
0x4d36	           0x145cc	             add dword [rbp - 0x34], eax	      3137	ui.c	FUNCTION_76	IF_8
0x4d39	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3140	ui.c	FUNCTION_76	CALL_8
0x4d3d	          0x4889c7	                            mov rdi, rax	      3140	ui.c	FUNCTION_76	CALL_8
0x4d40	      0xe800000000	                          call 0x4004d85	      3140	ui.c	FUNCTION_76	CALL_8
0x4d45	          0x2945cc	             sub dword [rbp - 0x34], eax	      3140	ui.c	FUNCTION_76	CALL_8
0x4d48	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      3141	ui.c	FUNCTION_76	IF_9
0x4d4c	            0x7913	                           jns 0x4004da1	      3141	ui.c	FUNCTION_76	IF_9
0x4d4e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x4d52	          0x4889c7	                            mov rdi, rax	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x4d55	      0xe800000000	                          call 0x4004d9a	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x4d5a	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      3146	ui.c	FUNCTION_76	IF_9
0x4d61	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3149	ui.c	FUNCTION_76
0x4d65	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3149	ui.c	FUNCTION_76
0x4d68	            0x8910	                    mov dword [rax], edx	      3149	ui.c	FUNCTION_76
0x4d6a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3150	ui.c	FUNCTION_76
0x4d6e	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      3150	ui.c	FUNCTION_76
0x4d71	            0x8910	                    mov dword [rax], edx	      3150	ui.c	FUNCTION_76
0x4d73	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3151	ui.c	FUNCTION_76
0x4d77	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3151	ui.c	FUNCTION_76
0x4d7b	          0x488910	                    mov qword [rax], rdx	      3151	ui.c	FUNCTION_76
0x4d7e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3152	ui.c	FUNCTION_76
0x4d81	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3153	ui.c	FUNCTION_76
0x4d85	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3153	ui.c	FUNCTION_76
0x4d8e	            0x7405	                            je 0x4004dd5	      3153	ui.c	FUNCTION_76
0x4d90	      0xe800000000	                          call 0x4004dd5	      3153	ui.c	FUNCTION_76
0x4d95	        0x4883c458	                           add rsp, 0x58	      3153	ui.c	FUNCTION_76
0x4d99	              0x5b	                                 pop rbx	      3153	ui.c	FUNCTION_76
0x4d9a	              0x5d	                                 pop rbp	      3153	ui.c	FUNCTION_76
0x4d9b	              0xc3	                                     ret	      3153	ui.c	FUNCTION_76
clip_gen_lose_selection	CALL,3:WHILE,0:IF,1:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	17
0x24b8	              0x55	                                push rbp	      1507	ui.c	FUNCTION_40
0x24b9	          0x4889e5	                            mov rbp, rsp	      1507	ui.c	FUNCTION_40
0x24bc	        0x4883ec10	                           sub rsp, 0x10	      1507	ui.c	FUNCTION_40
0x24c0	        0x48897df8	                mov qword [rbp - 8], rdi	      1507	ui.c	FUNCTION_40
0x24c4	    0x8b0500000000	            mov eax, dword [0x0400250a] 	      1510	ui.c	FUNCTION_40	IF_1
0x24ca	            0x85c0	                           test eax, eax	      1510	ui.c	FUNCTION_40	IF_1
0x24cc	            0x740e	                            je 0x400251c	      1510	ui.c	FUNCTION_40	IF_1
0x24ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      1511	ui.c	FUNCTION_40	CALL_1
0x24d2	          0x4889c7	                            mov rdi, rax	      1511	ui.c	FUNCTION_40	CALL_1
0x24d5	      0xe800000000	                          call 0x400251a	      1511	ui.c	FUNCTION_40	CALL_1
0x24da	            0xeb0c	                           jmp 0x4002528	      1518	ui.c	FUNCTION_40
0x24dc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1514	ui.c	FUNCTION_40	CALL_2
0x24e0	          0x4889c7	                            mov rdi, rax	      1514	ui.c	FUNCTION_40	CALL_2
0x24e3	      0xe800000000	                          call 0x4002528	      1514	ui.c	FUNCTION_40	CALL_2
0x24e8	              0x90	                                     nop	      1518	ui.c	FUNCTION_40
0x24e9	              0xc9	                                   leave	      1518	ui.c	FUNCTION_40
0x24ea	              0xc3	                                     ret	      1518	ui.c	FUNCTION_40
x11_setup_selection	CALL,1:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	14
0x2f39	              0x55	                                push rbp	      2123	ui.c	ELSE_1	FUNCTION_64
0x2f3a	          0x4889e5	                            mov rbp, rsp	      2123	ui.c	ELSE_1	FUNCTION_64
0x2f3d	        0x4883ec10	                           sub rsp, 0x10	      2123	ui.c	ELSE_1	FUNCTION_64
0x2f41	        0x48897df8	                mov qword [rbp - 8], rdi	      2123	ui.c	ELSE_1	FUNCTION_64
0x2f45	        0x488b45f8	                mov rax, qword [rbp - 8]	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x2f49	    0x41b800000000	                              mov r8d, 0	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x2f4f	      0xb900000000	                              mov ecx, 0	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x2f54	      0xba00000000	                              mov edx, 0	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x2f59	      0xbe00004000	                       mov esi, 0x400000	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x2f5e	          0x4889c7	                            mov rdi, rax	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x2f61	      0xe800000000	                          call 0x4002fa6	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x2f66	              0x90	                                     nop	      2126	ui.c	ELSE_1	FUNCTION_64
0x2f67	              0xc9	                                   leave	      2126	ui.c	ELSE_1	FUNCTION_64
0x2f68	              0xc3	                                     ret	      2126	ui.c	ELSE_1	FUNCTION_64
ui_breakcheck	CALL,1:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	7
0x694	              0x55	                                push rbp	       395	ui.c	FUNCTION_12
0x695	          0x4889e5	                            mov rbp, rsp	       395	ui.c	FUNCTION_12
0x698	      0xbf00000000	                              mov edi, 0	       396	ui.c	FUNCTION_12	CALL_1
0x69d	      0xe800000000	                          call 0x40006e2	       396	ui.c	FUNCTION_12	CALL_1
0x6a2	              0x90	                                     nop	       397	ui.c	FUNCTION_12
0x6a3	              0x5d	                                 pop rbp	       397	ui.c	FUNCTION_12
0x6a4	              0xc3	                                     ret	       397	ui.c	FUNCTION_12
clip_isautosel_plus	CALL,1:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	16
0xcf2	              0x55	                                push rbp	       702	ui.c	FUNCTION_24
0xcf3	          0x4889e5	                            mov rbp, rsp	       702	ui.c	FUNCTION_24
0xcf6	    0x8b0500000000	            mov eax, dword [0x04000d3c] 	       705	ui.c	FUNCTION_24	CALL_1
0xcfc	            0x85c0	                           test eax, eax	       705	ui.c	FUNCTION_24	CALL_1
0xcfe	            0x741f	                            je 0x4000d5f	       705	ui.c	FUNCTION_24	CALL_1
0xd00	    0x488b05000000	            mov rax, qword [0x04000d47] 	       705	ui.c	FUNCTION_24	CALL_1
0xd07	      0xbe50000000	                           mov esi, 0x50	       705	ui.c	FUNCTION_24	CALL_1
0xd0c	          0x4889c7	                            mov rdi, rax	       705	ui.c	FUNCTION_24	CALL_1
0xd0f	      0xe800000000	                          call 0x4000d54	       705	ui.c	FUNCTION_24	CALL_1
0xd14	          0x4885c0	                           test rax, rax	       705	ui.c	FUNCTION_24	CALL_1
0xd17	           0xf95c0	                                setne al	       705	ui.c	FUNCTION_24	CALL_1
0xd1a	           0xfb6c0	                           movzx eax, al	       705	ui.c	FUNCTION_24	CALL_1
0xd1d	            0xeb06	                           jmp 0x4000d65	       703	ui.c	FUNCTION_24
0xd1f	    0x8b0500000000	            mov eax, dword [0x04000d65] 	       705	ui.c	FUNCTION_24	CALL_1
0xd25	              0x5d	                                 pop rbp	       708	ui.c	FUNCTION_24
0xd26	              0xc3	                                     ret	       708	ui.c	FUNCTION_24
vim_is_input_buf_empty	CALL,0:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	8
0x25dd	              0x55	                                push rbp	      1626	ui.c	FUNCTION_45
0x25de	          0x4889e5	                            mov rbp, rsp	      1626	ui.c	FUNCTION_45
0x25e1	    0x8b0500000000	            mov eax, dword [0x04002627] 	      1627	ui.c	FUNCTION_45
0x25e7	            0x85c0	                           test eax, eax	      1627	ui.c	FUNCTION_45
0x25e9	           0xf94c0	                                 sete al	      1627	ui.c	FUNCTION_45
0x25ec	           0xfb6c0	                           movzx eax, al	      1627	ui.c	FUNCTION_45
0x25ef	              0x5d	                                 pop rbp	      1628	ui.c	FUNCTION_45
0x25f0	              0xc3	                                     ret	      1628	ui.c	FUNCTION_45
clip_x11_notify_cb	CALL,0:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	8
0x3c19	              0x55	                                push rbp	      2508	ui.c	FUNCTION_70
0x3c1a	          0x4889e5	                            mov rbp, rsp	      2508	ui.c	FUNCTION_70
0x3c1d	        0x48897df8	                mov qword [rbp - 8], rdi	      2508	ui.c	FUNCTION_70
0x3c21	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2508	ui.c	FUNCTION_70
0x3c25	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2508	ui.c	FUNCTION_70
0x3c29	              0x90	                                     nop	      2510	ui.c	FUNCTION_70
0x3c2a	              0x5d	                                 pop rbp	      2510	ui.c	FUNCTION_70
0x3c2b	              0xc3	                                     ret	      2510	ui.c	FUNCTION_70
clip_compare_pos	CALL,0:WHILE,0:IF,4:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	29
0xe41	              0x55	                                push rbp	       772	ui.c	FUNCTION_26
0xe42	          0x4889e5	                            mov rbp, rsp	       772	ui.c	FUNCTION_26
0xe45	          0x897dfc	                mov dword [rbp - 4], edi	       772	ui.c	FUNCTION_26
0xe48	          0x8975f8	                mov dword [rbp - 8], esi	       772	ui.c	FUNCTION_26
0xe4b	          0x8955f4	              mov dword [rbp - 0xc], edx	       772	ui.c	FUNCTION_26
0xe4e	          0x894df0	             mov dword [rbp - 0x10], ecx	       772	ui.c	FUNCTION_26
0xe51	          0x8b45fc	                mov eax, dword [rbp - 4]	       773	ui.c	FUNCTION_26	IF_1
0xe54	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       773	ui.c	FUNCTION_26	IF_1
0xe57	            0x7e07	                           jle 0x4000ea0	       773	ui.c	FUNCTION_26	IF_1
0xe59	      0xb801000000	                              mov eax, 1	       773	ui.c	FUNCTION_26	IF_1
0xe5e	            0xeb32	                           jmp 0x4000ed2	       773	ui.c	FUNCTION_26	IF_1
0xe60	          0x8b45fc	                mov eax, dword [rbp - 4]	       774	ui.c	FUNCTION_26	IF_2
0xe63	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       774	ui.c	FUNCTION_26	IF_2
0xe66	            0x7d07	                           jge 0x4000eaf	       774	ui.c	FUNCTION_26	IF_2
0xe68	      0xb8ffffffff	                     mov eax, 0xffffffff	       774	ui.c	FUNCTION_26	IF_2
0xe6d	            0xeb23	                           jmp 0x4000ed2	       774	ui.c	FUNCTION_26	IF_2
0xe6f	          0x8b45f8	                mov eax, dword [rbp - 8]	       775	ui.c	FUNCTION_26	IF_3
0xe72	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       775	ui.c	FUNCTION_26	IF_3
0xe75	            0x7e07	                           jle 0x4000ebe	       775	ui.c	FUNCTION_26	IF_3
0xe77	      0xb801000000	                              mov eax, 1	       775	ui.c	FUNCTION_26	IF_3
0xe7c	            0xeb14	                           jmp 0x4000ed2	       775	ui.c	FUNCTION_26	IF_3
0xe7e	          0x8b45f8	                mov eax, dword [rbp - 8]	       776	ui.c	FUNCTION_26	IF_4
0xe81	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       776	ui.c	FUNCTION_26	IF_4
0xe84	            0x7d07	                           jge 0x4000ecd	       776	ui.c	FUNCTION_26	IF_4
0xe86	      0xb8ffffffff	                     mov eax, 0xffffffff	       776	ui.c	FUNCTION_26	IF_4
0xe8b	            0xeb05	                           jmp 0x4000ed2	       776	ui.c	FUNCTION_26	IF_4
0xe8d	      0xb800000000	                              mov eax, 0	       777	ui.c	FUNCTION_26
0xe92	              0x5d	                                 pop rbp	       778	ui.c	FUNCTION_26
0xe93	              0xc3	                                     ret	       778	ui.c	FUNCTION_26
add_to_input_buf_csi	CALL,2:WHILE,0:IF,1:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,1	41
0x2740	              0x55	                                push rbp	      1716	ui.c	FUNCTION_51
0x2741	          0x4889e5	                            mov rbp, rsp	      1716	ui.c	FUNCTION_51
0x2744	        0x4883ec30	                           sub rsp, 0x30	      1716	ui.c	FUNCTION_51
0x2748	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1716	ui.c	FUNCTION_51
0x274c	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1716	ui.c	FUNCTION_51
0x274f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1716	ui.c	FUNCTION_51
0x2758	        0x488945f8	                mov qword [rbp - 8], rax	      1716	ui.c	FUNCTION_51
0x275c	            0x31c0	                            xor eax, eax	      1716	ui.c	FUNCTION_51
0x275e	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1720	ui.c	FUNCTION_51	FOR_1
0x2765	            0xeb4b	                           jmp 0x40027f2	      1720	ui.c	FUNCTION_51	FOR_1
0x2767	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x276a	          0x4863d0	                         movsxd rdx, eax	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x276d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x2771	          0x4801d0	                            add rax, rdx	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x2774	      0xbe01000000	                              mov esi, 1	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x2779	          0x4889c7	                            mov rdi, rax	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x277c	      0xe800000000	                          call 0x40027c1	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x2781	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x2784	          0x4863d0	                         movsxd rdx, eax	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x2787	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x278b	          0x4801d0	                            add rax, rdx	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x278e	           0xfb600	                   movzx eax, byte [rax]	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x2791	            0x3c9b	                            cmp al, 0x9b	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x2793	            0x7519	                           jne 0x40027ee	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x2795	        0xc645f0fd	            mov byte [rbp - 0x10], 0xfd 	      1726	ui.c	FUNCTION_51	FOR_1	IF_1
0x2799	        0xc645f151	              mov byte [rbp - 0xf], 0x51	      1727	ui.c	FUNCTION_51	FOR_1	IF_1
0x279d	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x27a1	      0xbe02000000	                              mov esi, 2	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x27a6	          0x4889c7	                            mov rdi, rax	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x27a9	      0xe800000000	                          call 0x40027ee	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x27ae	        0x8345ec01	               add dword [rbp - 0x14], 1	      1720	ui.c	FUNCTION_51	FOR_1
0x27b2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1720	ui.c	FUNCTION_51	FOR_1
0x27b5	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1720	ui.c	FUNCTION_51	FOR_1
0x27b8	            0x7cad	                            jl 0x40027a7	      1720	ui.c	FUNCTION_51	FOR_1
0x27ba	              0x90	                                     nop	      1731	ui.c	FUNCTION_51
0x27bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1731	ui.c	FUNCTION_51
0x27bf	    0x644833042528	                xor rax, qword fs:[0x28]	      1731	ui.c	FUNCTION_51
0x27c8	            0x7405	                            je 0x400280f	      1731	ui.c	FUNCTION_51
0x27ca	      0xe800000000	                          call 0x400280f	      1731	ui.c	FUNCTION_51
0x27cf	              0xc9	                                   leave	      1731	ui.c	FUNCTION_51
0x27d0	              0xc3	                                     ret	      1731	ui.c	FUNCTION_51
clip_x11_lose_selection	CALL,3:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	20
0x3bd8	              0x55	                                push rbp	      2501	ui.c	FUNCTION_69
0x3bd9	          0x4889e5	                            mov rbp, rsp	      2501	ui.c	FUNCTION_69
0x3bdc	        0x4883ec10	                           sub rsp, 0x10	      2501	ui.c	FUNCTION_69
0x3be0	        0x48897df8	                mov qword [rbp - 8], rdi	      2501	ui.c	FUNCTION_69
0x3be4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2501	ui.c	FUNCTION_69
0x3be8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2502	ui.c	FUNCTION_69	CALL_1
0x3bec	          0x4889c7	                            mov rdi, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x3bef	      0xe800000000	                          call 0x4003c34	      2502	ui.c	FUNCTION_69	CALL_1
0x3bf4	          0x4889c7	                            mov rdi, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x3bf7	      0xe800000000	                          call 0x4003c3c	      2502	ui.c	FUNCTION_69	CALL_1
0x3bfc	          0x4889c2	                            mov rdx, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x3bff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2502	ui.c	FUNCTION_69	CALL_1
0x3c03	        0x488b4850	            mov rcx, qword [rax + 0x50] 	      2502	ui.c	FUNCTION_69	CALL_1
0x3c07	        0x488b45f8	                mov rax, qword [rbp - 8]	      2502	ui.c	FUNCTION_69	CALL_1
0x3c0b	          0x4889ce	                            mov rsi, rcx	      2502	ui.c	FUNCTION_69	CALL_1
0x3c0e	          0x4889c7	                            mov rdi, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x3c11	      0xe800000000	                          call 0x4003c56	      2502	ui.c	FUNCTION_69	CALL_1
0x3c16	              0x90	                                     nop	      2504	ui.c	FUNCTION_69
0x3c17	              0xc9	                                   leave	      2504	ui.c	FUNCTION_69
0x3c18	              0xc3	                                     ret	      2504	ui.c	FUNCTION_69
set_input_buf	CALL,3:WHILE,0:IF,2:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	33
0x2677	              0x55	                                push rbp	      1675	ui.c	FUNCTION_49
0x2678	          0x4889e5	                            mov rbp, rsp	      1675	ui.c	FUNCTION_49
0x267b	        0x4883ec20	                           sub rsp, 0x20	      1675	ui.c	FUNCTION_49
0x267f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1675	ui.c	FUNCTION_49
0x2683	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1676	ui.c	FUNCTION_49
0x2687	        0x488945f8	                mov qword [rbp - 8], rax	      1676	ui.c	FUNCTION_49
0x268b	      0x48837df800	                  cmp qword [rbp - 8], 0	      1678	ui.c	FUNCTION_49	IF_1
0x2690	            0x7453	                            je 0x4002725	      1678	ui.c	FUNCTION_49	IF_1
0x2692	        0x488b45f8	                mov rax, qword [rbp - 8]	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x2696	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x269a	          0x4885c0	                           test rax, rax	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x269d	            0x743a	                            je 0x4002719	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x269f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x26a3	            0x8b00	                    mov eax, dword [rax]	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x26a5	          0x4863d0	                         movsxd rdx, eax	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x26a8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x26ac	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x26b0	          0x4889c6	                            mov rsi, rax	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x26b3	      0xbf00000000	                              mov edi, 0	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x26b8	      0xe800000000	                          call 0x40026fd	      1682	ui.c	FUNCTION_49	IF_1	IF_2	CALL_1
0x26bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x26c1	            0x8b00	                    mov eax, dword [rax]	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x26c3	    0x890500000000	            mov dword [0x04002709], eax 	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x26c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x26cd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x26d1	          0x4889c7	                            mov rdi, rax	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x26d4	      0xe800000000	                          call 0x4002719	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x26d9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x26dd	          0x4889c7	                            mov rdi, rax	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x26e0	      0xe800000000	                          call 0x4002725	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x26e5	              0x90	                                     nop	      1688	ui.c	FUNCTION_49
0x26e6	              0xc9	                                   leave	      1688	ui.c	FUNCTION_49
0x26e7	              0xc3	                                     ret	      1688	ui.c	FUNCTION_49
x11_setup_atoms	CALL,8:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	56
0x2cb1	              0x55	                                push rbp	      2048	ui.c	FUNCTION_62
0x2cb2	          0x4889e5	                            mov rbp, rsp	      2048	ui.c	FUNCTION_62
0x2cb5	        0x4883ec10	                           sub rsp, 0x10	      2048	ui.c	FUNCTION_62
0x2cb9	        0x48897df8	                mov qword [rbp - 8], rdi	      2048	ui.c	FUNCTION_62
0x2cbd	        0x488b45f8	                mov rax, qword [rbp - 8]	      2049	ui.c	FUNCTION_62	CALL_1
0x2cc1	      0xba00000000	                              mov edx, 0	      2049	ui.c	FUNCTION_62	CALL_1
0x2cc6	      0xbe00000000	                              mov esi, 0	      2049	ui.c	FUNCTION_62	CALL_1
0x2ccb	          0x4889c7	                            mov rdi, rax	      2049	ui.c	FUNCTION_62	CALL_1
0x2cce	      0xe800000000	                          call 0x4002d13	      2049	ui.c	FUNCTION_62	CALL_1
0x2cd3	    0x488905000000	            mov qword [0x04002d1a], rax 	      2049	ui.c	FUNCTION_62	CALL_1
0x2cda	        0x488b45f8	                mov rax, qword [rbp - 8]	      2051	ui.c	FUNCTION_62	CALL_2
0x2cde	      0xba00000000	                              mov edx, 0	      2051	ui.c	FUNCTION_62	CALL_2
0x2ce3	      0xbe00000000	                              mov esi, 0	      2051	ui.c	FUNCTION_62	CALL_2
0x2ce8	          0x4889c7	                            mov rdi, rax	      2051	ui.c	FUNCTION_62	CALL_2
0x2ceb	      0xe800000000	                          call 0x4002d30	      2051	ui.c	FUNCTION_62	CALL_2
0x2cf0	    0x488905000000	            mov qword [0x04002d37], rax 	      2051	ui.c	FUNCTION_62	CALL_2
0x2cf7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2052	ui.c	FUNCTION_62	CALL_3
0x2cfb	      0xba00000000	                              mov edx, 0	      2052	ui.c	FUNCTION_62	CALL_3
0x2d00	      0xbe00000000	                              mov esi, 0	      2052	ui.c	FUNCTION_62	CALL_3
0x2d05	          0x4889c7	                            mov rdi, rax	      2052	ui.c	FUNCTION_62	CALL_3
0x2d08	      0xe800000000	                          call 0x4002d4d	      2052	ui.c	FUNCTION_62	CALL_3
0x2d0d	    0x488905000000	            mov qword [0x04002d54], rax 	      2052	ui.c	FUNCTION_62	CALL_3
0x2d14	        0x488b45f8	                mov rax, qword [rbp - 8]	      2054	ui.c	FUNCTION_62	CALL_4
0x2d18	      0xba00000000	                              mov edx, 0	      2054	ui.c	FUNCTION_62	CALL_4
0x2d1d	      0xbe00000000	                              mov esi, 0	      2054	ui.c	FUNCTION_62	CALL_4
0x2d22	          0x4889c7	                            mov rdi, rax	      2054	ui.c	FUNCTION_62	CALL_4
0x2d25	      0xe800000000	                          call 0x4002d6a	      2054	ui.c	FUNCTION_62	CALL_4
0x2d2a	    0x488905000000	            mov qword [0x04002d71], rax 	      2054	ui.c	FUNCTION_62	CALL_4
0x2d31	        0x488b45f8	                mov rax, qword [rbp - 8]	      2055	ui.c	FUNCTION_62	CALL_5
0x2d35	      0xba00000000	                              mov edx, 0	      2055	ui.c	FUNCTION_62	CALL_5
0x2d3a	      0xbe00000000	                              mov esi, 0	      2055	ui.c	FUNCTION_62	CALL_5
0x2d3f	          0x4889c7	                            mov rdi, rax	      2055	ui.c	FUNCTION_62	CALL_5
0x2d42	      0xe800000000	                          call 0x4002d87	      2055	ui.c	FUNCTION_62	CALL_5
0x2d47	    0x488905000000	            mov qword [0x04002d8e], rax 	      2055	ui.c	FUNCTION_62	CALL_5
0x2d4e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2056	ui.c	FUNCTION_62	CALL_6
0x2d52	      0xba00000000	                              mov edx, 0	      2056	ui.c	FUNCTION_62	CALL_6
0x2d57	      0xbe00000000	                              mov esi, 0	      2056	ui.c	FUNCTION_62	CALL_6
0x2d5c	          0x4889c7	                            mov rdi, rax	      2056	ui.c	FUNCTION_62	CALL_6
0x2d5f	      0xe800000000	                          call 0x4002da4	      2056	ui.c	FUNCTION_62	CALL_6
0x2d64	    0x488905000000	            mov qword [0x04002dab], rax 	      2056	ui.c	FUNCTION_62	CALL_6
0x2d6b	    0x48c705000000	               mov qword [0x04002db6], 1	      2057	ui.c	FUNCTION_62
0x2d76	        0x488b45f8	                mov rax, qword [rbp - 8]	      2058	ui.c	FUNCTION_62	CALL_7
0x2d7a	      0xba00000000	                              mov edx, 0	      2058	ui.c	FUNCTION_62	CALL_7
0x2d7f	      0xbe00000000	                              mov esi, 0	      2058	ui.c	FUNCTION_62	CALL_7
0x2d84	          0x4889c7	                            mov rdi, rax	      2058	ui.c	FUNCTION_62	CALL_7
0x2d87	      0xe800000000	                          call 0x4002dcc	      2058	ui.c	FUNCTION_62	CALL_7
0x2d8c	    0x488905000000	            mov qword [0x04002dd3], rax 	      2058	ui.c	FUNCTION_62	CALL_7
0x2d93	        0x488b45f8	                mov rax, qword [rbp - 8]	      2059	ui.c	FUNCTION_62	CALL_8
0x2d97	      0xba00000000	                              mov edx, 0	      2059	ui.c	FUNCTION_62	CALL_8
0x2d9c	      0xbe00000000	                              mov esi, 0	      2059	ui.c	FUNCTION_62	CALL_8
0x2da1	          0x4889c7	                            mov rdi, rax	      2059	ui.c	FUNCTION_62	CALL_8
0x2da4	      0xe800000000	                          call 0x4002de9	      2059	ui.c	FUNCTION_62	CALL_8
0x2da9	    0x488905000000	            mov qword [0x04002df0], rax 	      2059	ui.c	FUNCTION_62	CALL_8
0x2db0	              0x90	                                     nop	      2060	ui.c	FUNCTION_62
0x2db1	              0xc9	                                   leave	      2060	ui.c	FUNCTION_62
0x2db2	              0xc3	                                     ret	      2060	ui.c	FUNCTION_62
fill_input_buf	CALL,18:WHILE,2:IF,13:ELSE,4:DO,0:SWITCH,0:functions,0:FOR,1	201
0x287e	              0x55	                                push rbp	      1786	ui.c	FUNCTION_55
0x287f	          0x4889e5	                            mov rbp, rsp	      1786	ui.c	FUNCTION_55
0x2882	        0x4883ec30	                           sub rsp, 0x30	      1786	ui.c	FUNCTION_55
0x2886	          0x897ddc	             mov dword [rbp - 0x24], edi	      1786	ui.c	FUNCTION_55
0x2889	    0x8b0500000000	            mov eax, dword [0x040028cf] 	      1799	ui.c	FUNCTION_55	IF_1
0x288f	            0x85c0	                           test eax, eax	      1799	ui.c	FUNCTION_55	IF_1
0x2891	            0x7413	                            je 0x40028e6	      1799	ui.c	FUNCTION_55	IF_1
0x2893	      0xe800000000	                          call 0x40028d8	      1803	ui.c	FUNCTION_55	IF_1	CALL_1
0x2898	            0x85c0	                           test eax, eax	      1803	ui.c	FUNCTION_55	IF_1	CALL_1
0x289a	            0x750a	                           jne 0x40028e6	      1803	ui.c	FUNCTION_55	IF_1	CALL_1
0x289c	      0xe800000000	                          call 0x40028e1	      1807	ui.c	FUNCTION_55	IF_1	CALL_2
0x28a1	      0xe909030000	                           jmp 0x4002bef	      1808	ui.c	FUNCTION_55	IF_1
0x28a6	      0xe800000000	                          call 0x40028eb	      1812	ui.c	FUNCTION_55	IF_2	CALL_3
0x28ab	            0x85c0	                           test eax, eax	      1812	ui.c	FUNCTION_55	IF_2	CALL_3
0x28ad	     0xf85f8020000	                           jne 0x4002beb	      1812	ui.c	FUNCTION_55	IF_2	CALL_3
0x28b3	    0x488b05000000	            mov rax, qword [0x040028fa] 	      1832	ui.c	FUNCTION_55	IF_3
0x28ba	          0x4885c0	                           test rax, rax	      1832	ui.c	FUNCTION_55	IF_3
0x28bd	     0xf84db000000	                            je 0x40029de	      1832	ui.c	FUNCTION_55	IF_3
0x28c3	    0x8b0500000000	            mov eax, dword [0x04002909] 	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x28c9	      0xba00100000	                         mov edx, 0x1000	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x28ce	            0x29c2	                            sub edx, eax	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x28d0	    0x8b0500000000	            mov eax, dword [0x04002916] 	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x28d6	            0x39c2	                            cmp edx, eax	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x28d8	            0x7d14	                           jge 0x400292e	      1836	ui.c	FUNCTION_55	IF_3	IF_4
0x28da	    0x8b0500000000	            mov eax, dword [0x04002920] 	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x28e0	      0xba00100000	                         mov edx, 0x1000	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x28e5	            0x29c2	                            sub edx, eax	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x28e7	            0x89d0	                            mov eax, edx	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x28e9	          0x8945f0	             mov dword [rbp - 0x10], eax	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x28ec	            0xeb09	                           jmp 0x4002937	      1837	ui.c	FUNCTION_55	IF_3	IF_4
0x28ee	    0x8b0500000000	            mov eax, dword [0x04002934] 	      1839	ui.c	FUNCTION_55	IF_3	ELSE_1
0x28f4	          0x8945f0	             mov dword [rbp - 0x10], eax	      1839	ui.c	FUNCTION_55	IF_3	ELSE_1
0x28f7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x28fa	          0x4863d0	                         movsxd rdx, eax	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x28fd	    0x488b05000000	            mov rax, qword [0x04002944] 	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x2904	    0x8b0d00000000	            mov ecx, dword [0x0400294a] 	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x290a	          0x4863c9	                         movsxd rcx, ecx	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x290d	    0x4881c1000000	                              add rcx, 0	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x2914	          0x4889c6	                            mov rsi, rax	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x2917	          0x4889cf	                            mov rdi, rcx	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x291a	      0xe800000000	                          call 0x400295f	      1840	ui.c	FUNCTION_55	IF_3	CALL_6
0x291f	    0x8b0500000000	            mov eax, dword [0x04002965] 	      1841	ui.c	FUNCTION_55	IF_3	IF_5
0x2925	          0x3945f0	            cmp dword [rbp - 0x10], eax 	      1841	ui.c	FUNCTION_55	IF_3	IF_5
0x2928	            0x7528	                           jne 0x4002992	      1841	ui.c	FUNCTION_55	IF_3	IF_5
0x292a	    0x488b05000000	            mov rax, qword [0x04002971] 	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x2931	          0x4885c0	                           test rax, rax	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x2934	            0x7455	                            je 0x40029cb	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x2936	    0x488b05000000	            mov rax, qword [0x0400297d] 	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x293d	          0x4889c7	                            mov rdi, rax	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x2940	      0xe800000000	                          call 0x4002985	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x2945	    0x48c705000000	               mov qword [0x04002990], 0	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x2950	            0xeb39	                           jmp 0x40029cb	      1842	ui.c	FUNCTION_55	IF_3	CALL_7
0x2952	    0x8b0500000000	            mov eax, dword [0x04002998] 	      1845	ui.c	FUNCTION_55	IF_3	ELSE_2
0x2958	          0x2b45f0	             sub eax, dword [rbp - 0x10]	      1845	ui.c	FUNCTION_55	IF_3	ELSE_2
0x295b	    0x890500000000	            mov dword [0x040029a1], eax 	      1845	ui.c	FUNCTION_55	IF_3	ELSE_2
0x2961	    0x8b0500000000	            mov eax, dword [0x040029a7] 	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x2967	          0x4863d0	                         movsxd rdx, eax	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x296a	    0x488b0d000000	            mov rcx, qword [0x040029b1] 	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x2971	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x2974	            0x4898	                                    cdqe	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x2976	          0x4801c1	                            add rcx, rax	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x2979	    0x488b05000000	            mov rax, qword [0x040029c0] 	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x2980	          0x4889ce	                            mov rsi, rcx	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x2983	          0x4889c7	                            mov rdi, rax	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x2986	      0xe800000000	                          call 0x40029cb	      1846	ui.c	FUNCTION_55	IF_3	ELSE_2	CALL_8
0x298b	    0x8b1500000000	            mov edx, dword [0x040029d1] 	      1848	ui.c	FUNCTION_55	IF_3
0x2991	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1848	ui.c	FUNCTION_55	IF_3
0x2994	             0x1d0	                            add eax, edx	      1848	ui.c	FUNCTION_55	IF_3
0x2996	    0x890500000000	            mov dword [0x040029dc], eax 	      1848	ui.c	FUNCTION_55	IF_3
0x299c	            0xeb07	                           jmp 0x40029e5	      1848	ui.c	FUNCTION_55	IF_3
0x299e	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1851	ui.c	FUNCTION_55	ELSE_3
0x29a5	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1854	ui.c	FUNCTION_55	ELSE_3
0x29ac	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1855	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x29b3	      0xe9be000000	                           jmp 0x4002ab6	      1855	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x29b8	    0x8b0500000000	            mov eax, dword [0x040029fe] 	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x29be	      0xba00100000	                         mov edx, 0x1000	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x29c3	            0x29c2	                            sub edx, eax	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x29c5	            0x89d0	                            mov eax, edx	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x29c7	    0x8b3500000000	            mov esi, dword [0x04002a0d] 	      1859	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x29cd	              0x99	                                     cdq	      1859	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x29ce	            0xf7fe	                                idiv esi	      1859	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x29d0	            0x4898	                                    cdqe	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x29d2	        0x488945f8	                mov qword [rbp - 8], rax	      1857	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x29d6	    0x8b0500000000	            mov eax, dword [0x04002a1c] 	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x29dc	            0x4898	                                    cdqe	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x29de	    0x488d88000000	                          lea rcx, [rax]	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x29e5	    0x8b0500000000	            mov eax, dword [0x04002a2b] 	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x29eb	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x29ef	          0x4889ce	                            mov rsi, rcx	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x29f2	            0x89c7	                            mov edi, eax	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x29f4	      0xe800000000	                          call 0x4002a39	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x29f9	          0x8945e8	             mov dword [rbp - 0x18], eax	      1865	ui.c	FUNCTION_55	ELSE_3	FOR_1	CALL_10
0x29fc	        0x837de800	               cmp dword [rbp - 0x18], 0	      1868	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_6
0x2a00	            0x7f7e	                            jg 0x4002ac0	      1868	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_6
0x2a02	    0x8b0500000000	            mov eax, dword [0x04002a48] 	      1868	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_6
0x2a08	            0x85c0	                           test eax, eax	      1868	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_6
0x2a0a	            0x7574	                           jne 0x4002ac0	      1868	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_6
0x2a0c	    0x8b0500000000	            mov eax, dword [0x04002a52] 	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x2a12	            0x85c0	                           test eax, eax	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x2a14	            0x7552	                           jne 0x4002aa8	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x2a16	    0x8b0500000000	            mov eax, dword [0x04002a5c] 	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x2a1c	            0x89c7	                            mov edi, eax	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x2a1e	      0xe800000000	                          call 0x4002a63	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x2a23	            0x85c0	                           test eax, eax	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x2a25	            0x7541	                           jne 0x4002aa8	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x2a27	    0x8b0500000000	            mov eax, dword [0x04002a6d] 	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x2a2d	            0x85c0	                           test eax, eax	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x2a2f	            0x7537	                           jne 0x4002aa8	      1874	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_11
0x2a31	    0x8b0500000000	            mov eax, dword [0x04002a77] 	      1876	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7
0x2a37	          0x8945f4	              mov dword [rbp - 0xc], eax	      1876	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7
0x2a3a	      0xbf00000000	                              mov edi, 0	      1881	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_12
0x2a3f	      0xe800000000	                          call 0x4002a84	      1881	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_12
0x2a44	      0xbf00000000	                              mov edi, 0	      1884	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_13
0x2a49	      0xe800000000	                          call 0x4002a8e	      1884	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_13
0x2a4e	      0xbf02000000	                              mov edi, 2	      1885	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_14
0x2a53	      0xe800000000	                          call 0x4002a98	      1885	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_14
0x2a58	    0x890500000000	            mov dword [0x04002a9e], eax 	      1885	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_14
0x2a5e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1889	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_15
0x2a61	            0x89c7	                            mov edi, eax	      1889	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_15
0x2a63	      0xe800000000	                          call 0x4002aa8	      1889	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_7	CALL_15
0x2a68	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1891	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_8
0x2a6c	     0xf843c010000	                            je 0x4002bee	      1891	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_8
0x2a72	        0x8345ec01	               add dword [rbp - 0x14], 1	      1855	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x2a76	        0x837dec63	           cmp dword [rbp - 0x14], 0x63 	      1855	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x2a7a	     0xf8e38ffffff	                           jle 0x40029f8	      1855	ui.c	FUNCTION_55	ELSE_3	FOR_1
0x2a80	        0x837de800	               cmp dword [rbp - 0x18], 0	      1895	ui.c	FUNCTION_55	IF_9
0x2a84	            0x7f0f	                            jg 0x4002ad5	      1895	ui.c	FUNCTION_55	IF_9
0x2a86	    0x8b0500000000	            mov eax, dword [0x04002acc] 	      1895	ui.c	FUNCTION_55	IF_9
0x2a8c	            0x85c0	                           test eax, eax	      1895	ui.c	FUNCTION_55	IF_9
0x2a8e	            0x7505	                           jne 0x4002ad5	      1895	ui.c	FUNCTION_55	IF_9
0x2a90	      0xe800000000	                          call 0x4002ad5	      1896	ui.c	FUNCTION_55	CALL_16
0x2a95	        0x837de800	               cmp dword [rbp - 0x18], 0	      1897	ui.c	FUNCTION_55	IF_10
0x2a99	            0x7e0a	                           jle 0x4002ae5	      1897	ui.c	FUNCTION_55	IF_10
0x2a9b	    0xc70500000000	               mov dword [0x04002ae5], 1	      1898	ui.c	FUNCTION_55	IF_10
0x2aa5	    0x8b0500000000	            mov eax, dword [0x04002aeb] 	      1899	ui.c	FUNCTION_55	IF_11
0x2aab	            0x85c0	                           test eax, eax	      1899	ui.c	FUNCTION_55	IF_11
0x2aad	            0x7416	                            je 0x4002b05	      1899	ui.c	FUNCTION_55	IF_11
0x2aaf	    0xc60500000000	                mov byte [0x04002af6], 3	      1902	ui.c	FUNCTION_55	IF_11
0x2ab6	    0xc70500000000	               mov dword [0x04002b00], 1	      1903	ui.c	FUNCTION_55	IF_11
0x2ac0	      0xe9ea000000	                           jmp 0x4002bef	      1903	ui.c	FUNCTION_55	IF_11
0x2ac5	    0x8b0500000000	            mov eax, dword [0x04002b0b] 	      1916	ui.c	FUNCTION_55	ELSE_4	IF_12
0x2acb	            0x85c0	                           test eax, eax	      1916	ui.c	FUNCTION_55	ELSE_4	IF_12
0x2acd	     0xf84c9000000	                            je 0x4002bdc	      1916	ui.c	FUNCTION_55	ELSE_4	IF_12
0x2ad3	    0x8b0500000000	            mov eax, dword [0x04002b19] 	      1918	ui.c	FUNCTION_55	ELSE_4	IF_12
0x2ad9	          0x2b45f0	             sub eax, dword [rbp - 0x10]	      1918	ui.c	FUNCTION_55	ELSE_4	IF_12
0x2adc	    0x890500000000	            mov dword [0x04002b22], eax 	      1918	ui.c	FUNCTION_55	ELSE_4	IF_12
0x2ae2	    0x488b05000000	            mov rax, qword [0x04002b29] 	      1921	ui.c	FUNCTION_55	ELSE_4	IF_12
0x2ae9	          0x4885c0	                           test rax, rax	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2aec	            0x7507	                           jne 0x4002b35	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2aee	      0xbf00000000	                              mov edi, 0	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2af3	            0xeb05	                           jmp 0x4002b3a	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2af5	      0xbf00000000	                              mov edi, 0	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2afa	    0x8b0500000000	            mov eax, dword [0x04002b40] 	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b00	      0xba00100000	                         mov edx, 0x1000	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b05	            0x29c2	                            sub edx, eax	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b07	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b0a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b0d	          0x8d3401	                    lea esi, [rcx + rax]	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b10	    0x8b0500000000	            mov eax, dword [0x04002b56] 	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b16	            0x4898	                                    cdqe	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b18	    0x480500000000	                              add rax, 0	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b1e	    0x41b800000000	                              mov r8d, 0	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b24	          0x4889f9	                            mov rcx, rdi	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b27	          0x4889c7	                            mov rdi, rax	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b2a	      0xe800000000	                          call 0x4002b6f	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b2f	          0x8945e8	             mov dword [rbp - 0x18], eax	      1919	ui.c	FUNCTION_55	ELSE_4	IF_12	CALL_17
0x2b32	            0xeb68	                           jmp 0x4002bdc	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x2b34	    0x8b0500000000	            mov eax, dword [0x04002b7a] 	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x2b3a	            0x4898	                                    cdqe	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x2b3c	     0xfb680000000	                   movzx eax, byte [rax]	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x2b43	            0x3c03	                               cmp al, 3	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x2b45	            0x7546	                           jne 0x4002bcd	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x2b47	    0x8b0500000000	            mov eax, dword [0x04002b8d] 	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x2b4d	            0x85c0	                           test eax, eax	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x2b4f	            0x743c	                            je 0x4002bcd	      1929	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x2b51	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x2b54	          0x83c001	                              add eax, 1	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x2b57	            0x4898	                                    cdqe	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x2b59	    0x8b1500000000	            mov edx, dword [0x04002b9f] 	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x2b5f	          0x4863d2	                         movsxd rdx, edx	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x2b62	    0x488d8a000000	                          lea rcx, [rdx]	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x2b69	          0x4889c2	                            mov rdx, rax	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x2b6c	          0x4889ce	                            mov rsi, rcx	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x2b6f	      0xbf00000000	                              mov edi, 0	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x2b74	      0xe800000000	                          call 0x4002bb9	      1932	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13	CALL_18
0x2b79	    0xc70500000000	               mov dword [0x04002bc3], 0	      1933	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x2b83	    0xc70500000000	               mov dword [0x04002bcd], 1	      1934	ui.c	FUNCTION_55	ELSE_4	WHILE_2	IF_13
0x2b8d	    0x8b0500000000	            mov eax, dword [0x04002bd3] 	      1936	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x2b93	          0x83c001	                              add eax, 1	      1936	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x2b96	    0x890500000000	            mov dword [0x04002bdc], eax 	      1936	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x2b9c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x2b9f	          0x8d50ff	                      lea edx, [rax - 1]	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x2ba2	          0x8955e8	             mov dword [rbp - 0x18], edx	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x2ba5	            0x85c0	                           test eax, eax	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x2ba7	            0x7f8b	                            jg 0x4002b74	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x2ba9	            0xeb04	                           jmp 0x4002bef	      1924	ui.c	FUNCTION_55	ELSE_4	WHILE_2
0x2bab	              0x90	                                     nop	      1813	ui.c	FUNCTION_55	IF_2
0x2bac	            0xeb01	                           jmp 0x4002bef	      1813	ui.c	FUNCTION_55	IF_2
0x2bae	              0x90	                                     nop	      1892	ui.c	FUNCTION_55	ELSE_3	FOR_1	IF_8
0x2baf	              0xc9	                                   leave	      1940	ui.c	FUNCTION_55
0x2bb0	              0xc3	                                     ret	      1940	ui.c	FUNCTION_55
mouse_find_win	CALL,1:WHILE,0:IF,5:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,3	100
0x4d9c	              0x55	                                push rbp	      3162	ui.c	FUNCTION_77
0x4d9d	          0x4889e5	                            mov rbp, rsp	      3162	ui.c	FUNCTION_77
0x4da0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3162	ui.c	FUNCTION_77
0x4da4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3162	ui.c	FUNCTION_77
0x4da8	    0x488b05000000	            mov rax, qword [0x04004def] 	      3166	ui.c	FUNCTION_77
0x4daf	        0x488945f0	             mov qword [rbp - 0x10], rax	      3166	ui.c	FUNCTION_77
0x4db3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3167	ui.c	FUNCTION_77
0x4db7	            0x8b10	                    mov edx, dword [rax]	      3167	ui.c	FUNCTION_77
0x4db9	    0x488b05000000	            mov rax, qword [0x04004e00] 	      3167	ui.c	FUNCTION_77
0x4dc0	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      3167	ui.c	FUNCTION_77
0x4dc6	            0x29c2	                            sub edx, eax	      3167	ui.c	FUNCTION_77
0x4dc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3167	ui.c	FUNCTION_77
0x4dcc	            0x8910	                    mov dword [rax], edx	      3167	ui.c	FUNCTION_77
0x4dce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4dd2	           0xfb600	                   movzx eax, byte [rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4dd5	            0x84c0	                             test al, al	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4dd7	     0xf84bc000000	                            je 0x4004ed9	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4ddd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x4de1	           0xfb600	                   movzx eax, byte [rax]	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x4de4	            0x3c01	                               cmp al, 1	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x4de6	            0x7553	                           jne 0x4004e7b	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x4de8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4dec	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4df0	        0x488945f0	             mov qword [rbp - 0x10], rax	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4df4	            0xeb36	                           jmp 0x4004e6c	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4df6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4dfa	            0x8b10	                    mov edx, dword [rax]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4dfc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4e00	          0x8b4004	                mov eax, dword [rax + 4]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4e03	            0x39c2	                            cmp edx, eax	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4e05	     0xf8c82000000	                            jl 0x4004ecd	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4e0b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e0f	            0x8b10	                    mov edx, dword [rax]	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e11	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e15	          0x8b4004	                mov eax, dword [rax + 4]	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e18	            0x29c2	                            sub edx, eax	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e1a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e1e	            0x8910	                    mov dword [rax], edx	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e24	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e28	        0x488945f0	             mov qword [rbp - 0x10], rax	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e30	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e34	          0x4885c0	                           test rax, rax	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e37	            0x75bd	                           jne 0x4004e36	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e39	            0xeb93	                           jmp 0x4004e0e	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4e3b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e3f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e43	        0x488945f0	             mov qword [rbp - 0x10], rax	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e47	            0xeb32	                           jmp 0x4004ebb	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4e4d	            0x8b10	                    mov edx, dword [rax]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4e4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4e53	          0x8b400c	              mov eax, dword [rax + 0xc]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4e56	            0x39c2	                            cmp edx, eax	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4e58	            0x7c39	                            jl 0x4004ed3	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4e5a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e5e	            0x8b10	                    mov edx, dword [rax]	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e64	          0x8b400c	              mov eax, dword [rax + 0xc]	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e67	            0x29c2	                            sub edx, eax	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e6d	            0x8910	                    mov dword [rax], edx	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e6f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e73	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e77	        0x488945f0	             mov qword [rbp - 0x10], rax	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e7f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e83	          0x4885c0	                           test rax, rax	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e86	            0x75c1	                           jne 0x4004e89	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e88	      0xe941ffffff	                           jmp 0x4004e0e	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4e8d	              0x90	                                     nop	      3177	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4e8e	      0xe93bffffff	                           jmp 0x4004e0e	      3177	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4e93	              0x90	                                     nop	      3186	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4e94	      0xe935ffffff	                           jmp 0x4004e0e	      3190	ui.c	FUNCTION_77	FOR_1
0x4e99	              0x90	                                     nop	      3171	ui.c	FUNCTION_77	FOR_1	IF_1
0x4e9a	    0x488b05000000	            mov rax, qword [0x04004ee1] 	      3193	ui.c	FUNCTION_77	CALL_1
0x4ea1	        0x488945f8	                mov qword [rbp - 8], rax	      3193	ui.c	FUNCTION_77	CALL_1
0x4ea5	            0xeb38	                           jmp 0x4004f1f	      3193	ui.c	FUNCTION_77	CALL_1
0x4ea7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3194	ui.c	FUNCTION_77	IF_5
0x4eab	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3194	ui.c	FUNCTION_77	IF_5
0x4eaf	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3194	ui.c	FUNCTION_77	IF_5
0x4eb3	            0x751e	                           jne 0x4004f13	      3194	ui.c	FUNCTION_77	IF_5
0x4eb5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3197	ui.c	FUNCTION_77	IF_5
0x4eb9	            0x8b10	                    mov edx, dword [rax]	      3197	ui.c	FUNCTION_77	IF_5
0x4ebb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3197	ui.c	FUNCTION_77	IF_5
0x4ebf	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      3197	ui.c	FUNCTION_77	IF_5
0x4ec5	            0x29c2	                            sub edx, eax	      3197	ui.c	FUNCTION_77	IF_5
0x4ec7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3197	ui.c	FUNCTION_77	IF_5
0x4ecb	            0x8910	                    mov dword [rax], edx	      3197	ui.c	FUNCTION_77	IF_5
0x4ecd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3199	ui.c	FUNCTION_77	IF_5
0x4ed1	            0xeb18	                           jmp 0x4004f2b	      3199	ui.c	FUNCTION_77	IF_5
0x4ed3	        0x488b45f8	                mov rax, qword [rbp - 8]	      3193	ui.c	FUNCTION_77	CALL_1
0x4ed7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3193	ui.c	FUNCTION_77	CALL_1
0x4edb	        0x488945f8	                mov qword [rbp - 8], rax	      3193	ui.c	FUNCTION_77	CALL_1
0x4edf	      0x48837df800	                  cmp qword [rbp - 8], 0	      3193	ui.c	FUNCTION_77	CALL_1
0x4ee4	            0x75c1	                           jne 0x4004ee7	      3193	ui.c	FUNCTION_77	CALL_1
0x4ee6	      0xb800000000	                              mov eax, 0	      3201	ui.c	FUNCTION_77
0x4eeb	              0x5d	                                 pop rbp	      3202	ui.c	FUNCTION_77
0x4eec	              0xc3	                                     ret	      3202	ui.c	FUNCTION_77
clip_x11_request_selection	CALL,11:WHILE,1:IF,5:ELSE,0:DO,0:SWITCH,1:functions,0:FOR,1	125
0x32ee	              0x55	                                push rbp	      2246	ui.c	FUNCTION_66
0x32ef	          0x4889e5	                            mov rbp, rsp	      2246	ui.c	FUNCTION_66
0x32f2	    0x4881ec100100	                          sub rsp, 0x110	      2246	ui.c	FUNCTION_66
0x32f9	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	      2246	ui.c	FUNCTION_66
0x3300	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	      2246	ui.c	FUNCTION_66
0x3307	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	      2246	ui.c	FUNCTION_66
0x330e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	ui.c	FUNCTION_66
0x3317	        0x488945f8	                mov qword [rbp - 8], rax	      2246	ui.c	FUNCTION_66
0x331b	            0x31c0	                            xor eax, eax	      2246	ui.c	FUNCTION_66
0x331d	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      2252	ui.c	FUNCTION_66
0x3327	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      2254	ui.c	FUNCTION_66	FOR_1
0x3331	      0xe9da010000	                           jmp 0x4003550	      2254	ui.c	FUNCTION_66	FOR_1
0x3336	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 4	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x333d	            0x7760	                            ja 0x40033df	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x333f	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x3345	    0x488b04c50000	                  mov rax, qword [rax*8]	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x334d	            0xffe0	                                 jmp rax	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x334f	    0x488b05000000	            mov rax, qword [0x04003396] 	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x3356	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x335d	            0xeb4b	                           jmp 0x40033ea	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x335f	    0x488b05000000	            mov rax, qword [0x040033a6] 	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x3366	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x336d	            0xeb3b	                           jmp 0x40033ea	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x336f	    0x488b05000000	            mov rax, qword [0x040033b6] 	      2269	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x3376	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2269	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x337d	            0xeb2b	                           jmp 0x40033ea	      2269	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x337f	    0x488b05000000	            mov rax, qword [0x040033c6] 	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x3386	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x338d	            0xeb1b	                           jmp 0x40033ea	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x338f	    0x488b05000000	            mov rax, qword [0x040033d6] 	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x3396	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x339d	            0xeb0b	                           jmp 0x40033ea	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x339f	    0x48c78520ffff	           mov qword [rbp - 0xe0], 0x1f 	      2273	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x33aa	    0x488b05000000	            mov rax, qword [0x040033f1] 	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x33b1	    0x48398520ffff	            cmp qword [rbp - 0xe0], rax 	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x33b8	            0x750e	                           jne 0x4003408	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x33ba	    0x8b0500000000	            mov eax, dword [0x04003400] 	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x33c0	            0x85c0	                           test eax, eax	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x33c2	     0xf8440010000	                            je 0x4003548	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x33c8	    0xc70500000000	               mov dword [0x04003412], 2	      2285	ui.c	FUNCTION_66	FOR_1
0x33d2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x33d9	        0x488b7050	            mov rsi, qword [rax + 0x50] 	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x33dd	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x33e4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x33eb	    0x41b900000000	                              mov r9d, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x33f1	    0x41b800000000	                              mov r8d, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x33f7	      0xb900000000	                              mov ecx, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x33fc	          0x4889c7	                            mov rdi, rax	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x33ff	      0xe800000000	                          call 0x4003444	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x3404	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x340b	          0x4889c7	                            mov rdi, rax	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x340e	      0xe800000000	                          call 0x4003453	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x3413	      0xbf00000000	                              mov edi, 0	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x3418	      0xe800000000	                          call 0x400345d	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x341d	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x3424	      0xe9ba000000	                           jmp 0x4003523	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x3429	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x3430	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x3437	      0xbe1c000000	                           mov esi, 0x1c	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x343c	          0x4889c7	                            mov rdi, rax	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x343f	      0xe800000000	                          call 0x4003484	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x3444	            0x85c0	                           test eax, eax	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x3446	            0x753e	                           jne 0x40034c6	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x3448	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x344f	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x3456	      0xbe1f000000	                           mov esi, 0x1f	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x345b	          0x4889c7	                            mov rdi, rax	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x345e	      0xe800000000	                          call 0x40034a3	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x3463	            0x85c0	                           test eax, eax	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x3465	            0x751f	                           jne 0x40034c6	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x3467	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x346e	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x3475	      0xbe1e000000	                           mov esi, 0x1e	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x347a	          0x4889c7	                            mov rdi, rax	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x347d	      0xe800000000	                          call 0x40034c2	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x3482	            0x85c0	                           test eax, eax	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x3484	            0x7411	                            je 0x40034d7	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x3486	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x348d	          0x4889c7	                            mov rdi, rax	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x3490	      0xe800000000	                          call 0x40034d5	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x3495	            0xeb4c	                           jmp 0x4003523	      2312	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2
0x3497	      0xbf00000000	                              mov edi, 0	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x349c	      0xe800000000	                          call 0x40034e1	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x34a1	          0x4889c2	                            mov rdx, rax	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x34a4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x34ab	        0x4883c002	                              add rax, 2	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x34af	          0x4839c2	                            cmp rdx, rax	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x34b2	            0x7e0c	                           jle 0x4003500	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x34b4	    0xc7851cffffff	               mov dword [rbp - 0xe4], 1	      2322	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3
0x34be	            0xeb32	                           jmp 0x4003532	      2323	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3
0x34c0	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x34c7	      0xbe00000000	                              mov esi, 0	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x34cc	          0x4889c7	                            mov rdi, rax	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x34cf	      0xe800000000	                          call 0x4003514	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x34d4	      0xbe01000000	                              mov esi, 1	      2330	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_10
0x34d9	      0xbf01000000	                              mov edi, 1	      2330	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_10
0x34de	      0xe800000000	                          call 0x4003523	      2330	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_10
0x34e3	    0x8b0500000000	            mov eax, dword [0x04003529] 	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x34e9	          0x83f802	                              cmp eax, 2	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x34ec	     0xf8437ffffff	                            je 0x4003469	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x34f2	    0x8b0500000000	            mov eax, dword [0x04003538] 	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x34f8	          0x83f801	                              cmp eax, 1	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x34fb	            0x743e	                            je 0x400357b	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x34fd	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2338	ui.c	FUNCTION_66	FOR_1	IF_5
0x3504	            0x7519	                           jne 0x400355f	      2338	ui.c	FUNCTION_66	FOR_1	IF_5
0x3506	            0xeb01	                           jmp 0x4003549	      2338	ui.c	FUNCTION_66	FOR_1	IF_5
0x3508	              0x90	                                     nop	      2283	ui.c	FUNCTION_66	FOR_1	IF_1
0x3509	    0x838518ffffff	               add dword [rbp - 0xe8], 1	      2260	ui.c	FUNCTION_66	FOR_1
0x3510	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 5	      2254	ui.c	FUNCTION_66	FOR_1
0x3517	     0xf8e19feffff	                           jle 0x4003376	      2254	ui.c	FUNCTION_66	FOR_1
0x351d	            0xeb01	                           jmp 0x4003560	      2254	ui.c	FUNCTION_66	FOR_1
0x351f	              0x90	                                     nop	      2339	ui.c	FUNCTION_66	FOR_1	IF_5
0x3520	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      2343	ui.c	FUNCTION_66	CALL_11
0x3527	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2343	ui.c	FUNCTION_66	CALL_11
0x352e	          0x4889d6	                            mov rsi, rdx	      2343	ui.c	FUNCTION_66	CALL_11
0x3531	          0x4889c7	                            mov rdi, rax	      2343	ui.c	FUNCTION_66	CALL_11
0x3534	      0xe800000000	                          call 0x4003579	      2343	ui.c	FUNCTION_66	CALL_11
0x3539	            0xeb01	                           jmp 0x400357c	      2343	ui.c	FUNCTION_66	CALL_11
0x353b	              0x90	                                     nop	      2334	ui.c	FUNCTION_66	FOR_1	IF_4
0x353c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2344	ui.c	FUNCTION_66
0x3540	    0x644833042528	                xor rax, qword fs:[0x28]	      2344	ui.c	FUNCTION_66
0x3549	            0x7405	                            je 0x4003590	      2344	ui.c	FUNCTION_66
0x354b	      0xe800000000	                          call 0x4003590	      2344	ui.c	FUNCTION_66
0x3550	              0xc9	                                   leave	      2344	ui.c	FUNCTION_66
0x3551	              0xc3	                                     ret	      2344	ui.c	FUNCTION_66
clip_x11_convert_selection_cb	CALL,15:WHILE,0:IF,14:ELSE,5:DO,0:SWITCH,0:functions,0:FOR,0	359
0x3552	              0x55	                                push rbp	      2355	ui.c	FUNCTION_67
0x3553	          0x4889e5	                            mov rbp, rsp	      2355	ui.c	FUNCTION_67
0x3556	              0x53	                                push rbx	      2355	ui.c	FUNCTION_67
0x3557	    0x4881eca80000	                           sub rsp, 0xa8	      2355	ui.c	FUNCTION_67
0x355e	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2355	ui.c	FUNCTION_67
0x3562	        0x48897580	             mov qword [rbp - 0x80], rsi	      2355	ui.c	FUNCTION_67
0x3566	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      2355	ui.c	FUNCTION_67
0x356d	    0x48898d70ffff	             mov qword [rbp - 0x90], rcx	      2355	ui.c	FUNCTION_67
0x3574	    0x4c898568ffff	              mov qword [rbp - 0x98], r8	      2355	ui.c	FUNCTION_67
0x357b	    0x4c898d60ffff	              mov qword [rbp - 0xa0], r9	      2355	ui.c	FUNCTION_67
0x3582	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2355	ui.c	FUNCTION_67
0x3586	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2355	ui.c	FUNCTION_67
0x358d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2355	ui.c	FUNCTION_67
0x3596	        0x488945e8	             mov qword [rbp - 0x18], rax	      2355	ui.c	FUNCTION_67
0x359a	            0x31c0	                            xor eax, eax	      2355	ui.c	FUNCTION_67
0x359c	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2363	ui.c	FUNCTION_67	IF_1
0x35a0	          0x488b10	                    mov rdx, qword [rax]	      2363	ui.c	FUNCTION_67	IF_1
0x35a3	    0x488b05000000	            mov rax, qword [0x040035ea] 	      2363	ui.c	FUNCTION_67	IF_1
0x35aa	          0x4839c2	                            cmp rdx, rax	      2363	ui.c	FUNCTION_67	IF_1
0x35ad	            0x750a	                           jne 0x40035f9	      2363	ui.c	FUNCTION_67	IF_1
0x35af	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2364	ui.c	FUNCTION_67	IF_1
0x35b7	            0xeb08	                           jmp 0x4003601	      2364	ui.c	FUNCTION_67	IF_1
0x35b9	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2366	ui.c	FUNCTION_67	ELSE_1
0x35c1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2368	ui.c	FUNCTION_67	IF_2
0x35c5	          0x8b4004	                mov eax, dword [rax + 4]	      2368	ui.c	FUNCTION_67	IF_2
0x35c8	            0x85c0	                           test eax, eax	      2368	ui.c	FUNCTION_67	IF_2
0x35ca	            0x750a	                           jne 0x4003616	      2368	ui.c	FUNCTION_67	IF_2
0x35cc	      0xb800000000	                              mov eax, 0	      2369	ui.c	FUNCTION_67	IF_2
0x35d1	      0xe9a8050000	                           jmp 0x4003bbe	      2369	ui.c	FUNCTION_67	IF_2
0x35d6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2372	ui.c	FUNCTION_67	IF_3
0x35dd	          0x488b10	                    mov rdx, qword [rax]	      2372	ui.c	FUNCTION_67	IF_3
0x35e0	    0x488b05000000	            mov rax, qword [0x04003627] 	      2372	ui.c	FUNCTION_67	IF_3
0x35e7	          0x4839c2	                            cmp rdx, rax	      2372	ui.c	FUNCTION_67	IF_3
0x35ea	     0xf8507010000	                           jne 0x4003737	      2372	ui.c	FUNCTION_67	IF_3
0x35f0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2376	ui.c	FUNCTION_67	IF_3
0x35f7	    0x48c700000000	                      mov qword [rax], 0	      2376	ui.c	FUNCTION_67	IF_3
0x35fe	    0xc74598000000	               mov dword [rbp - 0x68], 0	      2377	ui.c	FUNCTION_67	IF_3
0x3605	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2378	ui.c	FUNCTION_67	IF_3
0x3608	          0x8d5001	                      lea edx, [rax + 1]	      2378	ui.c	FUNCTION_67	IF_3
0x360b	          0x895598	             mov dword [rbp - 0x68], edx	      2378	ui.c	FUNCTION_67	IF_3
0x360e	    0x488b15000000	            mov rdx, qword [0x04003655] 	      2378	ui.c	FUNCTION_67	IF_3
0x3615	            0x4898	                                    cdqe	      2378	ui.c	FUNCTION_67	IF_3
0x3617	    0x488914c50000	                  mov qword [rax*8], rdx	      2378	ui.c	FUNCTION_67	IF_3
0x361f	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2380	ui.c	FUNCTION_67	IF_3
0x3622	          0x8d5001	                      lea edx, [rax + 1]	      2380	ui.c	FUNCTION_67	IF_3
0x3625	          0x895598	             mov dword [rbp - 0x68], edx	      2380	ui.c	FUNCTION_67	IF_3
0x3628	    0x488b15000000	            mov rdx, qword [0x0400366f] 	      2380	ui.c	FUNCTION_67	IF_3
0x362f	            0x4898	                                    cdqe	      2380	ui.c	FUNCTION_67	IF_3
0x3631	    0x488914c50000	                  mov qword [rax*8], rdx	      2380	ui.c	FUNCTION_67	IF_3
0x3639	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2382	ui.c	FUNCTION_67	IF_3
0x363c	          0x8d5001	                      lea edx, [rax + 1]	      2382	ui.c	FUNCTION_67	IF_3
0x363f	          0x895598	             mov dword [rbp - 0x68], edx	      2382	ui.c	FUNCTION_67	IF_3
0x3642	    0x488b15000000	            mov rdx, qword [0x04003689] 	      2382	ui.c	FUNCTION_67	IF_3
0x3649	            0x4898	                                    cdqe	      2382	ui.c	FUNCTION_67	IF_3
0x364b	    0x488914c50000	                  mov qword [rax*8], rdx	      2382	ui.c	FUNCTION_67	IF_3
0x3653	    0x8b0500000000	            mov eax, dword [0x04003699] 	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x3659	            0x85c0	                           test eax, eax	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x365b	            0x741a	                            je 0x40036b7	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x365d	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x3660	          0x8d5001	                      lea edx, [rax + 1]	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x3663	          0x895598	             mov dword [rbp - 0x68], edx	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x3666	    0x488b15000000	            mov rdx, qword [0x040036ad] 	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x366d	            0x4898	                                    cdqe	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x366f	    0x488914c50000	                  mov qword [rax*8], rdx	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x3677	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2387	ui.c	FUNCTION_67	IF_3
0x367a	          0x8d5001	                      lea edx, [rax + 1]	      2387	ui.c	FUNCTION_67	IF_3
0x367d	          0x895598	             mov dword [rbp - 0x68], edx	      2387	ui.c	FUNCTION_67	IF_3
0x3680	            0x4898	                                    cdqe	      2387	ui.c	FUNCTION_67	IF_3
0x3682	    0x48c704c50000	                 mov qword [rax*8], 0x1f	      2387	ui.c	FUNCTION_67	IF_3
0x368e	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2388	ui.c	FUNCTION_67	IF_3
0x3691	          0x8d5001	                      lea edx, [rax + 1]	      2388	ui.c	FUNCTION_67	IF_3
0x3694	          0x895598	             mov dword [rbp - 0x68], edx	      2388	ui.c	FUNCTION_67	IF_3
0x3697	    0x488b15000000	            mov rdx, qword [0x040036de] 	      2388	ui.c	FUNCTION_67	IF_3
0x369e	            0x4898	                                    cdqe	      2388	ui.c	FUNCTION_67	IF_3
0x36a0	    0x488914c50000	                  mov qword [rax*8], rdx	      2388	ui.c	FUNCTION_67	IF_3
0x36a8	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2389	ui.c	FUNCTION_67	IF_3
0x36ab	          0x8d5001	                      lea edx, [rax + 1]	      2389	ui.c	FUNCTION_67	IF_3
0x36ae	          0x895598	             mov dword [rbp - 0x68], edx	      2389	ui.c	FUNCTION_67	IF_3
0x36b1	    0x488b15000000	            mov rdx, qword [0x040036f8] 	      2389	ui.c	FUNCTION_67	IF_3
0x36b8	            0x4898	                                    cdqe	      2389	ui.c	FUNCTION_67	IF_3
0x36ba	    0x488914c50000	                  mov qword [rax*8], rdx	      2389	ui.c	FUNCTION_67	IF_3
0x36c2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2391	ui.c	FUNCTION_67	IF_3
0x36c9	    0x48c700040000	                      mov qword [rax], 4	      2391	ui.c	FUNCTION_67	IF_3
0x36d0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2394	ui.c	FUNCTION_67	IF_3
0x36d7	    0xc70020000000	                   mov dword [rax], 0x20	      2394	ui.c	FUNCTION_67	IF_3
0x36dd	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2395	ui.c	FUNCTION_67	IF_3
0x36e0	          0x4863d0	                         movsxd rdx, eax	      2395	ui.c	FUNCTION_67	IF_3
0x36e3	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2395	ui.c	FUNCTION_67	IF_3
0x36ea	          0x488910	                    mov qword [rax], rdx	      2395	ui.c	FUNCTION_67	IF_3
0x36ed	      0xb801000000	                              mov eax, 1	      2396	ui.c	FUNCTION_67	IF_3
0x36f2	      0xe987040000	                           jmp 0x4003bbe	      2396	ui.c	FUNCTION_67	IF_3
0x36f7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2399	ui.c	FUNCTION_67	IF_5
0x36fe	          0x488b00	                    mov rax, qword [rax]	      2399	ui.c	FUNCTION_67	IF_5
0x3701	        0x4883f81f	                           cmp rax, 0x1f	      2399	ui.c	FUNCTION_67	IF_5
0x3705	     0xf8482000000	                            je 0x40037cd	      2399	ui.c	FUNCTION_67	IF_5
0x370b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2401	ui.c	FUNCTION_67	IF_5
0x3712	          0x488b10	                    mov rdx, qword [rax]	      2401	ui.c	FUNCTION_67	IF_5
0x3715	    0x488b05000000	            mov rax, qword [0x0400375c] 	      2401	ui.c	FUNCTION_67	IF_5
0x371c	          0x4839c2	                            cmp rdx, rax	      2401	ui.c	FUNCTION_67	IF_5
0x371f	            0x746c	                            je 0x40037cd	      2401	ui.c	FUNCTION_67	IF_5
0x3721	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2402	ui.c	FUNCTION_67	IF_5
0x3728	          0x488b10	                    mov rdx, qword [rax]	      2402	ui.c	FUNCTION_67	IF_5
0x372b	    0x488b05000000	            mov rax, qword [0x04003772] 	      2402	ui.c	FUNCTION_67	IF_5
0x3732	          0x4839c2	                            cmp rdx, rax	      2402	ui.c	FUNCTION_67	IF_5
0x3735	            0x750a	                           jne 0x4003781	      2402	ui.c	FUNCTION_67	IF_5
0x3737	    0x8b0500000000	            mov eax, dword [0x0400377d] 	      2402	ui.c	FUNCTION_67	IF_5
0x373d	            0x85c0	                           test eax, eax	      2402	ui.c	FUNCTION_67	IF_5
0x373f	            0x754c	                           jne 0x40037cd	      2402	ui.c	FUNCTION_67	IF_5
0x3741	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2404	ui.c	FUNCTION_67	IF_5
0x3748	          0x488b10	                    mov rdx, qword [rax]	      2404	ui.c	FUNCTION_67	IF_5
0x374b	    0x488b05000000	            mov rax, qword [0x04003792] 	      2404	ui.c	FUNCTION_67	IF_5
0x3752	          0x4839c2	                            cmp rdx, rax	      2404	ui.c	FUNCTION_67	IF_5
0x3755	            0x7436	                            je 0x40037cd	      2404	ui.c	FUNCTION_67	IF_5
0x3757	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2405	ui.c	FUNCTION_67	IF_5
0x375e	          0x488b10	                    mov rdx, qword [rax]	      2405	ui.c	FUNCTION_67	IF_5
0x3761	    0x488b05000000	            mov rax, qword [0x040037a8] 	      2405	ui.c	FUNCTION_67	IF_5
0x3768	          0x4839c2	                            cmp rdx, rax	      2405	ui.c	FUNCTION_67	IF_5
0x376b	            0x7420	                            je 0x40037cd	      2405	ui.c	FUNCTION_67	IF_5
0x376d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2406	ui.c	FUNCTION_67	IF_5
0x3774	          0x488b10	                    mov rdx, qword [rax]	      2406	ui.c	FUNCTION_67	IF_5
0x3777	    0x488b05000000	            mov rax, qword [0x040037be] 	      2406	ui.c	FUNCTION_67	IF_5
0x377e	          0x4839c2	                            cmp rdx, rax	      2406	ui.c	FUNCTION_67	IF_5
0x3781	            0x740a	                            je 0x40037cd	      2406	ui.c	FUNCTION_67	IF_5
0x3783	      0xb800000000	                              mov eax, 0	      2407	ui.c	FUNCTION_67	IF_5
0x3788	      0xe9f1030000	                           jmp 0x4003bbe	      2407	ui.c	FUNCTION_67	IF_5
0x378d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2409	ui.c	FUNCTION_67	CALL_1
0x3791	          0x4889c7	                            mov rdi, rax	      2409	ui.c	FUNCTION_67	CALL_1
0x3794	      0xe800000000	                          call 0x40037d9	      2409	ui.c	FUNCTION_67	CALL_1
0x3799	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2410	ui.c	FUNCTION_67	CALL_2
0x379d	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      2410	ui.c	FUNCTION_67	CALL_2
0x37a4	        0x488d45a8	                   lea rax, [rbp - 0x58]	      2410	ui.c	FUNCTION_67	CALL_2
0x37a8	          0x4889ce	                            mov rsi, rcx	      2410	ui.c	FUNCTION_67	CALL_2
0x37ab	          0x4889c7	                            mov rdi, rax	      2410	ui.c	FUNCTION_67	CALL_2
0x37ae	      0xe800000000	                          call 0x40037f3	      2410	ui.c	FUNCTION_67	CALL_2
0x37b3	          0x89459c	             mov dword [rbp - 0x64], eax	      2410	ui.c	FUNCTION_67	CALL_2
0x37b6	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2411	ui.c	FUNCTION_67	IF_6
0x37ba	            0x790a	                           jns 0x4003806	      2411	ui.c	FUNCTION_67	IF_6
0x37bc	      0xb800000000	                              mov eax, 0	      2412	ui.c	FUNCTION_67	IF_6
0x37c1	      0xe9b8030000	                           jmp 0x4003bbe	      2412	ui.c	FUNCTION_67	IF_6
0x37c6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2415	ui.c	FUNCTION_67	IF_7
0x37cd	          0x488b10	                    mov rdx, qword [rax]	      2415	ui.c	FUNCTION_67	IF_7
0x37d0	    0x488b05000000	            mov rax, qword [0x04003817] 	      2415	ui.c	FUNCTION_67	IF_7
0x37d7	          0x4839c2	                            cmp rdx, rax	      2415	ui.c	FUNCTION_67	IF_7
0x37da	            0x7518	                           jne 0x4003834	      2415	ui.c	FUNCTION_67	IF_7
0x37dc	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2416	ui.c	FUNCTION_67	IF_7
0x37e3	          0x488b00	                    mov rax, qword [rax]	      2416	ui.c	FUNCTION_67	IF_7
0x37e6	        0x488d5001	                      lea rdx, [rax + 1]	      2416	ui.c	FUNCTION_67	IF_7
0x37ea	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2416	ui.c	FUNCTION_67	IF_7
0x37f1	          0x488910	                    mov qword [rax], rdx	      2416	ui.c	FUNCTION_67	IF_7
0x37f4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2420	ui.c	FUNCTION_67	IF_8
0x37fb	          0x488b10	                    mov rdx, qword [rax]	      2420	ui.c	FUNCTION_67	IF_8
0x37fe	    0x488b05000000	            mov rax, qword [0x04003845] 	      2420	ui.c	FUNCTION_67	IF_8
0x3805	          0x4839c2	                            cmp rdx, rax	      2420	ui.c	FUNCTION_67	IF_8
0x3808	            0x752a	                           jne 0x4003874	      2420	ui.c	FUNCTION_67	IF_8
0x380a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2421	ui.c	FUNCTION_67	CALL_3
0x3811	          0x488b18	                    mov rbx, qword [rax]	      2421	ui.c	FUNCTION_67	CALL_3
0x3814	    0x488b05000000	            mov rax, qword [0x0400385b] 	      2421	ui.c	FUNCTION_67	CALL_3
0x381b	          0x4889c7	                            mov rdi, rax	      2421	ui.c	FUNCTION_67	CALL_3
0x381e	      0xe800000000	                          call 0x4003863	      2421	ui.c	FUNCTION_67	CALL_3
0x3823	          0x4801d8	                            add rax, rbx	      2421	ui.c	FUNCTION_67	CALL_3
0x3826	        0x488d5002	                      lea rdx, [rax + 2]	      2421	ui.c	FUNCTION_67	CALL_3
0x382a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2421	ui.c	FUNCTION_67	CALL_3
0x3831	          0x488910	                    mov qword [rax], rdx	      2421	ui.c	FUNCTION_67	CALL_3
0x3834	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2424	ui.c	FUNCTION_67	IF_9
0x383b	          0x488b10	                    mov rdx, qword [rax]	      2424	ui.c	FUNCTION_67	IF_9
0x383e	    0x488b05000000	            mov rax, qword [0x04003885] 	      2424	ui.c	FUNCTION_67	IF_9
0x3845	          0x4839c2	                            cmp rdx, rax	      2424	ui.c	FUNCTION_67	IF_9
0x3848	            0x771c	                            ja 0x40038a6	      2424	ui.c	FUNCTION_67	IF_9
0x384a	    0x488b05000000	            mov rax, qword [0x04003891] 	      2424	ui.c	FUNCTION_67	IF_9
0x3851	          0x48d1e8	                              shr rax, 1	      2424	ui.c	FUNCTION_67	IF_9
0x3854	          0x4889c2	                            mov rdx, rax	      2424	ui.c	FUNCTION_67	IF_9
0x3857	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2424	ui.c	FUNCTION_67	IF_9
0x385e	          0x488b00	                    mov rax, qword [rax]	      2424	ui.c	FUNCTION_67	IF_9
0x3861	          0x4839c2	                            cmp rdx, rax	      2424	ui.c	FUNCTION_67	IF_9
0x3864	            0x722d	                            jb 0x40038d3	      2424	ui.c	FUNCTION_67	IF_9
0x3866	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2425	ui.c	FUNCTION_67	CALL_4
0x386d	          0x488b00	                    mov rax, qword [rax]	      2425	ui.c	FUNCTION_67	CALL_4
0x3870	          0x8d5001	                      lea edx, [rax + 1]	      2425	ui.c	FUNCTION_67	CALL_4
0x3873	    0x488b05000000	            mov rax, qword [0x040038ba] 	      2425	ui.c	FUNCTION_67	CALL_4
0x387a	            0x89d6	                            mov esi, edx	      2425	ui.c	FUNCTION_67	CALL_4
0x387c	          0x4889c7	                            mov rdi, rax	      2425	ui.c	FUNCTION_67	CALL_4
0x387f	      0xe800000000	                          call 0x40038c4	      2425	ui.c	FUNCTION_67	CALL_4
0x3884	          0x4889c2	                            mov rdx, rax	      2425	ui.c	FUNCTION_67	CALL_4
0x3887	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2425	ui.c	FUNCTION_67	CALL_4
0x388e	          0x488910	                    mov qword [rax], rdx	      2425	ui.c	FUNCTION_67	CALL_4
0x3891	            0xeb11	                           jmp 0x40038e4	      2425	ui.c	FUNCTION_67	CALL_4
0x3893	    0x488b15000000	            mov rdx, qword [0x040038da] 	      2427	ui.c	FUNCTION_67	ELSE_2
0x389a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2427	ui.c	FUNCTION_67	ELSE_2
0x38a1	          0x488910	                    mov qword [rax], rdx	      2427	ui.c	FUNCTION_67	ELSE_2
0x38a4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x38ab	          0x488b00	                    mov rax, qword [rax]	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x38ae	          0x4885c0	                           test rax, rax	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x38b1	            0x7516	                           jne 0x4003909	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x38b3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x38b7	          0x4889c7	                            mov rdi, rax	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x38ba	      0xe800000000	                          call 0x40038ff	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x38bf	      0xb800000000	                              mov eax, 0	      2431	ui.c	FUNCTION_67	ELSE_2	IF_10
0x38c4	      0xe9b5020000	                           jmp 0x4003bbe	      2431	ui.c	FUNCTION_67	ELSE_2	IF_10
0x38c9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2433	ui.c	FUNCTION_67
0x38d0	          0x488b00	                    mov rax, qword [rax]	      2433	ui.c	FUNCTION_67
0x38d3	    0x488905000000	            mov qword [0x0400391a], rax 	      2433	ui.c	FUNCTION_67
0x38da	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2434	ui.c	FUNCTION_67
0x38e1	          0x488b00	                    mov rax, qword [rax]	      2434	ui.c	FUNCTION_67
0x38e4	    0x488905000000	            mov qword [0x0400392b], rax 	      2434	ui.c	FUNCTION_67
0x38eb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2436	ui.c	FUNCTION_67	IF_11
0x38f2	          0x488b00	                    mov rax, qword [rax]	      2436	ui.c	FUNCTION_67	IF_11
0x38f5	        0x4883f81f	                           cmp rax, 0x1f	      2436	ui.c	FUNCTION_67	IF_11
0x38f9	            0x7420	                            je 0x400395b	      2436	ui.c	FUNCTION_67	IF_11
0x38fb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2438	ui.c	FUNCTION_67	IF_11
0x3902	          0x488b10	                    mov rdx, qword [rax]	      2438	ui.c	FUNCTION_67	IF_11
0x3905	    0x488b05000000	            mov rax, qword [0x0400394c] 	      2438	ui.c	FUNCTION_67	IF_11
0x390c	          0x4839c2	                            cmp rdx, rax	      2438	ui.c	FUNCTION_67	IF_11
0x390f	            0x7543	                           jne 0x4003994	      2438	ui.c	FUNCTION_67	IF_11
0x3911	    0x8b0500000000	            mov eax, dword [0x04003957] 	      2438	ui.c	FUNCTION_67	IF_11
0x3917	            0x85c0	                           test eax, eax	      2438	ui.c	FUNCTION_67	IF_11
0x3919	            0x7439	                            je 0x4003994	      2438	ui.c	FUNCTION_67	IF_11
0x391b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x3922	          0x488b10	                    mov rdx, qword [rax]	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x3925	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x3929	    0x488b05000000	            mov rax, qword [0x04003970] 	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x3930	          0x4889ce	                            mov rsi, rcx	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x3933	          0x4889c7	                            mov rdi, rax	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x3936	      0xe800000000	                          call 0x400397b	      2442	ui.c	FUNCTION_67	IF_11	CALL_6
0x393b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2443	ui.c	FUNCTION_67	IF_11
0x3942	          0x488b10	                    mov rdx, qword [rax]	      2443	ui.c	FUNCTION_67	IF_11
0x3945	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2443	ui.c	FUNCTION_67	IF_11
0x394c	          0x488910	                    mov qword [rax], rdx	      2443	ui.c	FUNCTION_67	IF_11
0x394f	      0xe90c020000	                           jmp 0x4003ba0	      2443	ui.c	FUNCTION_67	IF_11
0x3954	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x395b	          0x488b10	                    mov rdx, qword [rax]	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x395e	    0x488b05000000	            mov rax, qword [0x040039a5] 	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3965	          0x4839c2	                            cmp rdx, rax	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3968	            0x741a	                            je 0x40039c4	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x396a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3971	          0x488b10	                    mov rdx, qword [rax]	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3974	    0x488b05000000	            mov rax, qword [0x040039bb] 	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x397b	          0x4839c2	                            cmp rdx, rax	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x397e	     0xf85f3000000	                           jne 0x4003ab7	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3984	    0x488b05000000	            mov rax, qword [0x040039cb] 	      2448	ui.c	FUNCTION_67	ELSE_3	IF_12
0x398b	        0x488945b0	             mov qword [rbp - 0x50], rax	      2448	ui.c	FUNCTION_67	ELSE_3	IF_12
0x398f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x3996	          0x488b10	                    mov rdx, qword [rax]	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x3999	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x399d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x39a1	          0x4889ce	                            mov rsi, rcx	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x39a4	          0x4889c7	                            mov rdi, rax	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x39a7	      0xe800000000	                          call 0x40039ec	      2452	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_7
0x39ac	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x39b0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x39b7	          0x488b00	                    mov rax, qword [rax]	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x39ba	          0x4801d0	                            add rax, rdx	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x39bd	          0xc60000	                       mov byte [rax], 0	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x39c0	    0x8b0500000000	            mov eax, dword [0x04003a06] 	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39c6	            0x85c0	                           test eax, eax	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39c8	            0x7407	                            je 0x4003a11	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39ca	      0xe800000000	                          call 0x4003a0f	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39cf	            0xeb07	                           jmp 0x4003a18	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39d1	    0x488b05000000	            mov rax, qword [0x04003a18] 	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39d8	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39dc	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39e0	          0x4989d0	                             mov r8, rdx	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39e3	      0xb901000000	                              mov ecx, 1	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39e8	      0xba01000000	                              mov edx, 1	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39ed	          0x4889c7	                            mov rdi, rax	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39f0	      0xe800000000	                          call 0x4003a35	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39f5	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x39f8	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2456	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x39fc	            0x7416	                            je 0x4003a54	      2456	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x39fe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2458	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13	CALL_9
0x3a02	          0x4889c7	                            mov rdi, rax	      2458	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13	CALL_9
0x3a05	      0xe800000000	                          call 0x4003a4a	      2458	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13	CALL_9
0x3a0a	      0xb800000000	                              mov eax, 0	      2459	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x3a0f	      0xe96a010000	                           jmp 0x4003bbe	      2459	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x3a14	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a18	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a1f	          0x488910	                    mov qword [rax], rdx	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a22	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a26	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a2d	          0x488910	                    mov qword [rax], rdx	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a30	    0x488b15000000	            mov rdx, qword [0x04003a77] 	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a37	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a3e	          0x488910	                    mov qword [rax], rdx	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a41	    0x488b05000000	            mov rax, qword [0x04003a88] 	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x3a48	          0x4889c7	                            mov rdi, rax	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x3a4b	      0xe800000000	                          call 0x4003a90	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x3a50	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a57	          0x488b00	                    mov rax, qword [rax]	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a5a	    0x488905000000	            mov qword [0x04003aa1], rax 	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a61	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a68	          0x488b00	                    mov rax, qword [rax]	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a6b	    0x488905000000	            mov qword [0x04003ab2], rax 	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a72	      0xe9e9000000	                           jmp 0x4003ba0	      2446	ui.c	FUNCTION_67	ELSE_3	IF_12
0x3a77	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3a7e	          0x488b10	                    mov rdx, qword [rax]	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3a81	    0x488b05000000	            mov rax, qword [0x04003ac8] 	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3a88	          0x4839c2	                            cmp rdx, rax	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3a8b	     0xf858a000000	                           jne 0x4003b5b	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3a91	    0x488b05000000	            mov rax, qword [0x04003ad8] 	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x3a98	          0x4889c7	                            mov rdi, rax	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x3a9b	      0xe800000000	                          call 0x4003ae0	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x3aa0	          0x8945a0	             mov dword [rbp - 0x60], eax	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x3aa3	    0x488b05000000	            mov rax, qword [0x04003aea] 	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3aaa	          0x8b559c	             mov edx, dword [rbp - 0x64]	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3aad	            0x8810	                      mov byte [rax], dl	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3aaf	    0x488b05000000	            mov rax, qword [0x04003af6] 	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x3ab6	    0x488b15000000	            mov rdx, qword [0x04003afd] 	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x3abd	        0x4883c201	                              add rdx, 1	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x3ac1	          0x4889c6	                            mov rsi, rax	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x3ac4	          0x4889d7	                            mov rdi, rdx	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x3ac7	      0xe800000000	                          call 0x4003b0c	      2474	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_12
0x3acc	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3ad3	          0x488b10	                    mov rdx, qword [rax]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3ad6	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3ad9	            0x4898	                                    cdqe	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3adb	          0x4829c2	                            sub rdx, rax	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3ade	          0x4889d0	                            mov rax, rdx	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3ae1	        0x488d50fe	                      lea rdx, [rax - 2]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3ae5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3ae9	    0x488b0d000000	            mov rcx, qword [0x04003b30] 	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3af0	          0x8b75a0	             mov esi, dword [rbp - 0x60]	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3af3	          0x4863f6	                         movsxd rsi, esi	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3af6	        0x4883c602	                              add rsi, 2	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3afa	          0x4801f1	                            add rcx, rsi	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3afd	          0x4889c6	                            mov rsi, rax	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3b00	          0x4889cf	                            mov rdi, rcx	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3b03	      0xe800000000	                          call 0x4003b48	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x3b08	    0x488b15000000	            mov rdx, qword [0x04003b4f] 	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3b0f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3b16	          0x488910	                    mov qword [rax], rdx	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3b19	            0xeb45	                           jmp 0x4003ba0	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x3b1b	    0x488b05000000	            mov rax, qword [0x04003b62] 	      2481	ui.c	FUNCTION_67	ELSE_5
0x3b22	          0x8b559c	             mov edx, dword [rbp - 0x64]	      2481	ui.c	FUNCTION_67	ELSE_5
0x3b25	            0x8810	                      mov byte [rax], dl	      2481	ui.c	FUNCTION_67	ELSE_5
0x3b27	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x3b2e	          0x488b00	                    mov rax, qword [rax]	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x3b31	        0x488d50ff	                      lea rdx, [rax - 1]	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x3b35	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x3b39	    0x488b0d000000	            mov rcx, qword [0x04003b80] 	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x3b40	        0x4883c101	                              add rcx, 1	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x3b44	          0x4889c6	                            mov rsi, rax	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x3b47	          0x4889cf	                            mov rdi, rcx	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x3b4a	      0xe800000000	                          call 0x4003b8f	      2482	ui.c	FUNCTION_67	ELSE_5	CALL_14
0x3b4f	    0x488b15000000	            mov rdx, qword [0x04003b96] 	      2483	ui.c	FUNCTION_67	ELSE_5
0x3b56	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2483	ui.c	FUNCTION_67	ELSE_5
0x3b5d	          0x488910	                    mov qword [rax], rdx	      2483	ui.c	FUNCTION_67	ELSE_5
0x3b60	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2485	ui.c	FUNCTION_67
0x3b67	    0xc70008000000	                      mov dword [rax], 8	      2485	ui.c	FUNCTION_67
0x3b6d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2486	ui.c	FUNCTION_67	CALL_15
0x3b71	          0x4889c7	                            mov rdi, rax	      2486	ui.c	FUNCTION_67	CALL_15
0x3b74	      0xe800000000	                          call 0x4003bb9	      2486	ui.c	FUNCTION_67	CALL_15
0x3b79	      0xb801000000	                              mov eax, 1	      2487	ui.c	FUNCTION_67
0x3b7e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2488	ui.c	FUNCTION_67
0x3b82	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2488	ui.c	FUNCTION_67
0x3b8b	            0x7405	                            je 0x4003bd2	      2488	ui.c	FUNCTION_67
0x3b8d	      0xe800000000	                          call 0x4003bd2	      2488	ui.c	FUNCTION_67
0x3b92	    0x4881c4a80000	                           add rsp, 0xa8	      2488	ui.c	FUNCTION_67
0x3b99	              0x5b	                                 pop rbx	      2488	ui.c	FUNCTION_67
0x3b9a	              0x5d	                                 pop rbp	      2488	ui.c	FUNCTION_67
0x3b9b	              0xc3	                                     ret	      2488	ui.c	FUNCTION_67
ui_inchar_undo	CALL,5:WHILE,0:IF,3:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	69
0xe3	              0x55	                                push rbp	        77	ui.c	FUNCTION_2
0xe4	          0x4889e5	                            mov rbp, rsp	        77	ui.c	FUNCTION_2
0xe7	        0x4883ec20	                           sub rsp, 0x20	        77	ui.c	FUNCTION_2
0xeb	        0x48897de8	             mov qword [rbp - 0x18], rdi	        77	ui.c	FUNCTION_2
0xef	          0x8975e4	             mov dword [rbp - 0x1c], esi	        77	ui.c	FUNCTION_2
0xf2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        81	ui.c	FUNCTION_2
0xf5	          0x8945f4	              mov dword [rbp - 0xc], eax	        81	ui.c	FUNCTION_2
0xf8	    0x488b05000000	            mov rax, qword [0x0400013f] 	        82	ui.c	FUNCTION_2	IF_1
0xff	          0x4885c0	                           test rax, rax	        82	ui.c	FUNCTION_2	IF_1
0x102	            0x7413	                            je 0x4000157	        82	ui.c	FUNCTION_2	IF_1
0x104	    0x8b1500000000	            mov edx, dword [0x0400014a] 	        83	ui.c	FUNCTION_2	IF_1
0x10a	    0x8b0500000000	            mov eax, dword [0x04000150] 	        83	ui.c	FUNCTION_2	IF_1
0x110	            0x29c2	                            sub edx, eax	        83	ui.c	FUNCTION_2	IF_1
0x112	            0x89d0	                            mov eax, edx	        83	ui.c	FUNCTION_2	IF_1
0x114	           0x145f4	              add dword [rbp - 0xc], eax	        83	ui.c	FUNCTION_2	IF_1
0x117	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        84	ui.c	FUNCTION_2	CALL_1
0x11a	            0x89c7	                            mov edi, eax	        84	ui.c	FUNCTION_2	CALL_1
0x11c	      0xe800000000	                          call 0x4000161	        84	ui.c	FUNCTION_2	CALL_1
0x121	        0x488945f8	                mov qword [rbp - 8], rax	        84	ui.c	FUNCTION_2	CALL_1
0x125	      0x48837df800	                  cmp qword [rbp - 8], 0	        85	ui.c	FUNCTION_2	IF_2
0x12a	     0xf84b8000000	                            je 0x4000228	        85	ui.c	FUNCTION_2	IF_2
0x130	    0x488b05000000	            mov rax, qword [0x04000177] 	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x137	          0x4885c0	                           test rax, rax	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x13a	            0x7475	                            je 0x40001f1	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x13c	    0x8b1500000000	            mov edx, dword [0x04000182] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x142	    0x8b0500000000	            mov eax, dword [0x04000188] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x148	            0x29c2	                            sub edx, eax	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x14a	            0x89d0	                            mov eax, edx	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x14c	          0x4863d0	                         movsxd rdx, eax	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x14f	    0x488b0d000000	            mov rcx, qword [0x04000196] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x156	    0x8b0500000000	            mov eax, dword [0x0400019c] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x15c	            0x4898	                                    cdqe	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x15e	          0x4801c1	                            add rcx, rax	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x161	        0x488b45f8	                mov rax, qword [rbp - 8]	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x165	          0x4889ce	                            mov rsi, rcx	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x168	          0x4889c7	                            mov rdi, rax	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x16b	      0xe800000000	                          call 0x40001b0	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x170	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x173	          0x4863d0	                         movsxd rdx, eax	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x176	    0x8b0500000000	            mov eax, dword [0x040001bc] 	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x17c	          0x4863c8	                         movsxd rcx, eax	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x17f	    0x8b0500000000	            mov eax, dword [0x040001c5] 	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x185	            0x4898	                                    cdqe	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x187	          0x4829c1	                            sub rcx, rax	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x18a	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x18e	          0x4801c1	                            add rcx, rax	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x191	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x195	          0x4889c6	                            mov rsi, rax	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x198	          0x4889cf	                            mov rdi, rcx	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x19b	      0xe800000000	                          call 0x40001e0	        90	ui.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x1a0	    0x488b05000000	            mov rax, qword [0x040001e7] 	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x1a7	          0x4889c7	                            mov rdi, rax	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x1aa	      0xe800000000	                          call 0x40001ef	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x1af	            0xeb19	                           jmp 0x400020a	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x1b1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x1b4	          0x4863d0	                         movsxd rdx, eax	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x1b7	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x1bb	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x1bf	          0x4889ce	                            mov rsi, rcx	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x1c2	          0x4889c7	                            mov rdi, rax	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x1c5	      0xe800000000	                          call 0x400020a	        94	ui.c	FUNCTION_2	IF_2	CALL_5
0x1ca	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	ui.c	FUNCTION_2	IF_2
0x1ce	    0x488905000000	            mov qword [0x04000215], rax 	        95	ui.c	FUNCTION_2	IF_2
0x1d5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        96	ui.c	FUNCTION_2	IF_2
0x1d8	    0x890500000000	            mov dword [0x0400021e], eax 	        96	ui.c	FUNCTION_2	IF_2
0x1de	    0xc70500000000	               mov dword [0x04000228], 0	        97	ui.c	FUNCTION_2	IF_2
0x1e8	              0x90	                                     nop	        99	ui.c	FUNCTION_2
0x1e9	              0xc9	                                   leave	        99	ui.c	FUNCTION_2
0x1ea	              0xc3	                                     ret	        99	ui.c	FUNCTION_2
ui_inchar	CALL,14:WHILE,0:IF,11:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	150
0x1eb	              0x55	                                push rbp	       121	ui.c	FUNCTION_3
0x1ec	          0x4889e5	                            mov rbp, rsp	       121	ui.c	FUNCTION_3
0x1ef	              0x53	                                push rbx	       121	ui.c	FUNCTION_3
0x1f0	        0x4883ec38	                           sub rsp, 0x38	       121	ui.c	FUNCTION_3
0x1f4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       121	ui.c	FUNCTION_3
0x1f8	          0x8975d4	             mov dword [rbp - 0x2c], esi	       121	ui.c	FUNCTION_3
0x1fb	        0x488955c8	             mov qword [rbp - 0x38], rdx	       121	ui.c	FUNCTION_3
0x1ff	          0x894dd0	             mov dword [rbp - 0x30], ecx	       121	ui.c	FUNCTION_3
0x202	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       122	ui.c	FUNCTION_3
0x209	    0x488b05000000	            mov rax, qword [0x04000250] 	       128	ui.c	FUNCTION_3	IF_1
0x210	          0x4885c0	                           test rax, rax	       128	ui.c	FUNCTION_3	IF_1
0x213	     0xf84b0000000	                            je 0x4000309	       128	ui.c	FUNCTION_3	IF_1
0x219	    0x8b1500000000	            mov edx, dword [0x0400025f] 	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x21f	    0x8b0500000000	            mov eax, dword [0x04000265] 	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x225	            0x29c2	                            sub edx, eax	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x227	            0x89d0	                            mov eax, edx	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x229	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x22c	            0x7f5b	                            jg 0x40002c9	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x22e	    0x8b0500000000	            mov eax, dword [0x04000274] 	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x234	          0x4863d0	                         movsxd rdx, eax	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x237	    0x488b0d000000	            mov rcx, qword [0x0400027e] 	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x23e	    0x8b0500000000	            mov eax, dword [0x04000284] 	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x244	            0x4898	                                    cdqe	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x246	          0x4801c1	                            add rcx, rax	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x249	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x24d	          0x4889ce	                            mov rsi, rcx	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x250	          0x4889c7	                            mov rdi, rax	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x253	      0xe800000000	                          call 0x4000298	       132	ui.c	FUNCTION_3	IF_1	IF_2	CALL_1
0x258	    0x488b05000000	            mov rax, qword [0x0400029f] 	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x25f	          0x4885c0	                           test rax, rax	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x262	            0x741a	                            je 0x40002be	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x264	    0x488b05000000	            mov rax, qword [0x040002ab] 	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x26b	          0x4889c7	                            mov rdi, rax	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x26e	      0xe800000000	                          call 0x40002b3	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x273	    0x48c705000000	               mov qword [0x040002be], 0	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x27e	    0x8b0500000000	            mov eax, dword [0x040002c4] 	       134	ui.c	FUNCTION_3	IF_1	IF_2
0x284	      0xe9b4010000	                           jmp 0x400047d	       134	ui.c	FUNCTION_3	IF_1	IF_2
0x289	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x28c	          0x4863d0	                         movsxd rdx, eax	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x28f	    0x488b0d000000	            mov rcx, qword [0x040002d6] 	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x296	    0x8b0500000000	            mov eax, dword [0x040002dc] 	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x29c	            0x4898	                                    cdqe	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x29e	          0x4801c1	                            add rcx, rax	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x2a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x2a5	          0x4889ce	                            mov rsi, rcx	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x2a8	          0x4889c7	                            mov rdi, rax	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x2ab	      0xe800000000	                          call 0x40002f0	       136	ui.c	FUNCTION_3	IF_1	CALL_3
0x2b0	    0x8b1500000000	            mov edx, dword [0x040002f6] 	       137	ui.c	FUNCTION_3	IF_1
0x2b6	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       137	ui.c	FUNCTION_3	IF_1
0x2b9	             0x1d0	                            add eax, edx	       137	ui.c	FUNCTION_3	IF_1
0x2bb	    0x890500000000	            mov dword [0x04000301], eax 	       137	ui.c	FUNCTION_3	IF_1
0x2c1	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       138	ui.c	FUNCTION_3	IF_1
0x2c4	      0xe974010000	                           jmp 0x400047d	       138	ui.c	FUNCTION_3	IF_1
0x2c9	    0x8b0500000000	            mov eax, dword [0x0400030f] 	       143	ui.c	FUNCTION_3	IF_3
0x2cf	          0x83f801	                              cmp eax, 1	       143	ui.c	FUNCTION_3	IF_3
0x2d2	            0x750c	                           jne 0x4000320	       143	ui.c	FUNCTION_3	IF_3
0x2d4	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       143	ui.c	FUNCTION_3	IF_3
0x2d9	            0x7405	                            je 0x4000320	       143	ui.c	FUNCTION_3	IF_3
0x2db	      0xe800000000	                          call 0x4000320	       144	ui.c	FUNCTION_3	CALL_4
0x2e0	      0xe800000000	                          call 0x4000325	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x2e5	            0x85c0	                           test eax, eax	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x2e7	     0xf8492000000	                            je 0x40003bf	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x2ed	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x2f2	            0x7807	                            js 0x400033b	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x2f4	      0x48837dc809	               cmp qword [rbp - 0x38], 9	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x2f9	            0x7e06	                           jle 0x4000341	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x2fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x2ff	            0xeb05	                           jmp 0x4000346	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x301	      0xb80a000000	                            mov eax, 0xa	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x306	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x309	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x30c	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x310	            0x89d1	                            mov ecx, edx	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x312	          0x4889c2	                            mov rdx, rax	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x315	      0xe800000000	                          call 0x400035a	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x31a	          0x8945ec	             mov dword [rbp - 0x14], eax	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x31d	        0x837dec00	               cmp dword [rbp - 0x14], 0	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x321	     0xf8ffc000000	                            jg 0x4000463	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x327	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x32a	            0x89c7	                            mov edi, eax	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x32c	      0xe800000000	                          call 0x4000371	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x331	            0x85c0	                           test eax, eax	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x333	     0xf85ea000000	                           jne 0x4000463	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x339	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x33e	     0xf89df000000	                           jns 0x4000463	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x344	      0x48837dc8ff	cmp qword [rbp - 0x38], 0xffffffffffffffff	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x349	            0x7521	                           jne 0x40003ac	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x34b	    0x8b0500000000	            mov eax, dword [0x04000391] 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x351	          0x83c001	                              add eax, 1	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x354	    0x890500000000	            mov dword [0x0400039a], eax 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x35a	    0x8b0500000000	            mov eax, dword [0x040003a0] 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x360	      0x3de8030000	                          cmp eax, 0x3e8	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x365	            0x7505	                           jne 0x40003ac	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x367	      0xe800000000	                          call 0x40003ac	       163	ui.c	FUNCTION_3	IF_4	CALL_8
0x36c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       164	ui.c	FUNCTION_3	IF_4
0x370	          0xc6000d	                     mov byte [rax], 0xd	       164	ui.c	FUNCTION_3	IF_4
0x373	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       165	ui.c	FUNCTION_3	IF_4
0x37a	      0xe9a4000000	                           jmp 0x4000463	       166	ui.c	FUNCTION_3	IF_4
0x37f	      0x48837dc8ff	cmp qword [rbp - 0x38], 0xffffffffffffffff	       171	ui.c	FUNCTION_3	IF_7
0x384	            0x7407	                            je 0x40003cd	       171	ui.c	FUNCTION_3	IF_7
0x386	      0x48837dc864	           cmp qword [rbp - 0x38], 0x64 	       171	ui.c	FUNCTION_3	IF_7
0x38b	            0x7e36	                           jle 0x4000403	       171	ui.c	FUNCTION_3	IF_7
0x38d	      0xbffeffffff	                     mov edi, 0xfffffffe	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x392	      0xe800000000	                          call 0x40003d7	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x397	    0x488b05000000	            mov rax, qword [0x040003de] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x39e	    0x8b90401c0000	          mov edx, dword [rax + 0x1c40] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x3a4	    0x8b0500000000	            mov eax, dword [0x040003ea] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x3aa	            0x89d3	                            mov ebx, edx	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x3ac	             0x9c3	                             or ebx, eax	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x3ae	      0xe800000000	                          call 0x40003f3	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x3b3	            0x21d8	                            and eax, ebx	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x3b5	            0x85c0	                           test eax, eax	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x3b7	            0x740a	                            je 0x4000403	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x3b9	    0xc70500000000	               mov dword [0x04000403], 0	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x3c3	    0x8b0500000000	            mov eax, dword [0x04000409] 	       183	ui.c	FUNCTION_3	IF_9
0x3c9	            0x85c0	                           test eax, eax	       183	ui.c	FUNCTION_3	IF_9
0x3cb	            0x741b	                            je 0x4000428	       183	ui.c	FUNCTION_3	IF_9
0x3cd	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       184	ui.c	FUNCTION_3	CALL_11
0x3d0	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       184	ui.c	FUNCTION_3	CALL_11
0x3d4	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	       184	ui.c	FUNCTION_3	CALL_11
0x3d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       184	ui.c	FUNCTION_3	CALL_11
0x3db	          0x4889c7	                            mov rdi, rax	       184	ui.c	FUNCTION_3	CALL_11
0x3de	      0xe800000000	                          call 0x4000423	       184	ui.c	FUNCTION_3	CALL_11
0x3e3	          0x8945ec	             mov dword [rbp - 0x14], eax	       184	ui.c	FUNCTION_3	CALL_11
0x3e6	            0xeb19	                           jmp 0x4000441	       184	ui.c	FUNCTION_3	CALL_11
0x3e8	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       190	ui.c	FUNCTION_3	CALL_12
0x3eb	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       190	ui.c	FUNCTION_3	CALL_12
0x3ef	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	       190	ui.c	FUNCTION_3	CALL_12
0x3f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       190	ui.c	FUNCTION_3	CALL_12
0x3f6	          0x4889c7	                            mov rdi, rax	       190	ui.c	FUNCTION_3	CALL_12
0x3f9	      0xe800000000	                          call 0x400043e	       190	ui.c	FUNCTION_3	CALL_12
0x3fe	          0x8945ec	             mov dword [rbp - 0x14], eax	       190	ui.c	FUNCTION_3	CALL_12
0x401	      0x48837dc8ff	cmp qword [rbp - 0x38], 0xffffffffffffffff	       193	ui.c	FUNCTION_3	IF_10
0x406	            0x7407	                            je 0x400044f	       193	ui.c	FUNCTION_3	IF_10
0x408	      0x48837dc864	           cmp qword [rbp - 0x38], 0x64 	       193	ui.c	FUNCTION_3	IF_10
0x40d	            0x7e0a	                           jle 0x4000459	       193	ui.c	FUNCTION_3	IF_10
0x40f	      0xbfffffffff	                     mov edi, 0xffffffff	       195	ui.c	FUNCTION_3	CALL_13
0x414	      0xe800000000	                          call 0x4000459	       195	ui.c	FUNCTION_3	CALL_13
0x419	    0xc70500000000	               mov dword [0x04000463], 1	       197	ui.c	FUNCTION_3
0x423	    0x8b0500000000	            mov eax, dword [0x04000469] 	       203	ui.c	FUNCTION_3	IF_11
0x429	          0x83f801	                              cmp eax, 1	       203	ui.c	FUNCTION_3	IF_11
0x42c	            0x750c	                           jne 0x400047a	       203	ui.c	FUNCTION_3	IF_11
0x42e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       203	ui.c	FUNCTION_3	IF_11
0x433	            0x7405	                            je 0x400047a	       203	ui.c	FUNCTION_3	IF_11
0x435	      0xe800000000	                          call 0x400047a	       204	ui.c	FUNCTION_3	CALL_14
0x43a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       206	ui.c	FUNCTION_3
0x43d	        0x4883c438	                           add rsp, 0x38	       207	ui.c	FUNCTION_3
0x441	              0x5b	                                 pop rbx	       207	ui.c	FUNCTION_3
0x442	              0x5d	                                 pop rbp	       207	ui.c	FUNCTION_3
0x443	              0xc3	                                     ret	       207	ui.c	FUNCTION_3
read_from_input_buf	CALL,3:WHILE,0:IF,3:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	42
0x27e2	              0x55	                                push rbp	      1772	ui.c	FUNCTION_54
0x27e3	          0x4889e5	                            mov rbp, rsp	      1772	ui.c	FUNCTION_54
0x27e6	        0x4883ec10	                           sub rsp, 0x10	      1772	ui.c	FUNCTION_54
0x27ea	        0x48897df8	                mov qword [rbp - 8], rdi	      1772	ui.c	FUNCTION_54
0x27ee	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1772	ui.c	FUNCTION_54
0x27f2	    0x8b0500000000	            mov eax, dword [0x04002838] 	      1773	ui.c	FUNCTION_54	IF_1
0x27f8	            0x85c0	                           test eax, eax	      1773	ui.c	FUNCTION_54	IF_1
0x27fa	            0x750a	                           jne 0x4002846	      1773	ui.c	FUNCTION_54	IF_1
0x27fc	      0xbf01000000	                              mov edi, 1	      1774	ui.c	FUNCTION_54	CALL_1
0x2801	      0xe800000000	                          call 0x4002846	      1774	ui.c	FUNCTION_54	CALL_1
0x2806	    0x8b0500000000	            mov eax, dword [0x0400284c] 	      1775	ui.c	FUNCTION_54	IF_2
0x280c	            0x4898	                                    cdqe	      1775	ui.c	FUNCTION_54	IF_2
0x280e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1775	ui.c	FUNCTION_54	IF_2
0x2812	            0x7d0c	                           jge 0x4002860	      1775	ui.c	FUNCTION_54	IF_2
0x2814	    0x8b0500000000	            mov eax, dword [0x0400285a] 	      1776	ui.c	FUNCTION_54	IF_2
0x281a	            0x4898	                                    cdqe	      1776	ui.c	FUNCTION_54	IF_2
0x281c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1776	ui.c	FUNCTION_54	IF_2
0x2820	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1777	ui.c	FUNCTION_54	CALL_2
0x2824	        0x488b45f8	                mov rax, qword [rbp - 8]	      1777	ui.c	FUNCTION_54	CALL_2
0x2828	      0xbe00000000	                              mov esi, 0	      1777	ui.c	FUNCTION_54	CALL_2
0x282d	          0x4889c7	                            mov rdi, rax	      1777	ui.c	FUNCTION_54	CALL_2
0x2830	      0xe800000000	                          call 0x4002875	      1777	ui.c	FUNCTION_54	CALL_2
0x2835	    0x8b0500000000	            mov eax, dword [0x0400287b] 	      1778	ui.c	FUNCTION_54
0x283b	            0x89c2	                            mov edx, eax	      1778	ui.c	FUNCTION_54
0x283d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1778	ui.c	FUNCTION_54
0x2841	            0x29c2	                            sub edx, eax	      1778	ui.c	FUNCTION_54
0x2843	            0x89d0	                            mov eax, edx	      1778	ui.c	FUNCTION_54
0x2845	    0x890500000000	            mov dword [0x0400288b], eax 	      1778	ui.c	FUNCTION_54
0x284b	    0x8b0500000000	            mov eax, dword [0x04002891] 	      1779	ui.c	FUNCTION_54	IF_3
0x2851	            0x85c0	                           test eax, eax	      1779	ui.c	FUNCTION_54	IF_3
0x2853	            0x7423	                            je 0x40028b8	      1779	ui.c	FUNCTION_54	IF_3
0x2855	    0x8b0500000000	            mov eax, dword [0x0400289b] 	      1780	ui.c	FUNCTION_54	CALL_3
0x285b	            0x4898	                                    cdqe	      1780	ui.c	FUNCTION_54	CALL_3
0x285d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1780	ui.c	FUNCTION_54	CALL_3
0x2861	    0x488d8a000000	                          lea rcx, [rdx]	      1780	ui.c	FUNCTION_54	CALL_3
0x2868	          0x4889c2	                            mov rdx, rax	      1780	ui.c	FUNCTION_54	CALL_3
0x286b	          0x4889ce	                            mov rsi, rcx	      1780	ui.c	FUNCTION_54	CALL_3
0x286e	      0xbf00000000	                              mov edi, 0	      1780	ui.c	FUNCTION_54	CALL_3
0x2873	      0xe800000000	                          call 0x40028b8	      1780	ui.c	FUNCTION_54	CALL_3
0x2878	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1781	ui.c	FUNCTION_54
0x287c	              0xc9	                                   leave	      1782	ui.c	FUNCTION_54
0x287d	              0xc3	                                     ret	      1782	ui.c	FUNCTION_54
clip_x11_set_selection	CALL,0:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	6
0x3d10	              0x55	                                push rbp	      2546	ui.c	FUNCTION_72
0x3d11	          0x4889e5	                            mov rbp, rsp	      2546	ui.c	FUNCTION_72
0x3d14	        0x48897df8	                mov qword [rbp - 8], rdi	      2546	ui.c	FUNCTION_72
0x3d18	              0x90	                                     nop	      2547	ui.c	FUNCTION_72
0x3d19	              0x5d	                                 pop rbp	      2547	ui.c	FUNCTION_72
0x3d1a	              0xc3	                                     ret	      2547	ui.c	FUNCTION_72
vim_is_input_buf_full	CALL,0:WHILE,0:IF,0:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	8
0x25c6	              0x55	                                push rbp	      1620	ui.c	FUNCTION_44
0x25c7	          0x4889e5	                            mov rbp, rsp	      1620	ui.c	FUNCTION_44
0x25ca	    0x8b0500000000	            mov eax, dword [0x04002610] 	      1621	ui.c	FUNCTION_44
0x25d0	      0x3dff0f0000	                          cmp eax, 0xfff	      1621	ui.c	FUNCTION_44
0x25d5	           0xf9fc0	                                 setg al	      1621	ui.c	FUNCTION_44
0x25d8	           0xfb6c0	                           movzx eax, al	      1621	ui.c	FUNCTION_44
0x25db	              0x5d	                                 pop rbp	      1622	ui.c	FUNCTION_44
0x25dc	              0xc3	                                     ret	      1622	ui.c	FUNCTION_44
clip_gen_set_selection	CALL,3:WHILE,0:IF,3:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	33
0x24eb	              0x55	                                push rbp	      1522	ui.c	FUNCTION_41
0x24ec	          0x4889e5	                            mov rbp, rsp	      1522	ui.c	FUNCTION_41
0x24ef	        0x4883ec10	                           sub rsp, 0x10	      1522	ui.c	FUNCTION_41
0x24f3	        0x48897df8	                mov qword [rbp - 8], rdi	      1522	ui.c	FUNCTION_41
0x24f7	    0x8b0500000000	            mov eax, dword [0x0400253d] 	      1523	ui.c	FUNCTION_41	IF_1
0x24fd	            0x85c0	                           test eax, eax	      1523	ui.c	FUNCTION_41	IF_1
0x24ff	            0x753a	                           jne 0x400257b	      1523	ui.c	FUNCTION_41	IF_1
0x2501	    0x48817df80000	                  cmp qword [rbp - 8], 0	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x2509	            0x750d	                           jne 0x4002558	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x250b	    0x8b0500000000	            mov eax, dword [0x04002551] 	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x2511	          0x83e002	                              and eax, 2	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x2514	            0x85c0	                           test eax, eax	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x2516	            0x7517	                           jne 0x400256f	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x2518	    0x48817df80000	                  cmp qword [rbp - 8], 0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x2520	            0x7519	                           jne 0x400257b	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x2522	    0x8b0500000000	            mov eax, dword [0x04002568] 	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x2528	          0x83e001	                              and eax, 1	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x252b	            0x85c0	                           test eax, eax	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x252d	            0x740c	                            je 0x400257b	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x252f	    0xc70500000000	               mov dword [0x04002579], 1	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x2539	            0xeb24	                           jmp 0x400259f	      1531	ui.c	FUNCTION_41	IF_1	IF_2
0x253b	    0x8b0500000000	            mov eax, dword [0x04002581] 	      1536	ui.c	FUNCTION_41	IF_3
0x2541	            0x85c0	                           test eax, eax	      1536	ui.c	FUNCTION_41	IF_3
0x2543	            0x740e	                            je 0x4002593	      1536	ui.c	FUNCTION_41	IF_3
0x2545	        0x488b45f8	                mov rax, qword [rbp - 8]	      1537	ui.c	FUNCTION_41	CALL_1
0x2549	          0x4889c7	                            mov rdi, rax	      1537	ui.c	FUNCTION_41	CALL_1
0x254c	      0xe800000000	                          call 0x4002591	      1537	ui.c	FUNCTION_41	CALL_1
0x2551	            0xeb0c	                           jmp 0x400259f	      1537	ui.c	FUNCTION_41	CALL_1
0x2553	        0x488b45f8	                mov rax, qword [rbp - 8]	      1540	ui.c	FUNCTION_41	CALL_2
0x2557	          0x4889c7	                            mov rdi, rax	      1540	ui.c	FUNCTION_41	CALL_2
0x255a	      0xe800000000	                          call 0x400259f	      1540	ui.c	FUNCTION_41	CALL_2
0x255f	              0xc9	                                   leave	      1544	ui.c	FUNCTION_41
0x2560	              0xc3	                                     ret	      1544	ui.c	FUNCTION_41
start_global_changes	CALL,0:WHILE,0:IF,2:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	20
0xb87	              0x55	                                push rbp	       614	ui.c	FUNCTION_19
0xb88	          0x4889e5	                            mov rbp, rsp	       614	ui.c	FUNCTION_19
0xb8b	    0x8b0500000000	            mov eax, dword [0x04000bd1] 	       615	ui.c	FUNCTION_19	IF_1
0xb91	          0x83c001	                              add eax, 1	       615	ui.c	FUNCTION_19	IF_1
0xb94	    0x890500000000	            mov dword [0x04000bda], eax 	       615	ui.c	FUNCTION_19	IF_1
0xb9a	    0x8b0500000000	            mov eax, dword [0x04000be0] 	       615	ui.c	FUNCTION_19	IF_1
0xba0	          0x83f801	                              cmp eax, 1	       615	ui.c	FUNCTION_19	IF_1
0xba3	            0x7f36	                            jg 0x4000c1b	       615	ui.c	FUNCTION_19	IF_1
0xba5	    0x8b0500000000	            mov eax, dword [0x04000beb] 	       617	ui.c	FUNCTION_19
0xbab	    0x890500000000	            mov dword [0x04000bf1], eax 	       617	ui.c	FUNCTION_19
0xbb1	    0xc70500000000	               mov dword [0x04000bfb], 0	       618	ui.c	FUNCTION_19
0xbbb	    0x8b0500000000	            mov eax, dword [0x04000c01] 	       620	ui.c	FUNCTION_19	IF_2
0xbc1	            0x85c0	                           test eax, eax	       620	ui.c	FUNCTION_19	IF_2
0xbc3	            0x7417	                            je 0x4000c1c	       620	ui.c	FUNCTION_19	IF_2
0xbc5	    0xc70500000000	               mov dword [0x04000c0f], 0	       622	ui.c	FUNCTION_19	IF_2
0xbcf	    0xc70500000000	               mov dword [0x04000c19], 0	       623	ui.c	FUNCTION_19	IF_2
0xbd9	            0xeb01	                           jmp 0x4000c1c	       623	ui.c	FUNCTION_19	IF_2
0xbdb	              0x90	                                     nop	       616	ui.c	FUNCTION_19	IF_1
0xbdc	              0x5d	                                 pop rbp	       625	ui.c	FUNCTION_19
0xbdd	              0xc3	                                     ret	       625	ui.c	FUNCTION_19
clip_x11_lose_ownership_cb	CALL,2:WHILE,0:IF,1:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	18
0x3b9c	              0x55	                                push rbp	      2492	ui.c	FUNCTION_68
0x3b9d	          0x4889e5	                            mov rbp, rsp	      2492	ui.c	FUNCTION_68
0x3ba0	        0x4883ec10	                           sub rsp, 0x10	      2492	ui.c	FUNCTION_68
0x3ba4	        0x48897df8	                mov qword [rbp - 8], rdi	      2492	ui.c	FUNCTION_68
0x3ba8	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2492	ui.c	FUNCTION_68
0x3bac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2493	ui.c	FUNCTION_68	IF_1
0x3bb0	          0x488b10	                    mov rdx, qword [rax]	      2493	ui.c	FUNCTION_68	IF_1
0x3bb3	    0x488b05000000	            mov rax, qword [0x04003bfa] 	      2493	ui.c	FUNCTION_68	IF_1
0x3bba	          0x4839c2	                            cmp rdx, rax	      2493	ui.c	FUNCTION_68	IF_1
0x3bbd	            0x750c	                           jne 0x4003c0b	      2493	ui.c	FUNCTION_68	IF_1
0x3bbf	      0xbf00000000	                              mov edi, 0	      2494	ui.c	FUNCTION_68	CALL_1
0x3bc4	      0xe800000000	                          call 0x4003c09	      2494	ui.c	FUNCTION_68	CALL_1
0x3bc9	            0xeb0a	                           jmp 0x4003c15	      2497	ui.c	FUNCTION_68
0x3bcb	      0xbf00000000	                              mov edi, 0	      2496	ui.c	FUNCTION_68	CALL_2
0x3bd0	      0xe800000000	                          call 0x4003c15	      2496	ui.c	FUNCTION_68	CALL_2
0x3bd5	              0x90	                                     nop	      2497	ui.c	FUNCTION_68
0x3bd6	              0xc9	                                   leave	      2497	ui.c	FUNCTION_68
0x3bd7	              0xc3	                                     ret	      2497	ui.c	FUNCTION_68
clip_update_modeless_selection	CALL,2:WHILE,0:IF,2:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	67
0x23b0	              0x55	                                push rbp	      1470	ui.c	FUNCTION_38
0x23b1	          0x4889e5	                            mov rbp, rsp	      1470	ui.c	FUNCTION_38
0x23b4	        0x4883ec20	                           sub rsp, 0x20	      1470	ui.c	FUNCTION_38
0x23b8	        0x48897df8	                mov qword [rbp - 8], rdi	      1470	ui.c	FUNCTION_38
0x23bc	          0x8975f4	              mov dword [rbp - 0xc], esi	      1470	ui.c	FUNCTION_38
0x23bf	          0x8955f0	             mov dword [rbp - 0x10], edx	      1470	ui.c	FUNCTION_38
0x23c2	          0x894dec	             mov dword [rbp - 0x14], ecx	      1470	ui.c	FUNCTION_38
0x23c5	        0x448945e8	             mov dword [rbp - 0x18], r8d	      1470	ui.c	FUNCTION_38
0x23c9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1472	ui.c	FUNCTION_38	IF_1
0x23cc	          0x4863d0	                         movsxd rdx, eax	      1472	ui.c	FUNCTION_38	IF_1
0x23cf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1472	ui.c	FUNCTION_38	IF_1
0x23d3	        0x488b4008	                mov rax, qword [rax + 8]	      1472	ui.c	FUNCTION_38	IF_1
0x23d7	          0x4839c2	                            cmp rdx, rax	      1472	ui.c	FUNCTION_38	IF_1
0x23da	            0x750c	                           jne 0x4002428	      1472	ui.c	FUNCTION_38	IF_1
0x23dc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1472	ui.c	FUNCTION_38	IF_1
0x23e0	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1472	ui.c	FUNCTION_38	IF_1
0x23e3	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1472	ui.c	FUNCTION_38	IF_1
0x23e6	            0x7440	                            je 0x4002468	      1472	ui.c	FUNCTION_38	IF_1
0x23e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x23ec	          0x8b5010	            mov edx, dword [rax + 0x10] 	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x23ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x23f3	        0x488b4008	                mov rax, qword [rax + 8]	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x23f7	            0x89c7	                            mov edi, eax	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x23f9	          0x8b75f0	             mov esi, dword [rbp - 0x10]	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x23fc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x23ff	    0x41b803000000	                              mov r8d, 3	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x2405	            0x89d1	                            mov ecx, edx	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x2407	            0x89fa	                            mov edx, edi	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x2409	            0x89c7	                            mov edi, eax	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x240b	      0xe85bf5ffff	               call sym.clip_invert_area	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x2410	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1476	ui.c	FUNCTION_38	IF_1
0x2413	          0x4863d0	                         movsxd rdx, eax	      1476	ui.c	FUNCTION_38	IF_1
0x2416	        0x488b45f8	                mov rax, qword [rbp - 8]	      1476	ui.c	FUNCTION_38	IF_1
0x241a	        0x48895008	                mov qword [rax + 8], rdx	      1476	ui.c	FUNCTION_38	IF_1
0x241e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1477	ui.c	FUNCTION_38	IF_1
0x2422	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1477	ui.c	FUNCTION_38	IF_1
0x2425	          0x895010	             mov dword [rax + 0x10], edx	      1477	ui.c	FUNCTION_38	IF_1
0x2428	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1481	ui.c	FUNCTION_38	IF_2
0x242b	          0x4863d0	                         movsxd rdx, eax	      1481	ui.c	FUNCTION_38	IF_2
0x242e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1481	ui.c	FUNCTION_38	IF_2
0x2432	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1481	ui.c	FUNCTION_38	IF_2
0x2436	          0x4839c2	                            cmp rdx, rax	      1481	ui.c	FUNCTION_38	IF_2
0x2439	            0x750c	                           jne 0x4002487	      1481	ui.c	FUNCTION_38	IF_2
0x243b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1481	ui.c	FUNCTION_38	IF_2
0x243f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1481	ui.c	FUNCTION_38	IF_2
0x2442	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      1481	ui.c	FUNCTION_38	IF_2
0x2445	            0x743c	                            je 0x40024c3	      1481	ui.c	FUNCTION_38	IF_2
0x2447	        0x488b45f8	                mov rax, qword [rbp - 8]	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x244b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x244e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x2452	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x2456	            0x89d7	                            mov edi, edx	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x2458	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x245b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x245e	    0x41b803000000	                              mov r8d, 3	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x2464	            0x89c6	                            mov esi, eax	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x2466	      0xe800f5ffff	               call sym.clip_invert_area	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x246b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1485	ui.c	FUNCTION_38	IF_2
0x246e	          0x4863d0	                         movsxd rdx, eax	      1485	ui.c	FUNCTION_38	IF_2
0x2471	        0x488b45f8	                mov rax, qword [rbp - 8]	      1485	ui.c	FUNCTION_38	IF_2
0x2475	        0x48895018	             mov qword [rax + 0x18], rdx	      1485	ui.c	FUNCTION_38	IF_2
0x2479	        0x488b45f8	                mov rax, qword [rbp - 8]	      1486	ui.c	FUNCTION_38	IF_2
0x247d	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1486	ui.c	FUNCTION_38	IF_2
0x2480	          0x895020	             mov dword [rax + 0x20], edx	      1486	ui.c	FUNCTION_38	IF_2
0x2483	              0x90	                                     nop	      1488	ui.c	FUNCTION_38
0x2484	              0xc9	                                   leave	      1488	ui.c	FUNCTION_38
0x2485	              0xc3	                                     ret	      1488	ui.c	FUNCTION_38
clip_x11_request_selection_cb	CALL,12:WHILE,0:IF,10:ELSE,4:DO,0:SWITCH,0:functions,0:FOR,0	211
0x2f69	              0x55	                                push rbp	      2137	ui.c	FUNCTION_65
0x2f6a	          0x4889e5	                            mov rbp, rsp	      2137	ui.c	FUNCTION_65
0x2f6d	    0x4881ecb00000	                           sub rsp, 0xb0	      2137	ui.c	FUNCTION_65
0x2f74	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2137	ui.c	FUNCTION_65
0x2f78	        0x48897580	             mov qword [rbp - 0x80], rsi	      2137	ui.c	FUNCTION_65
0x2f7c	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      2137	ui.c	FUNCTION_65
0x2f83	    0x48898d70ffff	             mov qword [rbp - 0x90], rcx	      2137	ui.c	FUNCTION_65
0x2f8a	    0x4c898568ffff	              mov qword [rbp - 0x98], r8	      2137	ui.c	FUNCTION_65
0x2f91	    0x4c898d60ffff	              mov qword [rbp - 0xa0], r9	      2137	ui.c	FUNCTION_65
0x2f98	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2137	ui.c	FUNCTION_65
0x2f9c	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2137	ui.c	FUNCTION_65
0x2fa3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2137	ui.c	FUNCTION_65
0x2fac	        0x488945f8	                mov qword [rbp - 8], rax	      2137	ui.c	FUNCTION_65
0x2fb0	            0x31c0	                            xor eax, eax	      2137	ui.c	FUNCTION_65
0x2fb2	    0xc74598ff0000	           mov dword [rbp - 0x68], 0xff 	      2138	ui.c	FUNCTION_65
0x2fb9	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2141	ui.c	FUNCTION_65
0x2fc1	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2144	ui.c	FUNCTION_65
0x2fc9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2147	ui.c	FUNCTION_65	IF_1
0x2fd0	          0x488b10	                    mov rdx, qword [rax]	      2147	ui.c	FUNCTION_65	IF_1
0x2fd3	    0x488b05000000	            mov rax, qword [0x0400301a] 	      2147	ui.c	FUNCTION_65	IF_1
0x2fda	          0x4839c2	                            cmp rdx, rax	      2147	ui.c	FUNCTION_65	IF_1
0x2fdd	            0x750a	                           jne 0x4003029	      2147	ui.c	FUNCTION_65	IF_1
0x2fdf	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2148	ui.c	FUNCTION_65	IF_1
0x2fe7	            0xeb08	                           jmp 0x4003031	      2148	ui.c	FUNCTION_65	IF_1
0x2fe9	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2150	ui.c	FUNCTION_65	ELSE_1
0x2ff1	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x2ff9	            0x740f	                            je 0x400304a	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x2ffb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x3002	          0x488b00	                    mov rax, qword [rax]	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x3005	          0x4885c0	                           test rax, rax	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x3008	            0x751b	                           jne 0x4003065	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x300a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x300e	          0x4889c7	                            mov rdi, rax	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x3011	      0xe800000000	                          call 0x4003056	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x3016	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2155	ui.c	FUNCTION_65	ELSE_1	IF_2
0x301a	    0xc70000000000	                      mov dword [rax], 0	      2155	ui.c	FUNCTION_65	ELSE_1	IF_2
0x3020	      0xe9b3020000	                           jmp 0x4003318	      2156	ui.c	FUNCTION_65	ELSE_1	IF_2
0x3025	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2158	ui.c	FUNCTION_65
0x302c	        0x488945b0	             mov qword [rbp - 0x50], rax	      2158	ui.c	FUNCTION_65
0x3030	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2159	ui.c	FUNCTION_65
0x3037	          0x488b00	                    mov rax, qword [rax]	      2159	ui.c	FUNCTION_65
0x303a	        0x488945a8	             mov qword [rbp - 0x58], rax	      2159	ui.c	FUNCTION_65
0x303e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2160	ui.c	FUNCTION_65	IF_3
0x3045	          0x488b10	                    mov rdx, qword [rax]	      2160	ui.c	FUNCTION_65	IF_3
0x3048	    0x488b05000000	            mov rax, qword [0x0400308f] 	      2160	ui.c	FUNCTION_65	IF_3
0x304f	          0x4839c2	                            cmp rdx, rax	      2160	ui.c	FUNCTION_65	IF_3
0x3052	            0x751f	                           jne 0x40030b3	      2160	ui.c	FUNCTION_65	IF_3
0x3054	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2162	ui.c	FUNCTION_65	IF_3
0x3058	        0x488d5001	                      lea rdx, [rax + 1]	      2162	ui.c	FUNCTION_65	IF_3
0x305c	        0x488955b0	             mov qword [rbp - 0x50], rdx	      2162	ui.c	FUNCTION_65	IF_3
0x3060	           0xfb600	                   movzx eax, byte [rax]	      2162	ui.c	FUNCTION_65	IF_3
0x3063	           0xfb6c0	                           movzx eax, al	      2162	ui.c	FUNCTION_65	IF_3
0x3066	          0x894598	             mov dword [rbp - 0x68], eax	      2162	ui.c	FUNCTION_65	IF_3
0x3069	      0x48836da801	               sub qword [rbp - 0x58], 1	      2163	ui.c	FUNCTION_65	IF_3
0x306e	      0xe915020000	                           jmp 0x40032c8	      2163	ui.c	FUNCTION_65	IF_3
0x3073	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x307a	          0x488b10	                    mov rdx, qword [rax]	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x307d	    0x488b05000000	            mov rax, qword [0x040030c4] 	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x3084	          0x4839c2	                            cmp rdx, rax	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x3087	     0xf85c9000000	                           jne 0x4003196	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x308d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x3091	        0x488d5001	                      lea rdx, [rax + 1]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x3095	        0x488955b0	             mov qword [rbp - 0x50], rdx	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x3099	           0xfb600	                   movzx eax, byte [rax]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x309c	           0xfb6c0	                           movzx eax, al	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x309f	          0x894598	             mov dword [rbp - 0x68], eax	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x30a2	      0x48836da801	               sub qword [rbp - 0x58], 1	      2174	ui.c	FUNCTION_65	ELSE_2	IF_4
0x30a7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2176	ui.c	FUNCTION_65	ELSE_2	IF_4
0x30ab	        0x488945c8	             mov qword [rbp - 0x38], rax	      2176	ui.c	FUNCTION_65	ELSE_2	IF_4
0x30af	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x30b3	          0x4889c7	                            mov rdi, rax	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x30b6	      0xe800000000	                          call 0x40030fb	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x30bb	        0x4883c001	                              add rax, 1	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x30bf	        0x480145b0	            add qword [rbp - 0x50], rax 	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x30c3	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x30c7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x30cb	          0x4829c2	                            sub rdx, rax	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x30ce	          0x4889d0	                            mov rax, rdx	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x30d1	        0x482945a8	             sub qword [rbp - 0x58], rax	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x30d5	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      2182	ui.c	FUNCTION_65	ELSE_2	IF_4
0x30dc	    0x488b15000000	            mov rdx, qword [0x04003123] 	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x30e3	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x30e7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x30eb	          0x4889ce	                            mov rsi, rcx	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x30ee	          0x4889c7	                            mov rdi, rax	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x30f1	      0xe800000000	                          call 0x4003136	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x30f6	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x30f9	            0x85c0	                           test eax, eax	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x30fb	     0xf8487010000	                            je 0x40032c8	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x3101	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2186	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x3105	          0x894594	             mov dword [rbp - 0x6c], eax	      2186	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x3108	        0x488d5594	                   lea rdx, [rbp - 0x6c]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x310c	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x3110	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x3114	          0x4889ce	                            mov rsi, rcx	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x3117	          0x4889c7	                            mov rdi, rax	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x311a	      0xe800000000	                          call 0x400315f	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x311f	        0x488945c0	             mov qword [rbp - 0x40], rax	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x3123	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2188	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x3126	            0x4898	                                    cdqe	      2188	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x3128	        0x488945a8	             mov qword [rbp - 0x58], rax	      2188	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x312c	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2189	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	IF_6
0x3131	            0x7408	                            je 0x400317b	      2189	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	IF_6
0x3133	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2190	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	IF_6
0x3137	        0x488945b0	             mov qword [rbp - 0x50], rax	      2190	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	IF_6
0x313b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x313f	      0xba00000000	                              mov edx, 0	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x3144	      0xbe00000000	                              mov esi, 0	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x3149	          0x4889c7	                            mov rdi, rax	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x314c	      0xe800000000	                          call 0x4003191	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x3151	      0xe932010000	                           jmp 0x40032c8	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x3156	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x315d	          0x488b10	                    mov rdx, qword [rax]	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3160	    0x488b05000000	            mov rax, qword [0x040031a7] 	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3167	          0x4839c2	                            cmp rdx, rax	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x316a	            0x743e	                            je 0x40031ea	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x316c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3173	          0x488b10	                    mov rdx, qword [rax]	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3176	    0x488b05000000	            mov rax, qword [0x040031bd] 	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x317d	          0x4839c2	                            cmp rdx, rax	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3180	            0x7428	                            je 0x40031ea	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3182	    0x8b0500000000	            mov eax, dword [0x040031c8] 	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3188	            0x85c0	                           test eax, eax	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x318a	     0xf84f8000000	                            je 0x40032c8	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3190	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2204	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3197	          0x488b10	                    mov rdx, qword [rax]	      2204	ui.c	FUNCTION_65	ELSE_3	IF_7
0x319a	    0x488b05000000	            mov rax, qword [0x040031e1] 	      2204	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31a1	          0x4839c2	                            cmp rdx, rax	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31a4	     0xf85de000000	                           jne 0x40032c8	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31aa	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      2207	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31b1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2210	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31b8	        0x488945d0	             mov qword [rbp - 0x30], rax	      2210	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31bc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31c3	          0x488b00	                    mov rax, qword [rax]	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31c6	        0x488945d8	             mov qword [rbp - 0x28], rax	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31ca	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31d1	            0x8b00	                    mov eax, dword [rax]	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31d3	          0x8945e0	             mov dword [rbp - 0x20], eax	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31d6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2213	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31da	        0x488945e8	             mov qword [rbp - 0x18], rax	      2213	ui.c	FUNCTION_65	ELSE_3	IF_7
0x31de	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x31e5	          0x488b10	                    mov rdx, qword [rax]	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x31e8	    0x488b05000000	            mov rax, qword [0x0400322f] 	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x31ef	          0x4839c2	                            cmp rdx, rax	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x31f2	            0x7531	                           jne 0x4003265	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x31f4	    0x8b0500000000	            mov eax, dword [0x0400323a] 	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x31fa	            0x85c0	                           test eax, eax	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x31fc	            0x7407	                            je 0x4003245	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x31fe	      0xe800000000	                          call 0x4003243	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x3203	            0xeb07	                           jmp 0x400324c	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x3205	    0x488b05000000	            mov rax, qword [0x0400324c] 	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x320c	        0x488d4d94	                   lea rcx, [rbp - 0x6c]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x3210	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x3214	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x3218	          0x4889c7	                            mov rdi, rax	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x321b	      0xe800000000	                          call 0x4003260	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x3220	          0x89459c	             mov dword [rbp - 0x64], eax	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x3223	            0xeb2f	                           jmp 0x4003294	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x3225	    0x8b0500000000	            mov eax, dword [0x0400326b] 	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x322b	            0x85c0	                           test eax, eax	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x322d	            0x7407	                            je 0x4003276	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x322f	      0xe800000000	                          call 0x4003274	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x3234	            0xeb07	                           jmp 0x400327d	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x3236	    0x488b05000000	            mov rax, qword [0x0400327d] 	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x323d	        0x488d4d94	                   lea rcx, [rbp - 0x6c]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x3241	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x3245	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x3249	          0x4889c7	                            mov rdi, rax	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x324c	      0xe800000000	                          call 0x4003291	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x3251	          0x89459c	             mov dword [rbp - 0x64], eax	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x3254	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x3258	            0x7507	                           jne 0x40032a1	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x325a	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x325d	            0x85c0	                           test eax, eax	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x325f	            0x7f0c	                            jg 0x40032ad	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x3261	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x3265	    0xc70000000000	                      mov dword [rax], 0	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x326b	            0xeb6b	                           jmp 0x4003318	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x326d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3271	          0x488b00	                    mov rax, qword [rax]	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3274	        0x488945b0	             mov qword [rbp - 0x50], rax	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x3278	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x327c	          0x4889c7	                            mov rdi, rax	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x327f	      0xe800000000	                          call 0x40032c4	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x3284	        0x488945a8	             mov qword [rbp - 0x58], rax	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x3288	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2230	ui.c	FUNCTION_65	CALL_9
0x328c	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2230	ui.c	FUNCTION_65	CALL_9
0x3290	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      2230	ui.c	FUNCTION_65	CALL_9
0x3294	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2230	ui.c	FUNCTION_65	CALL_9
0x3297	            0x89c7	                            mov edi, eax	      2230	ui.c	FUNCTION_65	CALL_9
0x3299	      0xe800000000	                          call 0x40032de	      2230	ui.c	FUNCTION_65	CALL_9
0x329e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2232	ui.c	FUNCTION_65	IF_10
0x32a2	          0x4885c0	                           test rax, rax	      2232	ui.c	FUNCTION_65	IF_10
0x32a5	            0x740c	                            je 0x40032f3	      2232	ui.c	FUNCTION_65	IF_10
0x32a7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2233	ui.c	FUNCTION_65	CALL_10
0x32ab	          0x4889c7	                            mov rdi, rax	      2233	ui.c	FUNCTION_65	CALL_10
0x32ae	      0xe800000000	                          call 0x40032f3	      2233	ui.c	FUNCTION_65	CALL_10
0x32b3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2235	ui.c	FUNCTION_65	CALL_11
0x32b7	          0x4889c7	                            mov rdi, rax	      2235	ui.c	FUNCTION_65	CALL_11
0x32ba	      0xe800000000	                          call 0x40032ff	      2235	ui.c	FUNCTION_65	CALL_11
0x32bf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2237	ui.c	FUNCTION_65	CALL_12
0x32c6	          0x4889c7	                            mov rdi, rax	      2237	ui.c	FUNCTION_65	CALL_12
0x32c9	      0xe800000000	                          call 0x400330e	      2237	ui.c	FUNCTION_65	CALL_12
0x32ce	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2238	ui.c	FUNCTION_65
0x32d2	    0xc70001000000	                      mov dword [rax], 1	      2238	ui.c	FUNCTION_65
0x32d8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2239	ui.c	FUNCTION_65
0x32dc	    0x644833042528	                xor rax, qword fs:[0x28]	      2239	ui.c	FUNCTION_65
0x32e5	            0x7405	                            je 0x400332c	      2239	ui.c	FUNCTION_65
0x32e7	      0xe800000000	                          call 0x400332c	      2239	ui.c	FUNCTION_65
0x32ec	              0xc9	                                   leave	      2239	ui.c	FUNCTION_65
0x32ed	              0xc3	                                     ret	      2239	ui.c	FUNCTION_65
ui_get_shellsize	CALL,5:WHILE,0:IF,2:ELSE,1:DO,0:SWITCH,0:functions,0:FOR,0	25
0x5d4	              0x55	                                push rbp	       337	ui.c	FUNCTION_9
0x5d5	          0x4889e5	                            mov rbp, rsp	       337	ui.c	FUNCTION_9
0x5d8	        0x4883ec10	                           sub rsp, 0x10	       337	ui.c	FUNCTION_9
0x5dc	    0x8b0500000000	            mov eax, dword [0x04000622] 	       341	ui.c	FUNCTION_9	IF_1
0x5e2	            0x85c0	                           test eax, eax	       341	ui.c	FUNCTION_9	IF_1
0x5e4	            0x740a	                            je 0x4000630	       341	ui.c	FUNCTION_9	IF_1
0x5e6	      0xe800000000	                          call 0x400062b	       342	ui.c	FUNCTION_9	CALL_1
0x5eb	          0x8945fc	                mov dword [rbp - 4], eax	       342	ui.c	FUNCTION_9	CALL_1
0x5ee	            0xeb08	                           jmp 0x4000638	       342	ui.c	FUNCTION_9	CALL_1
0x5f0	      0xe800000000	                          call 0x4000635	       345	ui.c	FUNCTION_9	CALL_2
0x5f5	          0x8945fc	                mov dword [rbp - 4], eax	       345	ui.c	FUNCTION_9	CALL_2
0x5f8	      0xe800000000	                          call 0x400063d	       347	ui.c	FUNCTION_9	CALL_3
0x5fd	        0x837dfc01	                  cmp dword [rbp - 4], 1	       350	ui.c	FUNCTION_9	IF_2
0x601	            0x7528	                           jne 0x400066b	       350	ui.c	FUNCTION_9	IF_2
0x603	    0x488b05000000	            mov rax, qword [0x0400064a] 	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x60a	          0x4889c6	                            mov rsi, rax	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x60d	      0xbf00000000	                              mov edi, 0	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x612	      0xe800000000	                          call 0x4000657	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x617	    0x488b05000000	            mov rax, qword [0x0400065e] 	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x61e	          0x4889c6	                            mov rsi, rax	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x621	      0xbf00000000	                              mov edi, 0	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x626	      0xe800000000	                          call 0x400066b	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x62b	          0x8b45fc	                mov eax, dword [rbp - 4]	       355	ui.c	FUNCTION_9
0x62e	              0xc9	                                   leave	       356	ui.c	FUNCTION_9
0x62f	              0xc3	                                     ret	       356	ui.c	FUNCTION_9
clip_clear_selection	CALL,1:WHILE,0:IF,1:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	29
0x1811	              0x55	                                push rbp	      1063	ui.c	FUNCTION_30
0x1812	          0x4889e5	                            mov rbp, rsp	      1063	ui.c	FUNCTION_30
0x1815	        0x4883ec10	                           sub rsp, 0x10	      1063	ui.c	FUNCTION_30
0x1819	        0x48897df8	                mov qword [rbp - 8], rdi	      1063	ui.c	FUNCTION_30
0x181d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1065	ui.c	FUNCTION_30	IF_1
0x1821	         0xfb74048	           movzx eax, word [rax + 0x48] 	      1065	ui.c	FUNCTION_30	IF_1
0x1825	          0x6685c0	                             test ax, ax	      1065	ui.c	FUNCTION_30	IF_1
0x1828	            0x743f	                            je 0x40018a9	      1065	ui.c	FUNCTION_30	IF_1
0x182a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1068	ui.c	FUNCTION_30	CALL_1
0x182e	          0x8b5020	            mov edx, dword [rax + 0x20] 	      1068	ui.c	FUNCTION_30	CALL_1
0x1831	        0x488b45f8	                mov rax, qword [rbp - 8]	      1068	ui.c	FUNCTION_30	CALL_1
0x1835	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1068	ui.c	FUNCTION_30	CALL_1
0x1839	            0x89c6	                            mov esi, eax	      1068	ui.c	FUNCTION_30	CALL_1
0x183b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1068	ui.c	FUNCTION_30	CALL_1
0x183f	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1068	ui.c	FUNCTION_30	CALL_1
0x1842	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1068	ui.c	FUNCTION_30	CALL_1
0x1846	        0x488b4908	                mov rcx, qword [rcx + 8]	      1068	ui.c	FUNCTION_30	CALL_1
0x184a	            0x89cf	                            mov edi, ecx	      1068	ui.c	FUNCTION_30	CALL_1
0x184c	    0x41b801000000	                              mov r8d, 1	      1068	ui.c	FUNCTION_30	CALL_1
0x1852	            0x89d1	                            mov ecx, edx	      1068	ui.c	FUNCTION_30	CALL_1
0x1854	            0x89f2	                            mov edx, esi	      1068	ui.c	FUNCTION_30	CALL_1
0x1856	            0x89c6	                            mov esi, eax	      1068	ui.c	FUNCTION_30	CALL_1
0x1858	      0xe80e010000	               call sym.clip_invert_area	      1068	ui.c	FUNCTION_30	CALL_1
0x185d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1070	ui.c	FUNCTION_30
0x1861	    0x66c740480000	                mov word [rax + 0x48], 0	      1070	ui.c	FUNCTION_30
0x1867	            0xeb01	                           jmp 0x40018aa	      1070	ui.c	FUNCTION_30
0x1869	              0x90	                                     nop	      1066	ui.c	FUNCTION_30	IF_1
0x186a	              0xc9	                                   leave	      1071	ui.c	FUNCTION_30
0x186b	              0xc3	                                     ret	      1071	ui.c	FUNCTION_30
ui_focus_change	CALL,12:WHILE,0:IF,8:ELSE,2:DO,0:SWITCH,0:functions,0:FOR,0	94
0x50dc	              0x55	                                push rbp	      3287	ui.c	FUNCTION_80
0x50dd	          0x4889e5	                            mov rbp, rsp	      3287	ui.c	FUNCTION_80
0x50e0	              0x53	                                push rbx	      3287	ui.c	FUNCTION_80
0x50e1	        0x4883ec28	                           sub rsp, 0x28	      3287	ui.c	FUNCTION_80
0x50e5	          0x897ddc	             mov dword [rbp - 0x24], edi	      3287	ui.c	FUNCTION_80
0x50e8	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3289	ui.c	FUNCTION_80
0x50ef	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x50f3	            0x743b	                            je 0x4005170	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x50f5	    0x488b05000000	            mov rax, qword [0x0400513c] 	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x50fc	        0x488d5802	                      lea rbx, [rax + 2]	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x5100	      0xbf00000000	                              mov edi, 0	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x5105	      0xe800000000	                          call 0x400514a	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x510a	          0x4839c3	                            cmp rbx, rax	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x510d	            0x7d21	                           jge 0x4005170	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x510f	    0x8b0500000000	            mov eax, dword [0x04005155] 	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x5115	            0x89c7	                            mov edi, eax	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x5117	      0xe800000000	                          call 0x400515c	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x511c	          0x8945ec	             mov dword [rbp - 0x14], eax	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x511f	      0xbf00000000	                              mov edi, 0	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x5124	      0xe800000000	                          call 0x4005169	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x5129	    0x488905000000	            mov qword [0x04005170], rax 	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x5130	    0x488b05000000	            mov rax, qword [0x04005177] 	      3309	ui.c	FUNCTION_80	CALL_4
0x5137	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3309	ui.c	FUNCTION_80	CALL_4
0x513b	            0x7407	                            je 0x4005184	      3309	ui.c	FUNCTION_80	CALL_4
0x513d	      0xbf34000000	                           mov edi, 0x34	      3309	ui.c	FUNCTION_80	CALL_4
0x5142	            0xeb05	                           jmp 0x4005189	      3309	ui.c	FUNCTION_80	CALL_4
0x5144	      0xbf35000000	                           mov edi, 0x35	      3309	ui.c	FUNCTION_80	CALL_4
0x5149	          0x4989c0	                             mov r8, rax	      3309	ui.c	FUNCTION_80	CALL_4
0x514c	      0xb900000000	                              mov ecx, 0	      3309	ui.c	FUNCTION_80	CALL_4
0x5151	      0xba00000000	                              mov edx, 0	      3309	ui.c	FUNCTION_80	CALL_4
0x5156	      0xbe00000000	                              mov esi, 0	      3309	ui.c	FUNCTION_80	CALL_4
0x515b	      0xe800000000	                          call 0x40051a0	      3309	ui.c	FUNCTION_80	CALL_4
0x5160	           0x945ec	              or dword [rbp - 0x14], eax	      3309	ui.c	FUNCTION_80	CALL_4
0x5163	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3312	ui.c	FUNCTION_80	IF_2
0x5167	     0xf84ce000000	                            je 0x400527b	      3312	ui.c	FUNCTION_80	IF_2
0x516d	    0xc70500000000	               mov dword [0x040051b7], 0	      3316	ui.c	FUNCTION_80	IF_2
0x5177	    0x8b0500000000	            mov eax, dword [0x040051bd] 	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x517d	          0x83e008	                              and eax, 8	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x5180	            0x85c0	                           test eax, eax	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x5182	            0x740a	                            je 0x40051ce	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x5184	      0xe800000000	                          call 0x40051c9	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x5189	      0xe985000000	                           jmp 0x4005253	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x518e	    0x8b0500000000	            mov eax, dword [0x040051d4] 	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x5194	      0x3d01020000	                          cmp eax, 0x201	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x5199	            0x743e	                            je 0x4005219	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x519b	    0x8b0500000000	            mov eax, dword [0x040051e1] 	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51a1	      0x3d00040000	                          cmp eax, 0x400	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51a6	            0x7431	                            je 0x4005219	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51a8	    0x8b0500000000	            mov eax, dword [0x040051ee] 	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51ae	      0x3d00030000	                          cmp eax, 0x300	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51b3	            0x7424	                            je 0x4005219	      3320	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51b5	    0x8b0500000000	            mov eax, dword [0x040051fb] 	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51bb	      0x3d00060000	                          cmp eax, 0x600	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51c0	            0x7417	                            je 0x4005219	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51c2	    0x8b0500000000	            mov eax, dword [0x04005208] 	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51c8	      0x3d00080000	                          cmp eax, 0x800	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51cd	            0x740a	                            je 0x4005219	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51cf	    0x8b0500000000	            mov eax, dword [0x04005215] 	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51d5	            0x85c0	                           test eax, eax	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51d7	            0x7407	                            je 0x4005220	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51d9	      0xe800000000	                          call 0x400521e	      3322	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51de	            0xeb33	                           jmp 0x4005253	      3322	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x51e0	    0x8b0500000000	            mov eax, dword [0x04005226] 	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x51e6	          0x83e001	                              and eax, 1	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x51e9	            0x85c0	                           test eax, eax	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x51eb	            0x750d	                           jne 0x400523a	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x51ed	    0x8b0500000000	            mov eax, dword [0x04005233] 	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x51f3	          0x83e010	                           and eax, 0x10	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x51f6	            0x85c0	                           test eax, eax	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x51f8	            0x7419	                            je 0x4005253	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x51fa	    0x8b0500000000	            mov eax, dword [0x04005240] 	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x5200	            0x85c0	                           test eax, eax	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x5202	            0x740a	                            je 0x400524e	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x5204	      0xbf00000000	                              mov edi, 0	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
0x5209	      0xe800000000	                          call 0x400524e	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
0x520e	      0xe800000000	                          call 0x4005253	      3327	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_8
0x5213	      0xe800000000	                          call 0x4005258	      3329	ui.c	FUNCTION_80	IF_2	CALL_9
0x5218	      0xbe01000000	                              mov esi, 1	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x521d	      0xbf00000000	                              mov edi, 0	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x5222	      0xe800000000	                          call 0x4005267	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x5227	    0x8b0500000000	            mov eax, dword [0x0400526d] 	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x522d	            0x85c0	                           test eax, eax	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x522f	            0x740a	                            je 0x400527b	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x5231	      0xbf00000000	                              mov edi, 0	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x5236	      0xe800000000	                          call 0x400527b	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x523b	    0x8b0500000000	            mov eax, dword [0x04005281] 	      3338	ui.c	FUNCTION_80	IF_8
0x5241	            0x85c0	                           test eax, eax	      3338	ui.c	FUNCTION_80	IF_8
0x5243	            0x7405	                            je 0x400528a	      3338	ui.c	FUNCTION_80	IF_8
0x5245	      0xe800000000	                          call 0x400528a	      3339	ui.c	FUNCTION_80	CALL_12
0x524a	              0x90	                                     nop	      3341	ui.c	FUNCTION_80
0x524b	        0x4883c428	                           add rsp, 0x28	      3341	ui.c	FUNCTION_80
0x524f	              0x5b	                                 pop rbx	      3341	ui.c	FUNCTION_80
0x5250	              0x5d	                                 pop rbp	      3341	ui.c	FUNCTION_80
0x5251	              0xc3	                                     ret	      3341	ui.c	FUNCTION_80
clip_copy_selection	CALL,5:WHILE,0:IF,2:ELSE,0:DO,0:SWITCH,0:functions,0:FOR,0	37
0xb10	              0x55	                                push rbp	       588	ui.c	FUNCTION_18
0xb11	          0x4889e5	                            mov rbp, rsp	       588	ui.c	FUNCTION_18
0xb14	        0x4883ec10	                           sub rsp, 0x10	       588	ui.c	FUNCTION_18
0xb18	        0x48897df8	                mov qword [rbp - 8], rdi	       588	ui.c	FUNCTION_18
0xb1c	    0x8b0500000000	            mov eax, dword [0x04000b62] 	       589	ui.c	FUNCTION_18	IF_1
0xb22	            0x85c0	                           test eax, eax	       589	ui.c	FUNCTION_18	IF_1
0xb24	            0x745e	                            je 0x4000bc4	       589	ui.c	FUNCTION_18	IF_1
0xb26	    0x8b0500000000	            mov eax, dword [0x04000b6c] 	       589	ui.c	FUNCTION_18	IF_1
0xb2c	          0x83e001	                              and eax, 1	       589	ui.c	FUNCTION_18	IF_1
0xb2f	            0x85c0	                           test eax, eax	       589	ui.c	FUNCTION_18	IF_1
0xb31	            0x7451	                            je 0x4000bc4	       589	ui.c	FUNCTION_18	IF_1
0xb33	        0x488b45f8	                mov rax, qword [rbp - 8]	       589	ui.c	FUNCTION_18	IF_1
0xb37	            0x8b00	                    mov eax, dword [rax]	       589	ui.c	FUNCTION_18	IF_1
0xb39	            0x85c0	                           test eax, eax	       589	ui.c	FUNCTION_18	IF_1
0xb3b	            0x7447	                            je 0x4000bc4	       589	ui.c	FUNCTION_18	IF_1
0xb3d	        0x488b45f8	                mov rax, qword [rbp - 8]	       591	ui.c	FUNCTION_18	IF_1	CALL_1
0xb41	          0x4889c7	                            mov rdi, rax	       591	ui.c	FUNCTION_18	IF_1	CALL_1
0xb44	      0xe800000000	                          call 0x4000b89	       591	ui.c	FUNCTION_18	IF_1	CALL_1
0xb49	        0x488b45f8	                mov rax, qword [rbp - 8]	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0xb4d	          0x4889c7	                            mov rdi, rax	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0xb50	      0xe800000000	                          call 0x4000b95	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0xb55	        0x488b45f8	                mov rax, qword [rbp - 8]	       593	ui.c	FUNCTION_18	IF_1	CALL_3
0xb59	          0x4889c7	                            mov rdi, rax	       593	ui.c	FUNCTION_18	IF_1	CALL_3
0xb5c	      0xe800000000	                          call 0x4000ba1	       593	ui.c	FUNCTION_18	IF_1	CALL_3
0xb61	        0x488b45f8	                mov rax, qword [rbp - 8]	       594	ui.c	FUNCTION_18	IF_1	IF_2
0xb65	          0x8b4004	                mov eax, dword [rax + 4]	       594	ui.c	FUNCTION_18	IF_1	IF_2
0xb68	            0x85c0	                           test eax, eax	       594	ui.c	FUNCTION_18	IF_1	IF_2
0xb6a	            0x740c	                            je 0x4000bb8	       594	ui.c	FUNCTION_18	IF_1	IF_2
0xb6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0xb70	          0x4889c7	                            mov rdi, rax	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0xb73	      0xe800000000	                          call 0x4000bb8	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0xb78	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	ui.c	FUNCTION_18	IF_1	CALL_5
0xb7c	          0x4889c7	                            mov rdi, rax	       596	ui.c	FUNCTION_18	IF_1	CALL_5
0xb7f	      0xe800000000	                          call 0x4000bc4	       596	ui.c	FUNCTION_18	IF_1	CALL_5
0xb84	              0x90	                                     nop	       598	ui.c	FUNCTION_18
0xb85	              0xc9	                                   leave	       598	ui.c	FUNCTION_18
0xb86	              0xc3	                                     ret	       598	ui.c	FUNCTION_18
