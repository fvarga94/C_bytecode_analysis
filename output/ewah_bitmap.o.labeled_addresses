ewah_set	ELSE,0:IF,4:CALL,12:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	135
0xb15	              0x55	                                push rbp	       210	ewah_bitmap.c	FUNCTION_12
0xb16	          0x4889e5	                            mov rbp, rsp	       210	ewah_bitmap.c	FUNCTION_12
0xb19	        0x4883ec20	                           sub rsp, 0x20	       210	ewah_bitmap.c	FUNCTION_12
0xb1d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       210	ewah_bitmap.c	FUNCTION_12
0xb21	        0x488975e0	             mov qword [rbp - 0x20], rsi	       210	ewah_bitmap.c	FUNCTION_12
0xb25	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       212	ewah_bitmap.c	FUNCTION_12	CALL_1
0xb29	        0x4883c040	                           add rax, 0x40	       212	ewah_bitmap.c	FUNCTION_12	CALL_1
0xb2d	        0x48c1e806	                              shr rax, 6	       212	ewah_bitmap.c	FUNCTION_12	CALL_1
0xb31	          0x4889c2	                            mov rdx, rax	       212	ewah_bitmap.c	FUNCTION_12	CALL_1
0xb34	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	ewah_bitmap.c	FUNCTION_12	CALL_2
0xb38	        0x488b4018	            mov rax, qword [rax + 0x18] 	       213	ewah_bitmap.c	FUNCTION_12	CALL_2
0xb3c	        0x4883c03f	                           add rax, 0x3f	       213	ewah_bitmap.c	FUNCTION_12	CALL_2
0xb40	        0x48c1e806	                              shr rax, 6	       213	ewah_bitmap.c	FUNCTION_12	CALL_2
0xb44	          0x4829c2	                            sub rdx, rax	       211	ewah_bitmap.c	FUNCTION_12
0xb47	          0x4889d0	                            mov rax, rdx	       211	ewah_bitmap.c	FUNCTION_12
0xb4a	        0x488945f8	                mov qword [rbp - 8], rax	       211	ewah_bitmap.c	FUNCTION_12
0xb4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0xb52	        0x488b4018	            mov rax, qword [rax + 0x18] 	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0xb56	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0xb5a	            0x7619	                           jbe 0x4000bb5	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0xb5c	      0xb900000000	                              mov ecx, 0	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0xb61	      0xbad7000000	                           mov edx, 0xd7	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0xb66	      0xbe00000000	                              mov esi, 0	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0xb6b	      0xbf00000000	                              mov edi, 0	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0xb70	      0xe800000000	                          call 0x4000bb5	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0xb75	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       217	ewah_bitmap.c	FUNCTION_12
0xb79	        0x488d5001	                      lea rdx, [rax + 1]	       217	ewah_bitmap.c	FUNCTION_12
0xb7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       217	ewah_bitmap.c	FUNCTION_12
0xb81	        0x48895018	             mov qword [rax + 0x18], rdx	       217	ewah_bitmap.c	FUNCTION_12
0xb85	      0x48837df800	                  cmp qword [rbp - 8], 0	       219	ewah_bitmap.c	FUNCTION_12	IF_1
0xb8a	            0x7445	                            je 0x4000c11	       219	ewah_bitmap.c	FUNCTION_12	IF_1
0xb8c	      0x48837df801	                  cmp qword [rbp - 8], 1	       220	ewah_bitmap.c	FUNCTION_12	IF_1	IF_2
0xb91	            0x7619	                           jbe 0x4000bec	       220	ewah_bitmap.c	FUNCTION_12	IF_1	IF_2
0xb93	        0x488b45f8	                mov rax, qword [rbp - 8]	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_4
0xb97	        0x488d50ff	                      lea rdx, [rax - 1]	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_4
0xb9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_4
0xb9f	      0xbe00000000	                              mov esi, 0	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_4
0xba4	          0x4889c7	                            mov rdi, rax	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_4
0xba7	      0xe8f3f7ffff	                call sym.add_empty_words	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_4
0xbac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0xbb0	          0x83e03f	                           and eax, 0x3f	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0xbb3	      0xba01000000	                              mov edx, 1	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0xbb8	            0x89c1	                            mov ecx, eax	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0xbba	          0x48d3e2	                             shl rdx, cl	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0xbbd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0xbc1	          0x4889d6	                            mov rsi, rdx	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0xbc4	          0x4889c7	                            mov rdi, rax	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0xbc7	      0xe8ecf9ffff	                    call sym.add_literal	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0xbcc	      0xe93c010000	                           jmp 0x4000d4d	       224	ewah_bitmap.c	FUNCTION_12	IF_1
0xbd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0xbd5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0xbd9	          0x4889c7	                            mov rdi, rax	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0xbdc	      0xe871f5ffff	          call sym.rlw_get_literal_words	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0xbe1	          0x4885c0	                           test rax, rax	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0xbe4	            0x754c	                           jne 0x4000c72	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0xbe6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       229	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_8
0xbea	        0x488b4020	            mov rax, qword [rax + 0x20] 	       229	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_8
0xbee	          0x4889c7	                            mov rdi, rax	       229	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_8
0xbf1	      0xe846f5ffff	            call sym.rlw_get_running_len	       229	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_8
0xbf6	        0x488d50ff	                      lea rdx, [rax - 1]	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0xbfa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0xbfe	        0x488b4020	            mov rax, qword [rax + 0x20] 	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0xc02	          0x4889d6	                            mov rsi, rdx	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0xc05	          0x4889c7	                            mov rdi, rax	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0xc08	      0xe8dff4ffff	            call sym.rlw_set_running_len	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0xc0d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0xc11	          0x83e03f	                           and eax, 0x3f	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0xc14	      0xba01000000	                              mov edx, 1	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0xc19	            0x89c1	                            mov ecx, eax	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0xc1b	          0x48d3e2	                             shl rdx, cl	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0xc1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0xc22	          0x4889d6	                            mov rsi, rdx	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0xc25	          0x4889c7	                            mov rdi, rax	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0xc28	      0xe88bf9ffff	                    call sym.add_literal	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0xc2d	      0xe9db000000	                           jmp 0x4000d4d	       231	ewah_bitmap.c	FUNCTION_12	IF_3
0xc32	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	ewah_bitmap.c	FUNCTION_12
0xc36	          0x488b10	                    mov rdx, qword [rax]	       234	ewah_bitmap.c	FUNCTION_12
0xc39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	ewah_bitmap.c	FUNCTION_12
0xc3d	        0x488b4008	                mov rax, qword [rax + 8]	       234	ewah_bitmap.c	FUNCTION_12
0xc41	        0x48c1e003	                              shl rax, 3	       234	ewah_bitmap.c	FUNCTION_12
0xc45	        0x4883e808	                              sub rax, 8	       234	ewah_bitmap.c	FUNCTION_12
0xc49	          0x4801c2	                            add rdx, rax	       234	ewah_bitmap.c	FUNCTION_12
0xc4c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	ewah_bitmap.c	FUNCTION_12
0xc50	          0x488b08	                    mov rcx, qword [rax]	       234	ewah_bitmap.c	FUNCTION_12
0xc53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	ewah_bitmap.c	FUNCTION_12
0xc57	        0x488b4008	                mov rax, qword [rax + 8]	       234	ewah_bitmap.c	FUNCTION_12
0xc5b	        0x48c1e003	                              shl rax, 3	       234	ewah_bitmap.c	FUNCTION_12
0xc5f	        0x4883e808	                              sub rax, 8	       234	ewah_bitmap.c	FUNCTION_12
0xc63	          0x4801c8	                            add rax, rcx	       234	ewah_bitmap.c	FUNCTION_12
0xc66	          0x488b00	                    mov rax, qword [rax]	       234	ewah_bitmap.c	FUNCTION_12
0xc69	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       235	ewah_bitmap.c	FUNCTION_12
0xc6d	          0x83e13f	                           and ecx, 0x3f	       235	ewah_bitmap.c	FUNCTION_12
0xc70	      0xbe01000000	                              mov esi, 1	       235	ewah_bitmap.c	FUNCTION_12
0xc75	          0x48d3e6	                             shl rsi, cl	       235	ewah_bitmap.c	FUNCTION_12
0xc78	          0x4889f1	                            mov rcx, rsi	       235	ewah_bitmap.c	FUNCTION_12
0xc7b	          0x4809c8	                             or rax, rcx	       234	ewah_bitmap.c	FUNCTION_12
0xc7e	          0x488902	                    mov qword [rdx], rax	       234	ewah_bitmap.c	FUNCTION_12
0xc81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0xc85	          0x488b10	                    mov rdx, qword [rax]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0xc88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0xc8c	        0x488b4008	                mov rax, qword [rax + 8]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0xc90	        0x48c1e003	                              shl rax, 3	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0xc94	        0x4883e808	                              sub rax, 8	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0xc98	          0x4801d0	                            add rax, rdx	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0xc9b	          0x488b00	                    mov rax, qword [rax]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0xc9e	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0xca2	            0x7569	                           jne 0x4000d4d	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0xca4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xca8	          0x488b10	                    mov rdx, qword [rax]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xcab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xcaf	        0x488b4008	                mov rax, qword [rax + 8]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xcb3	        0x488d48ff	                      lea rcx, [rax - 1]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xcb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xcbb	        0x48894808	                mov qword [rax + 8], rcx	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xcbf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xcc3	        0x488b4008	                mov rax, qword [rax + 8]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xcc7	        0x48c1e003	                              shl rax, 3	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xccb	          0x4801d0	                            add rax, rdx	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xcce	    0x48c700000000	                      mov qword [rax], 0	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0xcd5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       241	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_11
0xcd9	        0x488b4020	            mov rax, qword [rax + 0x20] 	       241	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_11
0xcdd	          0x4889c7	                            mov rdi, rax	       241	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_11
0xce0	      0xe86df4ffff	          call sym.rlw_get_literal_words	       241	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_11
0xce5	        0x488d50ff	                      lea rdx, [rax - 1]	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_10
0xce9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_10
0xced	        0x488b4020	            mov rax, qword [rax + 0x20] 	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_10
0xcf1	          0x4889d6	                            mov rsi, rdx	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_10
0xcf4	          0x4889c7	                            mov rdi, rax	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_10
0xcf7	      0xe86bf4ffff	          call sym.rlw_set_literal_words	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_10
0xcfc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       242	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_12
0xd00	      0xbe01000000	                              mov esi, 1	       242	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_12
0xd05	          0x4889c7	                            mov rdi, rax	       242	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_12
0xd08	      0xe832fbffff	                 call sym.add_empty_word	       242	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_12
0xd0d	              0xc9	                                   leave	       244	ewah_bitmap.c	FUNCTION_12
0xd0e	              0xc3	                                     ret	       244	ewah_bitmap.c	FUNCTION_12
ewah_free	ELSE,0:IF,2:CALL,2:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	21
0xeeb	              0x55	                                push rbp	       300	ewah_bitmap.c	FUNCTION_16
0xeec	          0x4889e5	                            mov rbp, rsp	       300	ewah_bitmap.c	FUNCTION_16
0xeef	        0x4883ec10	                           sub rsp, 0x10	       300	ewah_bitmap.c	FUNCTION_16
0xef3	        0x48897df8	                mov qword [rbp - 8], rdi	       300	ewah_bitmap.c	FUNCTION_16
0xef7	      0x48837df800	                  cmp qword [rbp - 8], 0	       301	ewah_bitmap.c	FUNCTION_16	IF_1
0xefc	            0x742a	                            je 0x4000f68	       301	ewah_bitmap.c	FUNCTION_16	IF_1
0xefe	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	ewah_bitmap.c	FUNCTION_16	IF_2
0xf02	        0x488b4010	            mov rax, qword [rax + 0x10] 	       304	ewah_bitmap.c	FUNCTION_16	IF_2
0xf06	          0x4885c0	                           test rax, rax	       304	ewah_bitmap.c	FUNCTION_16	IF_2
0xf09	            0x740f	                            je 0x4000f5a	       304	ewah_bitmap.c	FUNCTION_16	IF_2
0xf0b	        0x488b45f8	                mov rax, qword [rbp - 8]	       305	ewah_bitmap.c	FUNCTION_16	CALL_1
0xf0f	          0x488b00	                    mov rax, qword [rax]	       305	ewah_bitmap.c	FUNCTION_16	CALL_1
0xf12	          0x4889c7	                            mov rdi, rax	       305	ewah_bitmap.c	FUNCTION_16	CALL_1
0xf15	      0xe800000000	                          call 0x4000f5a	       305	ewah_bitmap.c	FUNCTION_16	CALL_1
0xf1a	        0x488b45f8	                mov rax, qword [rbp - 8]	       307	ewah_bitmap.c	FUNCTION_16	CALL_2
0xf1e	          0x4889c7	                            mov rdi, rax	       307	ewah_bitmap.c	FUNCTION_16	CALL_2
0xf21	      0xe800000000	                          call 0x4000f66	       307	ewah_bitmap.c	FUNCTION_16	CALL_2
0xf26	            0xeb01	                           jmp 0x4000f69	       307	ewah_bitmap.c	FUNCTION_16	CALL_2
0xf28	              0x90	                                     nop	       302	ewah_bitmap.c	FUNCTION_16	IF_1
0xf29	              0xc9	                                   leave	       308	ewah_bitmap.c	FUNCTION_16
0xf2a	              0xc3	                                     ret	       308	ewah_bitmap.c	FUNCTION_16
max_size	ELSE,0:IF,0:CALL,0:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	9
0x223	              0x55	                                push rbp	        29	ewah_bitmap.c	FUNCTION_2
0x224	          0x4889e5	                            mov rbp, rsp	        29	ewah_bitmap.c	FUNCTION_2
0x227	        0x48897df8	                mov qword [rbp - 8], rdi	        29	ewah_bitmap.c	FUNCTION_2
0x22b	        0x488975f0	             mov qword [rbp - 0x10], rsi	        29	ewah_bitmap.c	FUNCTION_2
0x22f	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	ewah_bitmap.c	FUNCTION_2
0x233	        0x483945f0	            cmp qword [rbp - 0x10], rax 	        30	ewah_bitmap.c	FUNCTION_2
0x237	      0x480f4345f0	          cmovae rax, qword [rbp - 0x10]	        30	ewah_bitmap.c	FUNCTION_2
0x23c	              0x5d	                                 pop rbp	        31	ewah_bitmap.c	FUNCTION_2
0x23d	              0xc3	                                     ret	        31	ewah_bitmap.c	FUNCTION_2
ewah_add_dirty_words	ELSE,1:IF,3:CALL,6:DO,0:WHILE,1:SWITCH,0:FOR,1:functions,0	116
0x694	              0x55	                                push rbp	       131	ewah_bitmap.c	FUNCTION_9
0x695	          0x4889e5	                            mov rbp, rsp	       131	ewah_bitmap.c	FUNCTION_9
0x698	        0x4883ec40	                           sub rsp, 0x40	       131	ewah_bitmap.c	FUNCTION_9
0x69c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       131	ewah_bitmap.c	FUNCTION_9
0x6a0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       131	ewah_bitmap.c	FUNCTION_9
0x6a4	        0x488955c8	             mov qword [rbp - 0x38], rdx	       131	ewah_bitmap.c	FUNCTION_9
0x6a8	          0x894dc4	             mov dword [rbp - 0x3c], ecx	       131	ewah_bitmap.c	FUNCTION_9
0x6ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       135	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_1
0x6af	        0x488b4020	            mov rax, qword [rax + 0x20] 	       135	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_1
0x6b3	          0x4889c7	                            mov rdi, rax	       135	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_1
0x6b6	      0xe897faffff	          call sym.rlw_get_literal_words	       135	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_1
0x6bb	        0x488945f0	             mov qword [rbp - 0x10], rax	       135	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_1
0x6bf	      0xb8ffffff7f	                     mov eax, 0x7fffffff	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x6c4	        0x482b45f0	             sub rax, qword [rbp - 0x10]	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x6c8	          0x4889c2	                            mov rdx, rax	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x6cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x6cf	          0x4889d6	                            mov rsi, rdx	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x6d2	          0x4889c7	                            mov rdi, rax	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x6d5	      0xe82efbffff	                       call sym.min_size	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x6da	        0x488945f8	                mov qword [rbp - 8], rax	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x6de	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x6e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x6e6	          0x4801c2	                            add rdx, rax	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x6e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x6ed	        0x488b4020	            mov rax, qword [rax + 0x20] 	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x6f1	          0x4889d6	                            mov rsi, rdx	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x6f4	          0x4889c7	                            mov rdi, rax	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x6f7	      0xe86bfaffff	          call sym.rlw_set_literal_words	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x6fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x700	        0x488b5008	                mov rdx, qword [rax + 8]	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x704	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x708	          0x4801c2	                            add rdx, rax	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x70b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x70f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x713	          0x4839c2	                            cmp rdx, rax	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x716	            0x722d	                            jb 0x4000785	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x718	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x71c	        0x488b5008	                mov rdx, qword [rax + 8]	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x720	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x724	          0x4801c2	                            add rdx, rax	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x727	          0x4889d0	                            mov rax, rdx	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x72a	          0x4801c0	                            add rax, rax	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x72d	          0x4801d0	                            add rax, rdx	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x730	          0x48d1e8	                              shr rax, 1	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x733	          0x4889c2	                            mov rdx, rax	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x736	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x73a	          0x4889d6	                            mov rsi, rdx	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x73d	          0x4889c7	                            mov rdi, rax	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x740	      0xe8f9faffff	                    call sym.buffer_grow	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x745	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       143	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2
0x749	            0x7459	                            je 0x40007e4	       143	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2
0x74b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x753	            0xeb43	                           jmp 0x40007d8	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x755	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x759	          0x488b30	                    mov rsi, qword [rax]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x75c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x760	        0x488b4008	                mov rax, qword [rax + 8]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x764	        0x488d4801	                      lea rcx, [rax + 1]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x768	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x76c	        0x48894a08	                mov qword [rdx + 8], rcx	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x770	        0x48c1e003	                              shl rax, 3	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x774	          0x4801f0	                            add rax, rsi	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x777	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x77b	    0x488d0cd50000	                        lea rcx, [rdx*8]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x783	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x787	          0x4801ca	                            add rdx, rcx	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x78a	          0x488b12	                    mov rdx, qword [rdx]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x78d	          0x48f7d2	                                 not rdx	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x790	          0x488910	                    mov qword [rax], rdx	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x793	      0x488345e801	               add qword [rbp - 0x18], 1	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x798	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x79c	        0x483b45f8	                cmp rax, qword [rbp - 8]	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x7a0	            0x72b3	                            jb 0x4000795	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x7a2	            0xeb48	                           jmp 0x400082c	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x7a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7a8	    0x488d14c50000	                        lea rdx, [rax*8]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7b4	          0x488b08	                    mov rcx, qword [rax]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7bb	        0x488b4008	                mov rax, qword [rax + 8]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7bf	        0x48c1e003	                              shl rax, 3	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7c3	          0x4801c1	                            add rcx, rax	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7ca	          0x4889c6	                            mov rsi, rax	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7cd	          0x4889cf	                            mov rdi, rcx	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7d0	      0xe800000000	                          call 0x4000815	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x7d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x7d9	        0x488b5008	                mov rdx, qword [rax + 8]	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x7dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x7e1	          0x4801c2	                            add rdx, rax	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x7e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x7e8	        0x48895008	                mov qword [rax + 8], rdx	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x7ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x7f0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x7f4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x7f8	        0x48c1e206	                              shl rdx, 6	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x7fc	          0x4801c2	                            add rdx, rax	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x7ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x803	        0x48895018	             mov qword [rax + 0x18], rdx	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x807	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       155	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_3
0x80b	        0x483b45f8	                cmp rax, qword [rbp - 8]	       155	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_3
0x80f	            0x742a	                            je 0x400087b	       155	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_3
0x811	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       158	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_6
0x815	      0xbe00000000	                              mov esi, 0	       158	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_6
0x81a	          0x4889c7	                            mov rdi, rax	       158	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_6
0x81d	      0xe835fbffff	                call sym.buffer_push_rlw	       158	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_6
0x822	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x826	        0x48c1e003	                              shl rax, 3	       159	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x82a	        0x480145d0	            add qword [rbp - 0x30], rax 	       159	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x82e	        0x488b45f8	                mov rax, qword [rbp - 8]	       160	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x832	        0x482945c8	             sub qword [rbp - 0x38], rax	       160	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x836	      0xe970feffff	                           jmp 0x40006eb	       161	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x83b	              0x90	                                     nop	       156	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_3
0x83c	              0x90	                                     nop	       162	ewah_bitmap.c	FUNCTION_9
0x83d	              0xc9	                                   leave	       162	ewah_bitmap.c	FUNCTION_9
0x83e	              0xc3	                                     ret	       162	ewah_bitmap.c	FUNCTION_9
buffer_push	ELSE,0:IF,1:CALL,1:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	37
0x2db	              0x55	                                push rbp	        46	ewah_bitmap.c	FUNCTION_4
0x2dc	          0x4889e5	                            mov rbp, rsp	        46	ewah_bitmap.c	FUNCTION_4
0x2df	        0x4883ec10	                           sub rsp, 0x10	        46	ewah_bitmap.c	FUNCTION_4
0x2e3	        0x48897df8	                mov qword [rbp - 8], rdi	        46	ewah_bitmap.c	FUNCTION_4
0x2e7	        0x488975f0	             mov qword [rbp - 0x10], rsi	        46	ewah_bitmap.c	FUNCTION_4
0x2eb	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x2ef	        0x488b4008	                mov rax, qword [rax + 8]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x2f3	        0x488d5001	                      lea rdx, [rax + 1]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x2f7	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x2fb	        0x488b4010	            mov rax, qword [rax + 0x10] 	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x2ff	          0x4839c2	                            cmp rdx, rax	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x302	            0x7226	                            jb 0x400036a	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x304	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x308	        0x488b5008	                mov rdx, qword [rax + 8]	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x30c	          0x4889d0	                            mov rax, rdx	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x30f	          0x4801c0	                            add rax, rax	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x312	          0x4801d0	                            add rax, rdx	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x315	          0x48d1e8	                              shr rax, 1	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x318	          0x4889c2	                            mov rdx, rax	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x31b	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x31f	          0x4889d6	                            mov rsi, rdx	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x322	          0x4889c7	                            mov rdi, rax	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x325	      0xe814ffffff	                    call sym.buffer_grow	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x32a	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	ewah_bitmap.c	FUNCTION_4
0x32e	          0x488b30	                    mov rsi, qword [rax]	        50	ewah_bitmap.c	FUNCTION_4
0x331	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	ewah_bitmap.c	FUNCTION_4
0x335	        0x488b4008	                mov rax, qword [rax + 8]	        50	ewah_bitmap.c	FUNCTION_4
0x339	        0x488d4801	                      lea rcx, [rax + 1]	        50	ewah_bitmap.c	FUNCTION_4
0x33d	        0x488b55f8	                mov rdx, qword [rbp - 8]	        50	ewah_bitmap.c	FUNCTION_4
0x341	        0x48894a08	                mov qword [rdx + 8], rcx	        50	ewah_bitmap.c	FUNCTION_4
0x345	        0x48c1e003	                              shl rax, 3	        50	ewah_bitmap.c	FUNCTION_4
0x349	        0x488d1406	                    lea rdx, [rsi + rax]	        50	ewah_bitmap.c	FUNCTION_4
0x34d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        50	ewah_bitmap.c	FUNCTION_4
0x351	          0x488902	                    mov qword [rdx], rax	        50	ewah_bitmap.c	FUNCTION_4
0x354	              0x90	                                     nop	        51	ewah_bitmap.c	FUNCTION_4
0x355	              0xc9	                                   leave	        51	ewah_bitmap.c	FUNCTION_4
0x356	              0xc3	                                     ret	        51	ewah_bitmap.c	FUNCTION_4
rlwit_word_size	ELSE,0:IF,0:CALL,0:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	11
0x1ec	              0x55	                                push rbp	       104	ewok_rlw.h	FUNCTION_36
0x1ed	          0x4889e5	                            mov rbp, rsp	       104	ewok_rlw.h	FUNCTION_36
0x1f0	        0x48897df8	                mov qword [rbp - 8], rdi	       104	ewok_rlw.h	FUNCTION_36
0x1f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	ewok_rlw.h	FUNCTION_36
0x1f8	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       105	ewok_rlw.h	FUNCTION_36
0x1fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	ewok_rlw.h	FUNCTION_36
0x1ff	          0x8b4028	            mov eax, dword [rax + 0x28] 	       105	ewok_rlw.h	FUNCTION_36
0x202	             0x1d0	                            add eax, edx	       105	ewok_rlw.h	FUNCTION_36
0x204	            0x4898	                                    cdqe	       105	ewok_rlw.h	FUNCTION_36
0x206	              0x5d	                                 pop rbp	       106	ewok_rlw.h	FUNCTION_36
0x207	              0xc3	                                     ret	       106	ewok_rlw.h	FUNCTION_36
ewah_checksum	ELSE,0:IF,0:CALL,0:DO,0:WHILE,1:SWITCH,0:FOR,0:functions,0	33
0x1fd0	              0x55	                                push rbp	       700	ewah_bitmap.c	FUNCTION_27
0x1fd1	          0x4889e5	                            mov rbp, rsp	       700	ewah_bitmap.c	FUNCTION_27
0x1fd4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       700	ewah_bitmap.c	FUNCTION_27
0x1fd8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       701	ewah_bitmap.c	FUNCTION_27
0x1fdc	          0x488b00	                    mov rax, qword [rax]	       701	ewah_bitmap.c	FUNCTION_27
0x1fdf	        0x488945f0	             mov qword [rbp - 0x10], rax	       701	ewah_bitmap.c	FUNCTION_27
0x1fe3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       702	ewah_bitmap.c	FUNCTION_27
0x1fe7	        0x488b4018	            mov rax, qword [rax + 0x18] 	       702	ewah_bitmap.c	FUNCTION_27
0x1feb	          0x8945ec	             mov dword [rbp - 0x14], eax	       702	ewah_bitmap.c	FUNCTION_27
0x1fee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       703	ewah_bitmap.c	FUNCTION_27
0x1ff2	        0x488b4008	                mov rax, qword [rax + 8]	       703	ewah_bitmap.c	FUNCTION_27
0x1ff6	        0x48c1e003	                              shl rax, 3	       703	ewah_bitmap.c	FUNCTION_27
0x1ffa	        0x488945f8	                mov qword [rbp - 8], rax	       703	ewah_bitmap.c	FUNCTION_27
0x1ffe	            0xeb22	                           jmp 0x4002062	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x2000	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x2003	          0xc1e005	                              shl eax, 5	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x2006	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x2009	            0x89c1	                            mov ecx, eax	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x200b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x200f	        0x488d5001	                      lea rdx, [rax + 1]	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x2013	        0x488955f0	             mov qword [rbp - 0x10], rdx	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x2017	           0xfb600	                   movzx eax, byte [rax]	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x201a	           0xfb6c0	                           movzx eax, al	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x201d	             0x1c8	                            add eax, ecx	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x201f	          0x8945ec	             mov dword [rbp - 0x14], eax	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x2022	        0x488b45f8	                mov rax, qword [rbp - 8]	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x2026	        0x488d50ff	                      lea rdx, [rax - 1]	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x202a	        0x488955f8	                mov qword [rbp - 8], rdx	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x202e	          0x4885c0	                           test rax, rax	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x2031	            0x75cd	                           jne 0x4002040	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x2033	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       708	ewah_bitmap.c	FUNCTION_27
0x2036	              0x5d	                                 pop rbp	       709	ewah_bitmap.c	FUNCTION_27
0x2037	              0xc3	                                     ret	       709	ewah_bitmap.c	FUNCTION_27
rlw_size	ELSE,0:IF,0:CALL,2:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	17
0x1ba	              0x55	                                push rbp	        78	ewok_rlw.h	FUNCTION_35
0x1bb	          0x4889e5	                            mov rbp, rsp	        78	ewok_rlw.h	FUNCTION_35
0x1be	              0x53	                                push rbx	        78	ewok_rlw.h	FUNCTION_35
0x1bf	        0x4883ec08	                              sub rsp, 8	        78	ewok_rlw.h	FUNCTION_35
0x1c3	        0x48897df0	             mov qword [rbp - 0x10], rdi	        78	ewok_rlw.h	FUNCTION_35
0x1c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        79	ewok_rlw.h	FUNCTION_35	CALL_2
0x1cb	          0x4889c7	                            mov rdi, rax	        79	ewok_rlw.h	FUNCTION_35	CALL_2
0x1ce	      0xe869ffffff	            call sym.rlw_get_running_len	        79	ewok_rlw.h	FUNCTION_35	CALL_2
0x1d3	          0x4889c3	                            mov rbx, rax	        79	ewok_rlw.h	FUNCTION_35	CALL_2
0x1d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        79	ewok_rlw.h	FUNCTION_35	CALL_2
0x1da	          0x4889c7	                            mov rdi, rax	        79	ewok_rlw.h	FUNCTION_35	CALL_2
0x1dd	      0xe870ffffff	          call sym.rlw_get_literal_words	        79	ewok_rlw.h	FUNCTION_35	CALL_2
0x1e2	          0x4801d8	                            add rax, rbx	        79	ewok_rlw.h	FUNCTION_35	CALL_2
0x1e5	        0x4883c408	                              add rsp, 8	        80	ewok_rlw.h	FUNCTION_35
0x1e9	              0x5b	                                 pop rbx	        80	ewok_rlw.h	FUNCTION_35
0x1ea	              0x5d	                                 pop rbp	        80	ewok_rlw.h	FUNCTION_35
0x1eb	              0xc3	                                     ret	        80	ewok_rlw.h	FUNCTION_35
st_mult	ELSE,0:IF,1:CALL,2:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	22
0x0	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_52
0x1	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_52
0x4	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_52
0x8	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_52
0xc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_52
0x10	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x15	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x17	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x1e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x23	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x27	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x2b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x2d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x31	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x35	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x38	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x3d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x42	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x47	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_52
0x4b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_52
0x50	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_52
0x51	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_52
rlw_set_running_len	ELSE,0:IF,0:CALL,0:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	22
0xec	              0x55	                                push rbp	        56	ewok_rlw.h	FUNCTION_31
0xed	          0x4889e5	                            mov rbp, rsp	        56	ewok_rlw.h	FUNCTION_31
0xf0	        0x48897df8	                mov qword [rbp - 8], rdi	        56	ewok_rlw.h	FUNCTION_31
0xf4	        0x488975f0	             mov qword [rbp - 0x10], rsi	        56	ewok_rlw.h	FUNCTION_31
0xf8	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	ewok_rlw.h	FUNCTION_31
0xfc	          0x488b10	                    mov rdx, qword [rax]	        57	ewok_rlw.h	FUNCTION_31
0xff	    0x48b8feffffff	                 movabs rax, 0x1fffffffe	        57	ewok_rlw.h	FUNCTION_31
0x109	          0x4809c2	                             or rdx, rax	        57	ewok_rlw.h	FUNCTION_31
0x10c	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	ewok_rlw.h	FUNCTION_31
0x110	          0x488910	                    mov qword [rax], rdx	        57	ewok_rlw.h	FUNCTION_31
0x113	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	ewok_rlw.h	FUNCTION_31
0x117	          0x488b00	                    mov rax, qword [rax]	        58	ewok_rlw.h	FUNCTION_31
0x11a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        58	ewok_rlw.h	FUNCTION_31
0x11e	        0x488d0c12	                    lea rcx, [rdx + rdx]	        58	ewok_rlw.h	FUNCTION_31
0x122	    0x48ba01000000	          movabs rdx, 0xfffffffe00000001	        58	ewok_rlw.h	FUNCTION_31
0x12c	          0x4809ca	                             or rdx, rcx	        58	ewok_rlw.h	FUNCTION_31
0x12f	          0x4821c2	                            and rdx, rax	        58	ewok_rlw.h	FUNCTION_31
0x132	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	ewok_rlw.h	FUNCTION_31
0x136	          0x488910	                    mov qword [rax], rdx	        58	ewok_rlw.h	FUNCTION_31
0x139	              0x90	                                     nop	        59	ewok_rlw.h	FUNCTION_31
0x13a	              0x5d	                                 pop rbp	        59	ewok_rlw.h	FUNCTION_31
0x13b	              0xc3	                                     ret	        59	ewok_rlw.h	FUNCTION_31
rlw_get_running_len	ELSE,0:IF,0:CALL,0:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	9
0x13c	              0x55	                                push rbp	        62	ewok_rlw.h	FUNCTION_32
0x13d	          0x4889e5	                            mov rbp, rsp	        62	ewok_rlw.h	FUNCTION_32
0x140	        0x48897df8	                mov qword [rbp - 8], rdi	        62	ewok_rlw.h	FUNCTION_32
0x144	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	ewok_rlw.h	FUNCTION_32
0x148	          0x488b00	                    mov rax, qword [rax]	        63	ewok_rlw.h	FUNCTION_32
0x14b	          0x48d1e8	                              shr rax, 1	        63	ewok_rlw.h	FUNCTION_32
0x14e	            0x89c0	                            mov eax, eax	        63	ewok_rlw.h	FUNCTION_32
0x150	              0x5d	                                 pop rbp	        64	ewok_rlw.h	FUNCTION_32
0x151	              0xc3	                                     ret	        64	ewok_rlw.h	FUNCTION_32
add_empty_word	ELSE,1:IF,2:CALL,24:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	157
0x83f	              0x55	                                push rbp	       165	ewah_bitmap.c	FUNCTION_10
0x840	          0x4889e5	                            mov rbp, rsp	       165	ewah_bitmap.c	FUNCTION_10
0x843	        0x4883ec20	                           sub rsp, 0x20	       165	ewah_bitmap.c	FUNCTION_10
0x847	        0x48897de8	             mov qword [rbp - 0x18], rdi	       165	ewah_bitmap.c	FUNCTION_10
0x84b	          0x8975e4	             mov dword [rbp - 0x1c], esi	       165	ewah_bitmap.c	FUNCTION_10
0x84e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x852	        0x488b4020	            mov rax, qword [rax + 0x20] 	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x856	          0x4889c7	                            mov rdi, rax	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x859	      0xe8f4f8ffff	          call sym.rlw_get_literal_words	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x85e	          0x4885c0	                           test rax, rax	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x861	           0xf94c0	                                 sete al	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x864	           0xfb6c0	                           movzx eax, al	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x867	          0x8945f4	              mov dword [rbp - 0xc], eax	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x86a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       167	ewah_bitmap.c	FUNCTION_10	CALL_2
0x86e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       167	ewah_bitmap.c	FUNCTION_10	CALL_2
0x872	          0x4889c7	                            mov rdi, rax	       167	ewah_bitmap.c	FUNCTION_10	CALL_2
0x875	      0xe8c2f8ffff	            call sym.rlw_get_running_len	       167	ewah_bitmap.c	FUNCTION_10	CALL_2
0x87a	        0x488945f8	                mov qword [rbp - 8], rax	       167	ewah_bitmap.c	FUNCTION_10	CALL_2
0x87e	        0x837df400	                cmp dword [rbp - 0xc], 0	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x882	            0x744a	                            je 0x400090e	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x884	      0x48837df800	                  cmp qword [rbp - 8], 0	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x889	            0x7543	                           jne 0x400090e	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x88b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x88f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x893	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x896	            0x89d6	                            mov esi, edx	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x898	          0x4889c7	                            mov rdi, rax	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x89b	      0xe8c6f7ffff	                call sym.rlw_set_run_bit	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x8a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x8a4	        0x488b4020	            mov rax, qword [rax + 0x20] 	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x8a8	          0x4889c7	                            mov rdi, rax	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x8ab	      0xe8a2f7ffff	                call sym.rlw_get_run_bit	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x8b0	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x8b3	            0x7419	                            je 0x400090e	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x8b5	      0xb900000000	                              mov ecx, 0	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x8ba	      0xbaab000000	                           mov edx, 0xab	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x8bf	      0xbe00000000	                              mov esi, 0	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x8c4	      0xbf00000000	                              mov edi, 0	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x8c9	      0xe800000000	                          call 0x400090e	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x8ce	        0x837df400	                cmp dword [rbp - 0xc], 0	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x8d2	            0x747e	                            je 0x4000992	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x8d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x8d8	        0x488b4020	            mov rax, qword [rax + 0x20] 	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x8dc	          0x4889c7	                            mov rdi, rax	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x8df	      0xe86ef7ffff	                call sym.rlw_get_run_bit	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x8e4	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x8e7	            0x7569	                           jne 0x4000992	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x8e9	      0xb8feffffff	                     mov eax, 0xfffffffe	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x8ee	        0x483945f8	                cmp qword [rbp - 8], rax	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x8f2	            0x775e	                            ja 0x4000992	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x8f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x8f8	        0x488d5001	                      lea rdx, [rax + 1]	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x8fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x900	        0x488b4020	            mov rax, qword [rax + 0x20] 	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x904	          0x4889d6	                            mov rsi, rdx	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x907	          0x4889c7	                            mov rdi, rax	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x90a	      0xe8ddf7ffff	            call sym.rlw_set_running_len	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x90f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x913	        0x488b4020	            mov rax, qword [rax + 0x20] 	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x917	          0x4889c7	                            mov rdi, rax	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x91a	      0xe81df8ffff	            call sym.rlw_get_running_len	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x91f	          0x4889c2	                            mov rdx, rax	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x922	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x926	        0x4883c001	                              add rax, 1	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x92a	          0x4839c2	                            cmp rdx, rax	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x92d	            0x7419	                            je 0x4000988	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x92f	      0xb900000000	                              mov ecx, 0	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x934	      0xbab1000000	                           mov edx, 0xb1	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x939	      0xbe00000000	                              mov esi, 0	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x93e	      0xbf00000000	                              mov edi, 0	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x943	      0xe800000000	                          call 0x4000988	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x948	      0xb800000000	                              mov eax, 0	       178	ewah_bitmap.c	FUNCTION_10	IF_2
0x94d	      0xe954010000	                           jmp 0x4000ae6	       178	ewah_bitmap.c	FUNCTION_10	IF_2
0x952	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       180	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_10
0x956	      0xbe00000000	                              mov esi, 0	       180	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_10
0x95b	          0x4889c7	                            mov rdi, rax	       180	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_10
0x95e	      0xe8f4f9ffff	                call sym.buffer_push_rlw	       180	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_10
0x963	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x967	        0x488b4020	            mov rax, qword [rax + 0x20] 	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x96b	          0x4889c7	                            mov rdi, rax	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x96e	      0xe8c9f7ffff	            call sym.rlw_get_running_len	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x973	          0x4885c0	                           test rax, rax	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x976	            0x7419	                            je 0x40009d1	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x978	      0xb900000000	                              mov ecx, 0	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x97d	      0xbab6000000	                           mov edx, 0xb6	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x982	      0xbe00000000	                              mov esi, 0	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x987	      0xbf00000000	                              mov edi, 0	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x98c	      0xe800000000	                          call 0x40009d1	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x991	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x995	        0x488b4020	            mov rax, qword [rax + 0x20] 	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x999	          0x4889c7	                            mov rdi, rax	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x99c	      0xe8b1f6ffff	                call sym.rlw_get_run_bit	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x9a1	            0x85c0	                           test eax, eax	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x9a3	            0x7419	                            je 0x40009fe	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x9a5	      0xb900000000	                              mov ecx, 0	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x9aa	      0xbab7000000	                           mov edx, 0xb7	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x9af	      0xbe00000000	                              mov esi, 0	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x9b4	      0xbf00000000	                              mov edi, 0	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x9b9	      0xe800000000	                          call 0x40009fe	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x9be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x9c2	        0x488b4020	            mov rax, qword [rax + 0x20] 	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x9c6	          0x4889c7	                            mov rdi, rax	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x9c9	      0xe884f7ffff	          call sym.rlw_get_literal_words	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x9ce	          0x4885c0	                           test rax, rax	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x9d1	            0x7419	                            je 0x4000a2c	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x9d3	      0xb900000000	                              mov ecx, 0	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x9d8	      0xbab8000000	                           mov edx, 0xb8	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x9dd	      0xbe00000000	                              mov esi, 0	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x9e2	      0xbf00000000	                              mov edi, 0	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x9e7	      0xe800000000	                          call 0x4000a2c	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x9ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0x9f0	        0x488b4020	            mov rax, qword [rax + 0x20] 	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0x9f4	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0x9f7	            0x89d6	                            mov esi, edx	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0x9f9	          0x4889c7	                            mov rdi, rax	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0x9fc	      0xe865f6ffff	                call sym.rlw_set_run_bit	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0xa01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0xa05	        0x488b4020	            mov rax, qword [rax + 0x20] 	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0xa09	          0x4889c7	                            mov rdi, rax	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0xa0c	      0xe841f6ffff	                call sym.rlw_get_run_bit	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0xa11	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0xa14	            0x7419	                            je 0x4000a6f	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0xa16	      0xb900000000	                              mov ecx, 0	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0xa1b	      0xbabb000000	                           mov edx, 0xbb	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0xa20	      0xbe00000000	                              mov esi, 0	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0xa25	      0xbf00000000	                              mov edi, 0	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0xa2a	      0xe800000000	                          call 0x4000a6f	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0xa2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       189	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_20
0xa33	        0x488b4020	            mov rax, qword [rax + 0x20] 	       189	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_20
0xa37	      0xbe01000000	                              mov esi, 1	       189	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_20
0xa3c	          0x4889c7	                            mov rdi, rax	       189	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_20
0xa3f	      0xe8a8f6ffff	            call sym.rlw_set_running_len	       189	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_20
0xa44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0xa48	        0x488b4020	            mov rax, qword [rax + 0x20] 	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0xa4c	          0x4889c7	                            mov rdi, rax	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0xa4f	      0xe8e8f6ffff	            call sym.rlw_get_running_len	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0xa54	        0x4883f801	                              cmp rax, 1	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0xa58	            0x7419	                            je 0x4000ab3	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0xa5a	      0xb900000000	                              mov ecx, 0	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0xa5f	      0xbabe000000	                           mov edx, 0xbe	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0xa64	      0xbe00000000	                              mov esi, 0	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0xa69	      0xbf00000000	                              mov edi, 0	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0xa6e	      0xe800000000	                          call 0x4000ab3	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0xa73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0xa77	        0x488b4020	            mov rax, qword [rax + 0x20] 	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0xa7b	          0x4889c7	                            mov rdi, rax	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0xa7e	      0xe8cff6ffff	          call sym.rlw_get_literal_words	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0xa83	          0x4885c0	                           test rax, rax	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0xa86	            0x7419	                            je 0x4000ae1	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0xa88	      0xb900000000	                              mov ecx, 0	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0xa8d	      0xbabf000000	                           mov edx, 0xbf	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0xa92	      0xbe00000000	                              mov esi, 0	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0xa97	      0xbf00000000	                              mov edi, 0	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0xa9c	      0xe800000000	                          call 0x4000ae1	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0xaa1	      0xb801000000	                              mov eax, 1	       192	ewah_bitmap.c	FUNCTION_10	ELSE_1
0xaa6	              0xc9	                                   leave	       194	ewah_bitmap.c	FUNCTION_10
0xaa7	              0xc3	                                     ret	       194	ewah_bitmap.c	FUNCTION_10
add_empty_words	ELSE,1:IF,6:CALL,16:DO,0:WHILE,1:SWITCH,0:FOR,0:functions,0	122
0x39f	              0x55	                                push rbp	        60	ewah_bitmap.c	FUNCTION_6
0x3a0	          0x4889e5	                            mov rbp, rsp	        60	ewah_bitmap.c	FUNCTION_6
0x3a3	        0x4883ec40	                           sub rsp, 0x40	        60	ewah_bitmap.c	FUNCTION_6
0x3a7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        60	ewah_bitmap.c	FUNCTION_6
0x3ab	          0x8975d4	             mov dword [rbp - 0x2c], esi	        60	ewah_bitmap.c	FUNCTION_6
0x3ae	        0x488955c8	             mov qword [rbp - 0x38], rdx	        60	ewah_bitmap.c	FUNCTION_6
0x3b2	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        61	ewah_bitmap.c	FUNCTION_6
0x3ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3be	        0x488b4020	            mov rax, qword [rax + 0x20] 	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3c2	          0x4889c7	                            mov rdi, rax	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3c5	      0xe888fcffff	                call sym.rlw_get_run_bit	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3ca	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3cd	            0x742c	                            je 0x400043b	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3d3	        0x488b4020	            mov rax, qword [rax + 0x20] 	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3d7	          0x4889c7	                            mov rdi, rax	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3da	      0xe8dbfdffff	                       call sym.rlw_size	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3df	          0x4885c0	                           test rax, rax	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3e2	            0x7517	                           jne 0x400043b	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x3e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x3e8	        0x488b4020	            mov rax, qword [rax + 0x20] 	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x3ec	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x3ef	            0x89d6	                            mov esi, edx	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x3f1	          0x4889c7	                            mov rdi, rax	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x3f4	      0xe86dfcffff	                call sym.rlw_set_run_bit	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x3f9	            0xeb5b	                           jmp 0x4000496	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x3fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x3ff	        0x488b4020	            mov rax, qword [rax + 0x20] 	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x403	          0x4889c7	                            mov rdi, rax	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x406	      0xe847fdffff	          call sym.rlw_get_literal_words	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x40b	          0x4885c0	                           test rax, rax	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x40e	            0x7515	                           jne 0x4000465	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x410	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        67	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x414	        0x488b4020	            mov rax, qword [rax + 0x20] 	        67	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x418	          0x4889c7	                            mov rdi, rax	        67	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x41b	      0xe832fcffff	                call sym.rlw_get_run_bit	        67	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x420	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x423	            0x7431	                            je 0x4000496	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x425	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        68	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x429	      0xbe00000000	                              mov esi, 0	        68	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x42e	          0x4889c7	                            mov rdi, rax	        68	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x431	      0xe821ffffff	                call sym.buffer_push_rlw	        68	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x436	        0x837dd400	               cmp dword [rbp - 0x2c], 0	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x43a	            0x7415	                            je 0x4000491	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x43c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x440	        0x488b4020	            mov rax, qword [rax + 0x20] 	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x444	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x447	            0x89d6	                            mov esi, edx	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x449	          0x4889c7	                            mov rdi, rax	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x44c	      0xe815fcffff	                call sym.rlw_set_run_bit	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x451	      0x488345e801	               add qword [rbp - 0x18], 1	        70	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2
0x456	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        73	ewah_bitmap.c	FUNCTION_6	CALL_8
0x45a	        0x488b4020	            mov rax, qword [rax + 0x20] 	        73	ewah_bitmap.c	FUNCTION_6	CALL_8
0x45e	          0x4889c7	                            mov rdi, rax	        73	ewah_bitmap.c	FUNCTION_6	CALL_8
0x461	      0xe8d6fcffff	            call sym.rlw_get_running_len	        73	ewah_bitmap.c	FUNCTION_6	CALL_8
0x466	        0x488945f0	             mov qword [rbp - 0x10], rax	        73	ewah_bitmap.c	FUNCTION_6	CALL_8
0x46a	      0xb8ffffffff	                     mov eax, 0xffffffff	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x46f	        0x482b45f0	             sub rax, qword [rbp - 0x10]	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x473	          0x4889c2	                            mov rdx, rax	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x476	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x47a	          0x4889d6	                            mov rsi, rdx	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x47d	          0x4889c7	                            mov rdi, rax	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x480	      0xe883fdffff	                       call sym.min_size	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x485	        0x488945f8	                mov qword [rbp - 8], rax	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x489	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x48d	        0x488b45f8	                mov rax, qword [rbp - 8]	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x491	          0x4801c2	                            add rdx, rax	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x494	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x498	        0x488b4020	            mov rax, qword [rax + 0x20] 	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x49c	          0x4889d6	                            mov rsi, rdx	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x49f	          0x4889c7	                            mov rdi, rax	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x4a2	      0xe845fcffff	            call sym.rlw_set_running_len	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x4a7	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	ewah_bitmap.c	FUNCTION_6
0x4ab	        0x482945c8	             sub qword [rbp - 0x38], rax	        77	ewah_bitmap.c	FUNCTION_6
0x4af	            0xeb54	                           jmp 0x4000545	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x4b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        80	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_11
0x4b5	      0xbe00000000	                              mov esi, 0	        80	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_11
0x4ba	          0x4889c7	                            mov rdi, rax	        80	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_11
0x4bd	      0xe895feffff	                call sym.buffer_push_rlw	        80	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_11
0x4c2	      0x488345e801	               add qword [rbp - 0x18], 1	        81	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x4c7	        0x837dd400	               cmp dword [rbp - 0x2c], 0	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4cb	            0x7415	                            je 0x4000522	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4d1	        0x488b4020	            mov rax, qword [rax + 0x20] 	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4d5	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4d8	            0x89d6	                            mov esi, edx	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4da	          0x4889c7	                            mov rdi, rax	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4dd	      0xe884fbffff	                call sym.rlw_set_run_bit	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        83	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_13
0x4e6	        0x488b4020	            mov rax, qword [rax + 0x20] 	        83	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_13
0x4ea	      0xbeffffffff	                     mov esi, 0xffffffff	        83	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_13
0x4ef	          0x4889c7	                            mov rdi, rax	        83	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_13
0x4f2	      0xe8f5fbffff	            call sym.rlw_set_running_len	        83	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_13
0x4f7	    0x48b801000000	          movabs rax, 0xffffffff00000001	        84	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x501	        0x480145c8	            add qword [rbp - 0x38], rax 	        84	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x505	      0xb8feffffff	                     mov eax, 0xfffffffe	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x50a	        0x483945c8	            cmp qword [rbp - 0x38], rax 	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x50e	            0x77a1	                            ja 0x40004f1	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x510	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        87	ewah_bitmap.c	FUNCTION_6	IF_5
0x515	            0x7448	                            je 0x400059f	        87	ewah_bitmap.c	FUNCTION_6	IF_5
0x517	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        88	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_14
0x51b	      0xbe00000000	                              mov esi, 0	        88	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_14
0x520	          0x4889c7	                            mov rdi, rax	        88	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_14
0x523	      0xe82ffeffff	                call sym.buffer_push_rlw	        88	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_14
0x528	      0x488345e801	               add qword [rbp - 0x18], 1	        89	ewah_bitmap.c	FUNCTION_6	IF_5
0x52d	        0x837dd400	               cmp dword [rbp - 0x2c], 0	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x531	            0x7415	                            je 0x4000588	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x533	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x537	        0x488b4020	            mov rax, qword [rax + 0x20] 	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x53b	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x53e	            0x89d6	                            mov esi, edx	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x540	          0x4889c7	                            mov rdi, rax	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x543	      0xe81efbffff	                call sym.rlw_set_run_bit	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x548	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x54c	        0x488b4020	            mov rax, qword [rax + 0x20] 	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x550	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x554	          0x4889d6	                            mov rsi, rdx	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x557	          0x4889c7	                            mov rdi, rax	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x55a	      0xe88dfbffff	            call sym.rlw_set_running_len	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x55f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	ewah_bitmap.c	FUNCTION_6
0x563	              0xc9	                                   leave	        96	ewah_bitmap.c	FUNCTION_6
0x564	              0xc3	                                     ret	        96	ewah_bitmap.c	FUNCTION_6
rlw_xor_run_bit	ELSE,1:IF,1:CALL,0:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	24
0xa6	              0x55	                                push rbp	        47	ewok_rlw.h	FUNCTION_30
0xa7	          0x4889e5	                            mov rbp, rsp	        47	ewok_rlw.h	FUNCTION_30
0xaa	        0x48897df8	                mov qword [rbp - 8], rdi	        47	ewok_rlw.h	FUNCTION_30
0xae	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	ewok_rlw.h	FUNCTION_30	IF_1
0xb2	          0x488b00	                    mov rax, qword [rax]	        48	ewok_rlw.h	FUNCTION_30	IF_1
0xb5	          0x83e001	                              and eax, 1	        48	ewok_rlw.h	FUNCTION_30	IF_1
0xb8	          0x4885c0	                           test rax, rax	        48	ewok_rlw.h	FUNCTION_30	IF_1
0xbb	            0x7417	                            je 0x4000114	        48	ewok_rlw.h	FUNCTION_30	IF_1
0xbd	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	ewok_rlw.h	FUNCTION_30	IF_1
0xc1	          0x488b00	                    mov rax, qword [rax]	        49	ewok_rlw.h	FUNCTION_30	IF_1
0xc4	        0x4883e0fe	             and rax, 0xfffffffffffffffe	        49	ewok_rlw.h	FUNCTION_30	IF_1
0xc8	          0x4889c2	                            mov rdx, rax	        49	ewok_rlw.h	FUNCTION_30	IF_1
0xcb	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	ewok_rlw.h	FUNCTION_30	IF_1
0xcf	          0x488910	                    mov qword [rax], rdx	        49	ewok_rlw.h	FUNCTION_30	IF_1
0xd2	            0xeb15	                           jmp 0x4000129	        53	ewok_rlw.h	FUNCTION_30
0xd4	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	ewok_rlw.h	FUNCTION_30	ELSE_1
0xd8	          0x488b00	                    mov rax, qword [rax]	        51	ewok_rlw.h	FUNCTION_30	ELSE_1
0xdb	        0x4883c801	                               or rax, 1	        51	ewok_rlw.h	FUNCTION_30	ELSE_1
0xdf	          0x4889c2	                            mov rdx, rax	        51	ewok_rlw.h	FUNCTION_30	ELSE_1
0xe2	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	ewok_rlw.h	FUNCTION_30	ELSE_1
0xe6	          0x488910	                    mov qword [rax], rdx	        51	ewok_rlw.h	FUNCTION_30	ELSE_1
0xe9	              0x90	                                     nop	        53	ewok_rlw.h	FUNCTION_30
0xea	              0x5d	                                 pop rbp	        53	ewok_rlw.h	FUNCTION_30
0xeb	              0xc3	                                     ret	        53	ewok_rlw.h	FUNCTION_30
ewah_or	ELSE,3:IF,4:CALL,18:DO,0:WHILE,2:SWITCH,0:FOR,1:functions,0	180
0x1c11	              0x55	                                push rbp	       607	ewah_bitmap.c	FUNCTION_24
0x1c12	          0x4889e5	                            mov rbp, rsp	       607	ewah_bitmap.c	FUNCTION_24
0x1c15	    0x4881ecd00000	                           sub rsp, 0xd0	       607	ewah_bitmap.c	FUNCTION_24
0x1c1c	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       607	ewah_bitmap.c	FUNCTION_24
0x1c23	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       607	ewah_bitmap.c	FUNCTION_24
0x1c2a	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       607	ewah_bitmap.c	FUNCTION_24
0x1c31	    0x64488b042528	                mov rax, qword fs:[0x28]	       607	ewah_bitmap.c	FUNCTION_24
0x1c3a	        0x488945f8	                mov qword [rbp - 8], rax	       607	ewah_bitmap.c	FUNCTION_24
0x1c3e	            0x31c0	                            xor eax, eax	       607	ewah_bitmap.c	FUNCTION_24
0x1c40	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x1c47	        0x488d4580	                   lea rax, [rbp - 0x80]	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x1c4b	          0x4889d6	                            mov rsi, rdx	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x1c4e	          0x4889c7	                            mov rdi, rax	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x1c51	      0xe800000000	                          call 0x4001c96	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x1c56	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x1c5d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x1c61	          0x4889d6	                            mov rsi, rdx	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x1c64	          0x4889c7	                            mov rdi, rax	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x1c67	      0xe800000000	                          call 0x4001cac	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x1c6c	      0xe9fe010000	                           jmp 0x4001eaf	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x1c71	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       619	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x1c74	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       619	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x1c77	            0x39c2	                            cmp edx, eax	       619	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x1c79	            0x7d18	                           jge 0x4001cd3	       619	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x1c7b	        0x488d4580	                   lea rax, [rbp - 0x80]	       620	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x1c7f	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       620	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x1c86	        0x488d45c0	                   lea rax, [rbp - 0x40]	       621	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x1c8a	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       621	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x1c91	            0xeb16	                           jmp 0x4001ce9	       621	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x1c93	        0x488d45c0	                   lea rax, [rbp - 0x40]	       623	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_1
0x1c97	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       623	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_1
0x1c9e	        0x488d4580	                   lea rax, [rbp - 0x80]	       624	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_1
0x1ca2	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       624	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_1
0x1ca9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       627	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x1cb0	          0x8b4034	            mov eax, dword [rax + 0x34] 	       627	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x1cb3	            0x85c0	                           test eax, eax	       627	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x1cb5	            0x7461	                            je 0x4001d58	       627	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x1cb7	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       629	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x1cbe	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       629	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x1cc1	          0x4863d0	                         movsxd rdx, eax	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x1cc4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x1ccb	      0xbe00000000	                              mov esi, 0	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x1cd0	          0x4889c7	                            mov rdi, rax	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x1cd3	      0xe800000000	                          call 0x4001d18	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x1cd8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       631	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x1cdf	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       631	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x1ce2	          0x4863d0	                         movsxd rdx, eax	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x1ce5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x1cec	          0x4889d6	                            mov rsi, rdx	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x1cef	          0x4889c7	                            mov rdi, rax	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x1cf2	      0xe800000000	                          call 0x4001d37	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x1cf7	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       633	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x1cfe	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       633	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x1d01	          0x4863d0	                         movsxd rdx, eax	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x1d04	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x1d0b	          0x4889d6	                            mov rsi, rdx	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x1d0e	          0x4889c7	                            mov rdi, rax	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x1d11	      0xe800000000	                          call 0x4001d56	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x1d16	            0xeb78	                           jmp 0x4001dd0	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x1d18	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       636	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x1d1f	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       636	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x1d22	          0x4863d0	                         movsxd rdx, eax	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1d25	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1d2c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1d33	      0xb900000000	                              mov ecx, 0	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1d38	          0x4889c7	                            mov rdi, rax	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1d3b	      0xe800000000	                          call 0x4001d80	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1d40	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1d47	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       638	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x1d4e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       638	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x1d51	            0x4898	                                    cdqe	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1d53	    0x482b8570ffff	             sub rax, qword [rbp - 0x90]	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1d5a	          0x4889c2	                            mov rdx, rax	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1d5d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1d64	      0xbe00000000	                              mov esi, 0	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1d69	          0x4889c7	                            mov rdi, rax	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1d6c	      0xe800000000	                          call 0x4001db1	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1d71	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       640	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x1d78	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       640	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x1d7b	          0x4863d0	                         movsxd rdx, eax	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1d7e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1d85	          0x4889d6	                            mov rsi, rdx	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1d88	          0x4889c7	                            mov rdi, rax	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1d8b	      0xe800000000	                          call 0x4001dd0	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1d90	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x1d93	            0x85c0	                           test eax, eax	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x1d95	     0xf8fd6feffff	                            jg 0x4001cb1	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x1d9b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x1d9e	            0x85c0	                           test eax, eax	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x1da0	     0xf8fcbfeffff	                            jg 0x4001cb1	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x1da6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       646	ewah_bitmap.c	FUNCTION_24	WHILE_1
0x1da9	          0x4863d0	                         movsxd rdx, eax	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x1dac	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       645	ewah_bitmap.c	FUNCTION_24	WHILE_1
0x1daf	            0x4898	                                    cdqe	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x1db1	          0x4889d6	                            mov rsi, rdx	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x1db4	          0x4889c7	                            mov rdi, rax	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x1db7	      0xe84ce4ffff	                       call sym.min_size	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x1dbc	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x1dc3	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       648	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3
0x1dcb	     0xf849e000000	                            je 0x4001eaf	       648	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3
0x1dd1	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1ddc	            0xeb55	                           jmp 0x4001e73	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1dde	        0x488b4580	             mov rax, qword [rbp - 0x80]	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1de2	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1de6	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1ded	          0x4801ca	                            add rdx, rcx	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1df0	        0x48c1e203	                              shl rdx, 3	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1df4	          0x4801d0	                            add rax, rdx	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1df7	          0x488b10	                    mov rdx, qword [rax]	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1dfa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1dfe	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1e02	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1e09	          0x4801f1	                            add rcx, rsi	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1e0c	        0x48c1e103	                              shl rcx, 3	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1e10	          0x4801c8	                            add rax, rcx	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1e13	          0x488b00	                    mov rax, qword [rax]	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1e16	          0x4809c2	                             or rdx, rax	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x1e19	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x1e20	          0x4889d6	                            mov rsi, rdx	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x1e23	          0x4889c7	                            mov rdi, rax	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x1e26	      0xe800000000	                          call 0x4001e6b	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x1e2b	    0x48838568ffff	               add qword [rbp - 0x98], 1	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1e33	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1e3a	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1e41	            0x729b	                            jb 0x4001e1e	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x1e43	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x1e4a	        0x488d4580	                   lea rax, [rbp - 0x80]	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x1e4e	          0x4889d6	                            mov rsi, rdx	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x1e51	          0x4889c7	                            mov rdi, rax	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x1e54	      0xe800000000	                          call 0x4001e99	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x1e59	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x1e60	        0x488d45c0	                   lea rax, [rbp - 0x40]	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x1e64	          0x4889d6	                            mov rsi, rdx	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x1e67	          0x4889c7	                            mov rdi, rax	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x1e6a	      0xe800000000	                          call 0x4001eaf	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x1e6f	        0x488d4580	                   lea rax, [rbp - 0x80]	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x1e73	          0x4889c7	                            mov rdi, rax	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x1e76	      0xe871e3ffff	                call sym.rlwit_word_size	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x1e7b	          0x4885c0	                           test rax, rax	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x1e7e	            0x7415	                            je 0x4001ed5	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x1e80	        0x488d45c0	                   lea rax, [rbp - 0x40]	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x1e84	          0x4889c7	                            mov rdi, rax	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x1e87	      0xe860e3ffff	                call sym.rlwit_word_size	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x1e8c	          0x4885c0	                           test rax, rax	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x1e8f	     0xf85fbfeffff	                           jne 0x4001dd0	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x1e95	        0x488d4580	                   lea rax, [rbp - 0x80]	       663	ewah_bitmap.c	FUNCTION_24	IF_4	CALL_15
0x1e99	          0x4889c7	                            mov rdi, rax	       663	ewah_bitmap.c	FUNCTION_24	IF_4	CALL_15
0x1e9c	      0xe84be3ffff	                call sym.rlwit_word_size	       663	ewah_bitmap.c	FUNCTION_24	IF_4	CALL_15
0x1ea1	          0x4885c0	                           test rax, rax	       663	ewah_bitmap.c	FUNCTION_24	IF_4	CALL_15
0x1ea4	            0x7421	                            je 0x4001f07	       663	ewah_bitmap.c	FUNCTION_24	IF_4	CALL_15
0x1ea6	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x1ead	        0x488d4580	                   lea rax, [rbp - 0x80]	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x1eb1	      0xb900000000	                              mov ecx, 0	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x1eb6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x1ebd	          0x4889c7	                            mov rdi, rax	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x1ec0	      0xe800000000	                          call 0x4001f05	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x1ec5	            0xeb1f	                           jmp 0x4001f26	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x1ec7	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x1ece	        0x488d45c0	                   lea rax, [rbp - 0x40]	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x1ed2	      0xb900000000	                              mov ecx, 0	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x1ed7	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x1ede	          0x4889c7	                            mov rdi, rax	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x1ee1	      0xe800000000	                          call 0x4001f26	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x1ee6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x1eed	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x1ef1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x1ef8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x1efc	          0x4889d6	                            mov rsi, rdx	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x1eff	          0x4889c7	                            mov rdi, rax	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x1f02	      0xe81ce3ffff	                       call sym.max_size	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x1f07	          0x4889c2	                            mov rdx, rax	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x1f0a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x1f11	        0x48895018	             mov qword [rax + 0x18], rdx	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x1f15	              0x90	                                     nop	       669	ewah_bitmap.c	FUNCTION_24
0x1f16	        0x488b45f8	                mov rax, qword [rbp - 8]	       669	ewah_bitmap.c	FUNCTION_24
0x1f1a	    0x644833042528	                xor rax, qword fs:[0x28]	       669	ewah_bitmap.c	FUNCTION_24
0x1f23	            0x7405	                            je 0x4001f6a	       669	ewah_bitmap.c	FUNCTION_24
0x1f25	      0xe800000000	                          call 0x4001f6a	       669	ewah_bitmap.c	FUNCTION_24
0x1f2a	              0xc9	                                   leave	       669	ewah_bitmap.c	FUNCTION_24
0x1f2b	              0xc3	                                     ret	       669	ewah_bitmap.c	FUNCTION_24
ewah_xor	ELSE,2:IF,3:CALL,15:DO,0:WHILE,2:SWITCH,0:FOR,1:functions,0	161
0x12e5	              0x55	                                push rbp	       402	ewah_bitmap.c	FUNCTION_21
0x12e6	          0x4889e5	                            mov rbp, rsp	       402	ewah_bitmap.c	FUNCTION_21
0x12e9	    0x4881ecd00000	                           sub rsp, 0xd0	       402	ewah_bitmap.c	FUNCTION_21
0x12f0	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       402	ewah_bitmap.c	FUNCTION_21
0x12f7	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       402	ewah_bitmap.c	FUNCTION_21
0x12fe	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       402	ewah_bitmap.c	FUNCTION_21
0x1305	    0x64488b042528	                mov rax, qword fs:[0x28]	       402	ewah_bitmap.c	FUNCTION_21
0x130e	        0x488945f8	                mov qword [rbp - 8], rax	       402	ewah_bitmap.c	FUNCTION_21
0x1312	            0x31c0	                            xor eax, eax	       402	ewah_bitmap.c	FUNCTION_21
0x1314	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x131b	        0x488d4580	                   lea rax, [rbp - 0x80]	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x131f	          0x4889d6	                            mov rsi, rdx	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x1322	          0x4889c7	                            mov rdi, rax	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x1325	      0xe800000000	                          call 0x400136a	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x132a	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x1331	        0x488d45c0	                   lea rax, [rbp - 0x40]	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x1335	          0x4889d6	                            mov rsi, rdx	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x1338	          0x4889c7	                            mov rdi, rax	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x133b	      0xe800000000	                          call 0x4001380	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x1340	      0xe9ab010000	                           jmp 0x4001530	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x1345	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       416	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x1348	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       416	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x134b	            0x39c2	                            cmp edx, eax	       416	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x134d	            0x7d18	                           jge 0x40013a7	       416	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x134f	        0x488d4580	                   lea rax, [rbp - 0x80]	       417	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x1353	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       417	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x135a	        0x488d45c0	                   lea rax, [rbp - 0x40]	       418	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x135e	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       418	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x1365	            0xeb16	                           jmp 0x40013bd	       418	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x1367	        0x488d45c0	                   lea rax, [rbp - 0x40]	       420	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	ELSE_1
0x136b	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       420	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	ELSE_1
0x1372	        0x488d4580	                   lea rax, [rbp - 0x80]	       421	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	ELSE_1
0x1376	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       421	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	ELSE_1
0x137d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x1384	          0x8b4034	            mov eax, dword [rax + 0x34] 	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x1387	            0x85c0	                           test eax, eax	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x1389	           0xf95c0	                                setne al	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x138c	           0xfb6c0	                           movzx eax, al	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x138f	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x1395	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       426	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x139c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       426	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x139f	          0x4863d0	                         movsxd rdx, eax	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x13a2	    0x8b8d54ffffff	             mov ecx, dword [rbp - 0xac]	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x13a8	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x13af	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x13b6	          0x4889c7	                            mov rdi, rax	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x13b9	      0xe800000000	                          call 0x40013fe	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x13be	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x13c5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       429	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x13cc	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       429	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x13cf	            0x4898	                                    cdqe	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x13d1	    0x482b8570ffff	             sub rax, qword [rbp - 0x90]	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x13d8	          0x4889c2	                            mov rdx, rax	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x13db	    0x8b8d54ffffff	             mov ecx, dword [rbp - 0xac]	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x13e1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x13e8	            0x89ce	                            mov esi, ecx	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x13ea	          0x4889c7	                            mov rdi, rax	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x13ed	      0xe800000000	                          call 0x4001432	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x13f2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       432	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x13f9	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       432	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x13fc	          0x4863d0	                         movsxd rdx, eax	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x13ff	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x1406	          0x4889d6	                            mov rsi, rdx	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x1409	          0x4889c7	                            mov rdi, rax	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x140c	      0xe800000000	                          call 0x4001451	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x1411	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x1414	            0x85c0	                           test eax, eax	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x1416	     0xf8f29ffffff	                            jg 0x4001385	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x141c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x141f	            0x85c0	                           test eax, eax	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x1421	     0xf8f1effffff	                            jg 0x4001385	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x1427	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       437	ewah_bitmap.c	FUNCTION_21	WHILE_1
0x142a	          0x4863d0	                         movsxd rdx, eax	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x142d	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       436	ewah_bitmap.c	FUNCTION_21	WHILE_1
0x1430	            0x4898	                                    cdqe	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x1432	          0x4889d6	                            mov rsi, rdx	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x1435	          0x4889c7	                            mov rdi, rax	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x1438	      0xe8cbedffff	                       call sym.min_size	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x143d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x1444	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       439	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2
0x144c	     0xf849e000000	                            je 0x4001530	       439	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2
0x1452	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x145d	            0xeb55	                           jmp 0x40014f4	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x145f	        0x488b4580	             mov rax, qword [rbp - 0x80]	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x1463	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x1467	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x146e	          0x4801ca	                            add rdx, rcx	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x1471	        0x48c1e203	                              shl rdx, 3	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x1475	          0x4801d0	                            add rax, rdx	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x1478	          0x488b10	                    mov rdx, qword [rax]	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x147b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x147f	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x1483	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x148a	          0x4801f1	                            add rcx, rsi	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x148d	        0x48c1e103	                              shl rcx, 3	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x1491	          0x4801c8	                            add rax, rcx	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x1494	          0x488b00	                    mov rax, qword [rax]	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x1497	          0x4831c2	                            xor rdx, rax	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x149a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x14a1	          0x4889d6	                            mov rsi, rdx	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x14a4	          0x4889c7	                            mov rdi, rax	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x14a7	      0xe800000000	                          call 0x40014ec	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x14ac	    0x48838568ffff	               add qword [rbp - 0x98], 1	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x14b4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x14bb	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x14c2	            0x729b	                            jb 0x400149f	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x14c4	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x14cb	        0x488d4580	                   lea rax, [rbp - 0x80]	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x14cf	          0x4889d6	                            mov rsi, rdx	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x14d2	          0x4889c7	                            mov rdi, rax	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x14d5	      0xe800000000	                          call 0x400151a	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x14da	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x14e1	        0x488d45c0	                   lea rax, [rbp - 0x40]	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x14e5	          0x4889d6	                            mov rsi, rdx	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x14e8	          0x4889c7	                            mov rdi, rax	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x14eb	      0xe800000000	                          call 0x4001530	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x14f0	        0x488d4580	                   lea rax, [rbp - 0x80]	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x14f4	          0x4889c7	                            mov rdi, rax	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x14f7	      0xe8f0ecffff	                call sym.rlwit_word_size	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x14fc	          0x4885c0	                           test rax, rax	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x14ff	            0x7415	                            je 0x4001556	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x1501	        0x488d45c0	                   lea rax, [rbp - 0x40]	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x1505	          0x4889c7	                            mov rdi, rax	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x1508	      0xe8dfecffff	                call sym.rlwit_word_size	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x150d	          0x4885c0	                           test rax, rax	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x1510	     0xf85fbfeffff	                           jne 0x4001451	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x1516	        0x488d4580	                   lea rax, [rbp - 0x80]	       454	ewah_bitmap.c	FUNCTION_21	IF_3	CALL_12
0x151a	          0x4889c7	                            mov rdi, rax	       454	ewah_bitmap.c	FUNCTION_21	IF_3	CALL_12
0x151d	      0xe8caecffff	                call sym.rlwit_word_size	       454	ewah_bitmap.c	FUNCTION_21	IF_3	CALL_12
0x1522	          0x4885c0	                           test rax, rax	       454	ewah_bitmap.c	FUNCTION_21	IF_3	CALL_12
0x1525	            0x7421	                            je 0x4001588	       454	ewah_bitmap.c	FUNCTION_21	IF_3	CALL_12
0x1527	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x152e	        0x488d4580	                   lea rax, [rbp - 0x80]	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x1532	      0xb900000000	                              mov ecx, 0	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x1537	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x153e	          0x4889c7	                            mov rdi, rax	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x1541	      0xe800000000	                          call 0x4001586	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x1546	            0xeb1f	                           jmp 0x40015a7	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x1548	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x154f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x1553	      0xb900000000	                              mov ecx, 0	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x1558	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x155f	          0x4889c7	                            mov rdi, rax	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x1562	      0xe800000000	                          call 0x40015a7	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x1567	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x156e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x1572	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x1579	        0x488b4018	            mov rax, qword [rax + 0x18] 	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x157d	          0x4889d6	                            mov rsi, rdx	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x1580	          0x4889c7	                            mov rdi, rax	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x1583	      0xe89becffff	                       call sym.max_size	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x1588	          0x4889c2	                            mov rdx, rax	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x158b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x1592	        0x48895018	             mov qword [rax + 0x18], rdx	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x1596	              0x90	                                     nop	       460	ewah_bitmap.c	FUNCTION_21
0x1597	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	ewah_bitmap.c	FUNCTION_21
0x159b	    0x644833042528	                xor rax, qword fs:[0x28]	       460	ewah_bitmap.c	FUNCTION_21
0x15a4	            0x7405	                            je 0x40015eb	       460	ewah_bitmap.c	FUNCTION_21
0x15a6	      0xe800000000	                          call 0x40015eb	       460	ewah_bitmap.c	FUNCTION_21
0x15ab	              0xc9	                                   leave	       460	ewah_bitmap.c	FUNCTION_21
0x15ac	              0xc3	                                     ret	       460	ewah_bitmap.c	FUNCTION_21
rlw_set_run_bit	ELSE,1:IF,1:CALL,0:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	22
0x66	              0x55	                                push rbp	        38	ewok_rlw.h	FUNCTION_29
0x67	          0x4889e5	                            mov rbp, rsp	        38	ewok_rlw.h	FUNCTION_29
0x6a	        0x48897df8	                mov qword [rbp - 8], rdi	        38	ewok_rlw.h	FUNCTION_29
0x6e	          0x8975f4	              mov dword [rbp - 0xc], esi	        38	ewok_rlw.h	FUNCTION_29
0x71	        0x837df400	                cmp dword [rbp - 0xc], 0	        39	ewok_rlw.h	FUNCTION_29	IF_1
0x75	            0x7417	                            je 0x40000ce	        39	ewok_rlw.h	FUNCTION_29	IF_1
0x77	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x7b	          0x488b00	                    mov rax, qword [rax]	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x7e	        0x4883c801	                               or rax, 1	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x82	          0x4889c2	                            mov rdx, rax	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x85	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x89	          0x488910	                    mov qword [rax], rdx	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x8c	            0xeb15	                           jmp 0x40000e3	        44	ewok_rlw.h	FUNCTION_29
0x8e	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0x92	          0x488b00	                    mov rax, qword [rax]	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0x95	        0x4883e0fe	             and rax, 0xfffffffffffffffe	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0x99	          0x4889c2	                            mov rdx, rax	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0x9c	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0xa0	          0x488910	                    mov qword [rax], rdx	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0xa3	              0x90	                                     nop	        44	ewok_rlw.h	FUNCTION_29
0xa4	              0x5d	                                 pop rbp	        44	ewok_rlw.h	FUNCTION_29
0xa5	              0xc3	                                     ret	        44	ewok_rlw.h	FUNCTION_29
ewah_pool_free	ELSE,0:IF,2:CALL,2:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	29
0x1f66	              0x55	                                push rbp	       685	ewah_bitmap.c	FUNCTION_26
0x1f67	          0x4889e5	                            mov rbp, rsp	       685	ewah_bitmap.c	FUNCTION_26
0x1f6a	        0x4883ec10	                           sub rsp, 0x10	       685	ewah_bitmap.c	FUNCTION_26
0x1f6e	        0x48897df8	                mov qword [rbp - 8], rdi	       685	ewah_bitmap.c	FUNCTION_26
0x1f72	      0x48837df800	                  cmp qword [rbp - 8], 0	       686	ewah_bitmap.c	FUNCTION_26	IF_1
0x1f77	            0x7454	                            je 0x400200d	       686	ewah_bitmap.c	FUNCTION_26	IF_1
0x1f79	    0x488b05000000	            mov rax, qword [0x04001fc0] 	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x1f80	        0x4883f810	                           cmp rax, 0x10	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x1f84	            0x740d	                            je 0x4001fd3	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x1f86	        0x488b45f8	                mov rax, qword [rbp - 8]	       690	ewah_bitmap.c	FUNCTION_26	IF_2
0x1f8a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       690	ewah_bitmap.c	FUNCTION_26	IF_2
0x1f8e	          0x4885c0	                           test rax, rax	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x1f91	            0x750e	                           jne 0x4001fe1	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x1f93	        0x488b45f8	                mov rax, qword [rbp - 8]	       691	ewah_bitmap.c	FUNCTION_26	IF_2	CALL_1
0x1f97	          0x4889c7	                            mov rdi, rax	       691	ewah_bitmap.c	FUNCTION_26	IF_2	CALL_1
0x1f9a	      0xe800000000	                          call 0x4001fdf	       691	ewah_bitmap.c	FUNCTION_26	IF_2	CALL_1
0x1f9f	            0xeb2d	                           jmp 0x400200e	       692	ewah_bitmap.c	FUNCTION_26	IF_2
0x1fa1	        0x488b45f8	                mov rax, qword [rbp - 8]	       695	ewah_bitmap.c	FUNCTION_26	CALL_2
0x1fa5	          0x4889c7	                            mov rdi, rax	       695	ewah_bitmap.c	FUNCTION_26	CALL_2
0x1fa8	      0xe800000000	                          call 0x4001fed	       695	ewah_bitmap.c	FUNCTION_26	CALL_2
0x1fad	    0x488b05000000	            mov rax, qword [0x04001ff4] 	       696	ewah_bitmap.c	FUNCTION_26
0x1fb4	        0x488d5001	                      lea rdx, [rax + 1]	       696	ewah_bitmap.c	FUNCTION_26
0x1fb8	    0x488915000000	            mov qword [0x04001fff], rdx 	       696	ewah_bitmap.c	FUNCTION_26
0x1fbf	        0x488b55f8	                mov rdx, qword [rbp - 8]	       696	ewah_bitmap.c	FUNCTION_26
0x1fc3	    0x488914c50000	                  mov qword [rax*8], rdx	       696	ewah_bitmap.c	FUNCTION_26
0x1fcb	            0xeb01	                           jmp 0x400200e	       696	ewah_bitmap.c	FUNCTION_26
0x1fcd	              0x90	                                     nop	       687	ewah_bitmap.c	FUNCTION_26	IF_1
0x1fce	              0xc9	                                   leave	       697	ewah_bitmap.c	FUNCTION_26
0x1fcf	              0xc3	                                     ret	       697	ewah_bitmap.c	FUNCTION_26
buffer_push_rlw	ELSE,0:IF,0:CALL,1:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	22
0x357	              0x55	                                push rbp	        54	ewah_bitmap.c	FUNCTION_5
0x358	          0x4889e5	                            mov rbp, rsp	        54	ewah_bitmap.c	FUNCTION_5
0x35b	        0x4883ec10	                           sub rsp, 0x10	        54	ewah_bitmap.c	FUNCTION_5
0x35f	        0x48897df8	                mov qword [rbp - 8], rdi	        54	ewah_bitmap.c	FUNCTION_5
0x363	        0x488975f0	             mov qword [rbp - 0x10], rsi	        54	ewah_bitmap.c	FUNCTION_5
0x367	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        55	ewah_bitmap.c	FUNCTION_5	CALL_1
0x36b	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	ewah_bitmap.c	FUNCTION_5	CALL_1
0x36f	          0x4889d6	                            mov rsi, rdx	        55	ewah_bitmap.c	FUNCTION_5	CALL_1
0x372	          0x4889c7	                            mov rdi, rax	        55	ewah_bitmap.c	FUNCTION_5	CALL_1
0x375	      0xe861ffffff	                    call sym.buffer_push	        55	ewah_bitmap.c	FUNCTION_5	CALL_1
0x37a	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	ewah_bitmap.c	FUNCTION_5
0x37e	          0x488b10	                    mov rdx, qword [rax]	        56	ewah_bitmap.c	FUNCTION_5
0x381	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	ewah_bitmap.c	FUNCTION_5
0x385	        0x488b4008	                mov rax, qword [rax + 8]	        56	ewah_bitmap.c	FUNCTION_5
0x389	        0x48c1e003	                              shl rax, 3	        56	ewah_bitmap.c	FUNCTION_5
0x38d	        0x4883e808	                              sub rax, 8	        56	ewah_bitmap.c	FUNCTION_5
0x391	          0x4801c2	                            add rdx, rax	        56	ewah_bitmap.c	FUNCTION_5
0x394	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	ewah_bitmap.c	FUNCTION_5
0x398	        0x48895020	             mov qword [rax + 0x20], rdx	        56	ewah_bitmap.c	FUNCTION_5
0x39c	              0x90	                                     nop	        57	ewah_bitmap.c	FUNCTION_5
0x39d	              0xc9	                                   leave	        57	ewah_bitmap.c	FUNCTION_5
0x39e	              0xc3	                                     ret	        57	ewah_bitmap.c	FUNCTION_5
ewah_and	ELSE,3:IF,4:CALL,18:DO,0:WHILE,2:SWITCH,0:FOR,1:functions,0	178
0x15ad	              0x55	                                push rbp	       466	ewah_bitmap.c	FUNCTION_22
0x15ae	          0x4889e5	                            mov rbp, rsp	       466	ewah_bitmap.c	FUNCTION_22
0x15b1	    0x4881ecd00000	                           sub rsp, 0xd0	       466	ewah_bitmap.c	FUNCTION_22
0x15b8	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       466	ewah_bitmap.c	FUNCTION_22
0x15bf	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       466	ewah_bitmap.c	FUNCTION_22
0x15c6	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       466	ewah_bitmap.c	FUNCTION_22
0x15cd	    0x64488b042528	                mov rax, qword fs:[0x28]	       466	ewah_bitmap.c	FUNCTION_22
0x15d6	        0x488945f8	                mov qword [rbp - 8], rax	       466	ewah_bitmap.c	FUNCTION_22
0x15da	            0x31c0	                            xor eax, eax	       466	ewah_bitmap.c	FUNCTION_22
0x15dc	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x15e3	        0x488d4580	                   lea rax, [rbp - 0x80]	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x15e7	          0x4889d6	                            mov rsi, rdx	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x15ea	          0x4889c7	                            mov rdi, rax	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x15ed	      0xe800000000	                          call 0x4001632	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x15f2	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x15f9	        0x488d45c0	                   lea rax, [rbp - 0x40]	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x15fd	          0x4889d6	                            mov rsi, rdx	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x1600	          0x4889c7	                            mov rdi, rax	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x1603	      0xe800000000	                          call 0x4001648	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x1608	      0xe9fe010000	                           jmp 0x400184b	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x160d	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       478	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x1610	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       478	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x1613	            0x39c2	                            cmp edx, eax	       478	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x1615	            0x7d18	                           jge 0x400166f	       478	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x1617	        0x488d4580	                   lea rax, [rbp - 0x80]	       479	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x161b	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       479	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x1622	        0x488d45c0	                   lea rax, [rbp - 0x40]	       480	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x1626	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       480	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x162d	            0xeb16	                           jmp 0x4001685	       480	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x162f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       482	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_1
0x1633	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       482	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_1
0x163a	        0x488d4580	                   lea rax, [rbp - 0x80]	       483	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_1
0x163e	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       483	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_1
0x1645	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       486	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x164c	          0x8b4034	            mov eax, dword [rax + 0x34] 	       486	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x164f	            0x85c0	                           test eax, eax	       486	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x1651	            0x7561	                           jne 0x40016f4	       486	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x1653	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       488	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x165a	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       488	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x165d	          0x4863d0	                         movsxd rdx, eax	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x1660	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x1667	      0xbe00000000	                              mov esi, 0	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x166c	          0x4889c7	                            mov rdi, rax	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x166f	      0xe800000000	                          call 0x40016b4	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x1674	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       490	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x167b	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       490	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x167e	          0x4863d0	                         movsxd rdx, eax	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x1681	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x1688	          0x4889d6	                            mov rsi, rdx	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x168b	          0x4889c7	                            mov rdi, rax	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x168e	      0xe800000000	                          call 0x40016d3	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x1693	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       492	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x169a	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       492	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x169d	          0x4863d0	                         movsxd rdx, eax	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x16a0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x16a7	          0x4889d6	                            mov rsi, rdx	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x16aa	          0x4889c7	                            mov rdi, rax	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x16ad	      0xe800000000	                          call 0x40016f2	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x16b2	            0xeb78	                           jmp 0x400176c	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x16b4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       495	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x16bb	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       495	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x16be	          0x4863d0	                         movsxd rdx, eax	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x16c1	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x16c8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x16cf	      0xb900000000	                              mov ecx, 0	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x16d4	          0x4889c7	                            mov rdi, rax	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x16d7	      0xe800000000	                          call 0x400171c	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x16dc	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x16e3	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       497	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x16ea	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       497	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x16ed	            0x4898	                                    cdqe	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x16ef	    0x482b8570ffff	             sub rax, qword [rbp - 0x90]	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x16f6	          0x4889c2	                            mov rdx, rax	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x16f9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1700	      0xbe00000000	                              mov esi, 0	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1705	          0x4889c7	                            mov rdi, rax	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1708	      0xe800000000	                          call 0x400174d	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x170d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       499	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x1714	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       499	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x1717	          0x4863d0	                         movsxd rdx, eax	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x171a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1721	          0x4889d6	                            mov rsi, rdx	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1724	          0x4889c7	                            mov rdi, rax	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1727	      0xe800000000	                          call 0x400176c	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x172c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x172f	            0x85c0	                           test eax, eax	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x1731	     0xf8fd6feffff	                            jg 0x400164d	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x1737	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x173a	            0x85c0	                           test eax, eax	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x173c	     0xf8fcbfeffff	                            jg 0x400164d	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x1742	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       505	ewah_bitmap.c	FUNCTION_22	WHILE_1
0x1745	          0x4863d0	                         movsxd rdx, eax	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x1748	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       504	ewah_bitmap.c	FUNCTION_22	WHILE_1
0x174b	            0x4898	                                    cdqe	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x174d	          0x4889d6	                            mov rsi, rdx	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x1750	          0x4889c7	                            mov rdi, rax	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x1753	      0xe8b0eaffff	                       call sym.min_size	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x1758	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x175f	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       507	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3
0x1767	     0xf849e000000	                            je 0x400184b	       507	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3
0x176d	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x1778	            0xeb55	                           jmp 0x400180f	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x177a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x177e	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x1782	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x1789	          0x4801ca	                            add rdx, rcx	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x178c	        0x48c1e203	                              shl rdx, 3	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x1790	          0x4801d0	                            add rax, rdx	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x1793	          0x488b10	                    mov rdx, qword [rax]	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x1796	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x179a	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x179e	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x17a5	          0x4801f1	                            add rcx, rsi	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x17a8	        0x48c1e103	                              shl rcx, 3	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x17ac	          0x4801c8	                            add rax, rcx	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x17af	          0x488b00	                    mov rax, qword [rax]	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x17b2	          0x4821c2	                            and rdx, rax	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x17b5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x17bc	          0x4889d6	                            mov rsi, rdx	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x17bf	          0x4889c7	                            mov rdi, rax	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x17c2	      0xe800000000	                          call 0x4001807	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x17c7	    0x48838568ffff	               add qword [rbp - 0x98], 1	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x17cf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x17d6	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x17dd	            0x729b	                            jb 0x40017ba	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x17df	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x17e6	        0x488d4580	                   lea rax, [rbp - 0x80]	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x17ea	          0x4889d6	                            mov rsi, rdx	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x17ed	          0x4889c7	                            mov rdi, rax	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x17f0	      0xe800000000	                          call 0x4001835	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x17f5	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x17fc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x1800	          0x4889d6	                            mov rsi, rdx	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x1803	          0x4889c7	                            mov rdi, rax	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x1806	      0xe800000000	                          call 0x400184b	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x180b	        0x488d4580	                   lea rax, [rbp - 0x80]	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x180f	          0x4889c7	                            mov rdi, rax	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x1812	      0xe8d5e9ffff	                call sym.rlwit_word_size	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x1817	          0x4885c0	                           test rax, rax	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x181a	            0x7415	                            je 0x4001871	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x181c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x1820	          0x4889c7	                            mov rdi, rax	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x1823	      0xe8c4e9ffff	                call sym.rlwit_word_size	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x1828	          0x4885c0	                           test rax, rax	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x182b	     0xf85fbfeffff	                           jne 0x400176c	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x1831	        0x488d4580	                   lea rax, [rbp - 0x80]	       522	ewah_bitmap.c	FUNCTION_22	IF_4	CALL_15
0x1835	          0x4889c7	                            mov rdi, rax	       522	ewah_bitmap.c	FUNCTION_22	IF_4	CALL_15
0x1838	      0xe8afe9ffff	                call sym.rlwit_word_size	       522	ewah_bitmap.c	FUNCTION_22	IF_4	CALL_15
0x183d	          0x4885c0	                           test rax, rax	       522	ewah_bitmap.c	FUNCTION_22	IF_4	CALL_15
0x1840	            0x7418	                            je 0x400189a	       522	ewah_bitmap.c	FUNCTION_22	IF_4	CALL_15
0x1842	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x1849	        0x488d4580	                   lea rax, [rbp - 0x80]	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x184d	          0x4889d6	                            mov rsi, rdx	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x1850	          0x4889c7	                            mov rdi, rax	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x1853	      0xe800000000	                          call 0x4001898	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x1858	            0xeb16	                           jmp 0x40018b0	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x185a	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x1861	        0x488d45c0	                   lea rax, [rbp - 0x40]	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x1865	          0x4889d6	                            mov rsi, rdx	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x1868	          0x4889c7	                            mov rdi, rax	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x186b	      0xe800000000	                          call 0x40018b0	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x1870	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x1877	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x187b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x1882	        0x488b4018	            mov rax, qword [rax + 0x18] 	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x1886	          0x4889d6	                            mov rsi, rdx	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x1889	          0x4889c7	                            mov rdi, rax	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x188c	      0xe892e9ffff	                       call sym.max_size	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x1891	          0x4889c2	                            mov rdx, rax	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x1894	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x189b	        0x48895018	             mov qword [rax + 0x18], rdx	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x189f	              0x90	                                     nop	       528	ewah_bitmap.c	FUNCTION_22
0x18a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       528	ewah_bitmap.c	FUNCTION_22
0x18a4	    0x644833042528	                xor rax, qword fs:[0x28]	       528	ewah_bitmap.c	FUNCTION_22
0x18ad	            0x7405	                            je 0x40018f4	       528	ewah_bitmap.c	FUNCTION_22
0x18af	      0xe800000000	                          call 0x40018f4	       528	ewah_bitmap.c	FUNCTION_22
0x18b4	              0xc9	                                   leave	       528	ewah_bitmap.c	FUNCTION_22
0x18b5	              0xc3	                                     ret	       528	ewah_bitmap.c	FUNCTION_22
ewah_each_bit	ELSE,1:IF,2:CALL,6:DO,0:WHILE,1:SWITCH,0:FOR,3:functions,0	87
0xd0f	              0x55	                                push rbp	       247	ewah_bitmap.c	FUNCTION_13
0xd10	          0x4889e5	                            mov rbp, rsp	       247	ewah_bitmap.c	FUNCTION_13
0xd13	        0x4883ec50	                           sub rsp, 0x50	       247	ewah_bitmap.c	FUNCTION_13
0xd17	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       247	ewah_bitmap.c	FUNCTION_13
0xd1b	        0x488975c0	             mov qword [rbp - 0x40], rsi	       247	ewah_bitmap.c	FUNCTION_13
0xd1f	        0x488955b8	             mov qword [rbp - 0x48], rdx	       247	ewah_bitmap.c	FUNCTION_13
0xd23	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       248	ewah_bitmap.c	FUNCTION_13
0xd2b	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       249	ewah_bitmap.c	FUNCTION_13
0xd33	      0xe903010000	                           jmp 0x4000e7b	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xd38	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xd3c	          0x488b00	                    mov rax, qword [rax]	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xd3f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xd43	        0x48c1e203	                              shl rdx, 3	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xd47	          0x4801d0	                            add rax, rdx	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xd4a	        0x488945f0	             mov qword [rbp - 0x10], rax	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xd4e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0xd52	          0x4889c7	                            mov rdi, rax	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0xd55	      0xe8f8f2ffff	                call sym.rlw_get_run_bit	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0xd5a	            0x85c0	                           test eax, eax	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0xd5c	            0x7448	                            je 0x4000de6	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0xd5e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0xd62	          0x4889c7	                            mov rdi, rax	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0xd65	      0xe8d2f3ffff	            call sym.rlw_get_running_len	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0xd6a	        0x48c1e006	                              shl rax, 6	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0xd6e	        0x488945f8	                mov qword [rbp - 8], rax	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0xd72	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0xd7a	            0xeb1e	                           jmp 0x4000dda	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0xd7c	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0xd80	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0xd84	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0xd88	          0x4889ce	                            mov rsi, rcx	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0xd8b	          0x4889d7	                            mov rdi, rdx	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0xd8e	            0xffd0	                                call rax	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0xd90	      0x488345e801	               add qword [rbp - 0x18], 1	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0xd95	      0x488345d801	               add qword [rbp - 0x28], 1	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0xd9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0xd9e	        0x483b45f8	                cmp rax, qword [rbp - 8]	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0xda2	            0x72d8	                            jb 0x4000dbc	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0xda4	            0xeb14	                           jmp 0x4000dfa	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0xda6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0xdaa	          0x4889c7	                            mov rdi, rax	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0xdad	      0xe88af3ffff	            call sym.rlw_get_running_len	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0xdb2	        0x48c1e006	                              shl rax, 6	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0xdb6	        0x480145d8	            add qword [rbp - 0x28], rax 	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0xdba	      0x488345e001	               add qword [rbp - 0x20], 1	       263	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xdbf	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0xdc7	            0xeb60	                           jmp 0x4000e69	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0xdc9	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0xdd0	            0xeb45	                           jmp 0x4000e57	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0xdd2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xdd6	          0x488b00	                    mov rax, qword [rax]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xdd9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xddd	        0x48c1e203	                              shl rdx, 3	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xde1	          0x4801d0	                            add rax, rdx	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xde4	          0x488b10	                    mov rdx, qword [rax]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xde7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xdea	            0x89c1	                            mov ecx, eax	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xdec	          0x48d3ea	                             shr rdx, cl	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xdef	          0x4889d0	                            mov rax, rdx	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xdf2	          0x83e001	                              and eax, 1	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xdf5	          0x4885c0	                           test rax, rax	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xdf8	            0x7414	                            je 0x4000e4e	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0xdfa	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0xdfe	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0xe02	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0xe06	          0x4889ce	                            mov rsi, rcx	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0xe09	          0x4889d7	                            mov rdi, rdx	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0xe0c	            0xffd0	                                call rax	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0xe0e	        0x8345d401	               add dword [rbp - 0x2c], 1	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0xe12	      0x488345d801	               add qword [rbp - 0x28], 1	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0xe17	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0xe1a	          0x83f83f	                           cmp eax, 0x3f	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0xe1d	            0x76b3	                           jbe 0x4000e12	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0xe1f	      0x488345e001	               add qword [rbp - 0x20], 1	       274	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2
0xe24	      0x488345e801	               add qword [rbp - 0x18], 1	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0xe29	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0xe2d	          0x4889c7	                            mov rdi, rax	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0xe30	      0xe81df3ffff	          call sym.rlw_get_literal_words	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0xe35	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0xe39	            0x778e	                            ja 0x4000e09	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0xe3b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xe3f	        0x488b4008	                mov rax, qword [rax + 8]	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xe43	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xe47	     0xf87ebfeffff	                            ja 0x4000d78	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0xe4d	              0x90	                                     nop	       277	ewah_bitmap.c	FUNCTION_13
0xe4e	              0xc9	                                   leave	       277	ewah_bitmap.c	FUNCTION_13
0xe4f	              0xc3	                                     ret	       277	ewah_bitmap.c	FUNCTION_13
rlw_get_run_bit	ELSE,0:IF,0:CALL,0:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	8
0x52	              0x55	                                push rbp	        33	ewok_rlw.h	FUNCTION_28
0x53	          0x4889e5	                            mov rbp, rsp	        33	ewok_rlw.h	FUNCTION_28
0x56	        0x48897df8	                mov qword [rbp - 8], rdi	        33	ewok_rlw.h	FUNCTION_28
0x5a	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	ewok_rlw.h	FUNCTION_28
0x5e	          0x488b00	                    mov rax, qword [rax]	        34	ewok_rlw.h	FUNCTION_28
0x61	          0x83e001	                              and eax, 1	        34	ewok_rlw.h	FUNCTION_28
0x64	              0x5d	                                 pop rbp	        35	ewok_rlw.h	FUNCTION_28
0x65	              0xc3	                                     ret	        35	ewok_rlw.h	FUNCTION_28
ewah_new	ELSE,0:IF,0:CALL,3:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	24
0xe50	              0x55	                                push rbp	       280	ewah_bitmap.c	FUNCTION_14
0xe51	          0x4889e5	                            mov rbp, rsp	       280	ewah_bitmap.c	FUNCTION_14
0xe54	        0x4883ec10	                           sub rsp, 0x10	       280	ewah_bitmap.c	FUNCTION_14
0xe58	      0xbf28000000	                           mov edi, 0x28	       283	ewah_bitmap.c	FUNCTION_14	CALL_1
0xe5d	      0xe800000000	                          call 0x4000ea2	       283	ewah_bitmap.c	FUNCTION_14	CALL_1
0xe62	        0x488945f8	                mov qword [rbp - 8], rax	       283	ewah_bitmap.c	FUNCTION_14	CALL_1
0xe66	        0x488b45f8	                mov rax, qword [rbp - 8]	       284	ewah_bitmap.c	FUNCTION_14
0xe6a	    0x48c740102000	           mov qword [rax + 0x10], 0x20 	       284	ewah_bitmap.c	FUNCTION_14
0xe72	        0x488b45f8	                mov rax, qword [rbp - 8]	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0xe76	        0x488b4010	            mov rax, qword [rax + 0x10] 	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0xe7a	          0x4889c6	                            mov rsi, rax	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0xe7d	      0xbf08000000	                              mov edi, 8	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0xe82	      0xe879f1ffff	                        call sym.st_mult	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0xe87	          0x4889c7	                            mov rdi, rax	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0xe8a	      0xe800000000	                          call 0x4000ecf	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0xe8f	          0x4889c2	                            mov rdx, rax	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0xe92	        0x488b45f8	                mov rax, qword [rbp - 8]	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0xe96	          0x488910	                    mov qword [rax], rdx	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0xe99	        0x488b45f8	                mov rax, qword [rbp - 8]	       287	ewah_bitmap.c	FUNCTION_14	CALL_3
0xe9d	          0x4889c7	                            mov rdi, rax	       287	ewah_bitmap.c	FUNCTION_14	CALL_3
0xea0	      0xe800000000	                          call 0x4000ee5	       287	ewah_bitmap.c	FUNCTION_14	CALL_3
0xea5	        0x488b45f8	                mov rax, qword [rbp - 8]	       288	ewah_bitmap.c	FUNCTION_14
0xea9	              0xc9	                                   leave	       289	ewah_bitmap.c	FUNCTION_14
0xeaa	              0xc3	                                     ret	       289	ewah_bitmap.c	FUNCTION_14
ewah_iterator_next	ELSE,1:IF,4:CALL,3:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	104
0x1015	              0x55	                                push rbp	       337	ewah_bitmap.c	FUNCTION_18
0x1016	          0x4889e5	                            mov rbp, rsp	       337	ewah_bitmap.c	FUNCTION_18
0x1019	        0x4883ec10	                           sub rsp, 0x10	       337	ewah_bitmap.c	FUNCTION_18
0x101d	        0x48897df8	                mov qword [rbp - 8], rdi	       337	ewah_bitmap.c	FUNCTION_18
0x1021	        0x488975f0	             mov qword [rbp - 0x10], rsi	       337	ewah_bitmap.c	FUNCTION_18
0x1025	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x1029	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x102d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x1031	        0x488b4008	                mov rax, qword [rax + 8]	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x1035	          0x4839c2	                            cmp rdx, rax	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x1038	            0x720a	                            jb 0x4001084	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x103a	      0xb800000000	                              mov eax, 0	       339	ewah_bitmap.c	FUNCTION_18	IF_1
0x103f	      0xe956010000	                           jmp 0x40011da	       339	ewah_bitmap.c	FUNCTION_18	IF_1
0x1044	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x1048	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x104c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x1050	        0x488b4028	            mov rax, qword [rax + 0x28] 	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x1054	          0x4839c2	                            cmp rdx, rax	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x1057	            0x7339	                           jae 0x40010d2	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x1059	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x105d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x1061	        0x488d5001	                      lea rdx, [rax + 1]	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x1065	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x1069	        0x48895018	             mov qword [rax + 0x18], rdx	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x106d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x1071	          0x8b4038	            mov eax, dword [rax + 0x38] 	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x1074	            0x85c0	                           test eax, eax	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x1076	            0x7409	                            je 0x40010c1	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x1078	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x107f	            0xeb05	                           jmp 0x40010c6	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x1081	      0xba00000000	                              mov edx, 0	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x1086	        0x488b45f8	                mov rax, qword [rbp - 8]	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x108a	          0x488910	                    mov qword [rax], rdx	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x108d	      0xe9a4000000	                           jmp 0x4001176	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x1092	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x1096	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x109a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x109e	        0x488b4030	            mov rax, qword [rax + 0x30] 	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x10a2	          0x4839c2	                            cmp rdx, rax	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x10a5	            0x7219	                            jb 0x4001100	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x10a7	      0xb900000000	                              mov ecx, 0	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x10ac	      0xba59010000	                          mov edx, 0x159	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x10b1	      0xbe00000000	                              mov esi, 0	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x10b6	      0xbf00000000	                              mov edi, 0	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x10bb	      0xe800000000	                          call 0x4001100	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x10c0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x10c4	        0x488b4020	            mov rax, qword [rax + 0x20] 	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x10c8	        0x488d5001	                      lea rdx, [rax + 1]	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x10cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x10d0	        0x48895020	             mov qword [rax + 0x20], rdx	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x10d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x10d8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x10dc	        0x488d5001	                      lea rdx, [rax + 1]	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x10e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x10e4	        0x48895010	             mov qword [rax + 0x10], rdx	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x10e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x10ec	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x10f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x10f4	        0x488b4008	                mov rax, qword [rax + 8]	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x10f8	          0x4839c2	                            cmp rdx, rax	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x10fb	            0x7219	                            jb 0x4001156	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x10fd	      0xb900000000	                              mov ecx, 0	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x1102	      0xba5e010000	                          mov edx, 0x15e	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x1107	      0xbe00000000	                              mov esi, 0	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x110c	      0xbf00000000	                              mov edi, 0	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x1111	      0xe800000000	                          call 0x4001156	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x1116	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x111a	          0x488b10	                    mov rdx, qword [rax]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x111d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x1121	        0x488b4010	            mov rax, qword [rax + 0x10] 	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x1125	        0x48c1e003	                              shl rax, 3	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x1129	          0x4801d0	                            add rax, rdx	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x112c	          0x488b10	                    mov rdx, qword [rax]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x112f	        0x488b45f8	                mov rax, qword [rbp - 8]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x1133	          0x488910	                    mov qword [rax], rdx	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x1136	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x113a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x113e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x1142	        0x488b4028	            mov rax, qword [rax + 0x28] 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x1146	          0x4839c2	                            cmp rdx, rax	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x1149	            0x754a	                           jne 0x40011d5	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x114b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x114f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x1153	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x1157	        0x488b4030	            mov rax, qword [rax + 0x30] 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x115b	          0x4839c2	                            cmp rdx, rax	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x115e	            0x7535	                           jne 0x40011d5	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x1160	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x1164	        0x488b4010	            mov rax, qword [rax + 0x10] 	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x1168	        0x488d5001	                      lea rdx, [rax + 1]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x116c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x1170	        0x48895010	             mov qword [rax + 0x10], rdx	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x1174	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x1178	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x117c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x1180	        0x488b4008	                mov rax, qword [rax + 8]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x1184	          0x4839c2	                            cmp rdx, rax	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x1187	            0x730c	                           jae 0x40011d5	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x1189	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       357	ewah_bitmap.c	FUNCTION_18	IF_3	CALL_3
0x118d	          0x4889c7	                            mov rdi, rax	       357	ewah_bitmap.c	FUNCTION_18	IF_3	CALL_3
0x1190	      0xe896fdffff	                   call sym.read_new_rlw	       357	ewah_bitmap.c	FUNCTION_18	IF_3	CALL_3
0x1195	      0xb801000000	                              mov eax, 1	       360	ewah_bitmap.c	FUNCTION_18
0x119a	              0xc9	                                   leave	       361	ewah_bitmap.c	FUNCTION_18
0x119b	              0xc3	                                     ret	       361	ewah_bitmap.c	FUNCTION_18
ewah_clear	ELSE,0:IF,0:CALL,0:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	17
0xeab	              0x55	                                push rbp	       292	ewah_bitmap.c	FUNCTION_15
0xeac	          0x4889e5	                            mov rbp, rsp	       292	ewah_bitmap.c	FUNCTION_15
0xeaf	        0x48897df8	                mov qword [rbp - 8], rdi	       292	ewah_bitmap.c	FUNCTION_15
0xeb3	        0x488b45f8	                mov rax, qword [rbp - 8]	       293	ewah_bitmap.c	FUNCTION_15
0xeb7	    0x48c740080100	                  mov qword [rax + 8], 1	       293	ewah_bitmap.c	FUNCTION_15
0xebf	        0x488b45f8	                mov rax, qword [rbp - 8]	       294	ewah_bitmap.c	FUNCTION_15
0xec3	          0x488b00	                    mov rax, qword [rax]	       294	ewah_bitmap.c	FUNCTION_15
0xec6	    0x48c700000000	                      mov qword [rax], 0	       294	ewah_bitmap.c	FUNCTION_15
0xecd	        0x488b45f8	                mov rax, qword [rbp - 8]	       295	ewah_bitmap.c	FUNCTION_15
0xed1	    0x48c740180000	               mov qword [rax + 0x18], 0	       295	ewah_bitmap.c	FUNCTION_15
0xed9	        0x488b45f8	                mov rax, qword [rbp - 8]	       296	ewah_bitmap.c	FUNCTION_15
0xedd	          0x488b10	                    mov rdx, qword [rax]	       296	ewah_bitmap.c	FUNCTION_15
0xee0	        0x488b45f8	                mov rax, qword [rbp - 8]	       296	ewah_bitmap.c	FUNCTION_15
0xee4	        0x48895020	             mov qword [rax + 0x20], rdx	       296	ewah_bitmap.c	FUNCTION_15
0xee8	              0x90	                                     nop	       297	ewah_bitmap.c	FUNCTION_15
0xee9	              0x5d	                                 pop rbp	       297	ewah_bitmap.c	FUNCTION_15
0xeea	              0xc3	                                     ret	       297	ewah_bitmap.c	FUNCTION_15
min_size	ELSE,0:IF,0:CALL,0:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	9
0x208	              0x55	                                push rbp	        24	ewah_bitmap.c	FUNCTION_1
0x209	          0x4889e5	                            mov rbp, rsp	        24	ewah_bitmap.c	FUNCTION_1
0x20c	        0x48897df8	                mov qword [rbp - 8], rdi	        24	ewah_bitmap.c	FUNCTION_1
0x210	        0x488975f0	             mov qword [rbp - 0x10], rsi	        24	ewah_bitmap.c	FUNCTION_1
0x214	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	ewah_bitmap.c	FUNCTION_1
0x218	        0x483945f0	            cmp qword [rbp - 0x10], rax 	        25	ewah_bitmap.c	FUNCTION_1
0x21c	      0x480f4645f0	          cmovbe rax, qword [rbp - 0x10]	        25	ewah_bitmap.c	FUNCTION_1
0x221	              0x5d	                                 pop rbp	        26	ewah_bitmap.c	FUNCTION_1
0x222	              0xc3	                                     ret	        26	ewah_bitmap.c	FUNCTION_1
ewah_iterator_init	ELSE,0:IF,1:CALL,1:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	37
0x119c	              0x55	                                push rbp	       364	ewah_bitmap.c	FUNCTION_19
0x119d	          0x4889e5	                            mov rbp, rsp	       364	ewah_bitmap.c	FUNCTION_19
0x11a0	        0x4883ec10	                           sub rsp, 0x10	       364	ewah_bitmap.c	FUNCTION_19
0x11a4	        0x48897df8	                mov qword [rbp - 8], rdi	       364	ewah_bitmap.c	FUNCTION_19
0x11a8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       364	ewah_bitmap.c	FUNCTION_19
0x11ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       365	ewah_bitmap.c	FUNCTION_19
0x11b0	          0x488b10	                    mov rdx, qword [rax]	       365	ewah_bitmap.c	FUNCTION_19
0x11b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       365	ewah_bitmap.c	FUNCTION_19
0x11b7	          0x488910	                    mov qword [rax], rdx	       365	ewah_bitmap.c	FUNCTION_19
0x11ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       366	ewah_bitmap.c	FUNCTION_19
0x11be	        0x488b5008	                mov rdx, qword [rax + 8]	       366	ewah_bitmap.c	FUNCTION_19
0x11c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       366	ewah_bitmap.c	FUNCTION_19
0x11c6	        0x48895008	                mov qword [rax + 8], rdx	       366	ewah_bitmap.c	FUNCTION_19
0x11ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       367	ewah_bitmap.c	FUNCTION_19
0x11ce	    0x48c740100000	               mov qword [rax + 0x10], 0	       367	ewah_bitmap.c	FUNCTION_19
0x11d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       369	ewah_bitmap.c	FUNCTION_19
0x11da	    0x48c740300000	               mov qword [rax + 0x30], 0	       369	ewah_bitmap.c	FUNCTION_19
0x11e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	ewah_bitmap.c	FUNCTION_19
0x11e6	    0x48c740280000	               mov qword [rax + 0x28], 0	       370	ewah_bitmap.c	FUNCTION_19
0x11ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       371	ewah_bitmap.c	FUNCTION_19
0x11f2	    0x48c740180000	               mov qword [rax + 0x18], 0	       371	ewah_bitmap.c	FUNCTION_19
0x11fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	ewah_bitmap.c	FUNCTION_19
0x11fe	    0x48c740200000	               mov qword [rax + 0x20], 0	       372	ewah_bitmap.c	FUNCTION_19
0x1206	        0x488b45f8	                mov rax, qword [rbp - 8]	       373	ewah_bitmap.c	FUNCTION_19
0x120a	    0xc74038000000	               mov dword [rax + 0x38], 0	       373	ewah_bitmap.c	FUNCTION_19
0x1211	        0x488b45f8	                mov rax, qword [rbp - 8]	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x1215	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x1219	        0x488b45f8	                mov rax, qword [rbp - 8]	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x121d	        0x488b4008	                mov rax, qword [rax + 8]	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x1221	          0x4839c2	                            cmp rdx, rax	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x1224	            0x730c	                           jae 0x4001272	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x1226	        0x488b45f8	                mov rax, qword [rbp - 8]	       376	ewah_bitmap.c	FUNCTION_19	CALL_1
0x122a	          0x4889c7	                            mov rdi, rax	       376	ewah_bitmap.c	FUNCTION_19	CALL_1
0x122d	      0xe8f9fcffff	                   call sym.read_new_rlw	       376	ewah_bitmap.c	FUNCTION_19	CALL_1
0x1232	              0x90	                                     nop	       377	ewah_bitmap.c	FUNCTION_19
0x1233	              0xc9	                                   leave	       377	ewah_bitmap.c	FUNCTION_19
0x1234	              0xc3	                                     ret	       377	ewah_bitmap.c	FUNCTION_19
ewah_not	ELSE,0:IF,0:CALL,2:DO,0:WHILE,1:SWITCH,0:FOR,1:functions,0	47
0x1235	              0x55	                                push rbp	       380	ewah_bitmap.c	FUNCTION_20
0x1236	          0x4889e5	                            mov rbp, rsp	       380	ewah_bitmap.c	FUNCTION_20
0x1239	        0x4883ec28	                           sub rsp, 0x28	       380	ewah_bitmap.c	FUNCTION_20
0x123d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       380	ewah_bitmap.c	FUNCTION_20
0x1241	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       381	ewah_bitmap.c	FUNCTION_20
0x1249	      0xe982000000	                           jmp 0x4001310	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x124e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x1252	          0x488b00	                    mov rax, qword [rax]	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x1255	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x1259	        0x48c1e203	                              shl rdx, 3	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x125d	          0x4801d0	                            add rax, rdx	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x1260	        0x488945f0	             mov qword [rbp - 0x10], rax	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x1264	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       387	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_1
0x1268	          0x4889c7	                            mov rdi, rax	       387	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_1
0x126b	      0xe836eeffff	                call sym.rlw_xor_run_bit	       387	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_1
0x1270	      0x488345e001	               add qword [rbp - 0x20], 1	       388	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x1275	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       390	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_2
0x1279	          0x4889c7	                            mov rdi, rax	       390	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_2
0x127c	      0xe8d1eeffff	          call sym.rlw_get_literal_words	       390	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_2
0x1281	        0x488945f8	                mov qword [rbp - 8], rax	       390	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_2
0x1285	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x128d	            0xeb37	                           jmp 0x4001306	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x128f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x1293	          0x488b00	                    mov rax, qword [rax]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x1296	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x129a	        0x48c1e203	                              shl rdx, 3	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x129e	          0x4801c2	                            add rdx, rax	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12a5	          0x488b00	                    mov rax, qword [rax]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12a8	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12ac	        0x48c1e103	                              shl rcx, 3	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12b0	          0x4801c8	                            add rax, rcx	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12b3	          0x488b00	                    mov rax, qword [rax]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12b6	          0x48f7d0	                                 not rax	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12b9	          0x488902	                    mov qword [rdx], rax	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12bc	      0x488345e001	               add qword [rbp - 0x20], 1	       393	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12c1	      0x488345e801	               add qword [rbp - 0x18], 1	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12ca	        0x483b45f8	                cmp rax, qword [rbp - 8]	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12ce	            0x72bf	                            jb 0x40012cf	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x12d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x12d4	        0x488b4008	                mov rax, qword [rax + 8]	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x12d8	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x12dc	     0xf876cffffff	                            ja 0x400128e	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x12e2	              0x90	                                     nop	       396	ewah_bitmap.c	FUNCTION_20
0x12e3	              0xc9	                                   leave	       396	ewah_bitmap.c	FUNCTION_20
0x12e4	              0xc3	                                     ret	       396	ewah_bitmap.c	FUNCTION_20
ewah_add	ELSE,0:IF,2:CALL,3:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	31
0xaa8	              0x55	                                push rbp	       197	ewah_bitmap.c	FUNCTION_11
0xaa9	          0x4889e5	                            mov rbp, rsp	       197	ewah_bitmap.c	FUNCTION_11
0xaac	        0x4883ec10	                           sub rsp, 0x10	       197	ewah_bitmap.c	FUNCTION_11
0xab0	        0x48897df8	                mov qword [rbp - 8], rdi	       197	ewah_bitmap.c	FUNCTION_11
0xab4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       197	ewah_bitmap.c	FUNCTION_11
0xab8	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	ewah_bitmap.c	FUNCTION_11
0xabc	        0x488b4018	            mov rax, qword [rax + 0x18] 	       198	ewah_bitmap.c	FUNCTION_11
0xac0	        0x488d5040	                   lea rdx, [rax + 0x40]	       198	ewah_bitmap.c	FUNCTION_11
0xac4	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	ewah_bitmap.c	FUNCTION_11
0xac8	        0x48895018	             mov qword [rax + 0x18], rdx	       198	ewah_bitmap.c	FUNCTION_11
0xacc	      0x48837df000	               cmp qword [rbp - 0x10], 0	       200	ewah_bitmap.c	FUNCTION_11	IF_1
0xad1	            0x7513	                           jne 0x4000b26	       200	ewah_bitmap.c	FUNCTION_11	IF_1
0xad3	        0x488b45f8	                mov rax, qword [rbp - 8]	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0xad7	      0xbe00000000	                              mov esi, 0	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0xadc	          0x4889c7	                            mov rdi, rax	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0xadf	      0xe85bfdffff	                 call sym.add_empty_word	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0xae4	            0xeb2d	                           jmp 0x4000b53	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0xae6	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	       203	ewah_bitmap.c	FUNCTION_11	IF_2
0xaeb	            0x7513	                           jne 0x4000b40	       203	ewah_bitmap.c	FUNCTION_11	IF_2
0xaed	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0xaf1	      0xbe01000000	                              mov esi, 1	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0xaf6	          0x4889c7	                            mov rdi, rax	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0xaf9	      0xe841fdffff	                 call sym.add_empty_word	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0xafe	            0xeb13	                           jmp 0x4000b53	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0xb00	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       206	ewah_bitmap.c	FUNCTION_11	CALL_3
0xb04	        0x488b45f8	                mov rax, qword [rbp - 8]	       206	ewah_bitmap.c	FUNCTION_11	CALL_3
0xb08	          0x4889d6	                            mov rsi, rdx	       206	ewah_bitmap.c	FUNCTION_11	CALL_3
0xb0b	          0x4889c7	                            mov rdi, rax	       206	ewah_bitmap.c	FUNCTION_11	CALL_3
0xb0e	      0xe8a5faffff	                    call sym.add_literal	       206	ewah_bitmap.c	FUNCTION_11	CALL_3
0xb13	              0xc9	                                   leave	       207	ewah_bitmap.c	FUNCTION_11
0xb14	              0xc3	                                     ret	       207	ewah_bitmap.c	FUNCTION_11
add_literal	ELSE,0:IF,1:CALL,8:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	57
0x5b8	              0x55	                                push rbp	       108	ewah_bitmap.c	FUNCTION_8
0x5b9	          0x4889e5	                            mov rbp, rsp	       108	ewah_bitmap.c	FUNCTION_8
0x5bc	        0x4883ec20	                           sub rsp, 0x20	       108	ewah_bitmap.c	FUNCTION_8
0x5c0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       108	ewah_bitmap.c	FUNCTION_8
0x5c4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       108	ewah_bitmap.c	FUNCTION_8
0x5c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	ewah_bitmap.c	FUNCTION_8	CALL_1
0x5cc	        0x488b4020	            mov rax, qword [rax + 0x20] 	       109	ewah_bitmap.c	FUNCTION_8	CALL_1
0x5d0	          0x4889c7	                            mov rdi, rax	       109	ewah_bitmap.c	FUNCTION_8	CALL_1
0x5d3	      0xe87afbffff	          call sym.rlw_get_literal_words	       109	ewah_bitmap.c	FUNCTION_8	CALL_1
0x5d8	        0x488945f8	                mov qword [rbp - 8], rax	       109	ewah_bitmap.c	FUNCTION_8	CALL_1
0x5dc	    0x48817df8feff	        cmp qword [rbp - 8], 0x7ffffffe 	       111	ewah_bitmap.c	FUNCTION_8	IF_1
0x5e4	            0x7640	                           jbe 0x4000666	       111	ewah_bitmap.c	FUNCTION_8	IF_1
0x5e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       112	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_2
0x5ea	      0xbe00000000	                              mov esi, 0	       112	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_2
0x5ef	          0x4889c7	                            mov rdi, rax	       112	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_2
0x5f2	      0xe860fdffff	                call sym.buffer_push_rlw	       112	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_2
0x5f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       114	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_3
0x5fb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       114	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_3
0x5ff	      0xbe01000000	                              mov esi, 1	       114	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_3
0x604	          0x4889c7	                            mov rdi, rax	       114	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_3
0x607	      0xe85bfbffff	          call sym.rlw_set_literal_words	       114	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_3
0x60c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       115	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_4
0x610	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       115	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_4
0x614	          0x4889d6	                            mov rsi, rdx	       115	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_4
0x617	          0x4889c7	                            mov rdi, rax	       115	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_4
0x61a	      0xe8bcfcffff	                    call sym.buffer_push	       115	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_4
0x61f	      0xb802000000	                              mov eax, 2	       116	ewah_bitmap.c	FUNCTION_8	IF_1
0x624	            0xeb6c	                           jmp 0x40006d2	       116	ewah_bitmap.c	FUNCTION_8	IF_1
0x626	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x62a	        0x488d5001	                      lea rdx, [rax + 1]	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x62e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x632	        0x488b4020	            mov rax, qword [rax + 0x20] 	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x636	          0x4889d6	                            mov rsi, rdx	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x639	          0x4889c7	                            mov rdi, rax	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x63c	      0xe826fbffff	          call sym.rlw_set_literal_words	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x641	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x645	        0x488b4020	            mov rax, qword [rax + 0x20] 	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x649	          0x4889c7	                            mov rdi, rax	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x64c	      0xe801fbffff	          call sym.rlw_get_literal_words	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x651	          0x4889c2	                            mov rdx, rax	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x654	        0x488b45f8	                mov rax, qword [rbp - 8]	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x658	        0x4883c001	                              add rax, 1	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x65c	          0x4839c2	                            cmp rdx, rax	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x65f	            0x7419	                            je 0x40006ba	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x661	      0xb900000000	                              mov ecx, 0	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x666	      0xba7a000000	                           mov edx, 0x7a	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x66b	      0xbe00000000	                              mov esi, 0	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x670	      0xbf00000000	                              mov edi, 0	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x675	      0xe800000000	                          call 0x40006ba	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x67a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       124	ewah_bitmap.c	FUNCTION_8	CALL_8
0x67e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       124	ewah_bitmap.c	FUNCTION_8	CALL_8
0x682	          0x4889d6	                            mov rsi, rdx	       124	ewah_bitmap.c	FUNCTION_8	CALL_8
0x685	          0x4889c7	                            mov rdi, rax	       124	ewah_bitmap.c	FUNCTION_8	CALL_8
0x688	      0xe84efcffff	                    call sym.buffer_push	       124	ewah_bitmap.c	FUNCTION_8	CALL_8
0x68d	      0xb801000000	                              mov eax, 1	       125	ewah_bitmap.c	FUNCTION_8
0x692	              0xc9	                                   leave	       126	ewah_bitmap.c	FUNCTION_8
0x693	              0xc3	                                     ret	       126	ewah_bitmap.c	FUNCTION_8
buffer_grow	ELSE,0:IF,1:CALL,1:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	46
0x23e	              0x55	                                push rbp	        34	ewah_bitmap.c	FUNCTION_3
0x23f	          0x4889e5	                            mov rbp, rsp	        34	ewah_bitmap.c	FUNCTION_3
0x242	        0x4883ec20	                           sub rsp, 0x20	        34	ewah_bitmap.c	FUNCTION_3
0x246	        0x48897de8	             mov qword [rbp - 0x18], rdi	        34	ewah_bitmap.c	FUNCTION_3
0x24a	        0x488975e0	             mov qword [rbp - 0x20], rsi	        34	ewah_bitmap.c	FUNCTION_3
0x24e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        35	ewah_bitmap.c	FUNCTION_3
0x252	        0x488b4020	            mov rax, qword [rax + 0x20] 	        35	ewah_bitmap.c	FUNCTION_3
0x256	          0x4889c2	                            mov rdx, rax	        35	ewah_bitmap.c	FUNCTION_3
0x259	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        35	ewah_bitmap.c	FUNCTION_3
0x25d	          0x488b00	                    mov rax, qword [rax]	        35	ewah_bitmap.c	FUNCTION_3
0x260	          0x4829c2	                            sub rdx, rax	        35	ewah_bitmap.c	FUNCTION_3
0x263	          0x4889d0	                            mov rax, rdx	        35	ewah_bitmap.c	FUNCTION_3
0x266	        0x488945f8	                mov qword [rbp - 8], rax	        35	ewah_bitmap.c	FUNCTION_3
0x26a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x26e	        0x488b4010	            mov rax, qword [rax + 0x10] 	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x272	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x276	            0x7360	                           jae 0x4000318	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x278	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	ewah_bitmap.c	FUNCTION_3
0x27c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        40	ewah_bitmap.c	FUNCTION_3
0x280	        0x48895010	             mov qword [rax + 0x10], rdx	        40	ewah_bitmap.c	FUNCTION_3
0x284	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x288	        0x488b4010	            mov rax, qword [rax + 0x10] 	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x28c	          0x4889c6	                            mov rsi, rax	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x28f	      0xbf08000000	                              mov edi, 8	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x294	      0xe867fdffff	                        call sym.st_mult	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x299	          0x4889c2	                            mov rdx, rax	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x29c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x2a0	          0x488b00	                    mov rax, qword [rax]	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x2a3	          0x4889d6	                            mov rsi, rdx	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x2a6	          0x4889c7	                            mov rdi, rax	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x2a9	      0xe800000000	                          call 0x40002ee	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x2ae	          0x4889c2	                            mov rdx, rax	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x2b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x2b5	          0x488910	                    mov qword [rax], rdx	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x2b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	ewah_bitmap.c	FUNCTION_3
0x2bc	          0x488b00	                    mov rax, qword [rax]	        42	ewah_bitmap.c	FUNCTION_3
0x2bf	        0x488b55f8	                mov rdx, qword [rbp - 8]	        42	ewah_bitmap.c	FUNCTION_3
0x2c3	        0x48c1ea03	                              shr rdx, 3	        42	ewah_bitmap.c	FUNCTION_3
0x2c7	        0x48c1e203	                              shl rdx, 3	        42	ewah_bitmap.c	FUNCTION_3
0x2cb	          0x4801c2	                            add rdx, rax	        42	ewah_bitmap.c	FUNCTION_3
0x2ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	ewah_bitmap.c	FUNCTION_3
0x2d2	        0x48895020	             mov qword [rax + 0x20], rdx	        42	ewah_bitmap.c	FUNCTION_3
0x2d6	            0xeb01	                           jmp 0x4000319	        42	ewah_bitmap.c	FUNCTION_3
0x2d8	              0x90	                                     nop	        38	ewah_bitmap.c	FUNCTION_3	IF_1
0x2d9	              0xc9	                                   leave	        43	ewah_bitmap.c	FUNCTION_3
0x2da	              0xc3	                                     ret	        43	ewah_bitmap.c	FUNCTION_3
ewah_pool_new	ELSE,0:IF,1:CALL,1:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	14
0x1f2c	              0x55	                                push rbp	       677	ewah_bitmap.c	FUNCTION_25
0x1f2d	          0x4889e5	                            mov rbp, rsp	       677	ewah_bitmap.c	FUNCTION_25
0x1f30	    0x488b05000000	            mov rax, qword [0x04001f77] 	       678	ewah_bitmap.c	FUNCTION_25	IF_1
0x1f37	          0x4885c0	                           test rax, rax	       678	ewah_bitmap.c	FUNCTION_25	IF_1
0x1f3a	            0x7423	                            je 0x4001f9f	       678	ewah_bitmap.c	FUNCTION_25	IF_1
0x1f3c	    0x488b05000000	            mov rax, qword [0x04001f83] 	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x1f43	        0x4883e801	                              sub rax, 1	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x1f47	    0x488905000000	            mov qword [0x04001f8e], rax 	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x1f4e	    0x488b05000000	            mov rax, qword [0x04001f95] 	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x1f55	    0x488b04c50000	                  mov rax, qword [rax*8]	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x1f5d	            0xeb05	                           jmp 0x4001fa4	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x1f5f	      0xe800000000	                          call 0x4001fa4	       681	ewah_bitmap.c	FUNCTION_25	CALL_1
0x1f64	              0x5d	                                 pop rbp	       682	ewah_bitmap.c	FUNCTION_25
0x1f65	              0xc3	                                     ret	       682	ewah_bitmap.c	FUNCTION_25
ewah_add_empty_words	ELSE,0:IF,1:CALL,1:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	25
0x565	              0x55	                                push rbp	        99	ewah_bitmap.c	FUNCTION_7
0x566	          0x4889e5	                            mov rbp, rsp	        99	ewah_bitmap.c	FUNCTION_7
0x569	        0x4883ec20	                           sub rsp, 0x20	        99	ewah_bitmap.c	FUNCTION_7
0x56d	        0x48897df8	                mov qword [rbp - 8], rdi	        99	ewah_bitmap.c	FUNCTION_7
0x571	          0x8975f4	              mov dword [rbp - 0xc], esi	        99	ewah_bitmap.c	FUNCTION_7
0x574	        0x488955e8	             mov qword [rbp - 0x18], rdx	        99	ewah_bitmap.c	FUNCTION_7
0x578	      0x48837de800	               cmp qword [rbp - 0x18], 0	       100	ewah_bitmap.c	FUNCTION_7	IF_1
0x57d	            0x7507	                           jne 0x40005c6	       100	ewah_bitmap.c	FUNCTION_7	IF_1
0x57f	      0xb800000000	                              mov eax, 0	       101	ewah_bitmap.c	FUNCTION_7	IF_1
0x584	            0xeb30	                           jmp 0x40005f6	       101	ewah_bitmap.c	FUNCTION_7	IF_1
0x586	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	ewah_bitmap.c	FUNCTION_7
0x58a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       103	ewah_bitmap.c	FUNCTION_7
0x58e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       103	ewah_bitmap.c	FUNCTION_7
0x592	        0x48c1e206	                              shl rdx, 6	       103	ewah_bitmap.c	FUNCTION_7
0x596	          0x4801c2	                            add rdx, rax	       103	ewah_bitmap.c	FUNCTION_7
0x599	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	ewah_bitmap.c	FUNCTION_7
0x59d	        0x48895018	             mov qword [rax + 0x18], rdx	       103	ewah_bitmap.c	FUNCTION_7
0x5a1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x5a5	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x5a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x5ac	            0x89ce	                            mov esi, ecx	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x5ae	          0x4889c7	                            mov rdi, rax	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x5b1	      0xe8e9fdffff	                call sym.add_empty_words	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x5b6	              0xc9	                                   leave	       105	ewah_bitmap.c	FUNCTION_7
0x5b7	              0xc3	                                     ret	       105	ewah_bitmap.c	FUNCTION_7
ewah_and_not	ELSE,3:IF,4:CALL,18:DO,0:WHILE,2:SWITCH,0:FOR,1:functions,0	196
0x18b6	              0x55	                                push rbp	       534	ewah_bitmap.c	FUNCTION_23
0x18b7	          0x4889e5	                            mov rbp, rsp	       534	ewah_bitmap.c	FUNCTION_23
0x18ba	    0x4881ecd00000	                           sub rsp, 0xd0	       534	ewah_bitmap.c	FUNCTION_23
0x18c1	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       534	ewah_bitmap.c	FUNCTION_23
0x18c8	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       534	ewah_bitmap.c	FUNCTION_23
0x18cf	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       534	ewah_bitmap.c	FUNCTION_23
0x18d6	    0x64488b042528	                mov rax, qword fs:[0x28]	       534	ewah_bitmap.c	FUNCTION_23
0x18df	        0x488945f8	                mov qword [rbp - 8], rax	       534	ewah_bitmap.c	FUNCTION_23
0x18e3	            0x31c0	                            xor eax, eax	       534	ewah_bitmap.c	FUNCTION_23
0x18e5	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x18ec	        0x488d4580	                   lea rax, [rbp - 0x80]	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x18f0	          0x4889d6	                            mov rsi, rdx	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x18f3	          0x4889c7	                            mov rdi, rax	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x18f6	      0xe800000000	                          call 0x400193b	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x18fb	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x1902	        0x488d45c0	                   lea rax, [rbp - 0x40]	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x1906	          0x4889d6	                            mov rsi, rdx	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x1909	          0x4889c7	                            mov rdi, rax	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x190c	      0xe800000000	                          call 0x4001951	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x1911	      0xe947020000	                           jmp 0x4001b9d	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x1916	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       546	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x1919	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       546	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x191c	            0x39c2	                            cmp edx, eax	       546	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x191e	            0x7d18	                           jge 0x4001978	       546	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x1920	        0x488d4580	                   lea rax, [rbp - 0x80]	       547	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x1924	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       547	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x192b	        0x488d45c0	                   lea rax, [rbp - 0x40]	       548	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x192f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       548	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x1936	            0xeb16	                           jmp 0x400198e	       548	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x1938	        0x488d45c0	                   lea rax, [rbp - 0x40]	       550	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x193c	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       550	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x1943	        0x488d4580	                   lea rax, [rbp - 0x80]	       551	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x1947	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       551	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x194e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x1955	          0x8b4034	            mov eax, dword [rax + 0x34] 	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x1958	            0x85c0	                           test eax, eax	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x195a	            0x740d	                            je 0x40019a9	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x195c	        0x488d4580	                   lea rax, [rbp - 0x80]	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x1960	    0x48398558ffff	            cmp qword [rbp - 0xa8], rax 	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x1967	            0x741b	                            je 0x40019c4	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x1969	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x1970	          0x8b4034	            mov eax, dword [rax + 0x34] 	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x1973	            0x85c0	                           test eax, eax	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x1975	            0x7571	                           jne 0x4001a28	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x1977	        0x488d4580	                   lea rax, [rbp - 0x80]	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x197b	    0x48398558ffff	            cmp qword [rbp - 0xa8], rax 	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x1982	            0x7464	                            je 0x4001a28	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x1984	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       557	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x198b	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       557	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x198e	          0x4863d0	                         movsxd rdx, eax	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x1991	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x1998	      0xbe00000000	                              mov esi, 0	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x199d	          0x4889c7	                            mov rdi, rax	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x19a0	      0xe800000000	                          call 0x40019e5	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x19a5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       559	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x19ac	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       559	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x19af	          0x4863d0	                         movsxd rdx, eax	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x19b2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x19b9	          0x4889d6	                            mov rsi, rdx	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x19bc	          0x4889c7	                            mov rdi, rax	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x19bf	      0xe800000000	                          call 0x4001a04	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x19c4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       561	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x19cb	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       561	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x19ce	          0x4863d0	                         movsxd rdx, eax	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x19d1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x19d8	          0x4889d6	                            mov rsi, rdx	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x19db	          0x4889c7	                            mov rdi, rax	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x19de	      0xe800000000	                          call 0x4001a23	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x19e3	      0xe993000000	                           jmp 0x4001abb	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x19e8	        0x488d4580	                   lea rax, [rbp - 0x80]	       566	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x19ec	    0x48398558ffff	            cmp qword [rbp - 0xa8], rax 	       566	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x19f3	           0xf95c0	                                setne al	       566	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x19f6	           0xfb6c0	                           movzx eax, al	       566	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x19f9	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       566	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x19ff	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       568	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x1a06	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       568	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x1a09	          0x4863d0	                         movsxd rdx, eax	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1a0c	    0x8b8d54ffffff	             mov ecx, dword [rbp - 0xac]	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1a12	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1a19	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1a20	          0x4889c7	                            mov rdi, rax	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1a23	      0xe800000000	                          call 0x4001a68	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1a28	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x1a2f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       570	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x1a36	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       570	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x1a39	            0x4898	                                    cdqe	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1a3b	    0x482b8570ffff	             sub rax, qword [rbp - 0x90]	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1a42	          0x4889c2	                            mov rdx, rax	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1a45	    0x8b8d54ffffff	             mov ecx, dword [rbp - 0xac]	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1a4b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1a52	            0x89ce	                            mov esi, ecx	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1a54	          0x4889c7	                            mov rdi, rax	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1a57	      0xe800000000	                          call 0x4001a9c	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x1a5c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       572	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x1a63	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       572	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x1a66	          0x4863d0	                         movsxd rdx, eax	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1a69	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1a70	          0x4889d6	                            mov rsi, rdx	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1a73	          0x4889c7	                            mov rdi, rax	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1a76	      0xe800000000	                          call 0x4001abb	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x1a7b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x1a7e	            0x85c0	                           test eax, eax	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x1a80	     0xf8f90feffff	                            jg 0x4001956	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x1a86	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x1a89	            0x85c0	                           test eax, eax	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x1a8b	     0xf8f85feffff	                            jg 0x4001956	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x1a91	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       578	ewah_bitmap.c	FUNCTION_23	WHILE_1
0x1a94	          0x4863d0	                         movsxd rdx, eax	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x1a97	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       577	ewah_bitmap.c	FUNCTION_23	WHILE_1
0x1a9a	            0x4898	                                    cdqe	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x1a9c	          0x4889d6	                            mov rsi, rdx	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x1a9f	          0x4889c7	                            mov rdi, rax	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x1aa2	      0xe861e7ffff	                       call sym.min_size	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x1aa7	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x1aae	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       580	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3
0x1ab6	     0xf84a1000000	                            je 0x4001b9d	       580	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3
0x1abc	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1ac7	            0xeb58	                           jmp 0x4001b61	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1ac9	        0x488b4580	             mov rax, qword [rbp - 0x80]	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1acd	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1ad1	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1ad8	          0x4801ca	                            add rdx, rcx	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1adb	        0x48c1e203	                              shl rdx, 3	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1adf	          0x4801d0	                            add rax, rdx	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1ae2	          0x488b00	                    mov rax, qword [rax]	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1ae5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1ae9	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1aed	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1af4	          0x4801f1	                            add rcx, rsi	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1af7	        0x48c1e103	                              shl rcx, 3	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1afb	          0x4801ca	                            add rdx, rcx	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1afe	          0x488b12	                    mov rdx, qword [rdx]	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1b01	          0x48f7d2	                                 not rdx	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1b04	          0x4821c2	                            and rdx, rax	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x1b07	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x1b0e	          0x4889d6	                            mov rsi, rdx	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x1b11	          0x4889c7	                            mov rdi, rax	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x1b14	      0xe800000000	                          call 0x4001b59	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x1b19	    0x48838568ffff	               add qword [rbp - 0x98], 1	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1b21	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1b28	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1b2f	            0x7298	                            jb 0x4001b09	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x1b31	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x1b38	        0x488d4580	                   lea rax, [rbp - 0x80]	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x1b3c	          0x4889d6	                            mov rsi, rdx	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x1b3f	          0x4889c7	                            mov rdi, rax	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x1b42	      0xe800000000	                          call 0x4001b87	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x1b47	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x1b4e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x1b52	          0x4889d6	                            mov rsi, rdx	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x1b55	          0x4889c7	                            mov rdi, rax	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x1b58	      0xe800000000	                          call 0x4001b9d	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x1b5d	        0x488d4580	                   lea rax, [rbp - 0x80]	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x1b61	          0x4889c7	                            mov rdi, rax	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x1b64	      0xe883e6ffff	                call sym.rlwit_word_size	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x1b69	          0x4885c0	                           test rax, rax	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x1b6c	            0x7415	                            je 0x4001bc3	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x1b6e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x1b72	          0x4889c7	                            mov rdi, rax	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x1b75	      0xe872e6ffff	                call sym.rlwit_word_size	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x1b7a	          0x4885c0	                           test rax, rax	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x1b7d	     0xf85f8feffff	                           jne 0x4001abb	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x1b83	        0x488d4580	                   lea rax, [rbp - 0x80]	       595	ewah_bitmap.c	FUNCTION_23	IF_4	CALL_15
0x1b87	          0x4889c7	                            mov rdi, rax	       595	ewah_bitmap.c	FUNCTION_23	IF_4	CALL_15
0x1b8a	      0xe85de6ffff	                call sym.rlwit_word_size	       595	ewah_bitmap.c	FUNCTION_23	IF_4	CALL_15
0x1b8f	          0x4885c0	                           test rax, rax	       595	ewah_bitmap.c	FUNCTION_23	IF_4	CALL_15
0x1b92	            0x7421	                            je 0x4001bf5	       595	ewah_bitmap.c	FUNCTION_23	IF_4	CALL_15
0x1b94	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x1b9b	        0x488d4580	                   lea rax, [rbp - 0x80]	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x1b9f	      0xb900000000	                              mov ecx, 0	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x1ba4	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x1bab	          0x4889c7	                            mov rdi, rax	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x1bae	      0xe800000000	                          call 0x4001bf3	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x1bb3	            0xeb16	                           jmp 0x4001c0b	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x1bb5	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x1bbc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x1bc0	          0x4889d6	                            mov rsi, rdx	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x1bc3	          0x4889c7	                            mov rdi, rax	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x1bc6	      0xe800000000	                          call 0x4001c0b	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x1bcb	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x1bd2	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x1bd6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x1bdd	        0x488b4018	            mov rax, qword [rax + 0x18] 	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x1be1	          0x4889d6	                            mov rsi, rdx	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x1be4	          0x4889c7	                            mov rdi, rax	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x1be7	      0xe837e6ffff	                       call sym.max_size	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x1bec	          0x4889c2	                            mov rdx, rax	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x1bef	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x1bf6	        0x48895018	             mov qword [rax + 0x18], rdx	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x1bfa	              0x90	                                     nop	       601	ewah_bitmap.c	FUNCTION_23
0x1bfb	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	ewah_bitmap.c	FUNCTION_23
0x1bff	    0x644833042528	                xor rax, qword fs:[0x28]	       601	ewah_bitmap.c	FUNCTION_23
0x1c08	            0x7405	                            je 0x4001c4f	       601	ewah_bitmap.c	FUNCTION_23
0x1c0a	      0xe800000000	                          call 0x4001c4f	       601	ewah_bitmap.c	FUNCTION_23
0x1c0f	              0xc9	                                   leave	       601	ewah_bitmap.c	FUNCTION_23
0x1c10	              0xc3	                                     ret	       601	ewah_bitmap.c	FUNCTION_23
read_new_rlw	ELSE,1:IF,2:CALL,3:DO,0:WHILE,1:SWITCH,0:FOR,0:functions,0	63
0xf2b	              0x55	                                push rbp	       311	ewah_bitmap.c	FUNCTION_17
0xf2c	          0x4889e5	                            mov rbp, rsp	       311	ewah_bitmap.c	FUNCTION_17
0xf2f	        0x4883ec18	                           sub rsp, 0x18	       311	ewah_bitmap.c	FUNCTION_17
0xf33	        0x48897de8	             mov qword [rbp - 0x18], rdi	       311	ewah_bitmap.c	FUNCTION_17
0xf37	    0x48c745f80000	                  mov qword [rbp - 8], 0	       312	ewah_bitmap.c	FUNCTION_17
0xf3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       314	ewah_bitmap.c	FUNCTION_17
0xf43	    0x48c740200000	               mov qword [rax + 0x20], 0	       314	ewah_bitmap.c	FUNCTION_17
0xf4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       315	ewah_bitmap.c	FUNCTION_17
0xf4f	    0x48c740180000	               mov qword [rax + 0x18], 0	       315	ewah_bitmap.c	FUNCTION_17
0xf57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0xf5b	          0x488b10	                    mov rdx, qword [rax]	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0xf5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0xf62	        0x488b4010	            mov rax, qword [rax + 0x10] 	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0xf66	        0x48c1e003	                              shl rax, 3	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0xf6a	          0x4801d0	                            add rax, rdx	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0xf6d	        0x488945f8	                mov qword [rbp - 8], rax	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0xf71	        0x488b45f8	                mov rax, qword [rbp - 8]	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0xf75	          0x4889c7	                            mov rdi, rax	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0xf78	      0xe8bff1ffff	            call sym.rlw_get_running_len	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0xf7d	          0x4889c2	                            mov rdx, rax	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0xf80	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0xf84	        0x48895028	             mov qword [rax + 0x28], rdx	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0xf88	        0x488b45f8	                mov rax, qword [rbp - 8]	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0xf8c	          0x4889c7	                            mov rdi, rax	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0xf8f	      0xe8bef1ffff	          call sym.rlw_get_literal_words	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0xf94	          0x4889c2	                            mov rdx, rax	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0xf97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0xf9b	        0x48895030	             mov qword [rax + 0x30], rdx	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0xf9f	        0x488b45f8	                mov rax, qword [rbp - 8]	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0xfa3	          0x4889c7	                            mov rdi, rax	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0xfa6	      0xe8a7f0ffff	                call sym.rlw_get_run_bit	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0xfab	            0x89c2	                            mov edx, eax	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0xfad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0xfb1	          0x895038	             mov dword [rax + 0x38], edx	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0xfb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0xfb8	        0x488b4028	            mov rax, qword [rax + 0x28] 	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0xfbc	          0x4885c0	                           test rax, rax	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0xfbf	            0x7551	                           jne 0x4001052	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0xfc1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0xfc5	        0x488b4030	            mov rax, qword [rax + 0x30] 	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0xfc9	          0x4885c0	                           test rax, rax	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0xfcc	            0x7544	                           jne 0x4001052	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0xfce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xfd2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xfd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xfda	        0x488b4008	                mov rax, qword [rax + 8]	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xfde	        0x4883e801	                              sub rax, 1	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xfe2	          0x4839c2	                            cmp rdx, rax	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xfe5	            0x7319	                           jae 0x4001040	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xfe7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xfeb	        0x488b4010	            mov rax, qword [rax + 0x10] 	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xfef	        0x488d5001	                      lea rdx, [rax + 1]	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xff3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xff7	        0x48895010	             mov qword [rax + 0x10], rdx	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0xffb	      0xe957ffffff	                           jmp 0x4000f97	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x1000	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
0x1004	        0x488b5008	                mov rdx, qword [rax + 8]	       330	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
0x1008	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
0x100c	        0x48895010	             mov qword [rax + 0x10], rdx	       330	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
0x1010	            0xeb01	                           jmp 0x4001053	       331	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
0x1012	              0x90	                                     nop	       325	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x1013	              0xc9	                                   leave	       334	ewah_bitmap.c	FUNCTION_17
0x1014	              0xc3	                                     ret	       334	ewah_bitmap.c	FUNCTION_17
rlw_get_literal_words	ELSE,0:IF,0:CALL,0:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	8
0x152	              0x55	                                push rbp	        67	ewok_rlw.h	FUNCTION_33
0x153	          0x4889e5	                            mov rbp, rsp	        67	ewok_rlw.h	FUNCTION_33
0x156	        0x48897df8	                mov qword [rbp - 8], rdi	        67	ewok_rlw.h	FUNCTION_33
0x15a	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	ewok_rlw.h	FUNCTION_33
0x15e	          0x488b00	                    mov rax, qword [rax]	        68	ewok_rlw.h	FUNCTION_33
0x161	        0x48c1e821	                           shr rax, 0x21	        68	ewok_rlw.h	FUNCTION_33
0x165	              0x5d	                                 pop rbp	        69	ewok_rlw.h	FUNCTION_33
0x166	              0xc3	                                     ret	        69	ewok_rlw.h	FUNCTION_33
rlw_set_literal_words	ELSE,0:IF,0:CALL,0:DO,0:WHILE,0:SWITCH,0:FOR,0:functions,0	23
0x167	              0x55	                                push rbp	        72	ewok_rlw.h	FUNCTION_34
0x168	          0x4889e5	                            mov rbp, rsp	        72	ewok_rlw.h	FUNCTION_34
0x16b	        0x48897df8	                mov qword [rbp - 8], rdi	        72	ewok_rlw.h	FUNCTION_34
0x16f	        0x488975f0	             mov qword [rbp - 0x10], rsi	        72	ewok_rlw.h	FUNCTION_34
0x173	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	ewok_rlw.h	FUNCTION_34
0x177	          0x488b10	                    mov rdx, qword [rax]	        73	ewok_rlw.h	FUNCTION_34
0x17a	    0x48b800000000	          movabs rax, 0xfffffffe00000000	        73	ewok_rlw.h	FUNCTION_34
0x184	          0x4809c2	                             or rdx, rax	        73	ewok_rlw.h	FUNCTION_34
0x187	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	ewok_rlw.h	FUNCTION_34
0x18b	          0x488910	                    mov qword [rax], rdx	        73	ewok_rlw.h	FUNCTION_34
0x18e	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	ewok_rlw.h	FUNCTION_34
0x192	          0x488b00	                    mov rax, qword [rax]	        74	ewok_rlw.h	FUNCTION_34
0x195	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        74	ewok_rlw.h	FUNCTION_34
0x199	          0x4889d1	                            mov rcx, rdx	        74	ewok_rlw.h	FUNCTION_34
0x19c	        0x48c1e121	                           shl rcx, 0x21	        74	ewok_rlw.h	FUNCTION_34
0x1a0	    0x48baffffffff	                 movabs rdx, 0x1ffffffff	        74	ewok_rlw.h	FUNCTION_34
0x1aa	          0x4809ca	                             or rdx, rcx	        74	ewok_rlw.h	FUNCTION_34
0x1ad	          0x4821c2	                            and rdx, rax	        74	ewok_rlw.h	FUNCTION_34
0x1b0	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	ewok_rlw.h	FUNCTION_34
0x1b4	          0x488910	                    mov qword [rax], rdx	        74	ewok_rlw.h	FUNCTION_34
0x1b7	              0x90	                                     nop	        75	ewok_rlw.h	FUNCTION_34
0x1b8	              0x5d	                                 pop rbp	        75	ewok_rlw.h	FUNCTION_34
0x1b9	              0xc3	                                     ret	        75	ewok_rlw.h	FUNCTION_34
