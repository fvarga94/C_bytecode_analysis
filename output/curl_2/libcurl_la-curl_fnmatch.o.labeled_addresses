loop	SWITCH,1:FOR,3:WHILE,0:functions,0:IF,25:CALL,12:ELSE,11:DO,0	292
0x40007e5	              0x55	                                push rbp	       255	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007e6	          0x4889e5	                            mov rbp, rsp	       255	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007e9	    0x4881ec600100	                          sub rsp, 0x160	       255	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007f0	    0x4889bdb8feff	            mov qword [rbp - 0x148], rdi	       255	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007f7	    0x4889b5b0feff	            mov qword [rbp - 0x150], rsi	       255	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007fe	    0x8995acfeffff	            mov dword [rbp - 0x154], edx	       255	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000804	    0x64488b042528	                mov rax, qword fs:[0x28]	       255	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400080d	        0x488945f8	                mov qword [rbp - 8], rax	       255	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000811	            0x31c0	                            xor eax, eax	       255	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000813	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	       256	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400081a	    0x488985d0feff	            mov qword [rbp - 0x130], rax	       256	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000821	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	       257	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000828	    0x488985d8feff	            mov qword [rbp - 0x128], rax	       257	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400082f	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000836	      0xb800000000	                              mov eax, 0	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400083b	      0xb921000000	                           mov ecx, 0x21	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000840	          0x4889d7	                            mov rdi, rdx	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000843	          0xf348ab	              rep stosq qword [rdi], rax	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000846	          0x4889fa	                            mov rdx, rdi	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000849	            0x8902	                    mov dword [rdx], eax	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400084b	        0x4883c204	                              add rdx, 4	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400084f	          0x668902	                      mov word [rdx], ax	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000852	        0x4883c202	                              add rdx, 2	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000856	            0x8802	                      mov byte [rdx], al	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000858	        0x4883c201	                              add rdx, 1	       258	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400085c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       263	curl_fnmatch.c	
0x4000863	           0xfb600	                   movzx eax, byte [rax]	       263	curl_fnmatch.c	
0x4000866	           0xfb6c0	                           movzx eax, al	       263	curl_fnmatch.c	
0x4000869	          0x83f83f	                           cmp eax, 0x3f	       263	curl_fnmatch.c	
0x400086c	     0xf84f9000000	                            je 0x400096b	       263	curl_fnmatch.c	
0x4000872	          0x83f83f	                           cmp eax, 0x3f	       263	curl_fnmatch.c	
0x4000875	            0x7f12	                            jg 0x4000889	       263	curl_fnmatch.c	
0x4000877	            0x85c0	                           test eax, eax	       263	curl_fnmatch.c	
0x4000879	     0xf8419010000	                            je 0x4000998	       263	curl_fnmatch.c	
0x400087f	          0x83f82a	                           cmp eax, 0x2a	       263	curl_fnmatch.c	
0x4000882	            0x741c	                            je 0x40008a0	       263	curl_fnmatch.c	
0x4000884	      0xe9ce030000	                           jmp 0x4000c57	       263	curl_fnmatch.c	
0x4000889	          0x83f85b	                           cmp eax, 0x5b	       263	curl_fnmatch.c	
0x400088c	     0xf8473010000	                            je 0x4000a05	       263	curl_fnmatch.c	
0x4000892	          0x83f85c	                           cmp eax, 0x5c	       263	curl_fnmatch.c	
0x4000895	     0xf8414010000	                            je 0x40009af	       263	curl_fnmatch.c	
0x400089b	      0xe9b7030000	                           jmp 0x4000c57	       263	curl_fnmatch.c	
0x40008a0	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 0	       265	curl_fnmatch.c	
0x40008a7	            0x750a	                           jne 0x40008b3	       265	curl_fnmatch.c	
0x40008a9	      0xb801000000	                              mov eax, 1	       266	curl_fnmatch.c	FUNCTION_5
0x40008ae	      0xe9e5030000	                           jmp 0x4000c98	       266	curl_fnmatch.c	FUNCTION_5
0x40008b3	    0x488385d0feff	              add qword [rbp - 0x130], 1	       270	curl_fnmatch.c	FUNCTION_5
0x40008bb	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       270	curl_fnmatch.c	FUNCTION_5
0x40008c2	           0xfb600	                   movzx eax, byte [rax]	       270	curl_fnmatch.c	FUNCTION_5
0x40008c5	            0x84c0	                             test al, al	       270	curl_fnmatch.c	FUNCTION_5
0x40008c7	            0x750a	                           jne 0x40008d3	       270	curl_fnmatch.c	FUNCTION_5
0x40008c9	      0xb800000000	                              mov eax, 0	       271	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008ce	      0xe9c5030000	                           jmp 0x4000c98	       271	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008d3	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       272	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008da	           0xfb600	                   movzx eax, byte [rax]	       272	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008dd	            0x3c3f	                            cmp al, 0x3f	       272	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008df	            0x7523	                           jne 0x4000904	       272	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008e1	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       273	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008e8	        0x488d5001	                      lea rdx, [rax + 1]	       273	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008ec	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	       273	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008f3	           0xfb600	                   movzx eax, byte [rax]	       273	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008f6	            0x84c0	                             test al, al	       273	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008f8	            0x75b9	                           jne 0x40008b3	       273	curl_fnmatch.c	FUNCTION_5	FOR_1
0x40008fa	      0xb801000000	                              mov eax, 1	       274	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40008ff	      0xe994030000	                           jmp 0x4000c98	       274	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000904	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       276	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_1
0x400090b	           0xfb600	                   movzx eax, byte [rax]	       276	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_1
0x400090e	            0x3c2a	                            cmp al, 0x2a	       276	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_1
0x4000910	            0x7502	                           jne 0x4000914	       276	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_1
0x4000912	            0xeb9f	                           jmp 0x40008b3	       278	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000914	              0x90	                                     nop	       277	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_1
0x4000915	    0x83adacfeffff	              sub dword [rbp - 0x154], 1	       280	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2
0x400091c	            0xeb35	                           jmp 0x4000953	       280	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2
0x400091e	    0x8b95acfeffff	            mov edx, dword [rbp - 0x154]	       281	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_2
0x4000924	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	       281	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_2
0x400092b	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       281	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_2
0x4000932	          0x4889ce	                            mov rsi, rcx	       281	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_2
0x4000935	          0x4889c7	                            mov rdi, rax	       281	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_2
0x4000938	      0xe8a8feffff	                           call sym.loop	       281	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_2
0x400093d	            0x85c0	                           test eax, eax	       281	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_2
0x400093f	            0x750a	                           jne 0x400094b	       281	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_2
0x4000941	      0xb800000000	                              mov eax, 0	       282	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_2
0x4000946	      0xe94d030000	                           jmp 0x4000c98	       282	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_2
0x400094b	    0x488385d8feff	              add qword [rbp - 0x128], 1	       280	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2
0x4000953	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       280	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2
0x400095a	           0xfb600	                   movzx eax, byte [rax]	       280	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2
0x400095d	            0x84c0	                             test al, al	       280	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2
0x400095f	            0x75bd	                           jne 0x400091e	       280	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2
0x4000961	      0xb801000000	                              mov eax, 1	       284	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_3	IF_4
0x4000966	      0xe92d030000	                           jmp 0x4000c98	       284	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_3	IF_4
0x400096b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       286	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_3
0x4000972	           0xfb600	                   movzx eax, byte [rax]	       286	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_3
0x4000975	            0x84c0	                             test al, al	       286	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_3
0x4000977	            0x750a	                           jne 0x4000983	       286	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	IF_3
0x4000979	      0xb801000000	                              mov eax, 1	       287	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	ELSE_1	IF_5
0x400097e	      0xe915030000	                           jmp 0x4000c98	       287	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	ELSE_1	IF_5
0x4000983	    0x488385d8feff	              add qword [rbp - 0x128], 1	       288	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2	ELSE_1	IF_5
0x400098b	    0x488385d0feff	              add qword [rbp - 0x130], 1	       289	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_2
0x4000993	      0xe9fb020000	                           jmp 0x4000c93	       290	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000998	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       292	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_3	IF_6	CALL_1
0x400099f	           0xfb600	                   movzx eax, byte [rax]	       292	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_3	IF_6	CALL_1
0x40009a2	            0x84c0	                             test al, al	       292	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_3	IF_6	CALL_1
0x40009a4	           0xf95c0	                                setne al	       292	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_3	IF_6	CALL_1
0x40009a7	           0xfb6c0	                           movzx eax, al	       292	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_3	IF_6	CALL_1
0x40009aa	      0xe9e9020000	                           jmp 0x4000c98	       292	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_3	IF_6	CALL_1
0x40009af	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       294	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_3
0x40009b6	        0x4883c001	                              add rax, 1	       294	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_3
0x40009ba	           0xfb600	                   movzx eax, byte [rax]	       294	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_3
0x40009bd	            0x84c0	                             test al, al	       294	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_3
0x40009bf	            0x7408	                            je 0x40009c9	       294	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	FOR_3
0x40009c1	    0x488385d0feff	              add qword [rbp - 0x130], 1	       295	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40009c9	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       296	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40009d0	        0x488d5001	                      lea rdx, [rax + 1]	       296	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40009d4	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	       296	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40009db	           0xfb608	                   movzx ecx, byte [rax]	       296	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40009de	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       296	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40009e5	        0x488d5001	                      lea rdx, [rax + 1]	       296	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40009e9	    0x488995d0feff	            mov qword [rbp - 0x130], rdx	       296	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40009f0	           0xfb600	                   movzx eax, byte [rax]	       296	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40009f3	            0x38c1	                              cmp cl, al	       296	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40009f5	     0xf8491020000	                            je 0x4000c8c	       296	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x40009fb	      0xb801000000	                              mov eax, 1	       297	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_7
0x4000a00	      0xe993020000	                           jmp 0x4000c98	       297	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_7
0x4000a05	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       300	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a0c	        0x4883c001	                              add rax, 1	       300	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a10	    0x488985c8feff	            mov qword [rbp - 0x138], rax	       300	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a17	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	       301	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a1e	    0x488d85c8feff	                  lea rax, [rbp - 0x138]	       301	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a25	          0x4889d6	                            mov rsi, rdx	       301	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a28	          0x4889c7	                            mov rdi, rax	       301	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a2b	      0xe8d4faffff	                     call sym.setcharset	       301	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a30	            0x85c0	                           test eax, eax	       301	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a32	     0xf841f020000	                            je 0x4000c57	       301	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a38	    0xc785c4feffff	              mov dword [rbp - 0x13c], 0	       302	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a42	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       303	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a49	           0xfb600	                   movzx eax, byte [rax]	       303	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a4c	            0x84c0	                             test al, al	       303	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a4e	            0x750a	                           jne 0x4000a5a	       303	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a50	      0xb801000000	                              mov eax, 1	       304	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a55	      0xe93e020000	                           jmp 0x4000c98	       304	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000a5a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       305	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_8
0x4000a61	           0xfb600	                   movzx eax, byte [rax]	       305	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_8
0x4000a64	           0xfb6c0	                           movzx eax, al	       305	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_8
0x4000a67	            0x89c0	                            mov eax, eax	       305	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_8
0x4000a69	     0xfb68405e0fe	     movzx eax, byte [rbp + rax - 0x120]	       305	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_8
0x4000a71	            0x84c0	                             test al, al	       305	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_8
0x4000a73	            0x740f	                            je 0x4000a84	       305	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_8
0x4000a75	    0xc785c4feffff	              mov dword [rbp - 0x13c], 1	       306	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_8
0x4000a7f	      0xe98c010000	                           jmp 0x4000c10	       306	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_8
0x4000a84	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	       307	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_9
0x4000a88	            0x84c0	                             test al, al	       307	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_9
0x4000a8a	            0x741f	                            je 0x4000aab	       307	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_9
0x4000a8c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       308	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_9
0x4000a93	           0xfb600	                   movzx eax, byte [rax]	       308	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_9
0x4000a96	           0xfb6c0	                           movzx eax, al	       308	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_9
0x4000a99	            0x89c7	                            mov edi, eax	       308	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_9
0x4000a9b	      0xe800000000	                          call 0x4000aa0	       308	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_9
0x4000aa0	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       308	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_9
0x4000aa6	      0xe965010000	                           jmp 0x4000c10	       308	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_9
0x4000aab	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	       309	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000aaf	            0x84c0	                             test al, al	       309	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000ab1	            0x741f	                            je 0x4000ad2	       309	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000ab3	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       310	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000aba	           0xfb600	                   movzx eax, byte [rax]	       310	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000abd	           0xfb6c0	                           movzx eax, al	       310	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000ac0	            0x89c7	                            mov edi, eax	       310	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000ac2	      0xe800000000	                          call 0x4000ac7	       310	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000ac7	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       310	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000acd	      0xe93e010000	                           jmp 0x4000c10	       310	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000ad2	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	       311	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000ad6	            0x84c0	                             test al, al	       311	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000ad8	            0x741f	                            je 0x4000af9	       311	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000ada	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       312	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	CALL_2
0x4000ae1	           0xfb600	                   movzx eax, byte [rax]	       312	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	CALL_2
0x4000ae4	           0xfb6c0	                           movzx eax, al	       312	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	CALL_2
0x4000ae7	            0x89c7	                            mov edi, eax	       312	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	CALL_2
0x4000ae9	      0xe800000000	                          call 0x4000aee	       312	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	CALL_2
0x4000aee	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       312	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	CALL_2
0x4000af4	      0xe917010000	                           jmp 0x4000c10	       312	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	CALL_2
0x4000af9	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	       313	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000afd	            0x84c0	                             test al, al	       313	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000aff	            0x741f	                            je 0x4000b20	       313	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000b01	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       314	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_11
0x4000b08	           0xfb600	                   movzx eax, byte [rax]	       314	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_11
0x4000b0b	           0xfb6c0	                           movzx eax, al	       314	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_11
0x4000b0e	            0x89c7	                            mov edi, eax	       314	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_11
0x4000b10	      0xe800000000	                          call 0x4000b15	       314	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_11
0x4000b15	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       314	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_11
0x4000b1b	      0xe9f0000000	                           jmp 0x4000c10	       314	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_11
0x4000b20	         0xfb645e5	            movzx eax, byte [rbp - 0x1b]	       315	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_11
0x4000b24	            0x84c0	                             test al, al	       315	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_11
0x4000b26	            0x741f	                            je 0x4000b47	       315	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_11
0x4000b28	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       316	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_12
0x4000b2f	           0xfb600	                   movzx eax, byte [rax]	       316	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_12
0x4000b32	           0xfb6c0	                           movzx eax, al	       316	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_12
0x4000b35	            0x89c7	                            mov edi, eax	       316	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_12
0x4000b37	      0xe800000000	                          call 0x4000b3c	       316	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_12
0x4000b3c	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       316	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_12
0x4000b42	      0xe9c9000000	                           jmp 0x4000c10	       316	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_12
0x4000b47	         0xfb645e9	            movzx eax, byte [rbp - 0x17]	       317	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_12
0x4000b4b	            0x84c0	                             test al, al	       317	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_12
0x4000b4d	            0x741f	                            je 0x4000b6e	       317	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_12
0x4000b4f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       318	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_2	IF_13
0x4000b56	           0xfb600	                   movzx eax, byte [rax]	       318	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_2	IF_13
0x4000b59	           0xfb6c0	                           movzx eax, al	       318	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_2	IF_13
0x4000b5c	            0x89c7	                            mov edi, eax	       318	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_2	IF_13
0x4000b5e	      0xe800000000	                          call 0x4000b63	       318	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_2	IF_13
0x4000b63	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       318	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_2	IF_13
0x4000b69	      0xe9a2000000	                           jmp 0x4000c10	       318	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_2	IF_13
0x4000b6e	         0xfb645ea	            movzx eax, byte [rbp - 0x16]	       319	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_2	IF_13
0x4000b72	            0x84c0	                             test al, al	       319	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_2	IF_13
0x4000b74	            0x741c	                            je 0x4000b92	       319	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_2	IF_13
0x4000b76	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       320	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_3	IF_14
0x4000b7d	           0xfb600	                   movzx eax, byte [rax]	       320	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_3	IF_14
0x4000b80	           0xfb6c0	                           movzx eax, al	       320	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_3	IF_14
0x4000b83	            0x89c7	                            mov edi, eax	       320	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_3	IF_14
0x4000b85	      0xe800000000	                          call 0x4000b8a	       320	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_3	IF_14
0x4000b8a	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       320	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_3	IF_14
0x4000b90	            0xeb7e	                           jmp 0x4000c10	       320	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_3	IF_14
0x4000b92	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       321	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_3	IF_14
0x4000b96	            0x84c0	                             test al, al	       321	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_3	IF_14
0x4000b98	            0x741c	                            je 0x4000bb6	       321	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_3	IF_14
0x4000b9a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       322	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_4	IF_15
0x4000ba1	           0xfb600	                   movzx eax, byte [rax]	       322	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_4	IF_15
0x4000ba4	           0xfb6c0	                           movzx eax, al	       322	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_4	IF_15
0x4000ba7	            0x89c7	                            mov edi, eax	       322	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_4	IF_15
0x4000ba9	      0xe800000000	                          call 0x4000bae	       322	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_4	IF_15
0x4000bae	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       322	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_4	IF_15
0x4000bb4	            0xeb5a	                           jmp 0x4000c10	       322	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_4	IF_15
0x4000bb6	         0xfb645e6	            movzx eax, byte [rbp - 0x1a]	       323	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_4	IF_15
0x4000bba	            0x84c0	                             test al, al	       323	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_4	IF_15
0x4000bbc	            0x7430	                            je 0x4000bee	       323	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_4	IF_15
0x4000bbe	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bc5	           0xfb600	                   movzx eax, byte [rax]	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bc8	            0x3c20	                            cmp al, 0x20	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bca	            0x740e	                            je 0x4000bda	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bcc	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bd3	           0xfb600	                   movzx eax, byte [rax]	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bd6	            0x3c09	                               cmp al, 9	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bd8	            0x7507	                           jne 0x4000be1	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bda	      0xb801000000	                              mov eax, 1	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bdf	            0xeb05	                           jmp 0x4000be6	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000be1	      0xb800000000	                              mov eax, 0	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000be6	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bec	            0xeb22	                           jmp 0x4000c10	       324	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bee	         0xfb645e8	            movzx eax, byte [rbp - 0x18]	       325	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bf2	            0x84c0	                             test al, al	       325	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bf4	            0x741a	                            je 0x4000c10	       325	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_5	IF_16
0x4000bf6	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       326	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_6	IF_17
0x4000bfd	           0xfb600	                   movzx eax, byte [rax]	       326	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_6	IF_17
0x4000c00	           0xfb6c0	                           movzx eax, al	       326	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_6	IF_17
0x4000c03	            0x89c7	                            mov edi, eax	       326	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_6	IF_17
0x4000c05	      0xe800000000	                          call 0x4000c0a	       326	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_6	IF_17
0x4000c0a	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       326	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_6	IF_17
0x4000c10	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       328	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_7	IF_18
0x4000c14	            0x84c0	                             test al, al	       328	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_7	IF_18
0x4000c16	            0x7413	                            je 0x4000c2b	       328	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_7	IF_18
0x4000c18	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	       329	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_7	IF_18
0x4000c1f	           0xf94c0	                                 sete al	       329	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_7	IF_18
0x4000c22	           0xfb6c0	                           movzx eax, al	       329	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_7	IF_18
0x4000c25	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       329	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_7	IF_18
0x4000c2b	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	       331	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_8	IF_19
0x4000c32	            0x7507	                           jne 0x4000c3b	       331	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_8	IF_19
0x4000c34	      0xb801000000	                              mov eax, 1	       332	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_9	IF_20
0x4000c39	            0xeb5d	                           jmp 0x4000c98	       332	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_9	IF_20
0x4000c3b	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       333	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_9	IF_20
0x4000c42	        0x4883c001	                              add rax, 1	       333	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_9	IF_20
0x4000c46	    0x488985d0feff	            mov qword [rbp - 0x130], rax	       333	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_9	IF_20
0x4000c4d	    0x488385d8feff	              add qword [rbp - 0x128], 1	       334	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_10	IF_21
0x4000c55	            0xeb3c	                           jmp 0x4000c93	       335	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	ELSE_10	IF_21
0x4000c57	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       341	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c5e	        0x488d5001	                      lea rdx, [rax + 1]	       341	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c62	    0x488995d0feff	            mov qword [rbp - 0x130], rdx	       341	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c69	           0xfb608	                   movzx ecx, byte [rax]	       341	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c6c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       341	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c73	        0x488d5001	                      lea rdx, [rax + 1]	       341	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c77	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	       341	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c7e	           0xfb600	                   movzx eax, byte [rax]	       341	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c81	            0x38c1	                              cmp cl, al	       341	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c83	            0x740d	                            je 0x4000c92	       341	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c85	      0xb801000000	                              mov eax, 1	       342	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_24
0x4000c8a	            0xeb0c	                           jmp 0x4000c98	       342	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_24
0x4000c8c	              0x90	                                     nop	       298	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_7
0x4000c8d	      0xe9cafbffff	                           jmp 0x400085c	       298	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_7
0x4000c92	              0x90	                                     nop	       343	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10	IF_24
0x4000c93	      0xe9c4fbffff	                           jmp 0x400085c	       345	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c98	        0x488b75f8	                mov rsi, qword [rbp - 8]	       346	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000c9c	    0x644833342528	                xor rsi, qword fs:[0x28]	       346	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000ca5	            0x7405	                            je 0x4000cac	       346	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000ca7	      0xe800000000	                          call 0x4000cac	       346	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000cac	              0xc9	                                   leave	       346	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
0x4000cad	              0xc3	                                     ret	       346	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_10
setcharset	SWITCH,1:FOR,1:WHILE,0:functions,0:IF,14:CALL,5:ELSE,11:DO,0	204
0x4000504	              0x55	                                push rbp	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000505	          0x4889e5	                            mov rbp, rsp	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000508	        0x4883ec30	                           sub rsp, 0x30	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x400050c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000510	        0x488975d0	             mov qword [rbp - 0x30], rsi	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000514	    0x64488b042528	                mov rax, qword fs:[0x28]	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x400051d	        0x488945f8	                mov qword [rbp - 8], rax	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000521	            0x31c0	                            xor eax, eax	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000523	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       163	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	WHILE_1
0x400052a	        0xc645ea00	                mov byte [rbp - 0x16], 0	       164	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	WHILE_1	IF_4	CALL_4
0x400052e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       167	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3
0x4000532	      0xba0f010000	                          mov edx, 0x10f	       167	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3
0x4000537	      0xbe00000000	                              mov esi, 0	       167	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3
0x400053c	          0x4889c7	                            mov rdi, rax	       167	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3
0x400053f	      0xe800000000	                          call 0x4000544	       167	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3
0x4000544	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       169	curl_fnmatch.c	FUNCTION_3
0x4000548	          0x488b00	                    mov rax, qword [rax]	       169	curl_fnmatch.c	FUNCTION_3
0x400054b	           0xfb600	                   movzx eax, byte [rax]	       169	curl_fnmatch.c	FUNCTION_3
0x400054e	          0x8845eb	               mov byte [rbp - 0x15], al	       169	curl_fnmatch.c	FUNCTION_3
0x4000551	        0x807deb00	                cmp byte [rbp - 0x15], 0	       170	curl_fnmatch.c	
0x4000555	            0x750a	                           jne 0x4000561	       170	curl_fnmatch.c	
0x4000557	      0xb800000000	                              mov eax, 0	       171	curl_fnmatch.c	
0x400055c	      0xe96e020000	                           jmp 0x40007cf	       171	curl_fnmatch.c	
0x4000561	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       173	curl_fnmatch.c	FUNCTION_4
0x4000564	          0x83f801	                              cmp eax, 1	       173	curl_fnmatch.c	FUNCTION_4
0x4000567	     0xf84ae010000	                            je 0x400071b	       173	curl_fnmatch.c	FUNCTION_4
0x400056d	          0x83f801	                              cmp eax, 1	       173	curl_fnmatch.c	FUNCTION_4
0x4000570	            0x720e	                            jb 0x4000580	       173	curl_fnmatch.c	FUNCTION_4
0x4000572	          0x83f802	                              cmp eax, 2	       173	curl_fnmatch.c	FUNCTION_4
0x4000575	     0xf8414020000	                            je 0x400078f	       173	curl_fnmatch.c	FUNCTION_4
0x400057b	      0xe944020000	                           jmp 0x40007c4	       173	curl_fnmatch.c	FUNCTION_4
0x4000580	        0x807deb5d	            cmp byte [rbp - 0x15], 0x5d 	       175	curl_fnmatch.c	FUNCTION_4
0x4000584	            0x7540	                           jne 0x40005c6	       175	curl_fnmatch.c	FUNCTION_4
0x4000586	        0x807dea00	                cmp byte [rbp - 0x16], 0	       176	curl_fnmatch.c	FUNCTION_4
0x400058a	            0x740a	                            je 0x4000596	       176	curl_fnmatch.c	FUNCTION_4
0x400058c	      0xb801000000	                              mov eax, 1	       177	curl_fnmatch.c	FUNCTION_4
0x4000591	      0xe939020000	                           jmp 0x40007cf	       177	curl_fnmatch.c	FUNCTION_4
0x4000596	        0xc645ea01	                mov byte [rbp - 0x16], 1	       178	curl_fnmatch.c	FUNCTION_4	CALL_1
0x400059a	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       179	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005a1	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       180	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       180	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005a9	          0x4801d0	                            add rax, rdx	       180	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005ac	          0xc60001	                       mov byte [rax], 1	       180	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       181	curl_fnmatch.c	FUNCTION_4	FOR_1	IF_1
0x40005b3	          0x488b00	                    mov rax, qword [rax]	       181	curl_fnmatch.c	FUNCTION_4	FOR_1	IF_1
0x40005b6	        0x488d5001	                      lea rdx, [rax + 1]	       181	curl_fnmatch.c	FUNCTION_4	FOR_1	IF_1
0x40005ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       181	curl_fnmatch.c	FUNCTION_4	FOR_1	IF_1
0x40005be	          0x488910	                    mov qword [rax], rdx	       181	curl_fnmatch.c	FUNCTION_4	FOR_1	IF_1
0x40005c1	      0xe9fe010000	                           jmp 0x40007c4	       219	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x40005c6	        0x807deb5b	            cmp byte [rbp - 0x15], 0x5b 	       183	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005ca	            0x756f	                           jne 0x400063b	       183	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       184	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40005d0	          0x488b00	                    mov rax, qword [rax]	       184	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40005d3	        0x4883c001	                              add rax, 1	       184	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40005d7	        0x488945f0	             mov qword [rbp - 0x10], rax	       184	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40005db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005df	        0x488d5001	                      lea rdx, [rax + 1]	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005e3	        0x488955f0	             mov qword [rbp - 0x10], rdx	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005e7	           0xfb600	                   movzx eax, byte [rax]	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005ea	            0x3c3a	                            cmp al, 0x3a	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005ec	            0x7524	                           jne 0x4000612	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005ee	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005f2	        0x488d45f0	                   lea rax, [rbp - 0x10]	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005f6	          0x4889d6	                            mov rsi, rdx	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005f9	          0x4889c7	                            mov rdi, rax	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005fc	      0xe811fbffff	                   call sym.parsekeyword	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000601	            0x85c0	                           test eax, eax	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000603	            0x740d	                            je 0x4000612	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000605	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       187	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2	IF_3
0x4000609	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       187	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2	IF_3
0x400060d	          0x488910	                    mov qword [rax], rdx	       187	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2	IF_3
0x4000610	            0xeb20	                           jmp 0x4000632	       187	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2	IF_3
0x4000612	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       189	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000616	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       189	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x400061a	          0x4801d0	                            add rax, rdx	       189	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x400061d	          0xc60001	                       mov byte [rax], 1	       189	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000620	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       190	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000624	          0x488b00	                    mov rax, qword [rax]	       190	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000627	        0x488d5001	                      lea rdx, [rax + 1]	       190	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x400062b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       190	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x400062f	          0x488910	                    mov qword [rax], rdx	       190	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000632	        0xc645ea01	                mov byte [rbp - 0x16], 1	       192	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000636	      0xe989010000	                           jmp 0x40007c4	       219	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x400063b	        0x807deb5e	            cmp byte [rbp - 0x15], 0x5e 	       194	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400063f	            0x7406	                            je 0x4000647	       194	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000641	        0x807deb21	            cmp byte [rbp - 0x15], 0x21 	       194	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000645	            0x7564	                           jne 0x40006ab	       194	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000647	         0xfb645ea	            movzx eax, byte [rbp - 0x16]	       195	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400064b	          0x83f001	                              xor eax, 1	       195	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400064e	            0x84c0	                             test al, al	       195	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000650	            0x7434	                            je 0x4000686	       195	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000652	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       196	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000656	    0x480500010000	                          add rax, 0x100	       196	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400065c	           0xfb600	                   movzx eax, byte [rax]	       196	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400065f	            0x84c0	                             test al, al	       196	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000661	            0x7414	                            je 0x4000677	       196	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000663	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       197	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5	CALL_2
0x4000667	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       197	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5	CALL_2
0x400066b	          0x4801d0	                            add rax, rdx	       197	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5	CALL_2
0x400066e	          0xc60001	                       mov byte [rax], 1	       197	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5	CALL_2
0x4000671	        0xc645ea01	                mov byte [rbp - 0x16], 1	       198	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000675	            0xeb1d	                           jmp 0x4000694	       198	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000677	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       201	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	ELSE_2
0x400067b	    0x480500010000	                          add rax, 0x100	       201	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	ELSE_2
0x4000681	          0xc60001	                       mov byte [rax], 1	       201	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	ELSE_2
0x4000684	            0xeb0e	                           jmp 0x4000694	       201	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	ELSE_2
0x4000686	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       204	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400068a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       204	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400068e	          0x4801d0	                            add rax, rdx	       204	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000691	          0xc60001	                       mov byte [rax], 1	       204	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000694	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       205	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x4000698	          0x488b00	                    mov rax, qword [rax]	       205	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x400069b	        0x488d5001	                      lea rdx, [rax + 1]	       205	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x400069f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       205	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x40006a3	          0x488910	                    mov qword [rax], rdx	       205	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x40006a6	      0xe919010000	                           jmp 0x40007c4	       219	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x40006ab	        0x807deb5c	            cmp byte [rbp - 0x15], 0x5c 	       207	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006af	            0x754e	                           jne 0x40006ff	       207	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006b5	          0x488b00	                    mov rax, qword [rax]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006b8	        0x488d5001	                      lea rdx, [rax + 1]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006c0	          0x488910	                    mov qword [rax], rdx	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006c7	          0x488b00	                    mov rax, qword [rax]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006ca	           0xfb600	                   movzx eax, byte [rax]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006cd	          0x8845eb	               mov byte [rbp - 0x15], al	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006d0	        0x807deb00	                cmp byte [rbp - 0x15], 0	       209	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006d4	            0x7415	                            je 0x40006eb	       209	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006d6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006de	          0x4889d6	                            mov rsi, rdx	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006e1	          0x4889c7	                            mov rdi, rax	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006e4	      0xe81dfdffff	                 call sym.setcharorrange	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006e9	            0xeb0b	                           jmp 0x40006f6	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006eb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       212	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	ELSE_4
0x40006ef	        0x4883c05c	                           add rax, 0x5c	       212	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	ELSE_4
0x40006f3	          0xc60001	                       mov byte [rax], 1	       212	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	ELSE_4
0x40006f6	        0xc645ea01	                mov byte [rbp - 0x16], 1	       213	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7
0x40006fa	      0xe9c5000000	                           jmp 0x40007c4	       219	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x40006ff	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       216	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x4000703	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       216	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x4000707	          0x4889d6	                            mov rsi, rdx	       216	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x400070a	          0x4889c7	                            mov rdi, rax	       216	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x400070d	      0xe8f4fcffff	                 call sym.setcharorrange	       216	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x4000712	        0xc645ea01	                mov byte [rbp - 0x16], 1	       217	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x4000716	      0xe9a9000000	                           jmp 0x40007c4	       219	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x400071b	        0x807deb5b	            cmp byte [rbp - 0x15], 0x5b 	       221	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	CALL_3
0x400071f	            0x7529	                           jne 0x400074a	       221	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	CALL_3
0x4000721	    0xc745ec020000	               mov dword [rbp - 0x14], 2	       222	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	ELSE_7
0x4000728	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       223	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	ELSE_7
0x400072c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       223	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	ELSE_7
0x4000730	          0x4801d0	                            add rax, rdx	       223	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	ELSE_7
0x4000733	          0xc60001	                       mov byte [rax], 1	       223	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	ELSE_7
0x4000736	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       224	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x400073a	          0x488b00	                    mov rax, qword [rax]	       224	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x400073d	        0x488d5001	                      lea rdx, [rax + 1]	       224	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x4000741	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       224	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x4000745	          0x488910	                    mov qword [rax], rdx	       224	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x4000748	            0xeb7a	                           jmp 0x40007c4	       239	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_9	IF_12
0x400074a	        0x807deb5d	            cmp byte [rbp - 0x15], 0x5d 	       226	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x400074e	            0x7507	                           jne 0x4000757	       226	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x4000750	      0xb801000000	                              mov eax, 1	       227	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8	CALL_4
0x4000755	            0xeb78	                           jmp 0x40007cf	       227	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8	CALL_4
0x4000757	         0xfb645eb	            movzx eax, byte [rbp - 0x15]	       229	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x400075b	            0x89c7	                            mov edi, eax	       229	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x400075d	      0xe800000000	                          call 0x4000762	       229	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x4000762	            0x85c0	                           test eax, eax	       229	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x4000764	            0x7463	                            je 0x40007c9	       229	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x4000766	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       230	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400076a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       230	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400076e	          0x4801d0	                            add rax, rdx	       230	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000771	          0xc60001	                       mov byte [rax], 1	       230	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000774	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       231	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000778	          0x488b00	                    mov rax, qword [rax]	       231	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400077b	        0x488d5001	                      lea rdx, [rax + 1]	       231	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400077f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       231	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000783	          0x488910	                    mov qword [rax], rdx	       231	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000786	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       232	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_11
0x400078d	            0xeb35	                           jmp 0x40007c4	       239	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_9	IF_12
0x400078f	        0x807deb5d	            cmp byte [rbp - 0x15], 0x5d 	       241	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x4000793	            0x7507	                           jne 0x400079c	       241	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x4000795	      0xb801000000	                              mov eax, 1	       242	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x400079a	            0xeb33	                           jmp 0x40007cf	       242	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x400079c	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       243	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x40007a3	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       244	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x40007a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       244	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x40007ab	          0x4801d0	                            add rax, rdx	       244	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x40007ae	          0xc60001	                       mov byte [rax], 1	       244	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x40007b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       245	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007b5	          0x488b00	                    mov rax, qword [rax]	       245	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007b8	        0x488d5001	                      lea rdx, [rax + 1]	       245	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       245	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007c0	          0x488910	                    mov qword [rax], rdx	       245	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007c3	              0x90	                                     nop	       246	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007c4	      0xe97bfdffff	                           jmp 0x4000544	       248	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007c9	              0x90	                                     nop	       238	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_9	IF_12
0x40007ca	      0xb800000000	                              mov eax, 0	       250	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007cf	        0x488b4df8	                mov rcx, qword [rbp - 8]	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007d3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007dc	            0x7405	                            je 0x40007e3	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007de	      0xe800000000	                          call 0x40007e3	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007e3	              0xc9	                                   leave	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007e4	              0xc3	                                     ret	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
Curl_fnmatch	SWITCH,1:FOR,0:WHILE,0:functions,0:IF,1:CALL,1:ELSE,0:DO,0	20
0x4000cae	              0x55	                                push rbp	       352	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_25
0x4000caf	          0x4889e5	                            mov rbp, rsp	       352	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_25
0x4000cb2	        0x4883ec20	                           sub rsp, 0x20	       352	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_25
0x4000cb6	        0x48897df8	                mov qword [rbp - 8], rdi	       352	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_25
0x4000cba	        0x488975f0	             mov qword [rbp - 0x10], rsi	       352	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_25
0x4000cbe	        0x488955e8	             mov qword [rbp - 0x18], rdx	       352	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1	IF_25
0x4000cc2	      0x48837df000	               cmp qword [rbp - 0x10], 0	       355	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000cc7	            0x7407	                            je 0x4000cd0	       355	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000cc9	      0x48837de800	               cmp qword [rbp - 0x18], 0	       355	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000cce	            0x7507	                           jne 0x4000cd7	       355	curl_fnmatch.c	FUNCTION_5	FOR_1	SWITCH_1
0x4000cd0	      0xb802000000	                              mov eax, 2	       356	curl_fnmatch.c	FUNCTION_5	FOR_1
0x4000cd5	            0xeb18	                           jmp 0x4000cef	       356	curl_fnmatch.c	FUNCTION_5	FOR_1
0x4000cd7	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       358	curl_fnmatch.c	
0x4000cdb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       358	curl_fnmatch.c	
0x4000cdf	      0xba02000000	                              mov edx, 2	       358	curl_fnmatch.c	
0x4000ce4	          0x4889ce	                            mov rsi, rcx	       358	curl_fnmatch.c	
0x4000ce7	          0x4889c7	                            mov rdi, rax	       358	curl_fnmatch.c	
0x4000cea	      0xe8f6faffff	                           call sym.loop	       358	curl_fnmatch.c	
0x4000cef	              0xc9	                                   leave	       359	curl_fnmatch.c	
0x4000cf0	              0xc3	                                     ret	       359	curl_fnmatch.c	
setcharorrange	SWITCH,0:FOR,0:WHILE,1:functions,0:IF,4:CALL,4:ELSE,0:DO,0	76
0x4000406	              0x55	                                push rbp	       140	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_1	CALL_1
0x4000407	          0x4889e5	                            mov rbp, rsp	       140	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_1	CALL_1
0x400040a	        0x4883ec20	                           sub rsp, 0x20	       140	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_1	CALL_1
0x400040e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       140	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_1	CALL_1
0x4000412	        0x488975e0	             mov qword [rbp - 0x20], rsi	       140	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_1	CALL_1
0x4000416	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       141	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_1
0x400041a	          0x488b00	                    mov rax, qword [rax]	       141	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_1
0x400041d	        0x488d4801	                      lea rcx, [rax + 1]	       141	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_1
0x4000421	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       141	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_1
0x4000425	          0x48890a	                    mov qword [rdx], rcx	       141	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_1
0x4000428	        0x488945f8	                mov qword [rbp - 8], rax	       141	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_1
0x400042c	        0x488b45f8	                mov rax, qword [rbp - 8]	       142	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_2	CALL_2
0x4000430	        0x488d5001	                      lea rdx, [rax + 1]	       142	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_2	CALL_2
0x4000434	        0x488955f8	                mov qword [rbp - 8], rdx	       142	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_2	CALL_2
0x4000438	           0xfb600	                   movzx eax, byte [rax]	       142	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_2	CALL_2
0x400043b	          0x8845f2	                mov byte [rbp - 0xe], al	       142	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_2	CALL_2
0x400043e	         0xfb655f2	             movzx edx, byte [rbp - 0xe]	       144	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3	CALL_3
0x4000442	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       144	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3	CALL_3
0x4000446	          0x4801d0	                            add rax, rdx	       144	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3	CALL_3
0x4000449	          0xc60001	                       mov byte [rax], 1	       144	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3	CALL_3
0x400044c	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	       145	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3
0x4000450	            0x89c7	                            mov edi, eax	       145	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3
0x4000452	      0xe800000000	                          call 0x4000457	       145	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3
0x4000457	            0x85c0	                           test eax, eax	       145	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3
0x4000459	     0xf84a2000000	                            je 0x4000501	       145	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3
0x400045f	        0x488b45f8	                mov rax, qword [rbp - 8]	       145	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3
0x4000463	        0x488d5001	                      lea rdx, [rax + 1]	       145	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3
0x4000467	        0x488955f8	                mov qword [rbp - 8], rdx	       145	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3
0x400046b	           0xfb600	                   movzx eax, byte [rax]	       145	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3
0x400046e	            0x3c2d	                            cmp al, 0x2d	       145	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3
0x4000470	     0xf858b000000	                           jne 0x4000501	       145	curl_fnmatch.c	ELSE_13	FUNCTION_2	IF_3
0x4000476	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	       146	curl_fnmatch.c	ELSE_13	FUNCTION_2
0x400047a	            0x89c7	                            mov edi, eax	       146	curl_fnmatch.c	ELSE_13	FUNCTION_2
0x400047c	      0xe82fffffff	                      call sym.charclass	       146	curl_fnmatch.c	ELSE_13	FUNCTION_2
0x4000481	          0x8945f4	              mov dword [rbp - 0xc], eax	       146	curl_fnmatch.c	ELSE_13	FUNCTION_2
0x4000484	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	curl_fnmatch.c	ELSE_13	FUNCTION_2
0x4000488	        0x488d5001	                      lea rdx, [rax + 1]	       147	curl_fnmatch.c	ELSE_13	FUNCTION_2
0x400048c	        0x488955f8	                mov qword [rbp - 8], rdx	       147	curl_fnmatch.c	ELSE_13	FUNCTION_2
0x4000490	           0xfb600	                   movzx eax, byte [rax]	       147	curl_fnmatch.c	ELSE_13	FUNCTION_2
0x4000493	          0x8845f3	                mov byte [rbp - 0xd], al	       147	curl_fnmatch.c	ELSE_13	FUNCTION_2
0x4000496	        0x807df35c	              cmp byte [rbp - 0xd], 0x5c	       149	curl_fnmatch.c	
0x400049a	            0x7512	                           jne 0x40004ae	       149	curl_fnmatch.c	
0x400049c	        0x488b45f8	                mov rax, qword [rbp - 8]	       150	curl_fnmatch.c	
0x40004a0	        0x488d5001	                      lea rdx, [rax + 1]	       150	curl_fnmatch.c	
0x40004a4	        0x488955f8	                mov qword [rbp - 8], rdx	       150	curl_fnmatch.c	
0x40004a8	           0xfb600	                   movzx eax, byte [rax]	       150	curl_fnmatch.c	
0x40004ab	          0x8845f3	                mov byte [rbp - 0xd], al	       150	curl_fnmatch.c	
0x40004ae	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	       151	curl_fnmatch.c	FUNCTION_3
0x40004b2	          0x3a45f2	                cmp al, byte [rbp - 0xe]	       151	curl_fnmatch.c	FUNCTION_3
0x40004b5	            0x724a	                            jb 0x4000501	       151	curl_fnmatch.c	FUNCTION_3
0x40004b7	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	       151	curl_fnmatch.c	FUNCTION_3
0x40004bb	            0x89c7	                            mov edi, eax	       151	curl_fnmatch.c	FUNCTION_3
0x40004bd	      0xe8eefeffff	                      call sym.charclass	       151	curl_fnmatch.c	FUNCTION_3
0x40004c2	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       151	curl_fnmatch.c	FUNCTION_3
0x40004c5	            0x753a	                           jne 0x4000501	       151	curl_fnmatch.c	FUNCTION_3
0x40004c7	            0xeb1e	                           jmp 0x40004e7	       152	curl_fnmatch.c	FUNCTION_3
0x40004c9	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	       153	curl_fnmatch.c	FUNCTION_3
0x40004cd	            0x89c7	                            mov edi, eax	       153	curl_fnmatch.c	FUNCTION_3
0x40004cf	      0xe8dcfeffff	                      call sym.charclass	       153	curl_fnmatch.c	FUNCTION_3
0x40004d4	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       153	curl_fnmatch.c	FUNCTION_3
0x40004d7	            0x750e	                           jne 0x40004e7	       153	curl_fnmatch.c	FUNCTION_3
0x40004d9	         0xfb655f2	             movzx edx, byte [rbp - 0xe]	       154	curl_fnmatch.c	FUNCTION_3
0x40004dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       154	curl_fnmatch.c	FUNCTION_3
0x40004e1	          0x4801d0	                            add rax, rdx	       154	curl_fnmatch.c	FUNCTION_3
0x40004e4	          0xc60001	                       mov byte [rax], 1	       154	curl_fnmatch.c	FUNCTION_3
0x40004e7	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	       152	curl_fnmatch.c	FUNCTION_3
0x40004eb	          0x8d5001	                      lea edx, [rax + 1]	       152	curl_fnmatch.c	FUNCTION_3
0x40004ee	          0x8855f2	                mov byte [rbp - 0xe], dl	       152	curl_fnmatch.c	FUNCTION_3
0x40004f1	          0x3a45f3	                cmp al, byte [rbp - 0xd]	       152	curl_fnmatch.c	FUNCTION_3
0x40004f4	            0x75d3	                           jne 0x40004c9	       152	curl_fnmatch.c	FUNCTION_3
0x40004f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       155	curl_fnmatch.c	FUNCTION_3
0x40004fa	        0x488b55f8	                mov rdx, qword [rbp - 8]	       155	curl_fnmatch.c	FUNCTION_3
0x40004fe	          0x488910	                    mov qword [rax], rdx	       155	curl_fnmatch.c	FUNCTION_3
0x4000501	              0x90	                                     nop	       158	curl_fnmatch.c	FUNCTION_3	IF_1
0x4000502	              0xc9	                                   leave	       158	curl_fnmatch.c	FUNCTION_3	IF_1
0x4000503	              0xc3	                                     ret	       158	curl_fnmatch.c	FUNCTION_3	IF_1
charclass	SWITCH,0:FOR,0:WHILE,0:functions,0:IF,3:CALL,3:ELSE,0:DO,0	29
0x40003b0	              0x55	                                push rbp	       128	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13	CALL_10
0x40003b1	          0x4889e5	                            mov rbp, rsp	       128	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13	CALL_10
0x40003b4	        0x4883ec10	                           sub rsp, 0x10	       128	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13	CALL_10
0x40003b8	            0x89f8	                            mov eax, edi	       128	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13	CALL_10
0x40003ba	          0x8845fc	                  mov byte [rbp - 4], al	       128	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13	CALL_10
0x40003bd	         0xfb645fc	               movzx eax, byte [rbp - 4]	       129	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13
0x40003c1	            0x89c7	                            mov edi, eax	       129	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13
0x40003c3	      0xe800000000	                          call 0x40003c8	       129	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13
0x40003c8	            0x85c0	                           test eax, eax	       129	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13
0x40003ca	            0x7407	                            je 0x40003d3	       129	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13
0x40003cc	      0xb802000000	                              mov eax, 2	       130	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14	CALL_11
0x40003d1	            0xeb31	                           jmp 0x4000404	       130	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14	CALL_11
0x40003d3	         0xfb645fc	               movzx eax, byte [rbp - 4]	       131	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14
0x40003d7	            0x89c7	                            mov edi, eax	       131	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14
0x40003d9	      0xe800000000	                          call 0x40003de	       131	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14
0x40003de	            0x85c0	                           test eax, eax	       131	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14
0x40003e0	            0x7407	                            je 0x40003e9	       131	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14
0x40003e2	      0xb803000000	                              mov eax, 3	       132	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003e7	            0xeb1b	                           jmp 0x4000404	       132	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003e9	         0xfb645fc	               movzx eax, byte [rbp - 4]	       133	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003ed	            0x89c7	                            mov edi, eax	       133	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003ef	      0xe800000000	                          call 0x40003f4	       133	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003f4	            0x85c0	                           test eax, eax	       133	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003f6	            0x7407	                            je 0x40003ff	       133	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003f8	      0xb801000000	                              mov eax, 1	       134	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003fd	            0xeb05	                           jmp 0x4000404	       134	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003ff	      0xb800000000	                              mov eax, 0	       135	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x4000404	              0xc9	                                   leave	       136	curl_fnmatch.c	ELSE_13
0x4000405	              0xc3	                                     ret	       136	curl_fnmatch.c	ELSE_13
parsekeyword	SWITCH,1:FOR,1:WHILE,0:functions,0:IF,14:CALL,11:ELSE,13:DO,0	170
