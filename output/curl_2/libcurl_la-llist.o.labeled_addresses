Curl_llist_move	WHILE,0:SWITCH,0:DO,0:FOR,0:ELSE,5:functions,0:IF,6:CALL,0	47
0x40001b8	          0x4885f6	                           test rsi, rsi	       156	llist.c	FUNCTION_6	IF_1
0x40001bb	     0xf84ab000000	                            je 0x400026c	       156	llist.c	FUNCTION_6	IF_1
0x40001c1	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       156	llist.c	FUNCTION_6	IF_1
0x40001c6	     0xf84a0000000	                            je 0x400026c	       156	llist.c	FUNCTION_6	IF_1
0x40001cc	          0x483b37	                    cmp rsi, qword [rdi]	       159	llist.c	FUNCTION_6	IF_2
0x40001cf	            0x7524	                           jne 0x40001f5	       159	llist.c	FUNCTION_6	IF_2
0x40001d1	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       160	llist.c	FUNCTION_6	IF_2
0x40001d5	          0x488907	                    mov qword [rdi], rax	       160	llist.c	FUNCTION_6	IF_2
0x40001d8	          0x4885c0	                           test rax, rax	       162	llist.c	FUNCTION_6	IF_2	IF_3
0x40001db	            0x750a	                           jne 0x40001e7	       162	llist.c	FUNCTION_6	IF_2	IF_3
0x40001dd	    0x48c747080000	                  mov qword [rdi + 8], 0	       163	llist.c	FUNCTION_6	IF_2	IF_3
0x40001e5	            0xeb35	                           jmp 0x400021c	       163	llist.c	FUNCTION_6	IF_2	IF_3
0x40001e7	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       165	llist.c	FUNCTION_6	IF_2	ELSE_1
0x40001eb	    0x48c740080000	                  mov qword [rax + 8], 0	       165	llist.c	FUNCTION_6	IF_2	ELSE_1
0x40001f3	            0xeb27	                           jmp 0x400021c	       165	llist.c	FUNCTION_6	IF_2	ELSE_1
0x40001f5	        0x488b4608	                mov rax, qword [rsi + 8]	       168	llist.c	FUNCTION_6	ELSE_2
0x40001f9	        0x4c8b4610	              mov r8, qword [rsi + 0x10]	       168	llist.c	FUNCTION_6	ELSE_2
0x40001fd	        0x4c894010	              mov qword [rax + 0x10], r8	       168	llist.c	FUNCTION_6	ELSE_2
0x4000201	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       169	llist.c	FUNCTION_6	ELSE_2	IF_4
0x4000205	          0x4885c0	                           test rax, rax	       169	llist.c	FUNCTION_6	ELSE_2	IF_4
0x4000208	            0x750a	                           jne 0x4000214	       169	llist.c	FUNCTION_6	ELSE_2	IF_4
0x400020a	        0x488b4608	                mov rax, qword [rsi + 8]	       170	llist.c	FUNCTION_6	ELSE_2	IF_4
0x400020e	        0x48894708	                mov qword [rdi + 8], rax	       170	llist.c	FUNCTION_6	ELSE_2	IF_4
0x4000212	            0xeb08	                           jmp 0x400021c	       170	llist.c	FUNCTION_6	ELSE_2	IF_4
0x4000214	        0x4c8b4608	                 mov r8, qword [rsi + 8]	       172	llist.c	FUNCTION_6	ELSE_2	ELSE_3
0x4000218	        0x4c894008	                 mov qword [rax + 8], r8	       172	llist.c	FUNCTION_6	ELSE_2	ELSE_3
0x400021c	      0x48836f1801	               sub qword [rdi + 0x18], 1	       175	llist.c	FUNCTION_6	ELSE_3
0x4000221	      0x48837a1800	               cmp qword [rdx + 0x18], 0	       178	llist.c	FUNCTION_6	ELSE_3	IF_5
0x4000226	            0x751c	                           jne 0x4000244	       178	llist.c	FUNCTION_6	ELSE_3	IF_5
0x4000228	          0x488932	                    mov qword [rdx], rsi	       179	llist.c	FUNCTION_6	ELSE_3	IF_5
0x400022b	    0x48c746080000	                  mov qword [rsi + 8], 0	       180	llist.c	FUNCTION_6	ELSE_3	IF_5
0x4000233	          0x488b02	                    mov rax, qword [rdx]	       181	llist.c	FUNCTION_6	ELSE_3	IF_5
0x4000236	    0x48c740100000	               mov qword [rax + 0x10], 0	       181	llist.c	FUNCTION_6	ELSE_3	IF_5
0x400023e	        0x48897208	                mov qword [rdx + 8], rsi	       182	llist.c	FUNCTION_6	ELSE_3	IF_5
0x4000242	            0xeb23	                           jmp 0x4000267	       182	llist.c	FUNCTION_6	ELSE_3	IF_5
0x4000244	        0x488b4110	            mov rax, qword [rcx + 0x10] 	       185	llist.c	FUNCTION_6	ELSE_4
0x4000248	        0x48894610	             mov qword [rsi + 0x10], rax	       185	llist.c	FUNCTION_6	ELSE_4
0x400024c	        0x48894e08	                mov qword [rsi + 8], rcx	       186	llist.c	FUNCTION_6	ELSE_4
0x4000250	        0x488b4110	            mov rax, qword [rcx + 0x10] 	       187	llist.c	FUNCTION_6	ELSE_4	IF_6
0x4000254	          0x4885c0	                           test rax, rax	       187	llist.c	FUNCTION_6	ELSE_4	IF_6
0x4000257	            0x7406	                            je 0x400025f	       187	llist.c	FUNCTION_6	ELSE_4	IF_6
0x4000259	        0x48897008	                mov qword [rax + 8], rsi	       188	llist.c	FUNCTION_6	ELSE_4	IF_6
0x400025d	            0xeb04	                           jmp 0x4000263	       188	llist.c	FUNCTION_6	ELSE_4	IF_6
0x400025f	        0x48897208	                mov qword [rdx + 8], rsi	       191	llist.c	FUNCTION_6	ELSE_4	ELSE_5
0x4000263	        0x48897110	             mov qword [rcx + 0x10], rsi	       193	llist.c	FUNCTION_6	ELSE_4
0x4000267	      0x4883421801	               add qword [rdx + 0x18], 1	       196	llist.c	FUNCTION_6
0x400026c	            0xf3c3	                                     ret	       196	llist.c	FUNCTION_6
Curl_llist_destroy	WHILE,1:SWITCH,0:DO,0:FOR,0:ELSE,0:functions,0:IF,1:CALL,1	19
0x400017d	          0x4885ff	                           test rdi, rdi	       136	llist.c	FUNCTION_4	IF_1
0x4000180	            0x742f	                            je 0x40001b1	       136	llist.c	FUNCTION_4	IF_1
0x4000182	              0x55	                                push rbp	       135	llist.c	FUNCTION_4
0x4000183	              0x53	                                push rbx	       135	llist.c	FUNCTION_4
0x4000184	        0x4883ec08	                              sub rsp, 8	       135	llist.c	FUNCTION_4
0x4000188	          0x4889f5	                            mov rbp, rsi	       135	llist.c	FUNCTION_4
0x400018b	          0x4889fb	                            mov rbx, rdi	       135	llist.c	FUNCTION_4
0x400018e	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       137	llist.c	FUNCTION_4	IF_1	WHILE_1
0x4000193	            0x7416	                            je 0x40001ab	       137	llist.c	FUNCTION_4	IF_1	WHILE_1
0x4000195	        0x488b7308	                mov rsi, qword [rbx + 8]	       138	llist.c	FUNCTION_4	IF_1	CALL_1
0x4000199	          0x4889ea	                            mov rdx, rbp	       138	llist.c	FUNCTION_4	IF_1	CALL_1
0x400019c	          0x4889df	                            mov rdi, rbx	       138	llist.c	FUNCTION_4	IF_1	CALL_1
0x400019f	      0xe800000000	                          call 0x40001a4	       138	llist.c	FUNCTION_4	IF_1	CALL_1
0x40001a4	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       137	llist.c	FUNCTION_4	IF_1	WHILE_1
0x40001a9	            0x75ea	                           jne 0x4000195	       137	llist.c	FUNCTION_4	IF_1	WHILE_1
0x40001ab	        0x4883c408	                              add rsp, 8	       140	llist.c	FUNCTION_4
0x40001af	              0x5b	                                 pop rbx	       140	llist.c	FUNCTION_4
0x40001b0	              0x5d	                                 pop rbp	       140	llist.c	FUNCTION_4
0x40001b1	            0xf3c3	                                     ret	       140	llist.c	FUNCTION_4
Curl_llist_remove	WHILE,0:SWITCH,0:DO,0:FOR,0:ELSE,4:functions,0:IF,6:CALL,1	45
0x40000d1	          0x4885f6	                           test rsi, rsi	        97	llist.c	FUNCTION_3	IF_1
0x40000d4	     0xf84a1000000	                            je 0x400017b	        97	llist.c	FUNCTION_3	IF_1
0x40000da	      0x48837f1800	               cmp qword [rdi + 0x18], 0	        97	llist.c	FUNCTION_3	IF_1
0x40000df	     0xf8496000000	                            je 0x400017b	        97	llist.c	FUNCTION_3	IF_1
0x40000e5	          0x483b37	                    cmp rsi, qword [rdi]	       100	llist.c	FUNCTION_3	IF_2
0x40000e8	            0x7524	                           jne 0x400010e	       100	llist.c	FUNCTION_3	IF_2
0x40000ea	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       101	llist.c	FUNCTION_3	IF_2
0x40000ee	          0x488907	                    mov qword [rdi], rax	       101	llist.c	FUNCTION_3	IF_2
0x40000f1	          0x4885c0	                           test rax, rax	       103	llist.c	FUNCTION_3	IF_2	IF_3
0x40000f4	            0x750a	                           jne 0x4000100	       103	llist.c	FUNCTION_3	IF_2	IF_3
0x40000f6	    0x48c747080000	                  mov qword [rdi + 8], 0	       104	llist.c	FUNCTION_3	IF_2	IF_3
0x40000fe	            0xeb43	                           jmp 0x4000143	       104	llist.c	FUNCTION_3	IF_2	IF_3
0x4000100	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       106	llist.c	FUNCTION_3	IF_2	ELSE_1
0x4000104	    0x48c740080000	                  mov qword [rax + 8], 0	       106	llist.c	FUNCTION_3	IF_2	ELSE_1
0x400010c	            0xeb35	                           jmp 0x4000143	       106	llist.c	FUNCTION_3	IF_2	ELSE_1
0x400010e	        0x488b4608	                mov rax, qword [rsi + 8]	       109	llist.c	FUNCTION_3	ELSE_2	IF_4
0x4000112	          0x4885c0	                           test rax, rax	       109	llist.c	FUNCTION_3	ELSE_2	IF_4
0x4000115	            0x7509	                           jne 0x4000120	       109	llist.c	FUNCTION_3	ELSE_2	IF_4
0x4000117	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       110	llist.c	FUNCTION_3	ELSE_2	IF_4
0x400011b	          0x488907	                    mov qword [rdi], rax	       110	llist.c	FUNCTION_3	ELSE_2	IF_4
0x400011e	            0xeb08	                           jmp 0x4000128	       110	llist.c	FUNCTION_3	ELSE_2	IF_4
0x4000120	        0x488b4e10	            mov rcx, qword [rsi + 0x10] 	       112	llist.c	FUNCTION_3	ELSE_2	ELSE_3
0x4000124	        0x48894810	             mov qword [rax + 0x10], rcx	       112	llist.c	FUNCTION_3	ELSE_2	ELSE_3
0x4000128	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       114	llist.c	FUNCTION_3	ELSE_2	IF_5
0x400012c	          0x4885c0	                           test rax, rax	       114	llist.c	FUNCTION_3	ELSE_2	IF_5
0x400012f	            0x750a	                           jne 0x400013b	       114	llist.c	FUNCTION_3	ELSE_2	IF_5
0x4000131	        0x488b4608	                mov rax, qword [rsi + 8]	       115	llist.c	FUNCTION_3	ELSE_2	IF_5
0x4000135	        0x48894708	                mov qword [rdi + 8], rax	       115	llist.c	FUNCTION_3	ELSE_2	IF_5
0x4000139	            0xeb08	                           jmp 0x4000143	       115	llist.c	FUNCTION_3	ELSE_2	IF_5
0x400013b	        0x488b4e08	                mov rcx, qword [rsi + 8]	       117	llist.c	FUNCTION_3	ELSE_2	ELSE_4
0x400013f	        0x48894808	                mov qword [rax + 8], rcx	       117	llist.c	FUNCTION_3	ELSE_2	ELSE_4
0x4000143	          0x488b0e	                    mov rcx, qword [rsi]	       120	llist.c	FUNCTION_3
0x4000146	    0x48c706000000	                      mov qword [rsi], 0	       122	llist.c	FUNCTION_3
0x400014d	    0x48c746080000	                  mov qword [rsi + 8], 0	       123	llist.c	FUNCTION_3
0x4000155	    0x48c746100000	               mov qword [rsi + 0x10], 0	       124	llist.c	FUNCTION_3
0x400015d	      0x48836f1801	               sub qword [rdi + 0x18], 1	       126	llist.c	FUNCTION_3
0x4000162	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       129	llist.c	FUNCTION_3	IF_6
0x4000166	          0x4885c0	                           test rax, rax	       129	llist.c	FUNCTION_3	IF_6
0x4000169	            0x7410	                            je 0x400017b	       129	llist.c	FUNCTION_3	IF_6
0x400016b	        0x4883ec08	                              sub rsp, 8	        95	llist.c	FUNCTION_3
0x400016f	          0x4889d7	                            mov rdi, rdx	        95	llist.c	FUNCTION_3
0x4000172	          0x4889ce	                            mov rsi, rcx	       130	llist.c	FUNCTION_3	CALL_1
0x4000175	            0xffd0	                                call rax	       130	llist.c	FUNCTION_3	CALL_1
0x4000177	        0x4883c408	                              add rsp, 8	       131	llist.c	FUNCTION_3
0x400017b	            0xf3c3	                                     ret	       131	llist.c	FUNCTION_3
Curl_llist_insert_next	WHILE,0:SWITCH,0:DO,0:FOR,0:ELSE,3:functions,0:IF,4:CALL,0	33
0x400005c	          0x488911	                    mov qword [rcx], rdx	        61	llist.c	FUNCTION_2
0x400005f	      0x48837f1800	               cmp qword [rdi + 0x18], 0	        62	llist.c	FUNCTION_2	IF_1
0x4000064	            0x751c	                           jne 0x4000082	        62	llist.c	FUNCTION_2	IF_1
0x4000066	          0x48890f	                    mov qword [rdi], rcx	        63	llist.c	FUNCTION_2	IF_1
0x4000069	    0x48c741080000	                  mov qword [rcx + 8], 0	        64	llist.c	FUNCTION_2	IF_1
0x4000071	          0x488b07	                    mov rax, qword [rdi]	        65	llist.c	FUNCTION_2	IF_1
0x4000074	    0x48c740100000	               mov qword [rax + 0x10], 0	        65	llist.c	FUNCTION_2	IF_1
0x400007c	        0x48894f08	                mov qword [rdi + 8], rcx	        66	llist.c	FUNCTION_2	IF_1
0x4000080	            0xeb43	                           jmp 0x40000c5	        66	llist.c	FUNCTION_2	IF_1
0x4000082	          0x4885f6	                           test rsi, rsi	        70	llist.c	FUNCTION_2	ELSE_1
0x4000085	            0x7417	                            je 0x400009e	        70	llist.c	FUNCTION_2	ELSE_1
0x4000087	        0x488b4610	            mov rax, qword [rsi + 0x10] 	        70	llist.c	FUNCTION_2	ELSE_1
0x400008b	        0x48894110	             mov qword [rcx + 0x10], rax	        70	llist.c	FUNCTION_2	ELSE_1
0x400008f	        0x48897108	                mov qword [rcx + 8], rsi	        71	llist.c	FUNCTION_2	ELSE_1
0x4000093	        0x488b4610	            mov rax, qword [rsi + 0x10] 	        76	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x4000097	          0x4885c0	                           test rax, rax	        76	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x400009a	            0x751d	                           jne 0x40000b9	        76	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x400009c	            0xeb21	                           jmp 0x40000bf	        76	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x400009e	          0x488b07	                    mov rax, qword [rdi]	        70	llist.c	FUNCTION_2	ELSE_1
0x40000a1	        0x48894110	             mov qword [rcx + 0x10], rax	        70	llist.c	FUNCTION_2	ELSE_1
0x40000a5	    0x48c741080000	                  mov qword [rcx + 8], 0	        71	llist.c	FUNCTION_2	ELSE_1
0x40000ad	          0x488b07	                    mov rax, qword [rdi]	        73	llist.c	FUNCTION_2	ELSE_1	IF_2
0x40000b0	        0x48894808	                mov qword [rax + 8], rcx	        73	llist.c	FUNCTION_2	ELSE_1	IF_2
0x40000b4	          0x48890f	                    mov qword [rdi], rcx	        74	llist.c	FUNCTION_2	ELSE_1	IF_2
0x40000b7	            0xeb0c	                           jmp 0x40000c5	        74	llist.c	FUNCTION_2	ELSE_1	IF_2
0x40000b9	        0x48894808	                mov qword [rax + 8], rcx	        77	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x40000bd	            0xeb0c	                           jmp 0x40000cb	        77	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x40000bf	        0x48894f08	                mov qword [rdi + 8], rcx	        80	llist.c	FUNCTION_2	ELSE_1	ELSE_3
0x40000c3	            0xeb06	                           jmp 0x40000cb	        80	llist.c	FUNCTION_2	ELSE_1	ELSE_3
0x40000c5	      0x4883471801	               add qword [rdi + 0x18], 1	        86	llist.c	FUNCTION_2
0x40000ca	              0xc3	                                     ret	        87	llist.c	FUNCTION_2
0x40000cb	        0x48894e10	             mov qword [rsi + 0x10], rcx	        83	llist.c	FUNCTION_2	ELSE_1	IF_4
0x40000cf	            0xebf4	                           jmp 0x40000c5	        83	llist.c	FUNCTION_2	ELSE_1	IF_4
Curl_llist_init	WHILE,0:SWITCH,0:DO,0:FOR,0:ELSE,0:functions,0:IF,0:CALL,0	5
0x4000040	    0x48c747180000	               mov qword [rdi + 0x18], 0	        39	llist.c	FUNCTION_1
0x4000048	        0x48897710	             mov qword [rdi + 0x10], rsi	        40	llist.c	FUNCTION_1
0x400004c	    0x48c707000000	                      mov qword [rdi], 0	        41	llist.c	FUNCTION_1
0x4000053	    0x48c747080000	                  mov qword [rdi + 8], 0	        42	llist.c	FUNCTION_1
0x400005b	              0xc3	                                     ret	        42	llist.c	FUNCTION_1
Curl_llist_count	WHILE,0:SWITCH,0:DO,0:FOR,0:ELSE,0:functions,0:IF,0:CALL,0	2
0x40001b3	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       145	llist.c	FUNCTION_5
0x40001b7	              0xc3	                                     ret	       146	llist.c	FUNCTION_5
