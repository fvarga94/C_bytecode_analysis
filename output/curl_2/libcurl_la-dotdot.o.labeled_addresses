Curl_dedotdotify	ELSE,7:WHILE,2:SWITCH,0:FOR,0:DO,2:functions,0:IF,14:CALL,17	213
0x4000040	            0x4157	                                push r15	        54	dotdot.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	        54	dotdot.c	FUNCTION_1
0x4000044	            0x4155	                                push r13	        54	dotdot.c	FUNCTION_1
0x4000046	            0x4154	                                push r12	        54	dotdot.c	FUNCTION_1
0x4000048	              0x55	                                push rbp	        54	dotdot.c	FUNCTION_1
0x4000049	              0x53	                                push rbx	        54	dotdot.c	FUNCTION_1
0x400004a	        0x4883ec08	                              sub rsp, 8	        54	dotdot.c	FUNCTION_1
0x400004e	          0x4989fc	                            mov r12, rdi	        54	dotdot.c	FUNCTION_1
0x4000051	      0xb800000000	                              mov eax, 0	        55	dotdot.c	FUNCTION_1	CALL_1
0x4000056	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        55	dotdot.c	FUNCTION_1	CALL_1
0x400005d	            0xf2ae	              repne scasb al, byte [rdi]	        55	dotdot.c	FUNCTION_1	CALL_1
0x400005f	          0x4889cf	                            mov rdi, rcx	        55	dotdot.c	FUNCTION_1	CALL_1
0x4000062	          0x48f7d7	                                 not rdi	        55	dotdot.c	FUNCTION_1	CALL_1
0x4000065	    0x488b05000000	            mov rax, qword [0x0400006c] 	        58	dotdot.c	FUNCTION_1	CALL_2
0x400006c	            0xff10	                        call qword [rax]	        58	dotdot.c	FUNCTION_1	CALL_2
0x400006e	          0x4885c0	                           test rax, rax	        62	dotdot.c	FUNCTION_1	IF_1
0x4000071	     0xf843a020000	                            je 0x40002b1	        62	dotdot.c	FUNCTION_1	IF_1
0x4000077	          0x4889c3	                            mov rbx, rax	        62	dotdot.c	FUNCTION_1	IF_1
0x400007a	          0x4c89e7	                            mov rdi, r12	        66	dotdot.c	FUNCTION_1	CALL_3
0x400007d	    0x488b05000000	            mov rax, qword [0x04000084] 	        66	dotdot.c	FUNCTION_1	CALL_3
0x4000084	            0xff10	                        call qword [rax]	        66	dotdot.c	FUNCTION_1	CALL_3
0x4000086	          0x4889c5	                            mov rbp, rax	        66	dotdot.c	FUNCTION_1	CALL_3
0x4000089	          0x4885c0	                           test rax, rax	        67	dotdot.c	FUNCTION_1	IF_2
0x400008c	            0x7516	                           jne 0x40000a4	        67	dotdot.c	FUNCTION_1	IF_2
0x400008e	          0x4889df	                            mov rdi, rbx	        68	dotdot.c	FUNCTION_1	IF_2	CALL_4
0x4000091	    0x488b05000000	            mov rax, qword [0x04000098] 	        68	dotdot.c	FUNCTION_1	IF_2	CALL_4
0x4000098	            0xff10	                        call qword [rax]	        68	dotdot.c	FUNCTION_1	IF_2	CALL_4
0x400009a	      0xb800000000	                              mov eax, 0	        69	dotdot.c	FUNCTION_1	IF_2
0x400009f	      0xe96f020000	                           jmp 0x4000313	        69	dotdot.c	FUNCTION_1	IF_2
0x40000a4	          0x803800	                       cmp byte [rax], 0	        74	dotdot.c	FUNCTION_1	IF_3
0x40000a7	            0x7514	                           jne 0x40000bd	        74	dotdot.c	FUNCTION_1	IF_3
0x40000a9	          0x4889df	                            mov rdi, rbx	        76	dotdot.c	FUNCTION_1	IF_3	CALL_5
0x40000ac	    0x488b05000000	            mov rax, qword [0x040000b3] 	        76	dotdot.c	FUNCTION_1	IF_3	CALL_5
0x40000b3	            0xff10	                        call qword [rax]	        76	dotdot.c	FUNCTION_1	IF_3	CALL_5
0x40000b5	          0x4889e8	                            mov rax, rbp	        77	dotdot.c	FUNCTION_1	IF_3
0x40000b8	      0xe956020000	                           jmp 0x4000313	        77	dotdot.c	FUNCTION_1	IF_3
0x40000bd	      0xbe3f000000	                           mov esi, 0x3f	        85	dotdot.c	FUNCTION_1	CALL_6
0x40000c2	          0x4889c7	                            mov rdi, rax	        85	dotdot.c	FUNCTION_1	CALL_6
0x40000c5	      0xe800000000	                          call 0x40000ca	        85	dotdot.c	FUNCTION_1	CALL_6
0x40000ca	          0x4885c0	                           test rax, rax	        86	dotdot.c	FUNCTION_1	IF_4
0x40000cd	            0x7403	                            je 0x40000d2	        86	dotdot.c	FUNCTION_1	IF_4
0x40000cf	          0xc60000	                       mov byte [rax], 0	        87	dotdot.c	FUNCTION_1	IF_4
0x40000d2	          0x4989da	                            mov r10, rbx	        54	dotdot.c	FUNCTION_1
0x40000d5	          0x4889ea	                            mov rdx, rbp	        54	dotdot.c	FUNCTION_1
0x40000d8	    0x4c8d05000000	                    lea r8, [0x040000df]	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x40000df	    0x4c8d0d000000	                    lea r9, [0x040000e6]	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x40000e6	    0x4c8d1d000000	                   lea r11, [0x040000ed]	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x40000ed	    0x4c8d2d000000	                   lea r13, [0x040000f4]	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40000f4	    0x41be2e000000	                          mov r14d, 0x2e	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x40000fa	      0xb902000000	                              mov ecx, 2	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x40000ff	          0x4c89c6	                             mov rsi, r8	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x4000102	          0x4889d7	                            mov rdi, rdx	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x4000105	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x4000107	        0x400f97c6	                                seta sil	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x400010b	           0xf92c1	                                 setb cl	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x400010e	          0x4038ce	                             cmp sil, cl	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x4000111	            0x7509	                           jne 0x400011c	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x4000113	        0x4883c202	                              add rdx, 2	        95	dotdot.c	FUNCTION_1	DO_1	IF_5
0x4000117	      0xe950010000	                           jmp 0x400026c	        95	dotdot.c	FUNCTION_1	DO_1	IF_5
0x400011c	      0xb903000000	                              mov ecx, 3	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x4000121	          0x4c89ce	                             mov rsi, r9	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x4000124	          0x4889d7	                            mov rdi, rdx	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x4000127	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x4000129	        0x400f97c6	                                seta sil	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x400012d	           0xf92c1	                                 setb cl	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x4000130	          0x4038ce	                             cmp sil, cl	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x4000133	            0x7509	                           jne 0x400013e	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x4000135	        0x4883c203	                              add rdx, 3	        99	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6
0x4000139	      0xe92e010000	                           jmp 0x400026c	        99	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6
0x400013e	      0xb903000000	                              mov ecx, 3	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000143	          0x4c89de	                            mov rsi, r11	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000146	          0x4889d7	                            mov rdi, rdx	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000149	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x400014b	        0x400f97c6	                                seta sil	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x400014f	           0xf92c1	                                 setb cl	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000152	          0x4038ce	                             cmp sil, cl	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000155	            0x7509	                           jne 0x4000160	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000157	        0x4883c202	                              add rdx, 2	       107	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7
0x400015b	      0xe90c010000	                           jmp 0x400026c	       107	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7
0x4000160	        0x440fb63a	                  movzx r15d, byte [rdx]	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x4000164	        0x4183ff2f	                          cmp r15d, 0x2f	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x4000168	     0xf856c010000	                           jne 0x40002da	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x400016e	        0x807a012e	                cmp byte [rdx + 1], 0x2e	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x4000172	     0xf8540010000	                           jne 0x40002b8	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x4000178	        0x807a0200	                   cmp byte [rdx + 2], 0	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x400017c	     0xf8536010000	                           jne 0x40002b8	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x4000182	        0xc642012f	                mov byte [rdx + 1], 0x2f	       111	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x4000186	        0x4883c201	                              add rdx, 1	       112	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x400018a	      0xe9dd000000	                           jmp 0x400026c	       112	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x400018f	        0x4883c203	                              add rdx, 3	       122	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x4000193	          0x4939da	                            cmp r10, rbx	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x4000196	            0x7628	                           jbe 0x40001c0	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x4000198	        0x498d4aff	                      lea rcx, [r10 - 1]	       126	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x400019c	      0x41807aff2f	                cmp byte [r10 - 1], 0x2f	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x40001a1	            0x750b	                           jne 0x40001ae	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x40001a3	            0xeb13	                           jmp 0x40001b8	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x40001a5	        0x4883e901	                              sub rcx, 1	       126	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001a9	          0x80392f	                    cmp byte [rcx], 0x2f	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x40001ac	            0x740f	                            je 0x40001bd	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x40001ae	          0x4839cb	                            cmp rbx, rcx	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001b1	            0x75f2	                           jne 0x40001a5	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001b3	          0x4989da	                            mov r10, rbx	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001b6	            0xeb08	                           jmp 0x40001c0	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001b8	          0x4989ca	                            mov r10, rcx	       126	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001bb	            0xeb03	                           jmp 0x40001c0	       126	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001bd	          0x4989ca	                            mov r10, rcx	       126	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001c0	        0x41c60200	                       mov byte [r10], 0	       130	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001c4	      0xe9a3000000	                           jmp 0x400026c	       130	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001c9	        0x807a012e	                cmp byte [rdx + 1], 0x2e	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001cd	            0x754f	                           jne 0x400021e	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001cf	        0x807a022e	                cmp byte [rdx + 2], 0x2e	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001d3	     0xf852c010000	                           jne 0x4000305	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001d9	        0x807a0300	                   cmp byte [rdx + 3], 0	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001dd	     0xf8522010000	                           jne 0x4000305	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001e3	        0xc642022f	                mov byte [rdx + 2], 0x2f	       133	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x40001e7	        0x4883c202	                              add rdx, 2	       134	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x40001eb	          0x4939da	                            cmp r10, rbx	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x40001ee	            0x7628	                           jbe 0x4000218	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x40001f0	        0x498d4aff	                      lea rcx, [r10 - 1]	       138	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x40001f4	      0x41807aff2f	                cmp byte [r10 - 1], 0x2f	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x40001f9	            0x750b	                           jne 0x4000206	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x40001fb	            0xeb13	                           jmp 0x4000210	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x40001fd	        0x4883e901	                              sub rcx, 1	       138	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000201	          0x80392f	                    cmp byte [rcx], 0x2f	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x4000204	            0x740f	                            je 0x4000215	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x4000206	          0x4839cb	                            cmp rbx, rcx	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000209	            0x75f2	                           jne 0x40001fd	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x400020b	          0x4989da	                            mov r10, rbx	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x400020e	            0xeb08	                           jmp 0x4000218	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000210	          0x4989ca	                            mov r10, rcx	       138	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000213	            0xeb03	                           jmp 0x4000218	       138	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000215	          0x4989ca	                            mov r10, rcx	       138	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000218	        0x41c60200	                       mov byte [r10], 0	       142	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x400021c	            0xeb4e	                           jmp 0x400026c	       142	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x400021e	        0x4183ff2e	                          cmp r15d, 0x2e	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000222	            0x7522	                           jne 0x4000246	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000224	         0xfb64a01	               movzx ecx, byte [rdx + 1]	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000228	            0x84c9	                             test cl, cl	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400022a	            0x740f	                            je 0x400023b	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400022c	          0x80f92e	                            cmp cl, 0x2e	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400022f	            0x7515	                           jne 0x4000246	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000231	         0xfb64a02	               movzx ecx, byte [rdx + 2]	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000235	            0xf7d9	                                 neg ecx	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000237	            0x85c9	                           test ecx, ecx	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000239	            0x750b	                           jne 0x4000246	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400023b	          0xc60200	                       mov byte [rdx], 0	       149	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x400023e	          0xc60300	                       mov byte [rbx], 0	       150	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x4000241	            0xeb29	                           jmp 0x400026c	       150	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x4000243	          0x4989ca	                            mov r10, rcx	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000246	        0x498d4a01	                      lea rcx, [r10 + 1]	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x400024a	        0x4883c201	                              add rdx, 1	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x400024e	         0xfb672ff	               movzx esi, byte [rdx - 1]	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000252	        0x408871ff	                 mov byte [rcx - 1], sil	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000256	           0xfb632	                   movzx esi, byte [rdx]	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000259	          0x4084f6	                           test sil, sil	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x400025c	            0x7406	                            je 0x4000264	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x400025e	        0x4080fe2f	                           cmp sil, 0x2f	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000262	            0x75df	                           jne 0x4000243	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000264	      0x41c6420100	                   mov byte [r10 + 1], 0	       163	dotdot.c	FUNCTION_1	DO_1	ELSE_7
0x4000269	          0x4989ca	                            mov r10, rcx	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x400026c	          0x803a00	                       cmp byte [rdx], 0	       166	dotdot.c	FUNCTION_1	WHILE_2
0x400026f	     0xf8585feffff	                           jne 0x40000fa	       166	dotdot.c	FUNCTION_1	WHILE_2
0x4000275	          0x4885c0	                           test rax, rax	       168	dotdot.c	FUNCTION_1	IF_14
0x4000278	            0x7426	                            je 0x40002a0	       168	dotdot.c	FUNCTION_1	IF_14
0x400027a	          0x4829e8	                            sub rax, rbp	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x400027d	        0x498d3404	                    lea rsi, [r12 + rax]	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x4000281	      0xb800000000	                              mov eax, 0	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x4000286	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x400028d	          0x4889f7	                            mov rdi, rsi	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x4000290	            0xf2ae	              repne scasb al, byte [rdi]	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x4000292	          0x4889ca	                            mov rdx, rcx	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x4000295	          0x48f7d2	                                 not rdx	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x4000298	          0x4c89d7	                            mov rdi, r10	        53	string3.h	FUNCTION_2	CALL_3
0x400029b	      0xe800000000	                          call 0x40002a0	        53	string3.h	FUNCTION_2	CALL_3
0x40002a0	          0x4889ef	                            mov rdi, rbp	       178	dotdot.c	FUNCTION_1	CALL_17
0x40002a3	    0x488b05000000	            mov rax, qword [0x040002aa] 	       178	dotdot.c	FUNCTION_1	CALL_17
0x40002aa	            0xff10	                        call qword [rax]	       178	dotdot.c	FUNCTION_1	CALL_17
0x40002ac	          0x4889d8	                            mov rax, rbx	       179	dotdot.c	FUNCTION_1
0x40002af	            0xeb62	                           jmp 0x4000313	       179	dotdot.c	FUNCTION_1
0x40002b1	      0xb800000000	                              mov eax, 0	        63	dotdot.c	FUNCTION_1	IF_1
0x40002b6	            0xeb5b	                           jmp 0x4000313	        63	dotdot.c	FUNCTION_1	IF_1
0x40002b8	      0xb904000000	                              mov ecx, 4	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002bd	          0x4c89ee	                            mov rsi, r13	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002c0	          0x4889d7	                            mov rdi, rdx	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002c3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002c5	        0x400f97c6	                                seta sil	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002c9	           0xf92c1	                                 setb cl	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002cc	          0x4038ce	                             cmp sil, cl	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002cf	     0xf84bafeffff	                            je 0x400018f	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002d5	      0xe9effeffff	                           jmp 0x40001c9	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002da	      0xb904000000	                              mov ecx, 4	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002df	          0x4c89ee	                            mov rsi, r13	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002e2	          0x4889d7	                            mov rdi, rdx	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002e5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002e7	        0x400f97c6	                                seta sil	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002eb	           0xf92c1	                                 setb cl	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002ee	          0x4038ce	                             cmp sil, cl	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002f1	     0xf8498feffff	                            je 0x400018f	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002f7	      0xe922ffffff	                           jmp 0x400021e	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002fc	         0xfb64a01	               movzx ecx, byte [rdx + 1]	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000300	      0xe927ffffff	                           jmp 0x400022c	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000305	          0x4489f1	                           mov ecx, r14d	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000308	          0x4429f9	                           sub ecx, r15d	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400030b	     0xf8526ffffff	                           jne 0x4000237	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000311	            0xebe9	                           jmp 0x40002fc	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000313	        0x4883c408	                              add rsp, 8	       180	dotdot.c	FUNCTION_1
0x4000317	              0x5b	                                 pop rbx	       180	dotdot.c	FUNCTION_1
0x4000318	              0x5d	                                 pop rbp	       180	dotdot.c	FUNCTION_1
0x4000319	            0x415c	                                 pop r12	       180	dotdot.c	FUNCTION_1
0x400031b	            0x415d	                                 pop r13	       180	dotdot.c	FUNCTION_1
0x400031d	            0x415e	                                 pop r14	       180	dotdot.c	FUNCTION_1
0x400031f	            0x415f	                                 pop r15	       180	dotdot.c	FUNCTION_1
0x4000321	              0xc3	                                     ret	       180	dotdot.c	FUNCTION_1
