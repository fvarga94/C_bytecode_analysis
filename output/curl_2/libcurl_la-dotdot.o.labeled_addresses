Curl_dedotdotify	SWITCH,0:DO,2:WHILE,2:functions,0:IF,14:FOR,0:ELSE,7:CALL,17	220
0x4000112	              0x55	                                push rbp	        54	dotdot.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        54	dotdot.c	FUNCTION_1
0x4000116	        0x4883ec60	                           sub rsp, 0x60	        54	dotdot.c	FUNCTION_1
0x400011a	        0x48897da8	             mov qword [rbp - 0x58], rdi	        54	dotdot.c	FUNCTION_1
0x400011e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        55	dotdot.c	FUNCTION_1	CALL_1
0x4000122	          0x4889c7	                            mov rdi, rax	        55	dotdot.c	FUNCTION_1	CALL_1
0x4000125	      0xe800000000	                          call 0x400012a	        55	dotdot.c	FUNCTION_1	CALL_1
0x400012a	        0x488945d0	             mov qword [rbp - 0x30], rax	        55	dotdot.c	FUNCTION_1	CALL_1
0x400012e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        57	dotdot.c	FUNCTION_1
0x4000132	        0x488945c0	             mov qword [rbp - 0x40], rax	        57	dotdot.c	FUNCTION_1
0x4000136	    0x488b05000000	            mov rax, qword [0x0400013d] 	        58	dotdot.c	FUNCTION_1	CALL_2
0x400013d	          0x488b00	                    mov rax, qword [rax]	        58	dotdot.c	FUNCTION_1	CALL_2
0x4000140	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        58	dotdot.c	FUNCTION_1	CALL_2
0x4000144	        0x4883c201	                              add rdx, 1	        58	dotdot.c	FUNCTION_1	CALL_2
0x4000148	          0x4889d7	                            mov rdi, rdx	        58	dotdot.c	FUNCTION_1	CALL_2
0x400014b	            0xffd0	                                call rax	        58	dotdot.c	FUNCTION_1	CALL_2
0x400014d	        0x488945d8	             mov qword [rbp - 0x28], rax	        58	dotdot.c	FUNCTION_1	CALL_2
0x4000151	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        62	dotdot.c	FUNCTION_1	IF_1
0x4000156	            0x750a	                           jne 0x4000162	        62	dotdot.c	FUNCTION_1	IF_1
0x4000158	      0xb800000000	                              mov eax, 0	        63	dotdot.c	FUNCTION_1	IF_1
0x400015d	      0xe9e1020000	                           jmp 0x4000443	        63	dotdot.c	FUNCTION_1	IF_1
0x4000162	    0x488b05000000	            mov rax, qword [0x04000169] 	        66	dotdot.c	FUNCTION_1	CALL_3
0x4000169	          0x488b00	                    mov rax, qword [rax]	        66	dotdot.c	FUNCTION_1	CALL_3
0x400016c	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	        66	dotdot.c	FUNCTION_1	CALL_3
0x4000170	          0x4889d7	                            mov rdi, rdx	        66	dotdot.c	FUNCTION_1	CALL_3
0x4000173	            0xffd0	                                call rax	        66	dotdot.c	FUNCTION_1	CALL_3
0x4000175	        0x488945b8	             mov qword [rbp - 0x48], rax	        66	dotdot.c	FUNCTION_1	CALL_3
0x4000179	      0x48837db800	               cmp qword [rbp - 0x48], 0	        67	dotdot.c	FUNCTION_1	IF_2
0x400017e	            0x751d	                           jne 0x400019d	        67	dotdot.c	FUNCTION_1	IF_2
0x4000180	    0x488b05000000	            mov rax, qword [0x04000187] 	        68	dotdot.c	FUNCTION_1	IF_2	CALL_4
0x4000187	          0x488b00	                    mov rax, qword [rax]	        68	dotdot.c	FUNCTION_1	IF_2	CALL_4
0x400018a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        68	dotdot.c	FUNCTION_1	IF_2	CALL_4
0x400018e	          0x4889d7	                            mov rdi, rdx	        68	dotdot.c	FUNCTION_1	IF_2	CALL_4
0x4000191	            0xffd0	                                call rax	        68	dotdot.c	FUNCTION_1	IF_2	CALL_4
0x4000193	      0xb800000000	                              mov eax, 0	        69	dotdot.c	FUNCTION_1	IF_2
0x4000198	      0xe9a6020000	                           jmp 0x4000443	        69	dotdot.c	FUNCTION_1	IF_2
0x400019d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        71	dotdot.c	FUNCTION_1
0x40001a1	        0x488945e0	             mov qword [rbp - 0x20], rax	        71	dotdot.c	FUNCTION_1
0x40001a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        72	dotdot.c	FUNCTION_1
0x40001a9	        0x488945c8	             mov qword [rbp - 0x38], rax	        72	dotdot.c	FUNCTION_1
0x40001ad	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        74	dotdot.c	FUNCTION_1	IF_3
0x40001b1	           0xfb600	                   movzx eax, byte [rax]	        74	dotdot.c	FUNCTION_1	IF_3
0x40001b4	            0x84c0	                             test al, al	        74	dotdot.c	FUNCTION_1	IF_3
0x40001b6	            0x751c	                           jne 0x40001d4	        74	dotdot.c	FUNCTION_1	IF_3
0x40001b8	    0x488b05000000	            mov rax, qword [0x040001bf] 	        76	dotdot.c	FUNCTION_1	IF_3	CALL_5
0x40001bf	          0x488b00	                    mov rax, qword [rax]	        76	dotdot.c	FUNCTION_1	IF_3	CALL_5
0x40001c2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        76	dotdot.c	FUNCTION_1	IF_3	CALL_5
0x40001c6	          0x4889d7	                            mov rdi, rdx	        76	dotdot.c	FUNCTION_1	IF_3	CALL_5
0x40001c9	            0xffd0	                                call rax	        76	dotdot.c	FUNCTION_1	IF_3	CALL_5
0x40001cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        77	dotdot.c	FUNCTION_1	IF_3
0x40001cf	      0xe96f020000	                           jmp 0x4000443	        77	dotdot.c	FUNCTION_1	IF_3
0x40001d4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        85	dotdot.c	FUNCTION_1	CALL_6
0x40001d8	      0xbe3f000000	                           mov esi, 0x3f	        85	dotdot.c	FUNCTION_1	CALL_6
0x40001dd	          0x4889c7	                            mov rdi, rax	        85	dotdot.c	FUNCTION_1	CALL_6
0x40001e0	      0xe800000000	                          call 0x40001e5	        85	dotdot.c	FUNCTION_1	CALL_6
0x40001e5	        0x488945e8	             mov qword [rbp - 0x18], rax	        85	dotdot.c	FUNCTION_1	CALL_6
0x40001e9	      0x48837de800	               cmp qword [rbp - 0x18], 0	        86	dotdot.c	FUNCTION_1	IF_4
0x40001ee	            0x7407	                            je 0x40001f7	        86	dotdot.c	FUNCTION_1	IF_4
0x40001f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        87	dotdot.c	FUNCTION_1	IF_4
0x40001f4	          0xc60000	                       mov byte [rax], 0	        87	dotdot.c	FUNCTION_1	IF_4
0x40001f7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x40001fb	      0xba02000000	                              mov edx, 2	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x4000200	          0x4889c6	                            mov rsi, rax	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x4000203	    0x488d3d000000	                   lea rdi, [0x0400020a]	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x400020a	      0xe800000000	                          call 0x400020f	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x400020f	            0x85c0	                           test eax, eax	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x4000211	            0x750f	                           jne 0x4000222	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x4000213	      0x488345b802	               add qword [rbp - 0x48], 2	        95	dotdot.c	FUNCTION_1	DO_1	IF_5
0x4000218	      0x48836dc002	               sub qword [rbp - 0x40], 2	        96	dotdot.c	FUNCTION_1	DO_1	IF_5
0x400021d	      0xe9a9010000	                           jmp 0x40003cb	        96	dotdot.c	FUNCTION_1	DO_1	IF_5
0x4000222	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x4000226	      0xba03000000	                              mov edx, 3	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x400022b	          0x4889c6	                            mov rsi, rax	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x400022e	    0x488d3d000000	                   lea rdi, [0x04000235]	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x4000235	      0xe800000000	                          call 0x400023a	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x400023a	            0x85c0	                           test eax, eax	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x400023c	            0x750f	                           jne 0x400024d	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x400023e	      0x488345b803	               add qword [rbp - 0x48], 3	        99	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6
0x4000243	      0x48836dc003	               sub qword [rbp - 0x40], 3	       100	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6
0x4000248	      0xe97e010000	                           jmp 0x40003cb	       100	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6
0x400024d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000251	      0xba03000000	                              mov edx, 3	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000256	          0x4889c6	                            mov rsi, rax	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000259	    0x488d3d000000	                   lea rdi, [0x04000260]	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000260	      0xe800000000	                          call 0x4000265	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000265	            0x85c0	                           test eax, eax	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000267	            0x750f	                           jne 0x4000278	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000269	      0x488345b802	               add qword [rbp - 0x48], 2	       107	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7
0x400026e	      0x48836dc002	               sub qword [rbp - 0x40], 2	       108	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7
0x4000273	      0xe953010000	                           jmp 0x40003cb	       108	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7
0x4000278	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x400027c	          0x4889c6	                            mov rsi, rax	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x400027f	    0x488d3d000000	                   lea rdi, [0x04000286]	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x4000286	      0xe800000000	                          call 0x400028b	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x400028b	            0x85c0	                           test eax, eax	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x400028d	            0x751a	                           jne 0x40002a9	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x400028f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       111	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x4000293	        0x4883c001	                              add rax, 1	       111	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x4000297	          0xc6002f	                    mov byte [rax], 0x2f	       111	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x400029a	      0x488345b801	               add qword [rbp - 0x48], 1	       112	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x400029f	      0x48836dc001	               sub qword [rbp - 0x40], 1	       113	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x40002a4	      0xe922010000	                           jmp 0x40003cb	       113	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x40002a9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002ad	      0xba04000000	                              mov edx, 4	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002b2	          0x4889c6	                            mov rsi, rax	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002b5	    0x488d3d000000	                   lea rdi, [0x040002bc]	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002bc	      0xe800000000	                          call 0x40002c1	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002c1	            0x85c0	                           test eax, eax	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002c3	            0x7535	                           jne 0x40002fa	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40002c5	      0x488345b803	               add qword [rbp - 0x48], 3	       122	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40002ca	      0x48836dc003	               sub qword [rbp - 0x40], 3	       123	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40002cf	            0xeb10	                           jmp 0x40002e1	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40002d1	      0x48836dc801	               sub qword [rbp - 0x38], 1	       126	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40002d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x40002da	           0xfb600	                   movzx eax, byte [rax]	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x40002dd	            0x3c2f	                            cmp al, 0x2f	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x40002df	            0x740c	                            je 0x40002ed	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x40002e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40002e5	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40002e9	            0x77e6	                            ja 0x40002d1	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40002eb	            0xeb01	                           jmp 0x40002ee	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40002ed	              0x90	                                     nop	       128	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x40002ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       130	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40002f2	          0xc60000	                       mov byte [rax], 0	       130	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40002f5	      0xe9d1000000	                           jmp 0x40003cb	       130	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40002fa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40002fe	          0x4889c6	                            mov rsi, rax	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x4000301	    0x488d3d000000	                   lea rdi, [0x04000308]	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x4000308	      0xe800000000	                          call 0x400030d	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x400030d	            0x85c0	                           test eax, eax	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x400030f	            0x753d	                           jne 0x400034e	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x4000311	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       133	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x4000315	        0x4883c002	                              add rax, 2	       133	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x4000319	          0xc6002f	                    mov byte [rax], 0x2f	       133	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x400031c	      0x488345b802	               add qword [rbp - 0x48], 2	       134	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x4000321	      0x48836dc002	               sub qword [rbp - 0x40], 2	       135	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x4000326	            0xeb10	                           jmp 0x4000338	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000328	      0x48836dc801	               sub qword [rbp - 0x38], 1	       138	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x400032d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x4000331	           0xfb600	                   movzx eax, byte [rax]	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x4000334	            0x3c2f	                            cmp al, 0x2f	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x4000336	            0x740c	                            je 0x4000344	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x4000338	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x400033c	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000340	            0x77e6	                            ja 0x4000328	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000342	            0xeb01	                           jmp 0x4000345	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000344	              0x90	                                     nop	       140	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x4000345	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       142	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x4000349	          0xc60000	                       mov byte [rax], 0	       142	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x400034c	            0xeb7d	                           jmp 0x40003cb	       142	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x400034e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000352	          0x4889c6	                            mov rsi, rax	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000355	    0x488d3d000000	                   lea rdi, [0x0400035c]	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400035c	      0xe800000000	                          call 0x4000361	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000361	            0x85c0	                           test eax, eax	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000363	            0x7417	                            je 0x400037c	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000365	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000369	          0x4889c6	                            mov rsi, rax	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400036c	    0x488d3d000000	                   lea rdi, [0x04000373]	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000373	      0xe800000000	                          call 0x4000378	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000378	            0x85c0	                           test eax, eax	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400037a	            0x7510	                           jne 0x400038c	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400037c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       149	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x4000380	          0xc60000	                       mov byte [rax], 0	       149	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x4000383	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       150	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x4000387	          0xc60000	                       mov byte [rax], 0	       150	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x400038a	            0xeb3f	                           jmp 0x40003cb	       150	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x400038c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000390	        0x488d5001	                      lea rdx, [rax + 1]	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000394	        0x488955c8	             mov qword [rbp - 0x38], rdx	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000398	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x400039c	        0x488d4a01	                      lea rcx, [rdx + 1]	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003a0	        0x48894db8	             mov qword [rbp - 0x48], rcx	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003a4	           0xfb612	                   movzx edx, byte [rdx]	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003a7	            0x8810	                      mov byte [rax], dl	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003a9	      0x48836dc001	               sub qword [rbp - 0x40], 1	       161	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003ae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003b2	           0xfb600	                   movzx eax, byte [rax]	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003b5	            0x84c0	                             test al, al	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003b7	            0x740b	                            je 0x40003c4	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003b9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003bd	           0xfb600	                   movzx eax, byte [rax]	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003c0	            0x3c2f	                            cmp al, 0x2f	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003c2	            0x75c8	                           jne 0x400038c	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x40003c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       163	dotdot.c	FUNCTION_1	DO_1	ELSE_7
0x40003c8	          0xc60000	                       mov byte [rax], 0	       163	dotdot.c	FUNCTION_1	DO_1	ELSE_7
0x40003cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       166	dotdot.c	FUNCTION_1	WHILE_2
0x40003cf	           0xfb600	                   movzx eax, byte [rax]	       166	dotdot.c	FUNCTION_1	WHILE_2
0x40003d2	            0x84c0	                             test al, al	       166	dotdot.c	FUNCTION_1	WHILE_2
0x40003d4	     0xf851dfeffff	                           jne 0x40001f7	       166	dotdot.c	FUNCTION_1	WHILE_2
0x40003da	      0x48837de800	               cmp qword [rbp - 0x18], 0	       168	dotdot.c	FUNCTION_1	IF_14
0x40003df	            0x744b	                            je 0x400042c	       168	dotdot.c	FUNCTION_1	IF_14
0x40003e1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       173	dotdot.c	FUNCTION_1	IF_14
0x40003e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       173	dotdot.c	FUNCTION_1	IF_14
0x40003e9	          0x4829c2	                            sub rdx, rax	       173	dotdot.c	FUNCTION_1	IF_14
0x40003ec	          0x4889d0	                            mov rax, rdx	       173	dotdot.c	FUNCTION_1	IF_14
0x40003ef	        0x488945f0	             mov qword [rbp - 0x10], rax	       173	dotdot.c	FUNCTION_1	IF_14
0x40003f3	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x40003f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x40003fb	          0x4801d0	                            add rax, rdx	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x40003fe	          0x4889c7	                            mov rdi, rax	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x4000401	      0xe800000000	                          call 0x4000406	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x4000406	        0x488945f8	                mov qword [rbp - 8], rax	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x400040a	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	dotdot.c	FUNCTION_1	IF_14	CALL_16
0x400040e	        0x488d5001	                      lea rdx, [rax + 1]	       175	dotdot.c	FUNCTION_1	IF_14	CALL_16
0x4000412	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       175	dotdot.c	FUNCTION_1	IF_14	CALL_16
0x4000416	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       175	dotdot.c	FUNCTION_1	IF_14	CALL_16
0x400041a	          0x4801c1	                            add rcx, rax	       175	dotdot.c	FUNCTION_1	IF_14	CALL_16
0x400041d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       175	dotdot.c	FUNCTION_1	IF_14	CALL_16
0x4000421	          0x4889ce	                            mov rsi, rcx	       175	dotdot.c	FUNCTION_1	IF_14	CALL_16
0x4000424	          0x4889c7	                            mov rdi, rax	       175	dotdot.c	FUNCTION_1	IF_14	CALL_16
0x4000427	      0xe800000000	                          call 0x400042c	       175	dotdot.c	FUNCTION_1	IF_14	CALL_16
0x400042c	    0x488b05000000	            mov rax, qword [0x04000433] 	       178	dotdot.c	FUNCTION_1	CALL_17
0x4000433	          0x488b00	                    mov rax, qword [rax]	       178	dotdot.c	FUNCTION_1	CALL_17
0x4000436	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       178	dotdot.c	FUNCTION_1	CALL_17
0x400043a	          0x4889d7	                            mov rdi, rdx	       178	dotdot.c	FUNCTION_1	CALL_17
0x400043d	            0xffd0	                                call rax	       178	dotdot.c	FUNCTION_1	CALL_17
0x400043f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       179	dotdot.c	FUNCTION_1
0x4000443	              0xc9	                                   leave	       180	dotdot.c	FUNCTION_1
0x4000444	              0xc3	                                     ret	       180	dotdot.c	FUNCTION_1
