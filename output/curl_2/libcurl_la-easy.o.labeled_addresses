curl_easy_init	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,3:CALL,6:DO,0	25
0x40002ee	        0x4883ec18	                           sub rsp, 0x18	       355	easy.c	FUNCTION_7
0x40002f2	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	easy.c	FUNCTION_7
0x40002fb	      0x4889442408	                mov qword [rsp + 8], rax	       355	easy.c	FUNCTION_7
0x4000300	            0x31c0	                            xor eax, eax	       355	easy.c	FUNCTION_7
0x4000302	    0x833d00000000	               cmp dword [0x04000309], 0	       360	easy.c	FUNCTION_7	IF_1
0x4000309	            0x750e	                           jne 0x4000319	       360	easy.c	FUNCTION_7	IF_1
0x400030b	      0xbf03000000	                              mov edi, 3	       361	easy.c	FUNCTION_7	IF_1	CALL_1
0x4000310	      0xe800000000	                          call 0x4000315	       361	easy.c	FUNCTION_7	IF_1	CALL_1
0x4000315	            0x85c0	                           test eax, eax	       362	easy.c	FUNCTION_7	IF_1	IF_2
0x4000317	            0x7512	                           jne 0x400032b	       362	easy.c	FUNCTION_7	IF_1	IF_2
0x4000319	          0x4889e7	                            mov rdi, rsp	       370	easy.c	FUNCTION_7	CALL_4
0x400031c	      0xe800000000	                          call 0x4000321	       370	easy.c	FUNCTION_7	CALL_4
0x4000321	            0x85c0	                           test eax, eax	       371	easy.c	FUNCTION_7	IF_3
0x4000323	            0x750d	                           jne 0x4000332	       371	easy.c	FUNCTION_7	IF_3
0x4000325	        0x488b0424	                    mov rax, qword [rsp]	       376	easy.c	FUNCTION_7
0x4000329	            0xeb0c	                           jmp 0x4000337	       376	easy.c	FUNCTION_7
0x400032b	      0xb800000000	                              mov eax, 0	       365	easy.c	FUNCTION_7	IF_1	IF_2
0x4000330	            0xeb05	                           jmp 0x4000337	       365	easy.c	FUNCTION_7	IF_1	IF_2
0x4000332	      0xb800000000	                              mov eax, 0	       373	easy.c	FUNCTION_7	IF_3
0x4000337	      0x488b542408	                mov rdx, qword [rsp + 8]	       377	easy.c	FUNCTION_7
0x400033c	    0x644833142528	                xor rdx, qword fs:[0x28]	       377	easy.c	FUNCTION_7
0x4000345	            0x7405	                            je 0x400034c	       377	easy.c	FUNCTION_7
0x4000347	      0xe800000000	                          call 0x400034c	       377	easy.c	FUNCTION_7
0x400034c	        0x4883c418	                           add rsp, 0x18	       377	easy.c	FUNCTION_7
0x4000350	              0xc3	                                     ret	       377	easy.c	FUNCTION_7
curl_easy_send	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,4:CALL,3:DO,0	53
0x4000d31	            0x4155	                                push r13	      1177	easy.c	FUNCTION_26
0x4000d33	            0x4154	                                push r12	      1177	easy.c	FUNCTION_26
0x4000d35	              0x55	                                push rbp	      1177	easy.c	FUNCTION_26
0x4000d36	              0x53	                                push rbx	      1177	easy.c	FUNCTION_26
0x4000d37	        0x4883ec28	                           sub rsp, 0x28	      1177	easy.c	FUNCTION_26
0x4000d3b	          0x4889fb	                            mov rbx, rdi	      1177	easy.c	FUNCTION_26
0x4000d3e	          0x4989f4	                            mov r12, rsi	      1177	easy.c	FUNCTION_26
0x4000d41	          0x4989d5	                            mov r13, rdx	      1177	easy.c	FUNCTION_26
0x4000d44	          0x4889cd	                            mov rbp, rcx	      1177	easy.c	FUNCTION_26
0x4000d47	    0x64488b042528	                mov rax, qword fs:[0x28]	      1177	easy.c	FUNCTION_26
0x4000d50	      0x4889442418	             mov qword [rsp + 0x18], rax	      1177	easy.c	FUNCTION_26
0x4000d55	            0x31c0	                            xor eax, eax	      1177	easy.c	FUNCTION_26
0x4000d57	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1181	easy.c	FUNCTION_26
0x4000d60	      0xe800000000	                          call 0x4000d65	      1183	easy.c	FUNCTION_26	IF_1	CALL_1
0x4000d65	      0xba5d000000	                           mov edx, 0x5d	      1184	easy.c	FUNCTION_26	IF_1
0x4000d6a	            0x84c0	                             test al, al	      1183	easy.c	FUNCTION_26	IF_1	CALL_1
0x4000d6c	            0x755d	                           jne 0x4000dcb	      1183	easy.c	FUNCTION_26	IF_1	CALL_1
0x4000d6e	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1186	easy.c	FUNCTION_26	CALL_2
0x4000d73	      0x488d742404	                      lea rsi, [rsp + 4]	      1186	easy.c	FUNCTION_26	CALL_2
0x4000d78	          0x4889df	                            mov rdi, rbx	      1186	easy.c	FUNCTION_26	CALL_2
0x4000d7b	      0xe838f4ffff	                call sym.easy_connection	      1186	easy.c	FUNCTION_26	CALL_2
0x4000d80	            0x89c2	                            mov edx, eax	      1188	easy.c	FUNCTION_26	IF_2
0x4000d82	            0x85c0	                           test eax, eax	      1187	easy.c	FUNCTION_26	IF_2
0x4000d84	            0x7545	                           jne 0x4000dcb	      1187	easy.c	FUNCTION_26	IF_2
0x4000d86	    0x48c745000000	                      mov qword [rbp], 0	      1190	easy.c	FUNCTION_26
0x4000d8e	      0x4c8d442408	                       lea r8, [rsp + 8]	      1191	easy.c	FUNCTION_26	CALL_3
0x4000d93	          0x4c89e9	                            mov rcx, r13	      1191	easy.c	FUNCTION_26	CALL_3
0x4000d96	          0x4c89e2	                            mov rdx, r12	      1191	easy.c	FUNCTION_26	CALL_3
0x4000d99	        0x8b742404	                mov esi, dword [rsp + 4]	      1191	easy.c	FUNCTION_26	CALL_3
0x4000d9d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1191	easy.c	FUNCTION_26	CALL_3
0x4000da2	      0xe800000000	                          call 0x4000da7	      1191	easy.c	FUNCTION_26	CALL_3
0x4000da7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1193	easy.c	FUNCTION_26	IF_3
0x4000dac	      0xba37000000	                           mov edx, 0x37	      1194	easy.c	FUNCTION_26	IF_3
0x4000db1	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      1193	easy.c	FUNCTION_26	IF_3
0x4000db5	            0x7414	                            je 0x4000dcb	      1193	easy.c	FUNCTION_26	IF_3
0x4000db7	          0x4885c9	                           test rcx, rcx	      1197	easy.c	FUNCTION_26	IF_4
0x4000dba	            0x7509	                           jne 0x4000dc5	      1197	easy.c	FUNCTION_26	IF_4
0x4000dbc	      0xba51000000	                           mov edx, 0x51	      1198	easy.c	FUNCTION_26	IF_4
0x4000dc1	            0x85c0	                           test eax, eax	      1197	easy.c	FUNCTION_26	IF_4
0x4000dc3	            0x7406	                            je 0x4000dcb	      1197	easy.c	FUNCTION_26	IF_4
0x4000dc5	        0x48894d00	                    mov qword [rbp], rcx	      1200	easy.c	FUNCTION_26
0x4000dc9	            0x89c2	                            mov edx, eax	      1202	easy.c	FUNCTION_26
0x4000dcb	            0x89d0	                            mov eax, edx	      1203	easy.c	FUNCTION_26
0x4000dcd	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1203	easy.c	FUNCTION_26
0x4000dd2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1203	easy.c	FUNCTION_26
0x4000ddb	            0x7405	                            je 0x4000de2	      1203	easy.c	FUNCTION_26
0x4000ddd	      0xe800000000	                          call 0x4000de2	      1203	easy.c	FUNCTION_26
0x4000de2	        0x4883c428	                           add rsp, 0x28	      1203	easy.c	FUNCTION_26
0x4000de6	              0x5b	                                 pop rbx	      1203	easy.c	FUNCTION_26
0x4000de7	              0x5d	                                 pop rbp	      1203	easy.c	FUNCTION_26
0x4000de8	            0x415c	                                 pop r12	      1203	easy.c	FUNCTION_26
0x4000dea	            0x415d	                                 pop r13	      1203	easy.c	FUNCTION_26
0x4000dec	              0xc3	                                     ret	      1203	easy.c	FUNCTION_26
curl_global_init_mem	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,2:CALL,1:DO,0	34
0x4000235	          0x4885f6	                           test rsi, rsi	       295	easy.c	FUNCTION_5	IF_1
0x4000238	            0x7468	                            je 0x40002a2	       295	easy.c	FUNCTION_5	IF_1
0x400023a	          0x4885d2	                           test rdx, rdx	       295	easy.c	FUNCTION_5	IF_1
0x400023d	            0x7463	                            je 0x40002a2	       295	easy.c	FUNCTION_5	IF_1
0x400023f	          0x4885c9	                           test rcx, rcx	       295	easy.c	FUNCTION_5	IF_1
0x4000242	        0x410f94c2	                               sete r10b	       295	easy.c	FUNCTION_5	IF_1
0x4000246	          0x4d85c0	                             test r8, r8	       295	easy.c	FUNCTION_5	IF_1
0x4000249	           0xf94c0	                                 sete al	       295	easy.c	FUNCTION_5	IF_1
0x400024c	          0x4108c2	                             or r10b, al	       295	easy.c	FUNCTION_5	IF_1
0x400024f	            0x7557	                           jne 0x40002a8	       295	easy.c	FUNCTION_5	IF_1
0x4000251	          0x4d85c9	                             test r9, r9	       295	easy.c	FUNCTION_5	IF_1
0x4000254	            0x7452	                            je 0x40002a8	       295	easy.c	FUNCTION_5	IF_1
0x4000256	    0x8b0500000000	            mov eax, dword [0x0400025c] 	       298	easy.c	FUNCTION_5	IF_2
0x400025c	            0x85c0	                           test eax, eax	       298	easy.c	FUNCTION_5	IF_2
0x400025e	            0x740f	                            je 0x400026f	       298	easy.c	FUNCTION_5	IF_2
0x4000260	          0x83c001	                              add eax, 1	       302	easy.c	FUNCTION_5	IF_2
0x4000263	    0x890500000000	            mov dword [0x04000269], eax 	       302	easy.c	FUNCTION_5	IF_2
0x4000269	      0xb800000000	                              mov eax, 0	       303	easy.c	FUNCTION_5	IF_2
0x400026e	              0xc3	                                     ret	       303	easy.c	FUNCTION_5	IF_2
0x400026f	        0x4883ec08	                              sub rsp, 8	       293	easy.c	FUNCTION_5
0x4000273	    0x488935000000	            mov qword [0x0400027a], rsi 	       308	easy.c	FUNCTION_5
0x400027a	    0x488915000000	            mov qword [0x04000281], rdx 	       309	easy.c	FUNCTION_5
0x4000281	    0x4c8905000000	              mov qword [0x04000288], r8	       310	easy.c	FUNCTION_5
0x4000288	    0x48890d000000	            mov qword [0x0400028f], rcx 	       311	easy.c	FUNCTION_5
0x400028f	    0x4c890d000000	              mov qword [0x04000296], r9	       312	easy.c	FUNCTION_5
0x4000296	      0xbe00000000	                              mov esi, 0	       315	easy.c	FUNCTION_5	CALL_1
0x400029b	      0xe8a0fdffff	                    call sym.global_init	       315	easy.c	FUNCTION_5	CALL_1
0x40002a0	            0xeb0c	                           jmp 0x40002ae	       315	easy.c	FUNCTION_5	CALL_1
0x40002a2	      0xb802000000	                              mov eax, 2	       296	easy.c	FUNCTION_5	IF_1
0x40002a7	              0xc3	                                     ret	       296	easy.c	FUNCTION_5	IF_1
0x40002a8	      0xb802000000	                              mov eax, 2	       296	easy.c	FUNCTION_5	IF_1
0x40002ad	              0xc3	                                     ret	       296	easy.c	FUNCTION_5	IF_1
0x40002ae	        0x4883c408	                              add rsp, 8	       316	easy.c	FUNCTION_5
0x40002b2	              0xc3	                                     ret	       316	easy.c	FUNCTION_5
curl_easy_getinfo	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,0:CALL,4:DO,0	18
0x4000643	        0x4883ec58	                           sub rsp, 0x58	       846	easy.c	FUNCTION_19
0x4000647	      0x4889542430	             mov qword [rsp + 0x30], rdx	       846	easy.c	FUNCTION_19
0x400064c	    0x64488b042528	                mov rax, qword fs:[0x28]	       846	easy.c	FUNCTION_19
0x4000655	      0x4889442418	             mov qword [rsp + 0x18], rax	       846	easy.c	FUNCTION_19
0x400065a	            0x31c0	                            xor eax, eax	       846	easy.c	FUNCTION_19
0x400065c	    0xc70424100000	                   mov dword [rsp], 0x10	       851	easy.c	FUNCTION_19	CALL_1
0x4000663	      0x488d442460	                   lea rax, [rsp + 0x60]	       851	easy.c	FUNCTION_19	CALL_1
0x4000668	      0x4889442408	                mov qword [rsp + 8], rax	       851	easy.c	FUNCTION_19	CALL_1
0x400066d	      0x488d442420	                   lea rax, [rsp + 0x20]	       851	easy.c	FUNCTION_19	CALL_1
0x4000672	      0x4889442410	             mov qword [rsp + 0x10], rax	       851	easy.c	FUNCTION_19	CALL_1
0x4000677	      0xb800000000	                              mov eax, 0	       854	easy.c	FUNCTION_19	CALL_3
0x400067c	      0xe800000000	                          call 0x4000681	       854	easy.c	FUNCTION_19	CALL_3
0x4000681	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       858	easy.c	FUNCTION_19
0x4000686	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       858	easy.c	FUNCTION_19
0x400068f	            0x7405	                            je 0x4000696	       858	easy.c	FUNCTION_19
0x4000691	      0xe800000000	                          call 0x4000696	       858	easy.c	FUNCTION_19
0x4000696	        0x4883c458	                           add rsp, 0x58	       858	easy.c	FUNCTION_19
0x400069a	              0xc3	                                     ret	       858	easy.c	FUNCTION_19
curl_global_cleanup	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,3:CALL,7:DO,0	14
0x40002b3	    0x8b0500000000	            mov eax, dword [0x040002b9] 	       324	easy.c	FUNCTION_6	IF_1
0x40002b9	            0x85c0	                           test eax, eax	       324	easy.c	FUNCTION_6	IF_1
0x40002bb	            0x742f	                            je 0x40002ec	       324	easy.c	FUNCTION_6	IF_1
0x40002bd	          0x83e801	                              sub eax, 1	       327	easy.c	FUNCTION_6	IF_2
0x40002c0	    0x890500000000	            mov dword [0x040002c6], eax 	       327	easy.c	FUNCTION_6	IF_2
0x40002c6	            0x85c0	                           test eax, eax	       327	easy.c	FUNCTION_6	IF_2
0x40002c8	            0x7522	                           jne 0x40002ec	       327	easy.c	FUNCTION_6	IF_2
0x40002ca	        0x4883ec08	                              sub rsp, 8	       323	easy.c	FUNCTION_6
0x40002ce	      0xe800000000	                          call 0x40002d3	       330	easy.c	FUNCTION_6	CALL_1
0x40002d3	      0xe800000000	                          call 0x40002d8	       331	easy.c	FUNCTION_6	CALL_2
0x40002d8	      0xe800000000	                          call 0x40002dd	       332	easy.c	FUNCTION_6	CALL_3
0x40002dd	    0x48c705000000	               mov qword [0x040002e8], 0	       347	easy.c	FUNCTION_6
0x40002e8	        0x4883c408	                              add rsp, 8	       348	easy.c	FUNCTION_6
0x40002ec	            0xf3c3	                                     ret	       348	easy.c	FUNCTION_6
easy_connection	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,3:CALL,3:DO,0	30
0x40001b8	      0xb82b000000	                           mov eax, 0x2b	      1122	easy.c	FUNCTION_24	IF_1
0x40001bd	          0x4885ff	                           test rdi, rdi	      1121	easy.c	FUNCTION_24	IF_1
0x40001c0	            0x745e	                            je 0x4000220	      1121	easy.c	FUNCTION_24	IF_1
0x40001c2	              0x55	                                push rbp	      1120	easy.c	FUNCTION_24
0x40001c3	              0x53	                                push rbx	      1120	easy.c	FUNCTION_24
0x40001c4	        0x4883ec08	                              sub rsp, 8	      1120	easy.c	FUNCTION_24
0x40001c8	          0x4889f5	                            mov rbp, rsi	      1120	easy.c	FUNCTION_24
0x40001cb	          0x4889fb	                            mov rbx, rdi	      1120	easy.c	FUNCTION_24
0x40001ce	    0x80bf01080000	               cmp byte [rdi + 0x801], 0	      1125	easy.c	FUNCTION_24	IF_2
0x40001d5	            0x7518	                           jne 0x40001ef	      1125	easy.c	FUNCTION_24	IF_2
0x40001d7	    0x488d35000000	                   lea rsi, [0x040001de]	      1126	easy.c	FUNCTION_24	IF_2	CALL_1
0x40001de	      0xb800000000	                              mov eax, 0	      1126	easy.c	FUNCTION_24	IF_2	CALL_1
0x40001e3	      0xe800000000	                          call 0x40001e8	      1126	easy.c	FUNCTION_24	IF_2	CALL_1
0x40001e8	      0xb801000000	                              mov eax, 1	      1127	easy.c	FUNCTION_24	IF_2
0x40001ed	            0xeb2b	                           jmp 0x400021a	      1127	easy.c	FUNCTION_24	IF_2
0x40001ef	          0x4889d6	                            mov rsi, rdx	      1130	easy.c	FUNCTION_24	CALL_2
0x40001f2	      0xe800000000	                          call 0x40001f7	      1130	easy.c	FUNCTION_24	CALL_2
0x40001f7	            0x89c2	                            mov edx, eax	      1130	easy.c	FUNCTION_24	CALL_2
0x40001f9	          0x894500	                    mov dword [rbp], eax	      1130	easy.c	FUNCTION_24	CALL_2
0x40001fc	      0xb800000000	                              mov eax, 0	      1137	easy.c	FUNCTION_24
0x4000201	          0x83faff	             cmp edx, 0xffffffffffffffff	      1132	easy.c	FUNCTION_24	IF_3
0x4000204	            0x7514	                           jne 0x400021a	      1132	easy.c	FUNCTION_24	IF_3
0x4000206	    0x488d35000000	                   lea rsi, [0x0400020d]	      1133	easy.c	FUNCTION_24	IF_3	CALL_3
0x400020d	          0x4889df	                            mov rdi, rbx	      1133	easy.c	FUNCTION_24	IF_3	CALL_3
0x4000210	      0xe800000000	                          call 0x4000215	      1133	easy.c	FUNCTION_24	IF_3	CALL_3
0x4000215	      0xb801000000	                              mov eax, 1	      1134	easy.c	FUNCTION_24	IF_3
0x400021a	        0x4883c408	                              add rsp, 8	      1138	easy.c	FUNCTION_24
0x400021e	              0x5b	                                 pop rbx	      1138	easy.c	FUNCTION_24
0x400021f	              0x5d	                                 pop rbp	      1138	easy.c	FUNCTION_24
0x4000220	            0xf3c3	                                     ret	      1138	easy.c	FUNCTION_24
curl_easy_pause	ELSE,0:WHILE,0:FOR,2:SWITCH,0:functions,0:IF,6:CALL,4:DO,0	99
0x4000b14	            0x4157	                                push r15	      1049	easy.c	FUNCTION_23
0x4000b16	            0x4156	                                push r14	      1049	easy.c	FUNCTION_23
0x4000b18	            0x4155	                                push r13	      1049	easy.c	FUNCTION_23
0x4000b1a	            0x4154	                                push r12	      1049	easy.c	FUNCTION_23
0x4000b1c	              0x55	                                push rbp	      1049	easy.c	FUNCTION_23
0x4000b1d	              0x53	                                push rbx	      1049	easy.c	FUNCTION_23
0x4000b1e	        0x4883ec68	                           sub rsp, 0x68	      1049	easy.c	FUNCTION_23
0x4000b22	          0x4889fd	                            mov rbp, rdi	      1049	easy.c	FUNCTION_23
0x4000b25	    0x64488b042528	                mov rax, qword fs:[0x28]	      1049	easy.c	FUNCTION_23
0x4000b2e	      0x4889442458	             mov qword [rsp + 0x58], rax	      1049	easy.c	FUNCTION_23
0x4000b33	            0x31c0	                            xor eax, eax	      1049	easy.c	FUNCTION_23
0x4000b35	    0x8b87b4010000	           mov eax, dword [rdi + 0x1b4] 	      1054	easy.c	FUNCTION_23
0x4000b3b	          0x83e0cf	                     and eax, 0xffffffcf	      1054	easy.c	FUNCTION_23
0x4000b3e	            0x89f3	                            mov ebx, esi	      1057	easy.c	FUNCTION_23
0x4000b40	          0x83e301	                              and ebx, 1	      1057	easy.c	FUNCTION_23
0x4000b43	          0xc1e304	                              shl ebx, 4	      1057	easy.c	FUNCTION_23
0x4000b46	          0x83e604	                              and esi, 4	      1058	easy.c	FUNCTION_23
0x4000b49	      0xba20000000	                           mov edx, 0x20	      1058	easy.c	FUNCTION_23
0x4000b4e	           0xf45f2	                         cmovne esi, edx	      1058	easy.c	FUNCTION_23
0x4000b51	             0x9c3	                             or ebx, eax	      1058	easy.c	FUNCTION_23
0x4000b53	             0x9f3	                             or ebx, esi	      1057	easy.c	FUNCTION_23
0x4000b55	    0x899fb4010000	            mov dword [rdi + 0x1b4], ebx	      1061	easy.c	FUNCTION_23
0x4000b5b	          0xf6c310	                           test bl, 0x10	      1063	easy.c	FUNCTION_23	IF_1
0x4000b5e	     0xf850f010000	                           jne 0x4000c73	      1063	easy.c	FUNCTION_23	IF_1
0x4000b64	    0x8b87604d0000	          mov eax, dword [rdi + 0x4d60] 	      1063	easy.c	FUNCTION_23	IF_1
0x4000b6a	            0x85c0	                           test eax, eax	      1063	easy.c	FUNCTION_23	IF_1
0x4000b6c	     0xf8401010000	                            je 0x4000c73	      1063	easy.c	FUNCTION_23	IF_1
0x4000b72	        0x4c8b7710	            mov r14, qword [rdi + 0x10] 	      1069	easy.c	FUNCTION_23	IF_1
0x4000b76	          0x8d40ff	                      lea eax, [rax - 1]	      1069	easy.c	FUNCTION_23	IF_1
0x4000b79	      0x488d4c4003	              lea rcx, [rax + rax*2 + 3]	      1069	easy.c	FUNCTION_23	IF_1
0x4000b7e	        0x48c1e103	                              shl rcx, 3	      1069	easy.c	FUNCTION_23	IF_1
0x4000b82	          0x4889ce	                            mov rsi, rcx	      1069	easy.c	FUNCTION_23	IF_1
0x4000b85	      0xb800000000	                              mov eax, 0	      1069	easy.c	FUNCTION_23	IF_1
0x4000b8a	    0x488b9405684d	    mov rdx, qword [rbp + rax + 0x4d68] 	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000b92	      0x4889540410	       mov qword [rsp + rax + 0x10], rdx	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000b97	    0x488b9405704d	    mov rdx, qword [rbp + rax + 0x4d70] 	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000b9f	      0x4889540418	       mov qword [rsp + rax + 0x18], rdx	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000ba4	    0x488b9405784d	    mov rdx, qword [rbp + rax + 0x4d78] 	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000bac	      0x4889540420	       mov qword [rsp + rax + 0x20], rdx	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000bb1	    0x48c78405684d	      mov qword [rbp + rax + 0x4d68], 0 	      1075	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000bbd	        0x4883c018	                           add rax, 0x18	      1075	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000bc1	          0x4839f0	                            cmp rax, rsi	      1073	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000bc4	            0x75c4	                           jne 0x4000b8a	      1073	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000bc6	    0xc785604d0000	            mov dword [rbp + 0x4d60], 0 	      1077	easy.c	FUNCTION_23	IF_1
0x4000bd0	          0x4d8b3e	                    mov r15, qword [r14]	      1080	easy.c	FUNCTION_23	IF_1	IF_2
0x4000bd3	          0x4c39fd	                            cmp rbp, r15	      1080	easy.c	FUNCTION_23	IF_1	IF_2
0x4000bd6	            0x747c	                            je 0x4000c54	      1080	easy.c	FUNCTION_23	IF_1	IF_2
0x4000bd8	          0x49892e	                    mov qword [r14], rbp	      1082	easy.c	FUNCTION_23	IF_1	IF_2
0x4000bdb	            0xeb7d	                           jmp 0x4000c5a	      1082	easy.c	FUNCTION_23	IF_1	IF_2
0x4000bdd	          0x4585ed	                         test r13d, r13d	      1088	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3
0x4000be0	            0x7519	                           jne 0x4000bfb	      1088	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3
0x4000be2	      0x498b4c2408	                mov rcx, qword [r12 + 8]	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000be7	      0x418b742410	            mov esi, dword [r12 + 0x10] 	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000bec	        0x498b1424	                    mov rdx, qword [r12]	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000bf0	          0x4c89f7	                            mov rdi, r14	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000bf3	      0xe800000000	                          call 0x4000bf8	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000bf8	          0x4189c5	                           mov r13d, eax	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000bfb	        0x498b3c24	                    mov rdi, qword [r12]	      1091	easy.c	FUNCTION_23	IF_1	FOR_2	CALL_2
0x4000bff	    0xff1500000000	                 call qword [0x04000c05]	      1091	easy.c	FUNCTION_23	IF_1	FOR_2	CALL_2
0x4000c05	        0x4983c418	                           add r12, 0x18	      1091	easy.c	FUNCTION_23	IF_1	FOR_2	CALL_2
0x4000c09	      0x4c39642408	                cmp qword [rsp + 8], r12	      1085	easy.c	FUNCTION_23	IF_1	FOR_2
0x4000c0e	            0x75cd	                           jne 0x4000bdd	      1085	easy.c	FUNCTION_23	IF_1	FOR_2
0x4000c10	          0x4d85ff	                           test r15, r15	      1095	easy.c	FUNCTION_23	IF_1	IF_4
0x4000c13	            0x7403	                            je 0x4000c18	      1095	easy.c	FUNCTION_23	IF_1	IF_4
0x4000c15	          0x4d893e	                    mov qword [r14], r15	      1096	easy.c	FUNCTION_23	IF_1	IF_4
0x4000c18	          0x4585ed	                         test r13d, r13d	      1098	easy.c	FUNCTION_23	IF_1	IF_5
0x4000c1b	            0x7456	                            je 0x4000c73	      1098	easy.c	FUNCTION_23	IF_1	IF_5
0x4000c1d	            0xeb20	                           jmp 0x4000c3f	      1098	easy.c	FUNCTION_23	IF_1	IF_5
0x4000c1f	      0xba06000000	                              mov edx, 6	      1107	easy.c	FUNCTION_23	CALL_3
0x4000c24	      0xbe00000000	                              mov esi, 0	      1107	easy.c	FUNCTION_23	CALL_3
0x4000c29	          0x4889ef	                            mov rdi, rbp	      1107	easy.c	FUNCTION_23	CALL_3
0x4000c2c	      0xe800000000	                          call 0x4000c31	      1107	easy.c	FUNCTION_23	CALL_3
0x4000c31	          0x4889ef	                            mov rdi, rbp	      1111	easy.c	FUNCTION_23	CALL_4
0x4000c34	      0xe800000000	                          call 0x4000c39	      1111	easy.c	FUNCTION_23	CALL_4
0x4000c39	    0x41bd00000000	                             mov r13d, 0	      1113	easy.c	FUNCTION_23
0x4000c3f	          0x4489e8	                           mov eax, r13d	      1114	easy.c	FUNCTION_23
0x4000c42	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      1114	easy.c	FUNCTION_23
0x4000c47	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1114	easy.c	FUNCTION_23
0x4000c50	            0x7430	                            je 0x4000c82	      1114	easy.c	FUNCTION_23
0x4000c52	            0xeb29	                           jmp 0x4000c7d	      1114	easy.c	FUNCTION_23
0x4000c54	    0x41bf00000000	                             mov r15d, 0	      1070	easy.c	FUNCTION_23	IF_1
0x4000c5a	      0x4c8d642410	                   lea r12, [rsp + 0x10]	      1070	easy.c	FUNCTION_23	IF_1
0x4000c5f	        0x498d040c	                    lea rax, [r12 + rcx]	      1070	easy.c	FUNCTION_23	IF_1
0x4000c63	      0x4889442408	                mov qword [rsp + 8], rax	      1070	easy.c	FUNCTION_23	IF_1
0x4000c68	    0x41bd00000000	                             mov r13d, 0	      1069	easy.c	FUNCTION_23	IF_1
0x4000c6e	      0xe96affffff	                           jmp 0x4000bdd	      1069	easy.c	FUNCTION_23	IF_1
0x4000c73	          0x83e330	                           and ebx, 0x30	      1104	easy.c	FUNCTION_23	IF_6
0x4000c76	          0x83fb30	                           cmp ebx, 0x30	      1104	easy.c	FUNCTION_23	IF_6
0x4000c79	            0x75a4	                           jne 0x4000c1f	      1104	easy.c	FUNCTION_23	IF_6
0x4000c7b	            0xebb4	                           jmp 0x4000c31	      1104	easy.c	FUNCTION_23	IF_6
0x4000c7d	      0xe800000000	                          call 0x4000c82	      1114	easy.c	FUNCTION_23
0x4000c82	        0x4883c468	                           add rsp, 0x68	      1114	easy.c	FUNCTION_23
0x4000c86	              0x5b	                                 pop rbx	      1114	easy.c	FUNCTION_23
0x4000c87	              0x5d	                                 pop rbp	      1114	easy.c	FUNCTION_23
0x4000c88	            0x415c	                                 pop r12	      1114	easy.c	FUNCTION_23
0x4000c8a	            0x415d	                                 pop r13	      1114	easy.c	FUNCTION_23
0x4000c8c	            0x415e	                                 pop r14	      1114	easy.c	FUNCTION_23
0x4000c8e	            0x415f	                                 pop r15	      1114	easy.c	FUNCTION_23
0x4000c90	              0xc3	                                     ret	      1114	easy.c	FUNCTION_23
curl_global_init	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,0:CALL,1:DO,0	5
0x4000222	        0x4883ec08	                              sub rsp, 8	       282	easy.c	FUNCTION_4
0x4000226	      0xbe01000000	                              mov esi, 1	       283	easy.c	FUNCTION_4	CALL_1
0x400022b	      0xe810feffff	                    call sym.global_init	       283	easy.c	FUNCTION_4	CALL_1
0x4000230	        0x4883c408	                              add rsp, 8	       284	easy.c	FUNCTION_4
0x4000234	              0xc3	                                     ret	       284	easy.c	FUNCTION_4
curl_easy_perform	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,0:CALL,1:DO,0	155
0x4000351	            0x4157	                                push r15	       808	easy.c	FUNCTION_16
0x4000353	            0x4156	                                push r14	       808	easy.c	FUNCTION_16
0x4000355	            0x4155	                                push r13	       808	easy.c	FUNCTION_16
0x4000357	            0x4154	                                push r12	       808	easy.c	FUNCTION_16
0x4000359	              0x55	                                push rbp	       808	easy.c	FUNCTION_16
0x400035a	              0x53	                                push rbx	       808	easy.c	FUNCTION_16
0x400035b	    0x4881ecd80000	                           sub rsp, 0xd8	       808	easy.c	FUNCTION_16
0x4000362	    0x64488b042528	                mov rax, qword fs:[0x28]	       808	easy.c	FUNCTION_16
0x400036b	    0x48898424c800	             mov qword [rsp + 0xc8], rax	       808	easy.c	FUNCTION_16
0x4000373	            0x31c0	                            xor eax, eax	       808	easy.c	FUNCTION_16
0x4000375	      0xb82b000000	                           mov eax, 0x2b	       747	easy.c	FUNCTION_15	IF_1
0x400037a	          0x4885ff	                           test rdi, rdi	       746	easy.c	FUNCTION_15	IF_1
0x400037d	     0xf8414020000	                            je 0x4000597	       746	easy.c	FUNCTION_15	IF_1
0x4000383	          0x4889fb	                            mov rbx, rdi	       746	easy.c	FUNCTION_15	IF_1
0x4000386	    0x488b87000200	           mov rax, qword [rdi + 0x200] 	       749	easy.c	FUNCTION_15	IF_2
0x400038d	          0x4885c0	                           test rax, rax	       749	easy.c	FUNCTION_15	IF_2
0x4000390	            0x7403	                            je 0x4000395	       749	easy.c	FUNCTION_15	IF_2
0x4000392	          0xc60000	                       mov byte [rax], 0	       751	easy.c	FUNCTION_15	IF_2
0x4000395	    0x4883bba80000	               cmp qword [rbx + 0xa8], 0	       753	easy.c	FUNCTION_15	IF_3
0x400039d	            0x741e	                            je 0x40003bd	       753	easy.c	FUNCTION_15	IF_3
0x400039f	    0x488d35000000	                   lea rsi, [0x040003a6]	       754	easy.c	FUNCTION_15	IF_3	CALL_1
0x40003a6	          0x4889df	                            mov rdi, rbx	       754	easy.c	FUNCTION_15	IF_3	CALL_1
0x40003a9	      0xb800000000	                              mov eax, 0	       754	easy.c	FUNCTION_15	IF_3	CALL_1
0x40003ae	      0xe800000000	                          call 0x40003b3	       754	easy.c	FUNCTION_15	IF_3	CALL_1
0x40003b3	      0xb802000000	                              mov eax, 2	       755	easy.c	FUNCTION_15	IF_3
0x40003b8	      0xe9da010000	                           jmp 0x4000597	       755	easy.c	FUNCTION_15	IF_3
0x40003bd	    0x488babb00000	            mov rbp, qword [rbx + 0xb0] 	       758	easy.c	FUNCTION_15	IF_4
0x40003c4	          0x4885ed	                           test rbp, rbp	       758	easy.c	FUNCTION_15	IF_4
0x40003c7	            0x7527	                           jne 0x40003f0	       758	easy.c	FUNCTION_15	IF_4
0x40003c9	      0xbe03000000	                              mov esi, 3	       763	easy.c	FUNCTION_15	ELSE_1	CALL_2
0x40003ce	      0xbf01000000	                              mov edi, 1	       763	easy.c	FUNCTION_15	ELSE_1	CALL_2
0x40003d3	      0xe800000000	                          call 0x40003d8	       763	easy.c	FUNCTION_15	ELSE_1	CALL_2
0x40003d8	          0x4889c5	                            mov rbp, rax	       763	easy.c	FUNCTION_15	ELSE_1	CALL_2
0x40003db	      0xb81b000000	                           mov eax, 0x1b	       765	easy.c	FUNCTION_15	ELSE_1	IF_5
0x40003e0	          0x4885ed	                           test rbp, rbp	       764	easy.c	FUNCTION_15	ELSE_1	IF_5
0x40003e3	     0xf84ae010000	                            je 0x4000597	       764	easy.c	FUNCTION_15	ELSE_1	IF_5
0x40003e9	    0x4889abb00000	             mov qword [rbx + 0xb0], rbp	       766	easy.c	FUNCTION_15	ELSE_1
0x40003f0	      0xb85d000000	                           mov eax, 0x5d	       770	easy.c	FUNCTION_15	IF_6
0x40003f5	    0x80bde0010000	               cmp byte [rbp + 0x1e0], 0	       769	easy.c	FUNCTION_15	IF_6
0x40003fc	     0xf8595010000	                           jne 0x4000597	       769	easy.c	FUNCTION_15	IF_6
0x4000402	    0x488b93b80a00	           mov rdx, qword [rbx + 0xab8] 	       773	easy.c	FUNCTION_15	CALL_3
0x4000409	      0xbe06000000	                              mov esi, 6	       773	easy.c	FUNCTION_15	CALL_3
0x400040e	          0x4889ef	                            mov rdi, rbp	       773	easy.c	FUNCTION_15	CALL_3
0x4000411	      0xb800000000	                              mov eax, 0	       773	easy.c	FUNCTION_15	CALL_3
0x4000416	      0xe800000000	                          call 0x400041b	       773	easy.c	FUNCTION_15	CALL_3
0x400041b	          0x4889de	                            mov rsi, rbx	       775	easy.c	FUNCTION_15	CALL_4
0x400041e	          0x4889ef	                            mov rdi, rbp	       775	easy.c	FUNCTION_15	CALL_4
0x4000421	      0xe800000000	                          call 0x4000426	       775	easy.c	FUNCTION_15	CALL_4
0x4000426	          0x4189c4	                           mov r12d, eax	       775	easy.c	FUNCTION_15	CALL_4
0x4000429	            0x85c0	                           test eax, eax	       776	easy.c	FUNCTION_15	IF_7
0x400042b	            0x741e	                            je 0x400044b	       776	easy.c	FUNCTION_15	IF_7
0x400042d	          0x4889ef	                            mov rdi, rbp	       777	easy.c	FUNCTION_15	IF_7	CALL_5
0x4000430	      0xe800000000	                          call 0x4000435	       777	easy.c	FUNCTION_15	IF_7	CALL_5
0x4000435	        0x4183fc03	                             cmp r12d, 3	       778	easy.c	FUNCTION_15	IF_7	IF_8
0x4000439	      0xba02000000	                              mov edx, 2	       780	easy.c	FUNCTION_15	IF_7
0x400043e	      0xb81b000000	                           mov eax, 0x1b	       780	easy.c	FUNCTION_15	IF_7
0x4000443	           0xf45c2	                         cmovne eax, edx	       780	easy.c	FUNCTION_15	IF_7
0x4000446	      0xe94c010000	                           jmp 0x4000597	       780	easy.c	FUNCTION_15	IF_7
0x400044b	      0x488d742420	                   lea rsi, [rsp + 0x20]	       783	easy.c	FUNCTION_15
0x4000450	          0x4889df	                            mov rdi, rbx	       783	easy.c	FUNCTION_15
0x4000453	      0xe89efcffff	                 call sym.sigpipe_ignore	       783	easy.c	FUNCTION_15
0x4000458	    0x4889aba80000	             mov qword [rbx + 0xa8], rbp	       787	easy.c	FUNCTION_15
0x400045f	    0xc74424040000	                  mov dword [rsp + 4], 0	       787	easy.c	FUNCTION_15
0x4000467	      0x4c8d7c241c	                   lea r15, [rsp + 0x1c]	       673	easy.c	FUNCTION_14	WHILE_1	CALL_2
0x400046c	      0x488d442418	                   lea rax, [rsp + 0x18]	       697	easy.c	FUNCTION_14	WHILE_1	IF_1	CALL_6
0x4000471	      0x4889442408	                mov qword [rsp + 8], rax	       697	easy.c	FUNCTION_14	WHILE_1	IF_1	CALL_6
0x4000476	    0xc74424180000	               mov dword [rsp + 0x18], 0	       669	easy.c	FUNCTION_14	WHILE_1
0x400047e	      0xe800000000	                          call 0x4000483	       672	easy.c	FUNCTION_14	WHILE_1	CALL_1
0x4000483	          0x4989c5	                            mov r13, rax	       672	easy.c	FUNCTION_14	WHILE_1	CALL_1
0x4000486	          0x4989d6	                            mov r14, rdx	       672	easy.c	FUNCTION_14	WHILE_1	CALL_1
0x4000489	          0x4d89f8	                             mov r8, r15	       673	easy.c	FUNCTION_14	WHILE_1	CALL_2
0x400048c	      0xb9e8030000	                          mov ecx, 0x3e8	       673	easy.c	FUNCTION_14	WHILE_1	CALL_2
0x4000491	      0xba00000000	                              mov edx, 0	       673	easy.c	FUNCTION_14	WHILE_1	CALL_2
0x4000496	      0xbe00000000	                              mov esi, 0	       673	easy.c	FUNCTION_14	WHILE_1	CALL_2
0x400049b	          0x4889ef	                            mov rdi, rbp	       673	easy.c	FUNCTION_14	WHILE_1	CALL_2
0x400049e	      0xe800000000	                          call 0x40004a3	       673	easy.c	FUNCTION_14	WHILE_1	CALL_2
0x40004a3	          0x4189c4	                           mov r12d, eax	       673	easy.c	FUNCTION_14	WHILE_1	CALL_2
0x40004a6	            0x85c0	                           test eax, eax	       675	easy.c	FUNCTION_14	WHILE_1	IF_1
0x40004a8	     0xf8506010000	                           jne 0x40005b4	       675	easy.c	FUNCTION_14	WHILE_1	IF_1
0x40004ae	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	       676	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2
0x40004b3	            0x755c	                           jne 0x4000511	       676	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2
0x40004b5	      0xe800000000	                          call 0x40004ba	       677	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	CALL_3
0x40004ba	          0x4889d6	                            mov rsi, rdx	       682	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	CALL_4
0x40004bd	          0x4c89ea	                            mov rdx, r13	       682	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	CALL_4
0x40004c0	          0x4c89f1	                            mov rcx, r14	       682	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	CALL_4
0x40004c3	          0x4889c7	                            mov rdi, rax	       682	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	CALL_4
0x40004c6	      0xe800000000	                          call 0x40004cb	       682	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	CALL_4
0x40004cb	        0x4883f80a	                            cmp rax, 0xa	       682	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	CALL_4
0x40004cf	            0x7f2f	                            jg 0x4000500	       682	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	CALL_4
0x40004d1	        0x8b442404	                mov eax, dword [rsp + 4]	       683	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3
0x40004d5	        0x448d6001	                     lea r12d, [rax + 1]	       683	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3
0x40004d9	        0x4183fc02	                             cmp r12d, 2	       684	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	IF_4
0x40004dd	            0x7e2b	                           jle 0x400050a	       684	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	IF_4
0x40004df	      0xbfe8030000	                          mov edi, 0x3e8	       685	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	IF_4
0x40004e4	      0xba01000000	                              mov edx, 1	       685	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	IF_4
0x40004e9	            0x89c1	                            mov ecx, eax	       685	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	IF_4
0x40004eb	            0xd3e2	                             shl edx, cl	       685	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	IF_4
0x40004ed	        0x4183fc09	                             cmp r12d, 9	       685	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	IF_4
0x40004f1	           0xf4efa	                         cmovle edi, edx	       685	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	IF_4
0x40004f4	      0xe800000000	                          call 0x40004f9	       686	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40004f9	      0x4489642404	               mov dword [rsp + 4], r12d	       683	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3
0x40004fe	            0xeb19	                           jmp 0x4000519	       683	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3
0x4000500	    0xc74424040000	                  mov dword [rsp + 4], 0	       691	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	ELSE_1
0x4000508	            0xeb0f	                           jmp 0x4000519	       691	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	ELSE_1
0x400050a	      0x4489642404	               mov dword [rsp + 4], r12d	       683	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3
0x400050f	            0xeb08	                           jmp 0x4000519	       683	easy.c	FUNCTION_14	WHILE_1	IF_1	IF_2	IF_3
0x4000511	    0xc74424040000	                  mov dword [rsp + 4], 0	       695	easy.c	FUNCTION_14	WHILE_1	IF_1	ELSE_2
0x4000519	      0x488b742408	                mov rsi, qword [rsp + 8]	       697	easy.c	FUNCTION_14	WHILE_1	IF_1	CALL_6
0x400051e	          0x4889ef	                            mov rdi, rbp	       697	easy.c	FUNCTION_14	WHILE_1	IF_1	CALL_6
0x4000521	      0xe800000000	                          call 0x4000526	       697	easy.c	FUNCTION_14	WHILE_1	IF_1	CALL_6
0x4000526	          0x4189c4	                           mov r12d, eax	       697	easy.c	FUNCTION_14	WHILE_1	IF_1	CALL_6
0x4000529	            0x85c0	                           test eax, eax	       701	easy.c	FUNCTION_14	WHILE_1	IF_5
0x400052b	            0x757f	                           jne 0x40005ac	       701	easy.c	FUNCTION_14	WHILE_1	IF_5
0x400052d	      0x837c241800	               cmp dword [rsp + 0x18], 0	       701	easy.c	FUNCTION_14	WHILE_1	IF_5
0x4000532	     0xf853effffff	                           jne 0x4000476	       701	easy.c	FUNCTION_14	WHILE_1	IF_5
0x4000538	          0x4c89fe	                            mov rsi, r15	       702	easy.c	FUNCTION_14	WHILE_1	IF_5	CALL_7
0x400053b	          0x4889ef	                            mov rdi, rbp	       702	easy.c	FUNCTION_14	WHILE_1	IF_5	CALL_7
0x400053e	      0xe800000000	                          call 0x4000543	       702	easy.c	FUNCTION_14	WHILE_1	IF_5	CALL_7
0x4000543	          0x4885c0	                           test rax, rax	       703	easy.c	FUNCTION_14	WHILE_1	IF_5	IF_6
0x4000546	     0xf842affffff	                            je 0x4000476	       703	easy.c	FUNCTION_14	WHILE_1	IF_5	IF_6
0x400054c	        0x448b6810	           mov r13d, dword [rax + 0x10] 	       704	easy.c	FUNCTION_14	WHILE_1	IF_5	IF_6
0x4000550	          0x4585e4	                         test r12d, r12d	       711	easy.c	FUNCTION_14	IF_7
0x4000553	            0x7413	                            je 0x4000568	       711	easy.c	FUNCTION_14	IF_7
0x4000555	        0x4183fc03	                             cmp r12d, 3	       712	easy.c	FUNCTION_14	IF_7
0x4000559	    0x41bd2b000000	                          mov r13d, 0x2b	       712	easy.c	FUNCTION_14	IF_7
0x400055f	      0xb81b000000	                           mov eax, 0x1b	       712	easy.c	FUNCTION_14	IF_7
0x4000564	        0x440f44e8	                         cmove r13d, eax	       712	easy.c	FUNCTION_14	IF_7
0x4000568	          0x4889de	                            mov rsi, rbx	       794	easy.c	FUNCTION_15	CALL_7
0x400056b	          0x4889ef	                            mov rdi, rbp	       794	easy.c	FUNCTION_15	CALL_7
0x400056e	      0xe800000000	                          call 0x4000573	       794	easy.c	FUNCTION_15	CALL_7
0x4000573	          0x4489e8	                           mov eax, r13d	       799	easy.c	FUNCTION_15
0x4000576	    0x80bc24b80000	                cmp byte [rsp + 0xb8], 0	        66	sigpipe.h	IF_2
0x400057e	            0x7517	                           jne 0x4000597	        66	sigpipe.h	IF_2
0x4000580	      0x488d742420	                   lea rsi, [rsp + 0x20]	        68	sigpipe.h	CALL_7
0x4000585	      0xba00000000	                              mov edx, 0	        68	sigpipe.h	CALL_7
0x400058a	      0xbf0d000000	                            mov edi, 0xd	        68	sigpipe.h	CALL_7
0x400058f	      0xe800000000	                          call 0x4000594	        68	sigpipe.h	CALL_7
0x4000594	          0x4489e8	                           mov eax, r13d	       799	easy.c	FUNCTION_15
0x4000597	    0x488b8c24c800	            mov rcx, qword [rsp + 0xc8] 	       810	easy.c	FUNCTION_16
0x400059f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       810	easy.c	FUNCTION_16
0x40005a8	            0x7417	                            je 0x40005c1	       810	easy.c	FUNCTION_16
0x40005aa	            0xeb10	                           jmp 0x40005bc	       810	easy.c	FUNCTION_16
0x40005ac	    0x41bd00000000	                             mov r13d, 0	       701	easy.c	FUNCTION_14	WHILE_1	IF_5
0x40005b2	            0xeb9c	                           jmp 0x4000550	       701	easy.c	FUNCTION_14	WHILE_1	IF_5
0x40005b4	    0x41bd00000000	                             mov r13d, 0	       701	easy.c	FUNCTION_14	WHILE_1	IF_5
0x40005ba	            0xeb94	                           jmp 0x4000550	       701	easy.c	FUNCTION_14	WHILE_1	IF_5
0x40005bc	      0xe800000000	                          call 0x40005c1	       810	easy.c	FUNCTION_16
0x40005c1	    0x4881c4d80000	                           add rsp, 0xd8	       810	easy.c	FUNCTION_16
0x40005c8	              0x5b	                                 pop rbx	       810	easy.c	FUNCTION_16
0x40005c9	              0x5d	                                 pop rbp	       810	easy.c	FUNCTION_16
0x40005ca	            0x415c	                                 pop r12	       810	easy.c	FUNCTION_16
0x40005cc	            0x415d	                                 pop r13	       810	easy.c	FUNCTION_16
0x40005ce	            0x415e	                                 pop r14	       810	easy.c	FUNCTION_16
0x40005d0	            0x415f	                                 pop r15	       810	easy.c	FUNCTION_16
0x40005d2	              0xc3	                                     ret	       810	easy.c	FUNCTION_16
curl_easy_reset	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,0:CALL,10:DO,0	55
0x40009de	              0x55	                                push rbp	      1008	easy.c	FUNCTION_22
0x40009df	              0x53	                                push rbx	      1008	easy.c	FUNCTION_22
0x40009e0	        0x4883ec08	                              sub rsp, 8	      1008	easy.c	FUNCTION_22
0x40009e4	          0x4889fb	                            mov rbx, rdi	      1008	easy.c	FUNCTION_22
0x40009e7	    0x488bbf105100	          mov rdi, qword [rdi + 0x5110] 	      1009	easy.c	FUNCTION_22	CALL_1
0x40009ee	    0xff1500000000	                 call qword [0x040009f4]	      1009	easy.c	FUNCTION_22	CALL_1
0x40009f4	    0x48c783105100	            mov qword [rbx + 0x5110], 0 	      1009	easy.c	FUNCTION_22	CALL_1
0x40009ff	    0x48c783185100	            mov qword [rbx + 0x5118], 0 	      1011	easy.c	FUNCTION_22
0x4000a0a	          0x4889df	                            mov rdi, rbx	      1013	easy.c	FUNCTION_22	CALL_2
0x4000a0d	      0xe800000000	                          call 0x4000a12	      1013	easy.c	FUNCTION_22	CALL_2
0x4000a12	          0x4889df	                            mov rdi, rbx	      1016	easy.c	FUNCTION_22	CALL_3
0x4000a15	      0xe800000000	                          call 0x4000a1a	      1016	easy.c	FUNCTION_22	CALL_3
0x4000a1a	      0xbd00000000	                              mov ebp, 0	        90	string3.h	FUNCTION_30	CALL_6
0x4000a1f	    0x48c783f00100	              mov qword [rbx + 0x1f0], 0	        90	string3.h	FUNCTION_30	CALL_6
0x4000a2a	    0x48c783100b00	              mov qword [rbx + 0xb10], 0	        90	string3.h	FUNCTION_30	CALL_6
0x4000a35	    0x488dbbf80100	                  lea rdi, [rbx + 0x1f8]	        90	string3.h	FUNCTION_30	CALL_6
0x4000a3c	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_30	CALL_6
0x4000a40	            0x89d8	                            mov eax, ebx	        90	string3.h	FUNCTION_30	CALL_6
0x4000a42	            0x29f8	                            sub eax, edi	        90	string3.h	FUNCTION_30	CALL_6
0x4000a44	    0x8d88180b0000	                  lea ecx, [rax + 0xb18]	        90	string3.h	FUNCTION_30	CALL_6
0x4000a4a	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_30	CALL_6
0x4000a4d	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_30	CALL_6
0x4000a4f	          0x4889e8	                            mov rax, rbp	        90	string3.h	FUNCTION_30	CALL_6
0x4000a52	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_30	CALL_6
0x4000a55	          0x4889df	                            mov rdi, rbx	      1018	easy.c	FUNCTION_22	CALL_5
0x4000a58	      0xe800000000	                          call 0x4000a5d	      1018	easy.c	FUNCTION_22	CALL_5
0x4000a5d	    0x48c783500b00	              mov qword [rbx + 0xb50], 0	        90	string3.h	FUNCTION_30	CALL_6
0x4000a68	    0x48c783e00c00	              mov qword [rbx + 0xce0], 0	        90	string3.h	FUNCTION_30	CALL_6
0x4000a73	    0x488dbb580b00	                  lea rdi, [rbx + 0xb58]	        90	string3.h	FUNCTION_30	CALL_6
0x4000a7a	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_30	CALL_6
0x4000a7e	            0x89d8	                            mov eax, ebx	        90	string3.h	FUNCTION_30	CALL_6
0x4000a80	            0x29f8	                            sub eax, edi	        90	string3.h	FUNCTION_30	CALL_6
0x4000a82	    0x8d88e80c0000	                  lea ecx, [rax + 0xce8]	        90	string3.h	FUNCTION_30	CALL_6
0x4000a88	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_30	CALL_6
0x4000a8b	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_30	CALL_6
0x4000a8d	          0x4889e8	                            mov rax, rbp	        90	string3.h	FUNCTION_30	CALL_6
0x4000a90	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_30	CALL_6
0x4000a93	          0x4889df	                            mov rdi, rbx	      1024	easy.c	FUNCTION_22	CALL_7
0x4000a96	      0xe800000000	                          call 0x4000a9b	      1024	easy.c	FUNCTION_22	CALL_7
0x4000a9b	    0x838b880b0000	            or dword [rbx + 0xb88], 0x10	      1026	easy.c	FUNCTION_22
0x4000aa2	    0x48c783304d00	mov qword [rbx + 0x4d30], 0xffffffffffffffff 	      1027	easy.c	FUNCTION_22
0x4000aad	    0x48c783504e00	            mov qword [rbx + 0x4e50], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000ab8	    0x48c783584e00	            mov qword [rbx + 0x4e58], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000ac3	    0x48c783604e00	            mov qword [rbx + 0x4e60], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000ace	    0x48c783684e00	            mov qword [rbx + 0x4e68], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000ad9	    0x48c783704e00	            mov qword [rbx + 0x4e70], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000ae4	    0x48c783784e00	            mov qword [rbx + 0x4e78], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000aef	    0x48c783804e00	            mov qword [rbx + 0x4e80], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000afa	    0x48c783884e00	            mov qword [rbx + 0x4e88], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000b05	          0x4889df	                            mov rdi, rbx	      1032	easy.c	FUNCTION_22	CALL_10
0x4000b08	      0xe800000000	                          call 0x4000b0d	      1032	easy.c	FUNCTION_22	CALL_10
0x4000b0d	        0x4883c408	                              add rsp, 8	      1033	easy.c	FUNCTION_22
0x4000b11	              0x5b	                                 pop rbx	      1033	easy.c	FUNCTION_22
0x4000b12	              0x5d	                                 pop rbp	      1033	easy.c	FUNCTION_22
0x4000b13	              0xc3	                                     ret	      1033	easy.c	FUNCTION_22
curl_easy_duphandle	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,14:CALL,18:DO,0	155
0x400069b	            0x4156	                                push r14	       907	easy.c	FUNCTION_21
0x400069d	            0x4155	                                push r13	       907	easy.c	FUNCTION_21
0x400069f	            0x4154	                                push r12	       907	easy.c	FUNCTION_21
0x40006a1	              0x55	                                push rbp	       907	easy.c	FUNCTION_21
0x40006a2	              0x53	                                push rbx	       907	easy.c	FUNCTION_21
0x40006a3	          0x4989fd	                            mov r13, rdi	       907	easy.c	FUNCTION_21
0x40006a6	      0xbed8520000	                         mov esi, 0x52d8	       908	easy.c	FUNCTION_21	CALL_1
0x40006ab	      0xbf01000000	                              mov edi, 1	       908	easy.c	FUNCTION_21	CALL_1
0x40006b0	    0xff1500000000	                 call qword [0x040006b6]	       908	easy.c	FUNCTION_21	CALL_1
0x40006b6	          0x4989c4	                            mov r12, rax	       908	easy.c	FUNCTION_21	CALL_1
0x40006b9	      0xb800000000	                              mov eax, 0	      1000	easy.c	FUNCTION_21
0x40006be	          0x4d85e4	                           test r12, r12	       909	easy.c	FUNCTION_21	IF_1
0x40006c1	     0xf840e030000	                            je 0x40009d5	       909	easy.c	FUNCTION_21	IF_1
0x40006c7	    0x498bbd900700	           mov rdi, qword [r13 + 0x790] 	       917	easy.c	FUNCTION_21
0x40006ce	    0x4989bc249007	            mov qword [r12 + 0x790], rdi	       917	easy.c	FUNCTION_21
0x40006d6	        0x4883c701	                              add rdi, 1	       918	easy.c	FUNCTION_21	CALL_2
0x40006da	    0xff1500000000	                 call qword [0x040006e0]	       918	easy.c	FUNCTION_21	CALL_2
0x40006e0	    0x49898424200d	            mov qword [r12 + 0xd20], rax	       918	easy.c	FUNCTION_21	CALL_2
0x40006e8	          0x4885c0	                           test rax, rax	       919	easy.c	FUNCTION_21	IF_2
0x40006eb	     0xf844d020000	                            je 0x400093e	       919	easy.c	FUNCTION_21	IF_2
0x40006f1	      0xbf00010000	                          mov edi, 0x100	       922	easy.c	FUNCTION_21	CALL_3
0x40006f6	    0xff1500000000	                 call qword [0x040006fc]	       922	easy.c	FUNCTION_21	CALL_3
0x40006fc	    0x49898424100d	            mov qword [r12 + 0xd10], rax	       922	easy.c	FUNCTION_21	CALL_3
0x4000704	          0x4885c0	                           test rax, rax	       923	easy.c	FUNCTION_21	IF_3
0x4000707	     0xf8431020000	                            je 0x400093e	       923	easy.c	FUNCTION_21	IF_3
0x400070d	    0x49c78424180d	         mov qword [r12 + 0xd18], 0x100 	       925	easy.c	FUNCTION_21
0x4000719	    0x498dbc24f001	                  lea rdi, [r12 + 0x1f0]	       867	easy.c	FUNCTION_20
0x4000721	    0x498db5f00100	                  lea rsi, [r13 + 0x1f0]	       867	easy.c	FUNCTION_20
0x4000728	      0xbb25010000	                          mov ebx, 0x125	       867	easy.c	FUNCTION_20
0x400072d	          0x4889d9	                            mov rcx, rbx	       867	easy.c	FUNCTION_20
0x4000730	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       867	easy.c	FUNCTION_20
0x4000733	          0x4889cb	                            mov rbx, rcx	       867	easy.c	FUNCTION_20
0x4000736	    0x4d8db424b003	                  lea r14, [r12 + 0x3b0]	       868	easy.c	FUNCTION_20	CALL_1
0x400073e	          0x4c89e6	                            mov rsi, r12	       868	easy.c	FUNCTION_20	CALL_1
0x4000741	          0x4c89f7	                            mov rdi, r14	       868	easy.c	FUNCTION_20	CALL_1
0x4000744	      0xe800000000	                          call 0x4000749	       868	easy.c	FUNCTION_20	CALL_1
0x4000749	    0x498dac243008	                  lea rbp, [r12 + 0x830]	        90	string3.h	FUNCTION_30	CALL_6
0x4000751	    0x49c784243008	              mov qword [r12 + 0x830], 0	        90	string3.h	FUNCTION_30	CALL_6
0x400075d	    0x49c78424300a	              mov qword [r12 + 0xa30], 0	        90	string3.h	FUNCTION_30	CALL_6
0x4000769	    0x498dbc243808	                  lea rdi, [r12 + 0x838]	        90	string3.h	FUNCTION_30	CALL_6
0x4000771	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_30	CALL_6
0x4000775	          0x4889e9	                            mov rcx, rbp	        90	string3.h	FUNCTION_30	CALL_6
0x4000778	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_30	CALL_6
0x400077b	    0x81c108020000	                          add ecx, 0x208	        90	string3.h	FUNCTION_30	CALL_6
0x4000781	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_30	CALL_6
0x4000784	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_30	CALL_6
0x4000786	          0x4889d8	                            mov rax, rbx	        90	string3.h	FUNCTION_30	CALL_6
0x4000789	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_30	CALL_6
0x400078c	    0x498bb4dd3008	   mov rsi, qword [r13 + rbx*8 + 0x830] 	       875	easy.c	FUNCTION_20	FOR_1	CALL_3
0x4000794	          0x4889ef	                            mov rdi, rbp	       875	easy.c	FUNCTION_20	FOR_1	CALL_3
0x4000797	      0xe800000000	                          call 0x400079c	       875	easy.c	FUNCTION_20	FOR_1	CALL_3
0x400079c	            0x85c0	                           test eax, eax	       876	easy.c	FUNCTION_20	FOR_1	IF_1
0x400079e	     0xf859a010000	                           jne 0x400093e	       876	easy.c	FUNCTION_20	FOR_1	IF_1
0x40007a4	        0x4883c301	                              add rbx, 1	       876	easy.c	FUNCTION_20	FOR_1	IF_1
0x40007a8	        0x4883c508	                              add rbp, 8	       876	easy.c	FUNCTION_20	FOR_1	IF_1
0x40007ac	          0x83fb3e	                           cmp ebx, 0x3e	       874	easy.c	FUNCTION_20	FOR_1
0x40007af	            0x76db	                           jbe 0x400078c	       874	easy.c	FUNCTION_20	FOR_1
0x40007b1	    0x498bbd780200	           mov rdi, qword [r13 + 0x278] 	       882	easy.c	FUNCTION_20	IF_2
0x40007b8	          0x4885ff	                           test rdi, rdi	       882	easy.c	FUNCTION_20	IF_2
0x40007bb	            0x7437	                            je 0x40007f4	       882	easy.c	FUNCTION_20	IF_2
0x40007bd	    0x4983bd300a00	              cmp qword [r13 + 0xa30], 0	       882	easy.c	FUNCTION_20	IF_2
0x40007c5	            0x742d	                            je 0x40007f4	       882	easy.c	FUNCTION_20	IF_2
0x40007c7	      0xe800000000	                          call 0x40007cc	       884	easy.c	FUNCTION_20	IF_2	CALL_4
0x40007cc	    0x498bbd300a00	           mov rdi, qword [r13 + 0xa30] 	       884	easy.c	FUNCTION_20	IF_2	CALL_4
0x40007d3	          0x4889c6	                            mov rsi, rax	       884	easy.c	FUNCTION_20	IF_2	CALL_4
0x40007d6	      0xe800000000	                          call 0x40007db	       884	easy.c	FUNCTION_20	IF_2	CALL_4
0x40007db	    0x49898424300a	            mov qword [r12 + 0xa30], rax	       884	easy.c	FUNCTION_20	IF_2	CALL_4
0x40007e3	          0x4885c0	                           test rax, rax	       886	easy.c	FUNCTION_20	IF_2	IF_3
0x40007e6	     0xf8452010000	                            je 0x400093e	       886	easy.c	FUNCTION_20	IF_2	IF_3
0x40007ec	    0x498984246802	            mov qword [r12 + 0x268], rax	       889	easy.c	FUNCTION_20	IF_2
0x40007f4	    0x498db5b00300	                  lea rsi, [r13 + 0x3b0]	       893	easy.c	FUNCTION_20	CALL_6
0x40007fb	          0x4c89f7	                            mov rdi, r14	       893	easy.c	FUNCTION_20	CALL_6
0x40007fe	      0xe800000000	                          call 0x4000803	       893	easy.c	FUNCTION_20	CALL_6
0x4000803	    0x4983bdb00500	              cmp qword [r13 + 0x5b0], 0	       895	easy.c	FUNCTION_20	IF_4
0x400080b	            0x7410	                            je 0x400081d	       895	easy.c	FUNCTION_20	IF_4
0x400080d	    0x498b9424b005	           mov rdx, qword [r12 + 0x5b0] 	       896	easy.c	FUNCTION_20	IF_4
0x4000815	    0x49899424400b	            mov qword [r12 + 0xb40], rdx	       896	easy.c	FUNCTION_20	IF_4
0x400081d	            0x85c0	                           test eax, eax	       928	easy.c	FUNCTION_21	IF_4	CALL_4
0x400081f	     0xf8519010000	                           jne 0x400093e	       928	easy.c	FUNCTION_21	IF_4	CALL_4
0x4000825	    0x49c78424e80c	              mov qword [r12 + 0xce8], 0	       932	easy.c	FUNCTION_21
0x4000831	    0x49c78424080d	              mov qword [r12 + 0xd08], 0	       934	easy.c	FUNCTION_21
0x400083d	    0x418b85880b00	           mov eax, dword [r13 + 0xb88] 	       936	easy.c	FUNCTION_21
0x4000844	    0x41898424880b	            mov dword [r12 + 0xb88], eax	       936	easy.c	FUNCTION_21
0x400084c	    0x410fb685800b	          movzx eax, byte [r13 + 0xb80] 	       937	easy.c	FUNCTION_21
0x4000854	    0x41888424800b	              mov byte [r12 + 0xb80], al	       937	easy.c	FUNCTION_21
0x400085c	    0x498b85480b00	           mov rax, qword [r13 + 0xb48] 	       939	easy.c	FUNCTION_21	IF_5
0x4000863	          0x4885c0	                           test rax, rax	       939	easy.c	FUNCTION_21	IF_5
0x4000866	            0x7430	                            je 0x4000898	       939	easy.c	FUNCTION_21	IF_5
0x4000868	    0x410fb68d7105	          movzx ecx, byte [r13 + 0x571] 	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x4000870	    0x498b9424480b	           mov rdx, qword [r12 + 0xb48] 	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x4000878	    0x488bb0000800	           mov rsi, qword [rax + 0x800] 	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x400087f	          0x4c89ef	                            mov rdi, r13	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x4000882	      0xe800000000	                          call 0x4000887	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x4000887	    0x49898424480b	            mov qword [r12 + 0xb48], rax	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x400088f	          0x4885c0	                           test rax, rax	       946	easy.c	FUNCTION_21	IF_5	IF_6
0x4000892	     0xf84a6000000	                            je 0x400093e	       946	easy.c	FUNCTION_21	IF_5	IF_6
0x4000898	    0x498bbd380b00	           mov rdi, qword [r13 + 0xb38] 	       951	easy.c	FUNCTION_21	IF_7
0x400089f	          0x4885ff	                           test rdi, rdi	       951	easy.c	FUNCTION_21	IF_7
0x40008a2	            0x7416	                            je 0x40008ba	       951	easy.c	FUNCTION_21	IF_7
0x40008a4	      0xe800000000	                          call 0x40008a9	       953	easy.c	FUNCTION_21	IF_7	CALL_6
0x40008a9	    0x49898424380b	            mov qword [r12 + 0xb38], rax	       952	easy.c	FUNCTION_21	IF_7
0x40008b1	          0x4885c0	                           test rax, rax	       954	easy.c	FUNCTION_21	IF_7	IF_8
0x40008b4	     0xf8484000000	                            je 0x400093e	       954	easy.c	FUNCTION_21	IF_7	IF_8
0x40008ba	    0x498bbd180b00	           mov rdi, qword [r13 + 0xb18] 	       958	easy.c	FUNCTION_21	IF_9
0x40008c1	          0x4885ff	                           test rdi, rdi	       958	easy.c	FUNCTION_21	IF_9
0x40008c4	            0x741c	                            je 0x40008e2	       958	easy.c	FUNCTION_21	IF_9
0x40008c6	    0xff1500000000	                 call qword [0x040008cc]	       959	easy.c	FUNCTION_21	IF_9	CALL_7
0x40008cc	    0x49898424180b	            mov qword [r12 + 0xb18], rax	       959	easy.c	FUNCTION_21	IF_9	CALL_7
0x40008d4	          0x4885c0	                           test rax, rax	       960	easy.c	FUNCTION_21	IF_9	IF_10
0x40008d7	            0x7465	                            je 0x400093e	       960	easy.c	FUNCTION_21	IF_9	IF_10
0x40008d9	    0x41c68424200b	               mov byte [r12 + 0xb20], 1	       962	easy.c	FUNCTION_21	IF_9
0x40008e2	    0x498bbd280b00	           mov rdi, qword [r13 + 0xb28] 	       965	easy.c	FUNCTION_21	IF_11
0x40008e9	          0x4885ff	                           test rdi, rdi	       965	easy.c	FUNCTION_21	IF_11
0x40008ec	            0x741c	                            je 0x400090a	       965	easy.c	FUNCTION_21	IF_11
0x40008ee	    0xff1500000000	                 call qword [0x040008f4]	       966	easy.c	FUNCTION_21	IF_11	CALL_8
0x40008f4	    0x49898424280b	            mov qword [r12 + 0xb28], rax	       966	easy.c	FUNCTION_21	IF_11	CALL_8
0x40008fc	          0x4885c0	                           test rax, rax	       967	easy.c	FUNCTION_21	IF_11	IF_12
0x40008ff	            0x743d	                            je 0x400093e	       967	easy.c	FUNCTION_21	IF_11	IF_12
0x4000901	    0x41c68424300b	               mov byte [r12 + 0xb30], 1	       969	easy.c	FUNCTION_21	IF_11
0x400090a	    0x498bb5984e00	          mov rsi, qword [r13 + 0x4e98] 	       973	easy.c	FUNCTION_21	IF_13	CALL_9
0x4000911	    0x498dbc24984e	                 lea rdi, [r12 + 0x4e98]	       973	easy.c	FUNCTION_21	IF_13	CALL_9
0x4000919	      0xe800000000	                          call 0x400091e	       973	easy.c	FUNCTION_21	IF_13	CALL_9
0x400091e	            0x85c0	                           test eax, eax	       973	easy.c	FUNCTION_21	IF_13	CALL_9
0x4000920	            0x751c	                           jne 0x400093e	       973	easy.c	FUNCTION_21	IF_13	CALL_9
0x4000922	          0x4c89e7	                            mov rdi, r12	       979	easy.c	FUNCTION_21	CALL_11
0x4000925	      0xe800000000	                          call 0x400092a	       979	easy.c	FUNCTION_21	CALL_11
0x400092a	    0x41c78424d052	   mov dword [r12 + 0x52d0], 0xc0dedbad 	       981	easy.c	FUNCTION_21
0x4000936	          0x4c89e0	                            mov rax, r12	       985	easy.c	FUNCTION_21
0x4000939	      0xe997000000	                           jmp 0x40009d5	       985	easy.c	FUNCTION_21
0x400093e	    0x498bbc24380b	           mov rdi, qword [r12 + 0xb38] 	       990	easy.c	FUNCTION_21	IF_14	CALL_12
0x4000946	      0xe800000000	                          call 0x400094b	       990	easy.c	FUNCTION_21	IF_14	CALL_12
0x400094b	    0x49c78424380b	              mov qword [r12 + 0xb38], 0	       991	easy.c	FUNCTION_21	IF_14
0x4000957	    0x498bbc24200d	           mov rdi, qword [r12 + 0xd20] 	       992	easy.c	FUNCTION_21	IF_14	CALL_13
0x400095f	    0xff1500000000	                 call qword [0x04000965]	       992	easy.c	FUNCTION_21	IF_14	CALL_13
0x4000965	    0x49c78424200d	              mov qword [r12 + 0xd20], 0	       992	easy.c	FUNCTION_21	IF_14	CALL_13
0x4000971	    0x498bbc24100d	           mov rdi, qword [r12 + 0xd10] 	       993	easy.c	FUNCTION_21	IF_14	CALL_14
0x4000979	    0xff1500000000	                 call qword [0x0400097f]	       993	easy.c	FUNCTION_21	IF_14	CALL_14
0x400097f	    0x49c78424100d	              mov qword [r12 + 0xd10], 0	       993	easy.c	FUNCTION_21	IF_14	CALL_14
0x400098b	    0x498bbc24180b	           mov rdi, qword [r12 + 0xb18] 	       994	easy.c	FUNCTION_21	IF_14	CALL_15
0x4000993	    0xff1500000000	                 call qword [0x04000999]	       994	easy.c	FUNCTION_21	IF_14	CALL_15
0x4000999	    0x49c78424180b	              mov qword [r12 + 0xb18], 0	       994	easy.c	FUNCTION_21	IF_14	CALL_15
0x40009a5	    0x498bbc24280b	           mov rdi, qword [r12 + 0xb28] 	       995	easy.c	FUNCTION_21	IF_14	CALL_16
0x40009ad	    0xff1500000000	                 call qword [0x040009b3]	       995	easy.c	FUNCTION_21	IF_14	CALL_16
0x40009b3	    0x49c78424280b	              mov qword [r12 + 0xb28], 0	       995	easy.c	FUNCTION_21	IF_14	CALL_16
0x40009bf	          0x4c89e7	                            mov rdi, r12	       996	easy.c	FUNCTION_21	IF_14	CALL_17
0x40009c2	      0xe800000000	                          call 0x40009c7	       996	easy.c	FUNCTION_21	IF_14	CALL_17
0x40009c7	          0x4c89e7	                            mov rdi, r12	       997	easy.c	FUNCTION_21	IF_14	CALL_18
0x40009ca	    0xff1500000000	                 call qword [0x040009d0]	       997	easy.c	FUNCTION_21	IF_14	CALL_18
0x40009d0	      0xb800000000	                              mov eax, 0	      1000	easy.c	FUNCTION_21
0x40009d5	              0x5b	                                 pop rbx	      1001	easy.c	FUNCTION_21
0x40009d6	              0x5d	                                 pop rbp	      1001	easy.c	FUNCTION_21
0x40009d7	            0x415c	                                 pop r12	      1001	easy.c	FUNCTION_21
0x40009d9	            0x415d	                                 pop r13	      1001	easy.c	FUNCTION_21
0x40009db	            0x415e	                                 pop r14	      1001	easy.c	FUNCTION_21
0x40009dd	              0xc3	                                     ret	      1001	easy.c	FUNCTION_21
curl_easy_cleanup	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,1:CALL,1:DO,0	25
0x40005d3	              0x53	                                push rbx	       829	easy.c	FUNCTION_18
0x40005d4	    0x4881ecb00000	                           sub rsp, 0xb0	       829	easy.c	FUNCTION_18
0x40005db	    0x64488b042528	                mov rax, qword fs:[0x28]	       829	easy.c	FUNCTION_18
0x40005e4	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       829	easy.c	FUNCTION_18
0x40005ec	            0x31c0	                            xor eax, eax	       829	easy.c	FUNCTION_18
0x40005ee	          0x4885ff	                           test rdi, rdi	       832	easy.c	FUNCTION_18	IF_1
0x40005f1	            0x742f	                            je 0x4000622	       832	easy.c	FUNCTION_18	IF_1
0x40005f3	          0x4889fb	                            mov rbx, rdi	       832	easy.c	FUNCTION_18	IF_1
0x40005f6	          0x4889e6	                            mov rsi, rsp	       835	easy.c	FUNCTION_18
0x40005f9	      0xe8f8faffff	                 call sym.sigpipe_ignore	       835	easy.c	FUNCTION_18
0x40005fe	          0x4889df	                            mov rdi, rbx	       836	easy.c	FUNCTION_18	CALL_1
0x4000601	      0xe800000000	                          call 0x4000606	       836	easy.c	FUNCTION_18	CALL_1
0x4000606	    0x80bc24980000	                cmp byte [rsp + 0x98], 0	        66	sigpipe.h	IF_2
0x400060e	            0x7512	                           jne 0x4000622	        66	sigpipe.h	IF_2
0x4000610	          0x4889e6	                            mov rsi, rsp	        68	sigpipe.h	CALL_7
0x4000613	      0xba00000000	                              mov edx, 0	        68	sigpipe.h	CALL_7
0x4000618	      0xbf0d000000	                            mov edi, 0xd	        68	sigpipe.h	CALL_7
0x400061d	      0xe800000000	                          call 0x4000622	        68	sigpipe.h	CALL_7
0x4000622	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       838	easy.c	FUNCTION_18
0x400062a	    0x644833042528	                xor rax, qword fs:[0x28]	       838	easy.c	FUNCTION_18
0x4000633	            0x7405	                            je 0x400063a	       838	easy.c	FUNCTION_18
0x4000635	      0xe800000000	                          call 0x400063a	       838	easy.c	FUNCTION_18
0x400063a	    0x4881c4b00000	                           add rsp, 0xb0	       838	easy.c	FUNCTION_18
0x4000641	              0x5b	                                 pop rbx	       838	easy.c	FUNCTION_18
0x4000642	              0xc3	                                     ret	       838	easy.c	FUNCTION_18
global_init	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,11:CALL,23:DO,0	41
0x4000040	    0x8b1500000000	            mov edx, dword [0x04000046] 	       206	easy.c	FUNCTION_3	IF_1
0x4000046	          0x8d4201	                      lea eax, [rdx + 1]	       206	easy.c	FUNCTION_3	IF_1
0x4000049	    0x890500000000	            mov dword [0x0400004f], eax 	       206	easy.c	FUNCTION_3	IF_1
0x400004f	      0xb900000000	                              mov ecx, 0	       207	easy.c	FUNCTION_3	IF_1
0x4000054	            0x85d2	                           test edx, edx	       206	easy.c	FUNCTION_3	IF_1
0x4000056	     0xf8597000000	                           jne 0x40000f3	       206	easy.c	FUNCTION_3	IF_1
0x400005c	              0x53	                                push rbx	       205	easy.c	FUNCTION_3
0x400005d	          0x4084f6	                           test sil, sil	       209	easy.c	FUNCTION_3	IF_2
0x4000060	            0x7446	                            je 0x40000a8	       209	easy.c	FUNCTION_3	IF_2
0x4000062	    0x488b05000000	            mov rax, qword [0x04000069] 	       211	easy.c	FUNCTION_3	IF_2
0x4000069	    0x488905000000	            mov qword [0x04000070], rax 	       211	easy.c	FUNCTION_3	IF_2
0x4000070	    0x488b05000000	            mov rax, qword [0x04000077] 	       212	easy.c	FUNCTION_3	IF_2
0x4000077	    0x488905000000	            mov qword [0x0400007e], rax 	       212	easy.c	FUNCTION_3	IF_2
0x400007e	    0x488b05000000	            mov rax, qword [0x04000085] 	       213	easy.c	FUNCTION_3	IF_2
0x4000085	    0x488905000000	            mov qword [0x0400008c], rax 	       213	easy.c	FUNCTION_3	IF_2
0x400008c	    0x488b05000000	            mov rax, qword [0x04000093] 	       214	easy.c	FUNCTION_3	IF_2
0x4000093	    0x488905000000	            mov qword [0x0400009a], rax 	       214	easy.c	FUNCTION_3	IF_2
0x400009a	    0x488b05000000	            mov rax, qword [0x040000a1] 	       215	easy.c	FUNCTION_3	IF_2
0x40000a1	    0x488905000000	            mov qword [0x040000a8], rax 	       215	easy.c	FUNCTION_3	IF_2
0x40000a8	          0x4889fb	                            mov rbx, rdi	       215	easy.c	FUNCTION_3	IF_2
0x40000ab	      0xe800000000	                          call 0x40000b0	       221	easy.c	FUNCTION_3	IF_3	CALL_1
0x40000b0	      0xb902000000	                              mov ecx, 2	       223	easy.c	FUNCTION_3	IF_3
0x40000b5	            0x85c0	                           test eax, eax	       221	easy.c	FUNCTION_3	IF_3	CALL_1
0x40000b7	            0x7436	                            je 0x40000ef	       221	easy.c	FUNCTION_3	IF_3	CALL_1
0x40000b9	      0xe800000000	                          call 0x40000be	       245	easy.c	FUNCTION_3	IF_8	CALL_13
0x40000be	      0xb902000000	                              mov ecx, 2	       247	easy.c	FUNCTION_3	IF_8
0x40000c3	            0x85c0	                           test eax, eax	       245	easy.c	FUNCTION_3	IF_8	CALL_13
0x40000c5	            0x7528	                           jne 0x40000ef	       245	easy.c	FUNCTION_3	IF_8	CALL_13
0x40000c7	      0xe800000000	                          call 0x40000cc	       250	easy.c	FUNCTION_3	CALL_16
0x40000cc	          0xf6c304	                              test bl, 4	       266	easy.c	FUNCTION_3	IF_11
0x40000cf	            0x740d	                            je 0x40000de	       266	easy.c	FUNCTION_3	IF_11
0x40000d1	    0x488b05000000	            mov rax, qword [0x040000d8] 	       267	easy.c	FUNCTION_3	IF_11
0x40000d8	    0xc70001000000	                      mov dword [rax], 1	       267	easy.c	FUNCTION_3	IF_11
0x40000de	    0x48891d000000	            mov qword [0x040000e5], rbx 	       269	easy.c	FUNCTION_3
0x40000e5	      0xe800000000	                          call 0x40000ea	       271	easy.c	FUNCTION_3	CALL_23
0x40000ea	      0xb900000000	                              mov ecx, 0	       273	easy.c	FUNCTION_3
0x40000ef	            0x89c8	                            mov eax, ecx	       274	easy.c	FUNCTION_3
0x40000f1	              0x5b	                                 pop rbx	       274	easy.c	FUNCTION_3
0x40000f2	              0xc3	                                     ret	       274	easy.c	FUNCTION_3
0x40000f3	            0x89c8	                            mov eax, ecx	       274	easy.c	FUNCTION_3
0x40000f5	              0xc3	                                     ret	       274	easy.c	FUNCTION_3
curl_easy_recv	ELSE,0:WHILE,0:FOR,0:SWITCH,0:functions,0:IF,3:CALL,3:DO,0	47
0x4000c91	            0x4155	                                push r13	      1147	easy.c	FUNCTION_25
0x4000c93	            0x4154	                                push r12	      1147	easy.c	FUNCTION_25
0x4000c95	              0x55	                                push rbp	      1147	easy.c	FUNCTION_25
0x4000c96	              0x53	                                push rbx	      1147	easy.c	FUNCTION_25
0x4000c97	        0x4883ec28	                           sub rsp, 0x28	      1147	easy.c	FUNCTION_25
0x4000c9b	          0x4889fb	                            mov rbx, rdi	      1147	easy.c	FUNCTION_25
0x4000c9e	          0x4989f4	                            mov r12, rsi	      1147	easy.c	FUNCTION_25
0x4000ca1	          0x4989d5	                            mov r13, rdx	      1147	easy.c	FUNCTION_25
0x4000ca4	          0x4889cd	                            mov rbp, rcx	      1147	easy.c	FUNCTION_25
0x4000ca7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1147	easy.c	FUNCTION_25
0x4000cb0	      0x4889442418	             mov qword [rsp + 0x18], rax	      1147	easy.c	FUNCTION_25
0x4000cb5	            0x31c0	                            xor eax, eax	      1147	easy.c	FUNCTION_25
0x4000cb7	      0xe800000000	                          call 0x4000cbc	      1153	easy.c	FUNCTION_25	IF_1	CALL_1
0x4000cbc	      0xba5d000000	                           mov edx, 0x5d	      1154	easy.c	FUNCTION_25	IF_1
0x4000cc1	            0x84c0	                             test al, al	      1153	easy.c	FUNCTION_25	IF_1	CALL_1
0x4000cc3	            0x754a	                           jne 0x4000d0f	      1153	easy.c	FUNCTION_25	IF_1	CALL_1
0x4000cc5	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1156	easy.c	FUNCTION_25	CALL_2
0x4000cca	      0x488d742404	                      lea rsi, [rsp + 4]	      1156	easy.c	FUNCTION_25	CALL_2
0x4000ccf	          0x4889df	                            mov rdi, rbx	      1156	easy.c	FUNCTION_25	CALL_2
0x4000cd2	      0xe8e1f4ffff	                call sym.easy_connection	      1156	easy.c	FUNCTION_25	CALL_2
0x4000cd7	            0x89c2	                            mov edx, eax	      1158	easy.c	FUNCTION_25	IF_2
0x4000cd9	            0x85c0	                           test eax, eax	      1157	easy.c	FUNCTION_25	IF_2
0x4000cdb	            0x7532	                           jne 0x4000d0f	      1157	easy.c	FUNCTION_25	IF_2
0x4000cdd	    0x48c745000000	                      mov qword [rbp], 0	      1160	easy.c	FUNCTION_25
0x4000ce5	      0x4c8d442408	                       lea r8, [rsp + 8]	      1161	easy.c	FUNCTION_25	CALL_3
0x4000cea	          0x4c89e9	                            mov rcx, r13	      1161	easy.c	FUNCTION_25	CALL_3
0x4000ced	          0x4c89e2	                            mov rdx, r12	      1161	easy.c	FUNCTION_25	CALL_3
0x4000cf0	        0x8b742404	                mov esi, dword [rsp + 4]	      1161	easy.c	FUNCTION_25	CALL_3
0x4000cf4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1161	easy.c	FUNCTION_25	CALL_3
0x4000cf9	      0xe800000000	                          call 0x4000cfe	      1161	easy.c	FUNCTION_25	CALL_3
0x4000cfe	            0x89c2	                            mov edx, eax	      1164	easy.c	FUNCTION_25	IF_3
0x4000d00	            0x85c0	                           test eax, eax	      1163	easy.c	FUNCTION_25	IF_3
0x4000d02	            0x750b	                           jne 0x4000d0f	      1163	easy.c	FUNCTION_25	IF_3
0x4000d04	      0x488b542408	                mov rdx, qword [rsp + 8]	      1166	easy.c	FUNCTION_25
0x4000d09	        0x48895500	                    mov qword [rbp], rdx	      1166	easy.c	FUNCTION_25
0x4000d0d	            0x89c2	                            mov edx, eax	      1168	easy.c	FUNCTION_25
0x4000d0f	            0x89d0	                            mov eax, edx	      1169	easy.c	FUNCTION_25
0x4000d11	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1169	easy.c	FUNCTION_25
0x4000d16	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1169	easy.c	FUNCTION_25
0x4000d1f	            0x7405	                            je 0x4000d26	      1169	easy.c	FUNCTION_25
0x4000d21	      0xe800000000	                          call 0x4000d26	      1169	easy.c	FUNCTION_25
0x4000d26	        0x4883c428	                           add rsp, 0x28	      1169	easy.c	FUNCTION_25
0x4000d2a	              0x5b	                                 pop rbx	      1169	easy.c	FUNCTION_25
0x4000d2b	              0x5d	                                 pop rbp	      1169	easy.c	FUNCTION_25
0x4000d2c	            0x415c	                                 pop r12	      1169	easy.c	FUNCTION_25
0x4000d2e	            0x415d	                                 pop r13	      1169	easy.c	FUNCTION_25
0x4000d30	              0xc3	                                     ret	      1169	easy.c	FUNCTION_25
