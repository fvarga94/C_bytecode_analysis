Curl_splaygetbest	ELSE,0:SWITCH,0:CALL,1:DO,0:WHILE,0:IF,3:FOR,0:functions,0	47
0x4000235	          0x4885d2	                           test rdx, rdx	       161	splay.c	FUNCTION_3	IF_1
0x4000238	            0x750d	                           jne 0x4000247	       161	splay.c	FUNCTION_3	IF_1
0x400023a	    0x48c701000000	                      mov qword [rcx], 0	       162	splay.c	FUNCTION_3	IF_1
0x4000241	      0xb800000000	                              mov eax, 0	       163	splay.c	FUNCTION_3	IF_1
0x4000246	              0xc3	                                     ret	       196	splay.c	FUNCTION_3
0x4000247	            0x4154	                                push r12	       157	splay.c	FUNCTION_3
0x4000249	              0x55	                                push rbp	       157	splay.c	FUNCTION_3
0x400024a	              0x53	                                push rbx	       157	splay.c	FUNCTION_3
0x400024b	          0x4889cd	                            mov rbp, rcx	       157	splay.c	FUNCTION_3
0x400024e	          0x4989f4	                            mov r12, rsi	       157	splay.c	FUNCTION_3
0x4000251	          0x4889fb	                            mov rbx, rdi	       157	splay.c	FUNCTION_3
0x4000254	    0x488b3d000000	            mov rdi, qword [0x0400025b] 	       167	splay.c	FUNCTION_3	CALL_1
0x400025b	    0x488b35000000	            mov rsi, qword [0x04000262] 	       167	splay.c	FUNCTION_3	CALL_1
0x4000262	      0xe800000000	                          call 0x4000267	       167	splay.c	FUNCTION_3	CALL_1
0x4000267	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       168	splay.c	FUNCTION_3	IF_2
0x400026b	          0x4839d3	                            cmp rbx, rdx	       168	splay.c	FUNCTION_3	IF_2
0x400026e	            0x7c08	                            jl 0x4000278	       168	splay.c	FUNCTION_3	IF_2
0x4000270	            0x7f10	                            jg 0x4000282	       168	splay.c	FUNCTION_3	IF_2
0x4000272	        0x44396028	           cmp dword [rax + 0x28], r12d 	       168	splay.c	FUNCTION_3	IF_2
0x4000276	            0x7e0a	                           jle 0x4000282	       168	splay.c	FUNCTION_3	IF_2
0x4000278	    0x48c745000000	                      mov qword [rbp], 0	       170	splay.c	FUNCTION_3	IF_2
0x4000280	            0xeb4b	                           jmp 0x40002cd	       171	splay.c	FUNCTION_3	IF_2
0x4000282	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       175	splay.c	FUNCTION_3
0x4000286	          0x4839d0	                            cmp rax, rdx	       176	splay.c	FUNCTION_3	IF_3
0x4000289	            0x7437	                            je 0x40002c2	       176	splay.c	FUNCTION_3	IF_3
0x400028b	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       181	splay.c	FUNCTION_3	IF_3
0x400028f	        0x488b5828	            mov rbx, qword [rax + 0x28] 	       181	splay.c	FUNCTION_3	IF_3
0x4000293	        0x48894a20	             mov qword [rdx + 0x20], rcx	       181	splay.c	FUNCTION_3	IF_3
0x4000297	        0x48895a28	             mov qword [rdx + 0x28], rbx	       181	splay.c	FUNCTION_3	IF_3
0x400029b	        0x488b4808	                mov rcx, qword [rax + 8]	       182	splay.c	FUNCTION_3	IF_3
0x400029f	        0x48894a08	                mov qword [rdx + 8], rcx	       182	splay.c	FUNCTION_3	IF_3
0x40002a3	          0x488b08	                    mov rcx, qword [rax]	       183	splay.c	FUNCTION_3	IF_3
0x40002a6	          0x48890a	                    mov qword [rdx], rcx	       183	splay.c	FUNCTION_3	IF_3
0x40002a9	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       184	splay.c	FUNCTION_3	IF_3
0x40002ad	        0x48894a18	             mov qword [rdx + 0x18], rcx	       184	splay.c	FUNCTION_3	IF_3
0x40002b1	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       185	splay.c	FUNCTION_3	IF_3
0x40002b5	        0x48895110	             mov qword [rcx + 0x10], rdx	       185	splay.c	FUNCTION_3	IF_3
0x40002b9	        0x48894500	                    mov qword [rbp], rax	       187	splay.c	FUNCTION_3	IF_3
0x40002bd	          0x4889d0	                            mov rax, rdx	       188	splay.c	FUNCTION_3	IF_3
0x40002c0	            0xeb0b	                           jmp 0x40002cd	       188	splay.c	FUNCTION_3	IF_3
0x40002c2	        0x488b5008	                mov rdx, qword [rax + 8]	       192	splay.c	FUNCTION_3
0x40002c6	        0x48894500	                    mov qword [rbp], rax	       193	splay.c	FUNCTION_3
0x40002ca	          0x4889d0	                            mov rax, rdx	       195	splay.c	FUNCTION_3
0x40002cd	              0x5b	                                 pop rbx	       196	splay.c	FUNCTION_3
0x40002ce	              0x5d	                                 pop rbp	       196	splay.c	FUNCTION_3
0x40002cf	            0x415c	                                 pop r12	       196	splay.c	FUNCTION_3
0x40002d1	              0xc3	                                     ret	       196	splay.c	FUNCTION_3
Curl_splayinsert	ELSE,2:SWITCH,0:CALL,1:DO,0:WHILE,0:IF,5:FOR,0:functions,0	70
0x400014b	          0x4885c9	                           test rcx, rcx	       108	splay.c	ELSE_2	FUNCTION_2	IF_1
0x400014e	     0xf84cb000000	                            je 0x400021f	       108	splay.c	ELSE_2	FUNCTION_2	IF_1
0x4000154	            0x4155	                                push r13	       103	splay.c	ELSE_2	FUNCTION_2
0x4000156	            0x4154	                                push r12	       103	splay.c	ELSE_2	FUNCTION_2
0x4000158	              0x55	                                push rbp	       103	splay.c	ELSE_2	FUNCTION_2
0x4000159	              0x53	                                push rbx	       103	splay.c	ELSE_2	FUNCTION_2
0x400015a	        0x4883ec08	                              sub rsp, 8	       103	splay.c	ELSE_2	FUNCTION_2
0x400015e	          0x4989fd	                            mov r13, rdi	       103	splay.c	ELSE_2	FUNCTION_2
0x4000161	            0x89f5	                            mov ebp, esi	       103	splay.c	ELSE_2	FUNCTION_2
0x4000163	          0x4889cb	                            mov rbx, rcx	       103	splay.c	ELSE_2	FUNCTION_2
0x4000166	          0x4989f4	                            mov r12, rsi	       103	splay.c	ELSE_2	FUNCTION_2
0x4000169	          0x4885d2	                           test rdx, rdx	       111	splay.c	ELSE_2	FUNCTION_2	IF_2
0x400016c	            0x7447	                            je 0x40001b5	       111	splay.c	ELSE_2	FUNCTION_2	IF_2
0x400016e	          0x4c89e6	                            mov rsi, r12	       112	splay.c	ELSE_2	FUNCTION_2	IF_2	CALL_1
0x4000171	      0xe800000000	                          call 0x4000176	       112	splay.c	ELSE_2	FUNCTION_2	IF_2	CALL_1
0x4000176	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       113	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400017a	          0x4c39ea	                            cmp rdx, r13	       113	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400017d	            0x7531	                           jne 0x40001b0	       113	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400017f	          0x396828	            cmp dword [rax + 0x28], ebp 	       113	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x4000182	     0xf859b000000	                           jne 0x4000223	       113	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x4000188	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       118	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400018f	        0x48895320	             mov qword [rbx + 0x20], rdx	       118	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x4000193	          0x895328	             mov dword [rbx + 0x28], edx	       118	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x4000196	        0x48894310	             mov qword [rbx + 0x10], rax	       120	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400019a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       121	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400019e	        0x48895318	             mov qword [rbx + 0x18], rdx	       121	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x40001a2	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       122	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x40001a6	        0x48895a10	             mov qword [rdx + 0x10], rbx	       122	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x40001aa	        0x48895818	             mov qword [rax + 0x18], rbx	       123	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x40001ae	            0xeb7a	                           jmp 0x400022a	       125	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x40001b0	          0x4885c0	                           test rax, rax	       129	splay.c	ELSE_2	FUNCTION_2	IF_4
0x40001b3	            0x7511	                           jne 0x40001c6	       129	splay.c	ELSE_2	FUNCTION_2	IF_4
0x40001b5	    0x48c743080000	                  mov qword [rbx + 8], 0	       130	splay.c	ELSE_2	FUNCTION_2	IF_4
0x40001bd	    0x48c703000000	                      mov qword [rbx], 0	       130	splay.c	ELSE_2	FUNCTION_2	IF_4
0x40001c4	            0xeb32	                           jmp 0x40001f8	       130	splay.c	ELSE_2	FUNCTION_2	IF_4
0x40001c6	          0x4c39ea	                            cmp rdx, r13	       132	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001c9	            0x7f07	                            jg 0x40001d2	       132	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001cb	            0x7c18	                            jl 0x40001e5	       132	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001cd	          0x396828	            cmp dword [rax + 0x28], ebp 	       132	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001d0	            0x7e13	                           jle 0x40001e5	       132	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001d2	          0x488b10	                    mov rdx, qword [rax]	       133	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001d5	          0x488913	                    mov qword [rbx], rdx	       133	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001d8	        0x48894308	                mov qword [rbx + 8], rax	       134	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001dc	    0x48c700000000	                      mov qword [rax], 0	       135	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001e3	            0xeb13	                           jmp 0x40001f8	       135	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001e5	        0x488b5008	                mov rdx, qword [rax + 8]	       139	splay.c	FUNCTION_2
0x40001e9	        0x48895308	                mov qword [rbx + 8], rdx	       139	splay.c	FUNCTION_2
0x40001ed	          0x488903	                    mov qword [rbx], rax	       140	splay.c	FUNCTION_2
0x40001f0	    0x48c740080000	                  mov qword [rax + 8], 0	       141	splay.c	FUNCTION_2
0x40001f8	            0x89e8	                            mov eax, ebp	       143	splay.c	FUNCTION_2	ELSE_2
0x40001fa	    0x48bd00000000	          movabs rbp, 0xffffffff00000000	       143	splay.c	FUNCTION_2	ELSE_2
0x4000204	          0x4921ec	                            and r12, rbp	       143	splay.c	FUNCTION_2	ELSE_2
0x4000207	          0x4909c4	                             or r12, rax	       143	splay.c	FUNCTION_2	ELSE_2
0x400020a	        0x4c896b20	             mov qword [rbx + 0x20], r13	       143	splay.c	FUNCTION_2	ELSE_2
0x400020e	        0x4c896328	             mov qword [rbx + 0x28], r12	       143	splay.c	FUNCTION_2	ELSE_2
0x4000212	        0x48895b10	             mov qword [rbx + 0x10], rbx	       146	splay.c	FUNCTION_2	ELSE_2
0x4000216	        0x48895b18	             mov qword [rbx + 0x18], rbx	       147	splay.c	FUNCTION_2	ELSE_2
0x400021a	          0x4889d8	                            mov rax, rbx	       148	splay.c	FUNCTION_2	ELSE_2
0x400021d	            0xeb0b	                           jmp 0x400022a	       148	splay.c	FUNCTION_2	ELSE_2
0x400021f	          0x4889d0	                            mov rax, rdx	       109	splay.c	ELSE_2	FUNCTION_2	IF_1
0x4000222	              0xc3	                                     ret	       149	splay.c	FUNCTION_2	ELSE_2
0x4000223	          0x4885c0	                           test rax, rax	       129	splay.c	ELSE_2	FUNCTION_2	IF_4
0x4000226	            0x75a5	                           jne 0x40001cd	       129	splay.c	ELSE_2	FUNCTION_2	IF_4
0x4000228	            0xeb8b	                           jmp 0x40001b5	       129	splay.c	ELSE_2	FUNCTION_2	IF_4
0x400022a	        0x4883c408	                              add rsp, 8	       149	splay.c	FUNCTION_2	ELSE_2
0x400022e	              0x5b	                                 pop rbx	       149	splay.c	FUNCTION_2	ELSE_2
0x400022f	              0x5d	                                 pop rbp	       149	splay.c	FUNCTION_2	ELSE_2
0x4000230	            0x415c	                                 pop r12	       149	splay.c	FUNCTION_2	ELSE_2
0x4000232	            0x415d	                                 pop r13	       149	splay.c	FUNCTION_2	ELSE_2
0x4000234	              0xc3	                                     ret	       149	splay.c	FUNCTION_2	ELSE_2
Curl_splay	ELSE,2:SWITCH,0:CALL,0:DO,0:WHILE,0:IF,9:FOR,1:functions,0	78
0x4000040	        0x4883ec48	                           sub rsp, 0x48	        42	splay.c	FUNCTION_1
0x4000044	          0x4889d0	                            mov rax, rdx	        42	splay.c	FUNCTION_1
0x4000047	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	        42	splay.c	FUNCTION_1
0x4000050	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        42	splay.c	FUNCTION_1
0x4000055	            0x31c9	                            xor ecx, ecx	        42	splay.c	FUNCTION_1
0x4000057	          0x4885d2	                           test rdx, rdx	        46	splay.c	FUNCTION_1	IF_1
0x400005a	     0xf84d1000000	                            je 0x4000131	        46	splay.c	FUNCTION_1	IF_1
0x4000060	    0x48c744240800	                  mov qword [rsp + 8], 0	        48	splay.c	FUNCTION_1
0x4000069	    0x48c704240000	                      mov qword [rsp], 0	        48	splay.c	FUNCTION_1
0x4000071	          0x4989e1	                             mov r9, rsp	        49	splay.c	FUNCTION_1
0x4000074	          0x4989e0	                             mov r8, rsp	        49	splay.c	FUNCTION_1
0x4000077	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        52	splay.c	FUNCTION_1	FOR_1
0x400007b	          0x4839d7	                            cmp rdi, rdx	        52	splay.c	FUNCTION_1	FOR_1
0x400007e	            0x7c10	                            jl 0x4000090	        52	splay.c	FUNCTION_1	FOR_1
0x4000080	            0x7f4c	                            jg 0x40000ce	        52	splay.c	FUNCTION_1	FOR_1
0x4000082	          0x8b5028	            mov edx, dword [rax + 0x28] 	        52	splay.c	FUNCTION_1	FOR_1
0x4000085	            0x39d6	                            cmp esi, edx	        52	splay.c	FUNCTION_1	FOR_1
0x4000087	            0x7c07	                            jl 0x4000090	        52	splay.c	FUNCTION_1	FOR_1
0x4000089	            0x7f43	                            jg 0x40000ce	        68	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6
0x400008b	      0xe983000000	                           jmp 0x4000113	        68	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6
0x4000090	          0x488b10	                    mov rdx, qword [rax]	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x4000093	          0x4885d2	                           test rdx, rdx	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x4000096	            0x747b	                            je 0x4000113	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x4000098	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x400009c	          0x4839cf	                            cmp rdi, rcx	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x400009f	            0x7c07	                            jl 0x40000a8	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000a1	            0x7f18	                            jg 0x40000bb	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000a3	          0x3b7228	            cmp esi, dword [rdx + 0x28] 	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000a6	            0x7d18	                           jge 0x40000c0	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000a8	        0x488b4a08	                mov rcx, qword [rdx + 8]	        58	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000ac	          0x488908	                    mov qword [rax], rcx	        58	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000af	        0x48894208	                mov qword [rdx + 8], rax	        59	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000b3	        0x48833a00	                      cmp qword [rdx], 0	        61	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4	IF_5
0x40000b7	            0x750a	                           jne 0x40000c3	        61	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4	IF_5
0x40000b9	            0xeb50	                           jmp 0x400010b	        61	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4	IF_5
0x40000bb	          0x4889c2	                            mov rdx, rax	        61	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4	IF_5
0x40000be	            0xeb03	                           jmp 0x40000c3	        61	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4	IF_5
0x40000c0	          0x4889c2	                            mov rdx, rax	        61	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4	IF_5
0x40000c3	          0x498911	                     mov qword [r9], rdx	        64	splay.c	FUNCTION_1	FOR_1	IF_2
0x40000c6	          0x488b02	                    mov rax, qword [rdx]	        66	splay.c	FUNCTION_1	FOR_1	IF_2
0x40000c9	          0x4989d1	                             mov r9, rdx	        65	splay.c	FUNCTION_1	FOR_1	IF_2
0x40000cc	            0xeba9	                           jmp 0x4000077	        65	splay.c	FUNCTION_1	FOR_1	IF_2
0x40000ce	        0x488b5008	                mov rdx, qword [rax + 8]	        69	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_7
0x40000d2	          0x4885d2	                           test rdx, rdx	        69	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_7
0x40000d5	            0x743c	                            je 0x4000113	        69	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_7
0x40000d7	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	        71	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000db	          0x4839cf	                            cmp rdi, rcx	        71	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000de	            0x7c1b	                            jl 0x40000fb	        71	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000e0	            0x7f05	                            jg 0x40000e7	        71	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000e2	          0x3b7228	            cmp esi, dword [rdx + 0x28] 	        71	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000e5	            0x7e14	                           jle 0x40000fb	        71	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000e7	          0x488b0a	                    mov rcx, qword [rdx]	        73	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000ea	        0x48894808	                mov qword [rax + 8], rcx	        73	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000ee	          0x488902	                    mov qword [rdx], rax	        74	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000f1	      0x48837a0800	                  cmp qword [rdx + 8], 0	        76	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8	IF_9
0x40000f6	            0x7418	                            je 0x4000110	        76	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8	IF_9
0x40000f8	          0x4889d0	                            mov rax, rdx	        69	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_7
0x40000fb	        0x49894008	                 mov qword [r8 + 8], rax	        79	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6
0x40000ff	          0x4989c0	                             mov r8, rax	        80	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6
0x4000102	        0x488b4008	                mov rax, qword [rax + 8]	        81	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6
0x4000106	      0xe96cffffff	                           jmp 0x4000077	        81	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6
0x400010b	          0x4889d0	                            mov rax, rdx	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x400010e	            0xeb03	                           jmp 0x4000113	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x4000110	          0x4889d0	                            mov rax, rdx	        69	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_7
0x4000113	          0x488b10	                    mov rdx, qword [rax]	        87	splay.c	FUNCTION_1	ELSE_2
0x4000116	        0x49895008	                 mov qword [r8 + 8], rdx	        87	splay.c	FUNCTION_1	ELSE_2
0x400011a	        0x488b5008	                mov rdx, qword [rax + 8]	        88	splay.c	FUNCTION_1	ELSE_2
0x400011e	          0x498911	                     mov qword [r9], rdx	        88	splay.c	FUNCTION_1	ELSE_2
0x4000121	      0x488b542408	                mov rdx, qword [rsp + 8]	        89	splay.c	FUNCTION_1	ELSE_2
0x4000126	          0x488910	                    mov qword [rax], rdx	        89	splay.c	FUNCTION_1	ELSE_2
0x4000129	        0x488b1424	                    mov rdx, qword [rsp]	        90	splay.c	FUNCTION_1	ELSE_2
0x400012d	        0x48895008	                mov qword [rax + 8], rdx	        90	splay.c	FUNCTION_1	ELSE_2
0x4000131	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        93	splay.c	FUNCTION_1	ELSE_2
0x4000136	    0x644833342528	                xor rsi, qword fs:[0x28]	        93	splay.c	FUNCTION_1	ELSE_2
0x400013f	            0x7405	                            je 0x4000146	        93	splay.c	FUNCTION_1	ELSE_2
0x4000141	      0xe800000000	                          call 0x4000146	        93	splay.c	FUNCTION_1	ELSE_2
0x4000146	        0x4883c448	                           add rsp, 0x48	        93	splay.c	FUNCTION_1	ELSE_2
0x400014a	              0xc3	                                     ret	        93	splay.c	FUNCTION_1	ELSE_2
Curl_splayremovebyaddr	ELSE,2:SWITCH,0:CALL,2:DO,0:WHILE,0:IF,6:FOR,0:functions,0	68
0x40002d2	              0x55	                                push rbp	       213	splay.c	FUNCTION_4
0x40002d3	              0x53	                                push rbx	       213	splay.c	FUNCTION_4
0x40002d4	        0x4883ec08	                              sub rsp, 8	       213	splay.c	FUNCTION_4
0x40002d8	          0x4885ff	                           test rdi, rdi	       219	splay.c	FUNCTION_4	IF_1
0x40002db	     0xf84d7000000	                            je 0x40003b8	       219	splay.c	FUNCTION_4	IF_1
0x40002e1	          0x4885f6	                           test rsi, rsi	       219	splay.c	FUNCTION_4	IF_1
0x40002e4	     0xf84ce000000	                            je 0x40003b8	       219	splay.c	FUNCTION_4	IF_1
0x40002ea	      0x48837e20ff	cmp qword [rsi + 0x20], 0xffffffffffffffff	       222	splay.c	FUNCTION_4	IF_2
0x40002ef	            0x753d	                           jne 0x400032e	       222	splay.c	FUNCTION_4	IF_2
0x40002f1	        0x837e28ff	cmp dword [rsi + 0x28], 0xffffffffffffffff	       222	splay.c	FUNCTION_4	IF_2
0x40002f5	            0x7537	                           jne 0x400032e	       222	splay.c	FUNCTION_4	IF_2
0x40002f7	        0x488b4e10	            mov rcx, qword [rsi + 0x10] 	       225	splay.c	FUNCTION_4	IF_2	IF_3
0x40002fb	      0xb803000000	                              mov eax, 3	       227	splay.c	FUNCTION_4	IF_2	IF_3
0x4000300	          0x4839ce	                            cmp rsi, rcx	       225	splay.c	FUNCTION_4	IF_2	IF_3
0x4000303	     0xf84b4000000	                            je 0x40003bd	       225	splay.c	FUNCTION_4	IF_2	IF_3
0x4000309	        0x488b4618	            mov rax, qword [rsi + 0x18] 	       229	splay.c	FUNCTION_4	IF_2
0x400030d	        0x48894810	             mov qword [rax + 0x10], rcx	       229	splay.c	FUNCTION_4	IF_2
0x4000311	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       230	splay.c	FUNCTION_4	IF_2
0x4000315	        0x488b4e18	            mov rcx, qword [rsi + 0x18] 	       230	splay.c	FUNCTION_4	IF_2
0x4000319	        0x48894818	             mov qword [rax + 0x18], rcx	       230	splay.c	FUNCTION_4	IF_2
0x400031d	        0x48897610	             mov qword [rsi + 0x10], rsi	       233	splay.c	FUNCTION_4	IF_2
0x4000321	          0x48893a	                    mov qword [rdx], rdi	       235	splay.c	FUNCTION_4	IF_2
0x4000324	      0xb800000000	                              mov eax, 0	       236	splay.c	FUNCTION_4	IF_2
0x4000329	      0xe98f000000	                           jmp 0x40003bd	       236	splay.c	FUNCTION_4	IF_2
0x400032e	          0x4889d5	                            mov rbp, rdx	       236	splay.c	FUNCTION_4	IF_2
0x4000331	          0x4889f3	                            mov rbx, rsi	       236	splay.c	FUNCTION_4	IF_2
0x4000334	          0x4889fa	                            mov rdx, rdi	       236	splay.c	FUNCTION_4	IF_2
0x4000337	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	       239	splay.c	FUNCTION_4	CALL_1
0x400033b	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	       239	splay.c	FUNCTION_4	CALL_1
0x400033f	      0xe800000000	                          call 0x4000344	       239	splay.c	FUNCTION_4	CALL_1
0x4000344	          0x4889c2	                            mov rdx, rax	       239	splay.c	FUNCTION_4	CALL_1
0x4000347	      0xb802000000	                              mov eax, 2	       249	splay.c	FUNCTION_4	IF_4
0x400034c	          0x4839d3	                            cmp rbx, rdx	       248	splay.c	FUNCTION_4	IF_4
0x400034f	            0x756c	                           jne 0x40003bd	       248	splay.c	FUNCTION_4	IF_4
0x4000351	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       253	splay.c	FUNCTION_4
0x4000355	          0x4839c3	                            cmp rbx, rax	       254	splay.c	FUNCTION_4	IF_5
0x4000358	            0x7430	                            je 0x400038a	       254	splay.c	FUNCTION_4	IF_5
0x400035a	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       258	splay.c	FUNCTION_4	IF_5
0x400035e	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       258	splay.c	FUNCTION_4	IF_5
0x4000362	        0x48897020	             mov qword [rax + 0x20], rsi	       258	splay.c	FUNCTION_4	IF_5
0x4000366	        0x48897828	             mov qword [rax + 0x28], rdi	       258	splay.c	FUNCTION_4	IF_5
0x400036a	        0x488b5308	                mov rdx, qword [rbx + 8]	       259	splay.c	FUNCTION_4	IF_5
0x400036e	        0x48895008	                mov qword [rax + 8], rdx	       259	splay.c	FUNCTION_4	IF_5
0x4000372	          0x488b13	                    mov rdx, qword [rbx]	       260	splay.c	FUNCTION_4	IF_5
0x4000375	          0x488910	                    mov qword [rax], rdx	       260	splay.c	FUNCTION_4	IF_5
0x4000378	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       261	splay.c	FUNCTION_4	IF_5
0x400037c	        0x48895018	             mov qword [rax + 0x18], rdx	       261	splay.c	FUNCTION_4	IF_5
0x4000380	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       262	splay.c	FUNCTION_4	IF_5
0x4000384	        0x48894210	             mov qword [rdx + 0x10], rax	       262	splay.c	FUNCTION_4	IF_5
0x4000388	            0xeb23	                           jmp 0x40003ad	       262	splay.c	FUNCTION_4	IF_5
0x400038a	          0x488b13	                    mov rdx, qword [rbx]	       266	splay.c	FUNCTION_4	ELSE_1	IF_6
0x400038d	          0x4885d2	                           test rdx, rdx	       266	splay.c	FUNCTION_4	ELSE_1	IF_6
0x4000390	            0x7506	                           jne 0x4000398	       266	splay.c	FUNCTION_4	ELSE_1	IF_6
0x4000392	        0x488b4308	                mov rax, qword [rbx + 8]	       267	splay.c	FUNCTION_4	ELSE_1	IF_6
0x4000396	            0xeb15	                           jmp 0x40003ad	       267	splay.c	FUNCTION_4	ELSE_1	IF_6
0x4000398	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       269	splay.c	FUNCTION_4	ELSE_1	ELSE_2	CALL_2
0x400039c	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       269	splay.c	FUNCTION_4	ELSE_1	ELSE_2	CALL_2
0x40003a0	      0xe800000000	                          call 0x40003a5	       269	splay.c	FUNCTION_4	ELSE_1	ELSE_2	CALL_2
0x40003a5	        0x488b5308	                mov rdx, qword [rbx + 8]	       270	splay.c	FUNCTION_4	ELSE_1	ELSE_2
0x40003a9	        0x48895008	                mov qword [rax + 8], rdx	       270	splay.c	FUNCTION_4	ELSE_1	ELSE_2
0x40003ad	        0x48894500	                    mov qword [rbp], rax	       274	splay.c	FUNCTION_4
0x40003b1	      0xb800000000	                              mov eax, 0	       276	splay.c	FUNCTION_4
0x40003b6	            0xeb05	                           jmp 0x40003bd	       276	splay.c	FUNCTION_4
0x40003b8	      0xb801000000	                              mov eax, 1	       220	splay.c	FUNCTION_4	IF_1
0x40003bd	        0x4883c408	                              add rsp, 8	       277	splay.c	FUNCTION_4
0x40003c1	              0x5b	                                 pop rbx	       277	splay.c	FUNCTION_4
0x40003c2	              0x5d	                                 pop rbp	       277	splay.c	FUNCTION_4
0x40003c3	              0xc3	                                     ret	       277	splay.c	FUNCTION_4
