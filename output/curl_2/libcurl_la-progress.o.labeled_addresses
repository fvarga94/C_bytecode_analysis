Curl_pgrsUpdate	IF,22:WHILE,0:functions,0:CALL,37:ELSE,7:FOR,0:DO,0:SWITCH,0	433
0x40006be	            0x4157	                                push r15	       370	progress.c	FUNCTION_13
0x40006c0	            0x4156	                                push r14	       370	progress.c	FUNCTION_13
0x40006c2	            0x4155	                                push r13	       370	progress.c	FUNCTION_13
0x40006c4	            0x4154	                                push r12	       370	progress.c	FUNCTION_13
0x40006c6	              0x55	                                push rbp	       370	progress.c	FUNCTION_13
0x40006c7	              0x53	                                push rbx	       370	progress.c	FUNCTION_13
0x40006c8	    0x4881ecb80000	                           sub rsp, 0xb8	       370	progress.c	FUNCTION_13
0x40006cf	    0x64488b042528	                mov rax, qword fs:[0x28]	       370	progress.c	FUNCTION_13
0x40006d8	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       370	progress.c	FUNCTION_13
0x40006e0	            0x31c0	                            xor eax, eax	       370	progress.c	FUNCTION_13
0x40006e2	          0x488b1f	                    mov rbx, qword [rdi]	       381	progress.c	FUNCTION_13
0x40006e5	    0x448bbbe00c00	          mov r15d, dword [rbx + 0xce0] 	       382	progress.c	FUNCTION_13
0x40006ec	    0x4c8bab680b00	           mov r13, qword [rbx + 0xb68] 	       392	progress.c	FUNCTION_13
0x40006f3	    0x4c8ba3700b00	           mov r12, qword [rbx + 0xb70] 	       393	progress.c	FUNCTION_13
0x40006fa	      0xe800000000	                          call 0x40006ff	       395	progress.c	FUNCTION_13	CALL_1
0x40006ff	          0x4989c6	                            mov r14, rax	       395	progress.c	FUNCTION_13	CALL_1
0x4000702	          0x4889d6	                            mov rsi, rdx	       395	progress.c	FUNCTION_13	CALL_1
0x4000705	        0x48891424	                    mov qword [rsp], rdx	       395	progress.c	FUNCTION_13	CALL_1
0x4000709	    0x488b93d80b00	           mov rdx, qword [rbx + 0xbd8] 	       398	progress.c	FUNCTION_13	CALL_2
0x4000710	    0x488b8be00b00	           mov rcx, qword [rbx + 0xbe0] 	       398	progress.c	FUNCTION_13	CALL_2
0x4000717	          0x4c89f7	                            mov rdi, r14	       398	progress.c	FUNCTION_13	CALL_2
0x400071a	      0xe800000000	                          call 0x400071f	       398	progress.c	FUNCTION_13	CALL_2
0x400071f	          0x4889c1	                            mov rcx, rax	       398	progress.c	FUNCTION_13	CALL_2
0x4000722	    0x488983900b00	            mov qword [rbx + 0xb90], rax	       398	progress.c	FUNCTION_13	CALL_2
0x4000729	    0x48badb34b6d7	          movabs rdx, 0x431bde82d7b634db	       399	progress.c	FUNCTION_13
0x4000733	          0x48f7ea	                                imul rdx	       399	progress.c	FUNCTION_13
0x4000736	        0x48c1fa12	                           sar rdx, 0x12	       399	progress.c	FUNCTION_13
0x400073a	          0x4889ce	                            mov rsi, rcx	       399	progress.c	FUNCTION_13
0x400073d	        0x48c1fe3f	                           sar rsi, 0x3f	       399	progress.c	FUNCTION_13
0x4000741	          0x4829f2	                            sub rdx, rsi	       399	progress.c	FUNCTION_13
0x4000744	          0x4889d5	                            mov rbp, rdx	       399	progress.c	FUNCTION_13
0x4000747	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       400	progress.c	FUNCTION_13
0x4000751	          0x4889c8	                            mov rax, rcx	       400	progress.c	FUNCTION_13
0x4000754	          0x48f7ea	                                imul rdx	       400	progress.c	FUNCTION_13
0x4000757	        0x48c1fa07	                              sar rdx, 7	       400	progress.c	FUNCTION_13
0x400075b	          0x4889d1	                            mov rcx, rdx	       400	progress.c	FUNCTION_13
0x400075e	          0x4829f1	                            sub rcx, rsi	       400	progress.c	FUNCTION_13
0x4000761	    0x48b8f653e3a5	            movabs rax, 0x20c49ba5e353f6	       403	progress.c	FUNCTION_13	IF_1
0x400076b	          0x4939c5	                            cmp r13, rax	       403	progress.c	FUNCTION_13	IF_1
0x400076e	            0x7f21	                            jg 0x4000791	       403	progress.c	FUNCTION_13	IF_1
0x4000770	    0x4969c5e80300	                    imul rax, r13, 0x3e8	       404	progress.c	FUNCTION_13	IF_1
0x4000777	          0x4885c9	                           test rcx, rcx	       404	progress.c	FUNCTION_13	IF_1
0x400077a	      0xbe01000000	                              mov esi, 1	       404	progress.c	FUNCTION_13	IF_1
0x400077f	        0x480f4ff1	                          cmovg rsi, rcx	       404	progress.c	FUNCTION_13	IF_1
0x4000783	            0x4899	                                     cqo	       404	progress.c	FUNCTION_13	IF_1
0x4000785	          0x48f7fe	                                idiv rsi	       404	progress.c	FUNCTION_13	IF_1
0x4000788	    0x488983980b00	            mov qword [rbx + 0xb98], rax	       404	progress.c	FUNCTION_13	IF_1
0x400078f	            0xeb1b	                           jmp 0x40007ac	       404	progress.c	FUNCTION_13	IF_1
0x4000791	          0x4885ed	                           test rbp, rbp	       406	progress.c	FUNCTION_13	ELSE_1
0x4000794	      0xbe01000000	                              mov esi, 1	       406	progress.c	FUNCTION_13	ELSE_1
0x4000799	        0x480f4ff5	                          cmovg rsi, rbp	       406	progress.c	FUNCTION_13	ELSE_1
0x400079d	          0x4c89e8	                            mov rax, r13	       406	progress.c	FUNCTION_13	ELSE_1
0x40007a0	            0x4899	                                     cqo	       406	progress.c	FUNCTION_13	ELSE_1
0x40007a2	          0x48f7fe	                                idiv rsi	       406	progress.c	FUNCTION_13	ELSE_1
0x40007a5	    0x488983980b00	            mov qword [rbx + 0xb98], rax	       406	progress.c	FUNCTION_13	ELSE_1
0x40007ac	    0x48b8f653e3a5	            movabs rax, 0x20c49ba5e353f6	       409	progress.c	FUNCTION_13	IF_2
0x40007b6	          0x4939c4	                            cmp r12, rax	       409	progress.c	FUNCTION_13	IF_2
0x40007b9	            0x7f21	                            jg 0x40007dc	       409	progress.c	FUNCTION_13	IF_2
0x40007bb	    0x4969c4e80300	                    imul rax, r12, 0x3e8	       410	progress.c	FUNCTION_13	IF_2
0x40007c2	          0x4885c9	                           test rcx, rcx	       410	progress.c	FUNCTION_13	IF_2
0x40007c5	      0xba01000000	                              mov edx, 1	       410	progress.c	FUNCTION_13	IF_2
0x40007ca	        0x480f4eca	                         cmovle rcx, rdx	       410	progress.c	FUNCTION_13	IF_2
0x40007ce	            0x4899	                                     cqo	       410	progress.c	FUNCTION_13	IF_2
0x40007d0	          0x48f7f9	                                idiv rcx	       410	progress.c	FUNCTION_13	IF_2
0x40007d3	    0x488983a00b00	            mov qword [rbx + 0xba0], rax	       410	progress.c	FUNCTION_13	IF_2
0x40007da	            0xeb1b	                           jmp 0x40007f7	       410	progress.c	FUNCTION_13	IF_2
0x40007dc	          0x4885ed	                           test rbp, rbp	       412	progress.c	FUNCTION_13	ELSE_2
0x40007df	      0xb901000000	                              mov ecx, 1	       412	progress.c	FUNCTION_13	ELSE_2
0x40007e4	        0x480f4fcd	                          cmovg rcx, rbp	       412	progress.c	FUNCTION_13	ELSE_2
0x40007e8	          0x4c89e0	                            mov rax, r12	       412	progress.c	FUNCTION_13	ELSE_2
0x40007eb	            0x4899	                                     cqo	       412	progress.c	FUNCTION_13	ELSE_2
0x40007ed	          0x48f7f9	                                idiv rcx	       412	progress.c	FUNCTION_13	ELSE_2
0x40007f0	    0x488983a00b00	            mov qword [rbx + 0xba0], rax	       412	progress.c	FUNCTION_13	ELSE_2
0x40007f7	      0xba00000000	                              mov edx, 0	       391	progress.c	FUNCTION_13
0x40007fc	    0x4c39b3500b00	           cmp qword [rbx + 0xb50], r14 	       415	progress.c	FUNCTION_13	IF_3
0x4000803	     0xf8447010000	                            je 0x4000950	       415	progress.c	FUNCTION_13	IF_3
0x4000809	      0xbaabaaaa2a	                     mov edx, 0x2aaaaaab	       382	progress.c	FUNCTION_13
0x400080e	          0x4489f8	                           mov eax, r15d	       382	progress.c	FUNCTION_13
0x4000811	            0xf7ea	                                imul edx	       382	progress.c	FUNCTION_13
0x4000813	          0x4489f8	                           mov eax, r15d	       382	progress.c	FUNCTION_13
0x4000816	          0xc1f81f	                           sar eax, 0x1f	       382	progress.c	FUNCTION_13
0x4000819	            0x29c2	                            sub edx, eax	       382	progress.c	FUNCTION_13
0x400081b	          0x8d0452	                  lea eax, [rdx + rdx*2]	       382	progress.c	FUNCTION_13
0x400081e	             0x1c0	                            add eax, eax	       382	progress.c	FUNCTION_13
0x4000820	          0x4489fa	                           mov edx, r15d	       382	progress.c	FUNCTION_13
0x4000823	            0x29c2	                            sub edx, eax	       382	progress.c	FUNCTION_13
0x4000825	    0x4c89b3500b00	            mov qword [rbx + 0xb50], r14	       418	progress.c	FUNCTION_13	IF_3
0x400082c	          0x4863d2	                         movsxd rdx, edx	       418	progress.c	FUNCTION_13	IF_3
0x400082f	        0x4c8d24d3	                  lea r12, [rbx + rdx*8]	       418	progress.c	FUNCTION_13	IF_3
0x4000833	    0x488b83700b00	           mov rax, qword [rbx + 0xb70] 	       422	progress.c	FUNCTION_13	IF_3
0x400083a	    0x480383680b00	            add rax, qword [rbx + 0xb68]	       422	progress.c	FUNCTION_13	IF_3
0x4000841	    0x49898424500c	            mov qword [r12 + 0xc50], rax	       422	progress.c	FUNCTION_13	IF_3
0x4000849	    0x4881c2c80000	                           add rdx, 0xc8	       426	progress.c	FUNCTION_13	IF_3
0x4000850	        0x48c1e204	                              shl rdx, 4	       426	progress.c	FUNCTION_13	IF_3
0x4000854	          0x4801da	                            add rdx, rbx	       426	progress.c	FUNCTION_13	IF_3
0x4000857	          0x4c8932	                    mov qword [rdx], r14	       426	progress.c	FUNCTION_13	IF_3
0x400085a	        0x488b0424	                    mov rax, qword [rsp]	       426	progress.c	FUNCTION_13	IF_3
0x400085e	        0x48894208	                mov qword [rdx + 8], rax	       426	progress.c	FUNCTION_13	IF_3
0x4000862	    0x8b83e00c0000	           mov eax, dword [rbx + 0xce0] 	       430	progress.c	FUNCTION_13	IF_3
0x4000868	          0x8d4801	                      lea ecx, [rax + 1]	       430	progress.c	FUNCTION_13	IF_3
0x400086b	    0x898be00c0000	            mov dword [rbx + 0xce0], ecx	       430	progress.c	FUNCTION_13	IF_3
0x4000871	          0x83f901	                              cmp ecx, 1	       440	progress.c	FUNCTION_13	IF_3	IF_4
0x4000874	     0xf84bc000000	                            je 0x4000936	       440	progress.c	FUNCTION_13	IF_3	IF_4
0x400087a	    0x41bd00000000	                             mov r13d, 0	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x4000880	          0x83f905	                              cmp ecx, 5	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x4000883	            0x7e1a	                           jle 0x400089f	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x4000885	      0xbaabaaaa2a	                     mov edx, 0x2aaaaaab	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x400088a	            0x89c8	                            mov eax, ecx	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x400088c	            0xf7ea	                                imul edx	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x400088e	            0x89c8	                            mov eax, ecx	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x4000890	          0xc1f81f	                           sar eax, 0x1f	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x4000893	            0x29c2	                            sub edx, eax	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x4000895	          0x8d0452	                  lea eax, [rdx + rdx*2]	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x4000898	             0x1c0	                            add eax, eax	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x400089a	            0x29c1	                            sub ecx, eax	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x400089c	          0x4189cd	                           mov r13d, ecx	       447	progress.c	FUNCTION_13	IF_3	IF_4
0x400089f	          0x4963c5	                        movsxd rax, r13d	       450	progress.c	FUNCTION_13	IF_3	IF_4	CALL_3
0x40008a2	    0x4805c8000000	                           add rax, 0xc8	       450	progress.c	FUNCTION_13	IF_3	IF_4	CALL_3
0x40008a8	        0x48c1e004	                              shl rax, 4	       450	progress.c	FUNCTION_13	IF_3	IF_4	CALL_3
0x40008ac	        0x488b1403	              mov rdx, qword [rbx + rax]	       450	progress.c	FUNCTION_13	IF_3	IF_4	CALL_3
0x40008b0	      0x488b4c0308	         mov rcx, qword [rbx + rax + 8] 	       450	progress.c	FUNCTION_13	IF_3	IF_4	CALL_3
0x40008b5	          0x4c89f7	                            mov rdi, r14	       450	progress.c	FUNCTION_13	IF_3	IF_4	CALL_3
0x40008b8	        0x488b3424	                    mov rsi, qword [rsp]	       450	progress.c	FUNCTION_13	IF_3	IF_4	CALL_3
0x40008bc	      0xe800000000	                          call 0x40008c1	       450	progress.c	FUNCTION_13	IF_3	IF_4	CALL_3
0x40008c1	          0x4889c1	                            mov rcx, rax	       450	progress.c	FUNCTION_13	IF_3	IF_4	CALL_3
0x40008c4	          0x4885c0	                           test rax, rax	       453	progress.c	FUNCTION_13	IF_3	IF_4	IF_5
0x40008c7	      0xb801000000	                              mov eax, 1	       453	progress.c	FUNCTION_13	IF_3	IF_4	IF_5
0x40008cc	        0x480f44c8	                          cmove rcx, rax	       453	progress.c	FUNCTION_13	IF_3	IF_4	IF_5
0x40008d0	          0x4d63ed	                        movsxd r13, r13d	       458	progress.c	FUNCTION_13	IF_3	IF_4
0x40008d3	    0x498b8424500c	           mov rax, qword [r12 + 0xc50] 	       457	progress.c	FUNCTION_13	IF_3	IF_4
0x40008db	    0x4a2b84eb500c	    sub rax, qword [rbx + r13*8 + 0xc50]	       457	progress.c	FUNCTION_13	IF_3	IF_4
0x40008e3	    0x483d37894100	                       cmp rax, 0x418937	       460	progress.c	FUNCTION_13	IF_3	IF_4	IF_6	CALL_4
0x40008e9	            0x7e31	                           jle 0x400091c	       460	progress.c	FUNCTION_13	IF_3	IF_4	IF_6	CALL_4
0x40008eb	        0x660fefc0	                         pxor xmm0, xmm0	       463	progress.c	FUNCTION_13	IF_3	IF_4	IF_6
0x40008ef	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       463	progress.c	FUNCTION_13	IF_3	IF_4	IF_6
0x40008f4	        0x660fefc9	                         pxor xmm1, xmm1	       463	progress.c	FUNCTION_13	IF_3	IF_4	IF_6
0x40008f8	      0xf2480f2ac9	                      cvtsi2sd xmm1, rcx	       463	progress.c	FUNCTION_13	IF_3	IF_4	IF_6
0x40008fd	    0xf20f5e0d0000	          divsd xmm1, qword [0x04000905]	       463	progress.c	FUNCTION_13	IF_3	IF_4	IF_6
0x4000905	        0xf20f5ec1	                        divsd xmm0, xmm1	       463	progress.c	FUNCTION_13	IF_3	IF_4	IF_6
0x4000909	      0xf2480f2cc0	                     cvttsd2si rax, xmm0	       463	progress.c	FUNCTION_13	IF_3	IF_4	IF_6
0x400090e	    0x488983780b00	            mov qword [rbx + 0xb78], rax	       463	progress.c	FUNCTION_13	IF_3	IF_4	IF_6
0x4000915	      0xba01000000	                              mov edx, 1	       416	progress.c	FUNCTION_13	IF_3
0x400091a	            0xeb34	                           jmp 0x4000950	       416	progress.c	FUNCTION_13	IF_3
0x400091c	    0x4869c0e80300	                    imul rax, rax, 0x3e8	       468	progress.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x4000923	            0x4899	                                     cqo	       468	progress.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x4000925	          0x48f7f9	                                idiv rcx	       468	progress.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x4000928	    0x488983780b00	            mov qword [rbx + 0xb78], rax	       468	progress.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x400092f	      0xba01000000	                              mov edx, 1	       416	progress.c	FUNCTION_13	IF_3
0x4000934	            0xeb1a	                           jmp 0x4000950	       416	progress.c	FUNCTION_13	IF_3
0x4000936	    0x488b83980b00	           mov rax, qword [rbx + 0xb98] 	       473	progress.c	FUNCTION_13	IF_3	ELSE_4
0x400093d	    0x480383a00b00	            add rax, qword [rbx + 0xba0]	       473	progress.c	FUNCTION_13	IF_3	ELSE_4
0x4000944	    0x488983780b00	            mov qword [rbx + 0xb78], rax	       473	progress.c	FUNCTION_13	IF_3	ELSE_4
0x400094b	      0xba01000000	                              mov edx, 1	       416	progress.c	FUNCTION_13	IF_3
0x4000950	    0x8b83880b0000	           mov eax, dword [rbx + 0xb88] 	       478	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000956	          0x4189c4	                           mov r12d, eax	       478	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000959	        0x4183e410	                          and r12d, 0x10	       478	progress.c	FUNCTION_13	ELSE_4	IF_7
0x400095d	     0xf8572040000	                           jne 0x4000dd5	       478	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000963	    0x4883bbb80200	              cmp qword [rbx + 0x2b8], 0	       481	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8
0x400096b	            0x7469	                            je 0x40009d6	       481	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8
0x400096d	      0xbe01000000	                              mov esi, 1	       483	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_6
0x4000972	          0x4889df	                            mov rdi, rbx	       483	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_6
0x4000975	      0xe800000000	                          call 0x400097a	       483	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_6
0x400097a	    0x488b8b600b00	           mov rcx, qword [rbx + 0xb60] 	       484	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_7
0x4000981	    0x488b93680b00	           mov rdx, qword [rbx + 0xb68] 	       484	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_7
0x4000988	    0x488bb3580b00	           mov rsi, qword [rbx + 0xb58] 	       484	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_7
0x400098f	    0x488bbb200300	           mov rdi, qword [rbx + 0x320] 	       484	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_7
0x4000996	    0x4c8b83700b00	            mov r8, qword [rbx + 0xb70] 	       484	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_7
0x400099d	    0xff93b8020000	                call qword [rbx + 0x2b8]	       484	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_7
0x40009a3	            0x89c5	                            mov ebp, eax	       484	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_7
0x40009a5	      0xbe00000000	                              mov esi, 0	       489	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_8
0x40009aa	          0x4889df	                            mov rdi, rbx	       489	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_8
0x40009ad	      0xe800000000	                          call 0x40009b2	       489	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_8
0x40009b2	          0x4189ec	                           mov r12d, ebp	       492	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8
0x40009b5	            0x85ed	                           test ebp, ebp	       490	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	IF_9
0x40009b7	     0xf841e040000	                            je 0x4000ddb	       490	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	IF_9
0x40009bd	    0x488d35000000	                   lea rsi, [0x040009c4]	       491	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_9
0x40009c4	          0x4889df	                            mov rdi, rbx	       491	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_9
0x40009c7	      0xb800000000	                              mov eax, 0	       491	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_9
0x40009cc	      0xe800000000	                          call 0x40009d1	       491	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_9
0x40009d1	      0xe905040000	                           jmp 0x4000ddb	       491	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_8	CALL_9
0x40009d6	    0x4883bbb00200	              cmp qword [rbx + 0x2b0], 0	       494	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10
0x40009de	     0xf8481000000	                            je 0x4000a65	       494	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10
0x40009e4	      0xbe01000000	                              mov esi, 1	       496	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_10
0x40009e9	          0x4889df	                            mov rdi, rbx	       496	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_10
0x40009ec	      0xe800000000	                          call 0x40009f1	       496	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_10
0x40009f1	        0x660fefc0	                         pxor xmm0, xmm0	       497	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_11
0x40009f5	    0xf2480f2a8358	      cvtsi2sd xmm0, qword [rbx + 0xb58]	       497	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_11
0x40009fe	    0x488bbb200300	           mov rdi, qword [rbx + 0x320] 	       497	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_11
0x4000a05	        0x660fefdb	                         pxor xmm3, xmm3	       497	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_11
0x4000a09	    0xf2480f2a9b70	      cvtsi2sd xmm3, qword [rbx + 0xb70]	       497	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_11
0x4000a12	        0x660fefd2	                         pxor xmm2, xmm2	       497	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_11
0x4000a16	    0xf2480f2a9360	      cvtsi2sd xmm2, qword [rbx + 0xb60]	       497	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_11
0x4000a1f	        0x660fefc9	                         pxor xmm1, xmm1	       497	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_11
0x4000a23	    0xf2480f2a8b68	      cvtsi2sd xmm1, qword [rbx + 0xb68]	       497	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_11
0x4000a2c	    0xff93b0020000	                call qword [rbx + 0x2b0]	       497	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_11
0x4000a32	            0x89c5	                            mov ebp, eax	       497	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_11
0x4000a34	      0xbe00000000	                              mov esi, 0	       502	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_12
0x4000a39	          0x4889df	                            mov rdi, rbx	       502	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_12
0x4000a3c	      0xe800000000	                          call 0x4000a41	       502	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_12
0x4000a41	          0x4189ec	                           mov r12d, ebp	       505	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10
0x4000a44	            0x85ed	                           test ebp, ebp	       503	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	IF_11
0x4000a46	     0xf848f030000	                            je 0x4000ddb	       503	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	IF_11
0x4000a4c	    0x488d35000000	                   lea rsi, [0x04000a53]	       504	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_13
0x4000a53	          0x4889df	                            mov rdi, rbx	       504	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_13
0x4000a56	      0xb800000000	                              mov eax, 0	       504	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_13
0x4000a5b	      0xe800000000	                          call 0x4000a60	       504	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_13
0x4000a60	      0xe976030000	                           jmp 0x4000ddb	       504	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_10	CALL_13
0x4000a65	            0x84d2	                             test dl, dl	       508	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_12
0x4000a67	     0xf846e030000	                            je 0x4000ddb	       508	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_12
0x4000a6d	            0xa880	                           test al, 0x80	       515	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13
0x4000a6f	            0x7546	                           jne 0x4000ab7	       515	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13
0x4000a71	    0x488b93305100	          mov rdx, qword [rbx + 0x5130] 	       516	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13	IF_14
0x4000a78	          0x4885d2	                           test rdx, rdx	       516	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13	IF_14
0x4000a7b	            0x7418	                            je 0x4000a95	       516	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13	IF_14
0x4000a7d	    0x488bbbf00100	           mov rdi, qword [rbx + 0x1f0] 	       517	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13	IF_14	CALL_14
0x4000a84	    0x488d35000000	                   lea rsi, [0x04000a8b]	       517	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13	IF_14	CALL_14
0x4000a8b	      0xb800000000	                              mov eax, 0	       517	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13	IF_14	CALL_14
0x4000a90	      0xe800000000	                          call 0x4000a95	       517	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13	IF_14	CALL_14
0x4000a95	    0x488bbbf00100	           mov rdi, qword [rbx + 0x1f0] 	       521	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13	CALL_15
0x4000a9c	    0x488d35000000	                   lea rsi, [0x04000aa3]	       521	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13	CALL_15
0x4000aa3	      0xb800000000	                              mov eax, 0	       521	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13	CALL_15
0x4000aa8	      0xe800000000	                          call 0x4000aad	       521	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13	CALL_15
0x4000aad	    0x818b880b0000	            or dword [rbx + 0xb88], 0x80	       526	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_13
0x4000ab7	    0x8b8b880b0000	           mov ecx, dword [rbx + 0xb88] 	       530	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15
0x4000abd	          0xf6c120	                           test cl, 0x20	       530	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15
0x4000ac0	     0xf842d030000	                            je 0x4000df3	       530	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15
0x4000ac6	    0x488bbba00b00	           mov rdi, qword [rbx + 0xba0] 	       531	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	CALL_16
0x4000acd	          0x4885ff	                           test rdi, rdi	       530	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15
0x4000ad0	     0xf8e1d030000	                           jle 0x4000df3	       530	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15
0x4000ad6	    0x488bb3600b00	           mov rsi, qword [rbx + 0xb60] 	       532	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15
0x4000add	          0x4889f0	                            mov rax, rsi	       532	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15
0x4000ae0	            0x4899	                                     cqo	       532	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15
0x4000ae2	          0x48f7ff	                                idiv rdi	       532	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15
0x4000ae5	          0x4989c5	                            mov r13, rax	       532	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15
0x4000ae8	    0x4881fe102700	                         cmp rsi, 0x2710	       534	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16	CALL_17
0x4000aef	            0x7e32	                           jle 0x4000b23	       534	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16	CALL_17
0x4000af1	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000afb	          0x4889f0	                            mov rax, rsi	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000afe	          0x48f7ea	                                imul rdx	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000b01	          0x4801f2	                            add rdx, rsi	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000b04	        0x48c1fa06	                              sar rdx, 6	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000b08	        0x48c1fe3f	                           sar rsi, 0x3f	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000b0c	          0x4829f2	                            sub rdx, rsi	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000b0f	          0x4889d6	                            mov rsi, rdx	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000b12	    0x488b83700b00	           mov rax, qword [rbx + 0xb70] 	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000b19	            0x4899	                                     cqo	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000b1b	          0x48f7fe	                                idiv rsi	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000b1e	          0x4989c6	                            mov r14, rax	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000b21	            0xeb26	                           jmp 0x4000b49	       535	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	IF_16
0x4000b23	    0x41be00000000	                             mov r14d, 0	       375	progress.c	FUNCTION_13
0x4000b29	          0x4885f6	                           test rsi, rsi	       537	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	ELSE_5	IF_17	CALL_19
0x4000b2c	            0x7e1b	                           jle 0x4000b49	       537	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	ELSE_5	IF_17	CALL_19
0x4000b2e	    0x488b83700b00	           mov rax, qword [rbx + 0xb70] 	       538	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	ELSE_5	IF_17
0x4000b35	        0x488d0480	                  lea rax, [rax + rax*4]	       538	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	ELSE_5	IF_17
0x4000b39	        0x488d0480	                  lea rax, [rax + rax*4]	       538	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	ELSE_5	IF_17
0x4000b3d	        0x48c1e002	                              shl rax, 2	       538	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	ELSE_5	IF_17
0x4000b41	            0x4899	                                     cqo	       538	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	ELSE_5	IF_17
0x4000b43	          0x48f7fe	                                idiv rsi	       538	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	ELSE_5	IF_17
0x4000b46	          0x4989c6	                            mov r14, rax	       538	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_15	ELSE_5	IF_17
0x4000b49	      0xbe00000000	                              mov esi, 0	       389	progress.c	FUNCTION_13
0x4000b4e	    0x48c704240000	                      mov qword [rsp], 0	       374	progress.c	FUNCTION_13
0x4000b56	          0xf6c140	                           test cl, 0x40	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b59	     0xf84a4000000	                            je 0x4000c03	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b5f	    0x488bb3980b00	           mov rsi, qword [rbx + 0xb98] 	       544	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	CALL_20
0x4000b66	          0x4885f6	                           test rsi, rsi	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b69	     0xf8e87000000	                           jle 0x4000bf6	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b6f	            0xeb0c	                           jmp 0x4000b7d	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b71	    0x41bd00000000	                             mov r13d, 0	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b77	    0x41be00000000	                             mov r14d, 0	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b7d	    0x488b8b580b00	           mov rcx, qword [rbx + 0xb58] 	       545	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b84	          0x4889c8	                            mov rax, rcx	       545	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b87	            0x4899	                                     cqo	       545	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b89	          0x48f7fe	                                idiv rsi	       545	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b8c	          0x4889c6	                            mov rsi, rax	       545	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000b8f	    0x4881f9102700	                         cmp rcx, 0x2710	       547	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19	CALL_21
0x4000b96	            0x7e33	                           jle 0x4000bcb	       547	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19	CALL_21
0x4000b98	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000ba2	          0x4889c8	                            mov rax, rcx	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000ba5	          0x48f7ea	                                imul rdx	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000ba8	          0x4801ca	                            add rdx, rcx	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000bab	        0x48c1fa06	                              sar rdx, 6	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000baf	        0x48c1f93f	                           sar rcx, 0x3f	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000bb3	          0x4829ca	                            sub rdx, rcx	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000bb6	          0x4889d1	                            mov rcx, rdx	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000bb9	    0x488b83680b00	           mov rax, qword [rbx + 0xb68] 	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000bc0	            0x4899	                                     cqo	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000bc2	          0x48f7f9	                                idiv rcx	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000bc5	        0x48890424	                    mov qword [rsp], rax	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000bc9	            0xeb38	                           jmp 0x4000c03	       548	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	IF_19
0x4000bcb	    0x48c704240000	                      mov qword [rsp], 0	       374	progress.c	FUNCTION_13
0x4000bd3	          0x4885c9	                           test rcx, rcx	       550	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	ELSE_6	IF_20	CALL_23
0x4000bd6	            0x7e2b	                           jle 0x4000c03	       550	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	ELSE_6	IF_20	CALL_23
0x4000bd8	    0x488b83680b00	           mov rax, qword [rbx + 0xb68] 	       551	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	ELSE_6	IF_20
0x4000bdf	        0x488d0480	                  lea rax, [rax + rax*4]	       551	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	ELSE_6	IF_20
0x4000be3	        0x488d0480	                  lea rax, [rax + rax*4]	       551	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	ELSE_6	IF_20
0x4000be7	        0x48c1e002	                              shl rax, 2	       551	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	ELSE_6	IF_20
0x4000beb	            0x4899	                                     cqo	       551	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	ELSE_6	IF_20
0x4000bed	          0x48f7f9	                                idiv rcx	       551	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	ELSE_6	IF_20
0x4000bf0	        0x48890424	                    mov qword [rsp], rax	       551	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	ELSE_6	IF_20
0x4000bf4	            0xeb0d	                           jmp 0x4000c03	       551	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	ELSE_6	IF_20
0x4000bf6	      0xbe00000000	                              mov esi, 0	       389	progress.c	FUNCTION_13
0x4000bfb	    0x48c704240000	                      mov qword [rsp], 0	       374	progress.c	FUNCTION_13
0x4000c03	          0x4c39ee	                            cmp rsi, r13	       557	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c06	        0x4c0f4dee	                         cmovge r13, rsi	       557	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c0a	          0x4d85ed	                           test r13, r13	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000c0d	            0x7e08	                           jle 0x4000c17	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000c0f	          0x4c89ee	                            mov rsi, r13	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000c12	          0x4829ee	                            sub rsi, rbp	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000c15	            0xeb20	                           jmp 0x4000c37	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000c17	      0xbe00000000	                              mov esi, 0	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000c1c	            0xeb19	                           jmp 0x4000c37	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000c1e	    0x41bd00000000	                             mov r13d, 0	       557	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c24	    0x41be00000000	                             mov r14d, 0	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000c2a	    0x48c704240000	                      mov qword [rsp], 0	       374	progress.c	FUNCTION_13
0x4000c32	      0xbe00000000	                              mov esi, 0	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000c37	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000c3c	      0xe845f6ffff	                       call sym.time2str	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000c41	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       561	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_25
0x4000c49	          0x4c89ee	                            mov rsi, r13	       561	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_25
0x4000c4c	      0xe835f6ffff	                       call sym.time2str	       561	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_25
0x4000c51	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       562	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_26
0x4000c59	          0x4889ee	                            mov rsi, rbp	       562	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_26
0x4000c5c	      0xe825f6ffff	                       call sym.time2str	       562	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_26
0x4000c61	    0x8b83880b0000	           mov eax, dword [rbx + 0xb88] 	       566	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c67	            0xa820	                           test al, 0x20	       567	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c69	            0x7409	                            je 0x4000c74	       567	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c6b	    0x4c8bab600b00	           mov r13, qword [rbx + 0xb60] 	       567	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c72	            0xeb07	                           jmp 0x4000c7b	       567	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c74	    0x4c8bab700b00	           mov r13, qword [rbx + 0xb70] 	       567	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c7b	            0xa840	                           test al, 0x40	       569	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c7d	            0x7409	                            je 0x4000c88	       569	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c7f	    0x488b83580b00	           mov rax, qword [rbx + 0xb58] 	       569	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c86	            0xeb07	                           jmp 0x4000c8f	       569	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c88	    0x488b83680b00	           mov rax, qword [rbx + 0xb68] 	       569	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c8f	          0x4901c5	                            add r13, rax	       565	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c92	    0x488bb3700b00	           mov rsi, qword [rbx + 0xb70] 	       572	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000c99	    0x4803b3680b00	            add rsi, qword [rbx + 0xb68]	       572	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000ca0	    0x4981fd102700	                         cmp r13, 0x2710	       575	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21	CALL_27
0x4000ca7	            0x7e2f	                           jle 0x4000cd8	       575	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21	CALL_27
0x4000ca9	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cb3	          0x4c89e8	                            mov rax, r13	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cb6	          0x48f7ea	                                imul rdx	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cb9	        0x4a8d0c2a	                    lea rcx, [rdx + r13]	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cbd	        0x48c1f906	                              sar rcx, 6	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cc1	          0x4c89e8	                            mov rax, r13	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cc4	        0x48c1f83f	                           sar rax, 0x3f	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cc8	          0x4829c1	                            sub rcx, rax	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000ccb	          0x4889f0	                            mov rax, rsi	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cce	            0x4899	                                     cqo	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cd0	          0x48f7f9	                                idiv rcx	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cd3	          0x4989c7	                            mov r15, rax	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cd6	            0xeb1f	                           jmp 0x4000cf7	       576	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_21
0x4000cd8	    0x41bf00000000	                             mov r15d, 0	       376	progress.c	FUNCTION_13
0x4000cde	          0x4d85ed	                           test r13, r13	       578	progress.c	FUNCTION_13	ELSE_4	IF_7	ELSE_7	IF_22	CALL_29
0x4000ce1	            0x7e14	                           jle 0x4000cf7	       578	progress.c	FUNCTION_13	ELSE_4	IF_7	ELSE_7	IF_22	CALL_29
0x4000ce3	        0x488d04b6	                  lea rax, [rsi + rsi*4]	       579	progress.c	FUNCTION_13	ELSE_4	IF_7	ELSE_7	IF_22
0x4000ce7	        0x488d0480	                  lea rax, [rax + rax*4]	       579	progress.c	FUNCTION_13	ELSE_4	IF_7	ELSE_7	IF_22
0x4000ceb	        0x48c1e002	                              shl rax, 2	       579	progress.c	FUNCTION_13	ELSE_4	IF_7	ELSE_7	IF_22
0x4000cef	            0x4899	                                     cqo	       579	progress.c	FUNCTION_13	ELSE_4	IF_7	ELSE_7	IF_22
0x4000cf1	          0x49f7fd	                                idiv r13	       579	progress.c	FUNCTION_13	ELSE_4	IF_7	ELSE_7	IF_22
0x4000cf4	          0x4989c7	                            mov r15, rax	       579	progress.c	FUNCTION_13	ELSE_4	IF_7	ELSE_7	IF_22
0x4000cf7	      0x488d6c2430	                   lea rbp, [rsp + 0x30]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000cfc	      0x488d742462	                   lea rsi, [rsp + 0x62]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d01	    0x488bbb780b00	           mov rdi, qword [rbx + 0xb78] 	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d08	      0xe833f3ffff	                       call sym.max5data	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d0d	      0x4889442408	                mov qword [rsp + 8], rax	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d12	        0x488d7528	                   lea rsi, [rbp + 0x28]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d16	    0x488bbba00b00	           mov rdi, qword [rbx + 0xba0] 	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d1d	      0xe81ef3ffff	                       call sym.max5data	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d22	      0x4889442410	             mov qword [rsp + 0x10], rax	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d27	        0x488d751e	                   lea rsi, [rbp + 0x1e]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d2b	    0x488bbb980b00	           mov rdi, qword [rbx + 0xb98] 	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d32	      0xe809f3ffff	                       call sym.max5data	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d37	      0x4889442418	             mov qword [rsp + 0x18], rax	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d3c	        0x488d750a	                    lea rsi, [rbp + 0xa]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d40	    0x488bbb700b00	           mov rdi, qword [rbx + 0xb70] 	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d47	      0xe8f4f2ffff	                       call sym.max5data	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d4c	      0x4889442420	             mov qword [rsp + 0x20], rax	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d51	    0x488bbb680b00	           mov rdi, qword [rbx + 0xb68] 	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d58	          0x4889ee	                            mov rsi, rbp	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d5b	      0xe8e0f2ffff	                       call sym.max5data	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d60	      0x4889442428	             mov qword [rsp + 0x28], rax	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d65	        0x488d7514	                   lea rsi, [rbp + 0x14]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d69	          0x4c89ef	                            mov rdi, r13	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d6c	      0xe8cff2ffff	                       call sym.max5data	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d71	    0x488bbbf00100	           mov rdi, qword [rbx + 0x1f0] 	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d78	        0xff742408	                    push qword [rsp + 8]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d7c	      0x488d542478	                   lea rdx, [rsp + 0x78]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d81	              0x52	                                push rdx	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d82	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d8a	              0x52	                                push rdx	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d8b	    0x488d94249800	                   lea rdx, [rsp + 0x98]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d93	              0x52	                                push rdx	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d94	        0xff742430	                 push qword [rsp + 0x30]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d98	        0xff742440	                 push qword [rsp + 0x40]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000d9c	        0xff742450	                 push qword [rsp + 0x50]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000da0	            0x4156	                                push r14	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000da2	      0x4c8b4c2468	              mov r9, qword [rsp + 0x68]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000da7	      0x4c8b442440	              mov r8, qword [rsp + 0x40]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000dac	          0x4889c1	                            mov rcx, rax	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000daf	          0x4c89fa	                            mov rdx, r15	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000db2	    0x488d35000000	                   lea rsi, [0x04000db9]	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000db9	      0xb800000000	                              mov eax, 0	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000dbe	      0xe800000000	                          call 0x4000dc3	       581	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_30
0x4000dc3	        0x4883c440	                           add rsp, 0x40	       601	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_37
0x4000dc7	    0x488bbbf00100	           mov rdi, qword [rbx + 0x1f0] 	       601	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_37
0x4000dce	      0xe800000000	                          call 0x4000dd3	       601	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_37
0x4000dd3	            0xeb06	                           jmp 0x4000ddb	       601	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_37
0x4000dd5	    0x41bc00000000	                             mov r12d, 0	       605	progress.c	FUNCTION_13
0x4000ddb	          0x4489e0	                           mov eax, r12d	       606	progress.c	FUNCTION_13
0x4000dde	    0x488bbc24a800	            mov rdi, qword [rsp + 0xa8] 	       606	progress.c	FUNCTION_13
0x4000de6	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       606	progress.c	FUNCTION_13
0x4000def	            0x743e	                            je 0x4000e2f	       606	progress.c	FUNCTION_13
0x4000df1	            0xeb37	                           jmp 0x4000e2a	       606	progress.c	FUNCTION_13
0x4000df3	          0xf6c140	                           test cl, 0x40	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000df6	     0xf8422feffff	                            je 0x4000c1e	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000dfc	    0x488bb3980b00	           mov rsi, qword [rbx + 0xb98] 	       544	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18	CALL_20
0x4000e03	          0x4885f6	                           test rsi, rsi	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000e06	     0xf8f65fdffff	                            jg 0x4000b71	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000e0c	    0x41bd00000000	                             mov r13d, 0	       557	progress.c	FUNCTION_13	ELSE_4	IF_7
0x4000e12	    0x41be00000000	                             mov r14d, 0	       543	progress.c	FUNCTION_13	ELSE_4	IF_7	IF_18
0x4000e18	    0x48c704240000	                      mov qword [rsp], 0	       374	progress.c	FUNCTION_13
0x4000e20	      0xbe00000000	                              mov esi, 0	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000e25	      0xe90dfeffff	                           jmp 0x4000c37	       560	progress.c	FUNCTION_13	ELSE_4	IF_7	CALL_24
0x4000e2a	      0xe800000000	                          call 0x4000e2f	       606	progress.c	FUNCTION_13
0x4000e2f	    0x4881c4b80000	                           add rsp, 0xb8	       606	progress.c	FUNCTION_13
0x4000e36	              0x5b	                                 pop rbx	       606	progress.c	FUNCTION_13
0x4000e37	              0x5d	                                 pop rbp	       606	progress.c	FUNCTION_13
0x4000e38	            0x415c	                                 pop r12	       606	progress.c	FUNCTION_13
0x4000e3a	            0x415d	                                 pop r13	       606	progress.c	FUNCTION_13
0x4000e3c	            0x415e	                                 pop r14	       606	progress.c	FUNCTION_13
0x4000e3e	            0x415f	                                 pop r15	       606	progress.c	FUNCTION_13
0x4000e40	              0xc3	                                     ret	       606	progress.c	FUNCTION_13
Curl_pgrsTime	IF,3:WHILE,0:functions,0:CALL,3:ELSE,1:FOR,0:DO,0:SWITCH,1	58
0x40003cb	              0x55	                                push rbp	       167	progress.c	FUNCTION_5
0x40003cc	              0x53	                                push rbx	       167	progress.c	FUNCTION_5
0x40003cd	        0x4883ec08	                              sub rsp, 8	       167	progress.c	FUNCTION_5
0x40003d1	          0x4889fd	                            mov rbp, rdi	       167	progress.c	FUNCTION_5
0x40003d4	            0x89f3	                            mov ebx, esi	       167	progress.c	FUNCTION_5
0x40003d6	      0xe800000000	                          call 0x40003db	       168	progress.c	FUNCTION_5	CALL_1
0x40003db	          0x4889d6	                            mov rsi, rdx	       168	progress.c	FUNCTION_5	CALL_1
0x40003de	          0x83fb0a	                            cmp ebx, 0xa	       171	progress.c	FUNCTION_5	SWITCH_1
0x40003e1	     0xf87ae000000	                            ja 0x4000495	       171	progress.c	FUNCTION_5	SWITCH_1
0x40003e7	            0x89db	                            mov ebx, ebx	       171	progress.c	FUNCTION_5	SWITCH_1
0x40003e9	    0x488d0d000000	                   lea rcx, [0x040003f0]	       171	progress.c	FUNCTION_5	SWITCH_1
0x40003f0	        0x48631499	         movsxd rdx, dword [rcx + rbx*4]	       171	progress.c	FUNCTION_5	SWITCH_1
0x40003f4	          0x4801d1	                            add rcx, rdx	       171	progress.c	FUNCTION_5	SWITCH_1
0x40003f7	            0xffe1	                                 jmp rcx	       171	progress.c	FUNCTION_5	SWITCH_1
0x40003f9	    0x488985f80b00	           mov qword [rbp + 0xbf8], rax 	       178	progress.c	FUNCTION_5	SWITCH_1
0x4000400	    0x4889b5000c00	           mov qword [rbp + 0xc00], rsi 	       178	progress.c	FUNCTION_5	SWITCH_1
0x4000407	      0xe9b8000000	                           jmp 0x40004c4	       179	progress.c	FUNCTION_5	SWITCH_1
0x400040c	    0x488985e80b00	           mov qword [rbp + 0xbe8], rax 	       182	progress.c	FUNCTION_5	SWITCH_1
0x4000413	    0x4889b5f00b00	           mov qword [rbp + 0xbf0], rsi 	       182	progress.c	FUNCTION_5	SWITCH_1
0x400041a	    0xc685180c0000	               mov byte [rbp + 0xc18], 0	       183	progress.c	FUNCTION_5	SWITCH_1
0x4000421	      0xe99e000000	                           jmp 0x40004c4	       184	progress.c	FUNCTION_5	SWITCH_1
0x4000426	    0x488985080c00	           mov qword [rbp + 0xc08], rax 	       186	progress.c	FUNCTION_5	SWITCH_1
0x400042d	    0x4889b5100c00	           mov qword [rbp + 0xc10], rsi 	       186	progress.c	FUNCTION_5	SWITCH_1
0x4000434	      0xe98b000000	                           jmp 0x40004c4	       187	progress.c	FUNCTION_5	SWITCH_1
0x4000439	    0x488d9da80b00	                  lea rbx, [rbp + 0xba8]	       189	progress.c	FUNCTION_5	SWITCH_1
0x4000440	            0xeb58	                           jmp 0x400049a	       190	progress.c	FUNCTION_5	SWITCH_1
0x4000442	    0x488d9db00b00	                  lea rbx, [rbp + 0xbb0]	       192	progress.c	FUNCTION_5	SWITCH_1
0x4000449	            0xeb4f	                           jmp 0x400049a	       193	progress.c	FUNCTION_5	SWITCH_1
0x400044b	    0x488d9db80b00	                  lea rbx, [rbp + 0xbb8]	       195	progress.c	FUNCTION_5	SWITCH_1
0x4000452	            0xeb46	                           jmp 0x400049a	       196	progress.c	FUNCTION_5	SWITCH_1
0x4000454	    0x488d9dc00b00	                  lea rbx, [rbp + 0xbc0]	       198	progress.c	FUNCTION_5	SWITCH_1
0x400045b	            0xeb3d	                           jmp 0x400049a	       199	progress.c	FUNCTION_5	SWITCH_1
0x400045d	    0x80bd180c0000	               cmp byte [rbp + 0xc18], 0	       208	progress.c	FUNCTION_5	SWITCH_1	IF_1
0x4000464	            0x755e	                           jne 0x40004c4	       208	progress.c	FUNCTION_5	SWITCH_1	IF_1
0x4000466	    0x488d9dc80b00	                  lea rbx, [rbp + 0xbc8]	       201	progress.c	FUNCTION_5	SWITCH_1
0x400046d	    0xc685180c0000	               mov byte [rbp + 0xc18], 1	       212	progress.c	FUNCTION_5	SWITCH_1	ELSE_1
0x4000474	            0xeb24	                           jmp 0x400049a	       213	progress.c	FUNCTION_5	SWITCH_1	ELSE_1
0x4000476	    0x488b95d80b00	           mov rdx, qword [rbp + 0xbd8] 	       219	progress.c	FUNCTION_5	SWITCH_1	CALL_2
0x400047d	    0x488b8de00b00	           mov rcx, qword [rbp + 0xbe0] 	       219	progress.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000484	          0x4889c7	                            mov rdi, rax	       219	progress.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000487	      0xe800000000	                          call 0x400048c	       219	progress.c	FUNCTION_5	SWITCH_1	CALL_2
0x400048c	    0x488985d00b00	           mov qword [rbp + 0xbd0], rax 	       219	progress.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000493	            0xeb2f	                           jmp 0x40004c4	       220	progress.c	FUNCTION_5	SWITCH_1
0x4000495	      0xbb00000000	                              mov ebx, 0	       169	progress.c	FUNCTION_5
0x400049a	          0x4885db	                           test rbx, rbx	       222	progress.c	FUNCTION_5	IF_2
0x400049d	            0x7425	                            je 0x40004c4	       222	progress.c	FUNCTION_5	IF_2
0x400049f	    0x488b95e80b00	           mov rdx, qword [rbp + 0xbe8] 	       223	progress.c	FUNCTION_5	IF_2	CALL_3
0x40004a6	    0x488b8df00b00	           mov rcx, qword [rbp + 0xbf0] 	       223	progress.c	FUNCTION_5	IF_2	CALL_3
0x40004ad	          0x4889c7	                            mov rdi, rax	       223	progress.c	FUNCTION_5	IF_2	CALL_3
0x40004b0	      0xe800000000	                          call 0x40004b5	       223	progress.c	FUNCTION_5	IF_2	CALL_3
0x40004b5	          0x4885c0	                           test rax, rax	       225	progress.c	FUNCTION_5	IF_2	IF_3
0x40004b8	      0xba01000000	                              mov edx, 1	       225	progress.c	FUNCTION_5	IF_2	IF_3
0x40004bd	        0x480f4ec2	                         cmovle rax, rdx	       225	progress.c	FUNCTION_5	IF_2	IF_3
0x40004c1	          0x480103	                    add qword [rbx], rax	       226	progress.c	FUNCTION_5	IF_2
0x40004c4	        0x4883c408	                              add rsp, 8	       228	progress.c	FUNCTION_5
0x40004c8	              0x5b	                                 pop rbx	       228	progress.c	FUNCTION_5
0x40004c9	              0x5d	                                 pop rbp	       228	progress.c	FUNCTION_5
0x40004ca	              0xc3	                                     ret	       228	progress.c	FUNCTION_5
max5data	IF,7:WHILE,0:functions,0:CALL,18:ELSE,8:FOR,0:DO,0:SWITCH,0	129
0x4000040	              0x53	                                push rbx	        67	progress.c	FUNCTION_2
0x4000041	          0x4889f3	                            mov rbx, rsi	        67	progress.c	FUNCTION_2
0x4000044	    0x4881ff9f8601	                        cmp rdi, 0x1869f	        74	progress.c	FUNCTION_2	IF_1	CALL_1
0x400004b	            0x7f21	                            jg 0x400006e	        74	progress.c	FUNCTION_2	IF_1	CALL_1
0x400004d	          0x4889f9	                            mov rcx, rdi	        75	progress.c	FUNCTION_2	CALL_2
0x4000050	    0x488d15000000	                   lea rdx, [0x04000057]	        75	progress.c	FUNCTION_2	CALL_2
0x4000057	      0xbe06000000	                              mov esi, 6	        75	progress.c	FUNCTION_2	CALL_2
0x400005c	          0x4889df	                            mov rdi, rbx	        75	progress.c	FUNCTION_2	CALL_2
0x400005f	      0xb800000000	                              mov eax, 0	        75	progress.c	FUNCTION_2	CALL_2
0x4000064	      0xe800000000	                          call 0x4000069	        75	progress.c	FUNCTION_2	CALL_2
0x4000069	      0xe913020000	                           jmp 0x4000281	        75	progress.c	FUNCTION_2	CALL_2
0x400006e	    0x4881ffff3f9c	                       cmp rdi, 0x9c3fff	        77	progress.c	FUNCTION_2	ELSE_1	IF_2	CALL_3
0x4000075	            0x7f30	                            jg 0x40000a7	        77	progress.c	FUNCTION_2	ELSE_1	IF_2	CALL_3
0x4000077	    0x488d8fff0300	                  lea rcx, [rdi + 0x3ff]	        78	progress.c	FUNCTION_2	ELSE_1	IF_2
0x400007e	          0x4885ff	                           test rdi, rdi	        78	progress.c	FUNCTION_2	ELSE_1	IF_2
0x4000081	        0x480f49cf	                         cmovns rcx, rdi	        78	progress.c	FUNCTION_2	ELSE_1	IF_2
0x4000085	        0x48c1f90a	                            sar rcx, 0xa	        78	progress.c	FUNCTION_2	ELSE_1	IF_2
0x4000089	    0x488d15000000	                   lea rdx, [0x04000090]	        78	progress.c	FUNCTION_2	ELSE_1	IF_2
0x4000090	      0xbe06000000	                              mov esi, 6	        78	progress.c	FUNCTION_2	ELSE_1	IF_2
0x4000095	          0x4889df	                            mov rdi, rbx	        78	progress.c	FUNCTION_2	ELSE_1	IF_2
0x4000098	      0xb800000000	                              mov eax, 0	        78	progress.c	FUNCTION_2	ELSE_1	IF_2
0x400009d	      0xe800000000	                          call 0x40000a2	        78	progress.c	FUNCTION_2	ELSE_1	IF_2
0x40000a2	      0xe9da010000	                           jmp 0x4000281	        78	progress.c	FUNCTION_2	ELSE_1	IF_2
0x40000a7	    0x4881ffffff3f	                      cmp rdi, 0x63fffff	        80	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_5
0x40000ae	            0x7f6a	                            jg 0x400011a	        80	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_5
0x40000b0	          0x4889f8	                            mov rax, rdi	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000b3	        0x48c1f83f	                           sar rax, 0x3f	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000b7	        0x48c1e82c	                           shr rax, 0x2c	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000bb	        0x488d0c07	                    lea rcx, [rdi + rax]	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000bf	    0x81e1ffff0f00	                        and ecx, 0xfffff	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000c5	          0x4829c1	                            sub rcx, rax	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000c8	    0x48ba71088016	          movabs rdx, 0xa0003c0016800871	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000d2	          0x4889c8	                            mov rax, rcx	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000d5	          0x48f7ea	                                imul rdx	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000d8	        0x4c8d040a	                     lea r8, [rdx + rcx]	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000dc	        0x49c1f810	                            sar r8, 0x10	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000e0	          0x4889c8	                            mov rax, rcx	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000e3	        0x48c1f83f	                           sar rax, 0x3f	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000e7	    0x488d8fffff0f	                lea rcx, [rdi + 0xfffff]	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000ee	          0x4885ff	                           test rdi, rdi	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000f1	        0x480f49cf	                         cmovns rcx, rdi	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000f5	        0x48c1f914	                           sar rcx, 0x14	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000f9	          0x4929c0	                             sub r8, rax	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x40000fc	    0x488d15000000	                   lea rdx, [0x04000103]	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x4000103	      0xbe06000000	                              mov esi, 6	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x4000108	          0x4889df	                            mov rdi, rbx	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x400010b	      0xb800000000	                              mov eax, 0	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x4000110	      0xe800000000	                          call 0x4000115	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x4000115	      0xe967010000	                           jmp 0x4000281	        82	progress.c	FUNCTION_2	ELSE_2	IF_3	CALL_6
0x400011a	    0x48b8ffffff70	                 movabs rax, 0x270ffffff	        88	progress.c	FUNCTION_2	ELSE_3	IF_4	CALL_8
0x4000124	          0x4839c7	                            cmp rdi, rax	        88	progress.c	FUNCTION_2	ELSE_3	IF_4	CALL_8
0x4000127	            0x7f30	                            jg 0x4000159	        88	progress.c	FUNCTION_2	ELSE_3	IF_4	CALL_8
0x4000129	    0x488d8fffff0f	                lea rcx, [rdi + 0xfffff]	        90	progress.c	FUNCTION_2	ELSE_3	IF_4
0x4000130	          0x4885ff	                           test rdi, rdi	        90	progress.c	FUNCTION_2	ELSE_3	IF_4
0x4000133	        0x480f49cf	                         cmovns rcx, rdi	        90	progress.c	FUNCTION_2	ELSE_3	IF_4
0x4000137	        0x48c1f914	                           sar rcx, 0x14	        90	progress.c	FUNCTION_2	ELSE_3	IF_4
0x400013b	    0x488d15000000	                   lea rdx, [0x04000142]	        90	progress.c	FUNCTION_2	ELSE_3	IF_4
0x4000142	      0xbe06000000	                              mov esi, 6	        90	progress.c	FUNCTION_2	ELSE_3	IF_4
0x4000147	          0x4889df	                            mov rdi, rbx	        90	progress.c	FUNCTION_2	ELSE_3	IF_4
0x400014a	      0xb800000000	                              mov eax, 0	        90	progress.c	FUNCTION_2	ELSE_3	IF_4
0x400014f	      0xe800000000	                          call 0x4000154	        90	progress.c	FUNCTION_2	ELSE_3	IF_4
0x4000154	      0xe928010000	                           jmp 0x4000281	        90	progress.c	FUNCTION_2	ELSE_3	IF_4
0x4000159	    0x48b8ffffffff	                movabs rax, 0x18ffffffff	        92	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_10
0x4000163	          0x4839c7	                            cmp rdi, rax	        92	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_10
0x4000166	            0x7f6a	                            jg 0x40001d2	        92	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_10
0x4000168	          0x4889f8	                            mov rax, rdi	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x400016b	        0x48c1f83f	                           sar rax, 0x3f	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x400016f	        0x48c1e822	                           shr rax, 0x22	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x4000173	        0x488d0c07	                    lea rcx, [rdi + rax]	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x4000177	    0x81e1ffffff3f	                     and ecx, 0x3fffffff	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x400017d	          0x4829c1	                            sub rcx, rax	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x4000180	    0x48baa1000000	          movabs rdx, 0xa000000a000000a1	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x400018a	          0x4889c8	                            mov rax, rcx	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x400018d	          0x48f7ea	                                imul rdx	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x4000190	        0x4c8d040a	                     lea r8, [rdx + rcx]	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x4000194	        0x49c1f81a	                            sar r8, 0x1a	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x4000198	          0x4889c8	                            mov rax, rcx	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x400019b	        0x48c1f83f	                           sar rax, 0x3f	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x400019f	    0x488d8fffffff	             lea rcx, [rdi + 0x3fffffff]	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x40001a6	          0x4885ff	                           test rdi, rdi	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x40001a9	        0x480f49cf	                         cmovns rcx, rdi	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x40001ad	        0x48c1f91e	                           sar rcx, 0x1e	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x40001b1	          0x4929c0	                             sub r8, rax	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x40001b4	    0x488d15000000	                   lea rdx, [0x040001bb]	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x40001bb	      0xbe06000000	                              mov esi, 6	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x40001c0	          0x4889df	                            mov rdi, rbx	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x40001c3	      0xb800000000	                              mov eax, 0	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x40001c8	      0xe800000000	                          call 0x40001cd	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x40001cd	      0xe9af000000	                           jmp 0x4000281	        94	progress.c	FUNCTION_2	ELSE_4	IF_5	CALL_11
0x40001d2	    0x48b8ffffffff	               movabs rax, 0x9c3ffffffff	        98	progress.c	FUNCTION_2	ELSE_5	IF_6	CALL_13
0x40001dc	          0x4839c7	                            cmp rdi, rax	        98	progress.c	FUNCTION_2	ELSE_5	IF_6	CALL_13
0x40001df	            0x7f2d	                            jg 0x400020e	        98	progress.c	FUNCTION_2	ELSE_5	IF_6	CALL_13
0x40001e1	    0x488d8fffffff	             lea rcx, [rdi + 0x3fffffff]	       100	progress.c	FUNCTION_2	ELSE_5	IF_6
0x40001e8	          0x4885ff	                           test rdi, rdi	       100	progress.c	FUNCTION_2	ELSE_5	IF_6
0x40001eb	        0x480f49cf	                         cmovns rcx, rdi	       100	progress.c	FUNCTION_2	ELSE_5	IF_6
0x40001ef	        0x48c1f91e	                           sar rcx, 0x1e	       100	progress.c	FUNCTION_2	ELSE_5	IF_6
0x40001f3	    0x488d15000000	                   lea rdx, [0x040001fa]	       100	progress.c	FUNCTION_2	ELSE_5	IF_6
0x40001fa	      0xbe06000000	                              mov esi, 6	       100	progress.c	FUNCTION_2	ELSE_5	IF_6
0x40001ff	          0x4889df	                            mov rdi, rbx	       100	progress.c	FUNCTION_2	ELSE_5	IF_6
0x4000202	      0xb800000000	                              mov eax, 0	       100	progress.c	FUNCTION_2	ELSE_5	IF_6
0x4000207	      0xe800000000	                          call 0x400020c	       100	progress.c	FUNCTION_2	ELSE_5	IF_6
0x400020c	            0xeb73	                           jmp 0x4000281	       100	progress.c	FUNCTION_2	ELSE_5	IF_6
0x400020e	    0x48b8ffffffff	           movabs rax, 0x270fffffffffff 	       102	progress.c	FUNCTION_2	ELSE_6	IF_7	CALL_15
0x4000218	          0x4839c7	                            cmp rdi, rax	       102	progress.c	FUNCTION_2	ELSE_6	IF_7	CALL_15
0x400021b	            0x7f33	                            jg 0x4000250	       102	progress.c	FUNCTION_2	ELSE_6	IF_7	CALL_15
0x400021d	    0x48b9ffffffff	                movabs rcx, 0xffffffffff	       104	progress.c	FUNCTION_2	ELSE_6	IF_7
0x4000227	          0x4801f9	                            add rcx, rdi	       104	progress.c	FUNCTION_2	ELSE_6	IF_7
0x400022a	          0x4885ff	                           test rdi, rdi	       104	progress.c	FUNCTION_2	ELSE_6	IF_7
0x400022d	        0x480f49cf	                         cmovns rcx, rdi	       104	progress.c	FUNCTION_2	ELSE_6	IF_7
0x4000231	        0x48c1f928	                           sar rcx, 0x28	       104	progress.c	FUNCTION_2	ELSE_6	IF_7
0x4000235	    0x488d15000000	                   lea rdx, [0x0400023c]	       104	progress.c	FUNCTION_2	ELSE_6	IF_7
0x400023c	      0xbe06000000	                              mov esi, 6	       104	progress.c	FUNCTION_2	ELSE_6	IF_7
0x4000241	          0x4889df	                            mov rdi, rbx	       104	progress.c	FUNCTION_2	ELSE_6	IF_7
0x4000244	      0xb800000000	                              mov eax, 0	       104	progress.c	FUNCTION_2	ELSE_6	IF_7
0x4000249	      0xe800000000	                          call 0x400024e	       104	progress.c	FUNCTION_2	ELSE_6	IF_7
0x400024e	            0xeb31	                           jmp 0x4000281	       104	progress.c	FUNCTION_2	ELSE_6	IF_7
0x4000250	    0x48b9ffffffff	            movabs rcx, 0x3ffffffffffff 	       108	progress.c	FUNCTION_2	CALL_17
0x400025a	          0x4801f9	                            add rcx, rdi	       108	progress.c	FUNCTION_2	CALL_17
0x400025d	          0x4885ff	                           test rdi, rdi	       108	progress.c	FUNCTION_2	CALL_17
0x4000260	        0x480f49cf	                         cmovns rcx, rdi	       108	progress.c	FUNCTION_2	CALL_17
0x4000264	        0x48c1f932	                           sar rcx, 0x32	       108	progress.c	FUNCTION_2	CALL_17
0x4000268	    0x488d15000000	                   lea rdx, [0x0400026f]	       108	progress.c	FUNCTION_2	CALL_17
0x400026f	      0xbe06000000	                              mov esi, 6	       108	progress.c	FUNCTION_2	CALL_17
0x4000274	          0x4889df	                            mov rdi, rbx	       108	progress.c	FUNCTION_2	CALL_17
0x4000277	      0xb800000000	                              mov eax, 0	       108	progress.c	FUNCTION_2	CALL_17
0x400027c	      0xe800000000	                          call 0x4000281	       108	progress.c	FUNCTION_2	CALL_17
0x4000281	          0x4889d8	                            mov rax, rbx	       121	progress.c	FUNCTION_2
0x4000284	              0x5b	                                 pop rbx	       121	progress.c	FUNCTION_2
0x4000285	              0xc3	                                     ret	       121	progress.c	FUNCTION_2
Curl_pgrsSetDownloadCounter	IF,0:WHILE,0:functions,0:CALL,0:ELSE,0:FOR,0:DO,0:SWITCH,0	2
0x4000557	    0x4889b7680b00	            mov qword [rdi + 0xb68], rsi	       308	progress.c	FUNCTION_8
0x400055e	              0xc3	                                     ret	       308	progress.c	FUNCTION_8
time2str	IF,3:WHILE,0:functions,0:CALL,14:ELSE,2:FOR,0:DO,0:SWITCH,0	67
0x4000286	          0x4885f6	                           test rsi, rsi	        39	progress.c	FUNCTION_1	IF_1
0x4000289	            0x7f12	                            jg 0x400029d	        39	progress.c	FUNCTION_1	IF_1
0x400028b	    0x48b82d2d3a2d	          movabs rax, 0x2d2d3a2d2d3a2d2d	       110	string3.h	FUNCTION_20	CALL_3
0x4000295	          0x488907	                    mov qword [rdi], rax	       110	string3.h	FUNCTION_20	CALL_3
0x4000298	        0xc6470800	                   mov byte [rdi + 8], 0	       110	string3.h	FUNCTION_20	CALL_3
0x400029c	              0xc3	                                     ret	       110	string3.h	FUNCTION_20	CALL_3
0x400029d	        0x4883ec08	                              sub rsp, 8	        37	progress.c	FUNCTION_1
0x40002a1	    0x48ba057cf36a	          movabs rdx, 0x48d159e26af37c05	        43	progress.c	FUNCTION_1	CALL_2
0x40002ab	          0x4889f0	                            mov rax, rsi	        43	progress.c	FUNCTION_1	CALL_2
0x40002ae	          0x48f7ea	                                imul rdx	        43	progress.c	FUNCTION_1	CALL_2
0x40002b1	          0x4889d1	                            mov rcx, rdx	        43	progress.c	FUNCTION_1	CALL_2
0x40002b4	        0x48c1f90a	                            sar rcx, 0xa	        43	progress.c	FUNCTION_1	CALL_2
0x40002b8	          0x4889f0	                            mov rax, rsi	        43	progress.c	FUNCTION_1	CALL_2
0x40002bb	        0x48c1f83f	                           sar rax, 0x3f	        43	progress.c	FUNCTION_1	CALL_2
0x40002bf	          0x4829c1	                            sub rcx, rax	        43	progress.c	FUNCTION_1	CALL_2
0x40002c2	        0x4883f963	                           cmp rcx, 0x63	        44	progress.c	FUNCTION_1	IF_2	CALL_3
0x40002c6	            0x7f58	                            jg 0x4000320	        44	progress.c	FUNCTION_1	IF_2	CALL_3
0x40002c8	    0x4869c1f0f1ff	       imul rax, rcx, 0xfffffffffffff1f0	        45	progress.c	FUNCTION_1	IF_2	CALL_5
0x40002cf	          0x4801c6	                            add rsi, rax	        45	progress.c	FUNCTION_1	IF_2	CALL_5
0x40002d2	    0x48ba89888888	          movabs rdx, 0x8888888888888889	        45	progress.c	FUNCTION_1	IF_2	CALL_5
0x40002dc	          0x4889f0	                            mov rax, rsi	        45	progress.c	FUNCTION_1	IF_2	CALL_5
0x40002df	          0x48f7ea	                                imul rdx	        45	progress.c	FUNCTION_1	IF_2	CALL_5
0x40002e2	        0x4c8d0432	                     lea r8, [rdx + rsi]	        45	progress.c	FUNCTION_1	IF_2	CALL_5
0x40002e6	        0x49c1f805	                               sar r8, 5	        45	progress.c	FUNCTION_1	IF_2	CALL_5
0x40002ea	          0x4889f0	                            mov rax, rsi	        45	progress.c	FUNCTION_1	IF_2	CALL_5
0x40002ed	        0x48c1f83f	                           sar rax, 0x3f	        45	progress.c	FUNCTION_1	IF_2	CALL_5
0x40002f1	          0x4929c0	                             sub r8, rax	        45	progress.c	FUNCTION_1	IF_2	CALL_5
0x40002f4	          0x4c89c0	                             mov rax, r8	        47	progress.c	FUNCTION_1	IF_2	CALL_8
0x40002f7	          0x48f7d8	                                 neg rax	        47	progress.c	FUNCTION_1	IF_2	CALL_8
0x40002fa	        0x48c1e004	                              shl rax, 4	        47	progress.c	FUNCTION_1	IF_2	CALL_8
0x40002fe	          0x4c01c0	                             add rax, r8	        47	progress.c	FUNCTION_1	IF_2	CALL_8
0x4000301	        0x4c8d0c86	                   lea r9, [rsi + rax*4]	        47	progress.c	FUNCTION_1	IF_2	CALL_8
0x4000305	    0x488d15000000	                   lea rdx, [0x0400030c]	        47	progress.c	FUNCTION_1	IF_2	CALL_8
0x400030c	      0xbe09000000	                              mov esi, 9	        47	progress.c	FUNCTION_1	IF_2	CALL_8
0x4000311	      0xb800000000	                              mov eax, 0	        47	progress.c	FUNCTION_1	IF_2	CALL_8
0x4000316	      0xe800000000	                          call 0x400031b	        47	progress.c	FUNCTION_1	IF_2	CALL_8
0x400031b	      0xe980000000	                           jmp 0x40003a0	        47	progress.c	FUNCTION_1	IF_2	CALL_8
0x4000320	    0x48ba572951ce	          movabs rdx, 0x1845c8a0ce512957	        53	progress.c	FUNCTION_1	ELSE_1	CALL_9
0x400032a	          0x4889f0	                            mov rax, rsi	        53	progress.c	FUNCTION_1	ELSE_1	CALL_9
0x400032d	          0x48f7ea	                                imul rdx	        53	progress.c	FUNCTION_1	ELSE_1	CALL_9
0x4000330	        0x48c1fa0d	                            sar rdx, 0xd	        53	progress.c	FUNCTION_1	ELSE_1	CALL_9
0x4000334	          0x4889d1	                            mov rcx, rdx	        53	progress.c	FUNCTION_1	ELSE_1	CALL_9
0x4000337	          0x4889f0	                            mov rax, rsi	        53	progress.c	FUNCTION_1	ELSE_1	CALL_9
0x400033a	        0x48c1f83f	                           sar rax, 0x3f	        53	progress.c	FUNCTION_1	ELSE_1	CALL_9
0x400033e	          0x4829c1	                            sub rcx, rax	        53	progress.c	FUNCTION_1	ELSE_1	CALL_9
0x4000341	    0x4881f9e70300	                          cmp rcx, 0x3e7	        55	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_12
0x4000348	            0x7f40	                            jg 0x400038a	        55	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_12
0x400034a	    0x4869c180aefe	       imul rax, rcx, 0xfffffffffffeae80	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x4000351	          0x4801c6	                            add rsi, rax	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x4000354	    0x48ba057cf36a	          movabs rdx, 0x48d159e26af37c05	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x400035e	          0x4889f0	                            mov rax, rsi	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x4000361	          0x48f7ea	                                imul rdx	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x4000364	        0x48c1fa0a	                            sar rdx, 0xa	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x4000368	          0x4989d0	                             mov r8, rdx	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x400036b	        0x48c1fe3f	                           sar rsi, 0x3f	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x400036f	          0x4929f0	                             sub r8, rsi	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x4000372	    0x488d15000000	                   lea rdx, [0x04000379]	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x4000379	      0xbe09000000	                              mov esi, 9	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x400037e	      0xb800000000	                              mov eax, 0	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x4000383	      0xe800000000	                          call 0x4000388	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x4000388	            0xeb16	                           jmp 0x40003a0	        56	progress.c	FUNCTION_1	ELSE_1	IF_3	CALL_13
0x400038a	    0x488d15000000	                   lea rdx, [0x04000391]	        59	progress.c	FUNCTION_1	ELSE_1	CALL_14
0x4000391	      0xbe09000000	                              mov esi, 9	        59	progress.c	FUNCTION_1	ELSE_1	CALL_14
0x4000396	      0xb800000000	                              mov eax, 0	        59	progress.c	FUNCTION_1	ELSE_1	CALL_14
0x400039b	      0xe800000000	                          call 0x40003a0	        59	progress.c	FUNCTION_1	ELSE_1	CALL_14
0x40003a0	        0x4883c408	                              add rsp, 8	        61	progress.c	FUNCTION_1
0x40003a4	              0xc3	                                     ret	        61	progress.c	FUNCTION_1
Curl_pgrsLimitWaitTime	IF,4:WHILE,0:functions,0:CALL,2:ELSE,2:FOR,0:DO,0:SWITCH,0	38
0x40004cb	              0x53	                                push rbx	       267	progress.c	FUNCTION_7
0x40004cc	          0x4889f8	                            mov rax, rdi	       267	progress.c	FUNCTION_7
0x40004cf	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       267	progress.c	FUNCTION_7
0x40004d4	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       267	progress.c	FUNCTION_7
0x40004d9	          0x4829f0	                            sub rax, rsi	       268	progress.c	FUNCTION_7
0x40004dc	          0x4885d2	                           test rdx, rdx	       272	progress.c	FUNCTION_7	IF_1
0x40004df	            0x746f	                            je 0x4000550	       272	progress.c	FUNCTION_7	IF_1
0x40004e1	          0x4889d3	                            mov rbx, rdx	       272	progress.c	FUNCTION_7	IF_1
0x40004e4	          0x4885c0	                           test rax, rax	       272	progress.c	FUNCTION_7	IF_1
0x40004e7	            0x7467	                            je 0x4000550	       272	progress.c	FUNCTION_7	IF_1
0x40004e9	    0x48bef653e3a5	            movabs rsi, 0x20c49ba5e353f6	       279	progress.c	FUNCTION_7	IF_2
0x40004f3	          0x4839f0	                            cmp rax, rsi	       279	progress.c	FUNCTION_7	IF_2
0x40004f6	            0x7f11	                            jg 0x4000509	       279	progress.c	FUNCTION_7	IF_2
0x40004f8	    0x4869c0e80300	                    imul rax, rax, 0x3e8	       280	progress.c	FUNCTION_7	CALL_1
0x40004ff	            0x4899	                                     cqo	       280	progress.c	FUNCTION_7	CALL_1
0x4000501	          0x48f7fb	                                idiv rbx	       280	progress.c	FUNCTION_7	CALL_1
0x4000504	          0x4889c3	                            mov rbx, rax	       280	progress.c	FUNCTION_7	CALL_1
0x4000507	            0xeb25	                           jmp 0x400052e	       280	progress.c	FUNCTION_7	CALL_1
0x4000509	            0x4899	                                     cqo	       282	progress.c	FUNCTION_7	ELSE_1
0x400050b	          0x48f7fb	                                idiv rbx	       282	progress.c	FUNCTION_7	ELSE_1
0x400050e	    0x48bbffffffff	         movabs rbx, 0x7fffffffffffffff 	       286	progress.c	FUNCTION_7	ELSE_1	ELSE_2
0x4000518	    0x48baf653e3a5	            movabs rdx, 0x20c49ba5e353f6	       283	progress.c	FUNCTION_7	ELSE_1	IF_3
0x4000522	          0x4839d0	                            cmp rax, rdx	       283	progress.c	FUNCTION_7	ELSE_1	IF_3
0x4000525	            0x7f07	                            jg 0x400052e	       283	progress.c	FUNCTION_7	ELSE_1	IF_3
0x4000527	    0x4869d8e80300	                    imul rbx, rax, 0x3e8	       284	progress.c	FUNCTION_7	ELSE_1	IF_3
0x400052e	          0x4889ca	                            mov rdx, rcx	       284	progress.c	FUNCTION_7	ELSE_1	IF_3
0x4000531	          0x4c89d6	                            mov rsi, r10	       293	progress.c	FUNCTION_7	CALL_2
0x4000534	          0x4c89c1	                             mov rcx, r8	       293	progress.c	FUNCTION_7	CALL_2
0x4000537	      0xe800000000	                          call 0x400053c	       293	progress.c	FUNCTION_7	CALL_2
0x400053c	          0x4889da	                            mov rdx, rbx	       297	progress.c	FUNCTION_7	IF_4
0x400053f	          0x4829c2	                            sub rdx, rax	       297	progress.c	FUNCTION_7	IF_4
0x4000542	          0x4839c3	                            cmp rbx, rax	       297	progress.c	FUNCTION_7	IF_4
0x4000545	      0xb800000000	                              mov eax, 0	       297	progress.c	FUNCTION_7	IF_4
0x400054a	        0x480f4fc2	                          cmovg rax, rdx	       297	progress.c	FUNCTION_7	IF_4
0x400054e	            0xeb05	                           jmp 0x4000555	       297	progress.c	FUNCTION_7	IF_4
0x4000550	      0xb800000000	                              mov eax, 0	       273	progress.c	FUNCTION_7	IF_1
0x4000555	              0x5b	                                 pop rbx	       301	progress.c	FUNCTION_7
0x4000556	              0xc3	                                     ret	       301	progress.c	FUNCTION_7
Curl_pgrsSetUploadCounter	IF,0:WHILE,0:functions,0:CALL,0:ELSE,0:FOR,0:DO,0:SWITCH,0	2
0x4000668	    0x4889b7700b00	            mov qword [rdi + 0xb70], rsi	       338	progress.c	FUNCTION_10
0x400066f	              0xc3	                                     ret	       338	progress.c	FUNCTION_10
Curl_pgrsResetTransferSizes	IF,0:WHILE,0:functions,0:CALL,2:ELSE,0:FOR,0:DO,0:SWITCH,0	6
0x40003a5	    0x48c787580b00	              mov qword [rdi + 0xb58], 0	       348	progress.c	FUNCTION_11	ELSE_1
0x40003b0	    0x48c787600b00	              mov qword [rdi + 0xb60], 0	       360	progress.c	FUNCTION_12	ELSE_1
0x40003bb	    0x8b87880b0000	           mov eax, dword [rdi + 0xb88] 	       361	progress.c	FUNCTION_12	ELSE_1
0x40003c1	          0x83e09f	                     and eax, 0xffffff9f	       361	progress.c	FUNCTION_12	ELSE_1
0x40003c4	    0x8987880b0000	            mov dword [rdi + 0xb88], eax	       361	progress.c	FUNCTION_12	ELSE_1
0x40003ca	              0xc3	                                     ret	       361	progress.c	FUNCTION_12	ELSE_1
Curl_pgrsDone	IF,2:WHILE,0:functions,0:CALL,2:ELSE,0:FOR,0:DO,0:SWITCH,0	18
0x4000e41	              0x53	                                push rbx	       138	progress.c	FUNCTION_3
0x4000e42	          0x488b1f	                    mov rbx, qword [rdi]	       140	progress.c	FUNCTION_3
0x4000e45	    0x48c783500b00	              mov qword [rbx + 0xb50], 0	       141	progress.c	FUNCTION_3
0x4000e50	      0xe800000000	                          call 0x4000e55	       142	progress.c	FUNCTION_3	CALL_1
0x4000e55	            0x85c0	                           test eax, eax	       143	progress.c	FUNCTION_3	IF_1
0x4000e57	            0x7539	                           jne 0x4000e92	       143	progress.c	FUNCTION_3	IF_1
0x4000e59	    0xf683880b0000	          test byte [rbx + 0xb88], 0x10 	       146	progress.c	FUNCTION_3	IF_2
0x4000e60	            0x7521	                           jne 0x4000e83	       146	progress.c	FUNCTION_3	IF_2
0x4000e62	    0x80bb800b0000	               cmp byte [rbx + 0xb80], 0	       146	progress.c	FUNCTION_3	IF_2
0x4000e69	            0x7518	                           jne 0x4000e83	       146	progress.c	FUNCTION_3	IF_2
0x4000e6b	    0x488bbbf00100	           mov rdi, qword [rbx + 0x1f0] 	       150	progress.c	FUNCTION_3	CALL_2
0x4000e72	    0x488d35000000	                   lea rsi, [0x04000e79]	       150	progress.c	FUNCTION_3	CALL_2
0x4000e79	      0xb800000000	                              mov eax, 0	       150	progress.c	FUNCTION_3	CALL_2
0x4000e7e	      0xe800000000	                          call 0x4000e83	       150	progress.c	FUNCTION_3	CALL_2
0x4000e83	    0xc783e00c0000	              mov dword [rbx + 0xce0], 0	       152	progress.c	FUNCTION_3
0x4000e8d	      0xb800000000	                              mov eax, 0	       153	progress.c	FUNCTION_3
0x4000e92	              0x5b	                                 pop rbx	       154	progress.c	FUNCTION_3
0x4000e93	              0xc3	                                     ret	       154	progress.c	FUNCTION_3
Curl_pgrsStartNow	IF,0:WHILE,0:functions,0:CALL,2:ELSE,0:FOR,0:DO,0:SWITCH,0	17
0x40005ff	              0x53	                                push rbx	       231	progress.c	FUNCTION_6
0x4000600	          0x4889fb	                            mov rbx, rdi	       231	progress.c	FUNCTION_6
0x4000603	    0xc787e00c0000	              mov dword [rdi + 0xce0], 0	       232	progress.c	FUNCTION_6
0x400060d	      0xe800000000	                          call 0x4000612	       233	progress.c	FUNCTION_6	CALL_1
0x4000612	          0x4889c6	                            mov rsi, rax	       233	progress.c	FUNCTION_6	CALL_1
0x4000615	    0x488983d80b00	            mov qword [rbx + 0xbd8], rax	       233	progress.c	FUNCTION_6	CALL_1
0x400061c	    0x488993e00b00	            mov qword [rbx + 0xbe0], rdx	       233	progress.c	FUNCTION_6	CALL_1
0x4000623	    0xc683180c0000	               mov byte [rbx + 0xc18], 0	       234	progress.c	FUNCTION_6
0x400062a	    0x48c783200c00	              mov qword [rbx + 0xc20], 0	       235	progress.c	FUNCTION_6
0x4000635	    0xc783280c0000	              mov dword [rbx + 0xc28], 0	       236	progress.c	FUNCTION_6
0x400063f	    0x48c783380c00	              mov qword [rbx + 0xc38], 0	       237	progress.c	FUNCTION_6
0x400064a	    0xc783400c0000	              mov dword [rbx + 0xc40], 0	       238	progress.c	FUNCTION_6
0x4000654	    0x81a3880b0000	           and dword [rbx + 0xb88], 0x90	       240	progress.c	FUNCTION_6
0x400065e	          0x4889df	                            mov rdi, rbx	       241	progress.c	FUNCTION_6	CALL_2
0x4000661	      0xe800000000	                          call 0x4000666	       241	progress.c	FUNCTION_6	CALL_2
0x4000666	              0x5b	                                 pop rbx	       242	progress.c	FUNCTION_6
0x4000667	              0xc3	                                     ret	       242	progress.c	FUNCTION_6
Curl_ratelimit	IF,4:WHILE,0:functions,0:CALL,2:ELSE,0:FOR,0:DO,0:SWITCH,0	36
0x400055f	            0x4154	                                push r12	       315	progress.c	FUNCTION_9
0x4000561	              0x55	                                push rbp	       315	progress.c	FUNCTION_9
0x4000562	              0x53	                                push rbx	       315	progress.c	FUNCTION_9
0x4000563	          0x4889fb	                            mov rbx, rdi	       315	progress.c	FUNCTION_9
0x4000566	          0x4989f4	                            mov r12, rsi	       315	progress.c	FUNCTION_9
0x4000569	          0x4889d5	                            mov rbp, rdx	       315	progress.c	FUNCTION_9
0x400056c	    0x4883bf880300	              cmp qword [rdi + 0x388], 0	       317	progress.c	FUNCTION_9	IF_1
0x4000574	            0x7e3d	                           jle 0x40005b3	       317	progress.c	FUNCTION_9	IF_1
0x4000576	    0x488b97380c00	           mov rdx, qword [rdi + 0xc38] 	       318	progress.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x400057d	    0x488b8f400c00	           mov rcx, qword [rdi + 0xc40] 	       318	progress.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000584	          0x4889f7	                            mov rdi, rsi	       318	progress.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000587	          0x4889ee	                            mov rsi, rbp	       318	progress.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x400058a	      0xe800000000	                          call 0x400058f	       318	progress.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x400058f	    0x483db70b0000	                          cmp rax, 0xbb7	       318	progress.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000595	            0x7e1c	                           jle 0x40005b3	       318	progress.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000597	    0x4c89a3380c00	            mov qword [rbx + 0xc38], r12	       320	progress.c	FUNCTION_9	IF_1	IF_2
0x400059e	    0x4889ab400c00	            mov qword [rbx + 0xc40], rbp	       320	progress.c	FUNCTION_9	IF_1	IF_2
0x40005a5	    0x488b83680b00	           mov rax, qword [rbx + 0xb68] 	       321	progress.c	FUNCTION_9	IF_1	IF_2
0x40005ac	    0x488983480c00	            mov qword [rbx + 0xc48], rax	       321	progress.c	FUNCTION_9	IF_1	IF_2
0x40005b3	    0x4883bb800300	              cmp qword [rbx + 0x380], 0	       324	progress.c	FUNCTION_9	IF_3
0x40005bb	            0x7e3d	                           jle 0x40005fa	       324	progress.c	FUNCTION_9	IF_3
0x40005bd	    0x488b93200c00	           mov rdx, qword [rbx + 0xc20] 	       325	progress.c	FUNCTION_9	IF_3	IF_4	CALL_2
0x40005c4	    0x488b8b280c00	           mov rcx, qword [rbx + 0xc28] 	       325	progress.c	FUNCTION_9	IF_3	IF_4	CALL_2
0x40005cb	          0x4c89e7	                            mov rdi, r12	       325	progress.c	FUNCTION_9	IF_3	IF_4	CALL_2
0x40005ce	          0x4889ee	                            mov rsi, rbp	       325	progress.c	FUNCTION_9	IF_3	IF_4	CALL_2
0x40005d1	      0xe800000000	                          call 0x40005d6	       325	progress.c	FUNCTION_9	IF_3	IF_4	CALL_2
0x40005d6	    0x483db70b0000	                          cmp rax, 0xbb7	       325	progress.c	FUNCTION_9	IF_3	IF_4	CALL_2
0x40005dc	            0x7e1c	                           jle 0x40005fa	       325	progress.c	FUNCTION_9	IF_3	IF_4	CALL_2
0x40005de	    0x4c89a3200c00	            mov qword [rbx + 0xc20], r12	       327	progress.c	FUNCTION_9	IF_3	IF_4
0x40005e5	    0x4889ab280c00	            mov qword [rbx + 0xc28], rbp	       327	progress.c	FUNCTION_9	IF_3	IF_4
0x40005ec	    0x488b83700b00	           mov rax, qword [rbx + 0xb70] 	       328	progress.c	FUNCTION_9	IF_3	IF_4
0x40005f3	    0x488983300c00	            mov qword [rbx + 0xc30], rax	       328	progress.c	FUNCTION_9	IF_3	IF_4
0x40005fa	              0x5b	                                 pop rbx	       331	progress.c	FUNCTION_9
0x40005fb	              0x5d	                                 pop rbp	       331	progress.c	FUNCTION_9
0x40005fc	            0x415c	                                 pop r12	       331	progress.c	FUNCTION_9
0x40005fe	              0xc3	                                     ret	       331	progress.c	FUNCTION_9
