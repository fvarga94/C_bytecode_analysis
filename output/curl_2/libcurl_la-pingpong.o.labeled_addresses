Curl_pp_init	DO,0:IF,0:SWITCH,0:CALL,1:functions,0:ELSE,0:WHILE,0:FOR,0	13
0x40000c4	              0x53	                                push rbx	       141	pingpong.c	FUNCTION_3
0x40000c5	          0x4889fb	                            mov rbx, rdi	       141	pingpong.c	FUNCTION_3
0x40000c8	        0x488b4758	            mov rax, qword [rdi + 0x58] 	       142	pingpong.c	FUNCTION_3
0x40000cc	    0x48c747100000	               mov qword [rdi + 0x10], 0	       143	pingpong.c	FUNCTION_3
0x40000d4	          0x488b00	                    mov rax, qword [rax]	       144	pingpong.c	FUNCTION_3
0x40000d7	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	       144	pingpong.c	FUNCTION_3
0x40000de	        0x48894718	             mov qword [rdi + 0x18], rax	       144	pingpong.c	FUNCTION_3
0x40000e2	        0xc6472001	                mov byte [rdi + 0x20], 1	       145	pingpong.c	FUNCTION_3
0x40000e6	      0xe800000000	                          call 0x40000eb	       146	pingpong.c	FUNCTION_3	CALL_1
0x40000eb	        0x48894340	             mov qword [rbx + 0x40], rax	       146	pingpong.c	FUNCTION_3	CALL_1
0x40000ef	        0x48895348	             mov qword [rbx + 0x48], rdx	       146	pingpong.c	FUNCTION_3	CALL_1
0x40000f3	              0x5b	                                 pop rbx	       147	pingpong.c	FUNCTION_3
0x40000f4	              0xc3	                                     ret	       147	pingpong.c	FUNCTION_3
Curl_pp_getsock	DO,0:IF,2:SWITCH,0:CALL,2:functions,0:ELSE,0:WHILE,0:FOR,0	11
0x40006af	      0xb800000000	                              mov eax, 0	       473	pingpong.c	FUNCTION_7	IF_1
0x40006b4	            0x85d2	                           test edx, edx	       472	pingpong.c	FUNCTION_7	IF_1
0x40006b6	            0x741d	                            je 0x40006d5	       472	pingpong.c	FUNCTION_7	IF_1
0x40006b8	        0x488b4758	            mov rax, qword [rdi + 0x58] 	       475	pingpong.c	FUNCTION_7
0x40006bc	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	       475	pingpong.c	FUNCTION_7
0x40006c2	            0x8906	                    mov dword [rsi], eax	       475	pingpong.c	FUNCTION_7
0x40006c4	      0x48837f3001	               cmp qword [rdi + 0x30], 1	       483	pingpong.c	FUNCTION_7	CALL_2
0x40006c9	            0x19c0	                            sbb eax, eax	       483	pingpong.c	FUNCTION_7	CALL_2
0x40006cb	      0x250100ffff	                     and eax, 0xffff0001	       483	pingpong.c	FUNCTION_7	CALL_2
0x40006d0	       0x500000100	                        add eax, 0x10000	       483	pingpong.c	FUNCTION_7	CALL_2
0x40006d5	            0xf3c3	                                     ret	       484	pingpong.c	FUNCTION_7
Curl_pp_moredata	DO,0:IF,0:SWITCH,0:CALL,0:functions,0:ELSE,0:WHILE,0:FOR,0	13
0x400079f	      0xb800000000	                              mov eax, 0	       520	pingpong.c	FUNCTION_10
0x40007a4	      0x48837f3000	               cmp qword [rdi + 0x30], 0	       520	pingpong.c	FUNCTION_10
0x40007a9	            0x751b	                           jne 0x40007c6	       520	pingpong.c	FUNCTION_10
0x40007ab	        0x48833f00	                      cmp qword [rdi], 0	       519	pingpong.c	FUNCTION_10
0x40007af	            0x7410	                            je 0x40007c1	       519	pingpong.c	FUNCTION_10
0x40007b1	        0x488b4708	                mov rax, qword [rdi + 8]	       520	pingpong.c	FUNCTION_10
0x40007b5	        0x48394710	            cmp qword [rdi + 0x10], rax 	       520	pingpong.c	FUNCTION_10
0x40007b9	           0xf92c0	                                 setb al	       520	pingpong.c	FUNCTION_10
0x40007bc	           0xfb6c0	                           movzx eax, al	       520	pingpong.c	FUNCTION_10
0x40007bf	            0xeb05	                           jmp 0x40007c6	       520	pingpong.c	FUNCTION_10
0x40007c1	      0xb800000000	                              mov eax, 0	       520	pingpong.c	FUNCTION_10
0x40007c6	          0x83e001	                              and eax, 1	       519	pingpong.c	FUNCTION_10
0x40007c9	              0xc3	                                     ret	       521	pingpong.c	FUNCTION_10
Curl_pp_vsendf	DO,0:IF,7:SWITCH,0:CALL,16:functions,0:ELSE,1:WHILE,0:FOR,0	93
0x40000f5	            0x4156	                                push r14	       164	pingpong.c	FUNCTION_4
0x40000f7	            0x4155	                                push r13	       164	pingpong.c	FUNCTION_4
0x40000f9	            0x4154	                                push r12	       164	pingpong.c	FUNCTION_4
0x40000fb	              0x55	                                push rbp	       164	pingpong.c	FUNCTION_4
0x40000fc	              0x53	                                push rbx	       164	pingpong.c	FUNCTION_4
0x40000fd	        0x4883ec10	                           sub rsp, 0x10	       164	pingpong.c	FUNCTION_4
0x4000101	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	pingpong.c	FUNCTION_4
0x400010a	      0x4889442408	                mov qword [rsp + 8], rax	       164	pingpong.c	FUNCTION_4
0x400010f	            0x31c0	                            xor eax, eax	       164	pingpong.c	FUNCTION_4
0x4000111	        0x4c8b6758	            mov r12, qword [rdi + 0x58] 	       170	pingpong.c	FUNCTION_4
0x4000115	      0xb837000000	                           mov eax, 0x37	       183	pingpong.c	FUNCTION_4	IF_1
0x400011a	          0x4d85e4	                           test r12, r12	       181	pingpong.c	FUNCTION_4	IF_1
0x400011d	     0xf841d010000	                            je 0x4000240	       181	pingpong.c	FUNCTION_4	IF_1
0x4000123	          0x4889fd	                            mov rbp, rdi	       181	pingpong.c	FUNCTION_4	IF_1
0x4000126	          0x4989d5	                            mov r13, rdx	       181	pingpong.c	FUNCTION_4	IF_1
0x4000129	    0x488d3d000000	                   lea rdi, [0x04000130]	       187	pingpong.c	FUNCTION_4	CALL_4
0x4000130	      0xb800000000	                              mov eax, 0	       187	pingpong.c	FUNCTION_4	CALL_4
0x4000135	      0xe800000000	                          call 0x400013a	       187	pingpong.c	FUNCTION_4	CALL_4
0x400013a	          0x4889c3	                            mov rbx, rax	       187	pingpong.c	FUNCTION_4	CALL_4
0x400013d	      0xb81b000000	                           mov eax, 0x1b	       189	pingpong.c	FUNCTION_4	IF_2
0x4000142	          0x4885db	                           test rbx, rbx	       188	pingpong.c	FUNCTION_4	IF_2
0x4000145	     0xf84f5000000	                            je 0x4000240	       188	pingpong.c	FUNCTION_4	IF_2
0x400014b	          0x4c89ee	                            mov rsi, r13	       191	pingpong.c	FUNCTION_4	CALL_5
0x400014e	          0x4889df	                            mov rdi, rbx	       191	pingpong.c	FUNCTION_4	CALL_5
0x4000151	      0xe800000000	                          call 0x4000156	       191	pingpong.c	FUNCTION_4	CALL_5
0x4000156	          0x4989c6	                            mov r14, rax	       191	pingpong.c	FUNCTION_4	CALL_5
0x4000159	          0x4889df	                            mov rdi, rbx	       192	pingpong.c	FUNCTION_4	CALL_6
0x400015c	    0x488b05000000	            mov rax, qword [0x04000163] 	       192	pingpong.c	FUNCTION_4	CALL_6
0x4000163	            0xff10	                        call qword [rax]	       192	pingpong.c	FUNCTION_4	CALL_6
0x4000165	      0xb81b000000	                           mov eax, 0x1b	       194	pingpong.c	FUNCTION_4	IF_3
0x400016a	          0x4d85f6	                           test r14, r14	       193	pingpong.c	FUNCTION_4	IF_3
0x400016d	     0xf84cd000000	                            je 0x4000240	       193	pingpong.c	FUNCTION_4	IF_3
0x4000173	    0x48c704240000	                      mov qword [rsp], 0	       196	pingpong.c	FUNCTION_4
0x400017b	      0xb800000000	                              mov eax, 0	       197	pingpong.c	FUNCTION_4	CALL_7
0x4000180	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       197	pingpong.c	FUNCTION_4	CALL_7
0x4000187	          0x4c89f7	                            mov rdi, r14	       197	pingpong.c	FUNCTION_4	CALL_7
0x400018a	            0xf2ae	              repne scasb al, byte [rdi]	       197	pingpong.c	FUNCTION_4	CALL_7
0x400018c	          0x48f7d1	                                 not rcx	       197	pingpong.c	FUNCTION_4	CALL_7
0x400018f	        0x4c8d69ff	                      lea r13, [rcx - 1]	       197	pingpong.c	FUNCTION_4	CALL_7
0x4000193	          0x4889ef	                            mov rdi, rbp	       199	pingpong.c	FUNCTION_4	CALL_8
0x4000196	      0xe800000000	                          call 0x400019b	       199	pingpong.c	FUNCTION_4	CALL_8
0x400019b	    0x418bb4245802	           mov esi, dword [r12 + 0x258] 	       211	pingpong.c	FUNCTION_4	CALL_11
0x40001a3	          0x4989e0	                             mov r8, rsp	       211	pingpong.c	FUNCTION_4	CALL_11
0x40001a6	          0x4c89e9	                            mov rcx, r13	       211	pingpong.c	FUNCTION_4	CALL_11
0x40001a9	          0x4c89f2	                            mov rdx, r14	       211	pingpong.c	FUNCTION_4	CALL_11
0x40001ac	          0x4c89e7	                            mov rdi, r12	       211	pingpong.c	FUNCTION_4	CALL_11
0x40001af	      0xe800000000	                          call 0x40001b4	       211	pingpong.c	FUNCTION_4	CALL_11
0x40001b4	            0x89c3	                            mov ebx, eax	       211	pingpong.c	FUNCTION_4	CALL_11
0x40001b6	            0x85c0	                           test eax, eax	       219	pingpong.c	FUNCTION_4	IF_5
0x40001b8	            0x7410	                            je 0x40001ca	       219	pingpong.c	FUNCTION_4	IF_5
0x40001ba	          0x4c89f7	                            mov rdi, r14	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x40001bd	    0x488b05000000	            mov rax, qword [0x040001c4] 	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x40001c4	            0xff10	                        call qword [rax]	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x40001c6	            0x89d8	                            mov eax, ebx	       221	pingpong.c	FUNCTION_4	IF_5
0x40001c8	            0xeb76	                           jmp 0x4000240	       221	pingpong.c	FUNCTION_4	IF_5
0x40001ca	        0x498b3c24	                    mov rdi, qword [r12]	       224	pingpong.c	FUNCTION_4	IF_6
0x40001ce	    0x80bfe8070000	               cmp byte [rdi + 0x7e8], 0	       224	pingpong.c	FUNCTION_4	IF_6
0x40001d5	            0x7414	                            je 0x40001eb	       224	pingpong.c	FUNCTION_4	IF_6
0x40001d7	          0x4d89e0	                             mov r8, r12	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40001da	        0x488b0c24	                    mov rcx, qword [rsp]	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40001de	          0x4c89f2	                            mov rdx, r14	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40001e1	      0xbe02000000	                              mov esi, 2	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40001e6	      0xe800000000	                          call 0x40001eb	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40001eb	        0x488b0424	                    mov rax, qword [rsp]	       228	pingpong.c	FUNCTION_4	IF_7
0x40001ef	          0x4c39e8	                            cmp rax, r13	       228	pingpong.c	FUNCTION_4	IF_7
0x40001f2	            0x7416	                            je 0x400020a	       228	pingpong.c	FUNCTION_4	IF_7
0x40001f4	        0x4c897528	            mov qword [rbp + 0x28], r14 	       230	pingpong.c	FUNCTION_4	IF_7
0x40001f8	        0x4c896d38	            mov qword [rbp + 0x38], r13 	       231	pingpong.c	FUNCTION_4	IF_7
0x40001fc	          0x4929c5	                            sub r13, rax	       232	pingpong.c	FUNCTION_4	IF_7
0x40001ff	        0x4c896d30	            mov qword [rbp + 0x30], r13 	       232	pingpong.c	FUNCTION_4	IF_7
0x4000203	      0xb800000000	                              mov eax, 0	       241	pingpong.c	FUNCTION_4
0x4000208	            0xeb36	                           jmp 0x4000240	       241	pingpong.c	FUNCTION_4
0x400020a	          0x4c89f7	                            mov rdi, r14	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x400020d	    0x488b05000000	            mov rax, qword [0x04000214] 	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x4000214	            0xff10	                        call qword [rax]	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x4000216	    0x48c745280000	               mov qword [rbp + 0x28], 0	       236	pingpong.c	FUNCTION_4	ELSE_1
0x400021e	    0x48c745380000	               mov qword [rbp + 0x38], 0	       237	pingpong.c	FUNCTION_4	ELSE_1
0x4000226	    0x48c745300000	               mov qword [rbp + 0x30], 0	       237	pingpong.c	FUNCTION_4	ELSE_1
0x400022e	      0xe800000000	                          call 0x4000233	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x4000233	        0x48894540	            mov qword [rbp + 0x40], rax 	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x4000237	        0x48895548	            mov qword [rbp + 0x48], rdx 	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x400023b	      0xb800000000	                              mov eax, 0	       241	pingpong.c	FUNCTION_4
0x4000240	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       242	pingpong.c	FUNCTION_4
0x4000245	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       242	pingpong.c	FUNCTION_4
0x400024e	            0x7405	                            je 0x4000255	       242	pingpong.c	FUNCTION_4
0x4000250	      0xe800000000	                          call 0x4000255	       242	pingpong.c	FUNCTION_4
0x4000255	        0x4883c410	                           add rsp, 0x10	       242	pingpong.c	FUNCTION_4
0x4000259	              0x5b	                                 pop rbx	       242	pingpong.c	FUNCTION_4
0x400025a	              0x5d	                                 pop rbp	       242	pingpong.c	FUNCTION_4
0x400025b	            0x415c	                                 pop r12	       242	pingpong.c	FUNCTION_4
0x400025d	            0x415d	                                 pop r13	       242	pingpong.c	FUNCTION_4
0x400025f	            0x415e	                                 pop r14	       242	pingpong.c	FUNCTION_4
0x4000261	              0xc3	                                     ret	       242	pingpong.c	FUNCTION_4
Curl_pp_readresp	DO,0:IF,20:SWITCH,0:CALL,17:functions,0:ELSE,7:WHILE,1:FOR,1	219
0x4000313	            0x4157	                                push r15	       278	pingpong.c	FUNCTION_6
0x4000315	            0x4156	                                push r14	       278	pingpong.c	FUNCTION_6
0x4000317	            0x4155	                                push r13	       278	pingpong.c	FUNCTION_6
0x4000319	            0x4154	                                push r12	       278	pingpong.c	FUNCTION_6
0x400031b	              0x55	                                push rbp	       278	pingpong.c	FUNCTION_6
0x400031c	              0x53	                                push rbx	       278	pingpong.c	FUNCTION_6
0x400031d	        0x4883ec58	                           sub rsp, 0x58	       278	pingpong.c	FUNCTION_6
0x4000321	        0x897c2438	             mov dword [rsp + 0x38], edi	       278	pingpong.c	FUNCTION_6
0x4000325	          0x4889f3	                            mov rbx, rsi	       278	pingpong.c	FUNCTION_6
0x4000328	      0x4889542410	             mov qword [rsp + 0x10], rdx	       278	pingpong.c	FUNCTION_6
0x400032d	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       278	pingpong.c	FUNCTION_6
0x4000332	    0x64488b042528	                mov rax, qword fs:[0x28]	       278	pingpong.c	FUNCTION_6
0x400033b	      0x4889442448	             mov qword [rsp + 0x48], rax	       278	pingpong.c	FUNCTION_6
0x4000340	            0x31c0	                            xor eax, eax	       278	pingpong.c	FUNCTION_6
0x4000342	        0x488b4658	            mov rax, qword [rsi + 0x58] 	       283	pingpong.c	FUNCTION_6
0x4000346	      0x4889442408	                mov qword [rsp + 8], rax	       283	pingpong.c	FUNCTION_6
0x400034b	          0x4c8b30	                    mov r14, qword [rax]	       284	pingpong.c	FUNCTION_6
0x400034e	    0x4d8bbe200d00	           mov r15, qword [r14 + 0xd20] 	       285	pingpong.c	FUNCTION_6
0x4000355	    0xc70200000000	                      mov dword [rdx], 0	       288	pingpong.c	FUNCTION_6
0x400035b	    0x48c701000000	                      mov qword [rcx], 0	       289	pingpong.c	FUNCTION_6
0x4000362	          0x4c89fd	                            mov rbp, r15	       291	pingpong.c	FUNCTION_6
0x4000365	        0x48036e10	             add rbp, qword [rsi + 0x10]	       291	pingpong.c	FUNCTION_6
0x4000369	          0x4889e8	                            mov rax, rbp	       294	pingpong.c	FUNCTION_6
0x400036c	        0x482b4618	             sub rax, qword [rsi + 0x18]	       294	pingpong.c	FUNCTION_6
0x4000370	      0x4889442420	             mov qword [rsp + 0x20], rax	       294	pingpong.c	FUNCTION_6
0x4000375	    0x41bd00000000	                             mov r13d, 0	       286	pingpong.c	FUNCTION_6
0x400037b	    0x41bc01000000	                             mov r12d, 1	       280	pingpong.c	FUNCTION_6
0x4000381	      0x488d442440	                   lea rax, [rsp + 0x40]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000386	      0x4889442418	             mov qword [rsp + 0x18], rax	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x400038b	      0xe993020000	                           jmp 0x4000623	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000390	          0x488b33	                    mov rsi, qword [rbx]	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x4000393	          0x4885f6	                           test rsi, rsi	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x4000396	            0x745f	                            je 0x40003f7	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x4000398	        0x488b5308	                mov rdx, qword [rbx + 8]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x400039c	      0x488d7c1500	                    lea rdi, [rbp + rdx]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40003a1	      0x498d440f01	                lea rax, [r15 + rcx + 1]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40003a6	          0x4839c7	                            cmp rdi, rax	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40003a9	            0x761e	                           jbe 0x40003c9	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40003ab	    0x488d35000000	                   lea rsi, [0x040003b2]	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x40003b2	          0x4c89f7	                            mov rdi, r14	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x40003b5	      0xb800000000	                              mov eax, 0	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x40003ba	      0xe800000000	                          call 0x40003bf	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x40003bf	      0xb838000000	                           mov eax, 0x38	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40003c4	      0xe98f020000	                           jmp 0x4000658	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40003c9	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_11	CALL_3
0x40003cc	      0xe800000000	                          call 0x40003d1	        53	string3.h	FUNCTION_11	CALL_3
0x40003d1	        0x488b4308	                mov rax, qword [rbx + 8]	       312	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40003d5	      0x4889442440	             mov qword [rsp + 0x40], rax	       312	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40003da	          0x488b3b	                    mov rdi, qword [rbx]	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x40003dd	    0x488b05000000	            mov rax, qword [0x040003e4] 	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x40003e4	            0xff10	                        call qword [rax]	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x40003e6	    0x48c703000000	                      mov qword [rbx], 0	       314	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40003ed	    0x48c743080000	                  mov qword [rbx + 8], 0	       315	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40003f5	            0xeb2d	                           jmp 0x4000424	       315	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40003f7	          0x4829c1	                            sub rcx, rax	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40003fa	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40003ff	          0x4889ea	                            mov rdx, rbp	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000402	        0x8b742438	            mov esi, dword [rsp + 0x38] 	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000406	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x400040b	      0xe800000000	                          call 0x4000410	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000410	          0x4189c5	                           mov r13d, eax	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000413	          0x83f851	                           cmp eax, 0x51	       331	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x4000416	     0xf842e020000	                            je 0x400064a	       331	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x400041c	            0x85c0	                           test eax, eax	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x400041e	     0xf85f9010000	                           jne 0x400061d	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x4000424	          0x4584e4	                         test r12b, r12b	       344	pingpong.c	FUNCTION_6	WHILE_1	IF_6
0x4000427	     0xf84f6010000	                            je 0x4000623	       344	pingpong.c	FUNCTION_6	WHILE_1	IF_6
0x400042d	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000432	          0x4885c0	                           test rax, rax	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000435	            0x7f25	                            jg 0x400045c	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000437	    0x488d35000000	                   lea rsi, [0x0400043e]	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x400043e	          0x4c89f7	                            mov rdi, r14	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x4000441	      0xb800000000	                              mov eax, 0	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x4000446	      0xe800000000	                          call 0x400044b	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x400044b	    0x41bd38000000	                          mov r13d, 0x38	       348	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000451	    0x41bc00000000	                             mov r12d, 0	       347	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000457	      0xe9c7010000	                           jmp 0x4000623	       347	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x400045c	    0x490186f00000	            add qword [r14 + 0xf0], rax 	       359	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000463	        0x48014310	            add qword [rbx + 0x10], rax 	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000467	      0xb800000000	                              mov eax, 0	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x400046c	      0x448864243f	             mov byte [rsp + 0x3f], r12b	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000471	      0x4c897c2430	             mov qword [rsp + 0x30], r15	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000476	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x400047b	          0x4989c4	                            mov r12, rax	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x400047e	        0x4983c701	                              add r15, 1	       363	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000482	        0x807d000a	                     cmp byte [rbp], 0xa	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000486	     0xf85da000000	                           jne 0x4000566	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x400048c	    0x4180bee80700	               cmp byte [r14 + 0x7e8], 0	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x4000494	            0x7419	                            je 0x40004af	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x4000496	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x400049a	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x400049f	          0x4c89f9	                            mov rcx, r15	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40004a2	      0xbe01000000	                              mov esi, 1	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40004a7	          0x4c89f7	                            mov rdi, r14	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40004aa	      0xe800000000	                          call 0x40004af	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40004af	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40004b3	          0x4c89f9	                            mov rcx, r15	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40004b6	      0xbe02000000	                              mov esi, 2	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40004bb	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40004c0	      0xe800000000	                          call 0x40004c5	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40004c5	          0x4189c5	                           mov r13d, eax	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40004c8	            0x85c0	                           test eax, eax	       383	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_11
0x40004ca	     0xf8581010000	                           jne 0x4000651	       383	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_11
0x40004d0	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40004d4	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40004d9	          0x4c89fa	                            mov rdx, r15	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40004dc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40004e1	          0xff5368	                 call qword [rbx + 0x68]	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40004e4	            0x84c0	                             test al, al	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40004e6	            0x7470	                            je 0x4000558	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40004e8	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40004ed	      0x4c89642420	             mov qword [rsp + 0x20], r12	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40004f2	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40004f6	          0x4889e8	                            mov rax, rbp	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40004f9	          0x4829f0	                            sub rax, rsi	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40004fc	          0x4989c4	                            mov r12, rax	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40004ff	          0x4889c2	                            mov rdx, rax	        59	string3.h	FUNCTION_12	CALL_3
0x4000502	          0x4c89ff	                            mov rdi, r15	        59	string3.h	FUNCTION_12	CALL_3
0x4000505	      0xe800000000	                          call 0x400050a	        59	string3.h	FUNCTION_12	CALL_3
0x400050a	      0x43c6042700	                 mov byte [r15 + r12], 0	       391	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x400050f	        0x4883c501	                              add rbp, 1	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000513	        0x48896b18	             mov qword [rbx + 0x18], rbp	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000517	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       394	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x400051c	        0x4883c201	                              add rdx, 1	       394	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000520	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000524	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000529	          0x488901	                    mov qword [rcx], rax	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x400052c	    0x48c743100000	               mov qword [rbx + 0x10], 0	       397	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000534	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000539	          0x4889c1	                            mov rcx, rax	       410	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x400053c	          0x4829d1	                            sub rcx, rdx	       410	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x400053f	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       410	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000544	    0x41bc00000000	                             mov r12d, 0	       392	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x400054a	          0x4839c2	                            cmp rdx, rax	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x400054d	     0xf8537010000	                           jne 0x400068a	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000553	      0xe9ab000000	                           jmp 0x4000603	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000558	        0x488d4501	                      lea rax, [rbp + 1]	       401	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x400055c	        0x48894318	             mov qword [rbx + 0x18], rax	       401	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000560	    0x41bf00000000	                             mov r15d, 0	       400	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000566	        0x4883c501	                              add rbp, 1	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400056a	        0x4983c401	                              add r12, 1	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400056e	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000573	          0x4c39e0	                            cmp rax, r12	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000576	     0xf8f02ffffff	                            jg 0x400047e	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400057c	      0xe9e9000000	                           jmp 0x400066a	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000581	    0x498b86900700	           mov rax, qword [r14 + 0x790] 	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000588	          0x4889c2	                            mov rdx, rax	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x400058b	        0x48c1ea3f	                           shr rdx, 0x3f	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x400058f	          0x4801d0	                            add rax, rdx	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000592	          0x48d1f8	                              sar rax, 1	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000595	      0x4839442420	            cmp qword [rsp + 0x20], rax 	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x400059a	            0x7e24	                           jle 0x40005c0	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x400059c	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40005a1	    0x488d35000000	                   lea rsi, [0x040005a8]	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40005a8	          0x4c89f7	                            mov rdi, r14	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40005ab	      0xb800000000	                              mov eax, 0	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40005b0	      0xe800000000	                          call 0x40005b5	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40005b5	    0x48c744242028	           mov qword [rsp + 0x20], 0x28 	       428	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x40005be	            0xeb16	                           jmp 0x40005d6	       428	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x40005c0	    0x498b86900700	           mov rax, qword [r14 + 0x790] 	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40005c7	          0x48d1e8	                              shr rax, 1	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40005ca	        0x48394310	            cmp qword [rbx + 0x10], rax 	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40005ce	     0xf87b6000000	                            ja 0x400068a	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40005d4	            0xeb4d	                           jmp 0x4000623	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40005d6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       442	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x40005db	        0x48894308	                mov qword [rbx + 8], rax	       442	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x40005df	          0x4889c7	                            mov rdi, rax	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x40005e2	    0x488b05000000	            mov rax, qword [0x040005e9] 	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x40005e9	            0xff10	                        call qword [rax]	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x40005eb	          0x488903	                    mov qword [rbx], rax	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x40005ee	          0x4885c0	                           test rax, rax	       444	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	IF_19
0x40005f1	            0x7460	                            je 0x4000653	       444	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	IF_19
0x40005f3	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_11	CALL_3
0x40005f7	        0x488b5308	                mov rdx, qword [rbx + 8]	        53	string3.h	FUNCTION_11	CALL_3
0x40005fb	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_11	CALL_3
0x40005fe	      0xe800000000	                          call 0x4000603	        53	string3.h	FUNCTION_11	CALL_3
0x4000603	    0x48c743100000	               mov qword [rbx + 0x10], 0	       452	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x400060b	        0x4c897b18	             mov qword [rbx + 0x18], r15	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x400060f	          0x4c89fd	                            mov rbp, r15	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000612	    0x48c744242000	               mov qword [rsp + 0x20], 0	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x400061b	            0xeb06	                           jmp 0x4000623	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x400061d	    0x41bc00000000	                             mov r12d, 0	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000623	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000627	    0x498b8e900700	           mov rcx, qword [r14 + 0x790] 	       296	pingpong.c	FUNCTION_6	WHILE_1
0x400062e	          0x4839c8	                            cmp rax, rcx	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000631	            0x730e	                           jae 0x4000641	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000633	          0x4585ed	                         test r13d, r13d	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000636	            0x7509	                           jne 0x4000641	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000638	          0x4584e4	                         test r12b, r12b	       296	pingpong.c	FUNCTION_6	WHILE_1
0x400063b	     0xf854ffdffff	                           jne 0x4000390	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000641	        0xc6432000	                mov byte [rbx + 0x20], 0	       461	pingpong.c	FUNCTION_6
0x4000645	          0x4489e8	                           mov eax, r13d	       463	pingpong.c	FUNCTION_6
0x4000648	            0xeb0e	                           jmp 0x4000658	       463	pingpong.c	FUNCTION_6
0x400064a	      0xb800000000	                              mov eax, 0	       332	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x400064f	            0xeb07	                           jmp 0x4000658	       332	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x4000651	            0xeb05	                           jmp 0x4000658	       332	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x4000653	      0xb81b000000	                           mov eax, 0x1b	       447	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	ELSE_7
0x4000658	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       464	pingpong.c	FUNCTION_6
0x400065d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       464	pingpong.c	FUNCTION_6
0x4000666	            0x7438	                            je 0x40006a0	       464	pingpong.c	FUNCTION_6
0x4000668	            0xeb31	                           jmp 0x400069b	       464	pingpong.c	FUNCTION_6
0x400066a	    0x440fb664243f	          movzx r12d, byte [rsp + 0x3f] 	       464	pingpong.c	FUNCTION_6
0x4000670	      0x4c897c2420	             mov qword [rsp + 0x20], r15	       464	pingpong.c	FUNCTION_6
0x4000675	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	       464	pingpong.c	FUNCTION_6
0x400067a	      0x4839442420	            cmp qword [rsp + 0x20], rax 	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x400067f	     0xf853bffffff	                           jne 0x40005c0	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000685	      0xe9f7feffff	                           jmp 0x4000581	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x400068a	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       441	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000690	     0xf8540ffffff	                           jne 0x40005d6	       441	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000696	      0xe968ffffff	                           jmp 0x4000603	       441	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x400069b	      0xe800000000	                          call 0x40006a0	       464	pingpong.c	FUNCTION_6
0x40006a0	        0x4883c458	                           add rsp, 0x58	       464	pingpong.c	FUNCTION_6
0x40006a4	              0x5b	                                 pop rbx	       464	pingpong.c	FUNCTION_6
0x40006a5	              0x5d	                                 pop rbp	       464	pingpong.c	FUNCTION_6
0x40006a6	            0x415c	                                 pop r12	       464	pingpong.c	FUNCTION_6
0x40006a8	            0x415d	                                 pop r13	       464	pingpong.c	FUNCTION_6
0x40006aa	            0x415e	                                 pop r14	       464	pingpong.c	FUNCTION_6
0x40006ac	            0x415f	                                 pop r15	       464	pingpong.c	FUNCTION_6
0x40006ae	              0xc3	                                     ret	       464	pingpong.c	FUNCTION_6
Curl_pp_flushsend	DO,0:IF,2:SWITCH,0:CALL,3:functions,0:ELSE,1:WHILE,0:FOR,0	41
0x40006d7	              0x53	                                push rbx	       487	pingpong.c	FUNCTION_8
0x40006d8	        0x4883ec10	                           sub rsp, 0x10	       487	pingpong.c	FUNCTION_8
0x40006dc	          0x4889fb	                            mov rbx, rdi	       487	pingpong.c	FUNCTION_8
0x40006df	    0x64488b042528	                mov rax, qword fs:[0x28]	       487	pingpong.c	FUNCTION_8
0x40006e8	      0x4889442408	                mov qword [rsp + 8], rax	       487	pingpong.c	FUNCTION_8
0x40006ed	            0x31c0	                            xor eax, eax	       487	pingpong.c	FUNCTION_8
0x40006ef	        0x488b7f58	            mov rdi, qword [rdi + 0x58] 	       489	pingpong.c	FUNCTION_8
0x40006f3	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	       493	pingpong.c	FUNCTION_8
0x40006f7	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       492	pingpong.c	FUNCTION_8	CALL_1
0x40006fb	          0x4829ca	                            sub rdx, rcx	       492	pingpong.c	FUNCTION_8	CALL_1
0x40006fe	        0x48035328	             add rdx, qword [rbx + 0x28]	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000702	    0x8bb758020000	           mov esi, dword [rdi + 0x258] 	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000708	          0x4989e0	                             mov r8, rsp	       492	pingpong.c	FUNCTION_8	CALL_1
0x400070b	      0xe800000000	                          call 0x4000710	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000710	            0x85c0	                           test eax, eax	       494	pingpong.c	FUNCTION_8	IF_1
0x4000712	            0x7552	                           jne 0x4000766	       494	pingpong.c	FUNCTION_8	IF_1
0x4000714	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       497	pingpong.c	FUNCTION_8	IF_2
0x4000718	        0x488b1424	                    mov rdx, qword [rsp]	       497	pingpong.c	FUNCTION_8	IF_2
0x400071c	          0x4839d0	                            cmp rax, rdx	       497	pingpong.c	FUNCTION_8	IF_2
0x400071f	            0x740e	                            je 0x400072f	       497	pingpong.c	FUNCTION_8	IF_2
0x4000721	          0x4829d0	                            sub rax, rdx	       499	pingpong.c	FUNCTION_8	IF_2
0x4000724	        0x48894330	             mov qword [rbx + 0x30], rax	       499	pingpong.c	FUNCTION_8	IF_2
0x4000728	      0xb800000000	                              mov eax, 0	       507	pingpong.c	FUNCTION_8
0x400072d	            0xeb37	                           jmp 0x4000766	       507	pingpong.c	FUNCTION_8
0x400072f	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x4000733	    0x488b05000000	            mov rax, qword [0x0400073a] 	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x400073a	            0xff10	                        call qword [rax]	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x400073c	    0x48c743280000	               mov qword [rbx + 0x28], 0	       503	pingpong.c	FUNCTION_8	ELSE_1
0x4000744	    0x48c743380000	               mov qword [rbx + 0x38], 0	       504	pingpong.c	FUNCTION_8	ELSE_1
0x400074c	    0x48c743300000	               mov qword [rbx + 0x30], 0	       504	pingpong.c	FUNCTION_8	ELSE_1
0x4000754	      0xe800000000	                          call 0x4000759	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x4000759	        0x48894340	             mov qword [rbx + 0x40], rax	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x400075d	        0x48895348	             mov qword [rbx + 0x48], rdx	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x4000761	      0xb800000000	                              mov eax, 0	       507	pingpong.c	FUNCTION_8
0x4000766	      0x488b742408	                mov rsi, qword [rsp + 8]	       508	pingpong.c	FUNCTION_8
0x400076b	    0x644833342528	                xor rsi, qword fs:[0x28]	       508	pingpong.c	FUNCTION_8
0x4000774	            0x7405	                            je 0x400077b	       508	pingpong.c	FUNCTION_8
0x4000776	      0xe800000000	                          call 0x400077b	       508	pingpong.c	FUNCTION_8
0x400077b	        0x4883c410	                           add rsp, 0x10	       508	pingpong.c	FUNCTION_8
0x400077f	              0x5b	                                 pop rbx	       508	pingpong.c	FUNCTION_8
0x4000780	              0xc3	                                     ret	       508	pingpong.c	FUNCTION_8
Curl_pp_disconnect	DO,0:IF,0:SWITCH,0:CALL,1:functions,0:ELSE,0:WHILE,0:FOR,0	9
0x4000781	              0x53	                                push rbx	       511	pingpong.c	FUNCTION_9
0x4000782	          0x4889fb	                            mov rbx, rdi	       511	pingpong.c	FUNCTION_9
0x4000785	          0x488b3f	                    mov rdi, qword [rdi]	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000788	    0x488b05000000	            mov rax, qword [0x0400078f] 	       512	pingpong.c	FUNCTION_9	CALL_1
0x400078f	            0xff10	                        call qword [rax]	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000791	    0x48c703000000	                      mov qword [rbx], 0	       513	pingpong.c	FUNCTION_9
0x4000798	      0xb800000000	                              mov eax, 0	       515	pingpong.c	FUNCTION_9
0x400079d	              0x5b	                                 pop rbx	       515	pingpong.c	FUNCTION_9
0x400079e	              0xc3	                                     ret	       515	pingpong.c	FUNCTION_9
Curl_pp_sendf	DO,0:IF,0:SWITCH,0:CALL,3:functions,0:ELSE,0:WHILE,0:FOR,0	32
0x4000262	    0x4881ecd80000	                           sub rsp, 0xd8	       257	pingpong.c	FUNCTION_5
0x4000269	      0x4889542430	             mov qword [rsp + 0x30], rdx	       257	pingpong.c	FUNCTION_5
0x400026e	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       257	pingpong.c	FUNCTION_5
0x4000273	      0x4c89442440	              mov qword [rsp + 0x40], r8	       257	pingpong.c	FUNCTION_5
0x4000278	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       257	pingpong.c	FUNCTION_5
0x400027d	            0x84c0	                             test al, al	       257	pingpong.c	FUNCTION_5
0x400027f	            0x7437	                            je 0x40002b8	       257	pingpong.c	FUNCTION_5
0x4000281	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       257	pingpong.c	FUNCTION_5
0x4000286	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       257	pingpong.c	FUNCTION_5
0x400028b	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       257	pingpong.c	FUNCTION_5
0x4000290	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       257	pingpong.c	FUNCTION_5
0x4000298	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       257	pingpong.c	FUNCTION_5
0x40002a0	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       257	pingpong.c	FUNCTION_5
0x40002a8	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       257	pingpong.c	FUNCTION_5
0x40002b0	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       257	pingpong.c	FUNCTION_5
0x40002b8	    0x64488b042528	                mov rax, qword fs:[0x28]	       257	pingpong.c	FUNCTION_5
0x40002c1	      0x4889442418	             mov qword [rsp + 0x18], rax	       257	pingpong.c	FUNCTION_5
0x40002c6	            0x31c0	                            xor eax, eax	       257	pingpong.c	FUNCTION_5
0x40002c8	    0xc70424100000	                   mov dword [rsp], 0x10	       260	pingpong.c	FUNCTION_5	CALL_1
0x40002cf	    0xc74424043000	               mov dword [rsp + 4], 0x30	       260	pingpong.c	FUNCTION_5	CALL_1
0x40002d7	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       260	pingpong.c	FUNCTION_5	CALL_1
0x40002df	      0x4889442408	                mov qword [rsp + 8], rax	       260	pingpong.c	FUNCTION_5	CALL_1
0x40002e4	      0x488d442420	                   lea rax, [rsp + 0x20]	       260	pingpong.c	FUNCTION_5	CALL_1
0x40002e9	      0x4889442410	             mov qword [rsp + 0x10], rax	       260	pingpong.c	FUNCTION_5	CALL_1
0x40002ee	          0x4889e2	                            mov rdx, rsp	       262	pingpong.c	FUNCTION_5	CALL_2
0x40002f1	      0xe800000000	                          call 0x40002f6	       262	pingpong.c	FUNCTION_5	CALL_2
0x40002f6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       267	pingpong.c	FUNCTION_5
0x40002fb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       267	pingpong.c	FUNCTION_5
0x4000304	            0x7405	                            je 0x400030b	       267	pingpong.c	FUNCTION_5
0x4000306	      0xe800000000	                          call 0x400030b	       267	pingpong.c	FUNCTION_5
0x400030b	    0x4881c4d80000	                           add rsp, 0xd8	       267	pingpong.c	FUNCTION_5
0x4000312	              0xc3	                                     ret	       267	pingpong.c	FUNCTION_5
Curl_pp_statemach	DO,0:IF,11:SWITCH,0:CALL,11:functions,0:ELSE,6:WHILE,0:FOR,0	105
0x40007ca	            0x4157	                                push r15	        82	pingpong.c	FUNCTION_2
0x40007cc	            0x4156	                                push r14	        82	pingpong.c	FUNCTION_2
0x40007ce	            0x4155	                                push r13	        82	pingpong.c	FUNCTION_2
0x40007d0	            0x4154	                                push r12	        82	pingpong.c	FUNCTION_2
0x40007d2	              0x55	                                push rbp	        82	pingpong.c	FUNCTION_2
0x40007d3	              0x53	                                push rbx	        82	pingpong.c	FUNCTION_2
0x40007d4	        0x4883ec08	                              sub rsp, 8	        82	pingpong.c	FUNCTION_2
0x40007d8	          0x4889fd	                            mov rbp, rdi	        82	pingpong.c	FUNCTION_2
0x40007db	          0x4189f6	                           mov r14d, esi	        82	pingpong.c	FUNCTION_2
0x40007de	        0x488b5f58	            mov rbx, qword [rdi + 0x58] 	        83	pingpong.c	FUNCTION_2
0x40007e2	    0x448bbb580200	          mov r15d, dword [rbx + 0x258] 	        84	pingpong.c	FUNCTION_2
0x40007e9	      0xe800000000	                          call 0x40007ee	        87	pingpong.c	FUNCTION_2	CALL_1
0x40007ee	          0x4c8b2b	                    mov r13, qword [rbx]	        88	pingpong.c	FUNCTION_2
0x40007f1	          0x4885c0	                           test rax, rax	        91	pingpong.c	FUNCTION_2	IF_1
0x40007f4	            0x7f1e	                            jg 0x4000814	        91	pingpong.c	FUNCTION_2	IF_1
0x40007f6	    0x488d35000000	                   lea rsi, [0x040007fd]	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x40007fd	          0x4c89ef	                            mov rdi, r13	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x4000800	      0xb800000000	                              mov eax, 0	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x4000805	      0xe800000000	                          call 0x400080a	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x400080a	      0xb81c000000	                           mov eax, 0x1c	        93	pingpong.c	FUNCTION_2	IF_1
0x400080f	      0xe91c010000	                           jmp 0x4000930	        93	pingpong.c	FUNCTION_2	IF_1
0x4000814	          0x4989c4	                            mov r12, rax	        93	pingpong.c	FUNCTION_2	IF_1
0x4000817	          0x4584f6	                         test r14b, r14b	        96	pingpong.c	FUNCTION_2	IF_2
0x400081a	     0xf84f3000000	                            je 0x4000913	        96	pingpong.c	FUNCTION_2	IF_2
0x4000820	    0x483de8030000	                          cmp rax, 0x3e8	        97	pingpong.c	FUNCTION_2	IF_2
0x4000826	      0xb8e8030000	                          mov eax, 0x3e8	        97	pingpong.c	FUNCTION_2	IF_2
0x400082b	        0x4c0f4de0	                         cmovge r12, rax	        97	pingpong.c	FUNCTION_2	IF_2
0x400082f	      0xbe00000000	                              mov esi, 0	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000834	          0x4889df	                            mov rdi, rbx	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000837	      0xe800000000	                          call 0x400083c	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x400083c	            0x84c0	                             test al, al	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x400083e	            0x756a	                           jne 0x40008aa	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000840	          0x4889ef	                            mov rdi, rbp	       106	pingpong.c	FUNCTION_2	ELSE_2	IF_5	CALL_4
0x4000843	      0xe800000000	                          call 0x4000848	       106	pingpong.c	FUNCTION_2	ELSE_2	IF_5	CALL_4
0x4000848	            0x84c0	                             test al, al	       106	pingpong.c	FUNCTION_2	ELSE_2	IF_5	CALL_4
0x400084a	     0xf85bc000000	                           jne 0x400090c	       106	pingpong.c	FUNCTION_2	ELSE_2	IF_5	CALL_4
0x4000850	          0x4489fa	                           mov edx, r15d	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000853	      0xbfffffffff	                     mov edi, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000858	      0x48837d3000	               cmp qword [rbp + 0x30], 0	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x400085d	            0x752c	                           jne 0x400088b	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x400085f	      0xbe00000000	                              mov esi, 0	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000864	          0x4889df	                            mov rdi, rbx	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000867	      0xe800000000	                          call 0x400086c	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x400086c	            0x84c0	                             test al, al	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x400086e	     0xf8598000000	                           jne 0x400090c	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000874	      0x48837d3000	               cmp qword [rbp + 0x30], 0	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000879	      0xbfffffffff	                     mov edi, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400087e	        0x410f44ff	                         cmove edi, r15d	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000882	      0xbaffffffff	                     mov edx, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000887	        0x410f45d7	                        cmovne edx, r15d	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400088b	          0x4c89e1	                            mov rcx, r12	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400088e	      0xbeffffffff	                     mov esi, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000893	      0xe800000000	                          call 0x4000898	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000898	          0x4189c4	                           mov r12d, eax	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400089b	          0x4584f6	                         test r14b, r14b	       118	pingpong.c	FUNCTION_2	IF_7
0x400089e	            0x7437	                            je 0x40008d7	       118	pingpong.c	FUNCTION_2	IF_7
0x40008a0	            0xeb0e	                           jmp 0x40008b0	       118	pingpong.c	FUNCTION_2	IF_7
0x40008a2	    0x41bc01000000	                             mov r12d, 1	       118	pingpong.c	FUNCTION_2	IF_7
0x40008a8	            0xeb06	                           jmp 0x40008b0	       118	pingpong.c	FUNCTION_2	IF_7
0x40008aa	    0x41bc01000000	                             mov r12d, 1	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40008b0	          0x4889df	                            mov rdi, rbx	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x40008b3	      0xe800000000	                          call 0x40008b8	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x40008b8	            0x89c2	                            mov edx, eax	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x40008ba	      0xb82a000000	                           mov eax, 0x2a	       121	pingpong.c	FUNCTION_2	IF_7	IF_8
0x40008bf	            0x85d2	                           test edx, edx	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x40008c1	            0x756d	                           jne 0x4000930	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x40008c3	      0xe800000000	                          call 0x40008c8	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x40008c8	          0x4889c6	                            mov rsi, rax	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x40008cb	          0x4c89ef	                            mov rdi, r13	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x40008ce	      0xe800000000	                          call 0x40008d3	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x40008d3	            0x85c0	                           test eax, eax	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x40008d5	            0x7559	                           jne 0x4000930	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x40008d7	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       129	pingpong.c	FUNCTION_2	IF_10
0x40008db	            0x751b	                           jne 0x40008f8	       129	pingpong.c	FUNCTION_2	IF_10
0x40008dd	    0x488d35000000	                   lea rsi, [0x040008e4]	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40008e4	          0x4c89ef	                            mov rdi, r13	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40008e7	      0xb800000000	                              mov eax, 0	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40008ec	      0xe800000000	                          call 0x40008f1	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40008f1	      0xb81b000000	                           mov eax, 0x1b	       131	pingpong.c	FUNCTION_2	IF_10
0x40008f6	            0xeb38	                           jmp 0x4000930	       131	pingpong.c	FUNCTION_2	IF_10
0x40008f8	          0x4585e4	                         test r12d, r12d	       133	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40008fb	            0x7408	                            je 0x4000905	       133	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40008fd	          0x4889df	                            mov rdi, rbx	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x4000900	          0xff5560	                 call qword [rbp + 0x60]	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x4000903	            0xeb2b	                           jmp 0x4000930	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x4000905	      0xb800000000	                              mov eax, 0	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x400090a	            0xeb24	                           jmp 0x4000930	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x400090c	          0x4584f6	                         test r14b, r14b	       118	pingpong.c	FUNCTION_2	IF_7
0x400090f	            0x7591	                           jne 0x40008a2	       118	pingpong.c	FUNCTION_2	IF_7
0x4000911	            0xebea	                           jmp 0x40008fd	       118	pingpong.c	FUNCTION_2	IF_7
0x4000913	      0xbe00000000	                              mov esi, 0	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000918	          0x4889df	                            mov rdi, rbx	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x400091b	      0xe800000000	                          call 0x4000920	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000920	    0x41bc00000000	                             mov r12d, 0	       102	pingpong.c	FUNCTION_2	ELSE_1
0x4000926	            0x84c0	                             test al, al	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000928	     0xf8412ffffff	                            je 0x4000840	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x400092e	            0xebcd	                           jmp 0x40008fd	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000930	        0x4883c408	                              add rsp, 8	       137	pingpong.c	FUNCTION_2
0x4000934	              0x5b	                                 pop rbx	       137	pingpong.c	FUNCTION_2
0x4000935	              0x5d	                                 pop rbp	       137	pingpong.c	FUNCTION_2
0x4000936	            0x415c	                                 pop r12	       137	pingpong.c	FUNCTION_2
0x4000938	            0x415d	                                 pop r13	       137	pingpong.c	FUNCTION_2
0x400093a	            0x415e	                                 pop r14	       137	pingpong.c	FUNCTION_2
0x400093c	            0x415f	                                 pop r15	       137	pingpong.c	FUNCTION_2
0x400093e	              0xc3	                                     ret	       137	pingpong.c	FUNCTION_2
Curl_pp_state_timeout	DO,0:IF,1:SWITCH,0:CALL,5:functions,0:ELSE,0:WHILE,0:FOR,0	38
0x4000040	            0x4155	                                push r13	        48	pingpong.c	FUNCTION_1
0x4000042	            0x4154	                                push r12	        48	pingpong.c	FUNCTION_1
0x4000044	              0x55	                                push rbp	        48	pingpong.c	FUNCTION_1
0x4000045	              0x53	                                push rbx	        48	pingpong.c	FUNCTION_1
0x4000046	        0x4883ec08	                              sub rsp, 8	        48	pingpong.c	FUNCTION_1
0x400004a	          0x4889fd	                            mov rbp, rdi	        48	pingpong.c	FUNCTION_1
0x400004d	        0x4c8b6758	            mov r12, qword [rdi + 0x58] 	        49	pingpong.c	FUNCTION_1
0x4000051	        0x4d8b2c24	                    mov r13, qword [r12]	        50	pingpong.c	FUNCTION_1
0x4000055	    0x498b9d500300	           mov rbx, qword [r13 + 0x350] 	        53	pingpong.c	FUNCTION_1
0x400005c	          0x4885db	                           test rbx, rbx	        54	pingpong.c	FUNCTION_1
0x400005f	            0x7504	                           jne 0x4000065	        54	pingpong.c	FUNCTION_1
0x4000061	        0x488b5f50	            mov rbx, qword [rdi + 0x50] 	        54	pingpong.c	FUNCTION_1
0x4000065	      0xe800000000	                          call 0x400006a	        64	pingpong.c	FUNCTION_1	CALL_2
0x400006a	          0x4889d6	                            mov rsi, rdx	        64	pingpong.c	FUNCTION_1	CALL_2
0x400006d	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000071	        0x488b4d48	            mov rcx, qword [rbp + 0x48] 	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000075	          0x4889c7	                            mov rdi, rax	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000078	      0xe800000000	                          call 0x400007d	        64	pingpong.c	FUNCTION_1	CALL_2
0x400007d	          0x4829c3	                            sub rbx, rax	        63	pingpong.c	FUNCTION_1
0x4000080	    0x498bad300300	           mov rbp, qword [r13 + 0x330] 	        66	pingpong.c	FUNCTION_1	IF_1
0x4000087	          0x4885ed	                           test rbp, rbp	        66	pingpong.c	FUNCTION_1	IF_1
0x400008a	            0x742a	                            je 0x40000b6	        66	pingpong.c	FUNCTION_1	IF_1
0x400008c	      0xe800000000	                          call 0x4000091	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x4000091	          0x4889d6	                            mov rsi, rdx	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x4000094	    0x498b94243802	           mov rdx, qword [r12 + 0x238] 	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x400009c	    0x498b8c244002	           mov rcx, qword [r12 + 0x240] 	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40000a4	          0x4889c7	                            mov rdi, rax	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40000a7	      0xe800000000	                          call 0x40000ac	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40000ac	          0x4829c5	                            sub rbp, rax	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x40000af	          0x4839eb	                            cmp rbx, rbp	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x40000b2	        0x480f4fdd	                          cmovg rbx, rbp	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x40000b6	          0x4889d8	                            mov rax, rbx	        76	pingpong.c	FUNCTION_1
0x40000b9	        0x4883c408	                              add rsp, 8	        76	pingpong.c	FUNCTION_1
0x40000bd	              0x5b	                                 pop rbx	        76	pingpong.c	FUNCTION_1
0x40000be	              0x5d	                                 pop rbp	        76	pingpong.c	FUNCTION_1
0x40000bf	            0x415c	                                 pop r12	        76	pingpong.c	FUNCTION_1
0x40000c1	            0x415d	                                 pop r13	        76	pingpong.c	FUNCTION_1
0x40000c3	              0xc3	                                     ret	        76	pingpong.c	FUNCTION_1
