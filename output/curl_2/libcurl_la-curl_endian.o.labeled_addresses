Curl_read32_le	DO,0:CALL,0:functions,0:FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0	26
0x4000139	              0x55	                                push rbp	        60	curl_endian.c	FUNCTION_2
0x400013a	          0x4889e5	                            mov rbp, rsp	        60	curl_endian.c	FUNCTION_2
0x400013d	        0x48897df8	                mov qword [rbp - 8], rdi	        60	curl_endian.c	FUNCTION_2
0x4000141	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	curl_endian.c	FUNCTION_2
0x4000145	           0xfb600	                   movzx eax, byte [rax]	        61	curl_endian.c	FUNCTION_2
0x4000148	           0xfb6c0	                           movzx eax, al	        61	curl_endian.c	FUNCTION_2
0x400014b	        0x488b55f8	                mov rdx, qword [rbp - 8]	        61	curl_endian.c	FUNCTION_2
0x400014f	        0x4883c201	                              add rdx, 1	        61	curl_endian.c	FUNCTION_2
0x4000153	           0xfb612	                   movzx edx, byte [rdx]	        61	curl_endian.c	FUNCTION_2
0x4000156	           0xfb6d2	                           movzx edx, dl	        61	curl_endian.c	FUNCTION_2
0x4000159	          0xc1e208	                              shl edx, 8	        61	curl_endian.c	FUNCTION_2
0x400015c	             0x9c2	                             or edx, eax	        61	curl_endian.c	FUNCTION_2
0x400015e	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	curl_endian.c	FUNCTION_2
0x4000162	        0x4883c002	                              add rax, 2	        62	curl_endian.c	FUNCTION_2
0x4000166	           0xfb600	                   movzx eax, byte [rax]	        62	curl_endian.c	FUNCTION_2
0x4000169	           0xfb6c0	                           movzx eax, al	        62	curl_endian.c	FUNCTION_2
0x400016c	          0xc1e010	                           shl eax, 0x10	        62	curl_endian.c	FUNCTION_2
0x400016f	             0x9c2	                             or edx, eax	        61	curl_endian.c	FUNCTION_2
0x4000171	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	curl_endian.c	FUNCTION_2
0x4000175	        0x4883c003	                              add rax, 3	        62	curl_endian.c	FUNCTION_2
0x4000179	           0xfb600	                   movzx eax, byte [rax]	        62	curl_endian.c	FUNCTION_2
0x400017c	           0xfb6c0	                           movzx eax, al	        62	curl_endian.c	FUNCTION_2
0x400017f	          0xc1e018	                           shl eax, 0x18	        62	curl_endian.c	FUNCTION_2
0x4000182	             0x9d0	                             or eax, edx	        61	curl_endian.c	FUNCTION_2
0x4000184	              0x5d	                                 pop rbp	        63	curl_endian.c	FUNCTION_2
0x4000185	              0xc3	                                     ret	        63	curl_endian.c	FUNCTION_2
Curl_read16_le	DO,0:CALL,0:functions,0:FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0	14
0x4000112	              0x55	                                push rbp	        41	curl_endian.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        41	curl_endian.c	FUNCTION_1
0x4000116	        0x48897df8	                mov qword [rbp - 8], rdi	        41	curl_endian.c	FUNCTION_1
0x400011a	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	curl_endian.c	FUNCTION_1
0x400011e	           0xfb600	                   movzx eax, byte [rax]	        42	curl_endian.c	FUNCTION_1
0x4000121	           0xfb6c0	                           movzx eax, al	        42	curl_endian.c	FUNCTION_1
0x4000124	        0x488b55f8	                mov rdx, qword [rbp - 8]	        43	curl_endian.c	FUNCTION_1
0x4000128	        0x4883c201	                              add rdx, 1	        43	curl_endian.c	FUNCTION_1
0x400012c	           0xfb612	                   movzx edx, byte [rdx]	        43	curl_endian.c	FUNCTION_1
0x400012f	           0xfb6d2	                           movzx edx, dl	        43	curl_endian.c	FUNCTION_1
0x4000132	          0xc1e208	                              shl edx, 8	        43	curl_endian.c	FUNCTION_1
0x4000135	             0x9d0	                             or eax, edx	        42	curl_endian.c	FUNCTION_1
0x4000137	              0x5d	                                 pop rbp	        44	curl_endian.c	FUNCTION_1
0x4000138	              0xc3	                                     ret	        44	curl_endian.c	FUNCTION_1
Curl_write32_le	DO,0:CALL,0:functions,0:FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0	28
0x40001af	              0x55	                                push rbp	        96	curl_endian.c	FUNCTION_4
0x40001b0	          0x4889e5	                            mov rbp, rsp	        96	curl_endian.c	FUNCTION_4
0x40001b3	          0x897dfc	                mov dword [rbp - 4], edi	        96	curl_endian.c	FUNCTION_4
0x40001b6	        0x488975f0	             mov qword [rbp - 0x10], rsi	        96	curl_endian.c	FUNCTION_4
0x40001ba	          0x8b45fc	                mov eax, dword [rbp - 4]	        97	curl_endian.c	FUNCTION_4
0x40001bd	            0x89c2	                            mov edx, eax	        97	curl_endian.c	FUNCTION_4
0x40001bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        97	curl_endian.c	FUNCTION_4
0x40001c3	            0x8810	                      mov byte [rax], dl	        97	curl_endian.c	FUNCTION_4
0x40001c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        98	curl_endian.c	FUNCTION_4
0x40001c9	        0x4883c001	                              add rax, 1	        98	curl_endian.c	FUNCTION_4
0x40001cd	          0x8b55fc	                mov edx, dword [rbp - 4]	        98	curl_endian.c	FUNCTION_4
0x40001d0	    0x81e200ff0000	                         and edx, 0xff00	        98	curl_endian.c	FUNCTION_4
0x40001d6	          0xc1fa08	                              sar edx, 8	        98	curl_endian.c	FUNCTION_4
0x40001d9	            0x8810	                      mov byte [rax], dl	        98	curl_endian.c	FUNCTION_4
0x40001db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        99	curl_endian.c	FUNCTION_4
0x40001df	        0x4883c002	                              add rax, 2	        99	curl_endian.c	FUNCTION_4
0x40001e3	          0x8b55fc	                mov edx, dword [rbp - 4]	        99	curl_endian.c	FUNCTION_4
0x40001e6	    0x81e20000ff00	                       and edx, 0xff0000	        99	curl_endian.c	FUNCTION_4
0x40001ec	          0xc1fa10	                           sar edx, 0x10	        99	curl_endian.c	FUNCTION_4
0x40001ef	            0x8810	                      mov byte [rax], dl	        99	curl_endian.c	FUNCTION_4
0x40001f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       100	curl_endian.c	FUNCTION_4
0x40001f5	        0x4883c003	                              add rax, 3	       100	curl_endian.c	FUNCTION_4
0x40001f9	          0x8b55fc	                mov edx, dword [rbp - 4]	       100	curl_endian.c	FUNCTION_4
0x40001fc	          0xc1ea18	                           shr edx, 0x18	       100	curl_endian.c	FUNCTION_4
0x40001ff	            0x8810	                      mov byte [rax], dl	       100	curl_endian.c	FUNCTION_4
0x4000201	              0x90	                                     nop	       101	curl_endian.c	FUNCTION_4
0x4000202	              0x5d	                                 pop rbp	       101	curl_endian.c	FUNCTION_4
0x4000203	              0xc3	                                     ret	       101	curl_endian.c	FUNCTION_4
Curl_read16_be	DO,0:CALL,0:functions,0:FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0	15
0x4000186	              0x55	                                push rbp	        79	curl_endian.c	FUNCTION_3
0x4000187	          0x4889e5	                            mov rbp, rsp	        79	curl_endian.c	FUNCTION_3
0x400018a	        0x48897df8	                mov qword [rbp - 8], rdi	        79	curl_endian.c	FUNCTION_3
0x400018e	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	curl_endian.c	FUNCTION_3
0x4000192	           0xfb600	                   movzx eax, byte [rax]	        80	curl_endian.c	FUNCTION_3
0x4000195	           0xfb6c0	                           movzx eax, al	        80	curl_endian.c	FUNCTION_3
0x4000198	          0xc1e008	                              shl eax, 8	        80	curl_endian.c	FUNCTION_3
0x400019b	            0x89c2	                            mov edx, eax	        80	curl_endian.c	FUNCTION_3
0x400019d	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	curl_endian.c	FUNCTION_3
0x40001a1	        0x4883c001	                              add rax, 1	        81	curl_endian.c	FUNCTION_3
0x40001a5	           0xfb600	                   movzx eax, byte [rax]	        81	curl_endian.c	FUNCTION_3
0x40001a8	           0xfb6c0	                           movzx eax, al	        80	curl_endian.c	FUNCTION_3
0x40001ab	             0x9d0	                             or eax, edx	        80	curl_endian.c	FUNCTION_3
0x40001ad	              0x5d	                                 pop rbp	        82	curl_endian.c	FUNCTION_3
0x40001ae	              0xc3	                                     ret	        82	curl_endian.c	FUNCTION_3
Curl_write64_le	DO,0:CALL,2:functions,0:FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0	21
0x4000204	              0x55	                                push rbp	       120	curl_endian.c	FUNCTION_5
0x4000205	          0x4889e5	                            mov rbp, rsp	       120	curl_endian.c	FUNCTION_5
0x4000208	        0x4883ec10	                           sub rsp, 0x10	       120	curl_endian.c	FUNCTION_5
0x400020c	        0x48897df8	                mov qword [rbp - 8], rdi	       120	curl_endian.c	FUNCTION_5
0x4000210	        0x488975f0	             mov qword [rbp - 0x10], rsi	       120	curl_endian.c	FUNCTION_5
0x4000214	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	curl_endian.c	FUNCTION_5	CALL_1
0x4000218	            0x89c2	                            mov edx, eax	       121	curl_endian.c	FUNCTION_5	CALL_1
0x400021a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	curl_endian.c	FUNCTION_5	CALL_1
0x400021e	          0x4889c6	                            mov rsi, rax	       121	curl_endian.c	FUNCTION_5	CALL_1
0x4000221	            0x89d7	                            mov edi, edx	       121	curl_endian.c	FUNCTION_5	CALL_1
0x4000223	      0xe800000000	                          call 0x4000228	       121	curl_endian.c	FUNCTION_5	CALL_1
0x4000228	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       122	curl_endian.c	FUNCTION_5	CALL_2
0x400022c	        0x4883c004	                              add rax, 4	       122	curl_endian.c	FUNCTION_5	CALL_2
0x4000230	        0x488b55f8	                mov rdx, qword [rbp - 8]	       122	curl_endian.c	FUNCTION_5	CALL_2
0x4000234	        0x48c1fa20	                           sar rdx, 0x20	       122	curl_endian.c	FUNCTION_5	CALL_2
0x4000238	          0x4889c6	                            mov rsi, rax	       122	curl_endian.c	FUNCTION_5	CALL_2
0x400023b	            0x89d7	                            mov edi, edx	       122	curl_endian.c	FUNCTION_5	CALL_2
0x400023d	      0xe800000000	                          call 0x4000242	       122	curl_endian.c	FUNCTION_5	CALL_2
0x4000242	              0x90	                                     nop	       123	curl_endian.c	FUNCTION_5
0x4000243	              0xc9	                                   leave	       123	curl_endian.c	FUNCTION_5
0x4000244	              0xc3	                                     ret	       123	curl_endian.c	FUNCTION_5
