curl_escape	functions,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:FOR,0:CALL,1	7
0x400017b	        0x4883ec08	                              sub rsp, 8	        69	escape.c	FUNCTION_2
0x400017f	            0x89f2	                            mov edx, esi	        69	escape.c	FUNCTION_2
0x4000181	          0x4889fe	                            mov rsi, rdi	        70	escape.c	FUNCTION_2	CALL_1
0x4000184	      0xbf00000000	                              mov edi, 0	        70	escape.c	FUNCTION_2	CALL_1
0x4000189	      0xe800000000	                          call 0x400018e	        70	escape.c	FUNCTION_2	CALL_1
0x400018e	        0x4883c408	                              add rsp, 8	        71	escape.c	FUNCTION_2
0x4000192	              0xc3	                                     ret	        71	escape.c	FUNCTION_2
Curl_urldecode	functions,0:WHILE,1:IF,5:DO,0:SWITCH,0:ELSE,0:FOR,0:CALL,9	104
0x4000193	            0x4157	                                push r15	       150	escape.c	FUNCTION_5
0x4000195	            0x4156	                                push r14	       150	escape.c	FUNCTION_5
0x4000197	            0x4155	                                push r13	       150	escape.c	FUNCTION_5
0x4000199	            0x4154	                                push r12	       150	escape.c	FUNCTION_5
0x400019b	              0x55	                                push rbp	       150	escape.c	FUNCTION_5
0x400019c	              0x53	                                push rbx	       150	escape.c	FUNCTION_5
0x400019d	        0x4883ec58	                           sub rsp, 0x58	       150	escape.c	FUNCTION_5
0x40001a1	          0x4989f4	                            mov r12, rsi	       150	escape.c	FUNCTION_5
0x40001a4	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       150	escape.c	FUNCTION_5
0x40001a9	      0x4c89442418	              mov qword [rsp + 0x18], r8	       150	escape.c	FUNCTION_5
0x40001ae	      0x44884c240f	               mov byte [rsp + 0xf], r9b	       150	escape.c	FUNCTION_5
0x40001b3	    0x64488b042528	                mov rax, qword fs:[0x28]	       150	escape.c	FUNCTION_5
0x40001bc	      0x4889442448	             mov qword [rsp + 0x48], rax	       150	escape.c	FUNCTION_5
0x40001c1	            0x31c0	                            xor eax, eax	       150	escape.c	FUNCTION_5
0x40001c3	        0x4c8d7201	                      lea r14, [rdx + 1]	       151	escape.c	FUNCTION_5	CALL_1
0x40001c7	          0x4885d2	                           test rdx, rdx	       151	escape.c	FUNCTION_5	CALL_1
0x40001ca	            0x7512	                           jne 0x40001de	       151	escape.c	FUNCTION_5	CALL_1
0x40001cc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       151	escape.c	FUNCTION_5	CALL_1
0x40001d3	          0x4889f7	                            mov rdi, rsi	       151	escape.c	FUNCTION_5	CALL_1
0x40001d6	            0xf2ae	              repne scasb al, byte [rdi]	       151	escape.c	FUNCTION_5	CALL_1
0x40001d8	          0x48f7d1	                                 not rcx	       151	escape.c	FUNCTION_5	CALL_1
0x40001db	          0x4989ce	                            mov r14, rcx	       151	escape.c	FUNCTION_5	CALL_1
0x40001de	          0x4c89f7	                            mov rdi, r14	       152	escape.c	FUNCTION_5	CALL_2
0x40001e1	    0x488b05000000	            mov rax, qword [0x040001e8] 	       152	escape.c	FUNCTION_5	CALL_2
0x40001e8	            0xff10	                        call qword [rax]	       152	escape.c	FUNCTION_5	CALL_2
0x40001ea	          0x4989c7	                            mov r15, rax	       152	escape.c	FUNCTION_5	CALL_2
0x40001ed	      0xb81b000000	                           mov eax, 0x1b	       159	escape.c	FUNCTION_5	IF_1
0x40001f2	          0x4d85ff	                           test r15, r15	       158	escape.c	FUNCTION_5	IF_1
0x40001f5	     0xf84fe000000	                            je 0x40002f9	       158	escape.c	FUNCTION_5	IF_1
0x40001fb	          0x4c89f3	                            mov rbx, r14	       161	escape.c	FUNCTION_5	WHILE_1
0x40001fe	        0x4883eb01	                              sub rbx, 1	       161	escape.c	FUNCTION_5	WHILE_1
0x4000202	     0xf84cc000000	                            je 0x40002d4	       161	escape.c	FUNCTION_5	WHILE_1
0x4000208	    0x41bd00000000	                             mov r13d, 0	       161	escape.c	FUNCTION_5	WHILE_1
0x400020e	      0x488d442438	                   lea rax, [rsp + 0x38]	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000213	      0x4889442420	             mov qword [rsp + 0x20], rax	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000218	      0x488d442440	                   lea rax, [rsp + 0x40]	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x400021d	      0x4889442428	             mov qword [rsp + 0x28], rax	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000222	            0xeb06	                           jmp 0x400022a	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000224	          0x4989de	                            mov r14, rbx	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000227	          0x4889c3	                            mov rbx, rax	       161	escape.c	FUNCTION_5	WHILE_1
0x400022a	      0x410fb62c24	                   movzx ebp, byte [r12]	       162	escape.c	FUNCTION_5	WHILE_1
0x400022f	        0x4080fd25	                           cmp bpl, 0x25	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000233	            0x7563	                           jne 0x4000298	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000235	        0x4883fb02	                              cmp rbx, 2	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000239	            0x765d	                           jbe 0x4000298	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x400023b	    0x410fb67c2401	               movzx edi, byte [r12 + 1]	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000241	      0xe800000000	                          call 0x4000246	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000246	            0x85c0	                           test eax, eax	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000248	            0x744e	                            je 0x4000298	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x400024a	    0x410fb67c2402	               movzx edi, byte [r12 + 2]	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000250	      0xe800000000	                          call 0x4000255	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000255	            0x85c0	                           test eax, eax	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000257	            0x743f	                            je 0x4000298	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000259	    0x410fb6442401	               movzx eax, byte [r12 + 1]	       168	escape.c	FUNCTION_5	WHILE_1	IF_2
0x400025f	        0x88442440	               mov byte [rsp + 0x40], al	       168	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000263	    0x410fb6442402	               movzx eax, byte [r12 + 2]	       169	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000269	        0x88442441	               mov byte [rsp + 0x41], al	       169	escape.c	FUNCTION_5	WHILE_1	IF_2
0x400026d	      0xc644244200	                mov byte [rsp + 0x42], 0	       170	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000272	      0xba10000000	                           mov edx, 0x10	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000277	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x400027c	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000281	      0xe800000000	                          call 0x4000286	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000286	          0x4889c7	                            mov rdi, rax	       174	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_6
0x4000289	      0xe800000000	                          call 0x400028e	       174	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_6
0x400028e	            0x89c5	                            mov ebp, eax	       174	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_6
0x4000290	        0x4983c402	                              add r12, 2	       183	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000294	        0x498d5efd	                      lea rbx, [r14 - 3]	       184	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000298	        0x4080fd1f	                           cmp bpl, 0x1f	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x400029c	            0x771a	                            ja 0x40002b8	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x400029e	      0x807c240f00	                 cmp byte [rsp + 0xf], 0	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x40002a3	            0x7413	                            je 0x40002b8	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x40002a5	          0x4c89ff	                            mov rdi, r15	       188	escape.c	FUNCTION_5	WHILE_1	IF_4	CALL_9
0x40002a8	    0x488b05000000	            mov rax, qword [0x040002af] 	       188	escape.c	FUNCTION_5	WHILE_1	IF_4	CALL_9
0x40002af	            0xff10	                        call qword [rax]	       188	escape.c	FUNCTION_5	WHILE_1	IF_4	CALL_9
0x40002b1	      0xb803000000	                              mov eax, 3	       189	escape.c	FUNCTION_5	WHILE_1	IF_4
0x40002b6	            0xeb41	                           jmp 0x40002f9	       189	escape.c	FUNCTION_5	WHILE_1	IF_4
0x40002b8	        0x4983c501	                              add r13, 1	       192	escape.c	FUNCTION_5	WHILE_1
0x40002bc	      0x43886c2fff	           mov byte [r15 + r13 - 1], bpl	       192	escape.c	FUNCTION_5	WHILE_1
0x40002c1	        0x4983c401	                              add r12, 1	       193	escape.c	FUNCTION_5	WHILE_1
0x40002c5	          0x4889d8	                            mov rax, rbx	       161	escape.c	FUNCTION_5	WHILE_1
0x40002c8	        0x4883e801	                              sub rax, 1	       161	escape.c	FUNCTION_5	WHILE_1
0x40002cc	     0xf8552ffffff	                           jne 0x4000224	       161	escape.c	FUNCTION_5	WHILE_1
0x40002d2	            0xeb06	                           jmp 0x40002da	       161	escape.c	FUNCTION_5	WHILE_1
0x40002d4	    0x41bd00000000	                             mov r13d, 0	       161	escape.c	FUNCTION_5	WHILE_1
0x40002da	      0x43c6042f00	                 mov byte [r15 + r13], 0	       195	escape.c	FUNCTION_5
0x40002df	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       197	escape.c	FUNCTION_5	IF_5
0x40002e4	          0x4885c0	                           test rax, rax	       197	escape.c	FUNCTION_5	IF_5
0x40002e7	            0x7403	                            je 0x40002ec	       197	escape.c	FUNCTION_5	IF_5
0x40002e9	          0x4c8928	                    mov qword [rax], r13	       199	escape.c	FUNCTION_5	IF_5
0x40002ec	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       202	escape.c	FUNCTION_5
0x40002f1	          0x4c8938	                    mov qword [rax], r15	       202	escape.c	FUNCTION_5
0x40002f4	      0xb800000000	                              mov eax, 0	       204	escape.c	FUNCTION_5
0x40002f9	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       205	escape.c	FUNCTION_5
0x40002fe	    0x644833342528	                xor rsi, qword fs:[0x28]	       205	escape.c	FUNCTION_5
0x4000307	            0x7405	                            je 0x400030e	       205	escape.c	FUNCTION_5
0x4000309	      0xe800000000	                          call 0x400030e	       205	escape.c	FUNCTION_5
0x400030e	        0x4883c458	                           add rsp, 0x58	       205	escape.c	FUNCTION_5
0x4000312	              0x5b	                                 pop rbx	       205	escape.c	FUNCTION_5
0x4000313	              0x5d	                                 pop rbp	       205	escape.c	FUNCTION_5
0x4000314	            0x415c	                                 pop r12	       205	escape.c	FUNCTION_5
0x4000316	            0x415d	                                 pop r13	       205	escape.c	FUNCTION_5
0x4000318	            0x415e	                                 pop r14	       205	escape.c	FUNCTION_5
0x400031a	            0x415f	                                 pop r15	       205	escape.c	FUNCTION_5
0x400031c	              0xc3	                                     ret	       205	escape.c	FUNCTION_5
curl_easy_escape	functions,0:WHILE,1:IF,6:DO,0:SWITCH,0:ELSE,1:FOR,0:CALL,7	89
0x4000040	            0x85d2	                           test edx, edx	        91	escape.c	FUNCTION_4	IF_1
0x4000042	     0xf8812010000	                            js 0x400015a	        91	escape.c	FUNCTION_4	IF_1
0x4000048	            0x4157	                                push r15	        81	escape.c	FUNCTION_4
0x400004a	            0x4156	                                push r14	        81	escape.c	FUNCTION_4
0x400004c	            0x4155	                                push r13	        81	escape.c	FUNCTION_4
0x400004e	            0x4154	                                push r12	        81	escape.c	FUNCTION_4
0x4000050	              0x55	                                push rbp	        81	escape.c	FUNCTION_4
0x4000051	              0x53	                                push rbx	        81	escape.c	FUNCTION_4
0x4000052	        0x4883ec28	                           sub rsp, 0x28	        81	escape.c	FUNCTION_4
0x4000056	            0x85d2	                           test edx, edx	        94	escape.c	FUNCTION_4	CALL_1
0x4000058	            0x7409	                            je 0x4000063	        94	escape.c	FUNCTION_4	CALL_1
0x400005a	          0x4863d2	                         movsxd rdx, edx	        94	escape.c	FUNCTION_4	CALL_1
0x400005d	        0x488d6a01	                      lea rbp, [rdx + 1]	        94	escape.c	FUNCTION_4	CALL_1
0x4000061	            0xeb17	                           jmp 0x400007a	        94	escape.c	FUNCTION_4	CALL_1
0x4000063	      0xb800000000	                              mov eax, 0	        94	escape.c	FUNCTION_4	CALL_1
0x4000068	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        94	escape.c	FUNCTION_4	CALL_1
0x400006f	          0x4889f7	                            mov rdi, rsi	        94	escape.c	FUNCTION_4	CALL_1
0x4000072	            0xf2ae	              repne scasb al, byte [rdi]	        94	escape.c	FUNCTION_4	CALL_1
0x4000074	          0x48f7d1	                                 not rcx	        94	escape.c	FUNCTION_4	CALL_1
0x4000077	          0x4889cd	                            mov rbp, rcx	        94	escape.c	FUNCTION_4	CALL_1
0x400007a	          0x4889f3	                            mov rbx, rsi	        94	escape.c	FUNCTION_4	CALL_1
0x400007d	      0x4889742408	                mov qword [rsp + 8], rsi	        94	escape.c	FUNCTION_4	CALL_1
0x4000082	          0x4889ef	                            mov rdi, rbp	        97	escape.c	FUNCTION_4	CALL_2
0x4000085	    0x488b05000000	            mov rax, qword [0x0400008c] 	        97	escape.c	FUNCTION_4	CALL_2
0x400008c	            0xff10	                        call qword [rax]	        97	escape.c	FUNCTION_4	CALL_2
0x400008e	          0x4989c5	                            mov r13, rax	        97	escape.c	FUNCTION_4	CALL_2
0x4000091	          0x4885c0	                           test rax, rax	        98	escape.c	FUNCTION_4	IF_2
0x4000094	     0xf84c6000000	                            je 0x4000160	        98	escape.c	FUNCTION_4	IF_2
0x400009a	        0x4883fd01	                              cmp rbp, 1	       102	escape.c	FUNCTION_4	WHILE_1
0x400009e	     0xf84a5000000	                            je 0x4000149	       102	escape.c	FUNCTION_4	WHILE_1
0x40000a4	          0x4989ee	                            mov r14, rbp	       102	escape.c	FUNCTION_4	WHILE_1
0x40000a7	      0x48896c2418	             mov qword [rsp + 0x18], rbp	       102	escape.c	FUNCTION_4	WHILE_1
0x40000ac	    0x41bc00000000	                             mov r12d, 0	       102	escape.c	FUNCTION_4	WHILE_1
0x40000b2	    0x4c8d3d000000	                   lea r15, [0x040000b9]	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000b9	        0x488d45ff	                      lea rax, [rbp - 1]	       102	escape.c	FUNCTION_4	WHILE_1
0x40000bd	      0x4889442410	             mov qword [rsp + 0x10], rax	       102	escape.c	FUNCTION_4	WHILE_1
0x40000c2	           0xfb62b	                   movzx ebp, byte [rbx]	       103	escape.c	FUNCTION_4	WHILE_1
0x40000c5	          0x8d45d3	                   lea eax, [rbp - 0x2d]	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000c8	            0x3c51	                            cmp al, 0x51	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000ca	            0x7718	                            ja 0x40000e4	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000cc	           0xfb6c0	                           movzx eax, al	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000cf	        0x49630487	         movsxd rax, dword [r15 + rax*4]	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000d3	          0x4c01f8	                            add rax, r15	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000d6	            0xffe0	                                 jmp rax	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000d8	      0x43886c2500	               mov byte [r13 + r12], bpl	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x40000dd	      0x4d8d642401	                      lea r12, [r12 + 1]	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x40000e2	            0xeb4c	                           jmp 0x4000130	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x40000e4	        0x4983c602	                              add r14, 2	       110	escape.c	FUNCTION_4	WHILE_1	ELSE_1
0x40000e8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       111	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x40000ed	          0x4939c6	                            cmp r14, rax	       111	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x40000f0	            0x761b	                           jbe 0x400010d	       111	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x40000f2	          0x4801c0	                            add rax, rax	       112	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x40000f5	      0x4889442418	             mov qword [rsp + 0x18], rax	       112	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x40000fa	          0x4889c6	                            mov rsi, rax	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x40000fd	          0x4c89ef	                            mov rdi, r13	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x4000100	      0xe800000000	                          call 0x4000105	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x4000105	          0x4989c5	                            mov r13, rax	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x4000108	          0x4885c0	                           test rax, rax	       114	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	IF_5
0x400010b	            0x745a	                            je 0x4000167	       114	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	IF_5
0x400010d	        0x400fb6cd	                          movzx ecx, bpl	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x4000111	      0x4b8d7c2500	                    lea rdi, [r13 + r12]	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x4000116	    0x488d15000000	                   lea rdx, [0x0400011d]	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x400011d	      0xbe04000000	                              mov esi, 4	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x4000122	      0xb800000000	                              mov eax, 0	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x4000127	      0xe800000000	                          call 0x400012c	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x400012c	        0x4983c403	                              add r12, 3	       128	escape.c	FUNCTION_4	WHILE_1	ELSE_1
0x4000130	        0x4883c301	                              add rbx, 1	       130	escape.c	FUNCTION_4	WHILE_1
0x4000134	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       102	escape.c	FUNCTION_4	WHILE_1
0x4000139	          0x4829d8	                            sub rax, rbx	       102	escape.c	FUNCTION_4	WHILE_1
0x400013c	      0x4803442408	                add rax, qword [rsp + 8]	       102	escape.c	FUNCTION_4	WHILE_1
0x4000141	     0xf857bffffff	                           jne 0x40000c2	       102	escape.c	FUNCTION_4	WHILE_1
0x4000147	            0xeb06	                           jmp 0x400014f	       102	escape.c	FUNCTION_4	WHILE_1
0x4000149	    0x41bc00000000	                             mov r12d, 0	        87	escape.c	FUNCTION_4
0x400014f	    0x43c644250000	                 mov byte [r13 + r12], 0	       132	escape.c	FUNCTION_4
0x4000155	          0x4c89e8	                            mov rax, r13	       133	escape.c	FUNCTION_4
0x4000158	            0xeb12	                           jmp 0x400016c	       133	escape.c	FUNCTION_4
0x400015a	      0xb800000000	                              mov eax, 0	        92	escape.c	FUNCTION_4	IF_1
0x400015f	              0xc3	                                     ret	       134	escape.c	FUNCTION_4
0x4000160	      0xb800000000	                              mov eax, 0	        99	escape.c	FUNCTION_4	IF_2
0x4000165	            0xeb05	                           jmp 0x400016c	        99	escape.c	FUNCTION_4	IF_2
0x4000167	      0xb800000000	                              mov eax, 0	       115	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	IF_5
0x400016c	        0x4883c428	                           add rsp, 0x28	       134	escape.c	FUNCTION_4
0x4000170	              0x5b	                                 pop rbx	       134	escape.c	FUNCTION_4
0x4000171	              0x5d	                                 pop rbp	       134	escape.c	FUNCTION_4
0x4000172	            0x415c	                                 pop r12	       134	escape.c	FUNCTION_4
0x4000174	            0x415d	                                 pop r13	       134	escape.c	FUNCTION_4
0x4000176	            0x415e	                                 pop r14	       134	escape.c	FUNCTION_4
0x4000178	            0x415f	                                 pop r15	       134	escape.c	FUNCTION_4
0x400017a	              0xc3	                                     ret	       134	escape.c	FUNCTION_4
curl_free	functions,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:FOR,0:CALL,1	5
0x40003d5	        0x4883ec08	                              sub rsp, 8	       240	escape.c	FUNCTION_7
0x40003d9	    0x488b05000000	            mov rax, qword [0x040003e0] 	       241	escape.c	FUNCTION_7	CALL_1
0x40003e0	            0xff10	                        call qword [rax]	       241	escape.c	FUNCTION_7	CALL_1
0x40003e2	        0x4883c408	                              add rsp, 8	       242	escape.c	FUNCTION_7
0x40003e6	              0xc3	                                     ret	       242	escape.c	FUNCTION_7
curl_unescape	functions,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:FOR,0:CALL,1	8
0x40003b8	        0x4883ec08	                              sub rsp, 8	        75	escape.c	FUNCTION_3
0x40003bc	            0x89f2	                            mov edx, esi	        75	escape.c	FUNCTION_3
0x40003be	      0xb900000000	                              mov ecx, 0	        76	escape.c	FUNCTION_3	CALL_1
0x40003c3	          0x4889fe	                            mov rsi, rdi	        76	escape.c	FUNCTION_3	CALL_1
0x40003c6	      0xbf00000000	                              mov edi, 0	        76	escape.c	FUNCTION_3	CALL_1
0x40003cb	      0xe800000000	                          call 0x40003d0	        76	escape.c	FUNCTION_3	CALL_1
0x40003d0	        0x4883c408	                              add rsp, 8	        77	escape.c	FUNCTION_3
0x40003d4	              0xc3	                                     ret	        77	escape.c	FUNCTION_3
curl_easy_unescape	functions,0:WHILE,0:IF,4:DO,0:SWITCH,0:ELSE,1:FOR,0:CALL,3	38
0x400031d	              0x53	                                push rbx	       215	escape.c	FUNCTION_6
0x400031e	        0x4883ec20	                           sub rsp, 0x20	       215	escape.c	FUNCTION_6
0x4000322	    0x64488b042528	                mov rax, qword fs:[0x28]	       215	escape.c	FUNCTION_6
0x400032b	      0x4889442418	             mov qword [rsp + 0x18], rax	       215	escape.c	FUNCTION_6
0x4000330	            0x31c0	                            xor eax, eax	       215	escape.c	FUNCTION_6
0x4000332	    0x48c744240800	                  mov qword [rsp + 8], 0	       216	escape.c	FUNCTION_6
0x400033b	            0x85d2	                           test edx, edx	       217	escape.c	FUNCTION_6	IF_1
0x400033d	            0x7859	                            js 0x4000398	       217	escape.c	FUNCTION_6	IF_1
0x400033f	          0x4889cb	                            mov rbx, rcx	       217	escape.c	FUNCTION_6	IF_1
0x4000342	      0x488d4c2408	                      lea rcx, [rsp + 8]	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000347	          0x4863d2	                         movsxd rdx, edx	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x400034a	    0x41b900000000	                              mov r9d, 0	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000350	      0x4c8d442410	                    lea r8, [rsp + 0x10]	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000355	      0xe800000000	                          call 0x400035a	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x400035a	            0x85c0	                           test eax, eax	       222	escape.c	FUNCTION_6	IF_1	IF_2
0x400035c	            0x7407	                            je 0x4000365	       222	escape.c	FUNCTION_6	IF_1	IF_2
0x400035e	      0xb800000000	                              mov eax, 0	       223	escape.c	FUNCTION_6	IF_1	IF_2
0x4000363	            0xeb38	                           jmp 0x400039d	       223	escape.c	FUNCTION_6	IF_1	IF_2
0x4000365	          0x4885db	                           test rbx, rbx	       225	escape.c	FUNCTION_6	IF_1	IF_3
0x4000368	            0x742e	                            je 0x4000398	       225	escape.c	FUNCTION_6	IF_1	IF_3
0x400036a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       226	escape.c	FUNCTION_6	IF_1	IF_3	IF_4
0x400036f	    0x4881ffffffff	                     cmp rdi, 0x7fffffff	       226	escape.c	FUNCTION_6	IF_1	IF_3	IF_4
0x4000376	            0x7709	                            ja 0x4000381	       226	escape.c	FUNCTION_6	IF_1	IF_3	IF_4
0x4000378	      0xe800000000	                          call 0x400037d	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x400037d	            0x8903	                    mov dword [rbx], eax	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x400037f	            0xeb17	                           jmp 0x4000398	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x4000381	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x4000386	    0x488b05000000	            mov rax, qword [0x0400038d] 	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x400038d	            0xff10	                        call qword [rax]	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x400038f	    0x48c744240800	                  mov qword [rsp + 8], 0	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x4000398	      0x488b442408	                mov rax, qword [rsp + 8]	       233	escape.c	FUNCTION_6
0x400039d	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       234	escape.c	FUNCTION_6
0x40003a2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       234	escape.c	FUNCTION_6
0x40003ab	            0x7405	                            je 0x40003b2	       234	escape.c	FUNCTION_6
0x40003ad	      0xe800000000	                          call 0x40003b2	       234	escape.c	FUNCTION_6
0x40003b2	        0x4883c420	                           add rsp, 0x20	       234	escape.c	FUNCTION_6
0x40003b6	              0x5b	                                 pop rbx	       234	escape.c	FUNCTION_6
0x40003b7	              0xc3	                                     ret	       234	escape.c	FUNCTION_6
