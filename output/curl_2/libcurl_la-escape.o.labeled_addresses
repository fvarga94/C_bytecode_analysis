curl_unescape	IF,0:ELSE,0:CALL,1:WHILE,0:functions,0:SWITCH,0:DO,0:FOR,0	13
0x400017e	              0x55	                                push rbp	        75	escape.c	FUNCTION_3
0x400017f	          0x4889e5	                            mov rbp, rsp	        75	escape.c	FUNCTION_3
0x4000182	        0x4883ec10	                           sub rsp, 0x10	        75	escape.c	FUNCTION_3
0x4000186	        0x48897df8	                mov qword [rbp - 8], rdi	        75	escape.c	FUNCTION_3
0x400018a	          0x8975f4	              mov dword [rbp - 0xc], esi	        75	escape.c	FUNCTION_3
0x400018d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        76	escape.c	FUNCTION_3	CALL_1
0x4000190	        0x488b45f8	                mov rax, qword [rbp - 8]	        76	escape.c	FUNCTION_3	CALL_1
0x4000194	      0xb900000000	                              mov ecx, 0	        76	escape.c	FUNCTION_3	CALL_1
0x4000199	          0x4889c6	                            mov rsi, rax	        76	escape.c	FUNCTION_3	CALL_1
0x400019c	      0xbf00000000	                              mov edi, 0	        76	escape.c	FUNCTION_3	CALL_1
0x40001a1	      0xe800000000	                          call 0x40001a6	        76	escape.c	FUNCTION_3	CALL_1
0x40001a6	              0xc9	                                   leave	        77	escape.c	FUNCTION_3
0x40001a7	              0xc3	                                     ret	        77	escape.c	FUNCTION_3
curl_easy_escape	IF,6:ELSE,1:CALL,7:WHILE,1:functions,0:SWITCH,0:DO,0:FOR,0	105
0x40001a8	              0x55	                                push rbp	        81	escape.c	FUNCTION_4
0x40001a9	          0x4889e5	                            mov rbp, rsp	        81	escape.c	FUNCTION_4
0x40001ac	        0x4883ec60	                           sub rsp, 0x60	        81	escape.c	FUNCTION_4
0x40001b0	        0x48897db8	             mov qword [rbp - 0x48], rdi	        81	escape.c	FUNCTION_4
0x40001b4	        0x488975b0	             mov qword [rbp - 0x50], rsi	        81	escape.c	FUNCTION_4
0x40001b8	          0x8955ac	             mov dword [rbp - 0x54], edx	        81	escape.c	FUNCTION_4
0x40001bb	    0x48c745f80000	                  mov qword [rbp - 8], 0	        84	escape.c	FUNCTION_4
0x40001c3	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        87	escape.c	FUNCTION_4
0x40001cb	        0x837dac00	               cmp dword [rbp - 0x54], 0	        91	escape.c	FUNCTION_4	IF_1
0x40001cf	            0x790a	                           jns 0x40001db	        91	escape.c	FUNCTION_4	IF_1
0x40001d1	      0xb800000000	                              mov eax, 0	        92	escape.c	FUNCTION_4	IF_1
0x40001d6	      0xe960010000	                           jmp 0x400033b	        92	escape.c	FUNCTION_4	IF_1
0x40001db	        0x837dac00	               cmp dword [rbp - 0x54], 0	        94	escape.c	FUNCTION_4	CALL_1
0x40001df	            0x740b	                            je 0x40001ec	        94	escape.c	FUNCTION_4	CALL_1
0x40001e1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	        94	escape.c	FUNCTION_4	CALL_1
0x40001e4	            0x4898	                                    cdqe	        94	escape.c	FUNCTION_4	CALL_1
0x40001e6	        0x4883c001	                              add rax, 1	        94	escape.c	FUNCTION_4	CALL_1
0x40001ea	            0xeb10	                           jmp 0x40001fc	        94	escape.c	FUNCTION_4	CALL_1
0x40001ec	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        94	escape.c	FUNCTION_4	CALL_1
0x40001f0	          0x4889c7	                            mov rdi, rax	        94	escape.c	FUNCTION_4	CALL_1
0x40001f3	      0xe800000000	                          call 0x40001f8	        94	escape.c	FUNCTION_4	CALL_1
0x40001f8	        0x4883c001	                              add rax, 1	        94	escape.c	FUNCTION_4	CALL_1
0x40001fc	        0x488945d0	             mov qword [rbp - 0x30], rax	        94	escape.c	FUNCTION_4	CALL_1
0x4000200	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        95	escape.c	FUNCTION_4
0x4000204	        0x488945e0	             mov qword [rbp - 0x20], rax	        95	escape.c	FUNCTION_4
0x4000208	    0x488b05000000	            mov rax, qword [0x0400020f] 	        97	escape.c	FUNCTION_4	CALL_2
0x400020f	          0x488b00	                    mov rax, qword [rax]	        97	escape.c	FUNCTION_4	CALL_2
0x4000212	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        97	escape.c	FUNCTION_4	CALL_2
0x4000216	          0x4889d7	                            mov rdi, rdx	        97	escape.c	FUNCTION_4	CALL_2
0x4000219	            0xffd0	                                call rax	        97	escape.c	FUNCTION_4	CALL_2
0x400021b	        0x488945d8	             mov qword [rbp - 0x28], rax	        97	escape.c	FUNCTION_4	CALL_2
0x400021f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        98	escape.c	FUNCTION_4	IF_2
0x4000224	            0x750a	                           jne 0x4000230	        98	escape.c	FUNCTION_4	IF_2
0x4000226	      0xb800000000	                              mov eax, 0	        99	escape.c	FUNCTION_4	IF_2
0x400022b	      0xe90b010000	                           jmp 0x400033b	        99	escape.c	FUNCTION_4	IF_2
0x4000230	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       101	escape.c	FUNCTION_4
0x4000234	        0x4883e801	                              sub rax, 1	       101	escape.c	FUNCTION_4
0x4000238	        0x488945f0	             mov qword [rbp - 0x10], rax	       101	escape.c	FUNCTION_4
0x400023c	      0xe9d3000000	                           jmp 0x4000314	       102	escape.c	FUNCTION_4	WHILE_1
0x4000241	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       103	escape.c	FUNCTION_4	WHILE_1
0x4000245	           0xfb600	                   movzx eax, byte [rax]	       103	escape.c	FUNCTION_4	WHILE_1
0x4000248	          0x8845cb	               mov byte [rbp - 0x35], al	       103	escape.c	FUNCTION_4	WHILE_1
0x400024b	         0xfb645cb	            movzx eax, byte [rbp - 0x35]	       105	escape.c	FUNCTION_4	WHILE_1	IF_3	CALL_3
0x400024f	            0x89c7	                            mov edi, eax	       105	escape.c	FUNCTION_4	WHILE_1	IF_3	CALL_3
0x4000251	      0xe8bcfeffff	              call sym.Curl_isunreserved	       105	escape.c	FUNCTION_4	WHILE_1	IF_3	CALL_3
0x4000256	            0x84c0	                             test al, al	       105	escape.c	FUNCTION_4	WHILE_1	IF_3	CALL_3
0x4000258	            0x741e	                            je 0x4000278	       105	escape.c	FUNCTION_4	WHILE_1	IF_3	CALL_3
0x400025a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x400025e	        0x488d5001	                      lea rdx, [rax + 1]	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x4000262	        0x488955e8	             mov qword [rbp - 0x18], rdx	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x4000266	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x400026a	          0x4801c2	                            add rdx, rax	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x400026d	         0xfb645cb	            movzx eax, byte [rbp - 0x35]	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x4000271	            0x8802	                      mov byte [rdx], al	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x4000273	      0xe997000000	                           jmp 0x400030f	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x4000278	      0x488345e002	               add qword [rbp - 0x20], 2	       110	escape.c	FUNCTION_4	WHILE_1	ELSE_1
0x400027d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       111	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x4000281	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       111	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x4000285	            0x7634	                           jbe 0x40002bb	       111	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x4000287	        0x48d165d0	               shl qword [rbp - 0x30], 1	       112	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x400028b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x400028f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x4000293	          0x4889d6	                            mov rsi, rdx	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x4000296	          0x4889c7	                            mov rdi, rax	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x4000299	      0xe800000000	                          call 0x400029e	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x400029e	        0x488945f8	                mov qword [rbp - 8], rax	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x40002a2	      0x48837df800	                  cmp qword [rbp - 8], 0	       114	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	IF_5
0x40002a7	            0x750a	                           jne 0x40002b3	       114	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	IF_5
0x40002a9	      0xb800000000	                              mov eax, 0	       115	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	IF_5
0x40002ae	      0xe988000000	                           jmp 0x400033b	       115	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	IF_5
0x40002b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       116	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x40002b7	        0x488945d8	             mov qword [rbp - 0x28], rax	       116	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x40002bb	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       119	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_5
0x40002c2	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       120	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6
0x40002c6	            0x741a	                            je 0x40002e2	       120	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6
0x40002c8	    0x488b05000000	            mov rax, qword [0x040002cf] 	       122	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_6
0x40002cf	          0x488b00	                    mov rax, qword [rax]	       122	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_6
0x40002d2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       122	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_6
0x40002d6	          0x4889d7	                            mov rdi, rdx	       122	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_6
0x40002d9	            0xffd0	                                call rax	       122	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_6
0x40002db	      0xb800000000	                              mov eax, 0	       123	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6
0x40002e0	            0xeb59	                           jmp 0x400033b	       123	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6
0x40002e2	         0xfb645cb	            movzx eax, byte [rbp - 0x35]	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x40002e6	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x40002ea	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x40002ee	        0x488d3c11	                    lea rdi, [rcx + rdx]	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x40002f2	            0x89c1	                            mov ecx, eax	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x40002f4	    0x488d15000000	                   lea rdx, [0x040002fb]	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x40002fb	      0xbe04000000	                              mov esi, 4	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x4000300	      0xb800000000	                              mov eax, 0	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x4000305	      0xe800000000	                          call 0x400030a	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x400030a	      0x488345e803	               add qword [rbp - 0x18], 3	       128	escape.c	FUNCTION_4	WHILE_1	ELSE_1
0x400030f	      0x488345b001	               add qword [rbp - 0x50], 1	       130	escape.c	FUNCTION_4	WHILE_1
0x4000314	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       102	escape.c	FUNCTION_4	WHILE_1
0x4000318	        0x488d50ff	                      lea rdx, [rax - 1]	       102	escape.c	FUNCTION_4	WHILE_1
0x400031c	        0x488955f0	             mov qword [rbp - 0x10], rdx	       102	escape.c	FUNCTION_4	WHILE_1
0x4000320	          0x4885c0	                           test rax, rax	       102	escape.c	FUNCTION_4	WHILE_1
0x4000323	     0xf8518ffffff	                           jne 0x4000241	       102	escape.c	FUNCTION_4	WHILE_1
0x4000329	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       132	escape.c	FUNCTION_4
0x400032d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	escape.c	FUNCTION_4
0x4000331	          0x4801d0	                            add rax, rdx	       132	escape.c	FUNCTION_4
0x4000334	          0xc60000	                       mov byte [rax], 0	       132	escape.c	FUNCTION_4
0x4000337	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       133	escape.c	FUNCTION_4
0x400033b	              0xc9	                                   leave	       134	escape.c	FUNCTION_4
0x400033c	              0xc3	                                     ret	       134	escape.c	FUNCTION_4
curl_free	IF,0:ELSE,0:CALL,1:WHILE,0:functions,0:SWITCH,0:DO,0:FOR,0	12
0x4000601	              0x55	                                push rbp	       240	escape.c	FUNCTION_7
0x4000602	          0x4889e5	                            mov rbp, rsp	       240	escape.c	FUNCTION_7
0x4000605	        0x4883ec10	                           sub rsp, 0x10	       240	escape.c	FUNCTION_7
0x4000609	        0x48897df8	                mov qword [rbp - 8], rdi	       240	escape.c	FUNCTION_7
0x400060d	    0x488b05000000	            mov rax, qword [0x04000614] 	       241	escape.c	FUNCTION_7	CALL_1
0x4000614	          0x488b00	                    mov rax, qword [rax]	       241	escape.c	FUNCTION_7	CALL_1
0x4000617	        0x488b55f8	                mov rdx, qword [rbp - 8]	       241	escape.c	FUNCTION_7	CALL_1
0x400061b	          0x4889d7	                            mov rdi, rdx	       241	escape.c	FUNCTION_7	CALL_1
0x400061e	            0xffd0	                                call rax	       241	escape.c	FUNCTION_7	CALL_1
0x4000620	              0x90	                                     nop	       242	escape.c	FUNCTION_7
0x4000621	              0xc9	                                   leave	       242	escape.c	FUNCTION_7
0x4000622	              0xc3	                                     ret	       242	escape.c	FUNCTION_7
curl_escape	IF,0:ELSE,0:CALL,1:WHILE,0:functions,0:SWITCH,0:DO,0:FOR,0	12
0x4000159	              0x55	                                push rbp	        69	escape.c	FUNCTION_2
0x400015a	          0x4889e5	                            mov rbp, rsp	        69	escape.c	FUNCTION_2
0x400015d	        0x4883ec10	                           sub rsp, 0x10	        69	escape.c	FUNCTION_2
0x4000161	        0x48897df8	                mov qword [rbp - 8], rdi	        69	escape.c	FUNCTION_2
0x4000165	          0x8975f4	              mov dword [rbp - 0xc], esi	        69	escape.c	FUNCTION_2
0x4000168	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        70	escape.c	FUNCTION_2	CALL_1
0x400016b	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	escape.c	FUNCTION_2	CALL_1
0x400016f	          0x4889c6	                            mov rsi, rax	        70	escape.c	FUNCTION_2	CALL_1
0x4000172	      0xbf00000000	                              mov edi, 0	        70	escape.c	FUNCTION_2	CALL_1
0x4000177	      0xe800000000	                          call 0x400017c	        70	escape.c	FUNCTION_2	CALL_1
0x400017c	              0xc9	                                   leave	        71	escape.c	FUNCTION_2
0x400017d	              0xc3	                                     ret	        71	escape.c	FUNCTION_2
Curl_isunreserved	IF,0:ELSE,0:CALL,0:WHILE,0:functions,0:SWITCH,1:DO,0:FOR,0	22
0x4000112	              0x55	                                push rbp	        45	escape.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        45	escape.c	FUNCTION_1
0x4000116	            0x89f8	                            mov eax, edi	        45	escape.c	FUNCTION_1
0x4000118	          0x8845fc	                  mov byte [rbp - 4], al	        45	escape.c	FUNCTION_1
0x400011b	         0xfb645fc	               movzx eax, byte [rbp - 4]	        46	escape.c	FUNCTION_1	SWITCH_1
0x400011f	          0x83e82d	                           sub eax, 0x2d	        46	escape.c	FUNCTION_1	SWITCH_1
0x4000122	          0x83f851	                           cmp eax, 0x51	        46	escape.c	FUNCTION_1	SWITCH_1
0x4000125	            0x772a	                            ja 0x4000151	        46	escape.c	FUNCTION_1	SWITCH_1
0x4000127	            0x89c0	                            mov eax, eax	        46	escape.c	FUNCTION_1	SWITCH_1
0x4000129	    0x488d14850000	                        lea rdx, [rax*4]	        46	escape.c	FUNCTION_1	SWITCH_1
0x4000131	    0x488d05000000	                   lea rax, [0x04000138]	        46	escape.c	FUNCTION_1	SWITCH_1
0x4000138	          0x8b0402	              mov eax, dword [rdx + rax]	        46	escape.c	FUNCTION_1	SWITCH_1
0x400013b	          0x4863d0	                         movsxd rdx, eax	        46	escape.c	FUNCTION_1	SWITCH_1
0x400013e	    0x488d05000000	                   lea rax, [0x04000145]	        46	escape.c	FUNCTION_1	SWITCH_1
0x4000145	          0x4801d0	                            add rax, rdx	        46	escape.c	FUNCTION_1	SWITCH_1
0x4000148	            0xffe0	                                 jmp rax	        46	escape.c	FUNCTION_1	SWITCH_1
0x400014a	      0xb801000000	                              mov eax, 1	        60	escape.c	FUNCTION_1	SWITCH_1
0x400014f	            0xeb06	                           jmp 0x4000157	        60	escape.c	FUNCTION_1	SWITCH_1
0x4000151	              0x90	                                     nop	        62	escape.c	FUNCTION_1	SWITCH_1
0x4000152	      0xb800000000	                              mov eax, 0	        64	escape.c	FUNCTION_1
0x4000157	              0x5d	                                 pop rbp	        65	escape.c	FUNCTION_1
0x4000158	              0xc3	                                     ret	        65	escape.c	FUNCTION_1
Curl_urldecode	IF,5:ELSE,0:CALL,9:WHILE,1:functions,0:SWITCH,0:DO,0:FOR,0	128
0x400033d	              0x55	                                push rbp	       150	escape.c	FUNCTION_5
0x400033e	          0x4889e5	                            mov rbp, rsp	       150	escape.c	FUNCTION_5
0x4000341	        0x4883ec70	                           sub rsp, 0x70	       150	escape.c	FUNCTION_5
0x4000345	        0x48897db8	             mov qword [rbp - 0x48], rdi	       150	escape.c	FUNCTION_5
0x4000349	        0x488975b0	             mov qword [rbp - 0x50], rsi	       150	escape.c	FUNCTION_5
0x400034d	        0x488955a8	             mov qword [rbp - 0x58], rdx	       150	escape.c	FUNCTION_5
0x4000351	        0x48894da0	             mov qword [rbp - 0x60], rcx	       150	escape.c	FUNCTION_5
0x4000355	        0x4c894598	              mov qword [rbp - 0x68], r8	       150	escape.c	FUNCTION_5
0x4000359	          0x4489c8	                            mov eax, r9d	       150	escape.c	FUNCTION_5
0x400035c	          0x884594	               mov byte [rbp - 0x6c], al	       150	escape.c	FUNCTION_5
0x400035f	    0x64488b042528	                mov rax, qword fs:[0x28]	       150	escape.c	FUNCTION_5
0x4000368	        0x488945f8	                mov qword [rbp - 8], rax	       150	escape.c	FUNCTION_5
0x400036c	            0x31c0	                            xor eax, eax	       150	escape.c	FUNCTION_5
0x400036e	      0x48837da800	               cmp qword [rbp - 0x58], 0	       151	escape.c	FUNCTION_5	CALL_1
0x4000373	            0x7512	                           jne 0x4000387	       151	escape.c	FUNCTION_5	CALL_1
0x4000375	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       151	escape.c	FUNCTION_5	CALL_1
0x4000379	          0x4889c7	                            mov rdi, rax	       151	escape.c	FUNCTION_5	CALL_1
0x400037c	      0xe800000000	                          call 0x4000381	       151	escape.c	FUNCTION_5	CALL_1
0x4000381	        0x4883c001	                              add rax, 1	       151	escape.c	FUNCTION_5	CALL_1
0x4000385	            0xeb08	                           jmp 0x400038f	       151	escape.c	FUNCTION_5	CALL_1
0x4000387	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       151	escape.c	FUNCTION_5	CALL_1
0x400038b	        0x4883c001	                              add rax, 1	       151	escape.c	FUNCTION_5	CALL_1
0x400038f	        0x488945d0	             mov qword [rbp - 0x30], rax	       151	escape.c	FUNCTION_5	CALL_1
0x4000393	    0x488b05000000	            mov rax, qword [0x0400039a] 	       152	escape.c	FUNCTION_5	CALL_2
0x400039a	          0x488b00	                    mov rax, qword [rax]	       152	escape.c	FUNCTION_5	CALL_2
0x400039d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       152	escape.c	FUNCTION_5	CALL_2
0x40003a1	          0x4889d7	                            mov rdi, rdx	       152	escape.c	FUNCTION_5	CALL_2
0x40003a4	            0xffd0	                                call rax	       152	escape.c	FUNCTION_5	CALL_2
0x40003a6	        0x488945e0	             mov qword [rbp - 0x20], rax	       152	escape.c	FUNCTION_5	CALL_2
0x40003aa	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       154	escape.c	FUNCTION_5
0x40003b2	      0x48837de000	               cmp qword [rbp - 0x20], 0	       158	escape.c	FUNCTION_5	IF_1
0x40003b7	     0xf851a010000	                           jne 0x40004d7	       158	escape.c	FUNCTION_5	IF_1
0x40003bd	      0xb81b000000	                           mov eax, 0x1b	       159	escape.c	FUNCTION_5	IF_1
0x40003c2	      0xe950010000	                           jmp 0x4000517	       159	escape.c	FUNCTION_5	IF_1
0x40003c7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       162	escape.c	FUNCTION_5	WHILE_1
0x40003cb	           0xfb600	                   movzx eax, byte [rax]	       162	escape.c	FUNCTION_5	WHILE_1
0x40003ce	          0x8845c3	               mov byte [rbp - 0x3d], al	       162	escape.c	FUNCTION_5	WHILE_1
0x40003d1	        0x807dc325	            cmp byte [rbp - 0x3d], 0x25 	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40003d5	     0xf85b8000000	                           jne 0x4000493	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40003db	      0x48837dd002	               cmp qword [rbp - 0x30], 2	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40003e0	     0xf86ad000000	                           jbe 0x4000493	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40003e6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x40003ea	        0x4883c001	                              add rax, 1	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x40003ee	           0xfb600	                   movzx eax, byte [rax]	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x40003f1	           0xfb6c0	                           movzx eax, al	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x40003f4	            0x89c7	                            mov edi, eax	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x40003f6	      0xe800000000	                          call 0x40003fb	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x40003fb	            0x85c0	                           test eax, eax	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40003fd	     0xf8490000000	                            je 0x4000493	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000403	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000407	        0x4883c002	                              add rax, 2	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x400040b	           0xfb600	                   movzx eax, byte [rax]	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x400040e	           0xfb6c0	                           movzx eax, al	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000411	            0x89c7	                            mov edi, eax	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000413	      0xe800000000	                          call 0x4000418	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000418	            0x85c0	                           test eax, eax	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x400041a	            0x7477	                            je 0x4000493	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x400041c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       168	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000420	         0xfb64001	               movzx eax, byte [rax + 1]	       168	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000424	          0x8845f0	               mov byte [rbp - 0x10], al	       168	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000427	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       169	escape.c	FUNCTION_5	WHILE_1	IF_2
0x400042b	         0xfb64002	               movzx eax, byte [rax + 2]	       169	escape.c	FUNCTION_5	WHILE_1	IF_2
0x400042f	          0x8845f1	                mov byte [rbp - 0xf], al	       169	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000432	        0xc645f200	                 mov byte [rbp - 0xe], 0	       170	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000436	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x400043a	        0x488d45f0	                   lea rax, [rbp - 0x10]	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x400043e	      0xba10000000	                           mov edx, 0x10	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000443	          0x4889ce	                            mov rsi, rcx	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000446	          0x4889c7	                            mov rdi, rax	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000449	      0xe800000000	                          call 0x400044e	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x400044e	        0x488945e8	             mov qword [rbp - 0x18], rax	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000452	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       174	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_6
0x4000456	          0x4889c7	                            mov rdi, rax	       174	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_6
0x4000459	      0xe800000000	                          call 0x400045e	       174	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_6
0x400045e	          0x8845c3	               mov byte [rbp - 0x3d], al	       174	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_6
0x4000461	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       176	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_7
0x4000468	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       177	escape.c	FUNCTION_5	WHILE_1	IF_2	IF_3
0x400046c	            0x741b	                            je 0x4000489	       177	escape.c	FUNCTION_5	WHILE_1	IF_2	IF_3
0x400046e	    0x488b05000000	            mov rax, qword [0x04000475] 	       179	escape.c	FUNCTION_5	WHILE_1	IF_2	IF_3	CALL_8
0x4000475	          0x488b00	                    mov rax, qword [rax]	       179	escape.c	FUNCTION_5	WHILE_1	IF_2	IF_3	CALL_8
0x4000478	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       179	escape.c	FUNCTION_5	WHILE_1	IF_2	IF_3	CALL_8
0x400047c	          0x4889d7	                            mov rdi, rdx	       179	escape.c	FUNCTION_5	WHILE_1	IF_2	IF_3	CALL_8
0x400047f	            0xffd0	                                call rax	       179	escape.c	FUNCTION_5	WHILE_1	IF_2	IF_3	CALL_8
0x4000481	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       180	escape.c	FUNCTION_5	WHILE_1	IF_2	IF_3
0x4000484	      0xe98e000000	                           jmp 0x4000517	       180	escape.c	FUNCTION_5	WHILE_1	IF_2	IF_3
0x4000489	      0x488345b002	               add qword [rbp - 0x50], 2	       183	escape.c	FUNCTION_5	WHILE_1	IF_2
0x400048e	      0x48836dd002	               sub qword [rbp - 0x30], 2	       184	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000493	        0x807d9400	                cmp byte [rbp - 0x6c], 0	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x4000497	            0x7420	                            je 0x40004b9	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x4000499	        0x807dc31f	            cmp byte [rbp - 0x3d], 0x1f 	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x400049d	            0x771a	                            ja 0x40004b9	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x400049f	    0x488b05000000	            mov rax, qword [0x040004a6] 	       188	escape.c	FUNCTION_5	WHILE_1	IF_4	CALL_9
0x40004a6	          0x488b00	                    mov rax, qword [rax]	       188	escape.c	FUNCTION_5	WHILE_1	IF_4	CALL_9
0x40004a9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       188	escape.c	FUNCTION_5	WHILE_1	IF_4	CALL_9
0x40004ad	          0x4889d7	                            mov rdi, rdx	       188	escape.c	FUNCTION_5	WHILE_1	IF_4	CALL_9
0x40004b0	            0xffd0	                                call rax	       188	escape.c	FUNCTION_5	WHILE_1	IF_4	CALL_9
0x40004b2	      0xb803000000	                              mov eax, 3	       189	escape.c	FUNCTION_5	WHILE_1	IF_4
0x40004b7	            0xeb5e	                           jmp 0x4000517	       189	escape.c	FUNCTION_5	WHILE_1	IF_4
0x40004b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       192	escape.c	FUNCTION_5	WHILE_1
0x40004bd	        0x488d5001	                      lea rdx, [rax + 1]	       192	escape.c	FUNCTION_5	WHILE_1
0x40004c1	        0x488955d8	             mov qword [rbp - 0x28], rdx	       192	escape.c	FUNCTION_5	WHILE_1
0x40004c5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       192	escape.c	FUNCTION_5	WHILE_1
0x40004c9	          0x4801c2	                            add rdx, rax	       192	escape.c	FUNCTION_5	WHILE_1
0x40004cc	         0xfb645c3	            movzx eax, byte [rbp - 0x3d]	       192	escape.c	FUNCTION_5	WHILE_1
0x40004d0	            0x8802	                      mov byte [rdx], al	       192	escape.c	FUNCTION_5	WHILE_1
0x40004d2	      0x488345b001	               add qword [rbp - 0x50], 1	       193	escape.c	FUNCTION_5	WHILE_1
0x40004d7	      0x48836dd001	               sub qword [rbp - 0x30], 1	       161	escape.c	FUNCTION_5	WHILE_1
0x40004dc	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       161	escape.c	FUNCTION_5	WHILE_1
0x40004e1	     0xf85e0feffff	                           jne 0x40003c7	       161	escape.c	FUNCTION_5	WHILE_1
0x40004e7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       195	escape.c	FUNCTION_5
0x40004eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       195	escape.c	FUNCTION_5
0x40004ef	          0x4801d0	                            add rax, rdx	       195	escape.c	FUNCTION_5
0x40004f2	          0xc60000	                       mov byte [rax], 0	       195	escape.c	FUNCTION_5
0x40004f5	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       197	escape.c	FUNCTION_5	IF_5
0x40004fa	            0x740b	                            je 0x4000507	       197	escape.c	FUNCTION_5	IF_5
0x40004fc	        0x488b4598	             mov rax, qword [rbp - 0x68]	       199	escape.c	FUNCTION_5	IF_5
0x4000500	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       199	escape.c	FUNCTION_5	IF_5
0x4000504	          0x488910	                    mov qword [rax], rdx	       199	escape.c	FUNCTION_5	IF_5
0x4000507	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       202	escape.c	FUNCTION_5
0x400050b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       202	escape.c	FUNCTION_5
0x400050f	          0x488910	                    mov qword [rax], rdx	       202	escape.c	FUNCTION_5
0x4000512	      0xb800000000	                              mov eax, 0	       204	escape.c	FUNCTION_5
0x4000517	        0x488b75f8	                mov rsi, qword [rbp - 8]	       205	escape.c	FUNCTION_5
0x400051b	    0x644833342528	                xor rsi, qword fs:[0x28]	       205	escape.c	FUNCTION_5
0x4000524	            0x7405	                            je 0x400052b	       205	escape.c	FUNCTION_5
0x4000526	      0xe800000000	                          call 0x400052b	       205	escape.c	FUNCTION_5
0x400052b	              0xc9	                                   leave	       205	escape.c	FUNCTION_5
0x400052c	              0xc3	                                     ret	       205	escape.c	FUNCTION_5
curl_easy_unescape	IF,4:ELSE,1:CALL,3:WHILE,0:functions,0:SWITCH,0:DO,0:FOR,0	55
0x400052d	              0x55	                                push rbp	       215	escape.c	FUNCTION_6
0x400052e	          0x4889e5	                            mov rbp, rsp	       215	escape.c	FUNCTION_6
0x4000531	        0x4883ec50	                           sub rsp, 0x50	       215	escape.c	FUNCTION_6
0x4000535	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       215	escape.c	FUNCTION_6
0x4000539	        0x488975c0	             mov qword [rbp - 0x40], rsi	       215	escape.c	FUNCTION_6
0x400053d	          0x8955bc	             mov dword [rbp - 0x44], edx	       215	escape.c	FUNCTION_6
0x4000540	        0x48894db0	             mov qword [rbp - 0x50], rcx	       215	escape.c	FUNCTION_6
0x4000544	    0x64488b042528	                mov rax, qword fs:[0x28]	       215	escape.c	FUNCTION_6
0x400054d	        0x488945f8	                mov qword [rbp - 8], rax	       215	escape.c	FUNCTION_6
0x4000551	            0x31c0	                            xor eax, eax	       215	escape.c	FUNCTION_6
0x4000553	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       216	escape.c	FUNCTION_6
0x400055b	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       217	escape.c	FUNCTION_6	IF_1
0x400055f	     0xf8882000000	                            js 0x40005e7	       217	escape.c	FUNCTION_6	IF_1
0x4000565	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       218	escape.c	FUNCTION_6	IF_1
0x4000568	            0x4898	                                    cdqe	       218	escape.c	FUNCTION_6	IF_1
0x400056a	        0x488945f0	             mov qword [rbp - 0x10], rax	       218	escape.c	FUNCTION_6	IF_1
0x400056e	        0x488d7de8	                   lea rdi, [rbp - 0x18]	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000572	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000576	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x400057a	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x400057e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000582	    0x41b900000000	                              mov r9d, 0	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000588	          0x4989f8	                             mov r8, rdi	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x400058b	          0x4889c7	                            mov rdi, rax	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x400058e	      0xe800000000	                          call 0x4000593	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000593	          0x8945dc	             mov dword [rbp - 0x24], eax	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000596	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       222	escape.c	FUNCTION_6	IF_1	IF_2
0x400059a	            0x7407	                            je 0x40005a3	       222	escape.c	FUNCTION_6	IF_1	IF_2
0x400059c	      0xb800000000	                              mov eax, 0	       223	escape.c	FUNCTION_6	IF_1	IF_2
0x40005a1	            0xeb48	                           jmp 0x40005eb	       223	escape.c	FUNCTION_6	IF_1	IF_2
0x40005a3	      0x48837db000	               cmp qword [rbp - 0x50], 0	       225	escape.c	FUNCTION_6	IF_1	IF_3
0x40005a8	            0x743d	                            je 0x40005e7	       225	escape.c	FUNCTION_6	IF_1	IF_3
0x40005aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       226	escape.c	FUNCTION_6	IF_1	IF_3	IF_4
0x40005ae	    0x483dffffff7f	                     cmp rax, 0x7fffffff	       226	escape.c	FUNCTION_6	IF_1	IF_3	IF_4
0x40005b4	            0x7716	                            ja 0x40005cc	       226	escape.c	FUNCTION_6	IF_1	IF_3	IF_4
0x40005b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x40005ba	          0x4889c7	                            mov rdi, rax	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x40005bd	      0xe800000000	                          call 0x40005c2	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x40005c2	            0x89c2	                            mov edx, eax	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x40005c4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x40005c8	            0x8910	                    mov dword [rax], edx	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x40005ca	            0xeb1b	                           jmp 0x40005e7	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x40005cc	    0x488b05000000	            mov rax, qword [0x040005d3] 	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005d3	          0x488b00	                    mov rax, qword [rax]	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005d6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005da	          0x4889d7	                            mov rdi, rdx	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005dd	            0xffd0	                                call rax	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005df	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40005e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       233	escape.c	FUNCTION_6
0x40005eb	        0x488b4df8	                mov rcx, qword [rbp - 8]	       234	escape.c	FUNCTION_6
0x40005ef	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       234	escape.c	FUNCTION_6
0x40005f8	            0x7405	                            je 0x40005ff	       234	escape.c	FUNCTION_6
0x40005fa	      0xe800000000	                          call 0x40005ff	       234	escape.c	FUNCTION_6
0x40005ff	              0xc9	                                   leave	       234	escape.c	FUNCTION_6
0x4000600	              0xc3	                                     ret	       234	escape.c	FUNCTION_6
