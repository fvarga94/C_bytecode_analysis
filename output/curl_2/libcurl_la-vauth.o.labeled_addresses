Curl_auth_user_contains_domain	functions,0:WHILE,0:DO,0:IF,1:SWITCH,0:CALL,1:FOR,0:ELSE,1	49
0x40000ad	          0x4889fe	                            mov rsi, rdi	       129	vauth.c	FUNCTION_3
0x40000b0	          0x4885ff	                           test rdi, rdi	       132	vauth.c	FUNCTION_3	IF_1
0x40000b3	     0xf8497000000	                            je 0x4000150	       132	vauth.c	FUNCTION_3	IF_1
0x40000b9	           0xfb617	                   movzx edx, byte [rdi]	       132	vauth.c	FUNCTION_3	IF_1
0x40000bc	      0xb800000000	                              mov eax, 0	       130	vauth.c	FUNCTION_3
0x40000c1	            0x84d2	                             test dl, dl	       132	vauth.c	FUNCTION_3	IF_1
0x40000c3	     0xf848c000000	                            je 0x4000155	       132	vauth.c	FUNCTION_3	IF_1
0x40000c9	          0x83ea2f	                           sub edx, 0x2f	      1114	string2.h	FUNCTION_17	WHILE_1
0x40000cc	          0x80fa2d	                            cmp dl, 0x2d	      1114	string2.h	FUNCTION_17	WHILE_1
0x40000cf	            0x7715	                            ja 0x40000e6	      1114	string2.h	FUNCTION_17	WHILE_1
0x40000d1	    0x48b801000200	              movabs rax, 0x200000020001	      1115	string2.h	FUNCTION_17	WHILE_1
0x40000db	        0x480fa3d0	                             bt rax, rdx	      1115	string2.h	FUNCTION_17	WHILE_1
0x40000df	            0x7258	                            jb 0x4000139	      1115	string2.h	FUNCTION_17	WHILE_1
0x40000e1	          0x4889fa	                            mov rdx, rdi	      1115	string2.h	FUNCTION_17	WHILE_1
0x40000e4	            0xeb03	                           jmp 0x40000e9	      1115	string2.h	FUNCTION_17	WHILE_1
0x40000e6	          0x4889fa	                            mov rdx, rdi	      1114	string2.h	FUNCTION_17	WHILE_1
0x40000e9	    0x48b901000200	              movabs rcx, 0x200000020001	      1115	string2.h	FUNCTION_17	WHILE_1
0x40000f3	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_17	WHILE_1
0x40000f7	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_17	WHILE_1
0x40000fa	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_17	WHILE_1
0x40000fc	            0x7442	                            je 0x4000140	      1114	string2.h	FUNCTION_17	WHILE_1
0x40000fe	          0x83e82f	                           sub eax, 0x2f	      1114	string2.h	FUNCTION_17	WHILE_1
0x4000101	            0x3c2d	                            cmp al, 0x2d	      1114	string2.h	FUNCTION_17	WHILE_1
0x4000103	            0x77ee	                            ja 0x40000f3	      1114	string2.h	FUNCTION_17	WHILE_1
0x4000105	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_17	WHILE_1
0x4000109	            0x73e8	                           jae 0x40000f3	      1115	string2.h	FUNCTION_17	WHILE_1
0x400010b	          0x4885d2	                           test rdx, rdx	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x400010e	            0x7437	                            je 0x4000147	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000110	          0x4839d6	                            cmp rsi, rdx	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000113	            0x7332	                           jae 0x4000147	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000115	      0xb800000000	                              mov eax, 0	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x400011a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000121	          0x4889f7	                            mov rdi, rsi	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000124	            0xf2ae	              repne scasb al, byte [rdi]	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000126	          0x48f7d1	                                 not rcx	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000129	      0x488d440efe	                lea rax, [rsi + rcx - 2]	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x400012e	          0x4839c2	                            cmp rdx, rax	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000131	           0xf92c0	                                 setb al	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000134	           0xfb6c0	                           movzx eax, al	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000137	            0xeb13	                           jmp 0x400014c	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000139	      0xb800000000	                              mov eax, 0	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x400013e	            0xeb0c	                           jmp 0x400014c	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000140	      0xb800000000	                              mov eax, 0	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000145	            0xeb05	                           jmp 0x400014c	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000147	      0xb800000000	                              mov eax, 0	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x400014c	          0x83e001	                              and eax, 1	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x400014f	              0xc3	                                     ret	       136	vauth.c	FUNCTION_3	IF_1	CALL_1
0x4000150	      0xb800000000	                              mov eax, 0	       130	vauth.c	FUNCTION_3
0x4000155	            0xf3c3	                                     ret	       147	vauth.c	FUNCTION_3
Curl_auth_build_spn	functions,0:WHILE,0:DO,0:IF,2:SWITCH,0:CALL,4:FOR,0:ELSE,0	30
0x4000040	        0x4883ec08	                              sub rsp, 8	        55	vauth.c	FUNCTION_1
0x4000044	          0x4885f6	                           test rsi, rsi	        59	vauth.c	FUNCTION_1	IF_1
0x4000047	            0x7421	                            je 0x400006a	        59	vauth.c	FUNCTION_1	IF_1
0x4000049	          0x4885d2	                           test rdx, rdx	        59	vauth.c	FUNCTION_1	IF_1
0x400004c	            0x741c	                            je 0x400006a	        59	vauth.c	FUNCTION_1	IF_1
0x400004e	          0x4889d1	                            mov rcx, rdx	        60	vauth.c	FUNCTION_1	CALL_1
0x4000051	          0x4889f2	                            mov rdx, rsi	        60	vauth.c	FUNCTION_1	CALL_1
0x4000054	          0x4889fe	                            mov rsi, rdi	        60	vauth.c	FUNCTION_1	CALL_1
0x4000057	    0x488d3d000000	                   lea rdi, [0x0400005e]	        60	vauth.c	FUNCTION_1	CALL_1
0x400005e	      0xb800000000	                              mov eax, 0	        60	vauth.c	FUNCTION_1	CALL_1
0x4000063	      0xe800000000	                          call 0x4000068	        60	vauth.c	FUNCTION_1	CALL_1
0x4000068	            0xeb3e	                           jmp 0x40000a8	        60	vauth.c	FUNCTION_1	CALL_1
0x400006a	          0x4885f6	                           test rsi, rsi	        61	vauth.c	FUNCTION_1	ELSE_1	IF_2
0x400006d	            0x7419	                            je 0x4000088	        61	vauth.c	FUNCTION_1	ELSE_1	IF_2
0x400006f	          0x4889f2	                            mov rdx, rsi	        62	vauth.c	FUNCTION_1	ELSE_1	IF_2
0x4000072	          0x4889fe	                            mov rsi, rdi	        62	vauth.c	FUNCTION_1	ELSE_1	IF_2
0x4000075	    0x488d3d000000	                   lea rdi, [0x0400007c]	        62	vauth.c	FUNCTION_1	ELSE_1	IF_2
0x400007c	      0xb800000000	                              mov eax, 0	        62	vauth.c	FUNCTION_1	ELSE_1	IF_2
0x4000081	      0xe800000000	                          call 0x4000086	        62	vauth.c	FUNCTION_1	ELSE_1	IF_2
0x4000086	            0xeb20	                           jmp 0x40000a8	        62	vauth.c	FUNCTION_1	ELSE_1	IF_2
0x4000088	          0x4885d2	                           test rdx, rdx	        63	vauth.c	FUNCTION_1	ELSE_2	IF_3
0x400008b	            0x7416	                            je 0x40000a3	        63	vauth.c	FUNCTION_1	ELSE_2	IF_3
0x400008d	          0x4889fe	                            mov rsi, rdi	        64	vauth.c	FUNCTION_1	ELSE_2	IF_3
0x4000090	    0x488d3d000000	                   lea rdi, [0x04000097]	        64	vauth.c	FUNCTION_1	ELSE_2	IF_3
0x4000097	      0xb800000000	                              mov eax, 0	        64	vauth.c	FUNCTION_1	ELSE_2	IF_3
0x400009c	      0xe800000000	                          call 0x40000a1	        64	vauth.c	FUNCTION_1	ELSE_2	IF_3
0x40000a1	            0xeb05	                           jmp 0x40000a8	        64	vauth.c	FUNCTION_1	ELSE_2	IF_3
0x40000a3	      0xb800000000	                              mov eax, 0	        56	vauth.c	FUNCTION_1
0x40000a8	        0x4883c408	                              add rsp, 8	        68	vauth.c	FUNCTION_1
0x40000ac	              0xc3	                                     ret	        68	vauth.c	FUNCTION_1
