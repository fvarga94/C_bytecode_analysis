Curl_base64_decode	IF,6:DO,0:WHILE,1:CALL,4:functions,0:FOR,1:ELSE,0:SWITCH,0	147
0x40002b5	            0x4157	                                push r15	       102	base64.c	FUNCTION_2
0x40002b7	            0x4156	                                push r14	       102	base64.c	FUNCTION_2
0x40002b9	            0x4155	                                push r13	       102	base64.c	FUNCTION_2
0x40002bb	            0x4154	                                push r12	       102	base64.c	FUNCTION_2
0x40002bd	              0x55	                                push rbp	       102	base64.c	FUNCTION_2
0x40002be	              0x53	                                push rbx	       102	base64.c	FUNCTION_2
0x40002bf	        0x4883ec38	                           sub rsp, 0x38	       102	base64.c	FUNCTION_2
0x40002c3	          0x4889fb	                            mov rbx, rdi	       102	base64.c	FUNCTION_2
0x40002c6	    0x48c706000000	                      mov qword [rsi], 0	       112	base64.c	FUNCTION_2
0x40002cd	    0x48c702000000	                      mov qword [rdx], 0	       113	base64.c	FUNCTION_2
0x40002d4	      0xb800000000	                              mov eax, 0	       114	base64.c	FUNCTION_2	CALL_1
0x40002d9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       114	base64.c	FUNCTION_2	CALL_1
0x40002e0	            0xf2ae	              repne scasb al, byte [rdi]	       114	base64.c	FUNCTION_2	CALL_1
0x40002e2	          0x48f7d1	                                 not rcx	       114	base64.c	FUNCTION_2	CALL_1
0x40002e5	      0xb83d000000	                           mov eax, 0x3d	       118	base64.c	FUNCTION_2	IF_1
0x40002ea	        0x4883e901	                              sub rcx, 1	       117	base64.c	FUNCTION_2	IF_1
0x40002ee	     0xf84d3010000	                            je 0x40004c7	       117	base64.c	FUNCTION_2	IF_1
0x40002f4	          0x4889f5	                            mov rbp, rsi	       117	base64.c	FUNCTION_2	IF_1
0x40002f7	          0x4989d4	                            mov r12, rdx	       117	base64.c	FUNCTION_2	IF_1
0x40002fa	          0xf6c103	                              test cl, 3	       117	base64.c	FUNCTION_2	IF_1
0x40002fd	     0xf85c4010000	                           jne 0x40004c7	       117	base64.c	FUNCTION_2	IF_1
0x4000303	           0xfb603	                   movzx eax, byte [rbx]	       121	base64.c	FUNCTION_2	WHILE_1
0x4000306	            0x3c3d	                            cmp al, 0x3d	       121	base64.c	FUNCTION_2	WHILE_1
0x4000308	     0xf84ac010000	                            je 0x40004ba	       121	base64.c	FUNCTION_2	WHILE_1
0x400030e	            0x84c0	                             test al, al	       121	base64.c	FUNCTION_2	WHILE_1
0x4000310	     0xf84a4010000	                            je 0x40004ba	       121	base64.c	FUNCTION_2	WHILE_1
0x4000316	      0xb800000000	                              mov eax, 0	       121	base64.c	FUNCTION_2	WHILE_1
0x400031b	        0x4883c001	                              add rax, 1	       122	base64.c	FUNCTION_2	WHILE_1
0x400031f	         0xfb61403	             movzx edx, byte [rbx + rax]	       121	base64.c	FUNCTION_2	WHILE_1
0x4000323	          0x80fa3d	                            cmp dl, 0x3d	       121	base64.c	FUNCTION_2	WHILE_1
0x4000326	            0x7404	                            je 0x400032c	       121	base64.c	FUNCTION_2	WHILE_1
0x4000328	            0x84d2	                             test dl, dl	       121	base64.c	FUNCTION_2	WHILE_1
0x400032a	            0x75ef	                           jne 0x400031b	       121	base64.c	FUNCTION_2	WHILE_1
0x400032c	      0xbe00000000	                              mov esi, 0	       105	base64.c	FUNCTION_2
0x4000331	          0x80fa3d	                            cmp dl, 0x3d	       125	base64.c	FUNCTION_2	IF_2
0x4000334	            0x7518	                           jne 0x400034e	       125	base64.c	FUNCTION_2	IF_2
0x4000336	            0xeb05	                           jmp 0x400033d	       125	base64.c	FUNCTION_2	IF_2
0x4000338	      0xb800000000	                              mov eax, 0	       125	base64.c	FUNCTION_2	IF_2
0x400033d	      0x807c03013d	         cmp byte [rbx + rax + 1], 0x3d 	       128	base64.c	FUNCTION_2	IF_2	IF_3
0x4000342	        0x400f94c6	                                sete sil	       128	base64.c	FUNCTION_2	IF_2	IF_3
0x4000346	        0x400fb6f6	                          movzx esi, sil	       128	base64.c	FUNCTION_2	IF_2	IF_3
0x400034a	        0x4883c601	                              add rsi, 1	       128	base64.c	FUNCTION_2	IF_2	IF_3
0x400034e	        0x488d1406	                    lea rdx, [rsi + rax]	       132	base64.c	FUNCTION_2	IF_4
0x4000352	      0xb83d000000	                           mov eax, 0x3d	       133	base64.c	FUNCTION_2	IF_4
0x4000357	          0x4839d1	                            cmp rcx, rdx	       132	base64.c	FUNCTION_2	IF_4
0x400035a	     0xf8567010000	                           jne 0x40004c7	       132	base64.c	FUNCTION_2	IF_4
0x4000360	        0x48c1e902	                              shr rcx, 2	       136	base64.c	FUNCTION_2
0x4000364	          0x4989ce	                            mov r14, rcx	       136	base64.c	FUNCTION_2
0x4000367	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       136	base64.c	FUNCTION_2
0x400036c	        0x488d0449	                  lea rax, [rcx + rcx*2]	       139	base64.c	FUNCTION_2
0x4000370	          0x4829f0	                            sub rax, rsi	       139	base64.c	FUNCTION_2
0x4000373	      0x4889442428	             mov qword [rsp + 0x28], rax	       139	base64.c	FUNCTION_2
0x4000378	        0x488d7801	                      lea rdi, [rax + 1]	       142	base64.c	FUNCTION_2	CALL_2
0x400037c	    0x488b05000000	            mov rax, qword [0x04000383] 	       142	base64.c	FUNCTION_2	CALL_2
0x4000383	            0xff10	                        call qword [rax]	       142	base64.c	FUNCTION_2	CALL_2
0x4000385	          0x4889c6	                            mov rsi, rax	       142	base64.c	FUNCTION_2	CALL_2
0x4000388	      0x4889442420	             mov qword [rsp + 0x20], rax	       142	base64.c	FUNCTION_2	CALL_2
0x400038d	      0xb81b000000	                           mov eax, 0x1b	       144	base64.c	FUNCTION_2	IF_5
0x4000392	          0x4885f6	                           test rsi, rsi	       143	base64.c	FUNCTION_2	IF_5
0x4000395	     0xf842c010000	                            je 0x40004c7	       143	base64.c	FUNCTION_2	IF_5
0x400039b	      0x4889742410	             mov qword [rsp + 0x10], rsi	       149	base64.c	FUNCTION_2	FOR_1
0x40003a0	    0x48c744240800	                  mov qword [rsp + 8], 0	       149	base64.c	FUNCTION_2	FOR_1
0x40003a9	          0x4d85f6	                           test r14, r14	       149	base64.c	FUNCTION_2	FOR_1
0x40003ac	     0xf84e7000000	                            je 0x4000499	       149	base64.c	FUNCTION_2	FOR_1
0x40003b2	      0xe9cd000000	                           jmp 0x4000484	       149	base64.c	FUNCTION_2	FOR_1
0x40003b7	           0xfb60b	                   movzx ecx, byte [rbx]	        54	base64.c	FUNCTION_1	FOR_1	IF_1
0x40003ba	          0x80f93d	                            cmp cl, 0x3d	        54	base64.c	FUNCTION_1	FOR_1	IF_1
0x40003bd	            0x740c	                            je 0x40003cb	        54	base64.c	FUNCTION_1	FOR_1	IF_1
0x40003bf	      0xb800000000	                              mov eax, 0	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x40003c4	          0x80f941	                            cmp cl, 0x41	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x40003c7	            0x750c	                           jne 0x40003d5	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x40003c9	            0xeb25	                           jmp 0x40003f0	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x40003cb	        0x49c1e506	                              shl r13, 6	        55	base64.c	FUNCTION_1	FOR_1	IF_1
0x40003cf	        0x4983c601	                              add r14, 1	        56	base64.c	FUNCTION_1	FOR_1	IF_1
0x40003d3	            0xeb22	                           jmp 0x40003f7	        56	base64.c	FUNCTION_1	FOR_1	IF_1
0x40003d5	        0x4883c001	                              add rax, 1	        62	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x40003d9	    0x488d15000000	                   lea rdx, [0x040003e0]	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x40003e0	         0xfb61402	             movzx edx, byte [rdx + rax]	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x40003e4	            0x84d2	                             test dl, dl	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x40003e6	            0x7404	                            je 0x40003ec	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x40003e8	            0x38d1	                              cmp cl, dl	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x40003ea	            0x75e9	                           jne 0x40003d5	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x40003ec	            0x38d1	                              cmp cl, dl	        66	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40003ee	            0x7565	                           jne 0x4000455	        66	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40003f0	        0x49c1e506	                              shl r13, 6	        67	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40003f4	          0x4901c5	                            add r13, rax	        67	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40003f7	        0x4883c301	                              add rbx, 1	        51	base64.c	FUNCTION_1	FOR_1
0x40003fb	          0x4c39fb	                            cmp rbx, r15	        51	base64.c	FUNCTION_1	FOR_1
0x40003fe	            0x75b7	                           jne 0x40003b7	        51	base64.c	FUNCTION_1	FOR_1
0x4000400	          0x4d85f6	                           test r14, r14	        73	base64.c	FUNCTION_1	IF_3
0x4000403	            0x751a	                           jne 0x400041f	        73	base64.c	FUNCTION_1	IF_3
0x4000405	        0x410fb6fd	                         movzx edi, r13b	        74	base64.c	FUNCTION_1	CALL_1
0x4000409	      0xe800000000	                          call 0x400040e	        74	base64.c	FUNCTION_1	CALL_1
0x400040e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        74	base64.c	FUNCTION_1	CALL_1
0x4000413	          0x884602	                  mov byte [rsi + 2], al	        74	base64.c	FUNCTION_1	CALL_1
0x4000416	          0x4c89eb	                            mov rbx, r13	        76	base64.c	FUNCTION_1
0x4000419	        0x48c1eb08	                              shr rbx, 8	        76	base64.c	FUNCTION_1
0x400041d	            0xeb0d	                           jmp 0x400042c	        76	base64.c	FUNCTION_1
0x400041f	          0x4c89eb	                            mov rbx, r13	        76	base64.c	FUNCTION_1
0x4000422	        0x48c1eb08	                              shr rbx, 8	        76	base64.c	FUNCTION_1
0x4000426	        0x4983fe01	                              cmp r14, 1	        77	base64.c	FUNCTION_1	IF_4
0x400042a	            0x7710	                            ja 0x400043c	        77	base64.c	FUNCTION_1	IF_4
0x400042c	           0xfb6fb	                           movzx edi, bl	        78	base64.c	FUNCTION_1	CALL_2
0x400042f	      0xe800000000	                          call 0x4000434	        78	base64.c	FUNCTION_1	CALL_2
0x4000434	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        78	base64.c	FUNCTION_1	CALL_2
0x4000439	          0x884601	                  mov byte [rsi + 1], al	        78	base64.c	FUNCTION_1	CALL_2
0x400043c	           0xfb6ff	                           movzx edi, bh	        81	base64.c	FUNCTION_1	CALL_3
0x400043f	      0xe800000000	                          call 0x4000444	        81	base64.c	FUNCTION_1	CALL_3
0x4000444	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        81	base64.c	FUNCTION_1	CALL_3
0x4000449	            0x8806	                      mov byte [rsi], al	        81	base64.c	FUNCTION_1	CALL_3
0x400044b	      0xb803000000	                              mov eax, 3	       151	base64.c	FUNCTION_2	FOR_1	IF_6
0x4000450	          0x4c29f0	                            sub rax, r14	       151	base64.c	FUNCTION_2	FOR_1	IF_6
0x4000453	            0x7515	                           jne 0x400046a	       151	base64.c	FUNCTION_2	FOR_1	IF_6
0x4000455	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       152	base64.c	FUNCTION_2	FOR_1	IF_6	CALL_4
0x400045a	    0x488b05000000	            mov rax, qword [0x04000461] 	       152	base64.c	FUNCTION_2	FOR_1	IF_6	CALL_4
0x4000461	            0xff10	                        call qword [rax]	       152	base64.c	FUNCTION_2	FOR_1	IF_6	CALL_4
0x4000463	      0xb83d000000	                           mov eax, 0x3d	       154	base64.c	FUNCTION_2	FOR_1	IF_6
0x4000468	            0xeb5d	                           jmp 0x40004c7	       154	base64.c	FUNCTION_2	FOR_1	IF_6
0x400046a	      0x4801442410	            add qword [rsp + 0x10], rax 	       157	base64.c	FUNCTION_2	FOR_1
0x400046f	    0x488344240801	                  add qword [rsp + 8], 1	       149	base64.c	FUNCTION_2	FOR_1
0x4000475	      0x488b442408	                mov rax, qword [rsp + 8]	       149	base64.c	FUNCTION_2	FOR_1
0x400047a	          0x4c89fb	                            mov rbx, r15	       158	base64.c	FUNCTION_2	FOR_1
0x400047d	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       149	base64.c	FUNCTION_2	FOR_1
0x4000482	            0x7415	                            je 0x4000499	       149	base64.c	FUNCTION_2	FOR_1
0x4000484	        0x4c8d7b04	                      lea r15, [rbx + 4]	       149	base64.c	FUNCTION_2	FOR_1
0x4000488	    0x41be00000000	                             mov r14d, 0	       128	base64.c	FUNCTION_2	IF_2	IF_3
0x400048e	    0x41bd00000000	                             mov r13d, 0	       128	base64.c	FUNCTION_2	IF_2	IF_3
0x4000494	      0xe91effffff	                           jmp 0x40003b7	       128	base64.c	FUNCTION_2	IF_2	IF_3
0x4000499	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       162	base64.c	FUNCTION_2
0x400049e	          0xc60000	                       mov byte [rax], 0	       162	base64.c	FUNCTION_2
0x40004a1	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	base64.c	FUNCTION_2
0x40004a6	        0x48894500	                    mov qword [rbp], rax	       165	base64.c	FUNCTION_2
0x40004aa	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       166	base64.c	FUNCTION_2
0x40004af	        0x49890424	                    mov qword [r12], rax	       166	base64.c	FUNCTION_2
0x40004b3	      0xb800000000	                              mov eax, 0	       168	base64.c	FUNCTION_2
0x40004b8	            0xeb0d	                           jmp 0x40004c7	       168	base64.c	FUNCTION_2
0x40004ba	            0x3c3d	                            cmp al, 0x3d	       125	base64.c	FUNCTION_2	IF_2
0x40004bc	     0xf8476feffff	                            je 0x4000338	       125	base64.c	FUNCTION_2	IF_2
0x40004c2	      0xb83d000000	                           mov eax, 0x3d	       133	base64.c	FUNCTION_2	IF_4
0x40004c7	        0x4883c438	                           add rsp, 0x38	       169	base64.c	FUNCTION_2
0x40004cb	              0x5b	                                 pop rbx	       169	base64.c	FUNCTION_2
0x40004cc	              0x5d	                                 pop rbp	       169	base64.c	FUNCTION_2
0x40004cd	            0x415c	                                 pop r12	       169	base64.c	FUNCTION_2
0x40004cf	            0x415d	                                 pop r13	       169	base64.c	FUNCTION_2
0x40004d1	            0x415e	                                 pop r14	       169	base64.c	FUNCTION_2
0x40004d3	            0x415f	                                 pop r15	       169	base64.c	FUNCTION_2
0x40004d5	              0xc3	                                     ret	       169	base64.c	FUNCTION_2
Curl_base64url_encode	IF,0:DO,0:WHILE,0:CALL,1:functions,0:FOR,0:ELSE,0:SWITCH,0	10
0x40004fa	        0x4883ec08	                              sub rsp, 8	       318	base64.c	FUNCTION_5
0x40004fe	          0x4d89c1	                              mov r9, r8	       319	base64.c	FUNCTION_5	CALL_1
0x4000501	          0x4989c8	                             mov r8, rcx	       319	base64.c	FUNCTION_5	CALL_1
0x4000504	          0x4889d1	                            mov rcx, rdx	       319	base64.c	FUNCTION_5	CALL_1
0x4000507	          0x4889f2	                            mov rdx, rsi	       319	base64.c	FUNCTION_5	CALL_1
0x400050a	          0x4889fe	                            mov rsi, rdi	       319	base64.c	FUNCTION_5	CALL_1
0x400050d	    0x488d3d000000	                   lea rdi, [0x04000514]	       319	base64.c	FUNCTION_5	CALL_1
0x4000514	      0xe827fbffff	                  call sym.base64_encode	       319	base64.c	FUNCTION_5	CALL_1
0x4000519	        0x4883c408	                              add rsp, 8	       320	base64.c	FUNCTION_5
0x400051d	              0xc3	                                     ret	       320	base64.c	FUNCTION_5
Curl_base64_encode	IF,0:DO,0:WHILE,0:CALL,1:functions,0:FOR,0:ELSE,0:SWITCH,0	10
0x40004d6	        0x4883ec08	                              sub rsp, 8	       294	base64.c	FUNCTION_4
0x40004da	          0x4d89c1	                              mov r9, r8	       295	base64.c	FUNCTION_4	CALL_1
0x40004dd	          0x4989c8	                             mov r8, rcx	       295	base64.c	FUNCTION_4	CALL_1
0x40004e0	          0x4889d1	                            mov rcx, rdx	       295	base64.c	FUNCTION_4	CALL_1
0x40004e3	          0x4889f2	                            mov rdx, rsi	       295	base64.c	FUNCTION_4	CALL_1
0x40004e6	          0x4889fe	                            mov rsi, rdi	       295	base64.c	FUNCTION_4	CALL_1
0x40004e9	    0x488d3d000000	                   lea rdi, [0x040004f0]	       295	base64.c	FUNCTION_4	CALL_1
0x40004f0	      0xe84bfbffff	                  call sym.base64_encode	       295	base64.c	FUNCTION_4	CALL_1
0x40004f5	        0x4883c408	                              add rsp, 8	       296	base64.c	FUNCTION_4
0x40004f9	              0xc3	                                     ret	       296	base64.c	FUNCTION_4
base64_encode	IF,6:DO,0:WHILE,1:CALL,9:functions,0:FOR,1:ELSE,1:SWITCH,1	161
0x4000040	            0x4157	                                push r15	       175	base64.c	FUNCTION_3
0x4000042	            0x4156	                                push r14	       175	base64.c	FUNCTION_3
0x4000044	            0x4155	                                push r13	       175	base64.c	FUNCTION_3
0x4000046	            0x4154	                                push r12	       175	base64.c	FUNCTION_3
0x4000048	              0x55	                                push rbp	       175	base64.c	FUNCTION_3
0x4000049	              0x53	                                push rbx	       175	base64.c	FUNCTION_3
0x400004a	        0x4883ec28	                           sub rsp, 0x28	       175	base64.c	FUNCTION_3
0x400004e	          0x4989fd	                            mov r13, rdi	       175	base64.c	FUNCTION_3
0x4000051	          0x4889d5	                            mov rbp, rdx	       175	base64.c	FUNCTION_3
0x4000054	        0x4c890424	                     mov qword [rsp], r8	       175	base64.c	FUNCTION_3
0x4000058	      0x4c894c2408	                 mov qword [rsp + 8], r9	       175	base64.c	FUNCTION_3
0x400005d	    0x64488b342528	                mov rsi, qword fs:[0x28]	       175	base64.c	FUNCTION_3
0x4000066	      0x4889742418	             mov qword [rsp + 0x18], rsi	       175	base64.c	FUNCTION_3
0x400006b	            0x31f6	                            xor esi, esi	       175	base64.c	FUNCTION_3
0x400006d	    0x49c700000000	                       mov qword [r8], 0	       187	base64.c	FUNCTION_3
0x4000074	    0x49c701000000	                       mov qword [r9], 0	       188	base64.c	FUNCTION_3
0x400007b	          0x4885c9	                           test rcx, rcx	       190	base64.c	FUNCTION_3	IF_1
0x400007e	     0xf85e2010000	                           jne 0x4000266	       190	base64.c	FUNCTION_3	IF_1
0x4000084	      0xb800000000	                              mov eax, 0	       191	base64.c	FUNCTION_3	CALL_1
0x4000089	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       191	base64.c	FUNCTION_3	CALL_1
0x4000090	          0x4889d7	                            mov rdi, rdx	       191	base64.c	FUNCTION_3	CALL_1
0x4000093	            0xf2ae	              repne scasb al, byte [rdi]	       191	base64.c	FUNCTION_3	CALL_1
0x4000095	          0x48f7d1	                                 not rcx	       191	base64.c	FUNCTION_3	CALL_1
0x4000098	        0x488d59ff	                      lea rbx, [rcx - 1]	       191	base64.c	FUNCTION_3	CALL_1
0x400009c	    0x488d049d0000	                        lea rax, [rbx*4]	       198	base64.c	FUNCTION_3	CALL_2
0x40000a4	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	       198	base64.c	FUNCTION_3	CALL_2
0x40000ae	          0x48f7e2	                                 mul rdx	       198	base64.c	FUNCTION_3	CALL_2
0x40000b1	          0x48d1ea	                              shr rdx, 1	       198	base64.c	FUNCTION_3	CALL_2
0x40000b4	        0x488d7a04	                      lea rdi, [rdx + 4]	       198	base64.c	FUNCTION_3	CALL_2
0x40000b8	    0x488b05000000	            mov rax, qword [0x040000bf] 	       198	base64.c	FUNCTION_3	CALL_2
0x40000bf	            0xff10	                        call qword [rax]	       198	base64.c	FUNCTION_3	CALL_2
0x40000c1	          0x4989c6	                            mov r14, rax	       198	base64.c	FUNCTION_3	CALL_2
0x40000c4	      0xb81b000000	                           mov eax, 0x1b	       200	base64.c	FUNCTION_3	IF_3
0x40000c9	          0x4d85f6	                           test r14, r14	       199	base64.c	FUNCTION_3	IF_3
0x40000cc	     0xf8482010000	                            je 0x4000254	       199	base64.c	FUNCTION_3	IF_3
0x40000d2	          0x4d89f4	                            mov r12, r14	       198	base64.c	FUNCTION_3	CALL_2
0x40000d5	          0x4885db	                           test rbx, rbx	       216	base64.c	FUNCTION_3	WHILE_1
0x40000d8	     0xf8434010000	                            je 0x4000212	       216	base64.c	FUNCTION_3	WHILE_1
0x40000de	      0xe912010000	                           jmp 0x40001f5	       216	base64.c	FUNCTION_3	WHILE_1
0x40000e3	          0x4885db	                           test rbx, rbx	       218	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x40000e6	            0x7413	                            je 0x40000fb	       218	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x40000e8	          0x83c601	                              add esi, 1	       219	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x40000eb	         0xfb64d00	                   movzx ecx, byte [rbp]	       220	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x40000ef	            0x8808	                      mov byte [rax], cl	       220	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x40000f1	        0x4883c501	                              add rbp, 1	       221	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x40000f5	        0x4883eb01	                              sub rbx, 1	       222	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x40000f9	            0xeb03	                           jmp 0x40000fe	       222	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x40000fb	          0xc60000	                       mov byte [rax], 0	       225	base64.c	FUNCTION_3	WHILE_1	FOR_1	ELSE_1
0x40000fe	        0x4883c001	                              add rax, 1	       225	base64.c	FUNCTION_3	WHILE_1	FOR_1	ELSE_1
0x4000102	          0x4839c2	                            cmp rdx, rax	       217	base64.c	FUNCTION_3	WHILE_1	FOR_1
0x4000105	            0x75dc	                           jne 0x40000e3	       217	base64.c	FUNCTION_3	WHILE_1	FOR_1
0x4000107	       0xfb6542410	           movzx edx, byte [rsp + 0x10] 	       228	base64.c	FUNCTION_3	WHILE_1
0x400010c	            0x89d1	                            mov ecx, edx	       228	base64.c	FUNCTION_3	WHILE_1
0x400010e	          0xc0e902	                               shr cl, 2	       228	base64.c	FUNCTION_3	WHILE_1
0x4000111	       0xfb6442411	           movzx eax, byte [rsp + 0x11] 	       230	base64.c	FUNCTION_3	WHILE_1
0x4000116	          0x83e203	                              and edx, 3	       229	base64.c	FUNCTION_3	WHILE_1
0x4000119	          0xc1e204	                              shl edx, 4	       229	base64.c	FUNCTION_3	WHILE_1
0x400011c	            0x89c7	                            mov edi, eax	       229	base64.c	FUNCTION_3	WHILE_1
0x400011e	        0x40c0ef04	                              shr dil, 4	       229	base64.c	FUNCTION_3	WHILE_1
0x4000122	             0x9fa	                             or edx, edi	       229	base64.c	FUNCTION_3	WHILE_1
0x4000124	       0xfb67c2412	           movzx edi, byte [rsp + 0x12] 	       232	base64.c	FUNCTION_3	WHILE_1
0x4000129	          0x83e00f	                            and eax, 0xf	       231	base64.c	FUNCTION_3	WHILE_1
0x400012c	          0xc1e002	                              shl eax, 2	       231	base64.c	FUNCTION_3	WHILE_1
0x400012f	          0x4189f8	                            mov r8d, edi	       231	base64.c	FUNCTION_3	WHILE_1
0x4000132	        0x41c0e806	                              shr r8b, 6	       231	base64.c	FUNCTION_3	WHILE_1
0x4000136	          0x4409c0	                             or eax, r8d	       231	base64.c	FUNCTION_3	WHILE_1
0x4000139	          0x83fe01	                              cmp esi, 1	       235	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400013c	            0x7407	                            je 0x4000145	       235	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400013e	          0x83fe02	                              cmp esi, 2	       235	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000141	            0x742b	                            je 0x400016e	       235	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000143	            0xeb5f	                           jmp 0x40001a4	       235	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000145	           0xfb6d2	                           movzx edx, dl	       239	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000148	           0xfb6c9	                           movzx ecx, cl	       238	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400014b	    0x410fbe4c0d00	             movsx ecx, byte [r13 + rcx]	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x4000151	    0x450fbe441500	             movsx r8d, byte [r13 + rdx]	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x4000157	          0x4c89fa	                            mov rdx, r15	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x400015a	      0xbe05000000	                              mov esi, 5	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x400015f	          0x4c89e7	                            mov rdi, r12	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x4000162	      0xb800000000	                              mov eax, 0	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x4000167	      0xe800000000	                          call 0x400016c	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x400016c	            0xeb7c	                           jmp 0x40001ea	       240	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400016e	           0xfb6c0	                           movzx eax, al	       246	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000171	           0xfb6d2	                           movzx edx, dl	       245	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000174	           0xfb6c9	                           movzx ecx, cl	       244	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000177	    0x410fbe4c0d00	             movsx ecx, byte [r13 + rcx]	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x400017d	    0x450fbe4c0500	             movsx r9d, byte [r13 + rax]	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000183	    0x450fbe441500	             movsx r8d, byte [r13 + rdx]	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000189	    0x488d15000000	                   lea rdx, [0x04000190]	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000190	      0xbe05000000	                              mov esi, 5	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000195	          0x4c89e7	                            mov rdi, r12	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000198	      0xb800000000	                              mov eax, 0	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x400019d	      0xe800000000	                          call 0x40001a2	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x40001a2	            0xeb46	                           jmp 0x40001ea	       247	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001a4	           0xfb6c0	                           movzx eax, al	       253	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001a7	           0xfb6d2	                           movzx edx, dl	       252	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001aa	           0xfb6c9	                           movzx ecx, cl	       251	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001ad	    0x410fbe4c0d00	             movsx ecx, byte [r13 + rcx]	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40001b3	        0x4883ec08	                              sub rsp, 8	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40001b7	          0x83e73f	                           and edi, 0x3f	       254	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001ba	    0x410fbe743d00	             movsx esi, byte [r13 + rdi]	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40001c0	              0x56	                                push rsi	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40001c1	    0x450fbe4c0500	             movsx r9d, byte [r13 + rax]	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40001c7	    0x450fbe441500	             movsx r8d, byte [r13 + rdx]	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40001cd	    0x488d15000000	                   lea rdx, [0x040001d4]	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40001d4	      0xbe05000000	                              mov esi, 5	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40001d9	          0x4c89e7	                            mov rdi, r12	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40001dc	      0xb800000000	                              mov eax, 0	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40001e1	      0xe800000000	                          call 0x40001e6	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40001e6	        0x4883c410	                           add rsp, 0x10	       255	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001ea	        0x4983c404	                              add r12, 4	       257	base64.c	FUNCTION_3	WHILE_1
0x40001ee	          0x4885db	                           test rbx, rbx	       216	base64.c	FUNCTION_3	WHILE_1
0x40001f1	            0x750c	                           jne 0x40001ff	       216	base64.c	FUNCTION_3	WHILE_1
0x40001f3	            0xeb1d	                           jmp 0x4000212	       216	base64.c	FUNCTION_3	WHILE_1
0x40001f5	          0x4d89f4	                            mov r12, r14	       175	base64.c	FUNCTION_3
0x40001f8	    0x4c8d3d000000	                   lea r15, [0x040001ff]	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x40001ff	      0x488d442410	                   lea rax, [rsp + 0x10]	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x4000204	        0x488d5003	                      lea rdx, [rax + 3]	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x4000208	      0xbe00000000	                              mov esi, 0	       175	base64.c	FUNCTION_3
0x400020d	      0xe9d1feffff	                           jmp 0x40000e3	       175	base64.c	FUNCTION_3
0x4000212	      0x41c6042400	                       mov byte [r12], 0	       261	base64.c	FUNCTION_3
0x4000217	        0x488b0424	                    mov rax, qword [rsp]	       264	base64.c	FUNCTION_3
0x400021b	          0x4c8930	                    mov qword [rax], r14	       264	base64.c	FUNCTION_3
0x400021e	      0xbf00000000	                              mov edi, 0	       266	base64.c	FUNCTION_3	CALL_8
0x4000223	    0x488b05000000	            mov rax, qword [0x0400022a] 	       266	base64.c	FUNCTION_3	CALL_8
0x400022a	            0xff10	                        call qword [rax]	       266	base64.c	FUNCTION_3	CALL_8
0x400022c	      0xb800000000	                              mov eax, 0	       269	base64.c	FUNCTION_3	CALL_9
0x4000231	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       269	base64.c	FUNCTION_3	CALL_9
0x4000238	          0x4c89f7	                            mov rdi, r14	       269	base64.c	FUNCTION_3	CALL_9
0x400023b	            0xf2ae	              repne scasb al, byte [rdi]	       269	base64.c	FUNCTION_3	CALL_9
0x400023d	          0x4889c8	                            mov rax, rcx	       269	base64.c	FUNCTION_3	CALL_9
0x4000240	          0x48f7d0	                                 not rax	       269	base64.c	FUNCTION_3	CALL_9
0x4000243	        0x4883e801	                              sub rax, 1	       269	base64.c	FUNCTION_3	CALL_9
0x4000247	      0x488b742408	                mov rsi, qword [rsp + 8]	       269	base64.c	FUNCTION_3	CALL_9
0x400024c	          0x488906	                    mov qword [rsi], rax	       269	base64.c	FUNCTION_3	CALL_9
0x400024f	      0xb800000000	                              mov eax, 0	       271	base64.c	FUNCTION_3
0x4000254	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       272	base64.c	FUNCTION_3
0x4000259	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       272	base64.c	FUNCTION_3
0x4000262	            0x7442	                            je 0x40002a6	       272	base64.c	FUNCTION_3
0x4000264	            0xeb3b	                           jmp 0x40002a1	       272	base64.c	FUNCTION_3
0x4000266	          0x4889cb	                            mov rbx, rcx	       272	base64.c	FUNCTION_3
0x4000269	    0x488d048d0000	                        lea rax, [rcx*4]	       198	base64.c	FUNCTION_3	CALL_2
0x4000271	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	       198	base64.c	FUNCTION_3	CALL_2
0x400027b	          0x48f7e2	                                 mul rdx	       198	base64.c	FUNCTION_3	CALL_2
0x400027e	          0x48d1ea	                              shr rdx, 1	       198	base64.c	FUNCTION_3	CALL_2
0x4000281	        0x488d7a04	                      lea rdi, [rdx + 4]	       198	base64.c	FUNCTION_3	CALL_2
0x4000285	    0x488b05000000	            mov rax, qword [0x0400028c] 	       198	base64.c	FUNCTION_3	CALL_2
0x400028c	            0xff10	                        call qword [rax]	       198	base64.c	FUNCTION_3	CALL_2
0x400028e	          0x4989c6	                            mov r14, rax	       198	base64.c	FUNCTION_3	CALL_2
0x4000291	      0xb81b000000	                           mov eax, 0x1b	       200	base64.c	FUNCTION_3	IF_3
0x4000296	          0x4d85f6	                           test r14, r14	       199	base64.c	FUNCTION_3	IF_3
0x4000299	     0xf8556ffffff	                           jne 0x40001f5	       199	base64.c	FUNCTION_3	IF_3
0x400029f	            0xebb3	                           jmp 0x4000254	       199	base64.c	FUNCTION_3	IF_3
0x40002a1	      0xe800000000	                          call 0x40002a6	       272	base64.c	FUNCTION_3
0x40002a6	        0x4883c428	                           add rsp, 0x28	       272	base64.c	FUNCTION_3
0x40002aa	              0x5b	                                 pop rbx	       272	base64.c	FUNCTION_3
0x40002ab	              0x5d	                                 pop rbp	       272	base64.c	FUNCTION_3
0x40002ac	            0x415c	                                 pop r12	       272	base64.c	FUNCTION_3
0x40002ae	            0x415d	                                 pop r13	       272	base64.c	FUNCTION_3
0x40002b0	            0x415e	                                 pop r14	       272	base64.c	FUNCTION_3
0x40002b2	            0x415f	                                 pop r15	       272	base64.c	FUNCTION_3
0x40002b4	              0xc3	                                     ret	       272	base64.c	FUNCTION_3
