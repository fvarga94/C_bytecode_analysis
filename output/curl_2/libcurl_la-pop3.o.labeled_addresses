pop3_block_statemach	WHILE,1:ELSE,0:IF,0:SWITCH,0:CALL,1:DO,0:functions,0:FOR,0	23
0x400169d	              0x55	                                push rbp	      1027	pop3.c	FUNCTION_25
0x400169e	          0x4889e5	                            mov rbp, rsp	      1027	pop3.c	FUNCTION_25
0x40016a1	        0x4883ec20	                           sub rsp, 0x20	      1027	pop3.c	FUNCTION_25
0x40016a5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1027	pop3.c	FUNCTION_25
0x40016a9	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1028	pop3.c	FUNCTION_25
0x40016b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1029	pop3.c	FUNCTION_25
0x40016b4	    0x4805b0050000	                          add rax, 0x5b0	      1029	pop3.c	FUNCTION_25
0x40016ba	        0x488945f8	                mov qword [rbp - 8], rax	      1029	pop3.c	FUNCTION_25
0x40016be	            0xeb14	                           jmp 0x40016d4	      1031	pop3.c	FUNCTION_25	WHILE_1
0x40016c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1032	pop3.c	FUNCTION_25	CALL_1
0x40016c4	      0xbe01000000	                              mov esi, 1	      1032	pop3.c	FUNCTION_25	CALL_1
0x40016c9	          0x4889c7	                            mov rdi, rax	      1032	pop3.c	FUNCTION_25	CALL_1
0x40016cc	      0xe800000000	                          call 0x40016d1	      1032	pop3.c	FUNCTION_25	CALL_1
0x40016d1	          0x8945f4	              mov dword [rbp - 0xc], eax	      1032	pop3.c	FUNCTION_25	CALL_1
0x40016d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1031	pop3.c	FUNCTION_25	WHILE_1
0x40016d8	          0x8b4070	            mov eax, dword [rax + 0x70] 	      1031	pop3.c	FUNCTION_25	WHILE_1
0x40016db	            0x85c0	                           test eax, eax	      1031	pop3.c	FUNCTION_25	WHILE_1
0x40016dd	            0x7406	                            je 0x40016e5	      1031	pop3.c	FUNCTION_25	WHILE_1
0x40016df	        0x837df400	                cmp dword [rbp - 0xc], 0	      1031	pop3.c	FUNCTION_25	WHILE_1
0x40016e3	            0x74db	                            je 0x40016c0	      1031	pop3.c	FUNCTION_25	WHILE_1
0x40016e5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1034	pop3.c	FUNCTION_25
0x40016e8	              0xc9	                                   leave	      1035	pop3.c	FUNCTION_25
0x40016e9	              0xc3	                                     ret	      1035	pop3.c	FUNCTION_25
pop3_get_message	WHILE,0:ELSE,1:IF,3:SWITCH,0:CALL,1:DO,0:functions,0:FOR,2	77
0x400021c	              0x55	                                push rbp	       245	pop3.c	FUNCTION_3
0x400021d	          0x4889e5	                            mov rbp, rsp	       245	pop3.c	FUNCTION_3
0x4000220	        0x4883ec20	                           sub rsp, 0x20	       245	pop3.c	FUNCTION_3
0x4000224	        0x48897de8	             mov qword [rbp - 0x18], rdi	       245	pop3.c	FUNCTION_3
0x4000228	        0x488975e0	             mov qword [rbp - 0x20], rsi	       245	pop3.c	FUNCTION_3
0x400022c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       246	pop3.c	FUNCTION_3	CALL_1
0x4000230	          0x4889c7	                            mov rdi, rax	       246	pop3.c	FUNCTION_3	CALL_1
0x4000233	      0xe800000000	                          call 0x4000238	       246	pop3.c	FUNCTION_3	CALL_1
0x4000238	        0x488945f0	             mov qword [rbp - 0x10], rax	       246	pop3.c	FUNCTION_3	CALL_1
0x400023c	    0x48c745f80000	                  mov qword [rbp - 8], 0	       247	pop3.c	FUNCTION_3
0x4000244	      0x48837df002	               cmp qword [rbp - 0x10], 2	       249	pop3.c	FUNCTION_3	IF_1
0x4000249	     0xf86ad000000	                           jbe 0x40002fc	       249	pop3.c	FUNCTION_3	IF_1
0x400024f	      0x48836df002	               sub qword [rbp - 0x10], 2	       251	pop3.c	FUNCTION_3	IF_1
0x4000254	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x4000258	        0x4883c002	                              add rax, 2	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x400025c	        0x488945f8	                mov qword [rbp - 8], rax	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x4000260	            0xeb0a	                           jmp 0x400026c	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x4000262	      0x488345f801	                  add qword [rbp - 8], 1	       253	pop3.c	FUNCTION_3	IF_1	FOR_1
0x4000267	      0x48836df001	               sub qword [rbp - 0x10], 1	       253	pop3.c	FUNCTION_3	IF_1	FOR_1
0x400026c	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x4000270	           0xfb600	                   movzx eax, byte [rax]	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x4000273	            0x3c20	                            cmp al, 0x20	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x4000275	            0x74eb	                            je 0x4000262	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x4000277	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x400027b	           0xfb600	                   movzx eax, byte [rax]	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x400027e	            0x3c09	                               cmp al, 9	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x4000280	            0x74e0	                            je 0x4000262	       252	pop3.c	FUNCTION_3	IF_1	FOR_1
0x4000282	            0xeb48	                           jmp 0x40002cc	       257	pop3.c	FUNCTION_3	IF_1	FOR_2
0x4000284	        0x488b55f8	                mov rdx, qword [rbp - 8]	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x4000288	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x400028c	          0x4801d0	                            add rax, rdx	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x400028f	           0xfb600	                   movzx eax, byte [rax]	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x4000292	            0x3c0d	                             cmp al, 0xd	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x4000294	            0x7436	                            je 0x40002cc	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x4000296	        0x488b55f8	                mov rdx, qword [rbp - 8]	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x400029a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x400029e	          0x4801d0	                            add rax, rdx	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002a1	           0xfb600	                   movzx eax, byte [rax]	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002a4	            0x3c0a	                             cmp al, 0xa	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002a6	            0x7424	                            je 0x40002cc	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002a8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002b0	          0x4801d0	                            add rax, rdx	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002b3	           0xfb600	                   movzx eax, byte [rax]	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002b6	            0x3c20	                            cmp al, 0x20	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002b8	            0x7412	                            je 0x40002cc	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002ba	        0x488b55f8	                mov rdx, qword [rbp - 8]	       259	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       259	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002c2	          0x4801d0	                            add rax, rdx	       259	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002c5	           0xfb600	                   movzx eax, byte [rax]	       259	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002c8	            0x3c09	                               cmp al, 9	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002ca	            0x7513	                           jne 0x40002df	       258	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       257	pop3.c	FUNCTION_3	IF_1	FOR_2
0x40002d0	        0x488d50ff	                      lea rdx, [rax - 1]	       257	pop3.c	FUNCTION_3	IF_1	FOR_2
0x40002d4	        0x488955f0	             mov qword [rbp - 0x10], rdx	       257	pop3.c	FUNCTION_3	IF_1	FOR_2
0x40002d8	          0x4885c0	                           test rax, rax	       257	pop3.c	FUNCTION_3	IF_1	FOR_2
0x40002db	            0x75a7	                           jne 0x4000284	       257	pop3.c	FUNCTION_3	IF_1	FOR_2
0x40002dd	            0xeb01	                           jmp 0x40002e0	       257	pop3.c	FUNCTION_3	IF_1	FOR_2
0x40002df	              0x90	                                     nop	       260	pop3.c	FUNCTION_3	IF_1	FOR_2	IF_2
0x40002e0	      0x488345f001	               add qword [rbp - 0x10], 1	       263	pop3.c	FUNCTION_3	IF_1	IF_3
0x40002e5	      0x48837df000	               cmp qword [rbp - 0x10], 0	       263	pop3.c	FUNCTION_3	IF_1	IF_3
0x40002ea	            0x741f	                            je 0x400030b	       263	pop3.c	FUNCTION_3	IF_1	IF_3
0x40002ec	        0x488b55f8	                mov rdx, qword [rbp - 8]	       264	pop3.c	FUNCTION_3	IF_1	IF_3
0x40002f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       264	pop3.c	FUNCTION_3	IF_1	IF_3
0x40002f4	          0x4801d0	                            add rax, rdx	       264	pop3.c	FUNCTION_3	IF_1	IF_3
0x40002f7	          0xc60000	                       mov byte [rax], 0	       264	pop3.c	FUNCTION_3	IF_1	IF_3
0x40002fa	            0xeb0f	                           jmp 0x400030b	       264	pop3.c	FUNCTION_3	IF_1	IF_3
0x40002fc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       269	pop3.c	FUNCTION_3	ELSE_1
0x4000300	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       269	pop3.c	FUNCTION_3	ELSE_1
0x4000304	          0x4801d0	                            add rax, rdx	       269	pop3.c	FUNCTION_3	ELSE_1
0x4000307	        0x488945f8	                mov qword [rbp - 8], rax	       269	pop3.c	FUNCTION_3	ELSE_1
0x400030b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       271	pop3.c	FUNCTION_3	ELSE_1
0x400030f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       271	pop3.c	FUNCTION_3	ELSE_1
0x4000313	          0x488910	                    mov qword [rax], rdx	       271	pop3.c	FUNCTION_3	ELSE_1
0x4000316	              0x90	                                     nop	       272	pop3.c	FUNCTION_3	ELSE_1
0x4000317	              0xc9	                                   leave	       272	pop3.c	FUNCTION_3	ELSE_1
0x4000318	              0xc3	                                     ret	       272	pop3.c	FUNCTION_3	ELSE_1
pop3_state_starttls_resp	WHILE,0:ELSE,2:IF,2:SWITCH,0:CALL,3:DO,0:functions,0:FOR,0	35
0x4000f5f	              0x55	                                push rbp	       752	pop3.c	FUNCTION_17
0x4000f60	          0x4889e5	                            mov rbp, rsp	       752	pop3.c	FUNCTION_17
0x4000f63	        0x4883ec20	                           sub rsp, 0x20	       752	pop3.c	FUNCTION_17
0x4000f67	        0x48897de8	             mov qword [rbp - 0x18], rdi	       752	pop3.c	FUNCTION_17
0x4000f6b	          0x8975e4	             mov dword [rbp - 0x1c], esi	       752	pop3.c	FUNCTION_17
0x4000f6e	          0x8955e0	             mov dword [rbp - 0x20], edx	       752	pop3.c	FUNCTION_17
0x4000f71	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       753	pop3.c	FUNCTION_17
0x4000f78	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       754	pop3.c	FUNCTION_17
0x4000f7c	          0x488b00	                    mov rax, qword [rax]	       754	pop3.c	FUNCTION_17
0x4000f7f	        0x488945f8	                mov qword [rbp - 8], rax	       754	pop3.c	FUNCTION_17
0x4000f83	        0x837de42b	           cmp dword [rbp - 0x1c], 0x2b 	       758	pop3.c	FUNCTION_17	IF_1
0x4000f87	            0x7441	                            je 0x4000fca	       758	pop3.c	FUNCTION_17	IF_1
0x4000f89	        0x488b45f8	                mov rax, qword [rbp - 8]	       759	pop3.c	FUNCTION_17	IF_1	IF_2
0x4000f8d	    0x8b80b0070000	           mov eax, dword [rax + 0x7b0] 	       759	pop3.c	FUNCTION_17	IF_1	IF_2
0x4000f93	          0x83f801	                              cmp eax, 1	       759	pop3.c	FUNCTION_17	IF_1	IF_2
0x4000f96	            0x7421	                            je 0x4000fb9	       759	pop3.c	FUNCTION_17	IF_1	IF_2
0x4000f98	        0x488b45f8	                mov rax, qword [rbp - 8]	       760	pop3.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000f9c	    0x488d35000000	                   lea rsi, [0x04000fa3]	       760	pop3.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000fa3	          0x4889c7	                            mov rdi, rax	       760	pop3.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000fa6	      0xb800000000	                              mov eax, 0	       760	pop3.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000fab	      0xe800000000	                          call 0x4000fb0	       760	pop3.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000fb0	    0xc745f4400000	            mov dword [rbp - 0xc], 0x40 	       761	pop3.c	FUNCTION_17	IF_1	IF_2
0x4000fb7	            0xeb20	                           jmp 0x4000fd9	       761	pop3.c	FUNCTION_17	IF_1	IF_2
0x4000fb9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       764	pop3.c	FUNCTION_17	IF_1	CALL_2
0x4000fbd	          0x4889c7	                            mov rdi, rax	       764	pop3.c	FUNCTION_17	IF_1	CALL_2
0x4000fc0	      0xe8c0f7ffff	    call sym.pop3_perform_authentication	       764	pop3.c	FUNCTION_17	IF_1	CALL_2
0x4000fc5	          0x8945f4	              mov dword [rbp - 0xc], eax	       764	pop3.c	FUNCTION_17	IF_1	CALL_2
0x4000fc8	            0xeb0f	                           jmp 0x4000fd9	       764	pop3.c	FUNCTION_17	IF_1	CALL_2
0x4000fca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       767	pop3.c	FUNCTION_17	CALL_3
0x4000fce	          0x4889c7	                            mov rdi, rax	       767	pop3.c	FUNCTION_17	CALL_3
0x4000fd1	      0xe846f4ffff	       call sym.pop3_perform_upgrade_tls	       767	pop3.c	FUNCTION_17	CALL_3
0x4000fd6	          0x8945f4	              mov dword [rbp - 0xc], eax	       767	pop3.c	FUNCTION_17	CALL_3
0x4000fd9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       769	pop3.c	FUNCTION_17
0x4000fdc	              0xc9	                                   leave	       770	pop3.c	FUNCTION_17
0x4000fdd	              0xc3	                                     ret	       770	pop3.c	FUNCTION_17
pop3_perform_command	WHILE,0:ELSE,2:IF,4:SWITCH,0:CALL,3:DO,0:functions,0:FOR,0	93
0x4000900	              0x55	                                push rbp	       554	pop3.c	FUNCTION_13
0x4000901	          0x4889e5	                            mov rbp, rsp	       554	pop3.c	FUNCTION_13
0x4000904	        0x4883ec30	                           sub rsp, 0x30	       554	pop3.c	FUNCTION_13
0x4000908	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       554	pop3.c	FUNCTION_13
0x400090c	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       555	pop3.c	FUNCTION_13
0x4000913	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       556	pop3.c	FUNCTION_13
0x4000917	          0x488b00	                    mov rax, qword [rax]	       556	pop3.c	FUNCTION_13
0x400091a	        0x488945f0	             mov qword [rbp - 0x10], rax	       556	pop3.c	FUNCTION_13
0x400091e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       557	pop3.c	FUNCTION_13
0x4000922	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	       557	pop3.c	FUNCTION_13
0x4000929	        0x488945f8	                mov qword [rbp - 8], rax	       557	pop3.c	FUNCTION_13
0x400092d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       558	pop3.c	FUNCTION_13
0x4000935	        0x488b45f8	                mov rax, qword [rbp - 8]	       561	pop3.c	FUNCTION_13	IF_1
0x4000939	        0x488b4008	                mov rax, qword [rax + 8]	       561	pop3.c	FUNCTION_13	IF_1
0x400093d	           0xfb600	                   movzx eax, byte [rax]	       561	pop3.c	FUNCTION_13	IF_1
0x4000940	            0x84c0	                             test al, al	       561	pop3.c	FUNCTION_13	IF_1
0x4000942	            0x7412	                            je 0x4000956	       561	pop3.c	FUNCTION_13	IF_1
0x4000944	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       561	pop3.c	FUNCTION_13	IF_1
0x4000948	          0x488b00	                    mov rax, qword [rax]	       561	pop3.c	FUNCTION_13	IF_1
0x400094b	     0xfb680960700	          movzx eax, byte [rax + 0x796] 	       561	pop3.c	FUNCTION_13	IF_1
0x4000952	            0x84c0	                             test al, al	       561	pop3.c	FUNCTION_13	IF_1
0x4000954	            0x7426	                            je 0x400097c	       561	pop3.c	FUNCTION_13	IF_1
0x4000956	    0x488d05000000	                   lea rax, [0x0400095d]	       562	pop3.c	FUNCTION_13	IF_1
0x400095d	        0x488945e8	             mov qword [rbp - 0x18], rax	       562	pop3.c	FUNCTION_13	IF_1
0x4000961	        0x488b45f8	                mov rax, qword [rbp - 8]	       564	pop3.c	FUNCTION_13	IF_1	IF_2
0x4000965	        0x488b4008	                mov rax, qword [rax + 8]	       564	pop3.c	FUNCTION_13	IF_1	IF_2
0x4000969	           0xfb600	                   movzx eax, byte [rax]	       564	pop3.c	FUNCTION_13	IF_1	IF_2
0x400096c	            0x84c0	                             test al, al	       564	pop3.c	FUNCTION_13	IF_1	IF_2
0x400096e	            0x7417	                            je 0x4000987	       564	pop3.c	FUNCTION_13	IF_1	IF_2
0x4000970	        0x488b45f8	                mov rax, qword [rbp - 8]	       566	pop3.c	FUNCTION_13	IF_1	IF_2
0x4000974	    0xc70001000000	                      mov dword [rax], 1	       566	pop3.c	FUNCTION_13	IF_1	IF_2
0x400097a	            0xeb0b	                           jmp 0x4000987	       564	pop3.c	FUNCTION_13	IF_1	IF_2
0x400097c	    0x488d05000000	                   lea rax, [0x04000983]	       569	pop3.c	FUNCTION_13	ELSE_1
0x4000983	        0x488945e8	             mov qword [rbp - 0x18], rax	       569	pop3.c	FUNCTION_13	ELSE_1
0x4000987	        0x488b45f8	                mov rax, qword [rbp - 8]	       572	pop3.c	FUNCTION_13	IF_3
0x400098b	        0x488b4008	                mov rax, qword [rax + 8]	       572	pop3.c	FUNCTION_13	IF_3
0x400098f	           0xfb600	                   movzx eax, byte [rax]	       572	pop3.c	FUNCTION_13	IF_3
0x4000992	            0x84c0	                             test al, al	       572	pop3.c	FUNCTION_13	IF_3
0x4000994	            0x7459	                            je 0x40009ef	       572	pop3.c	FUNCTION_13	IF_3
0x4000996	        0x488b45f8	                mov rax, qword [rbp - 8]	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x400099a	        0x488b5008	                mov rdx, qword [rax + 8]	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x400099e	        0x488b45f8	                mov rax, qword [rbp - 8]	       574	pop3.c	FUNCTION_13	IF_3
0x40009a2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       574	pop3.c	FUNCTION_13	IF_3
0x40009a6	          0x4885c0	                           test rax, rax	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009a9	            0x7419	                            je 0x40009c4	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       574	pop3.c	FUNCTION_13	IF_3
0x40009af	        0x488b4010	            mov rax, qword [rax + 0x10] 	       574	pop3.c	FUNCTION_13	IF_3
0x40009b3	           0xfb600	                   movzx eax, byte [rax]	       574	pop3.c	FUNCTION_13	IF_3
0x40009b6	            0x84c0	                             test al, al	       574	pop3.c	FUNCTION_13	IF_3
0x40009b8	            0x740a	                            je 0x40009c4	       574	pop3.c	FUNCTION_13	IF_3
0x40009ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009be	        0x488b4010	            mov rax, qword [rax + 0x10] 	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009c2	            0xeb04	                           jmp 0x40009c8	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009c8	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009cc	    0x488db9b00500	                  lea rdi, [rcx + 0x5b0]	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009d3	          0x4889d1	                            mov rcx, rdx	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009d6	          0x4889c2	                            mov rdx, rax	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009d9	    0x488d35000000	                   lea rsi, [0x040009e0]	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009e0	      0xb800000000	                              mov eax, 0	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009e5	      0xe800000000	                          call 0x40009ea	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009ea	          0x8945e4	             mov dword [rbp - 0x1c], eax	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009ed	            0xeb4f	                           jmp 0x4000a3e	       573	pop3.c	FUNCTION_13	IF_3	CALL_1
0x40009ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       578	pop3.c	FUNCTION_13	ELSE_2
0x40009f3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       578	pop3.c	FUNCTION_13	ELSE_2
0x40009f7	          0x4885c0	                           test rax, rax	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x40009fa	            0x7419	                            je 0x4000a15	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x40009fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       578	pop3.c	FUNCTION_13	ELSE_2
0x4000a00	        0x488b4010	            mov rax, qword [rax + 0x10] 	       578	pop3.c	FUNCTION_13	ELSE_2
0x4000a04	           0xfb600	                   movzx eax, byte [rax]	       578	pop3.c	FUNCTION_13	ELSE_2
0x4000a07	            0x84c0	                             test al, al	       578	pop3.c	FUNCTION_13	ELSE_2
0x4000a09	            0x740a	                            je 0x4000a15	       578	pop3.c	FUNCTION_13	ELSE_2
0x4000a0b	        0x488b45f8	                mov rax, qword [rbp - 8]	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a0f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a13	            0xeb04	                           jmp 0x4000a19	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a19	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a1d	    0x488d8ab00500	                  lea rcx, [rdx + 0x5b0]	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a24	          0x4889c2	                            mov rdx, rax	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a27	    0x488d35000000	                   lea rsi, [0x04000a2e]	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a2e	          0x4889cf	                            mov rdi, rcx	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a31	      0xb800000000	                              mov eax, 0	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a36	      0xe800000000	                          call 0x4000a3b	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a3b	          0x8945e4	             mov dword [rbp - 0x1c], eax	       577	pop3.c	FUNCTION_13	ELSE_2	CALL_2
0x4000a3e	        0x837de400	               cmp dword [rbp - 0x1c], 0	       581	pop3.c	FUNCTION_13	IF_4
0x4000a42	            0x7511	                           jne 0x4000a55	       581	pop3.c	FUNCTION_13	IF_4
0x4000a44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       582	pop3.c	FUNCTION_13	CALL_3
0x4000a48	      0xbe09000000	                              mov esi, 9	       582	pop3.c	FUNCTION_13	CALL_3
0x4000a4d	          0x4889c7	                            mov rdi, rax	       582	pop3.c	FUNCTION_13	CALL_3
0x4000a50	      0xe8c4f8ffff	                          call sym.state	       582	pop3.c	FUNCTION_13	CALL_3
0x4000a55	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       584	pop3.c	FUNCTION_13
0x4000a58	              0xc9	                                   leave	       585	pop3.c	FUNCTION_13
0x4000a59	              0xc3	                                     ret	       585	pop3.c	FUNCTION_13
pop3_state_capa_resp	WHILE,1:ELSE,7:IF,10:SWITCH,0:CALL,10:DO,0:functions,0:FOR,2	206
0x4000c50	              0x55	                                push rbp	       661	pop3.c	FUNCTION_16
0x4000c51	          0x4889e5	                            mov rbp, rsp	       661	pop3.c	FUNCTION_16
0x4000c54	        0x4883ec50	                           sub rsp, 0x50	       661	pop3.c	FUNCTION_16
0x4000c58	        0x48897db8	             mov qword [rbp - 0x48], rdi	       661	pop3.c	FUNCTION_16
0x4000c5c	          0x8975b4	             mov dword [rbp - 0x4c], esi	       661	pop3.c	FUNCTION_16
0x4000c5f	          0x8955b0	             mov dword [rbp - 0x50], edx	       661	pop3.c	FUNCTION_16
0x4000c62	    0x64488b042528	                mov rax, qword fs:[0x28]	       661	pop3.c	FUNCTION_16
0x4000c6b	        0x488945f8	                mov qword [rbp - 8], rax	       661	pop3.c	FUNCTION_16
0x4000c6f	            0x31c0	                            xor eax, eax	       661	pop3.c	FUNCTION_16
0x4000c71	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       662	pop3.c	FUNCTION_16
0x4000c78	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       663	pop3.c	FUNCTION_16
0x4000c7c	          0x488b00	                    mov rax, qword [rax]	       663	pop3.c	FUNCTION_16
0x4000c7f	        0x488945e8	             mov qword [rbp - 0x18], rax	       663	pop3.c	FUNCTION_16
0x4000c83	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       664	pop3.c	FUNCTION_16
0x4000c87	    0x4805b0050000	                          add rax, 0x5b0	       664	pop3.c	FUNCTION_16
0x4000c8d	        0x488945f0	             mov qword [rbp - 0x10], rax	       664	pop3.c	FUNCTION_16
0x4000c91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       665	pop3.c	FUNCTION_16
0x4000c95	    0x488b80a80c00	           mov rax, qword [rax + 0xca8] 	       665	pop3.c	FUNCTION_16
0x4000c9c	        0x488945d0	             mov qword [rbp - 0x30], rax	       665	pop3.c	FUNCTION_16
0x4000ca0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       666	pop3.c	FUNCTION_16	CALL_1
0x4000ca4	          0x4889c7	                            mov rdi, rax	       666	pop3.c	FUNCTION_16	CALL_1
0x4000ca7	      0xe800000000	                          call 0x4000cac	       666	pop3.c	FUNCTION_16	CALL_1
0x4000cac	        0x488945d8	             mov qword [rbp - 0x28], rax	       666	pop3.c	FUNCTION_16	CALL_1
0x4000cb0	        0x837db42a	           cmp dword [rbp - 0x4c], 0x2a 	       672	pop3.c	FUNCTION_16	IF_1
0x4000cb4	     0xf85c5010000	                           jne 0x4000e7f	       672	pop3.c	FUNCTION_16	IF_1
0x4000cba	      0x48837dd803	               cmp qword [rbp - 0x28], 3	       674	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000cbf	            0x762c	                           jbe 0x4000ced	       674	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000cc1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       674	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000cc5	      0xba04000000	                              mov edx, 4	       674	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000cca	    0x488d35000000	                   lea rsi, [0x04000cd1]	       674	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000cd1	          0x4889c7	                            mov rdi, rax	       674	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000cd4	      0xe800000000	                          call 0x4000cd9	       674	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000cd9	            0x85c0	                           test eax, eax	       674	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000cdb	            0x7510	                           jne 0x4000ced	       674	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000cdd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       675	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000ce1	    0xc680b8000000	                mov byte [rax + 0xb8], 1	       675	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000ce8	      0xe959020000	                           jmp 0x4000f46	       675	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000ced	      0x48837dd803	               cmp qword [rbp - 0x28], 3	       678	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_3
0x4000cf2	            0x763a	                           jbe 0x4000d2e	       678	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_3
0x4000cf4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       678	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_3
0x4000cf8	      0xba04000000	                              mov edx, 4	       678	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_3
0x4000cfd	    0x488d35000000	                   lea rsi, [0x04000d04]	       678	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_3
0x4000d04	          0x4889c7	                            mov rdi, rax	       678	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_3
0x4000d07	      0xe800000000	                          call 0x4000d0c	       678	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_3
0x4000d0c	            0x85c0	                           test eax, eax	       678	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_3
0x4000d0e	            0x751e	                           jne 0x4000d2e	       678	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_3
0x4000d10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       679	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x4000d14	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	       679	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x4000d1a	          0x83c801	                               or eax, 1	       679	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x4000d1d	            0x89c2	                            mov edx, eax	       679	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x4000d1f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       679	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x4000d23	    0x8990a8000000	             mov dword [rax + 0xa8], edx	       679	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x4000d29	      0xe918020000	                           jmp 0x4000f46	       679	pop3.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x4000d2e	      0x48837dd804	               cmp qword [rbp - 0x28], 4	       682	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	CALL_4
0x4000d33	     0xf860d020000	                           jbe 0x4000f46	       682	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	CALL_4
0x4000d39	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       682	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	CALL_4
0x4000d3d	      0xba05000000	                              mov edx, 5	       682	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	CALL_4
0x4000d42	    0x488d35000000	                   lea rsi, [0x04000d49]	       682	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	CALL_4
0x4000d49	          0x4889c7	                            mov rdi, rax	       682	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	CALL_4
0x4000d4c	      0xe800000000	                          call 0x4000d51	       682	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	CALL_4
0x4000d51	            0x85c0	                           test eax, eax	       682	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	CALL_4
0x4000d53	     0xf85ed010000	                           jne 0x4000f46	       682	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	CALL_4
0x4000d59	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       683	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4
0x4000d5d	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	       683	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4
0x4000d63	          0x83c804	                               or eax, 4	       683	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4
0x4000d66	            0x89c2	                            mov edx, eax	       683	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4
0x4000d68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       683	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4
0x4000d6c	    0x8990a8000000	             mov dword [rax + 0xa8], edx	       683	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4
0x4000d72	      0x488345d005	               add qword [rbp - 0x30], 5	       686	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4
0x4000d77	      0x48836dd805	               sub qword [rbp - 0x28], 5	       687	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4
0x4000d7c	            0xeb0a	                           jmp 0x4000d88	       694	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000d7e	      0x488345d001	               add qword [rbp - 0x30], 1	       698	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000d83	      0x48836dd801	               sub qword [rbp - 0x28], 1	       699	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000d88	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       694	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000d8d	            0x742c	                            je 0x4000dbb	       694	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000d8f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       695	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000d93	           0xfb600	                   movzx eax, byte [rax]	       695	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000d96	            0x3c20	                            cmp al, 0x20	       694	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000d98	            0x74e4	                            je 0x4000d7e	       694	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000d9a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       695	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000d9e	           0xfb600	                   movzx eax, byte [rax]	       695	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000da1	            0x3c09	                               cmp al, 9	       695	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000da3	            0x74d9	                            je 0x4000d7e	       695	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000da5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       696	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000da9	           0xfb600	                   movzx eax, byte [rax]	       696	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dac	            0x3c0d	                             cmp al, 0xd	       695	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dae	            0x74ce	                            je 0x4000d7e	       695	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000db0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       696	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000db4	           0xfb600	                   movzx eax, byte [rax]	       696	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000db7	            0x3c0a	                             cmp al, 0xa	       696	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000db9	            0x74c3	                            je 0x4000d7e	       696	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dbb	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       702	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_5
0x4000dc0	     0xf847f010000	                            je 0x4000f45	       702	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_5
0x4000dc6	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000dce	            0xeb05	                           jmp 0x4000dd5	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000dd0	      0x488345e001	               add qword [rbp - 0x20], 1	       709	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000dd5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000dd9	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000ddd	            0x7348	                           jae 0x4000e27	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000ddf	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000de3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000de7	          0x4801d0	                            add rax, rdx	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000dea	           0xfb600	                   movzx eax, byte [rax]	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000ded	            0x3c20	                            cmp al, 0x20	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000def	            0x7436	                            je 0x4000e27	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000df1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000df5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000df9	          0x4801d0	                            add rax, rdx	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000dfc	           0xfb600	                   movzx eax, byte [rax]	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000dff	            0x3c09	                               cmp al, 9	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e01	            0x7424	                            je 0x4000e27	       706	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e03	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e07	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e0b	          0x4801d0	                            add rax, rdx	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e0e	           0xfb600	                   movzx eax, byte [rax]	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e11	            0x3c0d	                             cmp al, 0xd	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e13	            0x7412	                            je 0x4000e27	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e15	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       708	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e19	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       708	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e1d	          0x4801d0	                            add rax, rdx	       708	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e20	           0xfb600	                   movzx eax, byte [rax]	       708	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e23	            0x3c0a	                             cmp al, 0xa	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e25	            0x75a9	                           jne 0x4000dd0	       707	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e27	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       712	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e2b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       712	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e2f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       712	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e33	          0x4889ce	                            mov rsi, rcx	       712	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e36	          0x4889c7	                            mov rdi, rax	       712	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e39	      0xe800000000	                          call 0x4000e3e	       712	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e3e	          0x8945c4	             mov dword [rbp - 0x3c], eax	       712	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e41	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       713	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e45	            0x7423	                            je 0x4000e6a	       713	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e47	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       713	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e4b	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       713	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e4f	            0x7519	                           jne 0x4000e6a	       713	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e51	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       714	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e55	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       714	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e5b	           0xb45c4	              or eax, dword [rbp - 0x3c]	       714	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e5e	            0x89c2	                            mov edx, eax	       714	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       714	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e64	    0x899094000000	             mov dword [rax + 0x94], edx	       714	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e6a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       716	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1
0x4000e6e	        0x480145d0	            add qword [rbp - 0x30], rax 	       716	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1
0x4000e72	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       717	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1
0x4000e76	        0x482945d8	             sub qword [rbp - 0x28], rax	       717	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1
0x4000e7a	      0xe9fdfeffff	                           jmp 0x4000d7c	       718	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1
0x4000e7f	        0x837db42b	           cmp dword [rbp - 0x4c], 0x2b 	       721	pop3.c	FUNCTION_16	ELSE_3	IF_7
0x4000e83	     0xf8592000000	                           jne 0x4000f1b	       721	pop3.c	FUNCTION_16	ELSE_3	IF_7
0x4000e89	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       722	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8
0x4000e8d	    0x8b80b0070000	           mov eax, dword [rax + 0x7b0] 	       722	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8
0x4000e93	            0x85c0	                           test eax, eax	       722	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8
0x4000e95	            0x7473	                            je 0x4000f0a	       722	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8
0x4000e97	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       722	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8
0x4000e9b	     0xfb680900200	          movzx eax, byte [rax + 0x290] 	       722	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8
0x4000ea2	          0x83f001	                              xor eax, 1	       722	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8
0x4000ea5	            0x84c0	                             test al, al	       722	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8
0x4000ea7	            0x7461	                            je 0x4000f0a	       722	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8
0x4000ea9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       724	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	IF_9
0x4000ead	     0xfb680b80000	           movzx eax, byte [rax + 0xb8] 	       724	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	IF_9
0x4000eb4	            0x84c0	                             test al, al	       724	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	IF_9
0x4000eb6	            0x7411	                            je 0x4000ec9	       724	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	IF_9
0x4000eb8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       726	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	CALL_6
0x4000ebc	          0x4889c7	                            mov rdi, rax	       726	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	CALL_6
0x4000ebf	      0xe801f5ffff	          call sym.pop3_perform_starttls	       726	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	CALL_6
0x4000ec4	          0x8945c0	             mov dword [rbp - 0x40], eax	       726	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	CALL_6
0x4000ec7	            0xeb7d	                           jmp 0x4000f46	       724	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	IF_9
0x4000ec9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       727	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000ecd	    0x8b80b0070000	           mov eax, dword [rax + 0x7b0] 	       727	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000ed3	          0x83f801	                              cmp eax, 1	       727	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000ed6	            0x7511	                           jne 0x4000ee9	       727	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000ed8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       729	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000edc	          0x4889c7	                            mov rdi, rax	       729	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000edf	      0xe8a1f8ffff	    call sym.pop3_perform_authentication	       729	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000ee4	          0x8945c0	             mov dword [rbp - 0x40], eax	       729	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000ee7	            0xeb5d	                           jmp 0x4000f46	       724	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	IF_9
0x4000ee9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       731	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4000eed	    0x488d35000000	                   lea rsi, [0x04000ef4]	       731	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4000ef4	          0x4889c7	                            mov rdi, rax	       731	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4000ef7	      0xb800000000	                              mov eax, 0	       731	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4000efc	      0xe800000000	                          call 0x4000f01	       731	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4000f01	    0xc745c0400000	           mov dword [rbp - 0x40], 0x40 	       732	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	ELSE_5
0x4000f08	            0xeb3c	                           jmp 0x4000f46	       724	pop3.c	FUNCTION_16	ELSE_3	IF_7	IF_8	IF_9
0x4000f0a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       736	pop3.c	FUNCTION_16	ELSE_3	IF_7	CALL_9
0x4000f0e	          0x4889c7	                            mov rdi, rax	       736	pop3.c	FUNCTION_16	ELSE_3	IF_7	CALL_9
0x4000f11	      0xe86ff8ffff	    call sym.pop3_perform_authentication	       736	pop3.c	FUNCTION_16	ELSE_3	IF_7	CALL_9
0x4000f16	          0x8945c0	             mov dword [rbp - 0x40], eax	       736	pop3.c	FUNCTION_16	ELSE_3	IF_7	CALL_9
0x4000f19	            0xeb2b	                           jmp 0x4000f46	       736	pop3.c	FUNCTION_16	ELSE_3	IF_7	CALL_9
0x4000f1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       740	pop3.c	FUNCTION_16	ELSE_7
0x4000f1f	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	       740	pop3.c	FUNCTION_16	ELSE_7
0x4000f25	          0x83c801	                               or eax, 1	       740	pop3.c	FUNCTION_16	ELSE_7
0x4000f28	            0x89c2	                            mov edx, eax	       740	pop3.c	FUNCTION_16	ELSE_7
0x4000f2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       740	pop3.c	FUNCTION_16	ELSE_7
0x4000f2e	    0x8990a8000000	             mov dword [rax + 0xa8], edx	       740	pop3.c	FUNCTION_16	ELSE_7
0x4000f34	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       742	pop3.c	FUNCTION_16	ELSE_7	CALL_10
0x4000f38	          0x4889c7	                            mov rdi, rax	       742	pop3.c	FUNCTION_16	ELSE_7	CALL_10
0x4000f3b	      0xe845f8ffff	    call sym.pop3_perform_authentication	       742	pop3.c	FUNCTION_16	ELSE_7	CALL_10
0x4000f40	          0x8945c0	             mov dword [rbp - 0x40], eax	       742	pop3.c	FUNCTION_16	ELSE_7	CALL_10
0x4000f43	            0xeb01	                           jmp 0x4000f46	       742	pop3.c	FUNCTION_16	ELSE_7	CALL_10
0x4000f45	              0x90	                                     nop	       703	pop3.c	FUNCTION_16	IF_1	ELSE_2	IF_4	FOR_1	IF_5
0x4000f46	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       745	pop3.c	FUNCTION_16
0x4000f49	        0x488b4df8	                mov rcx, qword [rbp - 8]	       746	pop3.c	FUNCTION_16
0x4000f4d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       746	pop3.c	FUNCTION_16
0x4000f56	            0x7405	                            je 0x4000f5d	       746	pop3.c	FUNCTION_16
0x4000f58	      0xe800000000	                          call 0x4000f5d	       746	pop3.c	FUNCTION_16
0x4000f5d	              0xc9	                                   leave	       746	pop3.c	FUNCTION_16
0x4000f5e	              0xc3	                                     ret	       746	pop3.c	FUNCTION_16
pop3_perform_capa	WHILE,0:ELSE,0:IF,1:SWITCH,0:CALL,2:DO,0:functions,0:FOR,0	30
0x400033f	              0x55	                                push rbp	       316	pop3.c	FUNCTION_5
0x4000340	          0x4889e5	                            mov rbp, rsp	       316	pop3.c	FUNCTION_5
0x4000343	        0x4883ec20	                           sub rsp, 0x20	       316	pop3.c	FUNCTION_5
0x4000347	        0x48897de8	             mov qword [rbp - 0x18], rdi	       316	pop3.c	FUNCTION_5
0x400034b	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       317	pop3.c	FUNCTION_5
0x4000352	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       318	pop3.c	FUNCTION_5
0x4000356	    0x4805b0050000	                          add rax, 0x5b0	       318	pop3.c	FUNCTION_5
0x400035c	        0x488945f8	                mov qword [rbp - 8], rax	       318	pop3.c	FUNCTION_5
0x4000360	        0x488b45f8	                mov rax, qword [rbp - 8]	       320	pop3.c	FUNCTION_5
0x4000364	    0xc78094000000	               mov dword [rax + 0x94], 0	       320	pop3.c	FUNCTION_5
0x400036e	        0x488b45f8	                mov rax, qword [rbp - 8]	       321	pop3.c	FUNCTION_5
0x4000372	    0xc7809c000000	               mov dword [rax + 0x9c], 0	       321	pop3.c	FUNCTION_5
0x400037c	        0x488b45f8	                mov rax, qword [rbp - 8]	       322	pop3.c	FUNCTION_5
0x4000380	    0xc680b8000000	                mov byte [rax + 0xb8], 0	       322	pop3.c	FUNCTION_5
0x4000387	        0x488b45f8	                mov rax, qword [rbp - 8]	       325	pop3.c	FUNCTION_5	CALL_1
0x400038b	    0x488d15000000	                   lea rdx, [0x04000392]	       325	pop3.c	FUNCTION_5	CALL_1
0x4000392	    0x488d35000000	                   lea rsi, [0x04000399]	       325	pop3.c	FUNCTION_5	CALL_1
0x4000399	          0x4889c7	                            mov rdi, rax	       325	pop3.c	FUNCTION_5	CALL_1
0x400039c	      0xb800000000	                              mov eax, 0	       325	pop3.c	FUNCTION_5	CALL_1
0x40003a1	      0xe800000000	                          call 0x40003a6	       325	pop3.c	FUNCTION_5	CALL_1
0x40003a6	          0x8945f4	              mov dword [rbp - 0xc], eax	       325	pop3.c	FUNCTION_5	CALL_1
0x40003a9	        0x837df400	                cmp dword [rbp - 0xc], 0	       327	pop3.c	FUNCTION_5	IF_1
0x40003ad	            0x7511	                           jne 0x40003c0	       327	pop3.c	FUNCTION_5	IF_1
0x40003af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	pop3.c	FUNCTION_5	CALL_2
0x40003b3	      0xbe02000000	                              mov esi, 2	       328	pop3.c	FUNCTION_5	CALL_2
0x40003b8	          0x4889c7	                            mov rdi, rax	       328	pop3.c	FUNCTION_5	CALL_2
0x40003bb	      0xe859ffffff	                          call sym.state	       328	pop3.c	FUNCTION_5	CALL_2
0x40003c0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       330	pop3.c	FUNCTION_5
0x40003c3	              0xc9	                                   leave	       331	pop3.c	FUNCTION_5
0x40003c4	              0xc3	                                     ret	       331	pop3.c	FUNCTION_5
pop3_perform_apop	WHILE,0:ELSE,0:IF,3:SWITCH,0:CALL,12:DO,0:functions,0:FOR,1	102
0x4000527	              0x55	                                push rbp	       414	pop3.c	FUNCTION_9
0x4000528	          0x4889e5	                            mov rbp, rsp	       414	pop3.c	FUNCTION_9
0x400052b	        0x4883ec70	                           sub rsp, 0x70	       414	pop3.c	FUNCTION_9
0x400052f	        0x48897d98	             mov qword [rbp - 0x68], rdi	       414	pop3.c	FUNCTION_9
0x4000533	    0x64488b042528	                mov rax, qword fs:[0x28]	       414	pop3.c	FUNCTION_9
0x400053c	        0x488945f8	                mov qword [rbp - 8], rax	       414	pop3.c	FUNCTION_9
0x4000540	            0x31c0	                            xor eax, eax	       414	pop3.c	FUNCTION_9
0x4000542	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       415	pop3.c	FUNCTION_9
0x4000549	        0x488b4598	             mov rax, qword [rbp - 0x68]	       416	pop3.c	FUNCTION_9
0x400054d	    0x4805b0050000	                          add rax, 0x5b0	       416	pop3.c	FUNCTION_9
0x4000553	        0x488945b0	             mov qword [rbp - 0x50], rax	       416	pop3.c	FUNCTION_9
0x4000557	        0x488b4598	             mov rax, qword [rbp - 0x68]	       424	pop3.c	FUNCTION_9	IF_1
0x400055b	     0xfb680580300	          movzx eax, byte [rax + 0x358] 	       424	pop3.c	FUNCTION_9	IF_1
0x4000562	          0x83f001	                              xor eax, 1	       424	pop3.c	FUNCTION_9	IF_1
0x4000565	            0x84c0	                             test al, al	       424	pop3.c	FUNCTION_9	IF_1
0x4000567	            0x7419	                            je 0x4000582	       424	pop3.c	FUNCTION_9	IF_1
0x4000569	        0x488b4598	             mov rax, qword [rbp - 0x68]	       425	pop3.c	FUNCTION_9	IF_1	CALL_1
0x400056d	      0xbe00000000	                              mov esi, 0	       425	pop3.c	FUNCTION_9	IF_1	CALL_1
0x4000572	          0x4889c7	                            mov rdi, rax	       425	pop3.c	FUNCTION_9	IF_1	CALL_1
0x4000575	      0xe89ffdffff	                          call sym.state	       425	pop3.c	FUNCTION_9	IF_1	CALL_1
0x400057a	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       427	pop3.c	FUNCTION_9	IF_1
0x400057d	      0xe938010000	                           jmp 0x40006ba	       427	pop3.c	FUNCTION_9	IF_1
0x4000582	    0x488b05000000	            mov rax, qword [0x04000589] 	       431	pop3.c	FUNCTION_9	CALL_2
0x4000589	          0x4889c7	                            mov rdi, rax	       431	pop3.c	FUNCTION_9	CALL_2
0x400058c	      0xe800000000	                          call 0x4000591	       431	pop3.c	FUNCTION_9	CALL_2
0x4000591	        0x488945b8	             mov qword [rbp - 0x48], rax	       431	pop3.c	FUNCTION_9	CALL_2
0x4000595	      0x48837db800	               cmp qword [rbp - 0x48], 0	       432	pop3.c	FUNCTION_9	IF_2
0x400059a	            0x750a	                           jne 0x40005a6	       432	pop3.c	FUNCTION_9	IF_2
0x400059c	      0xb81b000000	                           mov eax, 0x1b	       433	pop3.c	FUNCTION_9	IF_2
0x40005a1	      0xe914010000	                           jmp 0x40006ba	       433	pop3.c	FUNCTION_9	IF_2
0x40005a6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       436	pop3.c	FUNCTION_9	CALL_5
0x40005aa	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       436	pop3.c	FUNCTION_9	CALL_5
0x40005b1	          0x4889c7	                            mov rdi, rax	       435	pop3.c	FUNCTION_9	CALL_3
0x40005b4	      0xe800000000	                          call 0x40005b9	       435	pop3.c	FUNCTION_9	CALL_3
0x40005b9	          0x4889c7	                            mov rdi, rax	       435	pop3.c	FUNCTION_9	CALL_3
0x40005bc	      0xe800000000	                          call 0x40005c1	       435	pop3.c	FUNCTION_9	CALL_3
0x40005c1	            0x89c2	                            mov edx, eax	       435	pop3.c	FUNCTION_9	CALL_3
0x40005c3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       435	pop3.c	FUNCTION_9	CALL_3
0x40005c7	    0x488b88b00000	            mov rcx, qword [rax + 0xb0] 	       435	pop3.c	FUNCTION_9	CALL_3
0x40005ce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       435	pop3.c	FUNCTION_9	CALL_3
0x40005d2	          0x4889ce	                            mov rsi, rcx	       435	pop3.c	FUNCTION_9	CALL_3
0x40005d5	          0x4889c7	                            mov rdi, rax	       435	pop3.c	FUNCTION_9	CALL_3
0x40005d8	      0xe800000000	                          call 0x40005dd	       435	pop3.c	FUNCTION_9	CALL_3
0x40005dd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       439	pop3.c	FUNCTION_9	CALL_8
0x40005e1	    0x488b80180200	           mov rax, qword [rax + 0x218] 	       439	pop3.c	FUNCTION_9	CALL_8
0x40005e8	          0x4889c7	                            mov rdi, rax	       438	pop3.c	FUNCTION_9	CALL_6
0x40005eb	      0xe800000000	                          call 0x40005f0	       438	pop3.c	FUNCTION_9	CALL_6
0x40005f0	          0x4889c7	                            mov rdi, rax	       438	pop3.c	FUNCTION_9	CALL_6
0x40005f3	      0xe800000000	                          call 0x40005f8	       438	pop3.c	FUNCTION_9	CALL_6
0x40005f8	            0x89c2	                            mov edx, eax	       438	pop3.c	FUNCTION_9	CALL_6
0x40005fa	        0x488b4598	             mov rax, qword [rbp - 0x68]	       438	pop3.c	FUNCTION_9	CALL_6
0x40005fe	    0x488b88180200	           mov rcx, qword [rax + 0x218] 	       438	pop3.c	FUNCTION_9	CALL_6
0x4000605	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       438	pop3.c	FUNCTION_9	CALL_6
0x4000609	          0x4889ce	                            mov rsi, rcx	       438	pop3.c	FUNCTION_9	CALL_6
0x400060c	          0x4889c7	                            mov rdi, rax	       438	pop3.c	FUNCTION_9	CALL_6
0x400060f	      0xe800000000	                          call 0x4000614	       438	pop3.c	FUNCTION_9	CALL_6
0x4000614	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       442	pop3.c	FUNCTION_9	CALL_9
0x4000618	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       442	pop3.c	FUNCTION_9	CALL_9
0x400061c	          0x4889d6	                            mov rsi, rdx	       442	pop3.c	FUNCTION_9	CALL_9
0x400061f	          0x4889c7	                            mov rdi, rax	       442	pop3.c	FUNCTION_9	CALL_9
0x4000622	      0xe800000000	                          call 0x4000627	       442	pop3.c	FUNCTION_9	CALL_9
0x4000627	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       445	pop3.c	FUNCTION_9	FOR_1
0x400062f	            0xeb3e	                           jmp 0x400066f	       445	pop3.c	FUNCTION_9	FOR_1
0x4000631	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       446	pop3.c	FUNCTION_9	CALL_10
0x4000635	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       446	pop3.c	FUNCTION_9	CALL_10
0x4000639	          0x4801d0	                            add rax, rdx	       446	pop3.c	FUNCTION_9	CALL_10
0x400063c	           0xfb600	                   movzx eax, byte [rax]	       446	pop3.c	FUNCTION_9	CALL_10
0x400063f	           0xfb6c0	                           movzx eax, al	       446	pop3.c	FUNCTION_9	CALL_10
0x4000642	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       446	pop3.c	FUNCTION_9	CALL_10
0x4000646	        0x488d0c12	                    lea rcx, [rdx + rdx]	       446	pop3.c	FUNCTION_9	CALL_10
0x400064a	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       446	pop3.c	FUNCTION_9	CALL_10
0x400064e	        0x488d3c0a	                    lea rdi, [rdx + rcx]	       446	pop3.c	FUNCTION_9	CALL_10
0x4000652	            0x89c1	                            mov ecx, eax	       446	pop3.c	FUNCTION_9	CALL_10
0x4000654	    0x488d15000000	                   lea rdx, [0x0400065b]	       446	pop3.c	FUNCTION_9	CALL_10
0x400065b	      0xbe03000000	                              mov esi, 3	       446	pop3.c	FUNCTION_9	CALL_10
0x4000660	      0xb800000000	                              mov eax, 0	       446	pop3.c	FUNCTION_9	CALL_10
0x4000665	      0xe800000000	                          call 0x400066a	       446	pop3.c	FUNCTION_9	CALL_10
0x400066a	      0x488345a801	               add qword [rbp - 0x58], 1	       445	pop3.c	FUNCTION_9	FOR_1
0x400066f	      0x48837da80f	            cmp qword [rbp - 0x58], 0xf 	       445	pop3.c	FUNCTION_9	FOR_1
0x4000674	            0x76bb	                           jbe 0x4000631	       445	pop3.c	FUNCTION_9	FOR_1
0x4000676	        0x488b4598	             mov rax, qword [rbp - 0x68]	       448	pop3.c	FUNCTION_9	CALL_11
0x400067a	    0x488b90100200	           mov rdx, qword [rax + 0x210] 	       448	pop3.c	FUNCTION_9	CALL_11
0x4000681	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       448	pop3.c	FUNCTION_9	CALL_11
0x4000685	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       448	pop3.c	FUNCTION_9	CALL_11
0x4000689	    0x488d35000000	                   lea rsi, [0x04000690]	       448	pop3.c	FUNCTION_9	CALL_11
0x4000690	          0x4889c7	                            mov rdi, rax	       448	pop3.c	FUNCTION_9	CALL_11
0x4000693	      0xb800000000	                              mov eax, 0	       448	pop3.c	FUNCTION_9	CALL_11
0x4000698	      0xe800000000	                          call 0x400069d	       448	pop3.c	FUNCTION_9	CALL_11
0x400069d	          0x8945a4	             mov dword [rbp - 0x5c], eax	       448	pop3.c	FUNCTION_9	CALL_11
0x40006a0	        0x837da400	               cmp dword [rbp - 0x5c], 0	       450	pop3.c	FUNCTION_9	IF_3
0x40006a4	            0x7511	                           jne 0x40006b7	       450	pop3.c	FUNCTION_9	IF_3
0x40006a6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       451	pop3.c	FUNCTION_9	CALL_12
0x40006aa	      0xbe06000000	                              mov esi, 6	       451	pop3.c	FUNCTION_9	CALL_12
0x40006af	          0x4889c7	                            mov rdi, rax	       451	pop3.c	FUNCTION_9	CALL_12
0x40006b2	      0xe862fcffff	                          call sym.state	       451	pop3.c	FUNCTION_9	CALL_12
0x40006b7	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       453	pop3.c	FUNCTION_9
0x40006ba	        0x488b75f8	                mov rsi, qword [rbp - 8]	       454	pop3.c	FUNCTION_9
0x40006be	    0x644833342528	                xor rsi, qword fs:[0x28]	       454	pop3.c	FUNCTION_9
0x40006c7	            0x7405	                            je 0x40006ce	       454	pop3.c	FUNCTION_9
0x40006c9	      0xe800000000	                          call 0x40006ce	       454	pop3.c	FUNCTION_9
0x40006ce	              0xc9	                                   leave	       454	pop3.c	FUNCTION_9
0x40006cf	              0xc3	                                     ret	       454	pop3.c	FUNCTION_9
pop3_dophase_done	WHILE,0:ELSE,0:IF,0:SWITCH,0:CALL,0:DO,0:functions,0:FOR,0	8
0x4001ae6	              0x55	                                push rbp	      1246	pop3.c	FUNCTION_33
0x4001ae7	          0x4889e5	                            mov rbp, rsp	      1246	pop3.c	FUNCTION_33
0x4001aea	        0x48897df8	                mov qword [rbp - 8], rdi	      1246	pop3.c	FUNCTION_33
0x4001aee	            0x89f0	                            mov eax, esi	      1246	pop3.c	FUNCTION_33
0x4001af0	          0x8845f4	                mov byte [rbp - 0xc], al	      1246	pop3.c	FUNCTION_33
0x4001af3	      0xb800000000	                              mov eax, 0	      1250	pop3.c	FUNCTION_33
0x4001af8	              0x5d	                                 pop rbp	      1251	pop3.c	FUNCTION_33
0x4001af9	              0xc3	                                     ret	      1251	pop3.c	FUNCTION_33
pop3_perform_auth	WHILE,0:ELSE,1:IF,1:SWITCH,0:CALL,2:DO,0:functions,0:FOR,0	31
0x40006d0	              0x55	                                push rbp	       467	pop3.c	FUNCTION_10
0x40006d1	          0x4889e5	                            mov rbp, rsp	       467	pop3.c	FUNCTION_10
0x40006d4	        0x4883ec30	                           sub rsp, 0x30	       467	pop3.c	FUNCTION_10
0x40006d8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       467	pop3.c	FUNCTION_10
0x40006dc	        0x488975e0	             mov qword [rbp - 0x20], rsi	       467	pop3.c	FUNCTION_10
0x40006e0	        0x488955d8	             mov qword [rbp - 0x28], rdx	       467	pop3.c	FUNCTION_10
0x40006e4	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       468	pop3.c	FUNCTION_10
0x40006eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       469	pop3.c	FUNCTION_10
0x40006ef	    0x4805b0050000	                          add rax, 0x5b0	       469	pop3.c	FUNCTION_10
0x40006f5	        0x488945f8	                mov qword [rbp - 8], rax	       469	pop3.c	FUNCTION_10
0x40006f9	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       471	pop3.c	FUNCTION_10	IF_1
0x40006fe	            0x7425	                            je 0x4000725	       471	pop3.c	FUNCTION_10	IF_1
0x4000700	        0x488b45f8	                mov rax, qword [rbp - 8]	       473	pop3.c	FUNCTION_10	IF_1	CALL_1
0x4000704	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       473	pop3.c	FUNCTION_10	IF_1	CALL_1
0x4000708	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       473	pop3.c	FUNCTION_10	IF_1	CALL_1
0x400070c	    0x488d35000000	                   lea rsi, [0x04000713]	       473	pop3.c	FUNCTION_10	IF_1	CALL_1
0x4000713	          0x4889c7	                            mov rdi, rax	       473	pop3.c	FUNCTION_10	IF_1	CALL_1
0x4000716	      0xb800000000	                              mov eax, 0	       473	pop3.c	FUNCTION_10	IF_1	CALL_1
0x400071b	      0xe800000000	                          call 0x4000720	       473	pop3.c	FUNCTION_10	IF_1	CALL_1
0x4000720	          0x8945f4	              mov dword [rbp - 0xc], eax	       473	pop3.c	FUNCTION_10	IF_1	CALL_1
0x4000723	            0xeb1f	                           jmp 0x4000744	       473	pop3.c	FUNCTION_10	IF_1	CALL_1
0x4000725	        0x488b45f8	                mov rax, qword [rbp - 8]	       477	pop3.c	FUNCTION_10	ELSE_1	CALL_2
0x4000729	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       477	pop3.c	FUNCTION_10	ELSE_1	CALL_2
0x400072d	    0x488d35000000	                   lea rsi, [0x04000734]	       477	pop3.c	FUNCTION_10	ELSE_1	CALL_2
0x4000734	          0x4889c7	                            mov rdi, rax	       477	pop3.c	FUNCTION_10	ELSE_1	CALL_2
0x4000737	      0xb800000000	                              mov eax, 0	       477	pop3.c	FUNCTION_10	ELSE_1	CALL_2
0x400073c	      0xe800000000	                          call 0x4000741	       477	pop3.c	FUNCTION_10	ELSE_1	CALL_2
0x4000741	          0x8945f4	              mov dword [rbp - 0xc], eax	       477	pop3.c	FUNCTION_10	ELSE_1	CALL_2
0x4000744	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       480	pop3.c	FUNCTION_10
0x4000747	              0xc9	                                   leave	       481	pop3.c	FUNCTION_10
0x4000748	              0xc3	                                     ret	       481	pop3.c	FUNCTION_10
pop3_perform_starttls	WHILE,0:ELSE,0:IF,1:SWITCH,0:CALL,2:DO,0:functions,0:FOR,0	22
0x40003c5	              0x55	                                push rbp	       340	pop3.c	FUNCTION_6
0x40003c6	          0x4889e5	                            mov rbp, rsp	       340	pop3.c	FUNCTION_6
0x40003c9	        0x4883ec20	                           sub rsp, 0x20	       340	pop3.c	FUNCTION_6
0x40003cd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       340	pop3.c	FUNCTION_6
0x40003d1	    0xc745fc000000	                  mov dword [rbp - 4], 0	       341	pop3.c	FUNCTION_6
0x40003d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       344	pop3.c	FUNCTION_6	CALL_1
0x40003dc	    0x4805b0050000	                          add rax, 0x5b0	       344	pop3.c	FUNCTION_6	CALL_1
0x40003e2	    0x488d15000000	                   lea rdx, [0x040003e9]	       344	pop3.c	FUNCTION_6	CALL_1
0x40003e9	    0x488d35000000	                   lea rsi, [0x040003f0]	       344	pop3.c	FUNCTION_6	CALL_1
0x40003f0	          0x4889c7	                            mov rdi, rax	       344	pop3.c	FUNCTION_6	CALL_1
0x40003f3	      0xb800000000	                              mov eax, 0	       344	pop3.c	FUNCTION_6	CALL_1
0x40003f8	      0xe800000000	                          call 0x40003fd	       344	pop3.c	FUNCTION_6	CALL_1
0x40003fd	          0x8945fc	                mov dword [rbp - 4], eax	       344	pop3.c	FUNCTION_6	CALL_1
0x4000400	        0x837dfc00	                  cmp dword [rbp - 4], 0	       346	pop3.c	FUNCTION_6	IF_1
0x4000404	            0x7511	                           jne 0x4000417	       346	pop3.c	FUNCTION_6	IF_1
0x4000406	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       347	pop3.c	FUNCTION_6	CALL_2
0x400040a	      0xbe03000000	                              mov esi, 3	       347	pop3.c	FUNCTION_6	CALL_2
0x400040f	          0x4889c7	                            mov rdi, rax	       347	pop3.c	FUNCTION_6	CALL_2
0x4000412	      0xe802ffffff	                          call sym.state	       347	pop3.c	FUNCTION_6	CALL_2
0x4000417	          0x8b45fc	                mov eax, dword [rbp - 4]	       349	pop3.c	FUNCTION_6
0x400041a	              0xc9	                                   leave	       350	pop3.c	FUNCTION_6
0x400041b	              0xc3	                                     ret	       350	pop3.c	FUNCTION_6
pop3_perform_user	WHILE,0:ELSE,0:IF,2:SWITCH,0:CALL,3:DO,0:functions,0:FOR,0	41
0x4000487	              0x55	                                push rbp	       386	pop3.c	FUNCTION_8
0x4000488	          0x4889e5	                            mov rbp, rsp	       386	pop3.c	FUNCTION_8
0x400048b	        0x4883ec20	                           sub rsp, 0x20	       386	pop3.c	FUNCTION_8
0x400048f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       386	pop3.c	FUNCTION_8
0x4000493	    0xc745fc000000	                  mov dword [rbp - 4], 0	       387	pop3.c	FUNCTION_8
0x400049a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	pop3.c	FUNCTION_8	IF_1
0x400049e	     0xfb680580300	          movzx eax, byte [rax + 0x358] 	       391	pop3.c	FUNCTION_8	IF_1
0x40004a5	          0x83f001	                              xor eax, 1	       391	pop3.c	FUNCTION_8	IF_1
0x40004a8	            0x84c0	                             test al, al	       391	pop3.c	FUNCTION_8	IF_1
0x40004aa	            0x7416	                            je 0x40004c2	       391	pop3.c	FUNCTION_8	IF_1
0x40004ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       392	pop3.c	FUNCTION_8	IF_1	CALL_1
0x40004b0	      0xbe00000000	                              mov esi, 0	       392	pop3.c	FUNCTION_8	IF_1	CALL_1
0x40004b5	          0x4889c7	                            mov rdi, rax	       392	pop3.c	FUNCTION_8	IF_1	CALL_1
0x40004b8	      0xe85cfeffff	                          call sym.state	       392	pop3.c	FUNCTION_8	IF_1	CALL_1
0x40004bd	          0x8b45fc	                mov eax, dword [rbp - 4]	       394	pop3.c	FUNCTION_8	IF_1
0x40004c0	            0xeb63	                           jmp 0x4000525	       394	pop3.c	FUNCTION_8	IF_1
0x40004c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       399	pop3.c	FUNCTION_8
0x40004c6	    0x488b80100200	           mov rax, qword [rax + 0x210] 	       399	pop3.c	FUNCTION_8
0x40004cd	          0x4885c0	                           test rax, rax	       398	pop3.c	FUNCTION_8	CALL_2
0x40004d0	            0x740d	                            je 0x40004df	       398	pop3.c	FUNCTION_8	CALL_2
0x40004d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       398	pop3.c	FUNCTION_8	CALL_2
0x40004d6	    0x488b80100200	           mov rax, qword [rax + 0x210] 	       398	pop3.c	FUNCTION_8	CALL_2
0x40004dd	            0xeb07	                           jmp 0x40004e6	       398	pop3.c	FUNCTION_8	CALL_2
0x40004df	    0x488d05000000	                   lea rax, [0x040004e6]	       398	pop3.c	FUNCTION_8	CALL_2
0x40004e6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       398	pop3.c	FUNCTION_8	CALL_2
0x40004ea	    0x488d8ab00500	                  lea rcx, [rdx + 0x5b0]	       398	pop3.c	FUNCTION_8	CALL_2
0x40004f1	          0x4889c2	                            mov rdx, rax	       398	pop3.c	FUNCTION_8	CALL_2
0x40004f4	    0x488d35000000	                   lea rsi, [0x040004fb]	       398	pop3.c	FUNCTION_8	CALL_2
0x40004fb	          0x4889cf	                            mov rdi, rcx	       398	pop3.c	FUNCTION_8	CALL_2
0x40004fe	      0xb800000000	                              mov eax, 0	       398	pop3.c	FUNCTION_8	CALL_2
0x4000503	      0xe800000000	                          call 0x4000508	       398	pop3.c	FUNCTION_8	CALL_2
0x4000508	          0x8945fc	                mov dword [rbp - 4], eax	       398	pop3.c	FUNCTION_8	CALL_2
0x400050b	        0x837dfc00	                  cmp dword [rbp - 4], 0	       400	pop3.c	FUNCTION_8	IF_2
0x400050f	            0x7511	                           jne 0x4000522	       400	pop3.c	FUNCTION_8	IF_2
0x4000511	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       401	pop3.c	FUNCTION_8	CALL_3
0x4000515	      0xbe07000000	                              mov esi, 7	       401	pop3.c	FUNCTION_8	CALL_3
0x400051a	          0x4889c7	                            mov rdi, rax	       401	pop3.c	FUNCTION_8	CALL_3
0x400051d	      0xe8f7fdffff	                          call sym.state	       401	pop3.c	FUNCTION_8	CALL_3
0x4000522	          0x8b45fc	                mov eax, dword [rbp - 4]	       403	pop3.c	FUNCTION_8
0x4000525	              0xc9	                                   leave	       404	pop3.c	FUNCTION_8
0x4000526	              0xc3	                                     ret	       404	pop3.c	FUNCTION_8
pop3_state_servergreet_resp	WHILE,0:ELSE,1:IF,5:SWITCH,0:CALL,5:DO,0:functions,0:FOR,1	103
0x4000ab1	              0x55	                                push rbp	       610	pop3.c	FUNCTION_15
0x4000ab2	          0x4889e5	                            mov rbp, rsp	       610	pop3.c	FUNCTION_15
0x4000ab5	        0x4883ec50	                           sub rsp, 0x50	       610	pop3.c	FUNCTION_15
0x4000ab9	        0x48897db8	             mov qword [rbp - 0x48], rdi	       610	pop3.c	FUNCTION_15
0x4000abd	          0x8975b4	             mov dword [rbp - 0x4c], esi	       610	pop3.c	FUNCTION_15
0x4000ac0	          0x8955b0	             mov dword [rbp - 0x50], edx	       610	pop3.c	FUNCTION_15
0x4000ac3	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       611	pop3.c	FUNCTION_15
0x4000aca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       612	pop3.c	FUNCTION_15
0x4000ace	          0x488b00	                    mov rax, qword [rax]	       612	pop3.c	FUNCTION_15
0x4000ad1	        0x488945d8	             mov qword [rbp - 0x28], rax	       612	pop3.c	FUNCTION_15
0x4000ad5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       613	pop3.c	FUNCTION_15
0x4000ad9	    0x4805b0050000	                          add rax, 0x5b0	       613	pop3.c	FUNCTION_15
0x4000adf	        0x488945e0	             mov qword [rbp - 0x20], rax	       613	pop3.c	FUNCTION_15
0x4000ae3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       614	pop3.c	FUNCTION_15
0x4000ae7	    0x488b80a80c00	           mov rax, qword [rax + 0xca8] 	       614	pop3.c	FUNCTION_15
0x4000aee	        0x488945e8	             mov qword [rbp - 0x18], rax	       614	pop3.c	FUNCTION_15
0x4000af2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       615	pop3.c	FUNCTION_15	CALL_1
0x4000af6	          0x4889c7	                            mov rdi, rax	       615	pop3.c	FUNCTION_15	CALL_1
0x4000af9	      0xe800000000	                          call 0x4000afe	       615	pop3.c	FUNCTION_15	CALL_1
0x4000afe	        0x488945f0	             mov qword [rbp - 0x10], rax	       615	pop3.c	FUNCTION_15	CALL_1
0x4000b02	        0x837db42b	           cmp dword [rbp - 0x4c], 0x2b 	       620	pop3.c	FUNCTION_15	IF_1
0x4000b06	            0x7424	                            je 0x4000b2c	       620	pop3.c	FUNCTION_15	IF_1
0x4000b08	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       621	pop3.c	FUNCTION_15	IF_1	CALL_2
0x4000b0c	    0x488d35000000	                   lea rsi, [0x04000b13]	       621	pop3.c	FUNCTION_15	IF_1	CALL_2
0x4000b13	          0x4889c7	                            mov rdi, rax	       621	pop3.c	FUNCTION_15	IF_1	CALL_2
0x4000b16	      0xb800000000	                              mov eax, 0	       621	pop3.c	FUNCTION_15	IF_1	CALL_2
0x4000b1b	      0xe800000000	                          call 0x4000b20	       621	pop3.c	FUNCTION_15	IF_1	CALL_2
0x4000b20	    0xc745cc080000	               mov dword [rbp - 0x34], 8	       622	pop3.c	FUNCTION_15	IF_1
0x4000b27	      0xe91f010000	                           jmp 0x4000c4b	       622	pop3.c	FUNCTION_15	IF_1
0x4000b2c	      0x48837df003	               cmp qword [rbp - 0x10], 3	       626	pop3.c	FUNCTION_15	ELSE_1	IF_2
0x4000b31	     0xf8605010000	                           jbe 0x4000c3c	       626	pop3.c	FUNCTION_15	ELSE_1	IF_2
0x4000b37	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       626	pop3.c	FUNCTION_15	ELSE_1	IF_2
0x4000b3b	        0x488d50fe	                      lea rdx, [rax - 2]	       626	pop3.c	FUNCTION_15	ELSE_1	IF_2
0x4000b3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       626	pop3.c	FUNCTION_15	ELSE_1	IF_2
0x4000b43	          0x4801d0	                            add rax, rdx	       626	pop3.c	FUNCTION_15	ELSE_1	IF_2
0x4000b46	           0xfb600	                   movzx eax, byte [rax]	       626	pop3.c	FUNCTION_15	ELSE_1	IF_2
0x4000b49	            0x3c3e	                            cmp al, 0x3e	       626	pop3.c	FUNCTION_15	ELSE_1	IF_2
0x4000b4b	     0xf85eb000000	                           jne 0x4000c3c	       626	pop3.c	FUNCTION_15	ELSE_1	IF_2
0x4000b51	    0x48c745d00300	               mov qword [rbp - 0x30], 3	       628	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1
0x4000b59	      0xe9c6000000	                           jmp 0x4000c24	       628	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1
0x4000b5e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       629	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000b62	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       629	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000b66	          0x4801d0	                            add rax, rdx	       629	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000b69	           0xfb600	                   movzx eax, byte [rax]	       629	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000b6c	            0x3c3c	                            cmp al, 0x3c	       629	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000b6e	     0xf85ab000000	                           jne 0x4000c1f	       629	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000b74	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       631	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000b78	        0x482b45d0	             sub rax, qword [rbp - 0x30]	       631	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000b7c	        0x4883e801	                              sub rax, 1	       631	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000b80	        0x488945f8	                mov qword [rbp - 8], rax	       631	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000b84	      0x48837df800	                  cmp qword [rbp - 8], 0	       632	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x4000b89	     0xf84a9000000	                            je 0x4000c38	       632	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x4000b8f	    0x488b05000000	            mov rax, qword [0x04000b96] 	       636	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000b96	          0x488b00	                    mov rax, qword [rax]	       636	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000b99	        0x488b55f8	                mov rdx, qword [rbp - 8]	       636	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000b9d	        0x4883c201	                              add rdx, 1	       636	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000ba1	          0x4889d6	                            mov rsi, rdx	       636	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000ba4	      0xbf01000000	                              mov edi, 1	       636	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000ba9	            0xffd0	                                call rax	       636	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000bab	          0x4889c2	                            mov rdx, rax	       636	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000bae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       636	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000bb2	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       636	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000bb9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       638	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x4000bbd	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       638	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x4000bc4	          0x4885c0	                           test rax, rax	       638	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x4000bc7	            0x7472	                            je 0x4000c3b	       638	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x4000bc9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       642	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000bcd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       642	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000bd1	        0x488d0c02	                    lea rcx, [rdx + rax]	       642	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000bd5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       642	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000bd9	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       642	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000be0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       642	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000be4	          0x4889ce	                            mov rsi, rcx	       642	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000be7	          0x4889c7	                            mov rdi, rax	       642	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000bea	      0xe800000000	                          call 0x4000bef	       642	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000bef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       643	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000bf3	    0x488b90b00000	            mov rdx, qword [rax + 0xb0] 	       643	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000bfa	        0x488b45f8	                mov rax, qword [rbp - 8]	       643	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000bfe	          0x4801d0	                            add rax, rdx	       643	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000c01	          0xc60000	                       mov byte [rax], 0	       643	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000c04	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       646	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000c08	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	       646	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000c0e	          0x83c802	                               or eax, 2	       646	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000c11	            0x89c2	                            mov edx, eax	       646	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000c13	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       646	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000c17	    0x8990a8000000	             mov dword [rax + 0xa8], edx	       646	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000c1d	            0xeb1d	                           jmp 0x4000c3c	       647	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3
0x4000c1f	      0x488345d001	               add qword [rbp - 0x30], 1	       628	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1
0x4000c24	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       628	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1
0x4000c28	        0x4883e802	                              sub rax, 2	       628	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1
0x4000c2c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       628	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1
0x4000c30	     0xf8728ffffff	                            ja 0x4000b5e	       628	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1
0x4000c36	            0xeb04	                           jmp 0x4000c3c	       628	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1
0x4000c38	              0x90	                                     nop	       633	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x4000c39	            0xeb01	                           jmp 0x4000c3c	       633	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x4000c3b	              0x90	                                     nop	       639	pop3.c	FUNCTION_15	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x4000c3c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       652	pop3.c	FUNCTION_15	ELSE_1	CALL_5
0x4000c40	          0x4889c7	                            mov rdi, rax	       652	pop3.c	FUNCTION_15	ELSE_1	CALL_5
0x4000c43	      0xe8f7f6ffff	              call sym.pop3_perform_capa	       652	pop3.c	FUNCTION_15	ELSE_1	CALL_5
0x4000c48	          0x8945cc	             mov dword [rbp - 0x34], eax	       652	pop3.c	FUNCTION_15	ELSE_1	CALL_5
0x4000c4b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       655	pop3.c	FUNCTION_15
0x4000c4e	              0xc9	                                   leave	       656	pop3.c	FUNCTION_15
0x4000c4f	              0xc3	                                     ret	       656	pop3.c	FUNCTION_15
pop3_continue_auth	WHILE,0:ELSE,0:IF,0:SWITCH,0:CALL,1:DO,0:functions,0:FOR,0	16
0x4000749	              0x55	                                push rbp	       491	pop3.c	FUNCTION_11
0x400074a	          0x4889e5	                            mov rbp, rsp	       491	pop3.c	FUNCTION_11
0x400074d	        0x4883ec20	                           sub rsp, 0x20	       491	pop3.c	FUNCTION_11
0x4000751	        0x48897de8	             mov qword [rbp - 0x18], rdi	       491	pop3.c	FUNCTION_11
0x4000755	        0x488975e0	             mov qword [rbp - 0x20], rsi	       491	pop3.c	FUNCTION_11
0x4000759	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       492	pop3.c	FUNCTION_11
0x400075d	    0x4805b0050000	                          add rax, 0x5b0	       492	pop3.c	FUNCTION_11
0x4000763	        0x488945f8	                mov qword [rbp - 8], rax	       492	pop3.c	FUNCTION_11
0x4000767	        0x488b45f8	                mov rax, qword [rbp - 8]	       494	pop3.c	FUNCTION_11	CALL_1
0x400076b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       494	pop3.c	FUNCTION_11	CALL_1
0x400076f	    0x488d35000000	                   lea rsi, [0x04000776]	       494	pop3.c	FUNCTION_11	CALL_1
0x4000776	          0x4889c7	                            mov rdi, rax	       494	pop3.c	FUNCTION_11	CALL_1
0x4000779	      0xb800000000	                              mov eax, 0	       494	pop3.c	FUNCTION_11	CALL_1
0x400077e	      0xe800000000	                          call 0x4000783	       494	pop3.c	FUNCTION_11	CALL_1
0x4000783	              0xc9	                                   leave	       495	pop3.c	FUNCTION_11
0x4000784	              0xc3	                                     ret	       495	pop3.c	FUNCTION_11
pop3_state_command_resp	WHILE,0:ELSE,0:IF,5:SWITCH,0:CALL,5:DO,0:functions,0:FOR,0	84
0x400127e	              0x55	                                push rbp	       881	pop3.c	FUNCTION_22
0x400127f	          0x4889e5	                            mov rbp, rsp	       881	pop3.c	FUNCTION_22
0x4001282	        0x4883ec40	                           sub rsp, 0x40	       881	pop3.c	FUNCTION_22
0x4001286	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       881	pop3.c	FUNCTION_22
0x400128a	          0x8975c4	             mov dword [rbp - 0x3c], esi	       881	pop3.c	FUNCTION_22
0x400128d	          0x8955c0	             mov dword [rbp - 0x40], edx	       881	pop3.c	FUNCTION_22
0x4001290	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       882	pop3.c	FUNCTION_22
0x4001297	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       883	pop3.c	FUNCTION_22
0x400129b	          0x488b00	                    mov rax, qword [rax]	       883	pop3.c	FUNCTION_22
0x400129e	        0x488945e0	             mov qword [rbp - 0x20], rax	       883	pop3.c	FUNCTION_22
0x40012a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       884	pop3.c	FUNCTION_22
0x40012a6	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	       884	pop3.c	FUNCTION_22
0x40012ad	        0x488945e8	             mov qword [rbp - 0x18], rax	       884	pop3.c	FUNCTION_22
0x40012b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       885	pop3.c	FUNCTION_22
0x40012b5	    0x4805b0050000	                          add rax, 0x5b0	       885	pop3.c	FUNCTION_22
0x40012bb	        0x488945f0	             mov qword [rbp - 0x10], rax	       885	pop3.c	FUNCTION_22
0x40012bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       886	pop3.c	FUNCTION_22
0x40012c3	        0x488945f8	                mov qword [rbp - 8], rax	       886	pop3.c	FUNCTION_22
0x40012c7	        0x837dc42b	           cmp dword [rbp - 0x3c], 0x2b 	       890	pop3.c	FUNCTION_22	IF_1
0x40012cb	            0x741b	                            je 0x40012e8	       890	pop3.c	FUNCTION_22	IF_1
0x40012cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       891	pop3.c	FUNCTION_22	IF_1	CALL_1
0x40012d1	      0xbe00000000	                              mov esi, 0	       891	pop3.c	FUNCTION_22	IF_1	CALL_1
0x40012d6	          0x4889c7	                            mov rdi, rax	       891	pop3.c	FUNCTION_22	IF_1	CALL_1
0x40012d9	      0xe83bf0ffff	                          call sym.state	       891	pop3.c	FUNCTION_22	IF_1	CALL_1
0x40012de	      0xb838000000	                           mov eax, 0x38	       892	pop3.c	FUNCTION_22	IF_1
0x40012e3	      0xe9e7000000	                           jmp 0x40013cf	       892	pop3.c	FUNCTION_22	IF_1
0x40012e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       899	pop3.c	FUNCTION_22
0x40012ec	    0x48c740780200	               mov qword [rax + 0x78], 2	       899	pop3.c	FUNCTION_22
0x40012f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       903	pop3.c	FUNCTION_22
0x40012f8	    0x48c780800000	               mov qword [rax + 0x80], 2	       903	pop3.c	FUNCTION_22
0x4001303	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       905	pop3.c	FUNCTION_22	IF_2
0x4001307	            0x8b00	                    mov eax, dword [rax]	       905	pop3.c	FUNCTION_22	IF_2
0x4001309	            0x85c0	                           test eax, eax	       905	pop3.c	FUNCTION_22	IF_2
0x400130b	     0xf85aa000000	                           jne 0x40013bb	       905	pop3.c	FUNCTION_22	IF_2
0x4001311	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       907	pop3.c	FUNCTION_22	IF_2	CALL_2
0x4001315	        0x4883ec08	                              sub rsp, 8	       907	pop3.c	FUNCTION_22	IF_2	CALL_2
0x4001319	            0x6a00	                                  push 0	       907	pop3.c	FUNCTION_22	IF_2	CALL_2
0x400131b	    0x41b9ffffffff	                     mov r9d, 0xffffffff	       907	pop3.c	FUNCTION_22	IF_2	CALL_2
0x4001321	    0x41b800000000	                              mov r8d, 0	       907	pop3.c	FUNCTION_22	IF_2	CALL_2
0x4001327	      0xb900000000	                              mov ecx, 0	       907	pop3.c	FUNCTION_22	IF_2	CALL_2
0x400132c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       907	pop3.c	FUNCTION_22	IF_2	CALL_2
0x4001333	      0xbe00000000	                              mov esi, 0	       907	pop3.c	FUNCTION_22	IF_2	CALL_2
0x4001338	          0x4889c7	                            mov rdi, rax	       907	pop3.c	FUNCTION_22	IF_2	CALL_2
0x400133b	      0xe800000000	                          call 0x4001340	       907	pop3.c	FUNCTION_22	IF_2	CALL_2
0x4001340	        0x4883c410	                           add rsp, 0x10	       907	pop3.c	FUNCTION_22	IF_2	CALL_2
0x4001344	        0x488b45f8	                mov rax, qword [rbp - 8]	       909	pop3.c	FUNCTION_22	IF_2	IF_3
0x4001348	          0x488b00	                    mov rax, qword [rax]	       909	pop3.c	FUNCTION_22	IF_2	IF_3
0x400134b	          0x4885c0	                           test rax, rax	       909	pop3.c	FUNCTION_22	IF_2	IF_3
0x400134e	            0x746b	                            je 0x40013bb	       909	pop3.c	FUNCTION_22	IF_2	IF_3
0x4001350	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       914	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4
0x4001354	     0xfb680a10700	          movzx eax, byte [rax + 0x7a1] 	       914	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4
0x400135b	          0x83f001	                              xor eax, 1	       914	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4
0x400135e	            0x84c0	                             test al, al	       914	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4
0x4001360	            0x742c	                            je 0x400138e	       914	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4
0x4001362	        0x488b45f8	                mov rax, qword [rbp - 8]	       915	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	CALL_3
0x4001366	        0x488b5008	                mov rdx, qword [rax + 8]	       915	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	CALL_3
0x400136a	        0x488b45f8	                mov rax, qword [rbp - 8]	       915	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	CALL_3
0x400136e	          0x488b08	                    mov rcx, qword [rax]	       915	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	CALL_3
0x4001371	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       915	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	CALL_3
0x4001375	          0x4889ce	                            mov rsi, rcx	       915	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	CALL_3
0x4001378	          0x4889c7	                            mov rdi, rax	       915	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	CALL_3
0x400137b	      0xe800000000	                          call 0x4001380	       915	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	CALL_3
0x4001380	          0x8945dc	             mov dword [rbp - 0x24], eax	       915	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	CALL_3
0x4001383	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       916	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	IF_5
0x4001387	            0x7405	                            je 0x400138e	       916	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	IF_5
0x4001389	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       917	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	IF_5
0x400138c	            0xeb41	                           jmp 0x40013cf	       917	pop3.c	FUNCTION_22	IF_2	IF_3	IF_4	IF_5
0x400138e	    0x488b05000000	            mov rax, qword [0x04001395] 	       921	pop3.c	FUNCTION_22	IF_2	IF_3	CALL_4
0x4001395	          0x488b00	                    mov rax, qword [rax]	       921	pop3.c	FUNCTION_22	IF_2	IF_3	CALL_4
0x4001398	        0x488b55f8	                mov rdx, qword [rbp - 8]	       921	pop3.c	FUNCTION_22	IF_2	IF_3	CALL_4
0x400139c	          0x488b12	                    mov rdx, qword [rdx]	       921	pop3.c	FUNCTION_22	IF_2	IF_3	CALL_4
0x400139f	          0x4889d7	                            mov rdi, rdx	       921	pop3.c	FUNCTION_22	IF_2	IF_3	CALL_4
0x40013a2	            0xffd0	                                call rax	       921	pop3.c	FUNCTION_22	IF_2	IF_3	CALL_4
0x40013a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	pop3.c	FUNCTION_22	IF_2	IF_3	CALL_4
0x40013a8	    0x48c700000000	                      mov qword [rax], 0	       921	pop3.c	FUNCTION_22	IF_2	IF_3	CALL_4
0x40013af	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	pop3.c	FUNCTION_22	IF_2	IF_3
0x40013b3	    0x48c740080000	                  mov qword [rax + 8], 0	       924	pop3.c	FUNCTION_22	IF_2	IF_3
0x40013bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       929	pop3.c	FUNCTION_22	CALL_5
0x40013bf	      0xbe00000000	                              mov esi, 0	       929	pop3.c	FUNCTION_22	CALL_5
0x40013c4	          0x4889c7	                            mov rdi, rax	       929	pop3.c	FUNCTION_22	CALL_5
0x40013c7	      0xe84defffff	                          call sym.state	       929	pop3.c	FUNCTION_22	CALL_5
0x40013cc	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       931	pop3.c	FUNCTION_22
0x40013cf	              0xc9	                                   leave	       932	pop3.c	FUNCTION_22
0x40013d0	              0xc3	                                     ret	       932	pop3.c	FUNCTION_22
pop3_state_apop_resp	WHILE,0:ELSE,1:IF,1:SWITCH,0:CALL,2:DO,0:functions,0:FOR,0	27
0x4001103	              0x55	                                push rbp	       816	pop3.c	FUNCTION_19
0x4001104	          0x4889e5	                            mov rbp, rsp	       816	pop3.c	FUNCTION_19
0x4001107	        0x4883ec20	                           sub rsp, 0x20	       816	pop3.c	FUNCTION_19
0x400110b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       816	pop3.c	FUNCTION_19
0x400110f	          0x8975e4	             mov dword [rbp - 0x1c], esi	       816	pop3.c	FUNCTION_19
0x4001112	          0x8955e0	             mov dword [rbp - 0x20], edx	       816	pop3.c	FUNCTION_19
0x4001115	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       817	pop3.c	FUNCTION_19
0x400111c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       818	pop3.c	FUNCTION_19
0x4001120	          0x488b00	                    mov rax, qword [rax]	       818	pop3.c	FUNCTION_19
0x4001123	        0x488945f8	                mov qword [rbp - 8], rax	       818	pop3.c	FUNCTION_19
0x4001127	        0x837de42b	           cmp dword [rbp - 0x1c], 0x2b 	       822	pop3.c	FUNCTION_19	IF_1
0x400112b	            0x7424	                            je 0x4001151	       822	pop3.c	FUNCTION_19	IF_1
0x400112d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       823	pop3.c	FUNCTION_19	IF_1	CALL_1
0x4001130	        0x488b45f8	                mov rax, qword [rbp - 8]	       823	pop3.c	FUNCTION_19	IF_1	CALL_1
0x4001134	    0x488d35000000	                   lea rsi, [0x0400113b]	       823	pop3.c	FUNCTION_19	IF_1	CALL_1
0x400113b	          0x4889c7	                            mov rdi, rax	       823	pop3.c	FUNCTION_19	IF_1	CALL_1
0x400113e	      0xb800000000	                              mov eax, 0	       823	pop3.c	FUNCTION_19	IF_1	CALL_1
0x4001143	      0xe800000000	                          call 0x4001148	       823	pop3.c	FUNCTION_19	IF_1	CALL_1
0x4001148	    0xc745f4430000	            mov dword [rbp - 0xc], 0x43 	       824	pop3.c	FUNCTION_19	IF_1
0x400114f	            0xeb11	                           jmp 0x4001162	       824	pop3.c	FUNCTION_19	IF_1
0x4001151	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       828	pop3.c	FUNCTION_19	CALL_2
0x4001155	      0xbe00000000	                              mov esi, 0	       828	pop3.c	FUNCTION_19	CALL_2
0x400115a	          0x4889c7	                            mov rdi, rax	       828	pop3.c	FUNCTION_19	CALL_2
0x400115d	      0xe8b7f1ffff	                          call sym.state	       828	pop3.c	FUNCTION_19	CALL_2
0x4001162	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       830	pop3.c	FUNCTION_19
0x4001165	              0xc9	                                   leave	       831	pop3.c	FUNCTION_19
0x4001166	              0xc3	                                     ret	       831	pop3.c	FUNCTION_19
pop3_parse_url_path	WHILE,0:ELSE,0:IF,0:SWITCH,0:CALL,1:DO,0:functions,0:FOR,0	25
0x4001e49	              0x55	                                push rbp	      1386	pop3.c	FUNCTION_38
0x4001e4a	          0x4889e5	                            mov rbp, rsp	      1386	pop3.c	FUNCTION_38
0x4001e4d	        0x4883ec30	                           sub rsp, 0x30	      1386	pop3.c	FUNCTION_38
0x4001e51	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1386	pop3.c	FUNCTION_38
0x4001e55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1388	pop3.c	FUNCTION_38
0x4001e59	          0x488b00	                    mov rax, qword [rax]	      1388	pop3.c	FUNCTION_38
0x4001e5c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1388	pop3.c	FUNCTION_38
0x4001e60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1389	pop3.c	FUNCTION_38
0x4001e64	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1389	pop3.c	FUNCTION_38
0x4001e6b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1389	pop3.c	FUNCTION_38
0x4001e6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1390	pop3.c	FUNCTION_38
0x4001e73	    0x488b80985000	          mov rax, qword [rax + 0x5098] 	      1390	pop3.c	FUNCTION_38
0x4001e7a	        0x488945f8	                mov qword [rbp - 8], rax	      1390	pop3.c	FUNCTION_38
0x4001e7e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1393	pop3.c	FUNCTION_38	CALL_1
0x4001e82	        0x488d5008	                      lea rdx, [rax + 8]	      1393	pop3.c	FUNCTION_38	CALL_1
0x4001e86	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1393	pop3.c	FUNCTION_38	CALL_1
0x4001e8a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1393	pop3.c	FUNCTION_38	CALL_1
0x4001e8e	    0x41b901000000	                              mov r9d, 1	      1393	pop3.c	FUNCTION_38	CALL_1
0x4001e94	    0x41b800000000	                              mov r8d, 0	      1393	pop3.c	FUNCTION_38	CALL_1
0x4001e9a	          0x4889d1	                            mov rcx, rdx	      1393	pop3.c	FUNCTION_38	CALL_1
0x4001e9d	      0xba00000000	                              mov edx, 0	      1393	pop3.c	FUNCTION_38	CALL_1
0x4001ea2	          0x4889c7	                            mov rdi, rax	      1393	pop3.c	FUNCTION_38	CALL_1
0x4001ea5	      0xe800000000	                          call 0x4001eaa	      1393	pop3.c	FUNCTION_38	CALL_1
0x4001eaa	              0xc9	                                   leave	      1394	pop3.c	FUNCTION_38
0x4001eab	              0xc3	                                     ret	      1394	pop3.c	FUNCTION_38
Curl_pop3_write	WHILE,1:ELSE,5:IF,13:SWITCH,1:CALL,4:DO,0:functions,0:FOR,1	211
0x4001f23	              0x55	                                push rbp	      1424	pop3.c	FUNCTION_40
0x4001f24	          0x4889e5	                            mov rbp, rsp	      1424	pop3.c	FUNCTION_40
0x4001f27	        0x4883ec60	                           sub rsp, 0x60	      1424	pop3.c	FUNCTION_40
0x4001f2b	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1424	pop3.c	FUNCTION_40
0x4001f2f	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1424	pop3.c	FUNCTION_40
0x4001f33	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1424	pop3.c	FUNCTION_40
0x4001f37	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1426	pop3.c	FUNCTION_40
0x4001f3e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1427	pop3.c	FUNCTION_40
0x4001f42	          0x488b00	                    mov rax, qword [rax]	      1427	pop3.c	FUNCTION_40
0x4001f45	        0x488945e8	             mov qword [rbp - 0x18], rax	      1427	pop3.c	FUNCTION_40
0x4001f49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1428	pop3.c	FUNCTION_40
0x4001f4d	    0x4805c0000000	                           add rax, 0xc0	      1428	pop3.c	FUNCTION_40
0x4001f53	        0x488945f0	             mov qword [rbp - 0x10], rax	      1428	pop3.c	FUNCTION_40
0x4001f57	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1430	pop3.c	FUNCTION_40
0x4001f5b	    0x4805b0050000	                          add rax, 0x5b0	      1430	pop3.c	FUNCTION_40
0x4001f61	        0x488945f8	                mov qword [rbp - 8], rax	      1430	pop3.c	FUNCTION_40
0x4001f65	        0xc645cb00	                mov byte [rbp - 0x35], 0	      1431	pop3.c	FUNCTION_40
0x4001f69	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1432	pop3.c	FUNCTION_40
0x4001f71	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1440	pop3.c	FUNCTION_40	FOR_1
0x4001f79	      0xe934020000	                           jmp 0x40021b2	      1440	pop3.c	FUNCTION_40	FOR_1
0x4001f7e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1441	pop3.c	FUNCTION_40	FOR_1
0x4001f82	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1441	pop3.c	FUNCTION_40	FOR_1
0x4001f86	        0x488945e0	             mov qword [rbp - 0x20], rax	      1441	pop3.c	FUNCTION_40	FOR_1
0x4001f8a	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001f8e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001f92	          0x4801d0	                            add rax, rdx	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001f95	           0xfb600	                   movzx eax, byte [rax]	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001f98	           0xfbec0	                           movsx eax, al	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001f9b	          0x83f80d	                            cmp eax, 0xd	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001f9e	            0x7417	                            je 0x4001fb7	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001fa0	          0x83f82e	                           cmp eax, 0x2e	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001fa3	     0xf84fe000000	                            je 0x40020a7	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001fa9	          0x83f80a	                            cmp eax, 0xa	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001fac	     0xf84b5000000	                            je 0x4002067	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001fb2	      0xe942010000	                           jmp 0x40020f9	      1443	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4001fb7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1445	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1
0x4001fbb	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1445	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1
0x4001fbf	          0x4885c0	                           test rax, rax	      1445	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1
0x4001fc2	            0x756b	                           jne 0x400202f	      1445	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1
0x4001fc4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1446	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1
0x4001fc8	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1446	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1
0x4001fcc	        0x488d5001	                      lea rdx, [rax + 1]	      1446	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1
0x4001fd0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1446	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1
0x4001fd4	        0x48895078	             mov qword [rax + 0x78], rdx	      1446	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1
0x4001fd8	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1448	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2
0x4001fdd	     0xf8424010000	                            je 0x4002107	      1448	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2
0x4001fe3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4001fe7	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4001feb	          0x4889c2	                            mov rdx, rax	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4001fee	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4001ff2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4001ff6	        0x488d3401	                    lea rsi, [rcx + rax]	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4001ffa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4001ffe	          0x4889d1	                            mov rcx, rdx	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002001	          0x4889f2	                            mov rdx, rsi	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002004	      0xbe01000000	                              mov esi, 1	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002009	          0x4889c7	                            mov rdi, rax	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x400200c	      0xe800000000	                          call 0x4002011	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002011	          0x8945cc	             mov dword [rbp - 0x34], eax	      1450	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002014	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1453	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4002018	            0x7408	                            je 0x4002022	      1453	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x400201a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1454	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x400201d	      0xe948020000	                           jmp 0x400226a	      1454	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4002022	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1456	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2
0x4002026	        0x488945d0	             mov qword [rbp - 0x30], rax	      1456	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_1	IF_2
0x400202a	      0xe9d8000000	                           jmp 0x4002107	      1465	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x400202f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1459	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4002033	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1459	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4002037	        0x4883f803	                              cmp rax, 3	      1459	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400203b	            0x7519	                           jne 0x4002056	      1459	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400203d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1460	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4002041	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1460	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4002045	        0x488d5001	                      lea rdx, [rax + 1]	      1460	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4002049	        0x488b45f8	                mov rax, qword [rbp - 8]	      1460	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400204d	        0x48895078	             mov qword [rax + 0x78], rdx	      1460	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4002051	      0xe9b1000000	                           jmp 0x4002107	      1465	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4002056	        0x488b45f8	                mov rax, qword [rbp - 8]	      1464	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_2
0x400205a	    0x48c740780100	               mov qword [rax + 0x78], 1	      1464	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_2
0x4002062	      0xe9a0000000	                           jmp 0x4002107	      1465	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4002067	        0x488b45f8	                mov rax, qword [rbp - 8]	      1468	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x400206b	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1468	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x400206f	        0x4883f801	                              cmp rax, 1	      1468	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x4002073	            0x740e	                            je 0x4002083	      1468	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x4002075	        0x488b45f8	                mov rax, qword [rbp - 8]	      1468	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x4002079	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1468	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x400207d	        0x4883f804	                              cmp rax, 4	      1468	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x4002081	            0x7516	                           jne 0x4002099	      1468	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x4002083	        0x488b45f8	                mov rax, qword [rbp - 8]	      1469	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x4002087	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1469	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x400208b	        0x488d5001	                      lea rdx, [rax + 1]	      1469	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x400208f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1469	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x4002093	        0x48895078	             mov qword [rax + 0x78], rdx	      1469	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_5
0x4002097	            0xeb6f	                           jmp 0x4002108	      1474	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4002099	        0x488b45f8	                mov rax, qword [rbp - 8]	      1473	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_3
0x400209d	    0x48c740780000	               mov qword [rax + 0x78], 0	      1473	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_3
0x40020a5	            0xeb61	                           jmp 0x4002108	      1474	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x40020a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1477	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_6
0x40020ab	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1477	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_6
0x40020af	        0x4883f802	                              cmp rax, 2	      1477	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_6
0x40020b3	            0x7516	                           jne 0x40020cb	      1477	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_6
0x40020b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1478	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_6
0x40020b9	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1478	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_6
0x40020bd	        0x488d5001	                      lea rdx, [rax + 1]	      1478	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_6
0x40020c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1478	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_6
0x40020c5	        0x48895078	             mov qword [rax + 0x78], rdx	      1478	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	IF_6
0x40020c9	            0xeb3d	                           jmp 0x4002108	      1488	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_5
0x40020cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1479	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_4	IF_7
0x40020cf	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1479	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_4	IF_7
0x40020d3	        0x4883f803	                              cmp rax, 3	      1479	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_4	IF_7
0x40020d7	            0x7512	                           jne 0x40020eb	      1479	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_4	IF_7
0x40020d9	        0xc645cb01	                mov byte [rbp - 0x35], 1	      1481	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_4	IF_7
0x40020dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1482	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_4	IF_7
0x40020e1	    0x48c740780000	               mov qword [rax + 0x78], 0	      1482	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_4	IF_7
0x40020e9	            0xeb1d	                           jmp 0x4002108	      1488	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_5
0x40020eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1487	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_5
0x40020ef	    0x48c740780000	               mov qword [rax + 0x78], 0	      1487	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_5
0x40020f7	            0xeb0f	                           jmp 0x4002108	      1488	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_5
0x40020f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1491	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_5
0x40020fd	    0x48c740780000	               mov qword [rax + 0x78], 0	      1491	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_5
0x4002105	            0xeb01	                           jmp 0x4002108	      1492	pop3.c	FUNCTION_40	FOR_1	SWITCH_1	ELSE_5
0x4002107	              0x90	                                     nop	      1465	pop3.c	FUNCTION_40	FOR_1	SWITCH_1
0x4002108	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1496	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8
0x400210d	     0xf849a000000	                            je 0x40021ad	      1496	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8
0x4002113	        0x488b45f8	                mov rax, qword [rbp - 8]	      1496	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8
0x4002117	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1496	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8
0x400211b	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1496	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8
0x400211f	     0xf8788000000	                            ja 0x40021ad	      1496	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8
0x4002125	            0xeb1f	                           jmp 0x4002146	      1500	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x4002127	      0x48836de001	               sub qword [rbp - 0x20], 1	      1501	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x400212c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1502	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x4002130	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1502	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x4002137	        0x488d50ff	                      lea rdx, [rax - 1]	      1502	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x400213b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1502	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x400213f	    0x488990800000	             mov qword [rax + 0x80], rdx	      1502	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x4002146	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1500	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x400214b	            0x7410	                            je 0x400215d	      1500	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x400214d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1500	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x4002151	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1500	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x4002158	          0x4885c0	                           test rax, rax	      1500	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x400215b	            0x75ca	                           jne 0x4002127	      1500	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	WHILE_1
0x400215d	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1505	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9
0x4002162	            0x7449	                            je 0x40021ad	      1505	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9
0x4002164	        0x807dcb00	                cmp byte [rbp - 0x35], 0	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4002168	            0x740a	                            je 0x4002174	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x400216a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x400216e	        0x4883e801	                              sub rax, 1	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4002172	            0xeb04	                           jmp 0x4002178	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4002174	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4002178	        0x488b7db8	             mov rdi, qword [rbp - 0x48]	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x400217c	          0x4889c1	                            mov rcx, rax	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x400217f	    0x488d15000000	                   lea rdx, [0x04002186]	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4002186	      0xbe01000000	                              mov esi, 1	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x400218b	      0xe800000000	                          call 0x4002190	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4002190	          0x8945cc	             mov dword [rbp - 0x34], eax	      1508	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4002193	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1511	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x4002197	            0x7408	                            je 0x40021a1	      1511	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x4002199	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1512	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x400219c	      0xe9c9000000	                           jmp 0x400226a	      1512	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x40021a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1514	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9
0x40021a5	        0x488945d0	             mov qword [rbp - 0x30], rax	      1514	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9
0x40021a9	        0xc645cb00	                mov byte [rbp - 0x35], 0	      1515	pop3.c	FUNCTION_40	FOR_1	ELSE_5	IF_8	IF_9
0x40021ad	      0x488345d801	               add qword [rbp - 0x28], 1	      1440	pop3.c	FUNCTION_40	FOR_1
0x40021b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1440	pop3.c	FUNCTION_40	FOR_1
0x40021b6	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      1440	pop3.c	FUNCTION_40	FOR_1
0x40021ba	     0xf82befdffff	                            jb 0x4001f7e	      1440	pop3.c	FUNCTION_40	FOR_1
0x40021c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1520	pop3.c	FUNCTION_40	IF_11
0x40021c4	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1520	pop3.c	FUNCTION_40	IF_11
0x40021c8	        0x4883f805	                              cmp rax, 5	      1520	pop3.c	FUNCTION_40	IF_11
0x40021cc	            0x754a	                           jne 0x4002218	      1520	pop3.c	FUNCTION_40	IF_11
0x40021ce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1524	pop3.c	FUNCTION_40	IF_11	CALL_3
0x40021d2	      0xb902000000	                              mov ecx, 2	      1524	pop3.c	FUNCTION_40	IF_11	CALL_3
0x40021d7	    0x488d15000000	                   lea rdx, [0x040021de]	      1524	pop3.c	FUNCTION_40	IF_11	CALL_3
0x40021de	      0xbe01000000	                              mov esi, 1	      1524	pop3.c	FUNCTION_40	IF_11	CALL_3
0x40021e3	          0x4889c7	                            mov rdi, rax	      1524	pop3.c	FUNCTION_40	IF_11	CALL_3
0x40021e6	      0xe800000000	                          call 0x40021eb	      1524	pop3.c	FUNCTION_40	IF_11	CALL_3
0x40021eb	          0x8945cc	             mov dword [rbp - 0x34], eax	      1524	pop3.c	FUNCTION_40	IF_11	CALL_3
0x40021ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1526	pop3.c	FUNCTION_40	IF_11
0x40021f2	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      1526	pop3.c	FUNCTION_40	IF_11
0x40021f8	          0x83e0fe	                     and eax, 0xfffffffe	      1526	pop3.c	FUNCTION_40	IF_11
0x40021fb	            0x89c2	                            mov edx, eax	      1526	pop3.c	FUNCTION_40	IF_11
0x40021fd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1526	pop3.c	FUNCTION_40	IF_11
0x4002201	    0x8990f4000000	             mov dword [rax + 0xf4], edx	      1526	pop3.c	FUNCTION_40	IF_11
0x4002207	        0x488b45f8	                mov rax, qword [rbp - 8]	      1527	pop3.c	FUNCTION_40	IF_11
0x400220b	    0x48c740780000	               mov qword [rax + 0x78], 0	      1527	pop3.c	FUNCTION_40	IF_11
0x4002213	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1529	pop3.c	FUNCTION_40	IF_11
0x4002216	            0xeb52	                           jmp 0x400226a	      1529	pop3.c	FUNCTION_40	IF_11
0x4002218	        0x488b45f8	                mov rax, qword [rbp - 8]	      1532	pop3.c	FUNCTION_40	IF_12
0x400221c	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1532	pop3.c	FUNCTION_40	IF_12
0x4002220	          0x4885c0	                           test rax, rax	      1532	pop3.c	FUNCTION_40	IF_12
0x4002223	            0x7407	                            je 0x400222c	      1532	pop3.c	FUNCTION_40	IF_12
0x4002225	      0xb800000000	                              mov eax, 0	      1534	pop3.c	FUNCTION_40	IF_12
0x400222a	            0xeb3e	                           jmp 0x400226a	      1534	pop3.c	FUNCTION_40	IF_12
0x400222c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1536	pop3.c	FUNCTION_40	IF_13
0x4002230	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1536	pop3.c	FUNCTION_40	IF_13
0x4002234	            0x7431	                            je 0x4002267	      1536	pop3.c	FUNCTION_40	IF_13
0x4002236	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x400223a	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x400223e	          0x4889c2	                            mov rdx, rax	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x4002241	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x4002245	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x4002249	        0x488d3401	                    lea rsi, [rcx + rax]	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x400224d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x4002251	          0x4889d1	                            mov rcx, rdx	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x4002254	          0x4889f2	                            mov rdx, rsi	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x4002257	      0xbe01000000	                              mov esi, 1	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x400225c	          0x4889c7	                            mov rdi, rax	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x400225f	      0xe800000000	                          call 0x4002264	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x4002264	          0x8945cc	             mov dword [rbp - 0x34], eax	      1537	pop3.c	FUNCTION_40	IF_13	CALL_4
0x4002267	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1541	pop3.c	FUNCTION_40
0x400226a	              0xc9	                                   leave	      1542	pop3.c	FUNCTION_40
0x400226b	              0xc3	                                     ret	      1542	pop3.c	FUNCTION_40
pop3_setup_connection	WHILE,0:ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:functions,0:FOR,0	25
0x4001c32	              0x55	                                push rbp	      1305	pop3.c	FUNCTION_36
0x4001c33	          0x4889e5	                            mov rbp, rsp	      1305	pop3.c	FUNCTION_36
0x4001c36	        0x4883ec20	                           sub rsp, 0x20	      1305	pop3.c	FUNCTION_36
0x4001c3a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1305	pop3.c	FUNCTION_36
0x4001c3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1306	pop3.c	FUNCTION_36
0x4001c42	          0x488b00	                    mov rax, qword [rax]	      1306	pop3.c	FUNCTION_36
0x4001c45	        0x488945f8	                mov qword [rbp - 8], rax	      1306	pop3.c	FUNCTION_36
0x4001c49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1309	pop3.c	FUNCTION_36	CALL_1
0x4001c4d	          0x4889c7	                            mov rdi, rax	      1309	pop3.c	FUNCTION_36	CALL_1
0x4001c50	      0xe895faffff	                      call sym.pop3_init	      1309	pop3.c	FUNCTION_36	CALL_1
0x4001c55	          0x8945f4	              mov dword [rbp - 0xc], eax	      1309	pop3.c	FUNCTION_36	CALL_1
0x4001c58	        0x837df400	                cmp dword [rbp - 0xc], 0	      1310	pop3.c	FUNCTION_36	IF_1
0x4001c5c	            0x7405	                            je 0x4001c63	      1310	pop3.c	FUNCTION_36	IF_1
0x4001c5e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1311	pop3.c	FUNCTION_36	IF_1
0x4001c61	            0xeb2a	                           jmp 0x4001c8d	      1311	pop3.c	FUNCTION_36	IF_1
0x4001c63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1314	pop3.c	FUNCTION_36
0x4001c67	    0xc68050030000	               mov byte [rax + 0x350], 0	      1314	pop3.c	FUNCTION_36
0x4001c6e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1315	pop3.c	FUNCTION_36
0x4001c72	    0x488b80985000	          mov rax, qword [rax + 0x5098] 	      1315	pop3.c	FUNCTION_36
0x4001c79	        0x488d5001	                      lea rdx, [rax + 1]	      1315	pop3.c	FUNCTION_36
0x4001c7d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1315	pop3.c	FUNCTION_36
0x4001c81	    0x488990985000	          mov qword [rax + 0x5098], rdx 	      1315	pop3.c	FUNCTION_36
0x4001c88	      0xb800000000	                              mov eax, 0	      1317	pop3.c	FUNCTION_36
0x4001c8d	              0xc9	                                   leave	      1318	pop3.c	FUNCTION_36
0x4001c8e	              0xc3	                                     ret	      1318	pop3.c	FUNCTION_36
state	WHILE,0:ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:functions,0:FOR,0	13
0x4000319	              0x55	                                push rbp	       281	pop3.c	ELSE_1	FUNCTION_4
0x400031a	          0x4889e5	                            mov rbp, rsp	       281	pop3.c	ELSE_1	FUNCTION_4
0x400031d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       281	pop3.c	ELSE_1	FUNCTION_4
0x4000321	          0x8975e4	             mov dword [rbp - 0x1c], esi	       281	pop3.c	ELSE_1	FUNCTION_4
0x4000324	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       282	pop3.c	ELSE_1	FUNCTION_4
0x4000328	    0x4805b0050000	                          add rax, 0x5b0	       282	pop3.c	ELSE_1	FUNCTION_4
0x400032e	        0x488945f8	                mov qword [rbp - 8], rax	       282	pop3.c	ELSE_1	FUNCTION_4
0x4000332	        0x488b45f8	                mov rax, qword [rbp - 8]	       305	pop3.c	ELSE_1	FUNCTION_4
0x4000336	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       305	pop3.c	ELSE_1	FUNCTION_4
0x4000339	          0x895070	             mov dword [rax + 0x70], edx	       305	pop3.c	ELSE_1	FUNCTION_4
0x400033c	              0x90	                                     nop	       306	pop3.c	ELSE_1	FUNCTION_4
0x400033d	              0x5d	                                 pop rbp	       306	pop3.c	ELSE_1	FUNCTION_4
0x400033e	              0xc3	                                     ret	       306	pop3.c	ELSE_1	FUNCTION_4
pop3_done	WHILE,0:ELSE,0:IF,2:SWITCH,0:CALL,3:DO,0:functions,0:FOR,0	47
0x4001874	              0x55	                                push rbp	      1117	pop3.c	FUNCTION_29
0x4001875	          0x4889e5	                            mov rbp, rsp	      1117	pop3.c	FUNCTION_29
0x4001878	        0x4883ec30	                           sub rsp, 0x30	      1117	pop3.c	FUNCTION_29
0x400187c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1117	pop3.c	FUNCTION_29
0x4001880	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1117	pop3.c	FUNCTION_29
0x4001883	            0x89d0	                            mov eax, edx	      1117	pop3.c	FUNCTION_29
0x4001885	          0x8845d0	               mov byte [rbp - 0x30], al	      1117	pop3.c	FUNCTION_29
0x4001888	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1118	pop3.c	FUNCTION_29
0x400188f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1119	pop3.c	FUNCTION_29
0x4001893	          0x488b00	                    mov rax, qword [rax]	      1119	pop3.c	FUNCTION_29
0x4001896	        0x488945f0	             mov qword [rbp - 0x10], rax	      1119	pop3.c	FUNCTION_29
0x400189a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1120	pop3.c	FUNCTION_29
0x400189e	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1120	pop3.c	FUNCTION_29
0x40018a5	        0x488945f8	                mov qword [rbp - 8], rax	      1120	pop3.c	FUNCTION_29
0x40018a9	      0x48837df800	                  cmp qword [rbp - 8], 0	      1124	pop3.c	FUNCTION_29	IF_1
0x40018ae	            0x7507	                           jne 0x40018b7	      1124	pop3.c	FUNCTION_29	IF_1
0x40018b0	      0xb800000000	                              mov eax, 0	      1125	pop3.c	FUNCTION_29	IF_1
0x40018b5	            0xeb70	                           jmp 0x4001927	      1125	pop3.c	FUNCTION_29	IF_1
0x40018b7	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1127	pop3.c	FUNCTION_29	IF_2
0x40018bb	            0x7417	                            je 0x40018d4	      1127	pop3.c	FUNCTION_29	IF_2
0x40018bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1128	pop3.c	FUNCTION_29	IF_2	CALL_1
0x40018c1	      0xbe01000000	                              mov esi, 1	      1128	pop3.c	FUNCTION_29	IF_2	CALL_1
0x40018c6	          0x4889c7	                            mov rdi, rax	      1128	pop3.c	FUNCTION_29	IF_2	CALL_1
0x40018c9	      0xe800000000	                          call 0x40018ce	      1128	pop3.c	FUNCTION_29	IF_2	CALL_1
0x40018ce	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1129	pop3.c	FUNCTION_29	IF_2
0x40018d1	          0x8945ec	             mov dword [rbp - 0x14], eax	      1129	pop3.c	FUNCTION_29	IF_2
0x40018d4	    0x488b05000000	            mov rax, qword [0x040018db] 	      1133	pop3.c	FUNCTION_29	CALL_2
0x40018db	          0x488b00	                    mov rax, qword [rax]	      1133	pop3.c	FUNCTION_29	CALL_2
0x40018de	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1133	pop3.c	FUNCTION_29	CALL_2
0x40018e2	        0x488b5208	                mov rdx, qword [rdx + 8]	      1133	pop3.c	FUNCTION_29	CALL_2
0x40018e6	          0x4889d7	                            mov rdi, rdx	      1133	pop3.c	FUNCTION_29	CALL_2
0x40018e9	            0xffd0	                                call rax	      1133	pop3.c	FUNCTION_29	CALL_2
0x40018eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1133	pop3.c	FUNCTION_29	CALL_2
0x40018ef	    0x48c740080000	                  mov qword [rax + 8], 0	      1133	pop3.c	FUNCTION_29	CALL_2
0x40018f7	    0x488b05000000	            mov rax, qword [0x040018fe] 	      1134	pop3.c	FUNCTION_29	CALL_3
0x40018fe	          0x488b00	                    mov rax, qword [rax]	      1134	pop3.c	FUNCTION_29	CALL_3
0x4001901	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1134	pop3.c	FUNCTION_29	CALL_3
0x4001905	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      1134	pop3.c	FUNCTION_29	CALL_3
0x4001909	          0x4889d7	                            mov rdi, rdx	      1134	pop3.c	FUNCTION_29	CALL_3
0x400190c	            0xffd0	                                call rax	      1134	pop3.c	FUNCTION_29	CALL_3
0x400190e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1134	pop3.c	FUNCTION_29	CALL_3
0x4001912	    0x48c740100000	               mov qword [rax + 0x10], 0	      1134	pop3.c	FUNCTION_29	CALL_3
0x400191a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1137	pop3.c	FUNCTION_29
0x400191e	    0xc70000000000	                      mov dword [rax], 0	      1137	pop3.c	FUNCTION_29
0x4001924	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1139	pop3.c	FUNCTION_29
0x4001927	              0xc9	                                   leave	      1140	pop3.c	FUNCTION_29
0x4001928	              0xc3	                                     ret	      1140	pop3.c	FUNCTION_29
pop3_init	WHILE,0:ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:functions,0:FOR,0	25
0x40016ea	              0x55	                                push rbp	      1040	pop3.c	FUNCTION_26
0x40016eb	          0x4889e5	                            mov rbp, rsp	      1040	pop3.c	FUNCTION_26
0x40016ee	        0x4883ec30	                           sub rsp, 0x30	      1040	pop3.c	FUNCTION_26
0x40016f2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1040	pop3.c	FUNCTION_26
0x40016f6	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1041	pop3.c	FUNCTION_26
0x40016fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1042	pop3.c	FUNCTION_26
0x4001701	          0x488b00	                    mov rax, qword [rax]	      1042	pop3.c	FUNCTION_26
0x4001704	        0x488945f0	             mov qword [rbp - 0x10], rax	      1042	pop3.c	FUNCTION_26
0x4001708	    0x488b05000000	            mov rax, qword [0x0400170f] 	      1045	pop3.c	FUNCTION_26	CALL_1
0x400170f	          0x488b00	                    mov rax, qword [rax]	      1045	pop3.c	FUNCTION_26	CALL_1
0x4001712	      0xbe01000000	                              mov esi, 1	      1045	pop3.c	FUNCTION_26	CALL_1
0x4001717	      0xbf18000000	                           mov edi, 0x18	      1045	pop3.c	FUNCTION_26	CALL_1
0x400171c	            0xffd0	                                call rax	      1045	pop3.c	FUNCTION_26	CALL_1
0x400171e	          0x4889c2	                            mov rdx, rax	      1045	pop3.c	FUNCTION_26	CALL_1
0x4001721	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1045	pop3.c	FUNCTION_26	CALL_1
0x4001725	    0x488990e80100	            mov qword [rax + 0x1e8], rdx	      1045	pop3.c	FUNCTION_26	CALL_1
0x400172c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1045	pop3.c	FUNCTION_26	CALL_1
0x4001730	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1045	pop3.c	FUNCTION_26	CALL_1
0x4001737	        0x488945f8	                mov qword [rbp - 8], rax	      1045	pop3.c	FUNCTION_26	CALL_1
0x400173b	      0x48837df800	                  cmp qword [rbp - 8], 0	      1046	pop3.c	FUNCTION_26	IF_1
0x4001740	            0x7507	                           jne 0x4001749	      1046	pop3.c	FUNCTION_26	IF_1
0x4001742	    0xc745ec1b0000	           mov dword [rbp - 0x14], 0x1b 	      1047	pop3.c	FUNCTION_26	IF_1
0x4001749	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1049	pop3.c	FUNCTION_26
0x400174c	              0xc9	                                   leave	      1050	pop3.c	FUNCTION_26
0x400174d	              0xc3	                                     ret	      1050	pop3.c	FUNCTION_26
pop3_state_user_resp	WHILE,0:ELSE,1:IF,2:SWITCH,0:CALL,3:DO,0:functions,0:FOR,0	45
0x4001167	              0x55	                                push rbp	       837	pop3.c	FUNCTION_20
0x4001168	          0x4889e5	                            mov rbp, rsp	       837	pop3.c	FUNCTION_20
0x400116b	        0x4883ec20	                           sub rsp, 0x20	       837	pop3.c	FUNCTION_20
0x400116f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       837	pop3.c	FUNCTION_20
0x4001173	          0x8975e4	             mov dword [rbp - 0x1c], esi	       837	pop3.c	FUNCTION_20
0x4001176	          0x8955e0	             mov dword [rbp - 0x20], edx	       837	pop3.c	FUNCTION_20
0x4001179	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       838	pop3.c	FUNCTION_20
0x4001180	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       839	pop3.c	FUNCTION_20
0x4001184	          0x488b00	                    mov rax, qword [rax]	       839	pop3.c	FUNCTION_20
0x4001187	        0x488945f8	                mov qword [rbp - 8], rax	       839	pop3.c	FUNCTION_20
0x400118b	        0x837de42b	           cmp dword [rbp - 0x1c], 0x2b 	       843	pop3.c	FUNCTION_20	IF_1
0x400118f	            0x7424	                            je 0x40011b5	       843	pop3.c	FUNCTION_20	IF_1
0x4001191	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       844	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4001194	        0x488b45f8	                mov rax, qword [rbp - 8]	       844	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4001198	    0x488d35000000	                   lea rsi, [0x0400119f]	       844	pop3.c	FUNCTION_20	IF_1	CALL_1
0x400119f	          0x4889c7	                            mov rdi, rax	       844	pop3.c	FUNCTION_20	IF_1	CALL_1
0x40011a2	      0xb800000000	                              mov eax, 0	       844	pop3.c	FUNCTION_20	IF_1	CALL_1
0x40011a7	      0xe800000000	                          call 0x40011ac	       844	pop3.c	FUNCTION_20	IF_1	CALL_1
0x40011ac	    0xc745f4430000	            mov dword [rbp - 0xc], 0x43 	       845	pop3.c	FUNCTION_20	IF_1
0x40011b3	            0xeb49	                           jmp 0x40011fe	       845	pop3.c	FUNCTION_20	IF_1
0x40011b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       850	pop3.c	FUNCTION_20	ELSE_1
0x40011b9	    0x488b80180200	           mov rax, qword [rax + 0x218] 	       850	pop3.c	FUNCTION_20	ELSE_1
0x40011c0	          0x4885c0	                           test rax, rax	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011c3	            0x740d	                            je 0x40011d2	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011c9	    0x488b80180200	           mov rax, qword [rax + 0x218] 	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011d0	            0xeb07	                           jmp 0x40011d9	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011d2	    0x488d05000000	                   lea rax, [0x040011d9]	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011d9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011dd	    0x488d8ab00500	                  lea rcx, [rdx + 0x5b0]	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011e4	          0x4889c2	                            mov rdx, rax	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011e7	    0x488d35000000	                   lea rsi, [0x040011ee]	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011ee	          0x4889cf	                            mov rdi, rcx	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011f1	      0xb800000000	                              mov eax, 0	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011f6	      0xe800000000	                          call 0x40011fb	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011fb	          0x8945f4	              mov dword [rbp - 0xc], eax	       849	pop3.c	FUNCTION_20	ELSE_1	CALL_2
0x40011fe	        0x837df400	                cmp dword [rbp - 0xc], 0	       851	pop3.c	FUNCTION_20	IF_2
0x4001202	            0x7511	                           jne 0x4001215	       851	pop3.c	FUNCTION_20	IF_2
0x4001204	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       852	pop3.c	FUNCTION_20	CALL_3
0x4001208	      0xbe08000000	                              mov esi, 8	       852	pop3.c	FUNCTION_20	CALL_3
0x400120d	          0x4889c7	                            mov rdi, rax	       852	pop3.c	FUNCTION_20	CALL_3
0x4001210	      0xe804f1ffff	                          call sym.state	       852	pop3.c	FUNCTION_20	CALL_3
0x4001215	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       854	pop3.c	FUNCTION_20
0x4001218	              0xc9	                                   leave	       855	pop3.c	FUNCTION_20
0x4001219	              0xc3	                                     ret	       855	pop3.c	FUNCTION_20
pop3_state_pass_resp	WHILE,0:ELSE,1:IF,1:SWITCH,0:CALL,2:DO,0:functions,0:FOR,0	27
0x400121a	              0x55	                                push rbp	       860	pop3.c	FUNCTION_21
0x400121b	          0x4889e5	                            mov rbp, rsp	       860	pop3.c	FUNCTION_21
0x400121e	        0x4883ec20	                           sub rsp, 0x20	       860	pop3.c	FUNCTION_21
0x4001222	        0x48897de8	             mov qword [rbp - 0x18], rdi	       860	pop3.c	FUNCTION_21
0x4001226	          0x8975e4	             mov dword [rbp - 0x1c], esi	       860	pop3.c	FUNCTION_21
0x4001229	          0x8955e0	             mov dword [rbp - 0x20], edx	       860	pop3.c	FUNCTION_21
0x400122c	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       861	pop3.c	FUNCTION_21
0x4001233	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       862	pop3.c	FUNCTION_21
0x4001237	          0x488b00	                    mov rax, qword [rax]	       862	pop3.c	FUNCTION_21
0x400123a	        0x488945f8	                mov qword [rbp - 8], rax	       862	pop3.c	FUNCTION_21
0x400123e	        0x837de42b	           cmp dword [rbp - 0x1c], 0x2b 	       866	pop3.c	FUNCTION_21	IF_1
0x4001242	            0x7424	                            je 0x4001268	       866	pop3.c	FUNCTION_21	IF_1
0x4001244	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       867	pop3.c	FUNCTION_21	IF_1	CALL_1
0x4001247	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	pop3.c	FUNCTION_21	IF_1	CALL_1
0x400124b	    0x488d35000000	                   lea rsi, [0x04001252]	       867	pop3.c	FUNCTION_21	IF_1	CALL_1
0x4001252	          0x4889c7	                            mov rdi, rax	       867	pop3.c	FUNCTION_21	IF_1	CALL_1
0x4001255	      0xb800000000	                              mov eax, 0	       867	pop3.c	FUNCTION_21	IF_1	CALL_1
0x400125a	      0xe800000000	                          call 0x400125f	       867	pop3.c	FUNCTION_21	IF_1	CALL_1
0x400125f	    0xc745f4430000	            mov dword [rbp - 0xc], 0x43 	       868	pop3.c	FUNCTION_21	IF_1
0x4001266	            0xeb11	                           jmp 0x4001279	       868	pop3.c	FUNCTION_21	IF_1
0x4001268	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       872	pop3.c	FUNCTION_21	CALL_2
0x400126c	      0xbe00000000	                              mov esi, 0	       872	pop3.c	FUNCTION_21	CALL_2
0x4001271	          0x4889c7	                            mov rdi, rax	       872	pop3.c	FUNCTION_21	CALL_2
0x4001274	      0xe8a0f0ffff	                          call sym.state	       872	pop3.c	FUNCTION_21	CALL_2
0x4001279	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       874	pop3.c	FUNCTION_21
0x400127c	              0xc9	                                   leave	       875	pop3.c	FUNCTION_21
0x400127d	              0xc3	                                     ret	       875	pop3.c	FUNCTION_21
pop3_regular_transfer	WHILE,0:ELSE,0:IF,1:SWITCH,0:CALL,6:DO,0:functions,0:FOR,0	58
0x4001b4a	              0x55	                                push rbp	      1280	pop3.c	FUNCTION_35
0x4001b4b	          0x4889e5	                            mov rbp, rsp	      1280	pop3.c	FUNCTION_35
0x4001b4e	        0x4883ec30	                           sub rsp, 0x30	      1280	pop3.c	FUNCTION_35
0x4001b52	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1280	pop3.c	FUNCTION_35
0x4001b56	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1280	pop3.c	FUNCTION_35
0x4001b5a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1280	pop3.c	FUNCTION_35
0x4001b63	        0x488945f8	                mov qword [rbp - 8], rax	      1280	pop3.c	FUNCTION_35
0x4001b67	            0x31c0	                            xor eax, eax	      1280	pop3.c	FUNCTION_35
0x4001b69	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1281	pop3.c	FUNCTION_35
0x4001b70	        0xc645eb00	                mov byte [rbp - 0x15], 0	      1282	pop3.c	FUNCTION_35
0x4001b74	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1283	pop3.c	FUNCTION_35
0x4001b78	          0x488b00	                    mov rax, qword [rax]	      1283	pop3.c	FUNCTION_35
0x4001b7b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1283	pop3.c	FUNCTION_35
0x4001b7f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1286	pop3.c	FUNCTION_35
0x4001b83	    0x48c780c00000	mov qword [rax + 0xc0], 0xffffffffffffffff	      1286	pop3.c	FUNCTION_35
0x4001b8e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1289	pop3.c	FUNCTION_35	CALL_1
0x4001b92	      0xbe00000000	                              mov esi, 0	      1289	pop3.c	FUNCTION_35	CALL_1
0x4001b97	          0x4889c7	                            mov rdi, rax	      1289	pop3.c	FUNCTION_35	CALL_1
0x4001b9a	      0xe800000000	                          call 0x4001b9f	      1289	pop3.c	FUNCTION_35	CALL_1
0x4001b9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1290	pop3.c	FUNCTION_35	CALL_2
0x4001ba3	      0xbe00000000	                              mov esi, 0	      1290	pop3.c	FUNCTION_35	CALL_2
0x4001ba8	          0x4889c7	                            mov rdi, rax	      1290	pop3.c	FUNCTION_35	CALL_2
0x4001bab	      0xe800000000	                          call 0x4001bb0	      1290	pop3.c	FUNCTION_35	CALL_2
0x4001bb0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1291	pop3.c	FUNCTION_35	CALL_3
0x4001bb4	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1291	pop3.c	FUNCTION_35	CALL_3
0x4001bbb	          0x4889c7	                            mov rdi, rax	      1291	pop3.c	FUNCTION_35	CALL_3
0x4001bbe	      0xe800000000	                          call 0x4001bc3	      1291	pop3.c	FUNCTION_35	CALL_3
0x4001bc3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1292	pop3.c	FUNCTION_35	CALL_4
0x4001bc7	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1292	pop3.c	FUNCTION_35	CALL_4
0x4001bce	          0x4889c7	                            mov rdi, rax	      1292	pop3.c	FUNCTION_35	CALL_4
0x4001bd1	      0xe800000000	                          call 0x4001bd6	      1292	pop3.c	FUNCTION_35	CALL_4
0x4001bd6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1295	pop3.c	FUNCTION_35	CALL_5
0x4001bda	        0x488d4deb	                   lea rcx, [rbp - 0x15]	      1295	pop3.c	FUNCTION_35	CALL_5
0x4001bde	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1295	pop3.c	FUNCTION_35	CALL_5
0x4001be2	          0x4889ce	                            mov rsi, rcx	      1295	pop3.c	FUNCTION_35	CALL_5
0x4001be5	          0x4889c7	                            mov rdi, rax	      1295	pop3.c	FUNCTION_35	CALL_5
0x4001be8	      0xe83cfdffff	                   call sym.pop3_perform	      1295	pop3.c	FUNCTION_35	CALL_5
0x4001bed	          0x8945ec	             mov dword [rbp - 0x14], eax	      1295	pop3.c	FUNCTION_35	CALL_5
0x4001bf0	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1298	pop3.c	FUNCTION_35	IF_1
0x4001bf4	            0x7523	                           jne 0x4001c19	      1298	pop3.c	FUNCTION_35	IF_1
0x4001bf6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1298	pop3.c	FUNCTION_35	IF_1
0x4001bfa	           0xfb600	                   movzx eax, byte [rax]	      1298	pop3.c	FUNCTION_35	IF_1
0x4001bfd	            0x84c0	                             test al, al	      1298	pop3.c	FUNCTION_35	IF_1
0x4001bff	            0x7418	                            je 0x4001c19	      1298	pop3.c	FUNCTION_35	IF_1
0x4001c01	         0xfb645eb	            movzx eax, byte [rbp - 0x15]	      1299	pop3.c	FUNCTION_35	CALL_6
0x4001c05	           0xfb6d0	                           movzx edx, al	      1299	pop3.c	FUNCTION_35	CALL_6
0x4001c08	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1299	pop3.c	FUNCTION_35	CALL_6
0x4001c0c	            0x89d6	                            mov esi, edx	      1299	pop3.c	FUNCTION_35	CALL_6
0x4001c0e	          0x4889c7	                            mov rdi, rax	      1299	pop3.c	FUNCTION_35	CALL_6
0x4001c11	      0xe8d0feffff	              call sym.pop3_dophase_done	      1299	pop3.c	FUNCTION_35	CALL_6
0x4001c16	          0x8945ec	             mov dword [rbp - 0x14], eax	      1299	pop3.c	FUNCTION_35	CALL_6
0x4001c19	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1301	pop3.c	FUNCTION_35
0x4001c1c	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1302	pop3.c	FUNCTION_35
0x4001c20	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1302	pop3.c	FUNCTION_35
0x4001c29	            0x7405	                            je 0x4001c30	      1302	pop3.c	FUNCTION_35
0x4001c2b	      0xe800000000	                          call 0x4001c30	      1302	pop3.c	FUNCTION_35
0x4001c30	              0xc9	                                   leave	      1302	pop3.c	FUNCTION_35
0x4001c31	              0xc3	                                     ret	      1302	pop3.c	FUNCTION_35
pop3_parse_url_options	WHILE,3:ELSE,1:IF,4:SWITCH,1:CALL,3:DO,0:functions,0:FOR,0	114
0x4001c8f	              0x55	                                push rbp	      1327	pop3.c	FUNCTION_37
0x4001c90	          0x4889e5	                            mov rbp, rsp	      1327	pop3.c	FUNCTION_37
0x4001c93	        0x4883ec40	                           sub rsp, 0x40	      1327	pop3.c	FUNCTION_37
0x4001c97	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1327	pop3.c	FUNCTION_37
0x4001c9b	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1328	pop3.c	FUNCTION_37
0x4001ca2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1329	pop3.c	FUNCTION_37
0x4001ca6	    0x4805b0050000	                          add rax, 0x5b0	      1329	pop3.c	FUNCTION_37
0x4001cac	        0x488945e8	             mov qword [rbp - 0x18], rax	      1329	pop3.c	FUNCTION_37
0x4001cb0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1330	pop3.c	FUNCTION_37
0x4001cb4	    0x488b80200200	           mov rax, qword [rax + 0x220] 	      1330	pop3.c	FUNCTION_37
0x4001cbb	        0x488945e0	             mov qword [rbp - 0x20], rax	      1330	pop3.c	FUNCTION_37
0x4001cbf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1332	pop3.c	FUNCTION_37
0x4001cc3	    0xc680a0000000	                mov byte [rax + 0xa0], 1	      1332	pop3.c	FUNCTION_37
0x4001cca	      0xe906010000	                           jmp 0x4001dd5	      1334	pop3.c	FUNCTION_37	WHILE_1
0x4001ccf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1335	pop3.c	FUNCTION_37	WHILE_1
0x4001cd3	        0x488945f0	             mov qword [rbp - 0x10], rax	      1335	pop3.c	FUNCTION_37	WHILE_1
0x4001cd7	            0xeb05	                           jmp 0x4001cde	      1338	pop3.c	FUNCTION_37	WHILE_1	WHILE_2
0x4001cd9	      0x488345e001	               add qword [rbp - 0x20], 1	      1339	pop3.c	FUNCTION_37	WHILE_1	WHILE_2
0x4001cde	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1338	pop3.c	FUNCTION_37	WHILE_1	WHILE_2
0x4001ce2	           0xfb600	                   movzx eax, byte [rax]	      1338	pop3.c	FUNCTION_37	WHILE_1	WHILE_2
0x4001ce5	            0x84c0	                             test al, al	      1338	pop3.c	FUNCTION_37	WHILE_1	WHILE_2
0x4001ce7	            0x740b	                            je 0x4001cf4	      1338	pop3.c	FUNCTION_37	WHILE_1	WHILE_2
0x4001ce9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1338	pop3.c	FUNCTION_37	WHILE_1	WHILE_2
0x4001ced	           0xfb600	                   movzx eax, byte [rax]	      1338	pop3.c	FUNCTION_37	WHILE_1	WHILE_2
0x4001cf0	            0x3c3d	                            cmp al, 0x3d	      1338	pop3.c	FUNCTION_37	WHILE_1	WHILE_2
0x4001cf2	            0x75e5	                           jne 0x4001cd9	      1338	pop3.c	FUNCTION_37	WHILE_1	WHILE_2
0x4001cf4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1341	pop3.c	FUNCTION_37	WHILE_1
0x4001cf8	        0x4883c001	                              add rax, 1	      1341	pop3.c	FUNCTION_37	WHILE_1
0x4001cfc	        0x488945f8	                mov qword [rbp - 8], rax	      1341	pop3.c	FUNCTION_37	WHILE_1
0x4001d00	            0xeb05	                           jmp 0x4001d07	      1343	pop3.c	FUNCTION_37	WHILE_1	WHILE_3
0x4001d02	      0x488345e001	               add qword [rbp - 0x20], 1	      1344	pop3.c	FUNCTION_37	WHILE_1	WHILE_3
0x4001d07	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1343	pop3.c	FUNCTION_37	WHILE_1	WHILE_3
0x4001d0b	           0xfb600	                   movzx eax, byte [rax]	      1343	pop3.c	FUNCTION_37	WHILE_1	WHILE_3
0x4001d0e	            0x84c0	                             test al, al	      1343	pop3.c	FUNCTION_37	WHILE_1	WHILE_3
0x4001d10	            0x740b	                            je 0x4001d1d	      1343	pop3.c	FUNCTION_37	WHILE_1	WHILE_3
0x4001d12	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1343	pop3.c	FUNCTION_37	WHILE_1	WHILE_3
0x4001d16	           0xfb600	                   movzx eax, byte [rax]	      1343	pop3.c	FUNCTION_37	WHILE_1	WHILE_3
0x4001d19	            0x3c3b	                            cmp al, 0x3b	      1343	pop3.c	FUNCTION_37	WHILE_1	WHILE_3
0x4001d1b	            0x75e5	                           jne 0x4001d02	      1343	pop3.c	FUNCTION_37	WHILE_1	WHILE_3
0x4001d1d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1346	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_1
0x4001d21	      0xba05000000	                              mov edx, 5	      1346	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_1
0x4001d26	    0x488d35000000	                   lea rsi, [0x04001d2d]	      1346	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_1
0x4001d2d	          0x4889c7	                            mov rdi, rax	      1346	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_1
0x4001d30	      0xe800000000	                          call 0x4001d35	      1346	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_1
0x4001d35	            0x85c0	                           test eax, eax	      1346	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_1
0x4001d37	     0xf8481000000	                            je 0x4001dbe	      1346	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_1
0x4001d3d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1348	pop3.c	FUNCTION_37	WHILE_1	IF_1
0x4001d41	        0x488b45f8	                mov rax, qword [rbp - 8]	      1348	pop3.c	FUNCTION_37	WHILE_1	IF_1
0x4001d45	          0x4829c2	                            sub rdx, rax	      1348	pop3.c	FUNCTION_37	WHILE_1	IF_1
0x4001d48	          0x4889d0	                            mov rax, rdx	      1348	pop3.c	FUNCTION_37	WHILE_1	IF_1
0x4001d4b	          0x4889c2	                            mov rdx, rax	      1347	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_2
0x4001d4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1347	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_2
0x4001d52	    0x488d88880000	                   lea rcx, [rax + 0x88]	      1347	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_2
0x4001d59	        0x488b45f8	                mov rax, qword [rbp - 8]	      1347	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_2
0x4001d5d	          0x4889c6	                            mov rsi, rax	      1347	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_2
0x4001d60	          0x4889cf	                            mov rdi, rcx	      1347	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_2
0x4001d63	      0xe800000000	                          call 0x4001d68	      1347	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_2
0x4001d68	          0x8945dc	             mov dword [rbp - 0x24], eax	      1347	pop3.c	FUNCTION_37	WHILE_1	IF_1	CALL_2
0x4001d6b	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d6f	            0x7454	                            je 0x4001dc5	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d71	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d75	        0x488b45f8	                mov rax, qword [rbp - 8]	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d79	          0x4829c2	                            sub rdx, rax	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d7c	          0x4889d0	                            mov rax, rdx	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d7f	          0x4889c2	                            mov rdx, rax	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d82	        0x488b45f8	                mov rax, qword [rbp - 8]	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d86	    0x488d35000000	                   lea rsi, [0x04001d8d]	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d8d	          0x4889c7	                            mov rdi, rax	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d90	      0xe800000000	                          call 0x4001d95	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d95	            0x85c0	                           test eax, eax	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d97	            0x742c	                            je 0x4001dc5	      1350	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2	CALL_3
0x4001d99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1351	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2
0x4001d9d	    0xc780ac000000	               mov dword [rax + 0xac], 2	      1351	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2
0x4001da7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1352	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2
0x4001dab	    0xc78098000000	               mov dword [rax + 0x98], 0	      1352	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2
0x4001db5	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1353	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2
0x4001dbc	            0xeb07	                           jmp 0x4001dc5	      1353	pop3.c	FUNCTION_37	WHILE_1	IF_1	IF_2
0x4001dbe	    0xc745dc030000	               mov dword [rbp - 0x24], 3	      1357	pop3.c	FUNCTION_37	WHILE_1	ELSE_1
0x4001dc5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1359	pop3.c	FUNCTION_37	WHILE_1	IF_3
0x4001dc9	           0xfb600	                   movzx eax, byte [rax]	      1359	pop3.c	FUNCTION_37	WHILE_1	IF_3
0x4001dcc	            0x3c3b	                            cmp al, 0x3b	      1359	pop3.c	FUNCTION_37	WHILE_1	IF_3
0x4001dce	            0x7505	                           jne 0x4001dd5	      1359	pop3.c	FUNCTION_37	WHILE_1	IF_3
0x4001dd0	      0x488345e001	               add qword [rbp - 0x20], 1	      1360	pop3.c	FUNCTION_37	WHILE_1	IF_3
0x4001dd5	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1334	pop3.c	FUNCTION_37	WHILE_1
0x4001dd9	            0x7516	                           jne 0x4001df1	      1334	pop3.c	FUNCTION_37	WHILE_1
0x4001ddb	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1334	pop3.c	FUNCTION_37	WHILE_1
0x4001de0	            0x740f	                            je 0x4001df1	      1334	pop3.c	FUNCTION_37	WHILE_1
0x4001de2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1334	pop3.c	FUNCTION_37	WHILE_1
0x4001de6	           0xfb600	                   movzx eax, byte [rax]	      1334	pop3.c	FUNCTION_37	WHILE_1
0x4001de9	            0x84c0	                             test al, al	      1334	pop3.c	FUNCTION_37	WHILE_1
0x4001deb	     0xf85defeffff	                           jne 0x4001ccf	      1334	pop3.c	FUNCTION_37	WHILE_1
0x4001df1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1363	pop3.c	FUNCTION_37	IF_4
0x4001df5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1363	pop3.c	FUNCTION_37	IF_4
0x4001dfb	          0x83f802	                              cmp eax, 2	      1363	pop3.c	FUNCTION_37	IF_4
0x4001dfe	            0x7444	                            je 0x4001e44	      1363	pop3.c	FUNCTION_37	IF_4
0x4001e00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1364	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e04	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1364	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e0a	            0x85c0	                           test eax, eax	      1364	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e0c	            0x7407	                            je 0x4001e15	      1364	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e0e	          0x83f8df	             cmp eax, 0xffffffffffffffdf	      1364	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e11	            0x7412	                            je 0x4001e25	      1364	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e13	            0xeb20	                           jmp 0x4001e35	      1364	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1366	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e19	    0xc780ac000000	               mov dword [rax + 0xac], 0	      1366	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e23	            0xeb1f	                           jmp 0x4001e44	      1367	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1369	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e29	    0xc780ac000000	     mov dword [rax + 0xac], 0xffffffff 	      1369	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e33	            0xeb0f	                           jmp 0x4001e44	      1370	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e35	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1372	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e39	    0xc780ac000000	               mov dword [rax + 0xac], 4	      1372	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e43	              0x90	                                     nop	      1373	pop3.c	FUNCTION_37	IF_4	SWITCH_1
0x4001e44	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1376	pop3.c	FUNCTION_37
0x4001e47	              0xc9	                                   leave	      1377	pop3.c	FUNCTION_37
0x4001e48	              0xc3	                                     ret	      1377	pop3.c	FUNCTION_37
pop3_multi_statemach	WHILE,0:ELSE,0:IF,2:SWITCH,0:CALL,2:DO,0:functions,0:FOR,0	44
0x4001605	              0x55	                                push rbp	      1010	pop3.c	FUNCTION_24
0x4001606	          0x4889e5	                            mov rbp, rsp	      1010	pop3.c	FUNCTION_24
0x4001609	        0x4883ec20	                           sub rsp, 0x20	      1010	pop3.c	FUNCTION_24
0x400160d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1010	pop3.c	FUNCTION_24
0x4001611	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1010	pop3.c	FUNCTION_24
0x4001615	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1011	pop3.c	FUNCTION_24
0x400161c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1012	pop3.c	FUNCTION_24
0x4001620	    0x4805b0050000	                          add rax, 0x5b0	      1012	pop3.c	FUNCTION_24
0x4001626	        0x488945f8	                mov qword [rbp - 8], rax	      1012	pop3.c	FUNCTION_24
0x400162a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1014	pop3.c	FUNCTION_24	IF_1
0x400162e	    0x488b80980300	           mov rax, qword [rax + 0x398] 	      1014	pop3.c	FUNCTION_24	IF_1
0x4001635	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1014	pop3.c	FUNCTION_24	IF_1
0x400163b	          0x83e001	                              and eax, 1	      1014	pop3.c	FUNCTION_24	IF_1
0x400163e	            0x85c0	                           test eax, eax	      1014	pop3.c	FUNCTION_24	IF_1
0x4001640	            0x7430	                            je 0x4001672	      1014	pop3.c	FUNCTION_24	IF_1
0x4001642	        0x488b45f8	                mov rax, qword [rbp - 8]	      1014	pop3.c	FUNCTION_24	IF_1
0x4001646	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      1014	pop3.c	FUNCTION_24	IF_1
0x400164a	          0x83f001	                              xor eax, 1	      1014	pop3.c	FUNCTION_24	IF_1
0x400164d	            0x84c0	                             test al, al	      1014	pop3.c	FUNCTION_24	IF_1
0x400164f	            0x7421	                            je 0x4001672	      1014	pop3.c	FUNCTION_24	IF_1
0x4001651	    0xc745f4040000	                mov dword [rbp - 0xc], 4	      1015	pop3.c	FUNCTION_24	IF_1	CALL_1
0x4001658	        0x837df400	                cmp dword [rbp - 0xc], 0	      1016	pop3.c	FUNCTION_24	IF_1	IF_2
0x400165c	            0x750f	                           jne 0x400166d	      1016	pop3.c	FUNCTION_24	IF_1	IF_2
0x400165e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1016	pop3.c	FUNCTION_24	IF_1	IF_2
0x4001662	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      1016	pop3.c	FUNCTION_24	IF_1	IF_2
0x4001666	          0x83f001	                              xor eax, 1	      1016	pop3.c	FUNCTION_24	IF_1	IF_2
0x4001669	            0x84c0	                             test al, al	      1016	pop3.c	FUNCTION_24	IF_1	IF_2
0x400166b	            0x7405	                            je 0x4001672	      1016	pop3.c	FUNCTION_24	IF_1	IF_2
0x400166d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1017	pop3.c	FUNCTION_24	IF_1	IF_2
0x4001670	            0xeb29	                           jmp 0x400169b	      1017	pop3.c	FUNCTION_24	IF_1	IF_2
0x4001672	        0x488b45f8	                mov rax, qword [rbp - 8]	      1020	pop3.c	FUNCTION_24	CALL_2
0x4001676	      0xbe00000000	                              mov esi, 0	      1020	pop3.c	FUNCTION_24	CALL_2
0x400167b	          0x4889c7	                            mov rdi, rax	      1020	pop3.c	FUNCTION_24	CALL_2
0x400167e	      0xe800000000	                          call 0x4001683	      1020	pop3.c	FUNCTION_24	CALL_2
0x4001683	          0x8945f4	              mov dword [rbp - 0xc], eax	      1020	pop3.c	FUNCTION_24	CALL_2
0x4001686	        0x488b45f8	                mov rax, qword [rbp - 8]	      1021	pop3.c	FUNCTION_24
0x400168a	          0x8b4070	            mov eax, dword [rax + 0x70] 	      1021	pop3.c	FUNCTION_24
0x400168d	            0x85c0	                           test eax, eax	      1021	pop3.c	FUNCTION_24
0x400168f	           0xf94c2	                                 sete dl	      1021	pop3.c	FUNCTION_24
0x4001692	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1021	pop3.c	FUNCTION_24
0x4001696	            0x8810	                      mov byte [rax], dl	      1021	pop3.c	FUNCTION_24
0x4001698	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1023	pop3.c	FUNCTION_24
0x400169b	              0xc9	                                   leave	      1024	pop3.c	FUNCTION_24
0x400169c	              0xc3	                                     ret	      1024	pop3.c	FUNCTION_24
pop3_statemach_act	WHILE,0:ELSE,0:IF,4:SWITCH,1:CALL,13:DO,1:functions,0:FOR,0	156
0x40013d1	              0x55	                                push rbp	       935	pop3.c	FUNCTION_23
0x40013d2	          0x4889e5	                            mov rbp, rsp	       935	pop3.c	FUNCTION_23
0x40013d5	        0x4883ec40	                           sub rsp, 0x40	       935	pop3.c	FUNCTION_23
0x40013d9	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       935	pop3.c	FUNCTION_23
0x40013dd	    0x64488b042528	                mov rax, qword fs:[0x28]	       935	pop3.c	FUNCTION_23
0x40013e6	        0x488945f8	                mov qword [rbp - 8], rax	       935	pop3.c	FUNCTION_23
0x40013ea	            0x31c0	                            xor eax, eax	       935	pop3.c	FUNCTION_23
0x40013ec	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       936	pop3.c	FUNCTION_23
0x40013f3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       937	pop3.c	FUNCTION_23
0x40013f7	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	       937	pop3.c	FUNCTION_23
0x40013fd	          0x8945dc	             mov dword [rbp - 0x24], eax	       937	pop3.c	FUNCTION_23
0x4001400	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       939	pop3.c	FUNCTION_23
0x4001404	    0x4805b0050000	                          add rax, 0x5b0	       939	pop3.c	FUNCTION_23
0x400140a	        0x488945e8	             mov qword [rbp - 0x18], rax	       939	pop3.c	FUNCTION_23
0x400140e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       940	pop3.c	FUNCTION_23
0x4001412	        0x488945f0	             mov qword [rbp - 0x10], rax	       940	pop3.c	FUNCTION_23
0x4001416	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       941	pop3.c	FUNCTION_23
0x400141e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       944	pop3.c	FUNCTION_23	IF_1
0x4001422	          0x8b4070	            mov eax, dword [rax + 0x70] 	       944	pop3.c	FUNCTION_23	IF_1
0x4001425	          0x83f804	                              cmp eax, 4	       944	pop3.c	FUNCTION_23	IF_1
0x4001428	            0x7511	                           jne 0x400143b	       944	pop3.c	FUNCTION_23	IF_1
0x400142a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       945	pop3.c	FUNCTION_23	CALL_1
0x400142e	          0x4889c7	                            mov rdi, rax	       945	pop3.c	FUNCTION_23	CALL_1
0x4001431	      0xe8e6efffff	       call sym.pop3_perform_upgrade_tls	       945	pop3.c	FUNCTION_23	CALL_1
0x4001436	      0xe9b4010000	                           jmp 0x40015ef	       945	pop3.c	FUNCTION_23	CALL_1
0x400143b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       948	pop3.c	FUNCTION_23	IF_2
0x400143f	        0x488b4030	            mov rax, qword [rax + 0x30] 	       948	pop3.c	FUNCTION_23	IF_2
0x4001443	          0x4885c0	                           test rax, rax	       948	pop3.c	FUNCTION_23	IF_2
0x4001446	            0x7411	                            je 0x4001459	       948	pop3.c	FUNCTION_23	IF_2
0x4001448	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       949	pop3.c	FUNCTION_23	CALL_2
0x400144c	          0x4889c7	                            mov rdi, rax	       949	pop3.c	FUNCTION_23	CALL_2
0x400144f	      0xe800000000	                          call 0x4001454	       949	pop3.c	FUNCTION_23	CALL_2
0x4001454	      0xe996010000	                           jmp 0x40015ef	       949	pop3.c	FUNCTION_23	CALL_2
0x4001459	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       953	pop3.c	FUNCTION_23	DO_1	CALL_3
0x400145d	        0x488d55d4	                   lea rdx, [rbp - 0x2c]	       953	pop3.c	FUNCTION_23	DO_1	CALL_3
0x4001461	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       953	pop3.c	FUNCTION_23	DO_1	CALL_3
0x4001465	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       953	pop3.c	FUNCTION_23	DO_1	CALL_3
0x4001468	            0x89c7	                            mov edi, eax	       953	pop3.c	FUNCTION_23	DO_1	CALL_3
0x400146a	      0xe800000000	                          call 0x400146f	       953	pop3.c	FUNCTION_23	DO_1	CALL_3
0x400146f	          0x8945d8	             mov dword [rbp - 0x28], eax	       953	pop3.c	FUNCTION_23	DO_1	CALL_3
0x4001472	        0x837dd800	               cmp dword [rbp - 0x28], 0	       954	pop3.c	FUNCTION_23	DO_1	IF_3
0x4001476	            0x7408	                            je 0x4001480	       954	pop3.c	FUNCTION_23	DO_1	IF_3
0x4001478	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       955	pop3.c	FUNCTION_23	DO_1	IF_3
0x400147b	      0xe96f010000	                           jmp 0x40015ef	       955	pop3.c	FUNCTION_23	DO_1	IF_3
0x4001480	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       957	pop3.c	FUNCTION_23	DO_1	IF_4
0x4001483	            0x85c0	                           test eax, eax	       957	pop3.c	FUNCTION_23	DO_1	IF_4
0x4001485	     0xf8460010000	                            je 0x40015eb	       957	pop3.c	FUNCTION_23	DO_1	IF_4
0x400148b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x400148f	          0x8b4070	            mov eax, dword [rax + 0x70] 	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x4001492	          0x83f809	                              cmp eax, 9	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x4001495	     0xf8717010000	                            ja 0x40015b2	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x400149b	            0x89c0	                            mov eax, eax	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x400149d	    0x488d14850000	                        lea rdx, [rax*4]	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x40014a5	    0x488d05000000	                   lea rax, [0x040014ac]	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x40014ac	          0x8b0402	              mov eax, dword [rdx + rax]	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x40014af	          0x4863d0	                         movsxd rdx, eax	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x40014b2	    0x488d05000000	                   lea rax, [0x040014b9]	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x40014b9	          0x4801d0	                            add rax, rdx	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x40014bc	            0xffe0	                                 jmp rax	       961	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x40014be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       963	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_4
0x40014c2	          0x8b5070	            mov edx, dword [rax + 0x70] 	       963	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_4
0x40014c5	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       963	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_4
0x40014c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       963	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_4
0x40014cc	            0x89ce	                            mov esi, ecx	       963	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_4
0x40014ce	          0x4889c7	                            mov rdi, rax	       963	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_4
0x40014d1	      0xe8dbf5ffff	    call sym.pop3_state_servergreet_resp	       963	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_4
0x40014d6	          0x8945d8	             mov dword [rbp - 0x28], eax	       963	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_4
0x40014d9	      0xe9e6000000	                           jmp 0x40015c4	       964	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x40014de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       967	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_5
0x40014e2	          0x8b5070	            mov edx, dword [rax + 0x70] 	       967	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_5
0x40014e5	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       967	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_5
0x40014e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       967	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_5
0x40014ec	            0x89ce	                            mov esi, ecx	       967	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_5
0x40014ee	          0x4889c7	                            mov rdi, rax	       967	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_5
0x40014f1	      0xe85af7ffff	           call sym.pop3_state_capa_resp	       967	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_5
0x40014f6	          0x8945d8	             mov dword [rbp - 0x28], eax	       967	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_5
0x40014f9	      0xe9c6000000	                           jmp 0x40015c4	       968	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x40014fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       971	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_6
0x4001502	          0x8b5070	            mov edx, dword [rax + 0x70] 	       971	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_6
0x4001505	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       971	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_6
0x4001508	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       971	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_6
0x400150c	            0x89ce	                            mov esi, ecx	       971	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_6
0x400150e	          0x4889c7	                            mov rdi, rax	       971	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_6
0x4001511	      0xe849faffff	       call sym.pop3_state_starttls_resp	       971	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_6
0x4001516	          0x8945d8	             mov dword [rbp - 0x28], eax	       971	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_6
0x4001519	      0xe9a6000000	                           jmp 0x40015c4	       972	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x400151e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       975	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_7
0x4001522	          0x8b5070	            mov edx, dword [rax + 0x70] 	       975	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_7
0x4001525	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       975	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_7
0x4001528	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       975	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_7
0x400152c	            0x89ce	                            mov esi, ecx	       975	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_7
0x400152e	          0x4889c7	                            mov rdi, rax	       975	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_7
0x4001531	      0xe8a8faffff	           call sym.pop3_state_auth_resp	       975	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_7
0x4001536	          0x8945d8	             mov dword [rbp - 0x28], eax	       975	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_7
0x4001539	      0xe986000000	                           jmp 0x40015c4	       976	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x400153e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       980	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_8
0x4001542	          0x8b5070	            mov edx, dword [rax + 0x70] 	       980	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_8
0x4001545	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       980	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_8
0x4001548	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       980	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_8
0x400154c	            0x89ce	                            mov esi, ecx	       980	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_8
0x400154e	          0x4889c7	                            mov rdi, rax	       980	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_8
0x4001551	      0xe8adfbffff	           call sym.pop3_state_apop_resp	       980	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_8
0x4001556	          0x8945d8	             mov dword [rbp - 0x28], eax	       980	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_8
0x4001559	            0xeb69	                           jmp 0x40015c4	       981	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x400155b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       985	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_9
0x400155f	          0x8b5070	            mov edx, dword [rax + 0x70] 	       985	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_9
0x4001562	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       985	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_9
0x4001565	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       985	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_9
0x4001569	            0x89ce	                            mov esi, ecx	       985	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_9
0x400156b	          0x4889c7	                            mov rdi, rax	       985	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_9
0x400156e	      0xe8f4fbffff	           call sym.pop3_state_user_resp	       985	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_9
0x4001573	          0x8945d8	             mov dword [rbp - 0x28], eax	       985	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_9
0x4001576	            0xeb4c	                           jmp 0x40015c4	       986	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x4001578	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       989	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_10
0x400157c	          0x8b5070	            mov edx, dword [rax + 0x70] 	       989	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_10
0x400157f	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       989	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_10
0x4001582	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       989	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_10
0x4001586	            0x89ce	                            mov esi, ecx	       989	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_10
0x4001588	          0x4889c7	                            mov rdi, rax	       989	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_10
0x400158b	      0xe88afcffff	           call sym.pop3_state_pass_resp	       989	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_10
0x4001590	          0x8945d8	             mov dword [rbp - 0x28], eax	       989	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_10
0x4001593	            0xeb2f	                           jmp 0x40015c4	       990	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x4001595	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       993	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_11
0x4001599	          0x8b5070	            mov edx, dword [rax + 0x70] 	       993	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_11
0x400159c	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       993	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_11
0x400159f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       993	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_11
0x40015a3	            0x89ce	                            mov esi, ecx	       993	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_11
0x40015a5	          0x4889c7	                            mov rdi, rax	       993	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_11
0x40015a8	      0xe8d1fcffff	        call sym.pop3_state_command_resp	       993	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_11
0x40015ad	          0x8945d8	             mov dword [rbp - 0x28], eax	       993	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_11
0x40015b0	            0xeb12	                           jmp 0x40015c4	       994	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x40015b2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1000	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_12
0x40015b6	      0xbe00000000	                              mov esi, 0	      1000	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_12
0x40015bb	          0x4889c7	                            mov rdi, rax	      1000	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_12
0x40015be	      0xe856edffff	                          call sym.state	      1000	pop3.c	FUNCTION_23	DO_1	SWITCH_1	CALL_12
0x40015c3	              0x90	                                     nop	      1001	pop3.c	FUNCTION_23	DO_1	SWITCH_1
0x40015c4	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015c8	            0x7522	                           jne 0x40015ec	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015ce	          0x8b4070	            mov eax, dword [rax + 0x70] 	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015d1	            0x85c0	                           test eax, eax	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015d3	            0x7417	                            je 0x40015ec	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015d9	          0x4889c7	                            mov rdi, rax	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015dc	      0xe800000000	                          call 0x40015e1	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015e1	            0x84c0	                             test al, al	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015e3	     0xf8570feffff	                           jne 0x4001459	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015e9	            0xeb01	                           jmp 0x40015ec	      1003	pop3.c	FUNCTION_23	CALL_13
0x40015eb	              0x90	                                     nop	       958	pop3.c	FUNCTION_23	DO_1	IF_4
0x40015ec	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1005	pop3.c	FUNCTION_23
0x40015ef	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1006	pop3.c	FUNCTION_23
0x40015f3	    0x644833342528	                xor rsi, qword fs:[0x28]	      1006	pop3.c	FUNCTION_23
0x40015fc	            0x7405	                            je 0x4001603	      1006	pop3.c	FUNCTION_23
0x40015fe	      0xe800000000	                          call 0x4001603	      1006	pop3.c	FUNCTION_23
0x4001603	              0xc9	                                   leave	      1006	pop3.c	FUNCTION_23
0x4001604	              0xc3	                                     ret	      1006	pop3.c	FUNCTION_23
pop3_connect	WHILE,0:ELSE,0:IF,1:SWITCH,0:CALL,6:DO,0:functions,0:FOR,0	59
0x4001780	              0x55	                                push rbp	      1070	pop3.c	FUNCTION_28
0x4001781	          0x4889e5	                            mov rbp, rsp	      1070	pop3.c	FUNCTION_28
0x4001784	        0x4883ec30	                           sub rsp, 0x30	      1070	pop3.c	FUNCTION_28
0x4001788	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1070	pop3.c	FUNCTION_28
0x400178c	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1070	pop3.c	FUNCTION_28
0x4001790	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1071	pop3.c	FUNCTION_28
0x4001797	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1072	pop3.c	FUNCTION_28
0x400179b	    0x4805b0050000	                          add rax, 0x5b0	      1072	pop3.c	FUNCTION_28
0x40017a1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1072	pop3.c	FUNCTION_28
0x40017a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1073	pop3.c	FUNCTION_28
0x40017a9	        0x488945f8	                mov qword [rbp - 8], rax	      1073	pop3.c	FUNCTION_28
0x40017ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1075	pop3.c	FUNCTION_28
0x40017b1	          0xc60000	                       mov byte [rax], 0	      1075	pop3.c	FUNCTION_28
0x40017b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1078	pop3.c	FUNCTION_28	CALL_1
0x40017b8	      0xbe00000000	                              mov esi, 0	      1078	pop3.c	FUNCTION_28	CALL_1
0x40017bd	          0x4889c7	                            mov rdi, rax	      1078	pop3.c	FUNCTION_28	CALL_1
0x40017c0	      0xe800000000	                          call 0x40017c5	      1078	pop3.c	FUNCTION_28	CALL_1
0x40017c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	pop3.c	FUNCTION_28
0x40017c9	    0x48c740504077	       mov qword [rax + 0x50], 0x1b7740 	      1081	pop3.c	FUNCTION_28
0x40017d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1082	pop3.c	FUNCTION_28
0x40017d5	    0x488d15f5fbff	        lea rdx, sym.pop3_statemach_act 	      1082	pop3.c	FUNCTION_28
0x40017dc	        0x48895060	             mov qword [rax + 0x60], rdx	      1082	pop3.c	FUNCTION_28
0x40017e0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1083	pop3.c	FUNCTION_28
0x40017e4	    0x488d1527e9ff	            lea rdx, sym.pop3_endofresp 	      1083	pop3.c	FUNCTION_28
0x40017eb	        0x48895068	             mov qword [rax + 0x68], rdx	      1083	pop3.c	FUNCTION_28
0x40017ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	pop3.c	FUNCTION_28
0x40017f3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1084	pop3.c	FUNCTION_28
0x40017f7	        0x48895058	             mov qword [rax + 0x58], rdx	      1084	pop3.c	FUNCTION_28
0x40017fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1087	pop3.c	FUNCTION_28
0x40017ff	    0xc780ac000000	     mov dword [rax + 0xac], 0xffffffff 	      1087	pop3.c	FUNCTION_28
0x4001809	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1088	pop3.c	FUNCTION_28	CALL_2
0x400180d	    0x480588000000	                           add rax, 0x88	      1088	pop3.c	FUNCTION_28	CALL_2
0x4001813	    0x488d35000000	                   lea rsi, [0x0400181a]	      1088	pop3.c	FUNCTION_28	CALL_2
0x400181a	          0x4889c7	                            mov rdi, rax	      1088	pop3.c	FUNCTION_28	CALL_2
0x400181d	      0xe800000000	                          call 0x4001822	      1088	pop3.c	FUNCTION_28	CALL_2
0x4001822	        0x488b45f8	                mov rax, qword [rbp - 8]	      1091	pop3.c	FUNCTION_28	CALL_3
0x4001826	          0x4889c7	                            mov rdi, rax	      1091	pop3.c	FUNCTION_28	CALL_3
0x4001829	      0xe800000000	                          call 0x400182e	      1091	pop3.c	FUNCTION_28	CALL_3
0x400182e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1094	pop3.c	FUNCTION_28	CALL_4
0x4001832	          0x4889c7	                            mov rdi, rax	      1094	pop3.c	FUNCTION_28	CALL_4
0x4001835	      0xe855040000	         call sym.pop3_parse_url_options	      1094	pop3.c	FUNCTION_28	CALL_4
0x400183a	          0x8945ec	             mov dword [rbp - 0x14], eax	      1094	pop3.c	FUNCTION_28	CALL_4
0x400183d	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1095	pop3.c	FUNCTION_28	IF_1
0x4001841	            0x7405	                            je 0x4001848	      1095	pop3.c	FUNCTION_28	IF_1
0x4001843	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1096	pop3.c	FUNCTION_28	IF_1
0x4001846	            0xeb2a	                           jmp 0x4001872	      1096	pop3.c	FUNCTION_28	IF_1
0x4001848	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1099	pop3.c	FUNCTION_28	CALL_5
0x400184c	      0xbe01000000	                              mov esi, 1	      1099	pop3.c	FUNCTION_28	CALL_5
0x4001851	          0x4889c7	                            mov rdi, rax	      1099	pop3.c	FUNCTION_28	CALL_5
0x4001854	      0xe8c0eaffff	                          call sym.state	      1099	pop3.c	FUNCTION_28	CALL_5
0x4001859	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1101	pop3.c	FUNCTION_28	CALL_6
0x400185d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1101	pop3.c	FUNCTION_28	CALL_6
0x4001861	          0x4889d6	                            mov rsi, rdx	      1101	pop3.c	FUNCTION_28	CALL_6
0x4001864	          0x4889c7	                            mov rdi, rax	      1101	pop3.c	FUNCTION_28	CALL_6
0x4001867	      0xe899fdffff	           call sym.pop3_multi_statemach	      1101	pop3.c	FUNCTION_28	CALL_6
0x400186c	          0x8945ec	             mov dword [rbp - 0x14], eax	      1101	pop3.c	FUNCTION_28	CALL_6
0x400186f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1103	pop3.c	FUNCTION_28
0x4001872	              0xc9	                                   leave	      1104	pop3.c	FUNCTION_28
0x4001873	              0xc3	                                     ret	      1104	pop3.c	FUNCTION_28
pop3_doing	WHILE,0:ELSE,1:IF,2:SWITCH,0:CALL,6:DO,0:functions,0:FOR,0	25
0x4001afa	              0x55	                                push rbp	      1255	pop3.c	FUNCTION_34
0x4001afb	          0x4889e5	                            mov rbp, rsp	      1255	pop3.c	FUNCTION_34
0x4001afe	        0x4883ec20	                           sub rsp, 0x20	      1255	pop3.c	FUNCTION_34
0x4001b02	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1255	pop3.c	FUNCTION_34
0x4001b06	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1255	pop3.c	FUNCTION_34
0x4001b0a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1256	pop3.c	FUNCTION_34	CALL_1
0x4001b0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1256	pop3.c	FUNCTION_34	CALL_1
0x4001b12	          0x4889d6	                            mov rsi, rdx	      1256	pop3.c	FUNCTION_34	CALL_1
0x4001b15	          0x4889c7	                            mov rdi, rax	      1256	pop3.c	FUNCTION_34	CALL_1
0x4001b18	      0xe8e8faffff	           call sym.pop3_multi_statemach	      1256	pop3.c	FUNCTION_34	CALL_1
0x4001b1d	          0x8945fc	                mov dword [rbp - 4], eax	      1256	pop3.c	FUNCTION_34	CALL_1
0x4001b20	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1258	pop3.c	FUNCTION_34	IF_1
0x4001b24	            0x751f	                           jne 0x4001b45	      1258	pop3.c	FUNCTION_34	IF_1
0x4001b26	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1260	pop3.c	FUNCTION_34	ELSE_1	IF_2
0x4001b2a	           0xfb600	                   movzx eax, byte [rax]	      1260	pop3.c	FUNCTION_34	ELSE_1	IF_2
0x4001b2d	            0x84c0	                             test al, al	      1260	pop3.c	FUNCTION_34	ELSE_1	IF_2
0x4001b2f	            0x7414	                            je 0x4001b45	      1260	pop3.c	FUNCTION_34	ELSE_1	IF_2
0x4001b31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1261	pop3.c	FUNCTION_34	ELSE_1	IF_2	CALL_4
0x4001b35	      0xbe00000000	                              mov esi, 0	      1261	pop3.c	FUNCTION_34	ELSE_1	IF_2	CALL_4
0x4001b3a	          0x4889c7	                            mov rdi, rax	      1261	pop3.c	FUNCTION_34	ELSE_1	IF_2	CALL_4
0x4001b3d	      0xe8a4ffffff	              call sym.pop3_dophase_done	      1261	pop3.c	FUNCTION_34	ELSE_1	IF_2	CALL_4
0x4001b42	          0x8945fc	                mov dword [rbp - 4], eax	      1261	pop3.c	FUNCTION_34	ELSE_1	IF_2	CALL_4
0x4001b45	          0x8b45fc	                mov eax, dword [rbp - 4]	      1266	pop3.c	FUNCTION_34
0x4001b48	              0xc9	                                   leave	      1267	pop3.c	FUNCTION_34
0x4001b49	              0xc3	                                     ret	      1267	pop3.c	FUNCTION_34
pop3_do	WHILE,0:ELSE,0:IF,2:SWITCH,0:CALL,3:DO,0:functions,0:FOR,0	33
0x40019bf	              0x55	                                push rbp	      1191	pop3.c	FUNCTION_31
0x40019c0	          0x4889e5	                            mov rbp, rsp	      1191	pop3.c	FUNCTION_31
0x40019c3	        0x4883ec20	                           sub rsp, 0x20	      1191	pop3.c	FUNCTION_31
0x40019c7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1191	pop3.c	FUNCTION_31
0x40019cb	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1191	pop3.c	FUNCTION_31
0x40019cf	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1192	pop3.c	FUNCTION_31
0x40019d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1194	pop3.c	FUNCTION_31
0x40019da	          0xc60000	                       mov byte [rax], 0	      1194	pop3.c	FUNCTION_31
0x40019dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1197	pop3.c	FUNCTION_31	CALL_1
0x40019e1	          0x4889c7	                            mov rdi, rax	      1197	pop3.c	FUNCTION_31	CALL_1
0x40019e4	      0xe860040000	            call sym.pop3_parse_url_path	      1197	pop3.c	FUNCTION_31	CALL_1
0x40019e9	          0x8945fc	                mov dword [rbp - 4], eax	      1197	pop3.c	FUNCTION_31	CALL_1
0x40019ec	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1198	pop3.c	FUNCTION_31	IF_1
0x40019f0	            0x7405	                            je 0x40019f7	      1198	pop3.c	FUNCTION_31	IF_1
0x40019f2	          0x8b45fc	                mov eax, dword [rbp - 4]	      1199	pop3.c	FUNCTION_31	IF_1
0x40019f5	            0xeb33	                           jmp 0x4001a2a	      1199	pop3.c	FUNCTION_31	IF_1
0x40019f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1202	pop3.c	FUNCTION_31	CALL_2
0x40019fb	          0x4889c7	                            mov rdi, rax	      1202	pop3.c	FUNCTION_31	CALL_2
0x40019fe	      0xe8a9040000	      call sym.pop3_parse_custom_request	      1202	pop3.c	FUNCTION_31	CALL_2
0x4001a03	          0x8945fc	                mov dword [rbp - 4], eax	      1202	pop3.c	FUNCTION_31	CALL_2
0x4001a06	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1203	pop3.c	FUNCTION_31	IF_2
0x4001a0a	            0x7405	                            je 0x4001a11	      1203	pop3.c	FUNCTION_31	IF_2
0x4001a0c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1204	pop3.c	FUNCTION_31	IF_2
0x4001a0f	            0xeb19	                           jmp 0x4001a2a	      1204	pop3.c	FUNCTION_31	IF_2
0x4001a11	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1206	pop3.c	FUNCTION_31	CALL_3
0x4001a15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1206	pop3.c	FUNCTION_31	CALL_3
0x4001a19	          0x4889d6	                            mov rsi, rdx	      1206	pop3.c	FUNCTION_31	CALL_3
0x4001a1c	          0x4889c7	                            mov rdi, rax	      1206	pop3.c	FUNCTION_31	CALL_3
0x4001a1f	      0xe826010000	          call sym.pop3_regular_transfer	      1206	pop3.c	FUNCTION_31	CALL_3
0x4001a24	          0x8945fc	                mov dword [rbp - 4], eax	      1206	pop3.c	FUNCTION_31	CALL_3
0x4001a27	          0x8b45fc	                mov eax, dword [rbp - 4]	      1208	pop3.c	FUNCTION_31
0x4001a2a	              0xc9	                                   leave	      1209	pop3.c	FUNCTION_31
0x4001a2b	              0xc3	                                     ret	      1209	pop3.c	FUNCTION_31
pop3_state_auth_resp	WHILE,0:ELSE,2:IF,3:SWITCH,1:CALL,5:DO,0:functions,0:FOR,0	77
0x4000fde	              0x55	                                push rbp	       776	pop3.c	FUNCTION_18
0x4000fdf	          0x4889e5	                            mov rbp, rsp	       776	pop3.c	FUNCTION_18
0x4000fe2	        0x4883ec30	                           sub rsp, 0x30	       776	pop3.c	FUNCTION_18
0x4000fe6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       776	pop3.c	FUNCTION_18
0x4000fea	          0x8975d4	             mov dword [rbp - 0x2c], esi	       776	pop3.c	FUNCTION_18
0x4000fed	          0x8955d0	             mov dword [rbp - 0x30], edx	       776	pop3.c	FUNCTION_18
0x4000ff0	    0x64488b042528	                mov rax, qword fs:[0x28]	       776	pop3.c	FUNCTION_18
0x4000ff9	        0x488945f8	                mov qword [rbp - 8], rax	       776	pop3.c	FUNCTION_18
0x4000ffd	            0x31c0	                            xor eax, eax	       776	pop3.c	FUNCTION_18
0x4000fff	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       777	pop3.c	FUNCTION_18
0x4001006	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       778	pop3.c	FUNCTION_18
0x400100a	          0x488b00	                    mov rax, qword [rax]	       778	pop3.c	FUNCTION_18
0x400100d	        0x488945e8	             mov qword [rbp - 0x18], rax	       778	pop3.c	FUNCTION_18
0x4001011	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       779	pop3.c	FUNCTION_18
0x4001015	    0x4805b0050000	                          add rax, 0x5b0	       779	pop3.c	FUNCTION_18
0x400101b	        0x488945f0	             mov qword [rbp - 0x10], rax	       779	pop3.c	FUNCTION_18
0x400101f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       784	pop3.c	FUNCTION_18	CALL_1
0x4001023	    0x488db8880000	                   lea rdi, [rax + 0x88]	       784	pop3.c	FUNCTION_18	CALL_1
0x400102a	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       784	pop3.c	FUNCTION_18	CALL_1
0x400102e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       784	pop3.c	FUNCTION_18	CALL_1
0x4001031	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       784	pop3.c	FUNCTION_18	CALL_1
0x4001035	          0x4889c6	                            mov rsi, rax	       784	pop3.c	FUNCTION_18	CALL_1
0x4001038	      0xe800000000	                          call 0x400103d	       784	pop3.c	FUNCTION_18	CALL_1
0x400103d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       784	pop3.c	FUNCTION_18	CALL_1
0x4001040	        0x837de400	               cmp dword [rbp - 0x1c], 0	       785	pop3.c	FUNCTION_18	IF_1
0x4001044	     0xf85a0000000	                           jne 0x40010ea	       785	pop3.c	FUNCTION_18	IF_1
0x400104a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       786	pop3.c	FUNCTION_18	IF_1	SWITCH_1
0x400104d	            0x85c0	                           test eax, eax	       786	pop3.c	FUNCTION_18	IF_1	SWITCH_1
0x400104f	            0x741d	                            je 0x400106e	       786	pop3.c	FUNCTION_18	IF_1	SWITCH_1
0x4001051	          0x83f802	                              cmp eax, 2	       786	pop3.c	FUNCTION_18	IF_1	SWITCH_1
0x4001054	            0x7405	                            je 0x400105b	       786	pop3.c	FUNCTION_18	IF_1	SWITCH_1
0x4001056	      0xe98f000000	                           jmp 0x40010ea	       806	pop3.c	FUNCTION_18	IF_1	SWITCH_1
0x400105b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       788	pop3.c	FUNCTION_18	IF_1	SWITCH_1	CALL_2
0x400105f	      0xbe00000000	                              mov esi, 0	       788	pop3.c	FUNCTION_18	IF_1	SWITCH_1	CALL_2
0x4001064	          0x4889c7	                            mov rdi, rax	       788	pop3.c	FUNCTION_18	IF_1	SWITCH_1	CALL_2
0x4001067	      0xe8adf2ffff	                          call sym.state	       788	pop3.c	FUNCTION_18	IF_1	SWITCH_1	CALL_2
0x400106c	            0xeb7c	                           jmp 0x40010ea	       789	pop3.c	FUNCTION_18	IF_1	SWITCH_1
0x400106e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       792	pop3.c	FUNCTION_18	IF_1	SWITCH_1	IF_2
0x4001072	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	       792	pop3.c	FUNCTION_18	IF_1	SWITCH_1	IF_2
0x4001078	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       792	pop3.c	FUNCTION_18	IF_1	SWITCH_1	IF_2
0x400107c	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       792	pop3.c	FUNCTION_18	IF_1	SWITCH_1	IF_2
0x4001082	            0x21d0	                            and eax, edx	       792	pop3.c	FUNCTION_18	IF_1	SWITCH_1	IF_2
0x4001084	          0x83e002	                              and eax, 2	       792	pop3.c	FUNCTION_18	IF_1	SWITCH_1	IF_2
0x4001087	            0x85c0	                           test eax, eax	       792	pop3.c	FUNCTION_18	IF_1	SWITCH_1	IF_2
0x4001089	            0x7411	                            je 0x400109c	       792	pop3.c	FUNCTION_18	IF_1	SWITCH_1	IF_2
0x400108b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       794	pop3.c	FUNCTION_18	IF_1	SWITCH_1	CALL_3
0x400108f	          0x4889c7	                            mov rdi, rax	       794	pop3.c	FUNCTION_18	IF_1	SWITCH_1	CALL_3
0x4001092	      0xe890f4ffff	              call sym.pop3_perform_apop	       794	pop3.c	FUNCTION_18	IF_1	SWITCH_1	CALL_3
0x4001097	          0x8945e4	             mov dword [rbp - 0x1c], eax	       794	pop3.c	FUNCTION_18	IF_1	SWITCH_1	CALL_3
0x400109a	            0xeb4d	                           jmp 0x40010e9	       804	pop3.c	FUNCTION_18	IF_1	SWITCH_1
0x400109c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       797	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010a0	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	       797	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010a6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       797	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010aa	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       797	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010b0	            0x21d0	                            and eax, edx	       797	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010b2	          0x83e001	                              and eax, 1	       797	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010b5	            0x85c0	                           test eax, eax	       797	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010b7	            0x7411	                            je 0x40010ca	       797	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       799	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010bd	          0x4889c7	                            mov rdi, rax	       799	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010c0	      0xe8c2f3ffff	              call sym.pop3_perform_user	       799	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010c5	          0x8945e4	             mov dword [rbp - 0x1c], eax	       799	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010c8	            0xeb1f	                           jmp 0x40010e9	       804	pop3.c	FUNCTION_18	IF_1	SWITCH_1
0x40010ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       801	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_2	CALL_5
0x40010ce	    0x488d35000000	                   lea rsi, [0x040010d5]	       801	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_2	CALL_5
0x40010d5	          0x4889c7	                            mov rdi, rax	       801	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_2	CALL_5
0x40010d8	      0xb800000000	                              mov eax, 0	       801	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_2	CALL_5
0x40010dd	      0xe800000000	                          call 0x40010e2	       801	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_2	CALL_5
0x40010e2	    0xc745e4430000	           mov dword [rbp - 0x1c], 0x43 	       802	pop3.c	FUNCTION_18	IF_1	SWITCH_1	ELSE_2
0x40010e9	              0x90	                                     nop	       804	pop3.c	FUNCTION_18	IF_1	SWITCH_1
0x40010ea	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       809	pop3.c	FUNCTION_18
0x40010ed	        0x488b4df8	                mov rcx, qword [rbp - 8]	       810	pop3.c	FUNCTION_18
0x40010f1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       810	pop3.c	FUNCTION_18
0x40010fa	            0x7405	                            je 0x4001101	       810	pop3.c	FUNCTION_18
0x40010fc	      0xe800000000	                          call 0x4001101	       810	pop3.c	FUNCTION_18
0x4001101	              0xc9	                                   leave	       810	pop3.c	FUNCTION_18
0x4001102	              0xc3	                                     ret	       810	pop3.c	FUNCTION_18
pop3_disconnect	WHILE,0:ELSE,0:IF,2:SWITCH,0:CALL,5:DO,0:functions,0:FOR,0	50
0x4001a2c	              0x55	                                push rbp	      1219	pop3.c	FUNCTION_32
0x4001a2d	          0x4889e5	                            mov rbp, rsp	      1219	pop3.c	FUNCTION_32
0x4001a30	        0x4883ec20	                           sub rsp, 0x20	      1219	pop3.c	FUNCTION_32
0x4001a34	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1219	pop3.c	FUNCTION_32
0x4001a38	            0x89f0	                            mov eax, esi	      1219	pop3.c	FUNCTION_32
0x4001a3a	          0x8845e4	               mov byte [rbp - 0x1c], al	      1219	pop3.c	FUNCTION_32
0x4001a3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1220	pop3.c	FUNCTION_32
0x4001a41	    0x4805b0050000	                          add rax, 0x5b0	      1220	pop3.c	FUNCTION_32
0x4001a47	        0x488945f8	                mov qword [rbp - 8], rax	      1220	pop3.c	FUNCTION_32
0x4001a4b	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a4f	          0x83f001	                              xor eax, 1	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a52	            0x84c0	                             test al, al	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a54	            0x743c	                            je 0x4001a92	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a56	        0x488b45f8	                mov rax, qword [rbp - 8]	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a5a	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a5e	          0x4885c0	                           test rax, rax	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a61	            0x742f	                            je 0x4001a92	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a63	        0x488b45f8	                mov rax, qword [rbp - 8]	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a67	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a6b	     0xfb6805f0300	          movzx eax, byte [rax + 0x35f] 	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a72	            0x84c0	                             test al, al	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a74	            0x741c	                            je 0x4001a92	      1228	pop3.c	FUNCTION_32	IF_1
0x4001a76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1229	pop3.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x4001a7a	          0x4889c7	                            mov rdi, rax	      1229	pop3.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x4001a7d	      0xe8d8efffff	              call sym.pop3_perform_quit	      1229	pop3.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x4001a82	            0x85c0	                           test eax, eax	      1229	pop3.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x4001a84	            0x750c	                           jne 0x4001a92	      1229	pop3.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x4001a86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1230	pop3.c	FUNCTION_32	IF_1	IF_2
0x4001a8a	          0x4889c7	                            mov rdi, rax	      1230	pop3.c	FUNCTION_32	IF_1	IF_2
0x4001a8d	      0xe80bfcffff	           call sym.pop3_block_statemach	      1230	pop3.c	FUNCTION_32	IF_1	IF_2
0x4001a92	        0x488b45f8	                mov rax, qword [rbp - 8]	      1233	pop3.c	FUNCTION_32	CALL_3
0x4001a96	          0x4889c7	                            mov rdi, rax	      1233	pop3.c	FUNCTION_32	CALL_3
0x4001a99	      0xe800000000	                          call 0x4001a9e	      1233	pop3.c	FUNCTION_32	CALL_3
0x4001a9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1236	pop3.c	FUNCTION_32	CALL_4
0x4001aa2	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      1236	pop3.c	FUNCTION_32	CALL_4
0x4001aa8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1236	pop3.c	FUNCTION_32	CALL_4
0x4001aac	            0x89d6	                            mov esi, edx	      1236	pop3.c	FUNCTION_32	CALL_4
0x4001aae	          0x4889c7	                            mov rdi, rax	      1236	pop3.c	FUNCTION_32	CALL_4
0x4001ab1	      0xe800000000	                          call 0x4001ab6	      1236	pop3.c	FUNCTION_32	CALL_4
0x4001ab6	    0x488b05000000	            mov rax, qword [0x04001abd] 	      1239	pop3.c	FUNCTION_32	CALL_5
0x4001abd	          0x488b00	                    mov rax, qword [rax]	      1239	pop3.c	FUNCTION_32	CALL_5
0x4001ac0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1239	pop3.c	FUNCTION_32	CALL_5
0x4001ac4	    0x488b92b00000	            mov rdx, qword [rdx + 0xb0] 	      1239	pop3.c	FUNCTION_32	CALL_5
0x4001acb	          0x4889d7	                            mov rdi, rdx	      1239	pop3.c	FUNCTION_32	CALL_5
0x4001ace	            0xffd0	                                call rax	      1239	pop3.c	FUNCTION_32	CALL_5
0x4001ad0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1239	pop3.c	FUNCTION_32	CALL_5
0x4001ad4	    0x48c780b00000	               mov qword [rax + 0xb0], 0	      1239	pop3.c	FUNCTION_32	CALL_5
0x4001adf	      0xb800000000	                              mov eax, 0	      1241	pop3.c	FUNCTION_32
0x4001ae4	              0xc9	                                   leave	      1242	pop3.c	FUNCTION_32
0x4001ae5	              0xc3	                                     ret	      1242	pop3.c	FUNCTION_32
pop3_parse_custom_request	WHILE,0:ELSE,0:IF,1:SWITCH,0:CALL,1:DO,0:functions,0:FOR,0	30
0x4001eac	              0x55	                                push rbp	      1403	pop3.c	FUNCTION_39
0x4001ead	          0x4889e5	                            mov rbp, rsp	      1403	pop3.c	FUNCTION_39
0x4001eb0	        0x4883ec30	                           sub rsp, 0x30	      1403	pop3.c	FUNCTION_39
0x4001eb4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1403	pop3.c	FUNCTION_39
0x4001eb8	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1404	pop3.c	FUNCTION_39
0x4001ebf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1405	pop3.c	FUNCTION_39
0x4001ec3	          0x488b00	                    mov rax, qword [rax]	      1405	pop3.c	FUNCTION_39
0x4001ec6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1405	pop3.c	FUNCTION_39
0x4001eca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1406	pop3.c	FUNCTION_39
0x4001ece	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1406	pop3.c	FUNCTION_39
0x4001ed5	        0x488945f0	             mov qword [rbp - 0x10], rax	      1406	pop3.c	FUNCTION_39
0x4001ed9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1407	pop3.c	FUNCTION_39
0x4001edd	    0x488b80200800	           mov rax, qword [rax + 0x820] 	      1407	pop3.c	FUNCTION_39
0x4001ee4	        0x488945f8	                mov qword [rbp - 8], rax	      1407	pop3.c	FUNCTION_39
0x4001ee8	      0x48837df800	                  cmp qword [rbp - 8], 0	      1410	pop3.c	FUNCTION_39	IF_1
0x4001eed	            0x742f	                            je 0x4001f1e	      1410	pop3.c	FUNCTION_39	IF_1
0x4001eef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1411	pop3.c	FUNCTION_39	CALL_1
0x4001ef3	        0x488d5010	                   lea rdx, [rax + 0x10]	      1411	pop3.c	FUNCTION_39	CALL_1
0x4001ef7	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1411	pop3.c	FUNCTION_39	CALL_1
0x4001efb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1411	pop3.c	FUNCTION_39	CALL_1
0x4001eff	    0x41b901000000	                              mov r9d, 1	      1411	pop3.c	FUNCTION_39	CALL_1
0x4001f05	    0x41b800000000	                              mov r8d, 0	      1411	pop3.c	FUNCTION_39	CALL_1
0x4001f0b	          0x4889d1	                            mov rcx, rdx	      1411	pop3.c	FUNCTION_39	CALL_1
0x4001f0e	      0xba00000000	                              mov edx, 0	      1411	pop3.c	FUNCTION_39	CALL_1
0x4001f13	          0x4889c7	                            mov rdi, rax	      1411	pop3.c	FUNCTION_39	CALL_1
0x4001f16	      0xe800000000	                          call 0x4001f1b	      1411	pop3.c	FUNCTION_39	CALL_1
0x4001f1b	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1411	pop3.c	FUNCTION_39	CALL_1
0x4001f1e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1413	pop3.c	FUNCTION_39
0x4001f21	              0xc9	                                   leave	      1414	pop3.c	FUNCTION_39
0x4001f22	              0xc3	                                     ret	      1414	pop3.c	FUNCTION_39
pop3_perform_quit	WHILE,0:ELSE,0:IF,1:SWITCH,0:CALL,2:DO,0:functions,0:FOR,0	22
0x4000a5a	              0x55	                                push rbp	       594	pop3.c	FUNCTION_14
0x4000a5b	          0x4889e5	                            mov rbp, rsp	       594	pop3.c	FUNCTION_14
0x4000a5e	        0x4883ec20	                           sub rsp, 0x20	       594	pop3.c	FUNCTION_14
0x4000a62	        0x48897de8	             mov qword [rbp - 0x18], rdi	       594	pop3.c	FUNCTION_14
0x4000a66	    0xc745fc000000	                  mov dword [rbp - 4], 0	       595	pop3.c	FUNCTION_14
0x4000a6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       598	pop3.c	FUNCTION_14	CALL_1
0x4000a71	    0x4805b0050000	                          add rax, 0x5b0	       598	pop3.c	FUNCTION_14	CALL_1
0x4000a77	    0x488d15000000	                   lea rdx, [0x04000a7e]	       598	pop3.c	FUNCTION_14	CALL_1
0x4000a7e	    0x488d35000000	                   lea rsi, [0x04000a85]	       598	pop3.c	FUNCTION_14	CALL_1
0x4000a85	          0x4889c7	                            mov rdi, rax	       598	pop3.c	FUNCTION_14	CALL_1
0x4000a88	      0xb800000000	                              mov eax, 0	       598	pop3.c	FUNCTION_14	CALL_1
0x4000a8d	      0xe800000000	                          call 0x4000a92	       598	pop3.c	FUNCTION_14	CALL_1
0x4000a92	          0x8945fc	                mov dword [rbp - 4], eax	       598	pop3.c	FUNCTION_14	CALL_1
0x4000a95	        0x837dfc00	                  cmp dword [rbp - 4], 0	       600	pop3.c	FUNCTION_14	IF_1
0x4000a99	            0x7511	                           jne 0x4000aac	       600	pop3.c	FUNCTION_14	IF_1
0x4000a9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       601	pop3.c	FUNCTION_14	CALL_2
0x4000a9f	      0xbe0a000000	                            mov esi, 0xa	       601	pop3.c	FUNCTION_14	CALL_2
0x4000aa4	          0x4889c7	                            mov rdi, rax	       601	pop3.c	FUNCTION_14	CALL_2
0x4000aa7	      0xe86df8ffff	                          call sym.state	       601	pop3.c	FUNCTION_14	CALL_2
0x4000aac	          0x8b45fc	                mov eax, dword [rbp - 4]	       603	pop3.c	FUNCTION_14
0x4000aaf	              0xc9	                                   leave	       604	pop3.c	FUNCTION_14
0x4000ab0	              0xc3	                                     ret	       604	pop3.c	FUNCTION_14
pop3_getsock	WHILE,0:ELSE,0:IF,0:SWITCH,0:CALL,1:DO,0:functions,0:FOR,0	15
0x400174e	              0x55	                                push rbp	      1055	pop3.c	FUNCTION_27
0x400174f	          0x4889e5	                            mov rbp, rsp	      1055	pop3.c	FUNCTION_27
0x4001752	        0x4883ec20	                           sub rsp, 0x20	      1055	pop3.c	FUNCTION_27
0x4001756	        0x48897df8	                mov qword [rbp - 8], rdi	      1055	pop3.c	FUNCTION_27
0x400175a	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1055	pop3.c	FUNCTION_27
0x400175e	          0x8955ec	             mov dword [rbp - 0x14], edx	      1055	pop3.c	FUNCTION_27
0x4001761	        0x488b45f8	                mov rax, qword [rbp - 8]	      1056	pop3.c	FUNCTION_27	CALL_1
0x4001765	    0x488d88b00500	                  lea rcx, [rax + 0x5b0]	      1056	pop3.c	FUNCTION_27	CALL_1
0x400176c	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1056	pop3.c	FUNCTION_27	CALL_1
0x400176f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1056	pop3.c	FUNCTION_27	CALL_1
0x4001773	          0x4889c6	                            mov rsi, rax	      1056	pop3.c	FUNCTION_27	CALL_1
0x4001776	          0x4889cf	                            mov rdi, rcx	      1056	pop3.c	FUNCTION_27	CALL_1
0x4001779	      0xe800000000	                          call 0x400177e	      1056	pop3.c	FUNCTION_27	CALL_1
0x400177e	              0xc9	                                   leave	      1057	pop3.c	FUNCTION_27
0x400177f	              0xc3	                                     ret	      1057	pop3.c	FUNCTION_27
pop3_perform_upgrade_tls	WHILE,0:ELSE,0:IF,3:SWITCH,0:CALL,4:DO,0:functions,0:FOR,0	30
0x400041c	              0x55	                                push rbp	       359	pop3.c	FUNCTION_7
0x400041d	          0x4889e5	                            mov rbp, rsp	       359	pop3.c	FUNCTION_7
0x4000420	        0x4883ec20	                           sub rsp, 0x20	       359	pop3.c	FUNCTION_7
0x4000424	        0x48897de8	             mov qword [rbp - 0x18], rdi	       359	pop3.c	FUNCTION_7
0x4000428	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       360	pop3.c	FUNCTION_7
0x400042f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       361	pop3.c	FUNCTION_7
0x4000433	    0x4805b0050000	                          add rax, 0x5b0	       361	pop3.c	FUNCTION_7
0x4000439	        0x488945f8	                mov qword [rbp - 8], rax	       361	pop3.c	FUNCTION_7
0x400043d	    0xc745f4040000	                mov dword [rbp - 0xc], 4	       364	pop3.c	FUNCTION_7	CALL_1
0x4000444	        0x837df400	                cmp dword [rbp - 0xc], 0	       366	pop3.c	FUNCTION_7	IF_1
0x4000448	            0x7538	                           jne 0x4000482	       366	pop3.c	FUNCTION_7	IF_1
0x400044a	        0x488b45f8	                mov rax, qword [rbp - 8]	       367	pop3.c	FUNCTION_7	IF_1	IF_2
0x400044e	          0x8b4070	            mov eax, dword [rax + 0x70] 	       367	pop3.c	FUNCTION_7	IF_1	IF_2
0x4000451	          0x83f804	                              cmp eax, 4	       367	pop3.c	FUNCTION_7	IF_1	IF_2
0x4000454	            0x7411	                            je 0x4000467	       367	pop3.c	FUNCTION_7	IF_1	IF_2
0x4000456	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       368	pop3.c	FUNCTION_7	IF_1	CALL_2
0x400045a	      0xbe04000000	                              mov esi, 4	       368	pop3.c	FUNCTION_7	IF_1	CALL_2
0x400045f	          0x4889c7	                            mov rdi, rax	       368	pop3.c	FUNCTION_7	IF_1	CALL_2
0x4000462	      0xe8b2feffff	                          call sym.state	       368	pop3.c	FUNCTION_7	IF_1	CALL_2
0x4000467	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	pop3.c	FUNCTION_7	IF_1	IF_3
0x400046b	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       370	pop3.c	FUNCTION_7	IF_1	IF_3
0x400046f	            0x84c0	                             test al, al	       370	pop3.c	FUNCTION_7	IF_1	IF_3
0x4000471	            0x740f	                            je 0x4000482	       370	pop3.c	FUNCTION_7	IF_1	IF_3
0x4000473	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       372	pop3.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x4000477	          0x4889c7	                            mov rdi, rax	       372	pop3.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x400047a	      0xe8c0feffff	              call sym.pop3_perform_capa	       372	pop3.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x400047f	          0x8945f4	              mov dword [rbp - 0xc], eax	       372	pop3.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x4000482	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       376	pop3.c	FUNCTION_7
0x4000485	              0xc9	                                   leave	       377	pop3.c	FUNCTION_7
0x4000486	              0xc3	                                     ret	       377	pop3.c	FUNCTION_7
pop3_endofresp	WHILE,0:ELSE,1:IF,5:SWITCH,0:CALL,4:DO,0:functions,0:FOR,0	70
0x4000112	              0x55	                                push rbp	       198	pop3.c	FUNCTION_2
0x4000113	          0x4889e5	                            mov rbp, rsp	       198	pop3.c	FUNCTION_2
0x4000116	        0x4883ec30	                           sub rsp, 0x30	       198	pop3.c	FUNCTION_2
0x400011a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       198	pop3.c	FUNCTION_2
0x400011e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       198	pop3.c	FUNCTION_2
0x4000122	        0x488955d8	             mov qword [rbp - 0x28], rdx	       198	pop3.c	FUNCTION_2
0x4000126	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       198	pop3.c	FUNCTION_2
0x400012a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       199	pop3.c	FUNCTION_2
0x400012e	    0x4805b0050000	                          add rax, 0x5b0	       199	pop3.c	FUNCTION_2
0x4000134	        0x488945f8	                mov qword [rbp - 8], rax	       199	pop3.c	FUNCTION_2
0x4000138	      0x48837dd803	               cmp qword [rbp - 0x28], 3	       202	pop3.c	FUNCTION_2	IF_1	CALL_1
0x400013d	            0x7630	                           jbe 0x400016f	       202	pop3.c	FUNCTION_2	IF_1	CALL_1
0x400013f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       202	pop3.c	FUNCTION_2	IF_1	CALL_1
0x4000143	      0xba04000000	                              mov edx, 4	       202	pop3.c	FUNCTION_2	IF_1	CALL_1
0x4000148	          0x4889c6	                            mov rsi, rax	       202	pop3.c	FUNCTION_2	IF_1	CALL_1
0x400014b	    0x488d3d000000	                   lea rdi, [0x04000152]	       202	pop3.c	FUNCTION_2	IF_1	CALL_1
0x4000152	      0xe800000000	                          call 0x4000157	       202	pop3.c	FUNCTION_2	IF_1	CALL_1
0x4000157	            0x85c0	                           test eax, eax	       202	pop3.c	FUNCTION_2	IF_1	CALL_1
0x4000159	            0x7514	                           jne 0x400016f	       202	pop3.c	FUNCTION_2	IF_1	CALL_1
0x400015b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       203	pop3.c	FUNCTION_2	IF_1
0x400015f	    0xc7002d000000	                   mov dword [rax], 0x2d	       203	pop3.c	FUNCTION_2	IF_1
0x4000165	      0xb801000000	                              mov eax, 1	       205	pop3.c	FUNCTION_2	IF_1
0x400016a	      0xe9ab000000	                           jmp 0x400021a	       205	pop3.c	FUNCTION_2	IF_1
0x400016f	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	pop3.c	FUNCTION_2	IF_2
0x4000173	          0x8b4070	            mov eax, dword [rax + 0x70] 	       209	pop3.c	FUNCTION_2	IF_2
0x4000176	          0x83f802	                              cmp eax, 2	       209	pop3.c	FUNCTION_2	IF_2
0x4000179	            0x7539	                           jne 0x40001b4	       209	pop3.c	FUNCTION_2	IF_2
0x400017b	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       211	pop3.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000180	            0x7421	                            je 0x40001a3	       211	pop3.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000182	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       211	pop3.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000186	           0xfb610	                   movzx edx, byte [rax]	       211	pop3.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000189	    0x488d05000000	                   lea rax, [0x04000190]	       211	pop3.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000190	           0xfb600	                   movzx eax, byte [rax]	       211	pop3.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000193	            0x38c2	                              cmp dl, al	       211	pop3.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000195	            0x750c	                           jne 0x40001a3	       211	pop3.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000197	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       213	pop3.c	FUNCTION_2	IF_2	IF_3
0x400019b	    0xc7002b000000	                   mov dword [rax], 0x2b	       213	pop3.c	FUNCTION_2	IF_2	IF_3
0x40001a1	            0xeb0a	                           jmp 0x40001ad	       213	pop3.c	FUNCTION_2	IF_2	IF_3
0x40001a3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       216	pop3.c	FUNCTION_2	IF_2	ELSE_1
0x40001a7	    0xc7002a000000	                   mov dword [rax], 0x2a	       216	pop3.c	FUNCTION_2	IF_2	ELSE_1
0x40001ad	      0xb801000000	                              mov eax, 1	       218	pop3.c	FUNCTION_2	IF_2	ELSE_1
0x40001b2	            0xeb66	                           jmp 0x400021a	       218	pop3.c	FUNCTION_2	IF_2	ELSE_1
0x40001b4	      0x48837dd802	               cmp qword [rbp - 0x28], 2	       222	pop3.c	FUNCTION_2	ELSE_1	IF_4	CALL_3
0x40001b9	            0x762d	                           jbe 0x40001e8	       222	pop3.c	FUNCTION_2	ELSE_1	IF_4	CALL_3
0x40001bb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       222	pop3.c	FUNCTION_2	ELSE_1	IF_4	CALL_3
0x40001bf	      0xba03000000	                              mov edx, 3	       222	pop3.c	FUNCTION_2	ELSE_1	IF_4	CALL_3
0x40001c4	          0x4889c6	                            mov rsi, rax	       222	pop3.c	FUNCTION_2	ELSE_1	IF_4	CALL_3
0x40001c7	    0x488d3d000000	                   lea rdi, [0x040001ce]	       222	pop3.c	FUNCTION_2	ELSE_1	IF_4	CALL_3
0x40001ce	      0xe800000000	                          call 0x40001d3	       222	pop3.c	FUNCTION_2	ELSE_1	IF_4	CALL_3
0x40001d3	            0x85c0	                           test eax, eax	       222	pop3.c	FUNCTION_2	ELSE_1	IF_4	CALL_3
0x40001d5	            0x7511	                           jne 0x40001e8	       222	pop3.c	FUNCTION_2	ELSE_1	IF_4	CALL_3
0x40001d7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       223	pop3.c	FUNCTION_2	ELSE_1	IF_4
0x40001db	    0xc7002b000000	                   mov dword [rax], 0x2b	       223	pop3.c	FUNCTION_2	ELSE_1	IF_4
0x40001e1	      0xb801000000	                              mov eax, 1	       225	pop3.c	FUNCTION_2	ELSE_1	IF_4
0x40001e6	            0xeb32	                           jmp 0x400021a	       225	pop3.c	FUNCTION_2	ELSE_1	IF_4
0x40001e8	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       229	pop3.c	FUNCTION_2	IF_5	CALL_4
0x40001ed	            0x7426	                            je 0x4000215	       229	pop3.c	FUNCTION_2	IF_5	CALL_4
0x40001ef	    0x488d05000000	                   lea rax, [0x040001f6]	       229	pop3.c	FUNCTION_2	IF_5	CALL_4
0x40001f6	           0xfb610	                   movzx edx, byte [rax]	       229	pop3.c	FUNCTION_2	IF_5	CALL_4
0x40001f9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       229	pop3.c	FUNCTION_2	IF_5	CALL_4
0x40001fd	           0xfb600	                   movzx eax, byte [rax]	       229	pop3.c	FUNCTION_2	IF_5	CALL_4
0x4000200	            0x38c2	                              cmp dl, al	       229	pop3.c	FUNCTION_2	IF_5	CALL_4
0x4000202	            0x7511	                           jne 0x4000215	       229	pop3.c	FUNCTION_2	IF_5	CALL_4
0x4000204	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       230	pop3.c	FUNCTION_2	IF_5
0x4000208	    0xc7002a000000	                   mov dword [rax], 0x2a	       230	pop3.c	FUNCTION_2	IF_5
0x400020e	      0xb801000000	                              mov eax, 1	       232	pop3.c	FUNCTION_2	IF_5
0x4000213	            0xeb05	                           jmp 0x400021a	       232	pop3.c	FUNCTION_2	IF_5
0x4000215	      0xb800000000	                              mov eax, 0	       235	pop3.c	FUNCTION_2
0x400021a	              0xc9	                                   leave	       236	pop3.c	FUNCTION_2
0x400021b	              0xc3	                                     ret	       236	pop3.c	FUNCTION_2
pop3_perform_authentication	WHILE,0:ELSE,2:IF,7:SWITCH,0:CALL,7:DO,0:functions,0:FOR,0	98
0x4000785	              0x55	                                push rbp	       506	pop3.c	FUNCTION_12
0x4000786	          0x4889e5	                            mov rbp, rsp	       506	pop3.c	FUNCTION_12
0x4000789	        0x4883ec30	                           sub rsp, 0x30	       506	pop3.c	FUNCTION_12
0x400078d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       506	pop3.c	FUNCTION_12
0x4000791	    0x64488b042528	                mov rax, qword fs:[0x28]	       506	pop3.c	FUNCTION_12
0x400079a	        0x488945f8	                mov qword [rbp - 8], rax	       506	pop3.c	FUNCTION_12
0x400079e	            0x31c0	                            xor eax, eax	       506	pop3.c	FUNCTION_12
0x40007a0	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       507	pop3.c	FUNCTION_12
0x40007a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       508	pop3.c	FUNCTION_12
0x40007ab	    0x4805b0050000	                          add rax, 0x5b0	       508	pop3.c	FUNCTION_12
0x40007b1	        0x488945f0	             mov qword [rbp - 0x10], rax	       508	pop3.c	FUNCTION_12
0x40007b5	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       509	pop3.c	FUNCTION_12
0x40007bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       513	pop3.c	FUNCTION_12	IF_1	CALL_1
0x40007c0	    0x488d90880000	                   lea rdx, [rax + 0x88]	       513	pop3.c	FUNCTION_12	IF_1	CALL_1
0x40007c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       513	pop3.c	FUNCTION_12	IF_1	CALL_1
0x40007cb	          0x4889c6	                            mov rsi, rax	       513	pop3.c	FUNCTION_12	IF_1	CALL_1
0x40007ce	          0x4889d7	                            mov rdi, rdx	       513	pop3.c	FUNCTION_12	IF_1	CALL_1
0x40007d1	      0xe800000000	                          call 0x40007d6	       513	pop3.c	FUNCTION_12	IF_1	CALL_1
0x40007d6	          0x83f001	                              xor eax, 1	       513	pop3.c	FUNCTION_12	IF_1	CALL_1
0x40007d9	            0x84c0	                             test al, al	       513	pop3.c	FUNCTION_12	IF_1	CALL_1
0x40007db	            0x7419	                            je 0x40007f6	       513	pop3.c	FUNCTION_12	IF_1	CALL_1
0x40007dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       514	pop3.c	FUNCTION_12	IF_1	CALL_2
0x40007e1	      0xbe00000000	                              mov esi, 0	       514	pop3.c	FUNCTION_12	IF_1	CALL_2
0x40007e6	          0x4889c7	                            mov rdi, rax	       514	pop3.c	FUNCTION_12	IF_1	CALL_2
0x40007e9	      0xe82bfbffff	                          call sym.state	       514	pop3.c	FUNCTION_12	IF_1	CALL_2
0x40007ee	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       515	pop3.c	FUNCTION_12	IF_1
0x40007f1	      0xe9f4000000	                           jmp 0x40008ea	       515	pop3.c	FUNCTION_12	IF_1
0x40007f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       518	pop3.c	FUNCTION_12	IF_2
0x40007fa	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	       518	pop3.c	FUNCTION_12	IF_2
0x4000800	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       518	pop3.c	FUNCTION_12	IF_2
0x4000804	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       518	pop3.c	FUNCTION_12	IF_2
0x400080a	            0x21d0	                            and eax, edx	       518	pop3.c	FUNCTION_12	IF_2
0x400080c	          0x83e004	                              and eax, 4	       518	pop3.c	FUNCTION_12	IF_2
0x400080f	            0x85c0	                           test eax, eax	       518	pop3.c	FUNCTION_12	IF_2
0x4000811	            0x7445	                            je 0x4000858	       518	pop3.c	FUNCTION_12	IF_2
0x4000813	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       520	pop3.c	FUNCTION_12	IF_2	CALL_3
0x4000817	    0x488db8880000	                   lea rdi, [rax + 0x88]	       520	pop3.c	FUNCTION_12	IF_2	CALL_3
0x400081e	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       520	pop3.c	FUNCTION_12	IF_2	CALL_3
0x4000822	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       520	pop3.c	FUNCTION_12	IF_2	CALL_3
0x4000826	          0x4889d1	                            mov rcx, rdx	       520	pop3.c	FUNCTION_12	IF_2	CALL_3
0x4000829	      0xba00000000	                              mov edx, 0	       520	pop3.c	FUNCTION_12	IF_2	CALL_3
0x400082e	          0x4889c6	                            mov rsi, rax	       520	pop3.c	FUNCTION_12	IF_2	CALL_3
0x4000831	      0xe800000000	                          call 0x4000836	       520	pop3.c	FUNCTION_12	IF_2	CALL_3
0x4000836	          0x8945ec	             mov dword [rbp - 0x14], eax	       520	pop3.c	FUNCTION_12	IF_2	CALL_3
0x4000839	        0x837dec00	               cmp dword [rbp - 0x14], 0	       522	pop3.c	FUNCTION_12	IF_2	IF_3
0x400083d	            0x7519	                           jne 0x4000858	       522	pop3.c	FUNCTION_12	IF_2	IF_3
0x400083f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       523	pop3.c	FUNCTION_12	IF_2	IF_3	IF_4
0x4000842	          0x83f801	                              cmp eax, 1	       523	pop3.c	FUNCTION_12	IF_2	IF_3	IF_4
0x4000845	            0x7511	                           jne 0x4000858	       523	pop3.c	FUNCTION_12	IF_2	IF_3	IF_4
0x4000847	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       524	pop3.c	FUNCTION_12	IF_2	IF_3	IF_4
0x400084b	      0xbe05000000	                              mov esi, 5	       524	pop3.c	FUNCTION_12	IF_2	IF_3	IF_4
0x4000850	          0x4889c7	                            mov rdi, rax	       524	pop3.c	FUNCTION_12	IF_2	IF_3	IF_4
0x4000853	      0xe8c1faffff	                          call sym.state	       524	pop3.c	FUNCTION_12	IF_2	IF_3	IF_4
0x4000858	        0x837dec00	               cmp dword [rbp - 0x14], 0	       527	pop3.c	FUNCTION_12	IF_5
0x400085c	     0xf8585000000	                           jne 0x40008e7	       527	pop3.c	FUNCTION_12	IF_5
0x4000862	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       527	pop3.c	FUNCTION_12	IF_5
0x4000865	            0x85c0	                           test eax, eax	       527	pop3.c	FUNCTION_12	IF_5
0x4000867	            0x757e	                           jne 0x40008e7	       527	pop3.c	FUNCTION_12	IF_5
0x4000869	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       529	pop3.c	FUNCTION_12	IF_5	IF_6
0x400086d	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	       529	pop3.c	FUNCTION_12	IF_5	IF_6
0x4000873	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       529	pop3.c	FUNCTION_12	IF_5	IF_6
0x4000877	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       529	pop3.c	FUNCTION_12	IF_5	IF_6
0x400087d	            0x21d0	                            and eax, edx	       529	pop3.c	FUNCTION_12	IF_5	IF_6
0x400087f	          0x83e002	                              and eax, 2	       529	pop3.c	FUNCTION_12	IF_5	IF_6
0x4000882	            0x85c0	                           test eax, eax	       529	pop3.c	FUNCTION_12	IF_5	IF_6
0x4000884	            0x7411	                            je 0x4000897	       529	pop3.c	FUNCTION_12	IF_5	IF_6
0x4000886	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       531	pop3.c	FUNCTION_12	IF_5	CALL_5
0x400088a	          0x4889c7	                            mov rdi, rax	       531	pop3.c	FUNCTION_12	IF_5	CALL_5
0x400088d	      0xe895fcffff	              call sym.pop3_perform_apop	       531	pop3.c	FUNCTION_12	IF_5	CALL_5
0x4000892	          0x8945ec	             mov dword [rbp - 0x14], eax	       531	pop3.c	FUNCTION_12	IF_5	CALL_5
0x4000895	            0xeb50	                           jmp 0x40008e7	       531	pop3.c	FUNCTION_12	IF_5	CALL_5
0x4000897	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       534	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x400089b	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	       534	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       534	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008a5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       534	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008ab	            0x21d0	                            and eax, edx	       534	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008ad	          0x83e001	                              and eax, 1	       534	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008b0	            0x85c0	                           test eax, eax	       534	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008b2	            0x7411	                            je 0x40008c5	       534	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       536	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008b8	          0x4889c7	                            mov rdi, rax	       536	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008bb	      0xe8c7fbffff	              call sym.pop3_perform_user	       536	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008c0	          0x8945ec	             mov dword [rbp - 0x14], eax	       536	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008c3	            0xeb22	                           jmp 0x40008e7	       536	pop3.c	FUNCTION_12	IF_5	ELSE_1	IF_7
0x40008c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       539	pop3.c	FUNCTION_12	IF_5	ELSE_2	CALL_7
0x40008c9	          0x488b00	                    mov rax, qword [rax]	       539	pop3.c	FUNCTION_12	IF_5	ELSE_2	CALL_7
0x40008cc	    0x488d35000000	                   lea rsi, [0x040008d3]	       539	pop3.c	FUNCTION_12	IF_5	ELSE_2	CALL_7
0x40008d3	          0x4889c7	                            mov rdi, rax	       539	pop3.c	FUNCTION_12	IF_5	ELSE_2	CALL_7
0x40008d6	      0xb800000000	                              mov eax, 0	       539	pop3.c	FUNCTION_12	IF_5	ELSE_2	CALL_7
0x40008db	      0xe800000000	                          call 0x40008e0	       539	pop3.c	FUNCTION_12	IF_5	ELSE_2	CALL_7
0x40008e0	    0xc745ec430000	           mov dword [rbp - 0x14], 0x43 	       540	pop3.c	FUNCTION_12	IF_5	ELSE_2
0x40008e7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       544	pop3.c	FUNCTION_12
0x40008ea	        0x488b4df8	                mov rcx, qword [rbp - 8]	       545	pop3.c	FUNCTION_12
0x40008ee	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       545	pop3.c	FUNCTION_12
0x40008f7	            0x7405	                            je 0x40008fe	       545	pop3.c	FUNCTION_12
0x40008f9	      0xe800000000	                          call 0x40008fe	       545	pop3.c	FUNCTION_12
0x40008fe	              0xc9	                                   leave	       545	pop3.c	FUNCTION_12
0x40008ff	              0xc3	                                     ret	       545	pop3.c	FUNCTION_12
pop3_perform	WHILE,0:ELSE,0:IF,3:SWITCH,0:CALL,6:DO,0:functions,0:FOR,0	41
0x4001929	              0x55	                                push rbp	      1151	pop3.c	FUNCTION_30
0x400192a	          0x4889e5	                            mov rbp, rsp	      1151	pop3.c	FUNCTION_30
0x400192d	        0x4883ec30	                           sub rsp, 0x30	      1151	pop3.c	FUNCTION_30
0x4001931	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1151	pop3.c	FUNCTION_30
0x4001935	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1151	pop3.c	FUNCTION_30
0x4001939	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1151	pop3.c	FUNCTION_30
0x400193d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1153	pop3.c	FUNCTION_30
0x4001944	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1154	pop3.c	FUNCTION_30
0x4001948	          0x488b00	                    mov rax, qword [rax]	      1154	pop3.c	FUNCTION_30
0x400194b	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1154	pop3.c	FUNCTION_30
0x4001952	        0x488945f8	                mov qword [rbp - 8], rax	      1154	pop3.c	FUNCTION_30
0x4001956	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1158	pop3.c	FUNCTION_30	IF_1
0x400195a	          0x488b00	                    mov rax, qword [rax]	      1158	pop3.c	FUNCTION_30	IF_1
0x400195d	     0xfb680a10700	          movzx eax, byte [rax + 0x7a1] 	      1158	pop3.c	FUNCTION_30	IF_1
0x4001964	            0x84c0	                             test al, al	      1158	pop3.c	FUNCTION_30	IF_1
0x4001966	            0x740a	                            je 0x4001972	      1158	pop3.c	FUNCTION_30	IF_1
0x4001968	        0x488b45f8	                mov rax, qword [rbp - 8]	      1160	pop3.c	FUNCTION_30	IF_1
0x400196c	    0xc70001000000	                      mov dword [rax], 1	      1160	pop3.c	FUNCTION_30	IF_1
0x4001972	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1163	pop3.c	FUNCTION_30
0x4001976	          0xc60000	                       mov byte [rax], 0	      1163	pop3.c	FUNCTION_30
0x4001979	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1166	pop3.c	FUNCTION_30	CALL_3
0x400197d	          0x4889c7	                            mov rdi, rax	      1166	pop3.c	FUNCTION_30	CALL_3
0x4001980	      0xe87befffff	           call sym.pop3_perform_command	      1166	pop3.c	FUNCTION_30	CALL_3
0x4001985	          0x8945f4	              mov dword [rbp - 0xc], eax	      1166	pop3.c	FUNCTION_30	CALL_3
0x4001988	        0x837df400	                cmp dword [rbp - 0xc], 0	      1167	pop3.c	FUNCTION_30	IF_2
0x400198c	            0x7405	                            je 0x4001993	      1167	pop3.c	FUNCTION_30	IF_2
0x400198e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1168	pop3.c	FUNCTION_30	IF_2
0x4001991	            0xeb2a	                           jmp 0x40019bd	      1168	pop3.c	FUNCTION_30	IF_2
0x4001993	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1171	pop3.c	FUNCTION_30	CALL_4
0x4001997	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1171	pop3.c	FUNCTION_30	CALL_4
0x400199b	          0x4889d6	                            mov rsi, rdx	      1171	pop3.c	FUNCTION_30	CALL_4
0x400199e	          0x4889c7	                            mov rdi, rax	      1171	pop3.c	FUNCTION_30	CALL_4
0x40019a1	      0xe85ffcffff	           call sym.pop3_multi_statemach	      1171	pop3.c	FUNCTION_30	CALL_4
0x40019a6	          0x8945f4	              mov dword [rbp - 0xc], eax	      1171	pop3.c	FUNCTION_30	CALL_4
0x40019a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1173	pop3.c	FUNCTION_30
0x40019ad	     0xfb6905d0300	          movzx edx, byte [rax + 0x35d] 	      1173	pop3.c	FUNCTION_30
0x40019b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1173	pop3.c	FUNCTION_30
0x40019b8	            0x8810	                      mov byte [rax], dl	      1173	pop3.c	FUNCTION_30
0x40019ba	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1178	pop3.c	FUNCTION_30
0x40019bd	              0xc9	                                   leave	      1179	pop3.c	FUNCTION_30
0x40019be	              0xc3	                                     ret	      1179	pop3.c	FUNCTION_30
