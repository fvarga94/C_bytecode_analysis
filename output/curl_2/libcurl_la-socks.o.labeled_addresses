Curl_SOCKS5	ELSE,14:SWITCH,0:CALL,62:IF,53:DO,0:WHILE,0:FOR,2:functions,0	612
0x4000718	            0x4157	                                push r15	       359	socks.c	FUNCTION_3
0x400071a	            0x4156	                                push r14	       359	socks.c	FUNCTION_3
0x400071c	            0x4155	                                push r13	       359	socks.c	FUNCTION_3
0x400071e	            0x4154	                                push r12	       359	socks.c	FUNCTION_3
0x4000720	              0x55	                                push rbp	       359	socks.c	FUNCTION_3
0x4000721	              0x53	                                push rbx	       359	socks.c	FUNCTION_3
0x4000722	    0x4881ecf80200	                          sub rsp, 0x2f8	       359	socks.c	FUNCTION_3
0x4000729	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       359	socks.c	FUNCTION_3
0x400072e	      0x4889742418	             mov qword [rsp + 0x18], rsi	       359	socks.c	FUNCTION_3
0x4000733	      0x4889542408	                mov qword [rsp + 8], rdx	       359	socks.c	FUNCTION_3
0x4000738	        0x894c2420	             mov dword [rsp + 0x20], ecx	       359	socks.c	FUNCTION_3
0x400073c	          0x4c89cd	                             mov rbp, r9	       359	socks.c	FUNCTION_3
0x400073f	    0x64488b042528	                mov rax, qword fs:[0x28]	       359	socks.c	FUNCTION_3
0x4000748	    0x48898424e802	            mov qword [rsp + 0x2e8], rax	       359	socks.c	FUNCTION_3
0x4000750	            0x31c0	                            xor eax, eax	       359	socks.c	FUNCTION_3
0x4000752	          0x4d63c0	                          movsxd r8, r8d	       383	socks.c	FUNCTION_3
0x4000755	    0x478bb4815802	    mov r14d, dword [r9 + r8*4 + 0x258] 	       383	socks.c	FUNCTION_3
0x400075d	          0x4d8b21	                     mov r12, qword [r9]	       384	socks.c	FUNCTION_3
0x4000760	    0x458ba9380100	           mov r13d, dword [r9 + 0x138] 	       387	socks.c	FUNCTION_3
0x4000767	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       388	socks.c	FUNCTION_3	CALL_1
0x400076e	          0x4889d7	                            mov rdi, rdx	       388	socks.c	FUNCTION_3	CALL_1
0x4000771	            0xf2ae	              repne scasb al, byte [rdi]	       388	socks.c	FUNCTION_3	CALL_1
0x4000773	          0x48f7d1	                                 not rcx	       388	socks.c	FUNCTION_3	CALL_1
0x4000776	        0x488d59ff	                      lea rbx, [rcx - 1]	       388	socks.c	FUNCTION_3	CALL_1
0x400077a	    0x4d8bbc244802	           mov r15, qword [r12 + 0x248] 	       390	socks.c	FUNCTION_3
0x4000782	    0x4180b99e0300	                cmp byte [r9 + 0x39e], 0	       393	socks.c	FUNCTION_3	IF_1
0x400078a	            0x7413	                            je 0x400079f	       393	socks.c	FUNCTION_3	IF_1
0x400078c	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000790	    0x488d35000000	                   lea rsi, [0x04000797]	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000797	          0x4c89e7	                            mov rdi, r12	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x400079a	      0xe800000000	                          call 0x400079f	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x400079f	        0x4183fd05	                             cmp r13d, 5	       398	socks.c	FUNCTION_3	IF_2
0x40007a3	            0x7409	                            je 0x40007ae	       398	socks.c	FUNCTION_3	IF_2
0x40007a5	    0x4881fbff0000	                           cmp rbx, 0xff	       398	socks.c	FUNCTION_3	IF_2
0x40007ac	            0x770b	                            ja 0x40007b9	       398	socks.c	FUNCTION_3	IF_2
0x40007ae	        0x4183fd05	                             cmp r13d, 5	       386	socks.c	FUNCTION_3
0x40007b2	       0xf94442427	                  sete byte [rsp + 0x27]	       386	socks.c	FUNCTION_3
0x40007b7	            0xeb1d	                           jmp 0x40007d6	       386	socks.c	FUNCTION_3
0x40007b9	          0x4889da	                            mov rdx, rbx	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x40007bc	    0x488d35000000	                   lea rsi, [0x040007c3]	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x40007c3	        0x488b7d00	                    mov rdi, qword [rbp]	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x40007c7	      0xb800000000	                              mov eax, 0	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x40007cc	      0xe800000000	                          call 0x40007d1	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x40007d1	      0xc644242701	                mov byte [rsp + 0x27], 1	       401	socks.c	FUNCTION_3	IF_2
0x40007d6	      0xba01000000	                              mov edx, 1	       405	socks.c	FUNCTION_3	CALL_4
0x40007db	      0xbe00000000	                              mov esi, 0	       405	socks.c	FUNCTION_3	CALL_4
0x40007e0	          0x4c89e7	                            mov rdi, r12	       405	socks.c	FUNCTION_3	CALL_4
0x40007e3	      0xe800000000	                          call 0x40007e8	       405	socks.c	FUNCTION_3	CALL_4
0x40007e8	          0x4989c5	                            mov r13, rax	       405	socks.c	FUNCTION_3	CALL_4
0x40007eb	          0x4885c0	                           test rax, rax	       407	socks.c	FUNCTION_3	IF_3
0x40007ee	            0x791e	                           jns 0x400080e	       407	socks.c	FUNCTION_3	IF_3
0x40007f0	    0x488d35000000	                   lea rsi, [0x040007f7]	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x40007f7	          0x4c89e7	                            mov rdi, r12	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x40007fa	      0xb800000000	                              mov eax, 0	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x40007ff	      0xe800000000	                          call 0x4000804	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x4000804	      0xb81c000000	                           mov eax, 0x1c	       410	socks.c	FUNCTION_3	IF_3
0x4000809	      0xe962090000	                           jmp 0x4001170	       410	socks.c	FUNCTION_3	IF_3
0x400080e	      0xbe01000000	                              mov esi, 1	       413	socks.c	FUNCTION_3	CALL_6
0x4000813	          0x4489f7	                           mov edi, r14d	       413	socks.c	FUNCTION_3	CALL_6
0x4000816	      0xe800000000	                          call 0x400081b	       413	socks.c	FUNCTION_3	CALL_6
0x400081b	          0x4c89e9	                            mov rcx, r13	       416	socks.c	FUNCTION_3	CALL_7
0x400081e	          0x4489f2	                           mov edx, r14d	       416	socks.c	FUNCTION_3	CALL_7
0x4000821	      0xbeffffffff	                     mov esi, 0xffffffff	       416	socks.c	FUNCTION_3	CALL_7
0x4000826	            0x89f7	                            mov edi, esi	       416	socks.c	FUNCTION_3	CALL_7
0x4000828	      0xe800000000	                          call 0x400082d	       416	socks.c	FUNCTION_3	CALL_7
0x400082d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       418	socks.c	FUNCTION_3	IF_4
0x4000830	            0x751f	                           jne 0x4000851	       418	socks.c	FUNCTION_3	IF_4
0x4000832	    0x488d35000000	                   lea rsi, [0x04000839]	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x4000839	        0x488b7d00	                    mov rdi, qword [rbp]	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x400083d	      0xb800000000	                              mov eax, 0	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x4000842	      0xe800000000	                          call 0x4000847	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x4000847	      0xb807000000	                              mov eax, 7	       420	socks.c	FUNCTION_3	IF_4
0x400084c	      0xe91f090000	                           jmp 0x4001170	       420	socks.c	FUNCTION_3	IF_4
0x4000851	            0x85c0	                           test eax, eax	       422	socks.c	FUNCTION_3	IF_5
0x4000853	            0x751a	                           jne 0x400086f	       422	socks.c	FUNCTION_3	IF_5
0x4000855	    0x488d35000000	                   lea rsi, [0x0400085c]	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x400085c	        0x488b7d00	                    mov rdi, qword [rbp]	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x4000860	      0xe800000000	                          call 0x4000865	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x4000865	      0xb81c000000	                           mov eax, 0x1c	       424	socks.c	FUNCTION_3	IF_5
0x400086a	      0xe901090000	                           jmp 0x4001170	       424	socks.c	FUNCTION_3	IF_5
0x400086f	            0xa804	                              test al, 4	       427	socks.c	FUNCTION_3	IF_6
0x4000871	            0x741f	                            je 0x4000892	       427	socks.c	FUNCTION_3	IF_6
0x4000873	    0x488d35000000	                   lea rsi, [0x0400087a]	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x400087a	        0x488b7d00	                    mov rdi, qword [rbp]	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x400087e	      0xb800000000	                              mov eax, 0	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000883	      0xe800000000	                          call 0x4000888	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000888	      0xb807000000	                              mov eax, 7	       429	socks.c	FUNCTION_3	IF_6
0x400088d	      0xe9de080000	                           jmp 0x4001170	       429	socks.c	FUNCTION_3	IF_6
0x4000892	    0x49f7c7faffff	            test r15, 0xfffffffffffffffa	       432	socks.c	FUNCTION_3	IF_7
0x4000899	            0x7418	                            je 0x40008b3	       432	socks.c	FUNCTION_3	IF_7
0x400089b	          0x4c89fa	                            mov rdx, r15	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x400089e	    0x488d35000000	                   lea rsi, [0x040008a5]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x40008a5	        0x488b7d00	                    mov rdi, qword [rbp]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x40008a9	      0xb800000000	                              mov eax, 0	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x40008ae	      0xe800000000	                          call 0x40008b3	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x40008b3	        0x41f6c701	                            test r15b, 1	       436	socks.c	FUNCTION_3	IF_8
0x40008b7	     0xf84c8080000	                            je 0x4001185	       436	socks.c	FUNCTION_3	IF_8
0x40008bd	    0xc68424900000	                mov byte [rsp + 0x90], 5	       445	socks.c	FUNCTION_3
0x40008c5	    0xc68424920000	                mov byte [rsp + 0x92], 0	       447	socks.c	FUNCTION_3
0x40008cd	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       450	socks.c	FUNCTION_3	IF_11
0x40008d3	            0x740f	                            je 0x40008e4	       450	socks.c	FUNCTION_3	IF_11
0x40008d5	    0xc68424930000	                mov byte [rsp + 0x93], 2	       451	socks.c	FUNCTION_3	IF_11
0x40008dd	      0xb804000000	                              mov eax, 4	       451	socks.c	FUNCTION_3	IF_11
0x40008e2	            0xeb05	                           jmp 0x40008e9	       451	socks.c	FUNCTION_3	IF_11
0x40008e4	      0xb803000000	                              mov eax, 3	       451	socks.c	FUNCTION_3	IF_11
0x40008e9	          0x83e802	                              sub eax, 2	       453	socks.c	FUNCTION_3
0x40008ec	    0x888424910000	               mov byte [rsp + 0x91], al	       453	socks.c	FUNCTION_3
0x40008f3	      0xbe00000000	                              mov esi, 0	       455	socks.c	FUNCTION_3	CALL_12
0x40008f8	          0x4489f7	                           mov edi, r14d	       455	socks.c	FUNCTION_3	CALL_12
0x40008fb	      0xe800000000	                          call 0x4000900	       455	socks.c	FUNCTION_3	CALL_12
0x4000900	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       457	socks.c	FUNCTION_3	CALL_13
0x4000904	      0x488b542408	                mov rdx, qword [rsp + 8]	       457	socks.c	FUNCTION_3	CALL_13
0x4000909	    0x488d35000000	                   lea rsi, [0x04000910]	       457	socks.c	FUNCTION_3	CALL_13
0x4000910	          0x4c89e7	                            mov rdi, r12	       457	socks.c	FUNCTION_3	CALL_13
0x4000913	      0xb800000000	                              mov eax, 0	       457	socks.c	FUNCTION_3	CALL_13
0x4000918	      0xe800000000	                          call 0x400091d	       457	socks.c	FUNCTION_3	CALL_13
0x400091d	     0xfb684249100	           movzx eax, byte [rsp + 0x91] 	       459	socks.c	FUNCTION_3	CALL_14
0x4000925	        0x488d4802	                      lea rcx, [rax + 2]	       459	socks.c	FUNCTION_3	CALL_14
0x4000929	    0x488d94249000	                   lea rdx, [rsp + 0x90]	       459	socks.c	FUNCTION_3	CALL_14
0x4000931	      0x4c8d442440	                    lea r8, [rsp + 0x40]	       459	socks.c	FUNCTION_3	CALL_14
0x4000936	          0x4489f6	                           mov esi, r14d	       459	socks.c	FUNCTION_3	CALL_14
0x4000939	          0x4889ef	                            mov rdi, rbp	       459	socks.c	FUNCTION_3	CALL_14
0x400093c	      0xe800000000	                          call 0x4000941	       459	socks.c	FUNCTION_3	CALL_14
0x4000941	            0x85c0	                           test eax, eax	       461	socks.c	FUNCTION_3	IF_12
0x4000943	            0x7513	                           jne 0x4000958	       461	socks.c	FUNCTION_3	IF_12
0x4000945	     0xfb684249100	           movzx eax, byte [rsp + 0x91] 	       461	socks.c	FUNCTION_3	IF_12
0x400094d	        0x488d4002	                      lea rax, [rax + 2]	       461	socks.c	FUNCTION_3	IF_12
0x4000951	      0x483b442440	            cmp rax, qword [rsp + 0x40] 	       461	socks.c	FUNCTION_3	IF_12
0x4000956	            0x741e	                            je 0x4000976	       461	socks.c	FUNCTION_3	IF_12
0x4000958	    0x488d35000000	                   lea rsi, [0x0400095f]	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x400095f	          0x4c89e7	                            mov rdi, r12	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000962	      0xb800000000	                              mov eax, 0	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000967	      0xe800000000	                          call 0x400096c	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x400096c	      0xb807000000	                              mov eax, 7	       463	socks.c	FUNCTION_3	IF_12
0x4000971	      0xe9fa070000	                           jmp 0x4001170	       463	socks.c	FUNCTION_3	IF_12
0x4000976	      0xbe01000000	                              mov esi, 1	       466	socks.c	FUNCTION_3	CALL_16
0x400097b	          0x4489f7	                           mov edi, r14d	       466	socks.c	FUNCTION_3	CALL_16
0x400097e	      0xe800000000	                          call 0x4000983	       466	socks.c	FUNCTION_3	CALL_16
0x4000983	          0x4c89e9	                            mov rcx, r13	       468	socks.c	FUNCTION_3	CALL_17
0x4000986	      0xbaffffffff	                     mov edx, 0xffffffff	       468	socks.c	FUNCTION_3	CALL_17
0x400098b	            0x89d6	                            mov esi, edx	       468	socks.c	FUNCTION_3	CALL_17
0x400098d	          0x4489f7	                           mov edi, r14d	       468	socks.c	FUNCTION_3	CALL_17
0x4000990	      0xe800000000	                          call 0x4000995	       468	socks.c	FUNCTION_3	CALL_17
0x4000995	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       470	socks.c	FUNCTION_3	IF_13
0x4000998	            0x751f	                           jne 0x40009b9	       470	socks.c	FUNCTION_3	IF_13
0x400099a	    0x488d35000000	                   lea rsi, [0x040009a1]	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x40009a1	        0x488b7d00	                    mov rdi, qword [rbp]	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x40009a5	      0xb800000000	                              mov eax, 0	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x40009aa	      0xe800000000	                          call 0x40009af	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x40009af	      0xb807000000	                              mov eax, 7	       472	socks.c	FUNCTION_3	IF_13
0x40009b4	      0xe9b7070000	                           jmp 0x4001170	       472	socks.c	FUNCTION_3	IF_13
0x40009b9	            0x85c0	                           test eax, eax	       474	socks.c	FUNCTION_3	IF_14
0x40009bb	            0x751a	                           jne 0x40009d7	       474	socks.c	FUNCTION_3	IF_14
0x40009bd	    0x488d35000000	                   lea rsi, [0x040009c4]	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x40009c4	        0x488b7d00	                    mov rdi, qword [rbp]	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x40009c8	      0xe800000000	                          call 0x40009cd	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x40009cd	      0xb81c000000	                           mov eax, 0x1c	       476	socks.c	FUNCTION_3	IF_14
0x40009d2	      0xe999070000	                           jmp 0x4001170	       476	socks.c	FUNCTION_3	IF_14
0x40009d7	            0xa804	                              test al, 4	       479	socks.c	FUNCTION_3	IF_15
0x40009d9	            0x741f	                            je 0x40009fa	       479	socks.c	FUNCTION_3	IF_15
0x40009db	    0x488d35000000	                   lea rsi, [0x040009e2]	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x40009e2	        0x488b7d00	                    mov rdi, qword [rbp]	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x40009e6	      0xb800000000	                              mov eax, 0	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x40009eb	      0xe800000000	                          call 0x40009f0	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x40009f0	      0xb838000000	                           mov eax, 0x38	       481	socks.c	FUNCTION_3	IF_15
0x40009f5	      0xe976070000	                           jmp 0x4001170	       481	socks.c	FUNCTION_3	IF_15
0x40009fa	      0xbe00000000	                              mov esi, 0	       484	socks.c	FUNCTION_3	CALL_21
0x40009ff	          0x4489f7	                           mov edi, r14d	       484	socks.c	FUNCTION_3	CALL_21
0x4000a02	      0xe800000000	                          call 0x4000a07	       484	socks.c	FUNCTION_3	CALL_21
0x4000a07	    0x488d94249000	                   lea rdx, [rsp + 0x90]	       486	socks.c	FUNCTION_3	CALL_22
0x4000a0f	      0x4c8d442438	                    lea r8, [rsp + 0x38]	       486	socks.c	FUNCTION_3	CALL_22
0x4000a14	      0xb902000000	                              mov ecx, 2	       486	socks.c	FUNCTION_3	CALL_22
0x4000a19	          0x4489f6	                           mov esi, r14d	       486	socks.c	FUNCTION_3	CALL_22
0x4000a1c	          0x4889ef	                            mov rdi, rbp	       486	socks.c	FUNCTION_3	CALL_22
0x4000a1f	      0xe800000000	                          call 0x4000a24	       486	socks.c	FUNCTION_3	CALL_22
0x4000a24	            0x85c0	                           test eax, eax	       487	socks.c	FUNCTION_3	IF_16
0x4000a26	            0x7508	                           jne 0x4000a30	       487	socks.c	FUNCTION_3	IF_16
0x4000a28	    0x48837c243802	               cmp qword [rsp + 0x38], 2	       487	socks.c	FUNCTION_3	IF_16
0x4000a2e	            0x741e	                            je 0x4000a4e	       487	socks.c	FUNCTION_3	IF_16
0x4000a30	    0x488d35000000	                   lea rsi, [0x04000a37]	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000a37	          0x4c89e7	                            mov rdi, r12	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000a3a	      0xb800000000	                              mov eax, 0	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000a3f	      0xe800000000	                          call 0x4000a44	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000a44	      0xb807000000	                              mov eax, 7	       489	socks.c	FUNCTION_3	IF_16
0x4000a49	      0xe922070000	                           jmp 0x4001170	       489	socks.c	FUNCTION_3	IF_16
0x4000a4e	    0x80bc24900000	                cmp byte [rsp + 0x90], 5	       492	socks.c	FUNCTION_3	IF_17
0x4000a56	            0x741e	                            je 0x4000a76	       492	socks.c	FUNCTION_3	IF_17
0x4000a58	    0x488d35000000	                   lea rsi, [0x04000a5f]	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000a5f	          0x4c89e7	                            mov rdi, r12	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000a62	      0xb800000000	                              mov eax, 0	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000a67	      0xe800000000	                          call 0x4000a6c	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000a6c	      0xb807000000	                              mov eax, 7	       494	socks.c	FUNCTION_3	IF_17
0x4000a71	      0xe9fa060000	                           jmp 0x4001170	       494	socks.c	FUNCTION_3	IF_17
0x4000a76	     0xfb684249100	           movzx eax, byte [rsp + 0x91] 	       496	socks.c	FUNCTION_3	IF_18
0x4000a7e	            0x84c0	                             test al, al	       496	socks.c	FUNCTION_3	IF_18
0x4000a80	     0xf841d020000	                            je 0x4000ca3	       496	socks.c	FUNCTION_3	IF_18
0x4000a86	            0x3c02	                               cmp al, 2	       509	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000a88	     0xf8586010000	                           jne 0x4000c14	       509	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000a8e	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000a93	          0x4c89df	                            mov rdi, r11	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000a96	          0x4d85db	                           test r11, r11	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000a99	           0xf95c2	                                setne dl	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000a9c	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000aa1	          0x4d85d2	                           test r10, r10	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000aa4	       0xf95442410	                 setne byte [rsp + 0x10]	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000aa9	       0xfb6442410	           movzx eax, byte [rsp + 0x10] 	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000aae	            0x84d2	                             test dl, dl	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000ab0	     0xf84f2060000	                            je 0x40011a8	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000ab6	            0x84c0	                             test al, al	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000ab8	     0xf84ea060000	                            je 0x40011a8	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000abe	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000ac5	      0xb800000000	                              mov eax, 0	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000aca	          0x4889f1	                            mov rcx, rsi	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000acd	            0xf2ae	              repne scasb al, byte [rdi]	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000acf	          0x48f7d1	                                 not rcx	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000ad2	        0x4c8d2c31	                    lea r13, [rcx + rsi]	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000ad6	          0x4889f1	                            mov rcx, rsi	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000ad9	          0x4c89d7	                            mov rdi, r10	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000adc	            0xf2ae	              repne scasb al, byte [rdi]	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000ade	          0x4889c8	                            mov rax, rcx	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000ae1	          0x48f7d0	                                 not rax	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000ae4	        0x4c8d3c30	                    lea r15, [rax + rsi]	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000ae8	    0xc68424900000	                mov byte [rsp + 0x90], 1	       529	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000af0	    0x4488ac249100	             mov byte [rsp + 0x91], r13b	       530	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000af8	          0x4d85ed	                           test r13, r13	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x4000afb	            0x741c	                            je 0x4000b19	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x4000afd	            0x84d2	                             test dl, dl	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x4000aff	            0x7418	                            je 0x4000b19	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x4000b01	    0x488dbc249200	                   lea rdi, [rsp + 0x92]	        53	string3.h	FUNCTION_4	CALL_3
0x4000b09	      0xb956020000	                          mov ecx, 0x256	        53	string3.h	FUNCTION_4	CALL_3
0x4000b0e	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_4	CALL_3
0x4000b11	          0x4c89de	                            mov rsi, r11	        53	string3.h	FUNCTION_4	CALL_3
0x4000b14	      0xe800000000	                          call 0x4000b19	        53	string3.h	FUNCTION_4	CALL_3
0x4000b19	        0x498d4503	                      lea rax, [r13 + 3]	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000b1d	      0x4889442428	             mov qword [rsp + 0x28], rax	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000b22	    0x4688bc2c9200	       mov byte [rsp + r13 + 0x92], r15b	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000b2a	          0x4d85ff	                           test r15, r15	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x4000b2d	            0x741c	                            je 0x4000b4b	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x4000b2f	      0x807c241000	                cmp byte [rsp + 0x10], 0	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x4000b34	            0x7415	                            je 0x4000b4b	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x4000b36	    0x488dbc049000	            lea rdi, [rsp + rax + 0x90] 	        53	string3.h	FUNCTION_4	CALL_3
0x4000b3e	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_4	CALL_3
0x4000b41	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_4	CALL_3
0x4000b46	      0xe800000000	                          call 0x4000b4b	        53	string3.h	FUNCTION_4	CALL_3
0x4000b4b	      0x4c037c2428	             add r15, qword [rsp + 0x28]	       537	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000b50	    0x488d94249000	                   lea rdx, [rsp + 0x90]	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000b58	      0x4c8d442440	                    lea r8, [rsp + 0x40]	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000b5d	          0x4c89f9	                            mov rcx, r15	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000b60	          0x4489f6	                           mov esi, r14d	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000b63	          0x4889ef	                            mov rdi, rbp	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000b66	      0xe800000000	                          call 0x4000b6b	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000b6b	            0x85c0	                           test eax, eax	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000b6d	            0x7507	                           jne 0x4000b76	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000b6f	      0x4c3b7c2440	            cmp r15, qword [rsp + 0x40] 	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000b74	            0x741e	                            je 0x4000b94	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000b76	    0x488d35000000	                   lea rsi, [0x04000b7d]	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000b7d	          0x4c89e7	                            mov rdi, r12	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000b80	      0xb800000000	                              mov eax, 0	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000b85	      0xe800000000	                          call 0x4000b8a	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000b8a	      0xb807000000	                              mov eax, 7	       542	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000b8f	      0xe9dc050000	                           jmp 0x4001170	       542	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000b94	    0x488d94249000	                   lea rdx, [rsp + 0x90]	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000b9c	      0x4c8d442438	                    lea r8, [rsp + 0x38]	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000ba1	      0xb902000000	                              mov ecx, 2	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000ba6	          0x4489f6	                           mov esi, r14d	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000ba9	          0x4889ef	                            mov rdi, rbp	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000bac	      0xe800000000	                          call 0x4000bb1	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000bb1	            0x85c0	                           test eax, eax	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000bb3	            0x7508	                           jne 0x4000bbd	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000bb5	    0x48837c243802	               cmp qword [rsp + 0x38], 2	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000bbb	            0x741e	                            je 0x4000bdb	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000bbd	    0x488d35000000	                   lea rsi, [0x04000bc4]	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000bc4	          0x4c89e7	                            mov rdi, r12	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000bc7	      0xb800000000	                              mov eax, 0	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000bcc	      0xe800000000	                          call 0x4000bd1	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000bd1	      0xb807000000	                              mov eax, 7	       548	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000bd6	      0xe995050000	                           jmp 0x4001170	       548	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000bdb	     0xfb684249100	           movzx eax, byte [rsp + 0x91] 	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000be3	            0x84c0	                             test al, al	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000be5	     0xf84b8000000	                            je 0x4000ca3	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000beb	           0xfb6c8	                           movzx ecx, al	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000bee	     0xfb694249000	           movzx edx, byte [rsp + 0x90] 	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000bf6	    0x488d35000000	                   lea rsi, [0x04000bfd]	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000bfd	          0x4c89e7	                            mov rdi, r12	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000c00	      0xb800000000	                              mov eax, 0	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000c05	      0xe800000000	                          call 0x4000c0a	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000c0a	      0xb807000000	                              mov eax, 7	       555	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000c0f	      0xe95c050000	                           jmp 0x4001170	       555	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000c14	            0x3c01	                               cmp al, 1	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000c16	            0x751e	                           jne 0x4000c36	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000c18	    0x488d35000000	                   lea rsi, [0x04000c1f]	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000c1f	          0x4c89e7	                            mov rdi, r12	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000c22	      0xb800000000	                              mov eax, 0	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000c27	      0xe800000000	                          call 0x4000c2c	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000c2c	      0xb807000000	                              mov eax, 7	       565	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000c31	      0xe93a050000	                           jmp 0x4001170	       565	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000c36	            0x3cff	                            cmp al, 0xff	       567	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000c38	            0x754b	                           jne 0x4000c85	       567	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000c3a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000c3f	          0x4885c0	                           test rax, rax	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000c42	            0x7405	                            je 0x4000c49	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000c44	          0x803800	                       cmp byte [rax], 0	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000c47	            0x751e	                           jne 0x4000c67	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000c49	    0x488d35000000	                   lea rsi, [0x04000c50]	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000c50	          0x4c89e7	                            mov rdi, r12	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000c53	      0xb800000000	                              mov eax, 0	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000c58	      0xe800000000	                          call 0x4000c5d	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000c5d	      0xb807000000	                              mov eax, 7	       577	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000c62	      0xe909050000	                           jmp 0x4001170	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000c67	    0x488d35000000	                   lea rsi, [0x04000c6e]	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4000c6e	          0x4c89e7	                            mov rdi, r12	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4000c71	      0xb800000000	                              mov eax, 0	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4000c76	      0xe800000000	                          call 0x4000c7b	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4000c7b	      0xb807000000	                              mov eax, 7	       577	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000c80	      0xe9eb040000	                           jmp 0x4001170	       577	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000c85	    0x488d35000000	                   lea rsi, [0x04000c8c]	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000c8c	          0x4c89e7	                            mov rdi, r12	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000c8f	      0xb800000000	                              mov eax, 0	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000c94	      0xe800000000	                          call 0x4000c99	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000c99	      0xb807000000	                              mov eax, 7	       582	socks.c	FUNCTION_3	ELSE_4	ELSE_6
0x4000c9e	      0xe9cd040000	                           jmp 0x4001170	       582	socks.c	FUNCTION_3	ELSE_4	ELSE_6
0x4000ca3	    0xc68424900000	                mov byte [rsp + 0x90], 5	       588	socks.c	FUNCTION_3
0x4000cab	    0xc68424910000	                mov byte [rsp + 0x91], 1	       589	socks.c	FUNCTION_3
0x4000cb3	    0xc68424920000	                mov byte [rsp + 0x92], 0	       590	socks.c	FUNCTION_3
0x4000cbb	      0x807c242700	                cmp byte [rsp + 0x27], 0	       592	socks.c	FUNCTION_3	IF_31
0x4000cc0	            0x7532	                           jne 0x4000cf4	       592	socks.c	FUNCTION_3	IF_31
0x4000cc2	    0xc68424930000	                mov byte [rsp + 0x93], 3	       593	socks.c	FUNCTION_3	IF_31
0x4000cca	    0x889c24940000	               mov byte [rsp + 0x94], bl	       594	socks.c	FUNCTION_3	IF_31
0x4000cd1	    0x488dbc249500	                   lea rdi, [rsp + 0x95]	        53	string3.h	FUNCTION_4	CALL_3
0x4000cd9	      0xb953020000	                          mov ecx, 0x253	        53	string3.h	FUNCTION_4	CALL_3
0x4000cde	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_4	CALL_3
0x4000ce1	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_4	CALL_3
0x4000ce6	      0xe800000000	                          call 0x4000ceb	        53	string3.h	FUNCTION_4	CALL_3
0x4000ceb	        0x4883c305	                              add rbx, 5	       596	socks.c	FUNCTION_3	IF_31
0x4000cef	      0xe962010000	                           jmp 0x4000e56	       596	socks.c	FUNCTION_3	IF_31
0x4000cf4	      0x488d4c2448	                   lea rcx, [rsp + 0x48]	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000cf9	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000cfd	      0x488b742408	                mov rsi, qword [rsp + 8]	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000d02	          0x4889ef	                            mov rdi, rbp	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000d05	      0xe800000000	                          call 0x4000d0a	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000d0a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       603	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000d0d	     0xf8439010000	                            je 0x4000e4c	       603	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000d13	          0x83f801	                              cmp eax, 1	       606	socks.c	FUNCTION_3	ELSE_7	IF_33
0x4000d16	            0x7515	                           jne 0x4000d2d	       606	socks.c	FUNCTION_3	ELSE_7	IF_33
0x4000d18	      0x488d742448	                   lea rsi, [rsp + 0x48]	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x4000d1d	          0x4889ef	                            mov rdi, rbp	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x4000d20	      0xe800000000	                          call 0x4000d25	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x4000d25	            0x85c0	                           test eax, eax	       609	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x4000d27	     0xf8543040000	                           jne 0x4001170	       609	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x4000d2d	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000d32	          0x4885c0	                           test rax, rax	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000d35	     0xf84ee000000	                            je 0x4000e29	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000d3b	          0x4c8b28	                    mov r13, qword [rax]	       618	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000d3e	          0x4d85ed	                           test r13, r13	       619	socks.c	FUNCTION_3	ELSE_7	IF_36
0x4000d41	     0xf84e2000000	                            je 0x4000e29	       619	socks.c	FUNCTION_3	ELSE_7	IF_36
0x4000d47	      0x488d742450	                   lea rsi, [rsp + 0x50]	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000d4c	      0xba40000000	                           mov edx, 0x40	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000d51	          0x4c89ef	                            mov rdi, r13	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000d54	      0xe800000000	                          call 0x4000d59	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000d59	        0x418b4504	                mov eax, dword [r13 + 4]	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000d5d	          0x83f802	                              cmp eax, 2	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000d60	            0x7546	                           jne 0x4000da8	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000d62	    0xc68424930000	                mov byte [rsp + 0x93], 1	       626	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000d6a	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	       628	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000d6e	      0xbb04000000	                              mov ebx, 4	       626	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000d73	    0x488d84248f00	                   lea rax, [rsp + 0x8f]	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000d7b	        0x4883c301	                              add rbx, 1	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000d7f	       0xfb64c1aff	         movzx ecx, byte [rdx + rbx - 1]	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000d84	          0x880c18	                mov byte [rax + rbx], cl	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000d87	        0x4883fb08	                              cmp rbx, 8	       629	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000d8b	            0x75ee	                           jne 0x4000d7b	       629	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000d8d	      0x488d542450	                   lea rdx, [rsp + 0x50]	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000d92	    0x488d35000000	                   lea rsi, [0x04000d99]	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000d99	          0x4c89e7	                            mov rdi, r12	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000d9c	      0xb800000000	                              mov eax, 0	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000da1	      0xe800000000	                          call 0x4000da6	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000da6	            0xeb6f	                           jmp 0x4000e17	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000da8	          0x83f80a	                            cmp eax, 0xa	       636	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000dab	            0x7546	                           jne 0x4000df3	       636	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000dad	    0xc68424930000	                mov byte [rsp + 0x93], 4	       638	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000db5	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	       640	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000db9	      0xbb04000000	                              mov ebx, 4	       638	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000dbe	    0x488d84248f00	                   lea rax, [rsp + 0x8f]	       642	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000dc6	        0x4883c301	                              add rbx, 1	       642	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000dca	       0xfb64c1a03	        movzx ecx, byte [rdx + rbx + 3] 	       643	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000dcf	          0x880c18	                mov byte [rax + rbx], cl	       642	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000dd2	        0x4883fb14	                           cmp rbx, 0x14	       641	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000dd6	            0x75ee	                           jne 0x4000dc6	       641	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000dd8	      0x488d542450	                   lea rdx, [rsp + 0x50]	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000ddd	    0x488d35000000	                   lea rsi, [0x04000de4]	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000de4	          0x4c89e7	                            mov rdi, r12	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000de7	      0xb800000000	                              mov eax, 0	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000dec	      0xe800000000	                          call 0x4000df1	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000df1	            0xeb24	                           jmp 0x4000e17	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000df3	      0x488d542450	                   lea rdx, [rsp + 0x50]	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000df8	    0x488d35000000	                   lea rsi, [0x04000dff]	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000dff	          0x4c89e7	                            mov rdi, r12	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000e02	      0xb800000000	                              mov eax, 0	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000e07	      0xe800000000	                          call 0x4000e0c	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000e0c	    0x41bd00000000	                             mov r13d, 0	       650	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9
0x4000e12	      0xbb03000000	                              mov ebx, 3	       590	socks.c	FUNCTION_3
0x4000e17	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000e1c	          0x4c89e7	                            mov rdi, r12	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000e1f	      0xe800000000	                          call 0x4000e24	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000e24	          0x4d85ed	                           test r13, r13	       657	socks.c	FUNCTION_3	ELSE_7	IF_39
0x4000e27	            0x752d	                           jne 0x4000e56	       657	socks.c	FUNCTION_3	ELSE_7	IF_39
0x4000e29	      0x488b542408	                mov rdx, qword [rsp + 8]	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000e2e	    0x488d35000000	                   lea rsi, [0x04000e35]	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000e35	          0x4c89e7	                            mov rdi, r12	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000e38	      0xb800000000	                              mov eax, 0	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000e3d	      0xe800000000	                          call 0x4000e42	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000e42	      0xb806000000	                              mov eax, 6	       660	socks.c	FUNCTION_3	ELSE_7	IF_39
0x4000e47	      0xe924030000	                           jmp 0x4001170	       660	socks.c	FUNCTION_3	ELSE_7	IF_39
0x4000e4c	      0xb806000000	                              mov eax, 6	       604	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000e51	      0xe91a030000	                           jmp 0x4001170	       604	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000e56	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       664	socks.c	FUNCTION_3
0x4000e5a	            0x89f0	                            mov eax, esi	       664	socks.c	FUNCTION_3
0x4000e5c	          0xc1f808	                              sar eax, 8	       664	socks.c	FUNCTION_3
0x4000e5f	    0x88841c900000	         mov byte [rsp + rbx + 0x90], al	       664	socks.c	FUNCTION_3
0x4000e66	        0x4c8d6b02	                      lea r13, [rbx + 2]	       665	socks.c	FUNCTION_3
0x4000e6a	    0x4088b41c9100	        mov byte [rsp + rbx + 0x91], sil	       665	socks.c	FUNCTION_3
0x4000e72	    0x488d94249000	                   lea rdx, [rsp + 0x90]	       673	socks.c	FUNCTION_3	CALL_50
0x4000e7a	      0x4c8d442440	                    lea r8, [rsp + 0x40]	       673	socks.c	FUNCTION_3	CALL_50
0x4000e7f	          0x4c89e9	                            mov rcx, r13	       673	socks.c	FUNCTION_3	CALL_50
0x4000e82	          0x4489f6	                           mov esi, r14d	       673	socks.c	FUNCTION_3	CALL_50
0x4000e85	          0x4889ef	                            mov rdi, rbp	       673	socks.c	FUNCTION_3	CALL_50
0x4000e88	      0xe800000000	                          call 0x4000e8d	       673	socks.c	FUNCTION_3	CALL_50
0x4000e8d	            0x85c0	                           test eax, eax	       675	socks.c	FUNCTION_3	IF_41
0x4000e8f	            0x7507	                           jne 0x4000e98	       675	socks.c	FUNCTION_3	IF_41
0x4000e91	      0x4c3b6c2440	            cmp r13, qword [rsp + 0x40] 	       675	socks.c	FUNCTION_3	IF_41
0x4000e96	            0x741e	                            je 0x4000eb6	       675	socks.c	FUNCTION_3	IF_41
0x4000e98	    0x488d35000000	                   lea rsi, [0x04000e9f]	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000e9f	          0x4c89e7	                            mov rdi, r12	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000ea2	      0xb800000000	                              mov eax, 0	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000ea7	      0xe800000000	                          call 0x4000eac	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000eac	      0xb807000000	                              mov eax, 7	       677	socks.c	FUNCTION_3	IF_41
0x4000eb1	      0xe9ba020000	                           jmp 0x4001170	       677	socks.c	FUNCTION_3	IF_41
0x4000eb6	    0x488d94249000	                   lea rdx, [rsp + 0x90]	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000ebe	      0x4c8d442438	                    lea r8, [rsp + 0x38]	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000ec3	      0xb90a000000	                            mov ecx, 0xa	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000ec8	          0x4489f6	                           mov esi, r14d	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000ecb	          0x4889ef	                            mov rdi, rbp	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000ece	      0xe800000000	                          call 0x4000ed3	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000ed3	            0x85c0	                           test eax, eax	       691	socks.c	FUNCTION_3	IF_43
0x4000ed5	            0x7508	                           jne 0x4000edf	       691	socks.c	FUNCTION_3	IF_43
0x4000ed7	    0x48837c24380a	            cmp qword [rsp + 0x38], 0xa 	       691	socks.c	FUNCTION_3	IF_43
0x4000edd	            0x741e	                            je 0x4000efd	       691	socks.c	FUNCTION_3	IF_43
0x4000edf	    0x488d35000000	                   lea rsi, [0x04000ee6]	       692	socks.c	FUNCTION_3	IF_43	CALL_54
0x4000ee6	          0x4c89e7	                            mov rdi, r12	       692	socks.c	FUNCTION_3	IF_43	CALL_54
0x4000ee9	      0xb800000000	                              mov eax, 0	       692	socks.c	FUNCTION_3	IF_43	CALL_54
0x4000eee	      0xe800000000	                          call 0x4000ef3	       692	socks.c	FUNCTION_3	IF_43	CALL_54
0x4000ef3	      0xb807000000	                              mov eax, 7	       693	socks.c	FUNCTION_3	IF_43
0x4000ef8	      0xe973020000	                           jmp 0x4001170	       693	socks.c	FUNCTION_3	IF_43
0x4000efd	    0x80bc24900000	                cmp byte [rsp + 0x90], 5	       696	socks.c	FUNCTION_3	IF_44
0x4000f05	            0x741e	                            je 0x4000f25	       696	socks.c	FUNCTION_3	IF_44
0x4000f07	    0x488d35000000	                   lea rsi, [0x04000f0e]	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4000f0e	          0x4c89e7	                            mov rdi, r12	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4000f11	      0xb800000000	                              mov eax, 0	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4000f16	      0xe800000000	                          call 0x4000f1b	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4000f1b	      0xb807000000	                              mov eax, 7	       699	socks.c	FUNCTION_3	IF_44
0x4000f20	      0xe94b020000	                           jmp 0x4001170	       699	socks.c	FUNCTION_3	IF_44
0x4000f25	     0xfb684249300	           movzx eax, byte [rsp + 0x93] 	       719	socks.c	FUNCTION_3	IF_45
0x4000f2d	            0x3c03	                               cmp al, 3	       719	socks.c	FUNCTION_3	IF_45
0x4000f2f	            0x7518	                           jne 0x4000f49	       719	socks.c	FUNCTION_3	IF_45
0x4000f31	     0xfb684249400	           movzx eax, byte [rsp + 0x94] 	       722	socks.c	FUNCTION_3	IF_45
0x4000f39	        0x488d5807	                      lea rbx, [rax + 7]	       722	socks.c	FUNCTION_3	IF_45
0x4000f3d	        0x4883fb0a	                            cmp rbx, 0xa	       734	socks.c	FUNCTION_3	IF_47	IF_48
0x4000f41	     0xf8e8d020000	                           jle 0x40011d4	       734	socks.c	FUNCTION_3	IF_47	IF_48
0x4000f47	            0xeb0e	                           jmp 0x4000f57	       734	socks.c	FUNCTION_3	IF_47	IF_48
0x4000f49	      0xbb0a000000	                            mov ebx, 0xa	       680	socks.c	FUNCTION_3
0x4000f4e	            0x3c04	                               cmp al, 4	       724	socks.c	FUNCTION_3	ELSE_12	IF_46
0x4000f50	            0x754d	                           jne 0x4000f9f	       724	socks.c	FUNCTION_3	ELSE_12	IF_46
0x4000f52	      0xbb16000000	                           mov ebx, 0x16	       726	socks.c	FUNCTION_3	ELSE_12	IF_46
0x4000f57	        0x4c8d6bf6	                    lea r13, [rbx - 0xa]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4000f5b	    0x488d94249a00	                   lea rdx, [rsp + 0x9a]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4000f63	      0x4c8d442438	                    lea r8, [rsp + 0x38]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4000f68	          0x4c89e9	                            mov rcx, r13	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4000f6b	          0x4489f6	                           mov esi, r14d	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4000f6e	          0x4889ef	                            mov rdi, rbp	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4000f71	      0xe800000000	                          call 0x4000f76	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4000f76	            0x85c0	                           test eax, eax	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4000f78	            0x7507	                           jne 0x4000f81	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4000f7a	      0x4c3b6c2438	            cmp r13, qword [rsp + 0x38] 	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4000f7f	            0x741e	                            je 0x4000f9f	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4000f81	    0x488d35000000	                   lea rsi, [0x04000f88]	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4000f88	          0x4c89e7	                            mov rdi, r12	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4000f8b	      0xb800000000	                              mov eax, 0	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4000f90	      0xe800000000	                          call 0x4000f95	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4000f95	      0xb807000000	                              mov eax, 7	       739	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4000f9a	      0xe9d1010000	                           jmp 0x4001170	       739	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4000f9f	     0xfb6b4249100	           movzx esi, byte [rsp + 0x91] 	       746	socks.c	FUNCTION_3	IF_50
0x4000fa7	          0x4084f6	                           test sil, sil	       746	socks.c	FUNCTION_3	IF_50
0x4000faa	     0xf849a010000	                            je 0x400114a	       746	socks.c	FUNCTION_3	IF_50
0x4000fb0	     0xfb694249300	           movzx edx, byte [rsp + 0x93] 	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x4000fb8	          0x80fa01	                               cmp dl, 1	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x4000fbb	            0x7561	                           jne 0x400101e	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x4000fbd	     0xfb68c249500	           movzx ecx, byte [rsp + 0x95] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000fc5	     0xfb694249400	           movzx edx, byte [rsp + 0x94] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000fcd	        0x400fb6f6	                          movzx esi, sil	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000fd1	              0x56	                                push rsi	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000fd2	     0xfb68424a000	           movzx eax, byte [rsp + 0xa0] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000fda	          0xc1e008	                              shl eax, 8	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000fdd	            0x89c6	                            mov esi, eax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000fdf	     0xfb68424a100	           movzx eax, byte [rsp + 0xa1] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000fe7	             0x9f0	                             or eax, esi	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000fe9	              0x50	                                push rax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000fea	    0x440fb68c24a7	           movzx r9d, byte [rsp + 0xa7] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000ff3	    0x440fb68424a6	           movzx r8d, byte [rsp + 0xa6] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4000ffc	    0x488d35000000	                   lea rsi, [0x04001003]	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001003	          0x4c89e7	                            mov rdi, r12	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001006	      0xb800000000	                              mov eax, 0	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x400100b	      0xe800000000	                          call 0x4001010	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001010	        0x4883c410	                           add rsp, 0x10	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001014	      0xb807000000	                              mov eax, 7	       783	socks.c	FUNCTION_3	IF_50
0x4001019	      0xe952010000	                           jmp 0x4001170	       783	socks.c	FUNCTION_3	IF_50
0x400101e	          0x80fa03	                               cmp dl, 3	       756	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001021	            0x754f	                           jne 0x4001072	       756	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001023	     0xfb6841c8e00	     movzx eax, byte [rsp + rbx + 0x8e] 	       757	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x400102b	    0xc6841c8e0000	          mov byte [rsp + rbx + 0x8e], 0	       758	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001033	     0xfb68c1c8f00	     movzx ecx, byte [rsp + rbx + 0x8f] 	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x400103b	           0xfb6c0	                           movzx eax, al	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x400103e	          0xc1e008	                              shl eax, 8	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001041	             0x9c1	                             or ecx, eax	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001043	    0x488d94249500	                   lea rdx, [rsp + 0x95]	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x400104b	    0x440fb6842491	           movzx r8d, byte [rsp + 0x91] 	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001054	    0x488d35000000	                   lea rsi, [0x0400105b]	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x400105b	          0x4c89e7	                            mov rdi, r12	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x400105e	      0xb800000000	                              mov eax, 0	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001063	      0xe800000000	                          call 0x4001068	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001068	      0xb807000000	                              mov eax, 7	       783	socks.c	FUNCTION_3	IF_50
0x400106d	      0xe9fe000000	                           jmp 0x4001170	       783	socks.c	FUNCTION_3	IF_50
0x4001072	      0xb807000000	                              mov eax, 7	       783	socks.c	FUNCTION_3	IF_50
0x4001077	          0x80fa04	                               cmp dl, 4	       767	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x400107a	     0xf85f0000000	                           jne 0x4001170	       767	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001080	     0xfb68c249500	           movzx ecx, byte [rsp + 0x95] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001088	     0xfb694249400	           movzx edx, byte [rsp + 0x94] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001090	        0x400fb6f6	                          movzx esi, sil	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001094	              0x56	                                push rsi	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001095	     0xfb68424ac00	           movzx eax, byte [rsp + 0xac] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400109d	          0xc1e008	                              shl eax, 8	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010a0	            0x89c6	                            mov esi, eax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010a2	     0xfb68424ad00	           movzx eax, byte [rsp + 0xad] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010aa	             0x9f0	                             or eax, esi	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010ac	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010ad	     0xfb68424b300	           movzx eax, byte [rsp + 0xb3] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010b5	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010b6	     0xfb68424ba00	           movzx eax, byte [rsp + 0xba] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010be	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010bf	     0xfb68424c100	           movzx eax, byte [rsp + 0xc1] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010c7	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010c8	     0xfb68424c800	           movzx eax, byte [rsp + 0xc8] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010d0	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010d1	     0xfb68424cf00	           movzx eax, byte [rsp + 0xcf] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010d9	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010da	     0xfb68424d600	           movzx eax, byte [rsp + 0xd6] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010e2	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010e3	     0xfb68424dd00	           movzx eax, byte [rsp + 0xdd] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010eb	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010ec	     0xfb68424e400	           movzx eax, byte [rsp + 0xe4] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010f4	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010f5	     0xfb68424eb00	           movzx eax, byte [rsp + 0xeb] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010fd	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010fe	     0xfb68424f200	           movzx eax, byte [rsp + 0xf2] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001106	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001107	     0xfb68424f900	           movzx eax, byte [rsp + 0xf9] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400110f	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001110	     0xfb684240001	          movzx eax, byte [rsp + 0x100] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001118	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001119	    0x440fb68c2407	          movzx r9d, byte [rsp + 0x107] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001122	    0x440fb6842406	          movzx r8d, byte [rsp + 0x106] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400112b	    0x488d35000000	                   lea rsi, [0x04001132]	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001132	          0x4c89e7	                            mov rdi, r12	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001135	      0xb800000000	                              mov eax, 0	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400113a	      0xe800000000	                          call 0x400113f	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400113f	        0x4883c470	                           add rsp, 0x70	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001143	      0xb807000000	                              mov eax, 7	       783	socks.c	FUNCTION_3	IF_50
0x4001148	            0xeb26	                           jmp 0x4001170	       783	socks.c	FUNCTION_3	IF_50
0x400114a	    0x488d35000000	                   lea rsi, [0x04001151]	       785	socks.c	FUNCTION_3	CALL_61
0x4001151	          0x4c89e7	                            mov rdi, r12	       785	socks.c	FUNCTION_3	CALL_61
0x4001154	      0xb800000000	                              mov eax, 0	       785	socks.c	FUNCTION_3	CALL_61
0x4001159	      0xe800000000	                          call 0x400115e	       785	socks.c	FUNCTION_3	CALL_61
0x400115e	      0xbe01000000	                              mov esi, 1	       787	socks.c	FUNCTION_3	CALL_62
0x4001163	          0x4489f7	                           mov edi, r14d	       787	socks.c	FUNCTION_3	CALL_62
0x4001166	      0xe800000000	                          call 0x400116b	       787	socks.c	FUNCTION_3	CALL_62
0x400116b	      0xb800000000	                              mov eax, 0	       788	socks.c	FUNCTION_3
0x4001170	    0x488b9c24e802	           mov rbx, qword [rsp + 0x2e8] 	       789	socks.c	FUNCTION_3
0x4001178	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       789	socks.c	FUNCTION_3
0x4001181	            0x7469	                            je 0x40011ec	       789	socks.c	FUNCTION_3
0x4001183	            0xeb62	                           jmp 0x40011e7	       789	socks.c	FUNCTION_3
0x4001185	    0xc68424900000	                mov byte [rsp + 0x90], 5	       445	socks.c	FUNCTION_3
0x400118d	    0xc68424920000	                mov byte [rsp + 0x92], 0	       447	socks.c	FUNCTION_3
0x4001195	    0x48c744241000	               mov qword [rsp + 0x10], 0	       438	socks.c	FUNCTION_3	IF_8
0x400119e	      0xb803000000	                              mov eax, 3	       447	socks.c	FUNCTION_3
0x40011a3	      0xe941f7ffff	                           jmp 0x40008e9	       447	socks.c	FUNCTION_3
0x40011a8	    0xc68424900000	                mov byte [rsp + 0x90], 1	       529	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011b0	    0xc68424910000	                mov byte [rsp + 0x91], 0	       530	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011b8	    0xc68424920000	                mov byte [rsp + 0x92], 0	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011c0	    0x41bf00000000	                             mov r15d, 0	       518	socks.c	FUNCTION_3	ELSE_2	IF_21	ELSE_3
0x40011c6	    0x48c744242803	               mov qword [rsp + 0x28], 3	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011cf	      0xe977f9ffff	                           jmp 0x4000b4b	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011d4	    0x80bc24910000	                cmp byte [rsp + 0x91], 0	       746	socks.c	FUNCTION_3	IF_50
0x40011dc	     0xf8541feffff	                           jne 0x4001023	       746	socks.c	FUNCTION_3	IF_50
0x40011e2	      0xe963ffffff	                           jmp 0x400114a	       746	socks.c	FUNCTION_3	IF_50
0x40011e7	      0xe800000000	                          call 0x40011ec	       789	socks.c	FUNCTION_3
0x40011ec	    0x4881c4f80200	                          add rsp, 0x2f8	       789	socks.c	FUNCTION_3
0x40011f3	              0x5b	                                 pop rbx	       789	socks.c	FUNCTION_3
0x40011f4	              0x5d	                                 pop rbp	       789	socks.c	FUNCTION_3
0x40011f5	            0x415c	                                 pop r12	       789	socks.c	FUNCTION_3
0x40011f7	            0x415d	                                 pop r13	       789	socks.c	FUNCTION_3
0x40011f9	            0x415e	                                 pop r14	       789	socks.c	FUNCTION_3
0x40011fb	            0x415f	                                 pop r15	       789	socks.c	FUNCTION_3
0x40011fd	              0xc3	                                     ret	       789	socks.c	FUNCTION_3
Curl_blockread_all	ELSE,0:SWITCH,0:CALL,3:IF,6:DO,0:WHILE,0:FOR,1:functions,0	70
0x4000040	            0x4157	                                push r15	        56	socks.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	        56	socks.c	FUNCTION_1
0x4000044	            0x4155	                                push r13	        56	socks.c	FUNCTION_1
0x4000046	            0x4154	                                push r12	        56	socks.c	FUNCTION_1
0x4000048	              0x55	                                push rbp	        56	socks.c	FUNCTION_1
0x4000049	              0x53	                                push rbx	        56	socks.c	FUNCTION_1
0x400004a	        0x4883ec28	                           sub rsp, 0x28	        56	socks.c	FUNCTION_1
0x400004e	          0x4989fe	                            mov r14, rdi	        56	socks.c	FUNCTION_1
0x4000051	          0x4189f4	                           mov r12d, esi	        56	socks.c	FUNCTION_1
0x4000054	          0x4889d5	                            mov rbp, rdx	        56	socks.c	FUNCTION_1
0x4000057	          0x4889cb	                            mov rbx, rcx	        56	socks.c	FUNCTION_1
0x400005a	      0x4c89442408	                 mov qword [rsp + 8], r8	        56	socks.c	FUNCTION_1
0x400005f	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	        56	socks.c	FUNCTION_1
0x4000068	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        56	socks.c	FUNCTION_1
0x400006d	            0x31c9	                            xor ecx, ecx	        56	socks.c	FUNCTION_1
0x400006f	    0x49c700000000	                       mov qword [r8], 0	        61	socks.c	FUNCTION_1
0x4000076	    0x41bd00000000	                             mov r13d, 0	        58	socks.c	FUNCTION_1
0x400007c	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x4000081	      0xba01000000	                              mov edx, 1	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x4000086	      0xbe00000000	                              mov esi, 0	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x400008b	          0x498b3e	                    mov rdi, qword [r14]	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x400008e	      0xe800000000	                          call 0x4000093	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x4000093	          0x4885c0	                           test rax, rax	        64	socks.c	FUNCTION_1	FOR_1	IF_1
0x4000096	            0x7857	                            js 0x40000ef	        64	socks.c	FUNCTION_1	FOR_1	IF_1
0x4000098	          0x4889c1	                            mov rcx, rax	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400009b	      0xbaffffffff	                     mov edx, 0xffffffff	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000a0	            0x89d6	                            mov esi, edx	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000a2	          0x4489e7	                           mov edi, r12d	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000a5	      0xe800000000	                          call 0x40000aa	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000aa	            0x85c0	                           test eax, eax	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000ac	            0x7e48	                           jle 0x40000f6	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000ae	          0x4c89f9	                            mov rcx, r15	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40000b1	          0x4889da	                            mov rdx, rbx	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40000b4	          0x4889ee	                            mov rsi, rbp	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40000b7	          0x4489e7	                           mov edi, r12d	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40000ba	      0xe800000000	                          call 0x40000bf	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40000bf	          0x83f851	                           cmp eax, 0x51	        74	socks.c	FUNCTION_1	FOR_1	IF_3
0x40000c2	            0x74bd	                            je 0x4000081	        74	socks.c	FUNCTION_1	FOR_1	IF_3
0x40000c4	            0x85c0	                           test eax, eax	        76	socks.c	FUNCTION_1	FOR_1	IF_4
0x40000c6	            0x753a	                           jne 0x4000102	        76	socks.c	FUNCTION_1	FOR_1	IF_4
0x40000c8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40000cd	          0x4839d3	                            cmp rbx, rdx	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40000d0	            0x750d	                           jne 0x40000df	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40000d2	          0x4c01ea	                            add rdx, r13	        81	socks.c	FUNCTION_1	FOR_1	IF_5
0x40000d5	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        81	socks.c	FUNCTION_1	FOR_1	IF_5
0x40000da	          0x488911	                    mov qword [rcx], rdx	        81	socks.c	FUNCTION_1	FOR_1	IF_5
0x40000dd	            0xeb23	                           jmp 0x4000102	        83	socks.c	FUNCTION_1	FOR_1	IF_5
0x40000df	          0x4885d2	                           test rdx, rdx	        85	socks.c	FUNCTION_1	FOR_1	IF_6
0x40000e2	            0x7419	                            je 0x40000fd	        85	socks.c	FUNCTION_1	FOR_1	IF_6
0x40000e4	          0x4829d3	                            sub rbx, rdx	        90	socks.c	FUNCTION_1	FOR_1
0x40000e7	          0x4801d5	                            add rbp, rdx	        91	socks.c	FUNCTION_1	FOR_1
0x40000ea	          0x4901d5	                            add r13, rdx	        92	socks.c	FUNCTION_1	FOR_1
0x40000ed	            0xeb92	                           jmp 0x4000081	        92	socks.c	FUNCTION_1	FOR_1
0x40000ef	      0xb81c000000	                           mov eax, 0x1c	        66	socks.c	FUNCTION_1	FOR_1	IF_1
0x40000f4	            0xeb0c	                           jmp 0x4000102	        66	socks.c	FUNCTION_1	FOR_1	IF_1
0x40000f6	      0xb8ffffffff	                     mov eax, 0xffffffff	        70	socks.c	FUNCTION_1	FOR_1	IF_2
0x40000fb	            0xeb05	                           jmp 0x4000102	        70	socks.c	FUNCTION_1	FOR_1	IF_2
0x40000fd	      0xb8ffffffff	                     mov eax, 0xffffffff	        86	socks.c	FUNCTION_1	FOR_1	IF_6
0x4000102	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        95	socks.c	FUNCTION_1
0x4000107	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        95	socks.c	FUNCTION_1
0x4000110	            0x7405	                            je 0x4000117	        95	socks.c	FUNCTION_1
0x4000112	      0xe800000000	                          call 0x4000117	        95	socks.c	FUNCTION_1
0x4000117	        0x4883c428	                           add rsp, 0x28	        95	socks.c	FUNCTION_1
0x400011b	              0x5b	                                 pop rbx	        95	socks.c	FUNCTION_1
0x400011c	              0x5d	                                 pop rbp	        95	socks.c	FUNCTION_1
0x400011d	            0x415c	                                 pop r12	        95	socks.c	FUNCTION_1
0x400011f	            0x415d	                                 pop r13	        95	socks.c	FUNCTION_1
0x4000121	            0x415e	                                 pop r14	        95	socks.c	FUNCTION_1
0x4000123	            0x415f	                                 pop r15	        95	socks.c	FUNCTION_1
0x4000125	              0xc3	                                     ret	        95	socks.c	FUNCTION_1
Curl_SOCKS4	ELSE,2:SWITCH,1:CALL,32:IF,18:DO,0:WHILE,0:FOR,0:functions,0	361
0x4000126	            0x4157	                                push r15	       113	socks.c	FUNCTION_2
0x4000128	            0x4156	                                push r14	       113	socks.c	FUNCTION_2
0x400012a	            0x4155	                                push r13	       113	socks.c	FUNCTION_2
0x400012c	            0x4154	                                push r12	       113	socks.c	FUNCTION_2
0x400012e	              0x55	                                push rbp	       113	socks.c	FUNCTION_2
0x400012f	              0x53	                                push rbx	       113	socks.c	FUNCTION_2
0x4000130	    0x4881ec780100	                          sub rsp, 0x178	       113	socks.c	FUNCTION_2
0x4000137	      0x48897c2408	                mov qword [rsp + 8], rdi	       113	socks.c	FUNCTION_2
0x400013c	          0x4989f5	                            mov r13, rsi	       113	socks.c	FUNCTION_2
0x400013f	          0x4189d4	                           mov r12d, edx	       113	socks.c	FUNCTION_2
0x4000142	          0x4c89c3	                             mov rbx, r8	       113	socks.c	FUNCTION_2
0x4000145	    0x64488b042528	                mov rax, qword fs:[0x28]	       113	socks.c	FUNCTION_2
0x400014e	    0x488984246801	            mov qword [rsp + 0x168], rax	       113	socks.c	FUNCTION_2
0x4000156	            0x31c0	                            xor eax, eax	       113	socks.c	FUNCTION_2
0x4000158	    0x458bb0380100	           mov r14d, dword [r8 + 0x138] 	       115	socks.c	FUNCTION_2
0x400015f	          0x4863c9	                         movsxd rcx, ecx	       121	socks.c	FUNCTION_2
0x4000162	    0x458bbc885802	   mov r15d, dword [r8 + rcx*4 + 0x258] 	       121	socks.c	FUNCTION_2
0x400016a	          0x498b28	                     mov rbp, qword [r8]	       122	socks.c	FUNCTION_2
0x400016d	      0xba01000000	                              mov edx, 1	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x4000172	      0xbe00000000	                              mov esi, 0	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x4000177	          0x4889ef	                            mov rdi, rbp	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x400017a	      0xe800000000	                          call 0x400017f	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x400017f	          0x4885c0	                           test rax, rax	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x4000182	            0x791e	                           jns 0x40001a2	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x4000184	    0x488d35000000	                   lea rsi, [0x0400018b]	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x400018b	          0x4889ef	                            mov rdi, rbp	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x400018e	      0xb800000000	                              mov eax, 0	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x4000193	      0xe800000000	                          call 0x4000198	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x4000198	      0xb81c000000	                           mov eax, 0x1c	       127	socks.c	FUNCTION_2	IF_1
0x400019d	      0xe9f0040000	                           jmp 0x4000692	       127	socks.c	FUNCTION_2	IF_1
0x40001a2	    0x80bb9e030000	               cmp byte [rbx + 0x39e], 0	       130	socks.c	FUNCTION_2	IF_2
0x40001a9	            0x7430	                            je 0x40001db	       130	socks.c	FUNCTION_2	IF_2
0x40001ab	        0x4183fe06	                             cmp r14d, 6	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001af	    0x488d15000000	                   lea rdx, [0x040001b6]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001b6	    0x488d05000000	                   lea rax, [0x040001bd]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001bd	        0x480f44d0	                          cmove rdx, rax	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001c1	          0x4589e0	                           mov r8d, r12d	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001c4	          0x4c89e9	                            mov rcx, r13	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001c7	    0x488d35000000	                   lea rsi, [0x040001ce]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001ce	          0x488b3b	                    mov rdi, qword [rbx]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001d1	      0xb800000000	                              mov eax, 0	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001d6	      0xe800000000	                          call 0x40001db	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001db	      0xbe00000000	                              mov esi, 0	       134	socks.c	FUNCTION_2	CALL_4
0x40001e0	          0x4489ff	                           mov edi, r15d	       134	socks.c	FUNCTION_2	CALL_4
0x40001e3	      0xe800000000	                          call 0x40001e8	       134	socks.c	FUNCTION_2	CALL_4
0x40001e8	          0x4489e1	                           mov ecx, r12d	       136	socks.c	FUNCTION_2	CALL_5
0x40001eb	          0x4c89ea	                            mov rdx, r13	       136	socks.c	FUNCTION_2	CALL_5
0x40001ee	    0x488d35000000	                   lea rsi, [0x040001f5]	       136	socks.c	FUNCTION_2	CALL_5
0x40001f5	          0x4889ef	                            mov rdi, rbp	       136	socks.c	FUNCTION_2	CALL_5
0x40001f8	      0xb800000000	                              mov eax, 0	       136	socks.c	FUNCTION_2	CALL_5
0x40001fd	      0xe800000000	                          call 0x4000202	       136	socks.c	FUNCTION_2	CALL_5
0x4000202	      0xc644246004	                mov byte [rsp + 0x60], 4	       149	socks.c	FUNCTION_2
0x4000207	      0xc644246101	                mov byte [rsp + 0x61], 1	       150	socks.c	FUNCTION_2
0x400020c	          0x4489e0	                           mov eax, r12d	       151	socks.c	FUNCTION_2
0x400020f	          0xc1f808	                              sar eax, 8	       151	socks.c	FUNCTION_2
0x4000212	        0x88442462	               mov byte [rsp + 0x62], al	       151	socks.c	FUNCTION_2
0x4000216	      0x4488642463	             mov byte [rsp + 0x63], r12b	       152	socks.c	FUNCTION_2
0x400021b	        0x4183fe06	                             cmp r14d, 6	       155	socks.c	FUNCTION_2	IF_3
0x400021f	     0xf84c9040000	                            je 0x40006ee	       155	socks.c	FUNCTION_2	IF_3
0x4000225	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x400022a	          0x4489e2	                           mov edx, r12d	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x400022d	          0x4c89ee	                            mov rsi, r13	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000230	          0x4889df	                            mov rdi, rbx	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000233	      0xe800000000	                          call 0x4000238	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000238	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       162	socks.c	FUNCTION_2	IF_3	IF_4
0x400023b	     0xf84ea000000	                            je 0x400032b	       162	socks.c	FUNCTION_2	IF_3	IF_4
0x4000241	          0x83f801	                              cmp eax, 1	       165	socks.c	FUNCTION_2	IF_3	IF_5
0x4000244	            0x750d	                           jne 0x4000253	       165	socks.c	FUNCTION_2	IF_3	IF_5
0x4000246	      0x488d742418	                   lea rsi, [rsp + 0x18]	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x400024b	          0x4889df	                            mov rdi, rbx	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x400024e	      0xe800000000	                          call 0x4000253	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x4000253	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x4000258	          0x4885c0	                           test rax, rax	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x400025b	     0xf8497000000	                            je 0x40002f8	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x4000261	          0x4c8b20	                    mov r12, qword [rax]	       174	socks.c	FUNCTION_2	IF_3	IF_6
0x4000264	          0x4d85e4	                           test r12, r12	       175	socks.c	FUNCTION_2	IF_3	IF_7
0x4000267	     0xf848b000000	                            je 0x40002f8	       175	socks.c	FUNCTION_2	IF_3	IF_7
0x400026d	      0x488d742420	                   lea rsi, [rsp + 0x20]	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000272	      0xba40000000	                           mov edx, 0x40	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000277	          0x4c89e7	                            mov rdi, r12	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x400027a	      0xe800000000	                          call 0x400027f	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x400027f	    0x41837c240402	                  cmp dword [r12 + 4], 2	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000285	            0x7540	                           jne 0x40002c7	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000287	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       182	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400028c	         0xfb65004	               movzx edx, byte [rax + 4]	       183	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000290	        0x88542464	               mov byte [rsp + 0x64], dl	       183	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000294	         0xfb65005	               movzx edx, byte [rax + 5]	       184	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000298	        0x88542465	               mov byte [rsp + 0x65], dl	       184	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400029c	         0xfb65006	               movzx edx, byte [rax + 6]	       185	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40002a0	        0x88542466	               mov byte [rsp + 0x66], dl	       185	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40002a4	         0xfb64007	               movzx eax, byte [rax + 7]	       186	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40002a8	        0x88442467	               mov byte [rsp + 0x67], al	       186	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40002ac	      0x488d542420	                   lea rdx, [rsp + 0x20]	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x40002b1	    0x488d35000000	                   lea rsi, [0x040002b8]	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x40002b8	          0x4889ef	                            mov rdi, rbp	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x40002bb	      0xb800000000	                              mov eax, 0	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x40002c0	      0xe800000000	                          call 0x40002c5	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x40002c5	            0xeb1f	                           jmp 0x40002e6	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x40002c7	      0x488d542420	                   lea rdx, [rsp + 0x20]	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x40002cc	    0x488d35000000	                   lea rsi, [0x040002d3]	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x40002d3	          0x4889ef	                            mov rdi, rbp	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x40002d6	      0xb800000000	                              mov eax, 0	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x40002db	      0xe800000000	                          call 0x40002e0	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x40002e0	    0x41bc00000000	                             mov r12d, 0	       191	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1
0x40002e6	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x40002eb	          0x4889ef	                            mov rdi, rbp	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x40002ee	      0xe800000000	                          call 0x40002f3	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x40002f3	          0x4d85e4	                           test r12, r12	       198	socks.c	FUNCTION_2	IF_3	IF_9
0x40002f6	            0x7521	                           jne 0x4000319	       198	socks.c	FUNCTION_2	IF_3	IF_9
0x40002f8	          0x4c89ea	                            mov rdx, r13	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x40002fb	    0x488d35000000	                   lea rsi, [0x04000302]	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x4000302	          0x4889ef	                            mov rdi, rbp	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x4000305	      0xb800000000	                              mov eax, 0	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x400030a	      0xe800000000	                          call 0x400030f	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x400030f	      0xb806000000	                              mov eax, 6	       201	socks.c	FUNCTION_2	IF_3	IF_9
0x4000314	      0xe979030000	                           jmp 0x4000692	       201	socks.c	FUNCTION_2	IF_3	IF_9
0x4000319	      0xc644246800	                mov byte [rsp + 0x68], 0	       208	socks.c	FUNCTION_2
0x400031e	    0x48837c240800	                  cmp qword [rsp + 8], 0	       209	socks.c	FUNCTION_2	IF_10
0x4000324	            0x750f	                           jne 0x4000335	       209	socks.c	FUNCTION_2	IF_10
0x4000326	      0xe97c030000	                           jmp 0x40006a7	       209	socks.c	FUNCTION_2	IF_10
0x400032b	      0xb805000000	                              mov eax, 5	       163	socks.c	FUNCTION_2	IF_3	IF_4
0x4000330	      0xe95d030000	                           jmp 0x4000692	       163	socks.c	FUNCTION_2	IF_3	IF_4
0x4000335	      0xb800000000	                              mov eax, 0	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x400033a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x4000341	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x4000346	            0xf2ae	              repne scasb al, byte [rdi]	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x4000348	          0x48f7d1	                                 not rcx	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x400034b	        0x4883e901	                              sub rcx, 1	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x400034f	    0x4881f9fd0000	                           cmp rcx, 0xfd	       211	socks.c	FUNCTION_2	IF_10	IF_11
0x4000356	            0x7619	                           jbe 0x4000371	       211	socks.c	FUNCTION_2	IF_10	IF_11
0x4000358	    0x488d35000000	                   lea rsi, [0x0400035f]	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x400035f	          0x4889ef	                            mov rdi, rbp	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x4000362	      0xe800000000	                          call 0x4000367	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x4000367	      0xb807000000	                              mov eax, 7	       213	socks.c	FUNCTION_2	IF_10	IF_11
0x400036c	      0xe921030000	                           jmp 0x4000692	       213	socks.c	FUNCTION_2	IF_10	IF_11
0x4000371	        0x488d5101	                      lea rdx, [rcx + 1]	        53	string3.h	FUNCTION_4	CALL_3
0x4000375	      0x4c8d642468	                   lea r12, [rsp + 0x68]	        53	string3.h	FUNCTION_4	CALL_3
0x400037a	      0xb9fe000000	                           mov ecx, 0xfe	        53	string3.h	FUNCTION_4	CALL_3
0x400037f	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_4	CALL_3
0x4000384	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_4	CALL_3
0x4000387	      0xe800000000	                          call 0x400038c	        53	string3.h	FUNCTION_4	CALL_3
0x400038c	      0xb800000000	                              mov eax, 0	       227	socks.c	FUNCTION_2	CALL_16
0x4000391	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       227	socks.c	FUNCTION_2	CALL_16
0x4000398	          0x4c89e7	                            mov rdi, r12	       227	socks.c	FUNCTION_2	CALL_16
0x400039b	            0xf2ae	              repne scasb al, byte [rdi]	       227	socks.c	FUNCTION_2	CALL_16
0x400039d	          0x48f7d1	                                 not rcx	       227	socks.c	FUNCTION_2	CALL_16
0x40003a0	          0x4989cc	                            mov r12, rcx	       227	socks.c	FUNCTION_2	CALL_16
0x40003a3	        0x4183c408	                             add r12d, 8	       226	socks.c	FUNCTION_2
0x40003a7	        0x4183fe06	                             cmp r14d, 6	       230	socks.c	FUNCTION_2	IF_12
0x40003ab	            0x754b	                           jne 0x40003f8	       230	socks.c	FUNCTION_2	IF_12
0x40003ad	      0xc644246400	                mov byte [rsp + 0x64], 0	       231	socks.c	FUNCTION_2	IF_12
0x40003b2	      0xc644246500	                mov byte [rsp + 0x65], 0	       232	socks.c	FUNCTION_2	IF_12
0x40003b7	      0xc644246600	                mov byte [rsp + 0x66], 0	       233	socks.c	FUNCTION_2	IF_12
0x40003bc	      0xc644246701	                mov byte [rsp + 0x67], 1	       234	socks.c	FUNCTION_2	IF_12
0x40003c1	      0xb800000000	                              mov eax, 0	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x40003c6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x40003cd	          0x4c89ef	                            mov rdi, r13	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x40003d0	            0xf2ae	              repne scasb al, byte [rdi]	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x40003d2	          0x48f7d1	                                 not rcx	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x40003d5	      0x48894c2408	                mov qword [rsp + 8], rcx	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x40003da	          0x4963c4	                        movsxd rax, r12d	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40003dd	          0x4801c1	                            add rcx, rax	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40003e0	    0x4881f9060100	                          cmp rcx, 0x106	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40003e7	            0x7f1a	                            jg 0x4000403	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40003e9	      0x488d7c0460	            lea rdi, [rsp + rax + 0x60] 	       110	string3.h	FUNCTION_10	CALL_3
0x40003ee	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_10	CALL_3
0x40003f1	      0xe800000000	                          call 0x40003f6	       110	string3.h	FUNCTION_10	CALL_3
0x40003f6	            0xeb14	                           jmp 0x400040c	       110	string3.h	FUNCTION_10	CALL_3
0x40003f8	    0x48c744240800	                  mov qword [rsp + 8], 0	       225	socks.c	FUNCTION_2
0x4000401	            0xeb09	                           jmp 0x400040c	       225	socks.c	FUNCTION_2
0x4000403	    0x48c744240800	                  mov qword [rsp + 8], 0	       240	socks.c	FUNCTION_2	IF_12	ELSE_2
0x400040c	          0x4d63e4	                        movsxd r12, r12d	       245	socks.c	FUNCTION_2
0x400040f	      0x4c03642408	                add r12, qword [rsp + 8]	       245	socks.c	FUNCTION_2
0x4000414	      0x488d542460	                   lea rdx, [rsp + 0x60]	       244	socks.c	FUNCTION_2	CALL_19
0x4000419	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       244	socks.c	FUNCTION_2	CALL_19
0x400041e	          0x4c89e1	                            mov rcx, r12	       244	socks.c	FUNCTION_2	CALL_19
0x4000421	          0x4489fe	                           mov esi, r15d	       244	socks.c	FUNCTION_2	CALL_19
0x4000424	          0x4889df	                            mov rdi, rbx	       244	socks.c	FUNCTION_2	CALL_19
0x4000427	      0xe800000000	                          call 0x400042c	       244	socks.c	FUNCTION_2	CALL_19
0x400042c	            0x85c0	                           test eax, eax	       247	socks.c	FUNCTION_2	IF_14
0x400042e	            0x7507	                           jne 0x4000437	       247	socks.c	FUNCTION_2	IF_14
0x4000430	      0x4c3b642418	            cmp r12, qword [rsp + 0x18] 	       247	socks.c	FUNCTION_2	IF_14
0x4000435	            0x7419	                            je 0x4000450	       247	socks.c	FUNCTION_2	IF_14
0x4000437	    0x488d35000000	                   lea rsi, [0x0400043e]	       248	socks.c	FUNCTION_2	IF_14	CALL_20
0x400043e	          0x4889ef	                            mov rdi, rbp	       248	socks.c	FUNCTION_2	IF_14	CALL_20
0x4000441	      0xb800000000	                              mov eax, 0	       248	socks.c	FUNCTION_2	IF_14	CALL_20
0x4000446	      0xe800000000	                          call 0x400044b	       248	socks.c	FUNCTION_2	IF_14	CALL_20
0x400044b	      0xe93d020000	                           jmp 0x400068d	       249	socks.c	FUNCTION_2	IF_14
0x4000450	        0x4183fe06	                             cmp r14d, 6	       251	socks.c	FUNCTION_2	IF_15
0x4000454	            0x7556	                           jne 0x40004ac	       251	socks.c	FUNCTION_2	IF_15
0x4000456	    0x48837c240800	                  cmp qword [rsp + 8], 0	       251	socks.c	FUNCTION_2	IF_15
0x400045c	            0x754e	                           jne 0x40004ac	       251	socks.c	FUNCTION_2	IF_15
0x400045e	      0xb800000000	                              mov eax, 0	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x4000463	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x400046a	          0x4c89ef	                            mov rdi, r13	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x400046d	            0xf2ae	              repne scasb al, byte [rdi]	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x400046f	          0x48f7d1	                                 not rcx	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x4000472	          0x4989cc	                            mov r12, rcx	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x4000475	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x400047a	          0x4c89ea	                            mov rdx, r13	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x400047d	          0x4489fe	                           mov esi, r15d	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x4000480	          0x4889df	                            mov rdi, rbx	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x4000483	      0xe800000000	                          call 0x4000488	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x4000488	            0x85c0	                           test eax, eax	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x400048a	            0x7507	                           jne 0x4000493	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x400048c	      0x4c3b642418	            cmp r12, qword [rsp + 0x18] 	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x4000491	            0x7419	                            je 0x40004ac	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x4000493	    0x488d35000000	                   lea rsi, [0x0400049a]	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x400049a	          0x4889ef	                            mov rdi, rbp	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x400049d	      0xb800000000	                              mov eax, 0	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x40004a2	      0xe800000000	                          call 0x40004a7	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x40004a7	      0xe9e1010000	                           jmp 0x400068d	       258	socks.c	FUNCTION_2	IF_15	IF_16
0x40004ac	      0x488d542460	                   lea rdx, [rsp + 0x60]	       265	socks.c	FUNCTION_2	CALL_24
0x40004b1	      0x4c8d442410	                    lea r8, [rsp + 0x10]	       265	socks.c	FUNCTION_2	CALL_24
0x40004b6	      0xb908000000	                              mov ecx, 8	       265	socks.c	FUNCTION_2	CALL_24
0x40004bb	          0x4489fe	                           mov esi, r15d	       265	socks.c	FUNCTION_2	CALL_24
0x40004be	          0x4889df	                            mov rdi, rbx	       265	socks.c	FUNCTION_2	CALL_24
0x40004c1	      0xe800000000	                          call 0x40004c6	       265	socks.c	FUNCTION_2	CALL_24
0x40004c6	            0x85c0	                           test eax, eax	       267	socks.c	FUNCTION_2	IF_17
0x40004c8	            0x7508	                           jne 0x40004d2	       267	socks.c	FUNCTION_2	IF_17
0x40004ca	    0x48837c241008	               cmp qword [rsp + 0x10], 8	       267	socks.c	FUNCTION_2	IF_17
0x40004d0	            0x7419	                            je 0x40004eb	       267	socks.c	FUNCTION_2	IF_17
0x40004d2	    0x488d35000000	                   lea rsi, [0x040004d9]	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x40004d9	          0x4889ef	                            mov rdi, rbp	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x40004dc	      0xb800000000	                              mov eax, 0	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x40004e1	      0xe800000000	                          call 0x40004e6	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x40004e6	      0xe9a2010000	                           jmp 0x400068d	       269	socks.c	FUNCTION_2	IF_17
0x40004eb	      0x807c246000	                cmp byte [rsp + 0x60], 0	       292	socks.c	FUNCTION_2	IF_18
0x40004f0	            0x7419	                            je 0x400050b	       292	socks.c	FUNCTION_2	IF_18
0x40004f2	    0x488d35000000	                   lea rsi, [0x040004f9]	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x40004f9	          0x4889ef	                            mov rdi, rbp	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x40004fc	      0xb800000000	                              mov eax, 0	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x4000501	      0xe800000000	                          call 0x4000506	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x4000506	      0xe982010000	                           jmp 0x400068d	       295	socks.c	FUNCTION_2	IF_18
0x400050b	       0xfb6442461	           movzx eax, byte [rsp + 0x61] 	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000510	            0x3c5b	                            cmp al, 0x5b	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000512	            0x7463	                            je 0x4000577	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000514	            0x3c5b	                            cmp al, 0x5b	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000516	            0x7709	                            ja 0x4000521	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000518	            0x3c5a	                            cmp al, 0x5a	       299	socks.c	FUNCTION_2	SWITCH_1
0x400051a	            0x741a	                            je 0x4000536	       299	socks.c	FUNCTION_2	SWITCH_1
0x400051c	      0xe928010000	                           jmp 0x4000649	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000521	            0x3c5c	                            cmp al, 0x5c	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000523	     0xf8495000000	                            je 0x40005be	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000529	            0x3c5d	                            cmp al, 0x5d	       299	socks.c	FUNCTION_2	SWITCH_1
0x400052b	     0xf84d4000000	                            je 0x4000605	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000531	      0xe913010000	                           jmp 0x4000649	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000536	        0x4183fe06	                             cmp r14d, 6	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x400053a	    0x488d15000000	                   lea rdx, [0x04000541]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000541	    0x488d05000000	                   lea rax, [0x04000548]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000548	        0x480f44d0	                          cmove rdx, rax	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x400054c	    0x488d35000000	                   lea rsi, [0x04000553]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000553	          0x4889ef	                            mov rdi, rbp	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000556	      0xb800000000	                              mov eax, 0	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x400055b	      0xe800000000	                          call 0x4000560	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000560	      0xbe01000000	                              mov esi, 1	       344	socks.c	FUNCTION_2	CALL_32
0x4000565	          0x4489ff	                           mov edi, r15d	       344	socks.c	FUNCTION_2	CALL_32
0x4000568	      0xe800000000	                          call 0x400056d	       344	socks.c	FUNCTION_2	CALL_32
0x400056d	      0xb800000000	                              mov eax, 0	       346	socks.c	FUNCTION_2
0x4000572	      0xe91b010000	                           jmp 0x4000692	       346	socks.c	FUNCTION_2
0x4000577	       0xfb64c2465	           movzx ecx, byte [rsp + 0x65] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x400057c	       0xfb6542464	           movzx edx, byte [rsp + 0x64] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000581	            0x6a5b	                               push 0x5b	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000583	       0xfb644246a	           movzx eax, byte [rsp + 0x6a] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000588	          0xc1e008	                              shl eax, 8	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x400058b	            0x89c6	                            mov esi, eax	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x400058d	       0xfb644246b	           movzx eax, byte [rsp + 0x6b] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000592	             0x9f0	                             or eax, esi	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000594	              0x50	                                push rax	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000595	    0x440fb64c2477	           movzx r9d, byte [rsp + 0x77] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x400059b	    0x440fb6442476	           movzx r8d, byte [rsp + 0x76] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40005a1	    0x488d35000000	                   lea rsi, [0x040005a8]	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40005a8	          0x4889ef	                            mov rdi, rbp	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40005ab	      0xb800000000	                              mov eax, 0	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40005b0	      0xe800000000	                          call 0x40005b5	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40005b5	        0x4883c410	                           add rsp, 0x10	       311	socks.c	FUNCTION_2	SWITCH_1
0x40005b9	      0xe9cf000000	                           jmp 0x400068d	       311	socks.c	FUNCTION_2	SWITCH_1
0x40005be	       0xfb64c2465	           movzx ecx, byte [rsp + 0x65] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005c3	       0xfb6542464	           movzx edx, byte [rsp + 0x64] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005c8	            0x6a5c	                               push 0x5c	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005ca	       0xfb644246a	           movzx eax, byte [rsp + 0x6a] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005cf	          0xc1e008	                              shl eax, 8	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005d2	            0x89c6	                            mov esi, eax	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005d4	       0xfb644246b	           movzx eax, byte [rsp + 0x6b] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005d9	             0x9f0	                             or eax, esi	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005db	              0x50	                                push rax	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005dc	    0x440fb64c2477	           movzx r9d, byte [rsp + 0x77] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005e2	    0x440fb6442476	           movzx r8d, byte [rsp + 0x76] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005e8	    0x488d35000000	                   lea rsi, [0x040005ef]	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005ef	          0x4889ef	                            mov rdi, rbp	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005f2	      0xb800000000	                              mov eax, 0	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005f7	      0xe800000000	                          call 0x40005fc	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40005fc	        0x4883c410	                           add rsp, 0x10	       321	socks.c	FUNCTION_2	SWITCH_1
0x4000600	      0xe988000000	                           jmp 0x400068d	       321	socks.c	FUNCTION_2	SWITCH_1
0x4000605	       0xfb64c2465	           movzx ecx, byte [rsp + 0x65] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x400060a	       0xfb6542464	           movzx edx, byte [rsp + 0x64] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x400060f	            0x6a5d	                               push 0x5d	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000611	       0xfb644246a	           movzx eax, byte [rsp + 0x6a] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000616	          0xc1e008	                              shl eax, 8	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000619	            0x89c6	                            mov esi, eax	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x400061b	       0xfb644246b	           movzx eax, byte [rsp + 0x6b] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000620	             0x9f0	                             or eax, esi	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000622	              0x50	                                push rax	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000623	    0x440fb64c2477	           movzx r9d, byte [rsp + 0x77] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000629	    0x440fb6442476	           movzx r8d, byte [rsp + 0x76] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x400062f	    0x488d35000000	                   lea rsi, [0x04000636]	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000636	          0x4889ef	                            mov rdi, rbp	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000639	      0xb800000000	                              mov eax, 0	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x400063e	      0xe800000000	                          call 0x4000643	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000643	        0x4883c410	                           add rsp, 0x10	       331	socks.c	FUNCTION_2	SWITCH_1
0x4000647	            0xeb44	                           jmp 0x400068d	       331	socks.c	FUNCTION_2	SWITCH_1
0x4000649	       0xfb64c2465	           movzx ecx, byte [rsp + 0x65] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x400064e	       0xfb6542464	           movzx edx, byte [rsp + 0x64] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000653	           0xfb6c0	                           movzx eax, al	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000656	              0x50	                                push rax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000657	       0xfb644246a	           movzx eax, byte [rsp + 0x6a] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x400065c	          0xc1e008	                              shl eax, 8	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x400065f	            0x89c6	                            mov esi, eax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000661	       0xfb644246b	           movzx eax, byte [rsp + 0x6b] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000666	             0x9f0	                             or eax, esi	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000668	              0x50	                                push rax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000669	    0x440fb64c2477	           movzx r9d, byte [rsp + 0x77] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x400066f	    0x440fb6442476	           movzx r8d, byte [rsp + 0x76] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000675	    0x488d35000000	                   lea rsi, [0x0400067c]	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x400067c	          0x4889ef	                            mov rdi, rbp	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x400067f	      0xb800000000	                              mov eax, 0	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000684	      0xe800000000	                          call 0x4000689	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000689	        0x4883c410	                           add rsp, 0x10	       340	socks.c	FUNCTION_2	SWITCH_1
0x400068d	      0xb807000000	                              mov eax, 7	       249	socks.c	FUNCTION_2	IF_14
0x4000692	    0x488b9c246801	           mov rbx, qword [rsp + 0x168] 	       347	socks.c	FUNCTION_2
0x400069a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       347	socks.c	FUNCTION_2
0x40006a3	            0x7461	                            je 0x4000706	       347	socks.c	FUNCTION_2
0x40006a5	            0xeb5a	                           jmp 0x4000701	       347	socks.c	FUNCTION_2
0x40006a7	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	       227	socks.c	FUNCTION_2	CALL_16
0x40006ac	      0xb800000000	                              mov eax, 0	       227	socks.c	FUNCTION_2	CALL_16
0x40006b1	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       227	socks.c	FUNCTION_2	CALL_16
0x40006b8	            0xf2ae	              repne scasb al, byte [rdi]	       227	socks.c	FUNCTION_2	CALL_16
0x40006ba	          0x48f7d1	                                 not rcx	       227	socks.c	FUNCTION_2	CALL_16
0x40006bd	        0x448d6108	                     lea r12d, [rcx + 8]	       226	socks.c	FUNCTION_2
0x40006c1	    0x48c744240800	                  mov qword [rsp + 8], 0	       225	socks.c	FUNCTION_2
0x40006ca	      0xe93dfdffff	                           jmp 0x400040c	       225	socks.c	FUNCTION_2
0x40006cf	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	       227	socks.c	FUNCTION_2	CALL_16
0x40006d4	      0xb800000000	                              mov eax, 0	       227	socks.c	FUNCTION_2	CALL_16
0x40006d9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       227	socks.c	FUNCTION_2	CALL_16
0x40006e0	            0xf2ae	              repne scasb al, byte [rdi]	       227	socks.c	FUNCTION_2	CALL_16
0x40006e2	          0x48f7d1	                                 not rcx	       227	socks.c	FUNCTION_2	CALL_16
0x40006e5	        0x448d6108	                     lea r12d, [rcx + 8]	       226	socks.c	FUNCTION_2
0x40006e9	      0xe9bffcffff	                           jmp 0x40003ad	       226	socks.c	FUNCTION_2
0x40006ee	      0xc644246800	                mov byte [rsp + 0x68], 0	       208	socks.c	FUNCTION_2
0x40006f3	    0x48837c240800	                  cmp qword [rsp + 8], 0	       209	socks.c	FUNCTION_2	IF_10
0x40006f9	     0xf8536fcffff	                           jne 0x4000335	       209	socks.c	FUNCTION_2	IF_10
0x40006ff	            0xebce	                           jmp 0x40006cf	       209	socks.c	FUNCTION_2	IF_10
0x4000701	      0xe800000000	                          call 0x4000706	       347	socks.c	FUNCTION_2
0x4000706	    0x4881c4780100	                          add rsp, 0x178	       347	socks.c	FUNCTION_2
0x400070d	              0x5b	                                 pop rbx	       347	socks.c	FUNCTION_2
0x400070e	              0x5d	                                 pop rbp	       347	socks.c	FUNCTION_2
0x400070f	            0x415c	                                 pop r12	       347	socks.c	FUNCTION_2
0x4000711	            0x415d	                                 pop r13	       347	socks.c	FUNCTION_2
0x4000713	            0x415e	                                 pop r14	       347	socks.c	FUNCTION_2
0x4000715	            0x415f	                                 pop r15	       347	socks.c	FUNCTION_2
0x4000717	              0xc3	                                     ret	       347	socks.c	FUNCTION_2
