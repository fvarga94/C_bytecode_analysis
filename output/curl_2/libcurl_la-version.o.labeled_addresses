curl_version	IF,5:ELSE,1:SWITCH,0:WHILE,0:functions,0:CALL,21:DO,0:FOR,0	48
0x4000040	    0x803d00000000	                cmp byte [0x04000047], 0	       110	version.c	FUNCTION_3	IF_1
0x4000047	     0xf85bf000000	                           jne 0x400010c	       110	version.c	FUNCTION_3	IF_1
0x400004d	              0x55	                                push rbp	       103	version.c	FUNCTION_3
0x400004e	              0x53	                                push rbx	       103	version.c	FUNCTION_3
0x400004f	        0x4883ec08	                              sub rsp, 8	       103	version.c	FUNCTION_3
0x4000053	    0x488d1d000000	                   lea rbx, [0x0400005a]	       110	string3.h	FUNCTION_11	CALL_3
0x400005a	    0x48b86c696263	          movabs rax, 0x2f6c72756362696c	       110	string3.h	FUNCTION_11	CALL_3
0x4000064	    0x488905000000	            mov qword [0x0400006b], rax 	       110	string3.h	FUNCTION_11	CALL_3
0x400006b	    0x48b8372e3631	          movabs rax, 0x442d302e31362e37	       110	string3.h	FUNCTION_11	CALL_3
0x4000075	    0x488905000000	            mov qword [0x0400007c], rax 	       110	string3.h	FUNCTION_11	CALL_3
0x400007c	    0x66c705000000	          mov word [0x04000085], 0x5645 	       110	string3.h	FUNCTION_11	CALL_3
0x4000085	    0xc60500000000	                mov byte [0x0400008c], 0	       110	string3.h	FUNCTION_11	CALL_3
0x400008c	      0xb800000000	                              mov eax, 0	       114	version.c	FUNCTION_3	CALL_2
0x4000091	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       114	version.c	FUNCTION_3	CALL_2
0x4000098	          0x4889df	                            mov rdi, rbx	       114	version.c	FUNCTION_3	CALL_2
0x400009b	            0xf2ae	              repne scasb al, byte [rdi]	       114	version.c	FUNCTION_3	CALL_2
0x400009d	          0x48f7d1	                                 not rcx	       114	version.c	FUNCTION_3	CALL_2
0x40000a0	        0x4883e901	                              sub rcx, 1	       114	version.c	FUNCTION_3	CALL_2
0x40000a4	      0xbdc8000000	                           mov ebp, 0xc8	       115	version.c	FUNCTION_3
0x40000a9	          0x4829cd	                            sub rbp, rcx	       115	version.c	FUNCTION_3
0x40000ac	          0x4801cb	                            add rbx, rcx	       116	version.c	FUNCTION_3
0x40000af	        0x4883fd01	                              cmp rbp, 1	       118	version.c	FUNCTION_3	IF_2
0x40000b3	            0x7623	                           jbe 0x40000d8	       118	version.c	FUNCTION_3	IF_2
0x40000b5	      0xbec7000000	                           mov esi, 0xc7	       119	version.c	FUNCTION_3	IF_2	CALL_3
0x40000ba	          0x4829ce	                            sub rsi, rcx	       119	version.c	FUNCTION_3	IF_2	CALL_3
0x40000bd	        0x488d7b01	                      lea rdi, [rbx + 1]	       119	version.c	FUNCTION_3	IF_2	CALL_3
0x40000c1	      0xe800000000	                          call 0x40000c6	       119	version.c	FUNCTION_3	IF_2	CALL_3
0x40000c6	          0x4885c0	                           test rax, rax	       121	version.c	FUNCTION_3	IF_2	IF_3
0x40000c9	            0x740d	                            je 0x40000d8	       121	version.c	FUNCTION_3	IF_2	IF_3
0x40000cb	          0xc60320	                    mov byte [rbx], 0x20	       122	version.c	FUNCTION_3	IF_2	IF_3
0x40000ce	        0x4883c001	                              add rax, 1	       123	version.c	FUNCTION_3	IF_2	IF_3
0x40000d2	          0x4829c5	                            sub rbp, rax	       123	version.c	FUNCTION_3	IF_2	IF_3
0x40000d5	          0x4801c3	                            add rbx, rax	       124	version.c	FUNCTION_3	IF_2	IF_3
0x40000d8	      0xe800000000	                          call 0x40000dd	       129	version.c	FUNCTION_3	CALL_5
0x40000dd	          0x4889c1	                            mov rcx, rax	       129	version.c	FUNCTION_3	CALL_5
0x40000e0	    0x488d15000000	                   lea rdx, [0x040000e7]	       129	version.c	FUNCTION_3	CALL_5
0x40000e7	          0x4889ee	                            mov rsi, rbp	       129	version.c	FUNCTION_3	CALL_5
0x40000ea	          0x4889df	                            mov rdi, rbx	       129	version.c	FUNCTION_3	CALL_5
0x40000ed	      0xb800000000	                              mov eax, 0	       129	version.c	FUNCTION_3	CALL_5
0x40000f2	      0xe800000000	                          call 0x40000f7	       129	version.c	FUNCTION_3	CALL_5
0x40000f7	    0xc60500000000	                mov byte [0x040000fe], 1	       215	version.c	FUNCTION_3
0x40000fe	    0x488d05000000	                   lea rax, [0x04000105]	       217	version.c	FUNCTION_3
0x4000105	        0x4883c408	                              add rsp, 8	       217	version.c	FUNCTION_3
0x4000109	              0x5b	                                 pop rbx	       217	version.c	FUNCTION_3
0x400010a	              0x5d	                                 pop rbp	       217	version.c	FUNCTION_3
0x400010b	              0xc3	                                     ret	       217	version.c	FUNCTION_3
0x400010c	    0x488d05000000	                   lea rax, [0x04000113]	       217	version.c	FUNCTION_3
0x4000113	              0xc3	                                     ret	       217	version.c	FUNCTION_3
Curl_version_init	IF,0:ELSE,0:SWITCH,0:WHILE,0:functions,0:CALL,2:DO,0:FOR,0	6
0x400018d	        0x4883ec08	                              sub rsp, 8	        85	version.c	FUNCTION_1
0x4000191	      0xe800000000	                          call 0x4000196	        86	version.c	FUNCTION_1	CALL_1
0x4000196	      0xbf04000000	                              mov edi, 4	        87	version.c	FUNCTION_1	CALL_2
0x400019b	      0xe800000000	                          call 0x40001a0	        87	version.c	FUNCTION_1	CALL_2
0x40001a0	        0x4883c408	                              add rsp, 8	        88	version.c	FUNCTION_1
0x40001a4	              0xc3	                                     ret	        88	version.c	FUNCTION_1
curl_version_info	IF,3:ELSE,1:SWITCH,0:WHILE,0:functions,0:CALL,8:DO,0:FOR,0	23
0x4000114	    0x803d00000000	                cmp byte [0x0400011b], 0	       396	version.c	FUNCTION_4	IF_1
0x400011b	            0x7568	                           jne 0x4000185	       396	version.c	FUNCTION_4	IF_1
0x400011d	        0x4883ec08	                              sub rsp, 8	       384	version.c	FUNCTION_4
0x4000121	      0xbe50000000	                           mov esi, 0x50	       400	version.c	FUNCTION_4	CALL_1
0x4000126	    0x488d3d000000	                   lea rdi, [0x0400012d]	       400	version.c	FUNCTION_4	CALL_1
0x400012d	      0xe800000000	                          call 0x4000132	       400	version.c	FUNCTION_4	CALL_1
0x4000132	    0x488d05000000	                   lea rax, [0x04000139]	       401	version.c	FUNCTION_4
0x4000139	    0x488905000000	            mov qword [0x04000140], rax 	       401	version.c	FUNCTION_4
0x4000140	    0x488b05000000	            mov rax, qword [0x04000147] 	       402	version.c	FUNCTION_4	IF_2
0x4000147	          0x488b00	                    mov rax, qword [rax]	       402	version.c	FUNCTION_4	IF_2
0x400014a	        0xf6401010	           test byte [rax + 0x10], 0x10 	       402	version.c	FUNCTION_4	IF_2
0x400014e	            0x740c	                            je 0x400015c	       402	version.c	FUNCTION_4	IF_2
0x4000150	    0x810d00000000	         or dword [0x0400015a], 0x200000	       403	version.c	FUNCTION_4	IF_2
0x400015a	            0xeb0a	                           jmp 0x4000166	       403	version.c	FUNCTION_4	IF_2
0x400015c	    0x812500000000	      and dword [0x04000166], 0xffdfffff	       405	version.c	FUNCTION_4	ELSE_1
0x4000166	      0xe800000000	                          call 0x400016b	       409	version.c	FUNCTION_4	CALL_2
0x400016b	    0x488905000000	            mov qword [0x04000172], rax 	       409	version.c	FUNCTION_4	CALL_2
0x4000172	    0xc60500000000	                mov byte [0x04000179], 1	       454	version.c	FUNCTION_4
0x4000179	    0x488d05000000	                   lea rax, [0x04000180]	       456	version.c	FUNCTION_4
0x4000180	        0x4883c408	                              add rsp, 8	       456	version.c	FUNCTION_4
0x4000184	              0xc3	                                     ret	       456	version.c	FUNCTION_4
0x4000185	    0x488d05000000	                   lea rax, [0x0400018c]	       456	version.c	FUNCTION_4
0x400018c	              0xc3	                                     ret	       456	version.c	FUNCTION_4
