Curl_send_plain	ELSE,2:SWITCH,0:DO,0:CALL,4:FOR,0:functions,0:WHILE,0:IF,3	60
0x400085a	            0x4155	                                push r13	       362	sendf.c	FUNCTION_8
0x400085c	            0x4154	                                push r12	       362	sendf.c	FUNCTION_8
0x400085e	              0x55	                                push rbp	       362	sendf.c	FUNCTION_8
0x400085f	              0x53	                                push rbx	       362	sendf.c	FUNCTION_8
0x4000860	        0x4883ec08	                              sub rsp, 8	       362	sendf.c	FUNCTION_8
0x4000864	          0x4889fb	                            mov rbx, rdi	       362	sendf.c	FUNCTION_8
0x4000867	          0x4989d2	                            mov r10, rdx	       362	sendf.c	FUNCTION_8
0x400086a	          0x4889ca	                            mov rdx, rcx	       362	sendf.c	FUNCTION_8
0x400086d	          0x4d89c4	                             mov r12, r8	       362	sendf.c	FUNCTION_8
0x4000870	          0x4863c6	                         movsxd rax, esi	       363	sendf.c	FUNCTION_8
0x4000873	    0x8bbc87580200	   mov edi, dword [rdi + rax*4 + 0x258] 	       363	sendf.c	FUNCTION_8
0x400087a	    0x80bbb6030000	               cmp byte [rbx + 0x3b6], 0	       373	sendf.c	FUNCTION_8	IF_1
0x4000881	            0x7425	                            je 0x40008a8	       373	sendf.c	FUNCTION_8	IF_1
0x4000883	        0x488b4378	            mov rax, qword [rbx + 0x78] 	       375	sendf.c	FUNCTION_8	IF_1
0x4000887	        0x448b4810	            mov r9d, dword [rax + 0x10] 	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x400088b	        0x4c8b4020	              mov r8, qword [rax + 0x20]	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x400088f	      0xb900000020	                     mov ecx, 0x20000000	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000894	          0x4c89d6	                            mov rsi, r10	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000897	      0xe800000000	                          call 0x400089c	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x400089c	          0x4889c5	                            mov rbp, rax	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x400089f	    0xc683b6030000	               mov byte [rbx + 0x3b6], 0	       376	sendf.c	FUNCTION_8	IF_1
0x40008a6	            0xeb10	                           jmp 0x40008b8	       376	sendf.c	FUNCTION_8	IF_1
0x40008a8	      0xb900400000	                         mov ecx, 0x4000	       380	sendf.c	FUNCTION_8	CALL_2
0x40008ad	          0x4c89d6	                            mov rsi, r10	       380	sendf.c	FUNCTION_8	CALL_2
0x40008b0	      0xe800000000	                          call 0x40008b5	       380	sendf.c	FUNCTION_8	CALL_2
0x40008b5	          0x4889c5	                            mov rbp, rax	       380	sendf.c	FUNCTION_8	CALL_2
0x40008b8	    0x41c704240000	                      mov dword [r12], 0	       382	sendf.c	FUNCTION_8
0x40008c0	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	       383	sendf.c	FUNCTION_8	IF_2
0x40008c4	            0x7563	                           jne 0x4000929	       383	sendf.c	FUNCTION_8	IF_2
0x40008c6	      0xe800000000	                          call 0x40008cb	       384	sendf.c	FUNCTION_8	IF_2
0x40008cb	          0x448b28	                   mov r13d, dword [rax]	       384	sendf.c	FUNCTION_8	IF_2
0x40008ce	        0x4183fd0b	                           cmp r13d, 0xb	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40008d2	           0xf94c2	                                 sete dl	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40008d5	        0x4183fd04	                             cmp r13d, 4	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40008d9	           0xf94c0	                                 sete al	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40008dc	             0x8c2	                               or dl, al	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40008de	            0x7506	                           jne 0x40008e6	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40008e0	        0x4183fd73	                          cmp r13d, 0x73	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40008e4	            0x750f	                           jne 0x40008f5	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40008e6	    0x41c704245100	                   mov dword [r12], 0x51	       400	sendf.c	FUNCTION_8	IF_2	IF_3
0x40008ee	      0xbd00000000	                              mov ebp, 0	       399	sendf.c	FUNCTION_8	IF_2	IF_3
0x40008f3	            0xeb34	                           jmp 0x4000929	       400	sendf.c	FUNCTION_8	IF_2	IF_3
0x40008f5	          0x4489ee	                           mov esi, r13d	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40008f8	          0x4889df	                            mov rdi, rbx	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40008fb	      0xe800000000	                          call 0x4000900	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x4000900	          0x4889c2	                            mov rdx, rax	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x4000903	    0x488d35000000	                   lea rsi, [0x0400090a]	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x400090a	          0x488b3b	                    mov rdi, qword [rbx]	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x400090d	      0xb800000000	                              mov eax, 0	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x4000912	      0xe800000000	                          call 0x4000917	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x4000917	          0x488b03	                    mov rax, qword [rbx]	       405	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x400091a	    0x4489a8bc4d00	         mov dword [rax + 0x4dbc], r13d 	       405	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x4000921	    0x41c704243700	                   mov dword [r12], 0x37	       406	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x4000929	          0x4889e8	                            mov rax, rbp	       410	sendf.c	FUNCTION_8
0x400092c	        0x4883c408	                              add rsp, 8	       410	sendf.c	FUNCTION_8
0x4000930	              0x5b	                                 pop rbx	       410	sendf.c	FUNCTION_8
0x4000931	              0x5d	                                 pop rbp	       410	sendf.c	FUNCTION_8
0x4000932	            0x415c	                                 pop r12	       410	sendf.c	FUNCTION_8
0x4000934	            0x415d	                                 pop r13	       410	sendf.c	FUNCTION_8
0x4000936	              0xc3	                                     ret	       410	sendf.c	FUNCTION_8
Curl_sendf	ELSE,1:SWITCH,0:DO,0:CALL,7:FOR,1:functions,0:WHILE,0:IF,4	87
0x4000dfd	            0x4157	                                push r15	       277	sendf.c	FUNCTION_6
0x4000dff	            0x4156	                                push r14	       277	sendf.c	FUNCTION_6
0x4000e01	            0x4155	                                push r13	       277	sendf.c	FUNCTION_6
0x4000e03	            0x4154	                                push r12	       277	sendf.c	FUNCTION_6
0x4000e05	              0x55	                                push rbp	       277	sendf.c	FUNCTION_6
0x4000e06	              0x53	                                push rbx	       277	sendf.c	FUNCTION_6
0x4000e07	    0x4881ecf80000	                           sub rsp, 0xf8	       277	sendf.c	FUNCTION_6
0x4000e0e	        0x897c2404	                mov dword [rsp + 4], edi	       277	sendf.c	FUNCTION_6
0x4000e12	          0x4989f5	                            mov r13, rsi	       277	sendf.c	FUNCTION_6
0x4000e15	      0x48894c2458	             mov qword [rsp + 0x58], rcx	       277	sendf.c	FUNCTION_6
0x4000e1a	      0x4c89442460	              mov qword [rsp + 0x60], r8	       277	sendf.c	FUNCTION_6
0x4000e1f	      0x4c894c2468	              mov qword [rsp + 0x68], r9	       277	sendf.c	FUNCTION_6
0x4000e24	            0x84c0	                             test al, al	       277	sendf.c	FUNCTION_6
0x4000e26	            0x743d	                            je 0x4000e65	       277	sendf.c	FUNCTION_6
0x4000e28	       0xf29442470	       movaps xmmword [rsp + 0x70], xmm0	       277	sendf.c	FUNCTION_6
0x4000e2d	     0xf298c248000	       movaps xmmword [rsp + 0x80], xmm1	       277	sendf.c	FUNCTION_6
0x4000e35	     0xf2994249000	       movaps xmmword [rsp + 0x90], xmm2	       277	sendf.c	FUNCTION_6
0x4000e3d	     0xf299c24a000	       movaps xmmword [rsp + 0xa0], xmm3	       277	sendf.c	FUNCTION_6
0x4000e45	     0xf29a424b000	       movaps xmmword [rsp + 0xb0], xmm4	       277	sendf.c	FUNCTION_6
0x4000e4d	     0xf29ac24c000	       movaps xmmword [rsp + 0xc0], xmm5	       277	sendf.c	FUNCTION_6
0x4000e55	     0xf29b424d000	       movaps xmmword [rsp + 0xd0], xmm6	       277	sendf.c	FUNCTION_6
0x4000e5d	     0xf29bc24e000	       movaps xmmword [rsp + 0xe0], xmm7	       277	sendf.c	FUNCTION_6
0x4000e65	    0x64488b042528	                mov rax, qword fs:[0x28]	       277	sendf.c	FUNCTION_6
0x4000e6e	      0x4889442438	             mov qword [rsp + 0x38], rax	       277	sendf.c	FUNCTION_6
0x4000e73	            0x31c0	                            xor eax, eax	       277	sendf.c	FUNCTION_6
0x4000e75	        0x4d8b7500	                    mov r14, qword [r13]	       278	sendf.c	FUNCTION_6
0x4000e79	    0xc74424201800	           mov dword [rsp + 0x20], 0x18 	       285	sendf.c	FUNCTION_6	CALL_1
0x4000e81	    0xc74424243000	           mov dword [rsp + 0x24], 0x30 	       285	sendf.c	FUNCTION_6	CALL_1
0x4000e89	    0x488d84243001	                  lea rax, [rsp + 0x130]	       285	sendf.c	FUNCTION_6	CALL_1
0x4000e91	      0x4889442428	             mov qword [rsp + 0x28], rax	       285	sendf.c	FUNCTION_6	CALL_1
0x4000e96	      0x488d442440	                   lea rax, [rsp + 0x40]	       285	sendf.c	FUNCTION_6	CALL_1
0x4000e9b	      0x4889442430	             mov qword [rsp + 0x30], rax	       285	sendf.c	FUNCTION_6	CALL_1
0x4000ea0	      0x488d742420	                   lea rsi, [rsp + 0x20]	       286	sendf.c	FUNCTION_6	CALL_2
0x4000ea5	          0x4889d7	                            mov rdi, rdx	       286	sendf.c	FUNCTION_6	CALL_2
0x4000ea8	      0xe800000000	                          call 0x4000ead	       286	sendf.c	FUNCTION_6	CALL_2
0x4000ead	          0x4889c7	                            mov rdi, rax	       286	sendf.c	FUNCTION_6	CALL_2
0x4000eb0	      0x4889442408	                mov qword [rsp + 8], rax	       286	sendf.c	FUNCTION_6	CALL_2
0x4000eb5	      0xb81b000000	                           mov eax, 0x1b	       289	sendf.c	FUNCTION_6	IF_1
0x4000eba	          0x4885ff	                           test rdi, rdi	       288	sendf.c	FUNCTION_6	IF_1
0x4000ebd	     0xf8489000000	                            je 0x4000f4c	       288	sendf.c	FUNCTION_6	IF_1
0x4000ec3	    0x48c744241800	               mov qword [rsp + 0x18], 0	       291	sendf.c	FUNCTION_6
0x4000ecc	      0xb800000000	                              mov eax, 0	       292	sendf.c	FUNCTION_6	CALL_4
0x4000ed1	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       292	sendf.c	FUNCTION_6	CALL_4
0x4000ed8	            0xf2ae	              repne scasb al, byte [rdi]	       292	sendf.c	FUNCTION_6	CALL_4
0x4000eda	          0x48f7d1	                                 not rcx	       292	sendf.c	FUNCTION_6	CALL_4
0x4000edd	        0x488d59ff	                      lea rbx, [rcx - 1]	       292	sendf.c	FUNCTION_6	CALL_4
0x4000ee1	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       293	sendf.c	FUNCTION_6
0x4000ee6	      0x4c8d7c2418	                   lea r15, [rsp + 0x18]	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000eeb	          0x4d89f8	                             mov r8, r15	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000eee	          0x4889d9	                            mov rcx, rbx	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000ef1	          0x4889ea	                            mov rdx, rbp	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000ef4	        0x8b742404	                mov esi, dword [rsp + 4]	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000ef8	          0x4c89ef	                            mov rdi, r13	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000efb	      0xe800000000	                          call 0x4000f00	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000f00	          0x4189c4	                           mov r12d, eax	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000f03	            0x85c0	                           test eax, eax	       299	sendf.c	FUNCTION_6	FOR_1	IF_2
0x4000f05	            0x7534	                           jne 0x4000f3b	       299	sendf.c	FUNCTION_6	FOR_1	IF_2
0x4000f07	    0x4180bee80700	               cmp byte [r14 + 0x7e8], 0	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x4000f0f	            0x7418	                            je 0x4000f29	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x4000f11	          0x4d89e8	                             mov r8, r13	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000f14	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000f19	          0x4889ea	                            mov rdx, rbp	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000f1c	      0xbe04000000	                              mov esi, 4	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000f21	          0x4c89f7	                            mov rdi, r14	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000f24	      0xe800000000	                          call 0x4000f29	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000f29	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x4000f2e	          0x4839c3	                            cmp rbx, rax	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x4000f31	            0x7408	                            je 0x4000f3b	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x4000f33	          0x4829c3	                            sub rbx, rax	       308	sendf.c	FUNCTION_6	FOR_1	IF_4
0x4000f36	          0x4801c5	                            add rbp, rax	       309	sendf.c	FUNCTION_6	FOR_1	IF_4
0x4000f39	            0xebb0	                           jmp 0x4000eeb	       313	sendf.c	FUNCTION_6	FOR_1
0x4000f3b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       315	sendf.c	FUNCTION_6	CALL_7
0x4000f40	    0x488b05000000	            mov rax, qword [0x04000f47] 	       315	sendf.c	FUNCTION_6	CALL_7
0x4000f47	            0xff10	                        call qword [rax]	       315	sendf.c	FUNCTION_6	CALL_7
0x4000f49	          0x4489e0	                           mov eax, r12d	       317	sendf.c	FUNCTION_6
0x4000f4c	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       318	sendf.c	FUNCTION_6
0x4000f51	    0x644833142528	                xor rdx, qword fs:[0x28]	       318	sendf.c	FUNCTION_6
0x4000f5a	            0x7405	                            je 0x4000f61	       318	sendf.c	FUNCTION_6
0x4000f5c	      0xe800000000	                          call 0x4000f61	       318	sendf.c	FUNCTION_6
0x4000f61	    0x4881c4f80000	                           add rsp, 0xf8	       318	sendf.c	FUNCTION_6
0x4000f68	              0x5b	                                 pop rbx	       318	sendf.c	FUNCTION_6
0x4000f69	              0x5d	                                 pop rbp	       318	sendf.c	FUNCTION_6
0x4000f6a	            0x415c	                                 pop r12	       318	sendf.c	FUNCTION_6
0x4000f6c	            0x415d	                                 pop r13	       318	sendf.c	FUNCTION_6
0x4000f6e	            0x415e	                                 pop r14	       318	sendf.c	FUNCTION_6
0x4000f70	            0x415f	                                 pop r15	       318	sendf.c	FUNCTION_6
0x4000f72	              0xc3	                                     ret	       318	sendf.c	FUNCTION_6
Curl_read_plain	ELSE,0:SWITCH,0:DO,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,2	20
0x40002c0	              0x53	                                push rbx	       675	sendf.c	FUNCTION_14
0x40002c1	          0x4889cb	                            mov rbx, rcx	       675	sendf.c	FUNCTION_14
0x40002c4	      0xb900000000	                              mov ecx, 0	        44	socket2.h	FUNCTION_18	CALL_8
0x40002c9	      0xe800000000	                          call 0x40002ce	        44	socket2.h	FUNCTION_18	CALL_8
0x40002ce	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       678	sendf.c	FUNCTION_14	IF_1
0x40002d2	            0x7518	                           jne 0x40002ec	       678	sendf.c	FUNCTION_14	IF_1
0x40002d4	      0xe800000000	                          call 0x40002d9	       679	sendf.c	FUNCTION_14	IF_1
0x40002d9	            0x8b00	                    mov eax, dword [rax]	       679	sendf.c	FUNCTION_14	IF_1
0x40002db	          0x83f80b	                            cmp eax, 0xb	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x40002de	            0x7416	                            je 0x40002f6	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x40002e0	          0x83f804	                              cmp eax, 4	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x40002e3	            0x7411	                            je 0x40002f6	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x40002e5	      0xb838000000	                           mov eax, 0x38	       688	sendf.c	FUNCTION_14	IF_1
0x40002ea	            0xeb0f	                           jmp 0x40002fb	       688	sendf.c	FUNCTION_14	IF_1
0x40002ec	          0x488903	                    mov qword [rbx], rax	       692	sendf.c	FUNCTION_14
0x40002ef	      0xb800000000	                              mov eax, 0	       693	sendf.c	FUNCTION_14
0x40002f4	            0xeb05	                           jmp 0x40002fb	       693	sendf.c	FUNCTION_14
0x40002f6	      0xb851000000	                           mov eax, 0x51	       687	sendf.c	FUNCTION_14	IF_1	IF_2
0x40002fb	              0x5b	                                 pop rbx	       694	sendf.c	FUNCTION_14
0x40002fc	              0xc3	                                     ret	       694	sendf.c	FUNCTION_14
Curl_read	ELSE,1:SWITCH,0:DO,0:CALL,6:FOR,0:functions,0:WHILE,0:IF,4	101
0x40002fd	            0x4157	                                push r15	       707	sendf.c	FUNCTION_15
0x40002ff	            0x4156	                                push r14	       707	sendf.c	FUNCTION_15
0x4000301	            0x4155	                                push r13	       707	sendf.c	FUNCTION_15
0x4000303	            0x4154	                                push r12	       707	sendf.c	FUNCTION_15
0x4000305	              0x55	                                push rbp	       707	sendf.c	FUNCTION_15
0x4000306	              0x53	                                push rbx	       707	sendf.c	FUNCTION_15
0x4000307	        0x4883ec18	                           sub rsp, 0x18	       707	sendf.c	FUNCTION_15
0x400030b	          0x4889fb	                            mov rbx, rdi	       707	sendf.c	FUNCTION_15
0x400030e	          0x4189f7	                           mov r15d, esi	       707	sendf.c	FUNCTION_15
0x4000311	          0x4989d5	                            mov r13, rdx	       707	sendf.c	FUNCTION_15
0x4000314	          0x4889cd	                            mov rbp, rcx	       707	sendf.c	FUNCTION_15
0x4000317	          0x4d89c4	                             mov r12, r8	       707	sendf.c	FUNCTION_15
0x400031a	    0x64488b042528	                mov rax, qword fs:[0x28]	       707	sendf.c	FUNCTION_15
0x4000323	      0x4889442408	                mov qword [rsp + 8], rax	       707	sendf.c	FUNCTION_15
0x4000328	            0x31c0	                            xor eax, eax	       707	sendf.c	FUNCTION_15
0x400032a	    0xc74424043800	               mov dword [rsp + 4], 0x38	       708	sendf.c	FUNCTION_15
0x4000332	          0x4c8b37	                    mov r14, qword [rdi]	       712	sendf.c	FUNCTION_15
0x4000335	    0x498bbea80000	            mov rdi, qword [r14 + 0xa8] 	       715	sendf.c	FUNCTION_15	CALL_1
0x400033c	      0xbe01000000	                              mov esi, 1	       715	sendf.c	FUNCTION_15	CALL_1
0x4000341	      0xe800000000	                          call 0x4000346	       715	sendf.c	FUNCTION_15	CALL_1
0x4000346	            0x84c0	                             test al, al	       715	sendf.c	FUNCTION_15	CALL_1
0x4000348	     0xf84bc000000	                            je 0x400040a	       715	sendf.c	FUNCTION_15	CALL_1
0x400034e	    0x488b83600700	           mov rax, qword [rbx + 0x760] 	       716	sendf.c	FUNCTION_15
0x4000355	          0x833801	                      cmp dword [rax], 1	       715	sendf.c	FUNCTION_15	CALL_1
0x4000358	     0xf85ac000000	                           jne 0x400040a	       715	sendf.c	FUNCTION_15	CALL_1
0x400035e	      0xe9f2000000	                           jmp 0x4000455	       715	sendf.c	FUNCTION_15	CALL_1
0x4000363	    0x480383980400	            add rax, qword [rbx + 0x498]	        53	string3.h	FUNCTION_20	CALL_3
0x400036a	          0x4889c6	                            mov rsi, rax	        53	string3.h	FUNCTION_20	CALL_3
0x400036d	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_20	CALL_3
0x4000370	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_20	CALL_3
0x4000373	      0xe800000000	                          call 0x4000378	        53	string3.h	FUNCTION_20	CALL_3
0x4000378	    0x4c01b3a00400	           add qword [rbx + 0x4a0], r14 	       733	sendf.c	FUNCTION_15	IF_1	IF_2
0x400037f	    0xc683b1030000	               mov byte [rbx + 0x3b1], 0	       734	sendf.c	FUNCTION_15	IF_1	IF_2
0x4000386	        0x4d893424	                    mov qword [r12], r14	       736	sendf.c	FUNCTION_15	IF_1	IF_2
0x400038a	      0xb800000000	                              mov eax, 0	       737	sendf.c	FUNCTION_15	IF_1	IF_2
0x400038f	            0xeb60	                           jmp 0x40003f1	       737	sendf.c	FUNCTION_15	IF_1	IF_2
0x4000391	    0x4881fd004000	                         cmp rbp, 0x4000	       749	sendf.c	FUNCTION_15
0x4000398	      0xb900400000	                         mov ecx, 0x4000	       749	sendf.c	FUNCTION_15
0x400039d	        0x480f46cd	                         cmovbe rcx, rbp	       749	sendf.c	FUNCTION_15
0x40003a1	    0x488b93980400	           mov rdx, qword [rbx + 0x498] 	       749	sendf.c	FUNCTION_15
0x40003a8	          0x4863c6	                         movsxd rax, esi	       749	sendf.c	FUNCTION_15
0x40003ab	        0x4883c04e	                           add rax, 0x4e	       749	sendf.c	FUNCTION_15
0x40003af	      0x4c8d442404	                       lea r8, [rsp + 4]	       749	sendf.c	FUNCTION_15
0x40003b4	          0x4889df	                            mov rdi, rbx	       749	sendf.c	FUNCTION_15
0x40003b7	          0xff14c3	                call qword [rbx + rax*8]	       749	sendf.c	FUNCTION_15
0x40003ba	          0x4889c5	                            mov rbp, rax	       749	sendf.c	FUNCTION_15
0x40003bd	          0x4885c0	                           test rax, rax	       750	sendf.c	FUNCTION_15	IF_3
0x40003c0	            0x7906	                           jns 0x40003c8	       750	sendf.c	FUNCTION_15	IF_3
0x40003c2	        0x8b442404	                mov eax, dword [rsp + 4]	       751	sendf.c	FUNCTION_15	IF_3
0x40003c6	            0xeb29	                           jmp 0x40003f1	       751	sendf.c	FUNCTION_15	IF_3
0x40003c8	    0x488bb3980400	           mov rsi, qword [rbx + 0x498] 	        53	string3.h	FUNCTION_20	CALL_3
0x40003cf	          0x4889c2	                            mov rdx, rax	        53	string3.h	FUNCTION_20	CALL_3
0x40003d2	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_20	CALL_3
0x40003d5	      0xe800000000	                          call 0x40003da	        53	string3.h	FUNCTION_20	CALL_3
0x40003da	    0x4889aba80400	            mov qword [rbx + 0x4a8], rbp	       755	sendf.c	FUNCTION_15	IF_4
0x40003e1	    0x4889aba00400	            mov qword [rbx + 0x4a0], rbp	       756	sendf.c	FUNCTION_15	IF_4
0x40003e8	        0x49012c24	                    add qword [r12], rbp	       759	sendf.c	FUNCTION_15
0x40003ec	      0xb800000000	                              mov eax, 0	       761	sendf.c	FUNCTION_15
0x40003f1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       762	sendf.c	FUNCTION_15
0x40003f6	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       762	sendf.c	FUNCTION_15
0x40003ff	     0xf8495000000	                            je 0x400049a	       762	sendf.c	FUNCTION_15
0x4000405	      0xe98b000000	                           jmp 0x4000495	       762	sendf.c	FUNCTION_15
0x400040a	    0x4439bb5c0200	          cmp dword [rbx + 0x25c], r15d 	       721	sendf.c	FUNCTION_15
0x4000411	        0x400f94c6	                                sete sil	       721	sendf.c	FUNCTION_15
0x4000415	        0x400fb6f6	                          movzx esi, sil	       721	sendf.c	FUNCTION_15
0x4000419	    0x49c704240000	                      mov qword [r12], 0	       723	sendf.c	FUNCTION_15
0x4000421	    0x4939ae900700	           cmp qword [r14 + 0x790], rbp 	       749	sendf.c	FUNCTION_15
0x4000428	          0x4889e9	                            mov rcx, rbp	       749	sendf.c	FUNCTION_15
0x400042b	    0x490f468e9007	         cmovbe rcx, qword [r14 + 0x790]	       749	sendf.c	FUNCTION_15
0x4000433	          0x4863c6	                         movsxd rax, esi	       749	sendf.c	FUNCTION_15
0x4000436	        0x4883c04e	                           add rax, 0x4e	       749	sendf.c	FUNCTION_15
0x400043a	      0x4c8d442404	                       lea r8, [rsp + 4]	       749	sendf.c	FUNCTION_15
0x400043f	          0x4c89ea	                            mov rdx, r13	       749	sendf.c	FUNCTION_15
0x4000442	          0x4889df	                            mov rdi, rbx	       749	sendf.c	FUNCTION_15
0x4000445	          0xff14c3	                call qword [rbx + rax*8]	       749	sendf.c	FUNCTION_15
0x4000448	          0x4889c5	                            mov rbp, rax	       749	sendf.c	FUNCTION_15
0x400044b	          0x4885c0	                           test rax, rax	       750	sendf.c	FUNCTION_15	IF_3
0x400044e	            0x7998	                           jns 0x40003e8	       750	sendf.c	FUNCTION_15	IF_3
0x4000450	      0xe96dffffff	                           jmp 0x40003c2	       750	sendf.c	FUNCTION_15	IF_3
0x4000455	    0x4439bb5c0200	          cmp dword [rbx + 0x25c], r15d 	       721	sendf.c	FUNCTION_15
0x400045c	        0x400f94c6	                                sete sil	       721	sendf.c	FUNCTION_15
0x4000460	        0x400fb6f6	                          movzx esi, sil	       721	sendf.c	FUNCTION_15
0x4000464	    0x49c704240000	                      mov qword [r12], 0	       723	sendf.c	FUNCTION_15
0x400046c	    0x488b83a00400	           mov rax, qword [rbx + 0x4a0] 	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4000473	    0x488b93a80400	           mov rdx, qword [rbx + 0x4a8] 	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x400047a	          0x4829c2	                            sub rdx, rax	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x400047d	          0x4839ea	                            cmp rdx, rbp	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4000480	        0x480f47d5	                          cmova rdx, rbp	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4000484	          0x4989d6	                            mov r14, rdx	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4000487	          0x4885d2	                           test rdx, rdx	       731	sendf.c	FUNCTION_15	IF_1	IF_2
0x400048a	     0xf8401ffffff	                            je 0x4000391	       731	sendf.c	FUNCTION_15	IF_1	IF_2
0x4000490	      0xe9cefeffff	                           jmp 0x4000363	       731	sendf.c	FUNCTION_15	IF_1	IF_2
0x4000495	      0xe800000000	                          call 0x400049a	       762	sendf.c	FUNCTION_15
0x400049a	        0x4883c418	                           add rsp, 0x18	       762	sendf.c	FUNCTION_15
0x400049e	              0x5b	                                 pop rbx	       762	sendf.c	FUNCTION_15
0x400049f	              0x5d	                                 pop rbp	       762	sendf.c	FUNCTION_15
0x40004a0	            0x415c	                                 pop r12	       762	sendf.c	FUNCTION_15
0x40004a2	            0x415d	                                 pop r13	       762	sendf.c	FUNCTION_15
0x40004a4	            0x415e	                                 pop r14	       762	sendf.c	FUNCTION_15
0x40004a6	            0x415f	                                 pop r15	       762	sendf.c	FUNCTION_15
0x40004a8	              0xc3	                                     ret	       762	sendf.c	FUNCTION_15
Curl_failf	ELSE,0:SWITCH,0:DO,0:CALL,6:FOR,0:functions,0:WHILE,0:IF,3	69
0x40006ed	              0x55	                                push rbp	       252	sendf.c	FUNCTION_5
0x40006ee	              0x53	                                push rbx	       252	sendf.c	FUNCTION_5
0x40006ef	    0x4881ece80100	                          sub rsp, 0x1e8	       252	sendf.c	FUNCTION_5
0x40006f6	          0x4889fd	                            mov rbp, rdi	       252	sendf.c	FUNCTION_5
0x40006f9	    0x488994244001	            mov qword [rsp + 0x140], rdx	       252	sendf.c	FUNCTION_5
0x4000701	    0x48898c244801	            mov qword [rsp + 0x148], rcx	       252	sendf.c	FUNCTION_5
0x4000709	    0x4c8984245001	             mov qword [rsp + 0x150], r8	       252	sendf.c	FUNCTION_5
0x4000711	    0x4c898c245801	             mov qword [rsp + 0x158], r9	       252	sendf.c	FUNCTION_5
0x4000719	            0x84c0	                             test al, al	       252	sendf.c	FUNCTION_5
0x400071b	            0x7440	                            je 0x400075d	       252	sendf.c	FUNCTION_5
0x400071d	     0xf2984246001	      movaps xmmword [rsp + 0x160], xmm0	       252	sendf.c	FUNCTION_5
0x4000725	     0xf298c247001	      movaps xmmword [rsp + 0x170], xmm1	       252	sendf.c	FUNCTION_5
0x400072d	     0xf2994248001	      movaps xmmword [rsp + 0x180], xmm2	       252	sendf.c	FUNCTION_5
0x4000735	     0xf299c249001	      movaps xmmword [rsp + 0x190], xmm3	       252	sendf.c	FUNCTION_5
0x400073d	     0xf29a424a001	      movaps xmmword [rsp + 0x1a0], xmm4	       252	sendf.c	FUNCTION_5
0x4000745	     0xf29ac24b001	      movaps xmmword [rsp + 0x1b0], xmm5	       252	sendf.c	FUNCTION_5
0x400074d	     0xf29b424c001	      movaps xmmword [rsp + 0x1c0], xmm6	       252	sendf.c	FUNCTION_5
0x4000755	     0xf29bc24d001	      movaps xmmword [rsp + 0x1d0], xmm7	       252	sendf.c	FUNCTION_5
0x400075d	    0x64488b042528	                mov rax, qword fs:[0x28]	       252	sendf.c	FUNCTION_5
0x4000766	    0x488984242801	            mov qword [rsp + 0x128], rax	       252	sendf.c	FUNCTION_5
0x400076e	            0x31c0	                            xor eax, eax	       252	sendf.c	FUNCTION_5
0x4000770	    0x80bde8070000	               cmp byte [rbp + 0x7e8], 0	       253	sendf.c	FUNCTION_5	IF_1
0x4000777	            0x750e	                           jne 0x4000787	       253	sendf.c	FUNCTION_5	IF_1
0x4000779	    0x4883bd000200	              cmp qword [rbp + 0x200], 0	       253	sendf.c	FUNCTION_5	IF_1
0x4000781	     0xf84b1000000	                            je 0x4000838	       253	sendf.c	FUNCTION_5	IF_1
0x4000787	    0xc74424081000	               mov dword [rsp + 8], 0x10	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x400078f	    0xc744240c3000	            mov dword [rsp + 0xc], 0x30 	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x4000797	    0x488d84240002	                  lea rax, [rsp + 0x200]	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x400079f	      0x4889442410	             mov qword [rsp + 0x10], rax	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40007a4	    0x488d84243001	                  lea rax, [rsp + 0x130]	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40007ac	      0x4889442418	             mov qword [rsp + 0x18], rax	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40007b1	      0x488d4c2408	                      lea rcx, [rsp + 8]	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40007b6	      0x488d5c2420	                   lea rbx, [rsp + 0x20]	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40007bb	          0x4889f2	                            mov rdx, rsi	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40007be	      0xbe00010000	                          mov esi, 0x100	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40007c3	          0x4889df	                            mov rdi, rbx	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40007c6	      0xe800000000	                          call 0x40007cb	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40007cb	      0xb800000000	                              mov eax, 0	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40007d0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40007d7	          0x4889df	                            mov rdi, rbx	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40007da	            0xf2ae	              repne scasb al, byte [rdi]	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40007dc	          0x48f7d1	                                 not rcx	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40007df	        0x488d59ff	                      lea rbx, [rcx - 1]	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40007e3	    0x488bbd000200	           mov rdi, qword [rbp + 0x200] 	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x40007ea	          0x4885ff	                           test rdi, rdi	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x40007ed	            0x741a	                            je 0x4000809	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x40007ef	    0x80bdb84d0000	              cmp byte [rbp + 0x4db8], 0	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x40007f6	            0x7511	                           jne 0x4000809	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x40007f8	      0x488d742420	                   lea rsi, [rsp + 0x20]	       110	string3.h	FUNCTION_26	CALL_3
0x40007fd	      0xe800000000	                          call 0x4000802	       110	string3.h	FUNCTION_26	CALL_3
0x4000802	    0xc685b84d0000	              mov byte [rbp + 0x4db8], 1	       263	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000809	    0x80bde8070000	               cmp byte [rbp + 0x7e8], 0	       265	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000810	            0x7426	                            je 0x4000838	       265	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000812	      0xc6441c200a	        mov byte [rsp + rbx + 0x20], 0xa	       266	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000817	        0x488d4b01	                      lea rcx, [rbx + 1]	       267	sendf.c	FUNCTION_5	IF_1	IF_3
0x400081b	      0xc6440c2000	          mov byte [rsp + rcx + 0x20], 0	       267	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000820	      0x488d542420	                   lea rdx, [rsp + 0x20]	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x4000825	    0x41b800000000	                              mov r8d, 0	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x400082b	      0xbe00000000	                              mov esi, 0	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x4000830	          0x4889ef	                            mov rdi, rbp	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x4000833	      0xe800000000	                          call 0x4000838	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x4000838	    0x488b84242801	           mov rax, qword [rsp + 0x128] 	       272	sendf.c	FUNCTION_5
0x4000840	    0x644833042528	                xor rax, qword fs:[0x28]	       272	sendf.c	FUNCTION_5
0x4000849	            0x7405	                            je 0x4000850	       272	sendf.c	FUNCTION_5
0x400084b	      0xe800000000	                          call 0x4000850	       272	sendf.c	FUNCTION_5
0x4000850	    0x4881c4e80100	                          add rsp, 0x1e8	       272	sendf.c	FUNCTION_5
0x4000857	              0x5b	                                 pop rbx	       272	sendf.c	FUNCTION_5
0x4000858	              0x5d	                                 pop rbp	       272	sendf.c	FUNCTION_5
0x4000859	              0xc3	                                     ret	       272	sendf.c	FUNCTION_5
Curl_write	ELSE,0:SWITCH,1:DO,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,1	37
0x4000232	              0x53	                                push rbx	       332	sendf.c	FUNCTION_7
0x4000233	        0x4883ec10	                           sub rsp, 0x10	       332	sendf.c	FUNCTION_7
0x4000237	          0x4889f8	                            mov rax, rdi	       332	sendf.c	FUNCTION_7
0x400023a	          0x4c89c3	                             mov rbx, r8	       332	sendf.c	FUNCTION_7
0x400023d	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	       332	sendf.c	FUNCTION_7
0x4000246	      0x48897c2408	                mov qword [rsp + 8], rdi	       332	sendf.c	FUNCTION_7
0x400024b	            0x31ff	                            xor edi, edi	       332	sendf.c	FUNCTION_7
0x400024d	    0xc74424040000	                  mov dword [rsp + 4], 0	       334	sendf.c	FUNCTION_7
0x4000255	    0x39b05c020000	           cmp dword [rax + 0x25c], esi 	       335	sendf.c	FUNCTION_7
0x400025b	        0x400f94c6	                                sete sil	       335	sendf.c	FUNCTION_7
0x400025f	        0x400fb6f6	                          movzx esi, sil	       335	sendf.c	FUNCTION_7
0x4000263	          0x4c63ce	                          movsxd r9, esi	       337	sendf.c	FUNCTION_7
0x4000266	        0x4983c150	                            add r9, 0x50	       337	sendf.c	FUNCTION_7
0x400026a	      0x4c8d442404	                       lea r8, [rsp + 4]	       337	sendf.c	FUNCTION_7
0x400026f	          0x4889c7	                            mov rdi, rax	       337	sendf.c	FUNCTION_7
0x4000272	        0x42ff14c8	                 call qword [rax + r9*8]	       337	sendf.c	FUNCTION_7
0x4000276	          0x488903	                    mov qword [rbx], rax	       339	sendf.c	FUNCTION_7
0x4000279	      0xba00000000	                              mov edx, 0	       342	sendf.c	FUNCTION_7	IF_1
0x400027e	          0x4885c0	                           test rax, rax	       340	sendf.c	FUNCTION_7	IF_1
0x4000281	            0x7920	                           jns 0x40002a3	       340	sendf.c	FUNCTION_7	IF_1
0x4000283	        0x8b542404	                mov edx, dword [rsp + 4]	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000287	            0x85d2	                           test edx, edx	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000289	            0x7413	                            je 0x400029e	       345	sendf.c	FUNCTION_7	SWITCH_1
0x400028b	          0x83fa51	                           cmp edx, 0x51	       345	sendf.c	FUNCTION_7	SWITCH_1
0x400028e	            0x7513	                           jne 0x40002a3	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000290	    0x48c703000000	                      mov qword [rbx], 0	       347	sendf.c	FUNCTION_7	SWITCH_1
0x4000297	      0xba00000000	                              mov edx, 0	       348	sendf.c	FUNCTION_7	SWITCH_1
0x400029c	            0xeb05	                           jmp 0x40002a3	       348	sendf.c	FUNCTION_7	SWITCH_1
0x400029e	      0xba37000000	                           mov edx, 0x37	       352	sendf.c	FUNCTION_7	SWITCH_1
0x40002a3	            0x89d0	                            mov eax, edx	       358	sendf.c	FUNCTION_7
0x40002a5	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       358	sendf.c	FUNCTION_7
0x40002aa	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       358	sendf.c	FUNCTION_7
0x40002b3	            0x7405	                            je 0x40002ba	       358	sendf.c	FUNCTION_7
0x40002b5	      0xe800000000	                          call 0x40002ba	       358	sendf.c	FUNCTION_7
0x40002ba	        0x4883c410	                           add rsp, 0x10	       358	sendf.c	FUNCTION_7
0x40002be	              0x5b	                                 pop rbx	       358	sendf.c	FUNCTION_7
0x40002bf	              0xc3	                                     ret	       358	sendf.c	FUNCTION_7
Curl_recv_plain	ELSE,1:SWITCH,0:DO,0:CALL,3:FOR,0:functions,0:WHILE,0:IF,3	44
0x4000989	            0x4155	                                push r13	       436	sendf.c	FUNCTION_10
0x400098b	            0x4154	                                push r12	       436	sendf.c	FUNCTION_10
0x400098d	              0x55	                                push rbp	       436	sendf.c	FUNCTION_10
0x400098e	              0x53	                                push rbx	       436	sendf.c	FUNCTION_10
0x400098f	        0x4883ec08	                              sub rsp, 8	       436	sendf.c	FUNCTION_10
0x4000993	          0x4889fd	                            mov rbp, rdi	       436	sendf.c	FUNCTION_10
0x4000996	          0x4989d1	                             mov r9, rdx	       436	sendf.c	FUNCTION_10
0x4000999	          0x4889ca	                            mov rdx, rcx	       436	sendf.c	FUNCTION_10
0x400099c	          0x4d89c4	                             mov r12, r8	       436	sendf.c	FUNCTION_10
0x400099f	          0x4863c6	                         movsxd rax, esi	       437	sendf.c	FUNCTION_10
0x40009a2	    0x8bbc87580200	   mov edi, dword [rdi + rax*4 + 0x258] 	        44	socket2.h	FUNCTION_18	CALL_8
0x40009a9	      0xb900000000	                              mov ecx, 0	        44	socket2.h	FUNCTION_18	CALL_8
0x40009ae	          0x4c89ce	                             mov rsi, r9	        44	socket2.h	FUNCTION_18	CALL_8
0x40009b1	      0xe800000000	                          call 0x40009b6	        44	socket2.h	FUNCTION_18	CALL_8
0x40009b6	          0x4889c3	                            mov rbx, rax	        44	socket2.h	FUNCTION_18	CALL_8
0x40009b9	    0x41c704240000	                      mov dword [r12], 0	       449	sendf.c	FUNCTION_10
0x40009c1	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       450	sendf.c	FUNCTION_10	IF_2
0x40009c5	            0x7554	                           jne 0x4000a1b	       450	sendf.c	FUNCTION_10	IF_2
0x40009c7	      0xe800000000	                          call 0x40009cc	       451	sendf.c	FUNCTION_10	IF_2
0x40009cc	          0x448b28	                   mov r13d, dword [rax]	       451	sendf.c	FUNCTION_10	IF_2
0x40009cf	        0x4183fd0b	                           cmp r13d, 0xb	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x40009d3	            0x7406	                            je 0x40009db	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x40009d5	        0x4183fd04	                             cmp r13d, 4	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x40009d9	            0x750a	                           jne 0x40009e5	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x40009db	    0x41c704245100	                   mov dword [r12], 0x51	       465	sendf.c	FUNCTION_10	IF_2	IF_3
0x40009e3	            0xeb36	                           jmp 0x4000a1b	       465	sendf.c	FUNCTION_10	IF_2	IF_3
0x40009e5	          0x4489ee	                           mov esi, r13d	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x40009e8	          0x4889ef	                            mov rdi, rbp	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x40009eb	      0xe800000000	                          call 0x40009f0	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x40009f0	          0x4889c2	                            mov rdx, rax	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x40009f3	    0x488d35000000	                   lea rsi, [0x040009fa]	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x40009fa	        0x488b7d00	                    mov rdi, qword [rbp]	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x40009fe	      0xb800000000	                              mov eax, 0	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000a03	      0xe800000000	                          call 0x4000a08	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000a08	        0x488b4500	                    mov rax, qword [rbp]	       470	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000a0c	    0x4489a8bc4d00	         mov dword [rax + 0x4dbc], r13d 	       470	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000a13	    0x41c704243800	                   mov dword [r12], 0x38	       471	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000a1b	          0x4889d8	                            mov rax, rbx	       475	sendf.c	FUNCTION_10
0x4000a1e	        0x4883c408	                              add rsp, 8	       475	sendf.c	FUNCTION_10
0x4000a22	              0x5b	                                 pop rbx	       475	sendf.c	FUNCTION_10
0x4000a23	              0x5d	                                 pop rbp	       475	sendf.c	FUNCTION_10
0x4000a24	            0x415c	                                 pop r12	       475	sendf.c	FUNCTION_10
0x4000a26	            0x415d	                                 pop r13	       475	sendf.c	FUNCTION_10
0x4000a28	              0xc3	                                     ret	       475	sendf.c	FUNCTION_10
Curl_infof	ELSE,0:SWITCH,0:DO,0:CALL,5:FOR,0:functions,0:WHILE,0:IF,1	56
0x40005c8	              0x55	                                push rbp	       234	sendf.c	FUNCTION_4
0x40005c9	              0x53	                                push rbx	       234	sendf.c	FUNCTION_4
0x40005ca	    0x4881ece80800	                          sub rsp, 0x8e8	       234	sendf.c	FUNCTION_4
0x40005d1	          0x4889fb	                            mov rbx, rdi	       234	sendf.c	FUNCTION_4
0x40005d4	    0x488994244008	            mov qword [rsp + 0x840], rdx	       234	sendf.c	FUNCTION_4
0x40005dc	    0x48898c244808	            mov qword [rsp + 0x848], rcx	       234	sendf.c	FUNCTION_4
0x40005e4	    0x4c8984245008	             mov qword [rsp + 0x850], r8	       234	sendf.c	FUNCTION_4
0x40005ec	    0x4c898c245808	             mov qword [rsp + 0x858], r9	       234	sendf.c	FUNCTION_4
0x40005f4	            0x84c0	                             test al, al	       234	sendf.c	FUNCTION_4
0x40005f6	            0x7440	                            je 0x4000638	       234	sendf.c	FUNCTION_4
0x40005f8	     0xf2984246008	      movaps xmmword [rsp + 0x860], xmm0	       234	sendf.c	FUNCTION_4
0x4000600	     0xf298c247008	      movaps xmmword [rsp + 0x870], xmm1	       234	sendf.c	FUNCTION_4
0x4000608	     0xf2994248008	      movaps xmmword [rsp + 0x880], xmm2	       234	sendf.c	FUNCTION_4
0x4000610	     0xf299c249008	      movaps xmmword [rsp + 0x890], xmm3	       234	sendf.c	FUNCTION_4
0x4000618	     0xf29a424a008	      movaps xmmword [rsp + 0x8a0], xmm4	       234	sendf.c	FUNCTION_4
0x4000620	     0xf29ac24b008	      movaps xmmword [rsp + 0x8b0], xmm5	       234	sendf.c	FUNCTION_4
0x4000628	     0xf29b424c008	      movaps xmmword [rsp + 0x8c0], xmm6	       234	sendf.c	FUNCTION_4
0x4000630	     0xf29bc24d008	      movaps xmmword [rsp + 0x8d0], xmm7	       234	sendf.c	FUNCTION_4
0x4000638	    0x64488b042528	                mov rax, qword fs:[0x28]	       234	sendf.c	FUNCTION_4
0x4000641	    0x488984242808	            mov qword [rsp + 0x828], rax	       234	sendf.c	FUNCTION_4
0x4000649	            0x31c0	                            xor eax, eax	       234	sendf.c	FUNCTION_4
0x400064b	          0x4885db	                           test rbx, rbx	       235	sendf.c	FUNCTION_4	IF_1
0x400064e	            0x747b	                            je 0x40006cb	       235	sendf.c	FUNCTION_4	IF_1
0x4000650	    0x80bbe8070000	               cmp byte [rbx + 0x7e8], 0	       235	sendf.c	FUNCTION_4	IF_1
0x4000657	            0x7472	                            je 0x40006cb	       235	sendf.c	FUNCTION_4	IF_1
0x4000659	    0xc74424081000	               mov dword [rsp + 8], 0x10	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000661	    0xc744240c3000	            mov dword [rsp + 0xc], 0x30 	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000669	    0x488d84240009	                  lea rax, [rsp + 0x900]	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000671	      0x4889442410	             mov qword [rsp + 0x10], rax	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000676	    0x488d84243008	                  lea rax, [rsp + 0x830]	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x400067e	      0x4889442418	             mov qword [rsp + 0x18], rax	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000683	      0x488d4c2408	                      lea rcx, [rsp + 8]	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x4000688	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x400068d	          0x4889f2	                            mov rdx, rsi	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x4000690	      0xbe01080000	                          mov esi, 0x801	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x4000695	          0x4889ef	                            mov rdi, rbp	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x4000698	      0xe800000000	                          call 0x400069d	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x400069d	      0xb800000000	                              mov eax, 0	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x40006a2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x40006a9	          0x4889ef	                            mov rdi, rbp	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x40006ac	            0xf2ae	              repne scasb al, byte [rdi]	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x40006ae	          0x48f7d1	                                 not rcx	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x40006b1	        0x4883e901	                              sub rcx, 1	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x40006b5	    0x41b800000000	                              mov r8d, 0	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40006bb	          0x4889ea	                            mov rdx, rbp	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40006be	      0xbe00000000	                              mov esi, 0	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40006c3	          0x4889df	                            mov rdi, rbx	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40006c6	      0xe800000000	                          call 0x40006cb	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40006cb	    0x488b84242808	           mov rax, qword [rsp + 0x828] 	       245	sendf.c	FUNCTION_4
0x40006d3	    0x644833042528	                xor rax, qword fs:[0x28]	       245	sendf.c	FUNCTION_4
0x40006dc	            0x7405	                            je 0x40006e3	       245	sendf.c	FUNCTION_4
0x40006de	      0xe800000000	                          call 0x40006e3	       245	sendf.c	FUNCTION_4
0x40006e3	    0x4881c4e80800	                          add rsp, 0x8e8	       245	sendf.c	FUNCTION_4
0x40006ea	              0x5b	                                 pop rbx	       245	sendf.c	FUNCTION_4
0x40006eb	              0x5d	                                 pop rbp	       245	sendf.c	FUNCTION_4
0x40006ec	              0xc3	                                     ret	       245	sendf.c	FUNCTION_4
Curl_debug	ELSE,0:SWITCH,1:DO,0:CALL,4:FOR,0:functions,0:WHILE,0:IF,3	76
0x40004a9	            0x4156	                                push r14	       841	sendf.c	FUNCTION_17
0x40004ab	            0x4155	                                push r13	       841	sendf.c	FUNCTION_17
0x40004ad	            0x4154	                                push r12	       841	sendf.c	FUNCTION_17
0x40004af	              0x55	                                push rbp	       841	sendf.c	FUNCTION_17
0x40004b0	              0x53	                                push rbx	       841	sendf.c	FUNCTION_17
0x40004b1	    0x4881ecb00000	                           sub rsp, 0xb0	       841	sendf.c	FUNCTION_17
0x40004b8	          0x4889fd	                            mov rbp, rdi	       841	sendf.c	FUNCTION_17
0x40004bb	            0x89f3	                            mov ebx, esi	       841	sendf.c	FUNCTION_17
0x40004bd	          0x4989d4	                            mov r12, rdx	       841	sendf.c	FUNCTION_17
0x40004c0	          0x4989cd	                            mov r13, rcx	       841	sendf.c	FUNCTION_17
0x40004c3	    0x64488b042528	                mov rax, qword fs:[0x28]	       841	sendf.c	FUNCTION_17
0x40004cc	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       841	sendf.c	FUNCTION_17
0x40004d4	            0x31c0	                            xor eax, eax	       841	sendf.c	FUNCTION_17
0x40004d6	    0x80bfd1070000	               cmp byte [rdi + 0x7d1], 0	       843	sendf.c	FUNCTION_17	IF_1
0x40004dd	            0x745a	                            je 0x4000539	       843	sendf.c	FUNCTION_17	IF_1
0x40004df	          0x4d85c0	                             test r8, r8	       843	sendf.c	FUNCTION_17	IF_1
0x40004e2	            0x7455	                            je 0x4000539	       843	sendf.c	FUNCTION_17	IF_1
0x40004e4	    0x4d8b88e00000	               mov r9, qword [r8 + 0xe0]	       843	sendf.c	FUNCTION_17	IF_1
0x40004eb	          0x4d85c9	                             test r9, r9	       843	sendf.c	FUNCTION_17	IF_1
0x40004ee	            0x7449	                            je 0x4000539	       843	sendf.c	FUNCTION_17	IF_1
0x40004f0	          0x83fe02	                              cmp esi, 2	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40004f3	            0x7434	                            je 0x4000529	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40004f5	          0x83fe02	                              cmp esi, 2	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40004f8	            0x7715	                            ja 0x400050f	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40004fa	    0x488d0d000000	                   lea rcx, [0x04000501]	       849	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000501	    0x4c8d05000000	                    lea r8, [0x04000508]	       852	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000508	          0x83fe01	                              cmp esi, 1	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400050b	            0x745f	                            je 0x400056c	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400050d	            0xeb2a	                           jmp 0x4000539	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400050f	          0x83fe03	                              cmp esi, 3	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000512	            0x744a	                            je 0x400055e	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000514	    0x488d0d000000	                   lea rcx, [0x0400051b]	       846	sendf.c	FUNCTION_17	IF_1
0x400051b	    0x4c8d05000000	                    lea r8, [0x04000522]	       858	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000522	          0x83fe04	                              cmp esi, 4	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000525	            0x7445	                            je 0x400056c	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000527	            0xeb10	                           jmp 0x4000539	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000529	    0x488d0d000000	                   lea rcx, [0x04000530]	       855	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000530	    0x4c8d05000000	                    lea r8, [0x04000537]	       858	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000537	            0xeb33	                           jmp 0x400056c	       858	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000539	          0x4c89e9	                            mov rcx, r13	       872	sendf.c	FUNCTION_17	CALL_4
0x400053c	          0x4c89e2	                            mov rdx, r12	       872	sendf.c	FUNCTION_17	CALL_4
0x400053f	            0x89de	                            mov esi, ebx	       872	sendf.c	FUNCTION_17	CALL_4
0x4000541	          0x4889ef	                            mov rdi, rbp	       872	sendf.c	FUNCTION_17	CALL_4
0x4000544	      0xe83dfcffff	                         call sym.showit	       872	sendf.c	FUNCTION_17	CALL_4
0x4000549	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	       874	sendf.c	FUNCTION_17
0x4000551	    0x644833342528	                xor rsi, qword fs:[0x28]	       874	sendf.c	FUNCTION_17
0x400055a	            0x745c	                            je 0x40005b8	       874	sendf.c	FUNCTION_17
0x400055c	            0xeb55	                           jmp 0x40005b3	       874	sendf.c	FUNCTION_17
0x400055e	    0x488d0d000000	                   lea rcx, [0x04000565]	       846	sendf.c	FUNCTION_17	IF_1
0x4000565	    0x4c8d05000000	                    lea r8, [0x0400056c]	       852	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400056c	    0x488d15000000	                   lea rdx, [0x04000573]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000573	      0xbea0000000	                           mov esi, 0xa0	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000578	          0x4889e7	                            mov rdi, rsp	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400057b	      0xb800000000	                              mov eax, 0	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000580	      0xe800000000	                          call 0x4000585	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000585	      0xb800000000	                              mov eax, 0	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400058a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000591	          0x4889e7	                            mov rdi, rsp	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000594	            0xf2ae	              repne scasb al, byte [rdi]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000596	          0x48f7d1	                                 not rcx	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000599	        0x4883e901	                              sub rcx, 1	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400059d	          0x4889e2	                            mov rdx, rsp	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005a0	      0xbe00000000	                              mov esi, 0	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005a5	          0x4889ef	                            mov rdi, rbp	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005a8	      0xe8d9fbffff	                         call sym.showit	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005ad	            0x85c0	                           test eax, eax	       868	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x40005af	            0x7488	                            je 0x4000539	       868	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x40005b1	            0xeb96	                           jmp 0x4000549	       868	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x40005b3	      0xe800000000	                          call 0x40005b8	       874	sendf.c	FUNCTION_17
0x40005b8	    0x4881c4b00000	                           add rsp, 0xb0	       874	sendf.c	FUNCTION_17
0x40005bf	              0x5b	                                 pop rbx	       874	sendf.c	FUNCTION_17
0x40005c0	              0x5d	                                 pop rbp	       874	sendf.c	FUNCTION_17
0x40005c1	            0x415c	                                 pop r12	       874	sendf.c	FUNCTION_17
0x40005c3	            0x415d	                                 pop r13	       874	sendf.c	FUNCTION_17
0x40005c5	            0x415e	                                 pop r14	       874	sendf.c	FUNCTION_17
0x40005c7	              0xc3	                                     ret	       874	sendf.c	FUNCTION_17
Curl_recv_has_postponed_data	ELSE,0:SWITCH,0:DO,0:CALL,0:FOR,0:functions,0:WHILE,0:IF,0	2
0x400022c	      0xb800000000	                              mov eax, 0	       226	sendf.c	FUNCTION_3
0x4000231	              0xc3	                                     ret	       226	sendf.c	FUNCTION_3
pausewrite	ELSE,2:SWITCH,0:DO,0:CALL,6:FOR,1:functions,0:WHILE,0:IF,6	82
0x4000040	            0x4157	                                push r15	       481	sendf.c	FUNCTION_11
0x4000042	            0x4156	                                push r14	       481	sendf.c	FUNCTION_11
0x4000044	            0x4155	                                push r13	       481	sendf.c	FUNCTION_11
0x4000046	            0x4154	                                push r12	       481	sendf.c	FUNCTION_11
0x4000048	              0x55	                                push rbp	       481	sendf.c	FUNCTION_11
0x4000049	              0x53	                                push rbx	       481	sendf.c	FUNCTION_11
0x400004a	        0x4883ec18	                           sub rsp, 0x18	       481	sendf.c	FUNCTION_11
0x400004e	          0x4889fd	                            mov rbp, rdi	       481	sendf.c	FUNCTION_11
0x4000051	          0x4189f7	                           mov r15d, esi	       481	sendf.c	FUNCTION_11
0x4000054	          0x4989d5	                            mov r13, rdx	       481	sendf.c	FUNCTION_11
0x4000057	          0x4989cc	                            mov r12, rcx	       481	sendf.c	FUNCTION_11
0x400005a	    0x448bb7604d00	         mov r14d, dword [rdi + 0x4d60] 	       491	sendf.c	FUNCTION_11	IF_1
0x4000061	          0x4585f6	                         test r14d, r14d	       491	sendf.c	FUNCTION_11	IF_1
0x4000064	     0xf84f2000000	                            je 0x400015c	       491	sendf.c	FUNCTION_11	IF_1
0x400006a	    0x3bb7784d0000	          cmp esi, dword [rdi + 0x4d78] 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000070	     0xf84a5000000	                            je 0x400011b	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000076	    0x488d87904d00	                 lea rax, [rdi + 0x4d90]	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x400007d	      0xbb00000000	                              mov ebx, 0	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000082	            0xeb0e	                           jmp 0x4000092	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000084	        0x4883c018	                           add rax, 0x18	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000088	        0x443978e8	           cmp dword [rax - 0x18], r15d 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x400008c	     0xf848e000000	                            je 0x4000120	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000092	          0x83c301	                              add ebx, 1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000095	          0x4139de	                           cmp r14d, ebx	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000098	            0x75ea	                           jne 0x4000084	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x400009a	      0xe9bd000000	                           jmp 0x400015c	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x400009f	            0x89db	                            mov ebx, ebx	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x40000a1	        0x488d041b	                    lea rax, [rbx + rbx]	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x40000a5	      0x4889442408	                mov qword [rsp + 8], rax	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x40000aa	          0x4801d8	                            add rax, rbx	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x40000ad	          0x4c89f7	                            mov rdi, r14	        53	string3.h	FUNCTION_20	CALL_3
0x40000b0	    0x4803bcc5704d	   add rdi, qword [rbp + rax*8 + 0x4d70]	        53	string3.h	FUNCTION_20	CALL_3
0x40000b8	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_20	CALL_3
0x40000bb	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_20	CALL_3
0x40000be	      0xe800000000	                          call 0x40000c3	        53	string3.h	FUNCTION_20	CALL_3
0x40000c3	      0x488b742408	                mov rsi, qword [rsp + 8]	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40000c8	          0x4889f0	                            mov rax, rsi	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40000cb	          0x4801d8	                            add rax, rbx	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40000ce	    0x4c89b4c5684d	  mov qword [rbp + rax*8 + 0x4d68], r14 	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40000d6	          0x4801f3	                            add rbx, rsi	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40000d9	    0x4c89bcdd704d	  mov qword [rbp + rbx*8 + 0x4d70], r15 	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40000e1	            0xeb2a	                           jmp 0x400010d	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40000e3	          0x4589f6	                          mov r14d, r14d	       526	sendf.c	FUNCTION_11	ELSE_2
0x40000e6	        0x4b8d1436	                    lea rdx, [r14 + r14]	       526	sendf.c	FUNCTION_11	ELSE_2
0x40000ea	        0x4a8d0c32	                    lea rcx, [rdx + r14]	       526	sendf.c	FUNCTION_11	ELSE_2
0x40000ee	    0x488984cd684d	  mov qword [rbp + rcx*8 + 0x4d68], rax 	       526	sendf.c	FUNCTION_11	ELSE_2
0x40000f6	    0x4c89a4cd704d	  mov qword [rbp + rcx*8 + 0x4d70], r12 	       527	sendf.c	FUNCTION_11	ELSE_2
0x40000fe	    0x4489bccd784d	 mov dword [rbp + rcx*8 + 0x4d78], r15d 	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000106	    0x8385604d0000	             add dword [rbp + 0x4d60], 1	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x400010d	    0x838db4010000	            or dword [rbp + 0x1b4], 0x10	       535	sendf.c	FUNCTION_11
0x4000114	      0xba00000000	                              mov edx, 0	       540	sendf.c	FUNCTION_11
0x4000119	            0xeb5a	                           jmp 0x4000175	       540	sendf.c	FUNCTION_11
0x400011b	      0xbb00000000	                              mov ebx, 0	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000120	            0x89d8	                            mov eax, ebx	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000122	        0x488d1400	                    lea rdx, [rax + rax]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000126	        0x488d0c02	                    lea rcx, [rdx + rax]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x400012a	          0x4d89e7	                            mov r15, r12	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x400012d	    0x4c03bccd704d	   add r15, qword [rbp + rcx*8 + 0x4d70]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000135	          0x4c89fe	                            mov rsi, r15	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000138	    0x488bbccd684d	  mov rdi, qword [rbp + rcx*8 + 0x4d68] 	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000140	    0x488b05000000	            mov rax, qword [0x04000147] 	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000147	            0xff10	                        call qword [rax]	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000149	          0x4989c6	                            mov r14, rax	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x400014c	      0xba1b000000	                           mov edx, 0x1b	       512	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000151	          0x4885c0	                           test rax, rax	       511	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000154	     0xf8545ffffff	                           jne 0x400009f	       511	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x400015a	            0xeb19	                           jmp 0x4000175	       511	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x400015c	          0x4c89e6	                            mov rsi, r12	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x400015f	          0x4c89ef	                            mov rdi, r13	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000162	      0xe800000000	                          call 0x4000167	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000167	      0xba1b000000	                           mov edx, 0x1b	       523	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x400016c	          0x4885c0	                           test rax, rax	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x400016f	     0xf856effffff	                           jne 0x40000e3	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x4000175	            0x89d0	                            mov eax, edx	       541	sendf.c	FUNCTION_11
0x4000177	        0x4883c418	                           add rsp, 0x18	       541	sendf.c	FUNCTION_11
0x400017b	              0x5b	                                 pop rbx	       541	sendf.c	FUNCTION_11
0x400017c	              0x5d	                                 pop rbp	       541	sendf.c	FUNCTION_11
0x400017d	            0x415c	                                 pop r12	       541	sendf.c	FUNCTION_11
0x400017f	            0x415d	                                 pop r13	       541	sendf.c	FUNCTION_11
0x4000181	            0x415e	                                 pop r14	       541	sendf.c	FUNCTION_11
0x4000183	            0x415f	                                 pop r15	       541	sendf.c	FUNCTION_11
0x4000185	              0xc3	                                     ret	       541	sendf.c	FUNCTION_11
Curl_client_write	ELSE,0:SWITCH,0:DO,0:CALL,5:FOR,0:functions,0:WHILE,0:IF,3	232
0x4000a29	            0x4157	                                push r15	       644	sendf.c	FUNCTION_13
0x4000a2b	            0x4156	                                push r14	       644	sendf.c	FUNCTION_13
0x4000a2d	            0x4155	                                push r13	       644	sendf.c	FUNCTION_13
0x4000a2f	            0x4154	                                push r12	       644	sendf.c	FUNCTION_13
0x4000a31	              0x55	                                push rbp	       644	sendf.c	FUNCTION_13
0x4000a32	              0x53	                                push rbx	       644	sendf.c	FUNCTION_13
0x4000a33	        0x4883ec38	                           sub rsp, 0x38	       644	sendf.c	FUNCTION_13
0x4000a37	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       644	sendf.c	FUNCTION_13
0x4000a3c	        0x8974241c	             mov dword [rsp + 0x1c], esi	       644	sendf.c	FUNCTION_13
0x4000a40	      0x4889542420	             mov qword [rsp + 0x20], rdx	       644	sendf.c	FUNCTION_13
0x4000a45	      0x48894c2408	                mov qword [rsp + 8], rcx	       644	sendf.c	FUNCTION_13
0x4000a4a	          0x4885c9	                           test rcx, rcx	       647	sendf.c	FUNCTION_13	IF_1
0x4000a4d	     0xf8572030000	                           jne 0x4000dc5	       647	sendf.c	FUNCTION_13	IF_1
0x4000a53	          0x4889fb	                            mov rbx, rdi	       647	sendf.c	FUNCTION_13	IF_1
0x4000a56	          0x4889c8	                            mov rax, rcx	       647	sendf.c	FUNCTION_13	IF_1
0x4000a59	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       648	sendf.c	FUNCTION_13	CALL_1
0x4000a60	          0x4889d7	                            mov rdi, rdx	       648	sendf.c	FUNCTION_13	CALL_1
0x4000a63	            0xf2ae	              repne scasb al, byte [rdi]	       648	sendf.c	FUNCTION_13	CALL_1
0x4000a65	          0x48f7d1	                                 not rcx	       648	sendf.c	FUNCTION_13	CALL_1
0x4000a68	        0x488d41ff	                      lea rax, [rcx - 1]	       648	sendf.c	FUNCTION_13	CALL_1
0x4000a6c	      0x4889442408	                mov qword [rsp + 8], rax	       648	sendf.c	FUNCTION_13	CALL_1
0x4000a71	          0x4189f4	                           mov r12d, esi	       653	sendf.c	FUNCTION_13	IF_2
0x4000a74	        0x4183e401	                             and r12d, 1	       653	sendf.c	FUNCTION_13	IF_2
0x4000a78	     0xf8450010000	                            je 0x4000bce	       653	sendf.c	FUNCTION_13	IF_2
0x4000a7e	    0x488b83e00300	           mov rax, qword [rbx + 0x3e0] 	       654	sendf.c	FUNCTION_13	IF_2
0x4000a85	    0xf68080000000	            test byte [rax + 0x80], 0xc 	       653	sendf.c	FUNCTION_13	IF_2
0x4000a8c	     0xf843c010000	                            je 0x4000bce	       653	sendf.c	FUNCTION_13	IF_2
0x4000a92	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       654	sendf.c	FUNCTION_13	IF_2
0x4000a97	    0x80b8fc060000	           cmp byte [rax + 0x6fc], 0x41 	       654	sendf.c	FUNCTION_13	IF_2
0x4000a9e	     0xf852a010000	                           jne 0x4000bce	       654	sendf.c	FUNCTION_13	IF_2
0x4000aa4	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        65	sendf.c	FUNCTION_1	IF_1
0x4000aa9	          0x4885c0	                           test rax, rax	        65	sendf.c	FUNCTION_1	IF_1
0x4000aac	     0xf841c010000	                            je 0x4000bce	        65	sendf.c	FUNCTION_1	IF_1
0x4000ab2	    0x48837c240800	                  cmp qword [rsp + 8], 0	        65	sendf.c	FUNCTION_1	IF_1
0x4000ab8	     0xf8410010000	                            je 0x4000bce	        65	sendf.c	FUNCTION_1	IF_1
0x4000abe	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       645	sendf.c	FUNCTION_13
0x4000ac3	          0x4c8b2e	                    mov r13, qword [rsi]	       645	sendf.c	FUNCTION_13
0x4000ac6	    0x4180bd025100	              cmp byte [r13 + 0x5102], 0	        69	sendf.c	FUNCTION_1	IF_2
0x4000ace	            0x7434	                            je 0x4000b04	        69	sendf.c	FUNCTION_1	IF_2
0x4000ad0	          0x80380a	                     cmp byte [rax], 0xa	        72	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000ad3	            0x7527	                           jne 0x4000afc	        72	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000ad5	    0x48836c240801	                  sub qword [rsp + 8], 1	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x4000adb	      0x488b442408	                mov rax, qword [rsp + 8]	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x4000ae0	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_21	CALL_3
0x4000ae5	          0x4889fe	                            mov rsi, rdi	        59	string3.h	FUNCTION_21	CALL_3
0x4000ae8	        0x4883c601	                              add rsi, 1	        59	string3.h	FUNCTION_21	CALL_3
0x4000aec	          0x4889c2	                            mov rdx, rax	        59	string3.h	FUNCTION_21	CALL_3
0x4000aef	      0xe800000000	                          call 0x4000af4	        59	string3.h	FUNCTION_21	CALL_3
0x4000af4	    0x498385085100	             add qword [r13 + 0x5108], 1	        78	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000afc	    0x41c685025100	              mov byte [r13 + 0x5102], 0	        80	sendf.c	FUNCTION_1	IF_2
0x4000b04	      0x4c8b742408	                mov r14, qword [rsp + 8]	        84	sendf.c	FUNCTION_1	CALL_2
0x4000b09	          0x4c89f2	                            mov rdx, r14	        84	sendf.c	FUNCTION_1	CALL_2
0x4000b0c	      0xbe0d000000	                            mov esi, 0xd	        84	sendf.c	FUNCTION_1	CALL_2
0x4000b11	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	        84	sendf.c	FUNCTION_1	CALL_2
0x4000b16	          0x4c89ff	                            mov rdi, r15	        84	sendf.c	FUNCTION_1	CALL_2
0x4000b19	      0xe800000000	                          call 0x4000b1e	        84	sendf.c	FUNCTION_1	CALL_2
0x4000b1e	          0x4889c3	                            mov rbx, rax	        84	sendf.c	FUNCTION_1	CALL_2
0x4000b21	          0x4885c0	                           test rax, rax	        85	sendf.c	FUNCTION_1	IF_4
0x4000b24	     0xf84a4000000	                            je 0x4000bce	        85	sendf.c	FUNCTION_1	IF_4
0x4000b2a	      0x4f8d7437ff	                lea r14, [r15 + r14 - 1]	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000b2f	          0x4c39f3	                            cmp rbx, r14	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000b32	            0x7358	                           jae 0x4000b8c	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000b34	          0x4889dd	                            mov rbp, rbx	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000b37	    0x4c8d3d000000	                   lea r15, [0x04000b3e]	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000b3e	      0xba02000000	                              mov edx, 2	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000b43	          0x4c89fe	                            mov rsi, r15	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000b46	          0x4889df	                            mov rdi, rbx	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000b49	      0xe800000000	                          call 0x4000b4e	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000b4e	            0x85c0	                           test eax, eax	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000b50	            0x7515	                           jne 0x4000b67	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000b52	        0x488d4301	                      lea rax, [rbx + 1]	        91	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000b56	         0xfb65301	               movzx edx, byte [rbx + 1]	        92	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000b5a	          0x885500	                      mov byte [rbp], dl	        92	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000b5d	    0x498385085100	             add qword [r13 + 0x5108], 1	        94	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000b65	            0xeb16	                           jmp 0x4000b7d	        94	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000b67	           0xfb603	                   movzx eax, byte [rbx]	        97	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000b6a	            0x3c0d	                             cmp al, 0xd	        97	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000b6c	            0x7509	                           jne 0x4000b77	        97	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000b6e	        0xc645000a	                     mov byte [rbp], 0xa	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000b72	          0x4889d8	                            mov rax, rbx	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000b75	            0xeb06	                           jmp 0x4000b7d	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000b77	          0x884500	                      mov byte [rbp], al	       103	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	ELSE_2
0x4000b7a	          0x4889d8	                            mov rax, rbx	       103	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	ELSE_2
0x4000b7d	        0x4883c501	                              add rbp, 1	       106	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000b81	        0x488d5801	                      lea rbx, [rax + 1]	       107	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000b85	          0x4c39f3	                            cmp rbx, r14	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000b88	            0x72b4	                            jb 0x4000b3e	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000b8a	            0xeb03	                           jmp 0x4000b8f	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000b8c	          0x4889dd	                            mov rbp, rbx	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000b8f	      0x488b442408	                mov rax, qword [rsp + 8]	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000b94	      0x4803442420	             add rax, qword [rsp + 0x20]	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000b99	          0x4839d8	                            cmp rax, rbx	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000b9c	            0x761d	                           jbe 0x4000bbb	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000b9e	           0xfb613	                   movzx edx, byte [rbx]	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000ba1	          0x80fa0d	                             cmp dl, 0xd	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000ba4	            0x750e	                           jne 0x4000bb4	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000ba6	        0xc645000a	                     mov byte [rbp], 0xa	       114	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000baa	    0x41c685025100	              mov byte [r13 + 0x5102], 1	       116	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000bb2	            0xeb03	                           jmp 0x4000bb7	       116	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000bb4	          0x885500	                      mov byte [rbp], dl	       120	sendf.c	FUNCTION_1	IF_4	IF_7	ELSE_3
0x4000bb7	        0x4883c501	                              add rbp, 1	       122	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000bbb	          0x4839e8	                            cmp rax, rbp	       124	sendf.c	FUNCTION_1	IF_4	IF_9
0x4000bbe	            0x7604	                           jbe 0x4000bc4	       124	sendf.c	FUNCTION_1	IF_4	IF_9
0x4000bc0	        0xc6450000	                       mov byte [rbp], 0	       126	sendf.c	FUNCTION_1	IF_4	IF_9
0x4000bc4	      0x482b6c2420	             sub rbp, qword [rsp + 0x20]	       128	sendf.c	FUNCTION_1	IF_4
0x4000bc9	      0x48896c2408	                mov qword [rsp + 8], rbp	       128	sendf.c	FUNCTION_1	IF_4
0x4000bce	      0xb800000000	                              mov eax, 0	       560	sendf.c	FUNCTION_12	IF_1
0x4000bd3	    0x48837c240800	                  cmp qword [rsp + 8], 0	       559	sendf.c	FUNCTION_12	IF_1
0x4000bd9	     0xf840f020000	                            je 0x4000dee	       559	sendf.c	FUNCTION_12	IF_1
0x4000bdf	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       553	sendf.c	FUNCTION_12
0x4000be4	          0x4c8b30	                    mov r14, qword [rax]	       553	sendf.c	FUNCTION_12
0x4000be7	    0x41f686b40100	          test byte [r14 + 0x1b4], 0x10 	       564	sendf.c	FUNCTION_12	IF_2
0x4000bef	            0x741b	                            je 0x4000c0c	       564	sendf.c	FUNCTION_12	IF_2
0x4000bf1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       565	sendf.c	FUNCTION_12	CALL_1
0x4000bf6	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       565	sendf.c	FUNCTION_12	CALL_1
0x4000bfb	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       565	sendf.c	FUNCTION_12	CALL_1
0x4000bff	          0x4c89f7	                            mov rdi, r14	       565	sendf.c	FUNCTION_12	CALL_1
0x4000c02	      0xe839f4ffff	                     call sym.pausewrite	       565	sendf.c	FUNCTION_12	CALL_1
0x4000c07	      0xe9e2010000	                           jmp 0x4000dee	       565	sendf.c	FUNCTION_12	CALL_1
0x4000c0c	    0x41bd00000000	                             mov r13d, 0	       555	sendf.c	FUNCTION_12
0x4000c12	          0x4585e4	                         test r12d, r12d	       568	sendf.c	FUNCTION_12	IF_3
0x4000c15	            0x7407	                            je 0x4000c1e	       568	sendf.c	FUNCTION_12	IF_3
0x4000c17	    0x4d8bae880200	           mov r13, qword [r14 + 0x288] 	       569	sendf.c	FUNCTION_12	IF_3
0x4000c1e	    0x48c744242800	               mov qword [rsp + 0x28], 0	       554	sendf.c	FUNCTION_12
0x4000c27	      0xf644241c02	               test byte [rsp + 0x1c], 2	       570	sendf.c	FUNCTION_12	IF_4
0x4000c2c	            0x7427	                            je 0x4000c55	       570	sendf.c	FUNCTION_12	IF_4
0x4000c2e	    0x498b86900200	           mov rax, qword [r14 + 0x290] 	       571	sendf.c	FUNCTION_12	IF_4
0x4000c35	      0x4889442428	             mov qword [rsp + 0x28], rax	       571	sendf.c	FUNCTION_12	IF_4
0x4000c3a	          0x4885c0	                           test rax, rax	       570	sendf.c	FUNCTION_12	IF_4
0x4000c3d	            0x7516	                           jne 0x4000c55	       570	sendf.c	FUNCTION_12	IF_4
0x4000c3f	    0x4983be200200	              cmp qword [r14 + 0x220], 0	       571	sendf.c	FUNCTION_12	IF_4
0x4000c47	            0x740c	                            je 0x4000c55	       571	sendf.c	FUNCTION_12	IF_4
0x4000c49	    0x498b86880200	           mov rax, qword [r14 + 0x288] 	       577	sendf.c	FUNCTION_12	IF_4
0x4000c50	      0x4889442428	             mov qword [rsp + 0x28], rax	       577	sendf.c	FUNCTION_12	IF_4
0x4000c55	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       555	sendf.c	FUNCTION_12
0x4000c5a	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       555	sendf.c	FUNCTION_12
0x4000c5f	    0x41bf00400000	                        mov r15d, 0x4000	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000c65	    0x4881fd004000	                         cmp rbp, 0x4000	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000c6c	          0x4c89fb	                            mov rbx, r15	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000c6f	        0x480f46dd	                         cmovbe rbx, rbp	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000c73	          0x4d85ed	                           test r13, r13	       584	sendf.c	FUNCTION_12	WHILE_1	IF_5
0x4000c76	     0xf8490000000	                            je 0x4000d0c	       584	sendf.c	FUNCTION_12	WHILE_1	IF_5
0x4000c7c	    0x498b8e100200	           mov rcx, qword [r14 + 0x210] 	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000c83	          0x4889da	                            mov rdx, rbx	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000c86	      0xbe01000000	                              mov esi, 1	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000c8b	          0x4c89e7	                            mov rdi, r12	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000c8e	          0x41ffd5	                                call r13	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000c91	    0x483d01000010	                     cmp rax, 0x10000001	       587	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6
0x4000c97	            0x754a	                           jne 0x4000ce3	       587	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6
0x4000c99	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000c9e	    0x488b80e00300	           mov rax, qword [rax + 0x3e0] 	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000ca5	    0xf68084000000	           test byte [rax + 0x84], 0x10 	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000cac	            0x741e	                            je 0x4000ccc	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000cae	    0x488d35000000	                   lea rsi, [0x04000cb5]	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000cb5	          0x4c89f7	                            mov rdi, r14	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000cb8	      0xb800000000	                              mov eax, 0	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000cbd	      0xe800000000	                          call 0x4000cc2	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000cc2	      0xb817000000	                           mov eax, 0x17	       593	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000cc7	      0xe922010000	                           jmp 0x4000dee	       593	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000ccc	          0x4889e9	                            mov rcx, rbp	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000ccf	          0x4c89e2	                            mov rdx, r12	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000cd2	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000cd6	          0x4c89f7	                            mov rdi, r14	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000cd9	      0xe862f3ffff	                     call sym.pausewrite	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000cde	      0xe90b010000	                           jmp 0x4000dee	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000ce3	          0x4839c3	                            cmp rbx, rax	       597	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000ce6	            0x7424	                            je 0x4000d0c	       597	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000ce8	          0x4889d9	                            mov rcx, rbx	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000ceb	          0x4889c2	                            mov rdx, rax	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000cee	    0x488d35000000	                   lea rsi, [0x04000cf5]	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000cf5	          0x4c89f7	                            mov rdi, r14	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000cf8	      0xb800000000	                              mov eax, 0	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000cfd	      0xe800000000	                          call 0x4000d02	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000d02	      0xb817000000	                           mov eax, 0x17	       599	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000d07	      0xe9e2000000	                           jmp 0x4000dee	       599	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000d0c	          0x4901dc	                            add r12, rbx	       603	sendf.c	FUNCTION_12	WHILE_1
0x4000d0f	          0x4829dd	                            sub rbp, rbx	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000d12	     0xf854dffffff	                           jne 0x4000c65	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000d18	      0xb800000000	                              mov eax, 0	       627	sendf.c	FUNCTION_12
0x4000d1d	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       607	sendf.c	FUNCTION_12	IF_9
0x4000d22	          0x4885db	                           test rbx, rbx	       607	sendf.c	FUNCTION_12	IF_9
0x4000d25	     0xf84c3000000	                            je 0x4000dee	       607	sendf.c	FUNCTION_12	IF_9
0x4000d2b	      0xbe01000000	                              mov esi, 1	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000d30	          0x4c89f7	                            mov rdi, r14	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000d33	      0xe800000000	                          call 0x4000d38	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000d38	    0x498b8e200200	           mov rcx, qword [r14 + 0x220] 	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000d3f	      0x488b542408	                mov rdx, qword [rsp + 8]	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000d44	      0xbe01000000	                              mov esi, 1	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000d49	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000d4e	            0xffd3	                                call rbx	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000d50	          0x4889c3	                            mov rbx, rax	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000d53	      0xbe00000000	                              mov esi, 0	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x4000d58	          0x4c89f7	                            mov rdi, r14	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x4000d5b	      0xe800000000	                          call 0x4000d60	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x4000d60	    0x4881fb010000	                     cmp rbx, 0x10000001	       615	sendf.c	FUNCTION_12	IF_9	IF_10
0x4000d67	            0x7519	                           jne 0x4000d82	       615	sendf.c	FUNCTION_12	IF_9	IF_10
0x4000d69	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000d6e	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000d73	      0xbe02000000	                              mov esi, 2	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000d78	          0x4c89f7	                            mov rdi, r14	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000d7b	      0xe8c0f2ffff	                     call sym.pausewrite	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000d80	            0xeb6c	                           jmp 0x4000dee	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000d82	      0xb800000000	                              mov eax, 0	       627	sendf.c	FUNCTION_12
0x4000d87	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	       621	sendf.c	FUNCTION_12	IF_9	IF_11
0x4000d8c	            0x7460	                            je 0x4000dee	       621	sendf.c	FUNCTION_12	IF_9	IF_11
0x4000d8e	    0x488d35000000	                   lea rsi, [0x04000d95]	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4000d95	          0x4c89f7	                            mov rdi, r14	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4000d98	      0xe800000000	                          call 0x4000d9d	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4000d9d	      0xb817000000	                           mov eax, 0x17	       623	sendf.c	FUNCTION_12	IF_9	IF_11
0x4000da2	            0xeb4a	                           jmp 0x4000dee	       623	sendf.c	FUNCTION_12	IF_9	IF_11
0x4000da4	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       553	sendf.c	FUNCTION_12
0x4000da9	          0x4c8b30	                    mov r14, qword [rax]	       553	sendf.c	FUNCTION_12
0x4000dac	    0x41f686b40100	          test byte [r14 + 0x1b4], 0x10 	       564	sendf.c	FUNCTION_12	IF_2
0x4000db4	     0xf8537feffff	                           jne 0x4000bf1	       564	sendf.c	FUNCTION_12	IF_2
0x4000dba	    0x41bd00000000	                             mov r13d, 0	       555	sendf.c	FUNCTION_12
0x4000dc0	      0xe959feffff	                           jmp 0x4000c1e	       555	sendf.c	FUNCTION_12
0x4000dc5	      0x448b64241c	           mov r12d, dword [rsp + 0x1c] 	       653	sendf.c	FUNCTION_13	IF_2
0x4000dca	        0x4183e401	                             and r12d, 1	       653	sendf.c	FUNCTION_13	IF_2
0x4000dce	            0x74d4	                            je 0x4000da4	       653	sendf.c	FUNCTION_13	IF_2
0x4000dd0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       654	sendf.c	FUNCTION_13	IF_2
0x4000dd5	    0x488b80e00300	           mov rax, qword [rax + 0x3e0] 	       654	sendf.c	FUNCTION_13	IF_2
0x4000ddc	    0xf68080000000	            test byte [rax + 0x80], 0xc 	       653	sendf.c	FUNCTION_13	IF_2
0x4000de3	     0xf85a9fcffff	                           jne 0x4000a92	       653	sendf.c	FUNCTION_13	IF_2
0x4000de9	      0xe9f1fdffff	                           jmp 0x4000bdf	       653	sendf.c	FUNCTION_13	IF_2
0x4000dee	        0x4883c438	                           add rsp, 0x38	       669	sendf.c	FUNCTION_13
0x4000df2	              0x5b	                                 pop rbx	       669	sendf.c	FUNCTION_13
0x4000df3	              0x5d	                                 pop rbp	       669	sendf.c	FUNCTION_13
0x4000df4	            0x415c	                                 pop r12	       669	sendf.c	FUNCTION_13
0x4000df6	            0x415d	                                 pop r13	       669	sendf.c	FUNCTION_13
0x4000df8	            0x415e	                                 pop r14	       669	sendf.c	FUNCTION_13
0x4000dfa	            0x415f	                                 pop r15	       669	sendf.c	FUNCTION_13
0x4000dfc	              0xc3	                                     ret	       669	sendf.c	FUNCTION_13
showit	ELSE,1:SWITCH,2:DO,0:CALL,9:FOR,1:functions,0:WHILE,0:IF,5	47
0x4000186	            0x4156	                                push r14	       767	sendf.c	FUNCTION_16
0x4000188	            0x4155	                                push r13	       767	sendf.c	FUNCTION_16
0x400018a	            0x4154	                                push r12	       767	sendf.c	FUNCTION_16
0x400018c	              0x55	                                push rbp	       767	sendf.c	FUNCTION_16
0x400018d	              0x53	                                push rbx	       767	sendf.c	FUNCTION_16
0x400018e	          0x4889fb	                            mov rbx, rdi	       767	sendf.c	FUNCTION_16
0x4000191	            0x89f5	                            mov ebp, esi	       767	sendf.c	FUNCTION_16
0x4000193	          0x4989d5	                            mov r13, rdx	       767	sendf.c	FUNCTION_16
0x4000196	          0x4989ce	                            mov r14, rcx	       767	sendf.c	FUNCTION_16
0x4000199	    0x4883bfc00200	              cmp qword [rdi + 0x2c0], 0	       809	sendf.c	FUNCTION_16	IF_4
0x40001a1	            0x7434	                            je 0x40001d7	       809	sendf.c	FUNCTION_16	IF_4
0x40001a3	      0xbe01000000	                              mov esi, 1	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x40001a8	      0xe800000000	                          call 0x40001ad	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x40001ad	    0x4c8b83f80100	            mov r8, qword [rbx + 0x1f8] 	       811	sendf.c	FUNCTION_16	IF_4
0x40001b4	          0x4c89f1	                            mov rcx, r14	       811	sendf.c	FUNCTION_16	IF_4
0x40001b7	          0x4c89ea	                            mov rdx, r13	       811	sendf.c	FUNCTION_16	IF_4
0x40001ba	            0x89ee	                            mov esi, ebp	       811	sendf.c	FUNCTION_16	IF_4
0x40001bc	          0x4889df	                            mov rdi, rbx	       811	sendf.c	FUNCTION_16	IF_4
0x40001bf	    0xff93c0020000	                call qword [rbx + 0x2c0]	       811	sendf.c	FUNCTION_16	IF_4
0x40001c5	          0x4189c4	                           mov r12d, eax	       811	sendf.c	FUNCTION_16	IF_4
0x40001c8	      0xbe00000000	                              mov esi, 0	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40001cd	          0x4889df	                            mov rdi, rbx	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40001d0	      0xe800000000	                          call 0x40001d5	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40001d5	            0xeb49	                           jmp 0x4000220	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40001d7	    0x41bc00000000	                             mov r12d, 0	       770	sendf.c	FUNCTION_16
0x40001dd	          0x83fe02	                              cmp esi, 2	       815	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2
0x40001e0	            0x773e	                            ja 0x4000220	       815	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2
0x40001e2	    0x488b8ff00100	           mov rcx, qword [rdi + 0x1f0] 	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40001e9	            0x89f5	                            mov ebp, esi	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40001eb	      0x488d7c6d00	                  lea rdi, [rbp + rbp*2]	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40001f0	    0x488d05000000	                   lea rax, [0x040001f7]	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40001f7	          0x4801c7	                            add rdi, rax	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40001fa	      0xba01000000	                              mov edx, 1	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40001ff	      0xbe02000000	                              mov esi, 2	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x4000204	      0xe800000000	                          call 0x4000209	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x4000209	    0x488b8bf00100	           mov rcx, qword [rbx + 0x1f0] 	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x4000210	      0xba01000000	                              mov edx, 1	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x4000215	          0x4c89f6	                            mov rsi, r14	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x4000218	          0x4c89ef	                            mov rdi, r13	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x400021b	      0xe800000000	                          call 0x4000220	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x4000220	          0x4489e0	                           mov eax, r12d	       836	sendf.c	FUNCTION_16
0x4000223	              0x5b	                                 pop rbx	       836	sendf.c	FUNCTION_16
0x4000224	              0x5d	                                 pop rbp	       836	sendf.c	FUNCTION_16
0x4000225	            0x415c	                                 pop r12	       836	sendf.c	FUNCTION_16
0x4000227	            0x415d	                                 pop r13	       836	sendf.c	FUNCTION_16
0x4000229	            0x415e	                                 pop r14	       836	sendf.c	FUNCTION_16
0x400022b	              0xc3	                                     ret	       836	sendf.c	FUNCTION_16
Curl_write_plain	ELSE,0:SWITCH,0:DO,0:CALL,1:FOR,0:functions,0:WHILE,0:IF,0	20
0x4000937	              0x53	                                push rbx	       422	sendf.c	FUNCTION_9
0x4000938	        0x4883ec10	                           sub rsp, 0x10	       422	sendf.c	FUNCTION_9
0x400093c	          0x4c89c3	                             mov rbx, r8	       422	sendf.c	FUNCTION_9
0x400093f	    0x64488b042528	                mov rax, qword fs:[0x28]	       422	sendf.c	FUNCTION_9
0x4000948	      0x4889442408	                mov qword [rsp + 8], rax	       422	sendf.c	FUNCTION_9
0x400094d	            0x31c0	                            xor eax, eax	       422	sendf.c	FUNCTION_9
0x400094f	    0x39b75c020000	           cmp dword [rdi + 0x25c], esi 	       427	sendf.c	FUNCTION_9	CALL_1
0x4000955	        0x400f94c6	                                sete sil	       427	sendf.c	FUNCTION_9	CALL_1
0x4000959	        0x400fb6f6	                          movzx esi, sil	       427	sendf.c	FUNCTION_9	CALL_1
0x400095d	      0x4c8d442404	                       lea r8, [rsp + 4]	       427	sendf.c	FUNCTION_9	CALL_1
0x4000962	      0xe800000000	                          call 0x4000967	       427	sendf.c	FUNCTION_9	CALL_1
0x4000967	          0x488903	                    mov qword [rbx], rax	       429	sendf.c	FUNCTION_9
0x400096a	        0x8b442404	                mov eax, dword [rsp + 4]	       432	sendf.c	FUNCTION_9
0x400096e	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       432	sendf.c	FUNCTION_9
0x4000973	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       432	sendf.c	FUNCTION_9
0x400097c	            0x7405	                            je 0x4000983	       432	sendf.c	FUNCTION_9
0x400097e	      0xe800000000	                          call 0x4000983	       432	sendf.c	FUNCTION_9
0x4000983	        0x4883c410	                           add rsp, 0x10	       432	sendf.c	FUNCTION_9
0x4000987	              0x5b	                                 pop rbx	       432	sendf.c	FUNCTION_9
0x4000988	              0xc3	                                     ret	       432	sendf.c	FUNCTION_9
