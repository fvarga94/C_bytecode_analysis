u_write_undo	SWITCH,0:FOR,0:IF,38:functions,0:ELSE,6:CALL,59:WHILE,1:DO,0	414
0x40027e6	              0x55	                                push rbp	      1517	undo.c	FUNCTION_35
0x40027e7	          0x4889e5	                            mov rbp, rsp	      1517	undo.c	FUNCTION_35
0x40027ea	    0x4881ecd00100	                          sub rsp, 0x1d0	      1517	undo.c	FUNCTION_35
0x40027f1	    0x4889bd48feff	            mov qword [rbp - 0x1b8], rdi	      1517	undo.c	FUNCTION_35
0x40027f8	    0x89b544feffff	            mov dword [rbp - 0x1bc], esi	      1517	undo.c	FUNCTION_35
0x40027fe	    0x48899538feff	            mov qword [rbp - 0x1c8], rdx	      1517	undo.c	FUNCTION_35
0x4002805	    0x48898d30feff	            mov qword [rbp - 0x1d0], rcx	      1517	undo.c	FUNCTION_35
0x400280c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1517	undo.c	FUNCTION_35
0x4002815	        0x488945f8	                mov qword [rbp - 8], rax	      1517	undo.c	FUNCTION_35
0x4002819	            0x31c0	                            xor eax, eax	      1517	undo.c	FUNCTION_35
0x400281b	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      1525	undo.c	FUNCTION_35
0x4002826	    0xc7855cfeffff	              mov dword [rbp - 0x1a4], 0	      1527	undo.c	FUNCTION_35
0x4002830	    0xc78560feffff	              mov dword [rbp - 0x1a0], 0	      1529	undo.c	FUNCTION_35
0x400283a	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1535	undo.c	FUNCTION_35	CALL_1
0x4002841	      0xba30000000	                           mov edx, 0x30	      1535	undo.c	FUNCTION_35	CALL_1
0x4002846	      0xbe00000000	                              mov esi, 0	      1535	undo.c	FUNCTION_35	CALL_1
0x400284b	          0x4889c7	                            mov rdi, rax	      1535	undo.c	FUNCTION_35	CALL_1
0x400284e	      0xe800000000	                          call 0x4002853	      1535	undo.c	FUNCTION_35	CALL_1
0x4002853	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1537	undo.c	FUNCTION_35	IF_1
0x400285b	            0x7562	                           jne 0x40028bf	      1537	undo.c	FUNCTION_35	IF_1
0x400285d	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x4002864	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x400286b	      0xbe00000000	                              mov esi, 0	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x4002870	          0x4889c7	                            mov rdi, rax	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x4002873	      0xe800000000	                          call 0x4002878	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x4002878	    0x48898578feff	            mov qword [rbp - 0x188], rax	      1539	undo.c	FUNCTION_35	IF_1	CALL_2
0x400287f	    0x4883bd78feff	              cmp qword [rbp - 0x188], 0	      1540	undo.c	FUNCTION_35	IF_1	IF_2
0x4002887	            0x7544	                           jne 0x40028cd	      1540	undo.c	FUNCTION_35	IF_1	IF_2
0x4002889	    0x488b05000000	            mov rax, qword [0x04002890] 	      1542	undo.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002890	          0x4885c0	                           test rax, rax	      1542	undo.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002893	     0xf8eea060000	                           jle 0x4002f83	      1542	undo.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4002899	      0xe800000000	                          call 0x400289e	      1544	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_3
0x400289e	      0xbf00000000	                              mov edi, 0	      1546	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_5
0x40028a3	      0xe800000000	                          call 0x40028a8	      1546	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_5
0x40028a8	          0x4889c7	                            mov rdi, rax	      1545	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_4
0x40028ab	      0xb800000000	                              mov eax, 0	      1545	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_4
0x40028b0	      0xe800000000	                          call 0x40028b5	      1545	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_4
0x40028b5	      0xe800000000	                          call 0x40028ba	      1547	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_6
0x40028ba	      0xe9c5060000	                           jmp 0x4002f84	      1547	undo.c	FUNCTION_35	IF_1	IF_2	IF_3	CALL_6
0x40028bf	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      1553	undo.c	FUNCTION_35	ELSE_1
0x40028c6	    0x48898578feff	            mov qword [rbp - 0x188], rax	      1553	undo.c	FUNCTION_35	ELSE_1
0x40028cd	    0xc78558feffff	         mov dword [rbp - 0x1a8], 0x180 	      1560	undo.c	FUNCTION_35	ELSE_1
0x40028d7	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1561	undo.c	FUNCTION_35	ELSE_1	IF_4
0x40028de	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1561	undo.c	FUNCTION_35	ELSE_1	IF_4
0x40028e5	          0x4885c0	                           test rax, rax	      1561	undo.c	FUNCTION_35	ELSE_1	IF_4
0x40028e8	            0x743a	                            je 0x4002924	      1561	undo.c	FUNCTION_35	ELSE_1	IF_4
0x40028ea	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x40028f1	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x40028f8	    0x488d95c0feff	                  lea rdx, [rbp - 0x140]	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x40028ff	          0x4889d6	                            mov rsi, rdx	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x4002902	          0x4889c7	                            mov rdi, rax	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x4002905	      0xe800000000	                          call 0x400290a	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x400290a	            0x85c0	                           test eax, eax	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x400290c	            0x7816	                            js 0x4002924	      1564	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5	CALL_7
0x400290e	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	      1566	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5
0x4002914	    0x898558feffff	            mov dword [rbp - 0x1a8], eax	      1566	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5
0x400291a	    0xc78560feffff	              mov dword [rbp - 0x1a0], 1	      1567	undo.c	FUNCTION_35	ELSE_1	IF_4	IF_5
0x4002924	    0x81a558feffff	          and dword [rbp - 0x1a8], 0x1b6	      1577	undo.c	FUNCTION_35
0x400292e	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1581	undo.c	FUNCTION_35	IF_7	CALL_9
0x4002935	          0x4889c7	                            mov rdi, rax	      1581	undo.c	FUNCTION_35	IF_7	CALL_9
0x4002938	      0xe800000000	                          call 0x400293d	      1581	undo.c	FUNCTION_35	IF_7	CALL_9
0x400293d	          0x4885c0	                           test rax, rax	      1581	undo.c	FUNCTION_35	IF_7	CALL_9
0x4002940	     0xf886c010000	                            js 0x4002ab2	      1581	undo.c	FUNCTION_35	IF_7	CALL_9
0x4002946	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1583	undo.c	FUNCTION_35	IF_7	IF_8
0x400294e	            0x740d	                            je 0x400295d	      1583	undo.c	FUNCTION_35	IF_7	IF_8
0x4002950	    0x83bd44feffff	              cmp dword [rbp - 0x1bc], 0	      1583	undo.c	FUNCTION_35	IF_7	IF_8
0x4002957	     0xf8546010000	                           jne 0x4002aa3	      1583	undo.c	FUNCTION_35	IF_7	IF_8
0x400295d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x4002964	      0xba00000000	                              mov edx, 0	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x4002969	      0xbe00000000	                              mov esi, 0	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x400296e	          0x4889c7	                            mov rdi, rax	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x4002971	      0xb800000000	                              mov eax, 0	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x4002976	      0xe800000000	                          call 0x400297b	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x400297b	    0x898564feffff	            mov dword [rbp - 0x19c], eax	      1586	undo.c	FUNCTION_35	IF_7	IF_8	CALL_10
0x4002981	    0x83bd64feffff	              cmp dword [rbp - 0x19c], 0	      1587	undo.c	FUNCTION_35	IF_7	IF_8	IF_9
0x4002988	            0x7965	                           jns 0x40029ef	      1587	undo.c	FUNCTION_35	IF_7	IF_8	IF_9
0x400298a	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1589	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10
0x4002992	            0x7510	                           jne 0x40029a4	      1589	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10
0x4002994	    0x488b05000000	            mov rax, qword [0x0400299b] 	      1589	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10
0x400299b	          0x4885c0	                           test rax, rax	      1589	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10
0x400299e	     0xf8e8d050000	                           jle 0x4002f31	      1589	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10
0x40029a4	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1591	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	IF_11
0x40029ac	            0x7505	                           jne 0x40029b3	      1591	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	IF_11
0x40029ae	      0xe800000000	                          call 0x40029b3	      1592	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_11
0x40029b3	      0xbf00000000	                              mov edi, 0	      1594	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_13
0x40029b8	      0xe800000000	                          call 0x40029bd	      1594	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_13
0x40029bd	          0x4889c2	                            mov rdx, rax	      1594	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_13
0x40029c0	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1593	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_12
0x40029c7	          0x4889c6	                            mov rsi, rax	      1593	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_12
0x40029ca	          0x4889d7	                            mov rdi, rdx	      1593	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_12
0x40029cd	      0xb800000000	                              mov eax, 0	      1593	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_12
0x40029d2	      0xe800000000	                          call 0x40029d7	      1593	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_12
0x40029d7	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1596	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	IF_12
0x40029df	     0xf854c050000	                           jne 0x4002f31	      1596	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	IF_12
0x40029e5	      0xe800000000	                          call 0x40029ea	      1597	undo.c	FUNCTION_35	IF_7	IF_8	IF_9	IF_10	CALL_14
0x40029ea	      0xe942050000	                           jmp 0x4002f31	      1599	undo.c	FUNCTION_35	IF_7	IF_8	IF_9
0x40029ef	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x40029f3	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x40029f9	      0xba09000000	                              mov edx, 9	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x40029fe	          0x4889ce	                            mov rsi, rcx	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x4002a01	            0x89c7	                            mov edi, eax	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x4002a03	      0xe800000000	                          call 0x4002a08	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x4002a08	    0x898568feffff	            mov dword [rbp - 0x198], eax	      1606	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_15
0x4002a0e	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	      1607	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_16
0x4002a14	            0x89c7	                            mov edi, eax	      1607	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_16
0x4002a16	      0xe800000000	                          call 0x4002a1b	      1607	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	CALL_16
0x4002a1b	    0x83bd68feffff	              cmp dword [rbp - 0x198], 8	      1608	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13
0x4002a22	            0x7e1a	                           jle 0x4002a3e	      1608	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13
0x4002a24	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x4002a28	      0xba09000000	                              mov edx, 9	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x4002a2d	      0xbe00000000	                              mov esi, 0	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x4002a32	          0x4889c7	                            mov rdi, rax	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x4002a35	      0xe800000000	                          call 0x4002a3a	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x4002a3a	            0x85c0	                           test eax, eax	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x4002a3c	            0x7465	                            je 0x4002aa3	      1609	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	CALL_17
0x4002a3e	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1611	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14
0x4002a46	            0x7510	                           jne 0x4002a58	      1611	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14
0x4002a48	    0x488b05000000	            mov rax, qword [0x04002a4f] 	      1611	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14
0x4002a4f	          0x4885c0	                           test rax, rax	      1611	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14
0x4002a52	     0xf8edc040000	                           jle 0x4002f34	      1611	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14
0x4002a58	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1613	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	IF_15
0x4002a60	            0x7505	                           jne 0x4002a67	      1613	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	IF_15
0x4002a62	      0xe800000000	                          call 0x4002a67	      1614	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_18
0x4002a67	      0xbf00000000	                              mov edi, 0	      1616	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_20
0x4002a6c	      0xe800000000	                          call 0x4002a71	      1616	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_20
0x4002a71	          0x4889c2	                            mov rdx, rax	      1616	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_20
0x4002a74	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1615	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_19
0x4002a7b	          0x4889c6	                            mov rsi, rax	      1615	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_19
0x4002a7e	          0x4889d7	                            mov rdi, rdx	      1615	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_19
0x4002a81	      0xb800000000	                              mov eax, 0	      1615	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_19
0x4002a86	      0xe800000000	                          call 0x4002a8b	      1615	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_19
0x4002a8b	    0x4883bd48feff	              cmp qword [rbp - 0x1b8], 0	      1618	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	IF_16
0x4002a93	     0xf859b040000	                           jne 0x4002f34	      1618	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	IF_16
0x4002a99	      0xe800000000	                          call 0x4002a9e	      1619	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_21
0x4002a9e	      0xe995040000	                           jmp 0x4002f38	      1619	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13	IF_14	CALL_21
0x4002aa3	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1625	undo.c	FUNCTION_35	IF_7	CALL_22
0x4002aaa	          0x4889c7	                            mov rdi, rax	      1625	undo.c	FUNCTION_35	IF_7	CALL_22
0x4002aad	      0xe800000000	                          call 0x4002ab2	      1625	undo.c	FUNCTION_35	IF_7	CALL_22
0x4002ab2	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1630	undo.c	FUNCTION_35	IF_17
0x4002ab9	    0x8b8030120000	          mov eax, dword [rax + 0x1230] 	      1630	undo.c	FUNCTION_35	IF_17
0x4002abf	            0x85c0	                           test eax, eax	      1630	undo.c	FUNCTION_35	IF_17
0x4002ac1	            0x753a	                           jne 0x4002afd	      1630	undo.c	FUNCTION_35	IF_17
0x4002ac3	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1630	undo.c	FUNCTION_35	IF_17
0x4002aca	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      1630	undo.c	FUNCTION_35	IF_17
0x4002ad1	          0x4885c0	                           test rax, rax	      1630	undo.c	FUNCTION_35	IF_17
0x4002ad4	            0x7527	                           jne 0x4002afd	      1630	undo.c	FUNCTION_35	IF_17
0x4002ad6	    0x488b05000000	            mov rax, qword [0x04002add] 	      1632	undo.c	FUNCTION_35	IF_17	IF_18
0x4002add	          0x4885c0	                           test rax, rax	      1632	undo.c	FUNCTION_35	IF_17	IF_18
0x4002ae0	     0xf8e51040000	                           jle 0x4002f37	      1632	undo.c	FUNCTION_35	IF_17	IF_18
0x4002ae6	      0xbf00000000	                              mov edi, 0	      1633	undo.c	FUNCTION_35	IF_17	CALL_24
0x4002aeb	      0xe800000000	                          call 0x4002af0	      1633	undo.c	FUNCTION_35	IF_17	CALL_24
0x4002af0	          0x4889c7	                            mov rdi, rax	      1633	undo.c	FUNCTION_35	IF_17	CALL_24
0x4002af3	      0xe800000000	                          call 0x4002af8	      1633	undo.c	FUNCTION_35	IF_17	CALL_24
0x4002af8	      0xe93a040000	                           jmp 0x4002f37	      1634	undo.c	FUNCTION_35	IF_17
0x4002afd	    0x8b9558feffff	            mov edx, dword [rbp - 0x1a8]	      1637	undo.c	FUNCTION_35	CALL_25
0x4002b03	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1637	undo.c	FUNCTION_35	CALL_25
0x4002b0a	      0xbec1000200	                        mov esi, 0x200c1	      1637	undo.c	FUNCTION_35	CALL_25
0x4002b0f	          0x4889c7	                            mov rdi, rax	      1637	undo.c	FUNCTION_35	CALL_25
0x4002b12	      0xb800000000	                              mov eax, 0	      1637	undo.c	FUNCTION_35	CALL_25
0x4002b17	      0xe800000000	                          call 0x4002b1c	      1637	undo.c	FUNCTION_35	CALL_25
0x4002b1c	    0x898564feffff	            mov dword [rbp - 0x19c], eax	      1637	undo.c	FUNCTION_35	CALL_25
0x4002b22	    0x83bd64feffff	              cmp dword [rbp - 0x19c], 0	      1639	undo.c	FUNCTION_35	IF_19
0x4002b29	            0x7924	                           jns 0x4002b4f	      1639	undo.c	FUNCTION_35	IF_19
0x4002b2b	      0xbf00000000	                              mov edi, 0	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x4002b30	      0xe800000000	                          call 0x4002b35	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x4002b35	          0x4889c2	                            mov rdx, rax	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x4002b38	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x4002b3f	          0x4889c6	                            mov rsi, rax	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x4002b42	          0x4889d7	                            mov rdi, rdx	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x4002b45	      0xe800000000	                          call 0x4002b4a	      1641	undo.c	FUNCTION_35	IF_19	CALL_27
0x4002b4a	      0xe9e9030000	                           jmp 0x4002f38	      1642	undo.c	FUNCTION_35	IF_19
0x4002b4f	    0x8b8558feffff	            mov eax, dword [rbp - 0x1a8]	      1644	undo.c	FUNCTION_35	CALL_28
0x4002b55	          0x4863d0	                         movsxd rdx, eax	      1644	undo.c	FUNCTION_35	CALL_28
0x4002b58	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1644	undo.c	FUNCTION_35	CALL_28
0x4002b5f	          0x4889d6	                            mov rsi, rdx	      1644	undo.c	FUNCTION_35	CALL_28
0x4002b62	          0x4889c7	                            mov rdi, rax	      1644	undo.c	FUNCTION_35	CALL_28
0x4002b65	      0xe800000000	                          call 0x4002b6a	      1644	undo.c	FUNCTION_35	CALL_28
0x4002b6a	    0x488b05000000	            mov rax, qword [0x04002b71] 	      1645	undo.c	FUNCTION_35	IF_20
0x4002b71	          0x4885c0	                           test rax, rax	      1645	undo.c	FUNCTION_35	IF_20
0x4002b74	            0x7e2e	                           jle 0x4002ba4	      1645	undo.c	FUNCTION_35	IF_20
0x4002b76	      0xe800000000	                          call 0x4002b7b	      1647	undo.c	FUNCTION_35	IF_20	CALL_29
0x4002b7b	      0xbf00000000	                              mov edi, 0	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x4002b80	      0xe800000000	                          call 0x4002b85	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x4002b85	          0x4889c2	                            mov rdx, rax	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x4002b88	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x4002b8f	          0x4889c6	                            mov rsi, rax	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x4002b92	          0x4889d7	                            mov rdi, rdx	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x4002b95	      0xb800000000	                              mov eax, 0	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x4002b9a	      0xe800000000	                          call 0x4002b9f	      1648	undo.c	FUNCTION_35	IF_20	CALL_31
0x4002b9f	      0xe800000000	                          call 0x4002ba4	      1649	undo.c	FUNCTION_35	IF_20	CALL_32
0x4002ba4	    0x83bd60feffff	              cmp dword [rbp - 0x1a0], 0	      1663	undo.c	FUNCTION_35	IF_21
0x4002bab	            0x7479	                            je 0x4002c26	      1663	undo.c	FUNCTION_35	IF_21
0x4002bad	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x4002bb4	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x4002bbb	          0x4889d6	                            mov rsi, rdx	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x4002bbe	          0x4889c7	                            mov rdi, rax	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x4002bc1	      0xe800000000	                          call 0x4002bc6	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x4002bc6	            0x85c0	                           test eax, eax	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x4002bc8	            0x785c	                            js 0x4002c26	      1664	undo.c	FUNCTION_35	IF_21	CALL_34
0x4002bca	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      1665	undo.c	FUNCTION_35	IF_21
0x4002bd0	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      1665	undo.c	FUNCTION_35	IF_21
0x4002bd6	            0x39c2	                            cmp edx, eax	      1665	undo.c	FUNCTION_35	IF_21
0x4002bd8	            0x744c	                            je 0x4002c26	      1665	undo.c	FUNCTION_35	IF_21
0x4002bda	    0x8b95e0feffff	            mov edx, dword [rbp - 0x120]	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x4002be0	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x4002be6	      0xbeffffffff	                     mov esi, 0xffffffff	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x4002beb	            0x89c7	                            mov edi, eax	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x4002bed	      0xe800000000	                          call 0x4002bf2	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x4002bf2	            0x85c0	                           test eax, eax	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x4002bf4	            0x7430	                            je 0x4002c26	      1667	undo.c	FUNCTION_35	IF_21	CALL_35
0x4002bf6	    0x8b8558feffff	            mov eax, dword [rbp - 0x1a8]	      1670	undo.c	FUNCTION_35	CALL_36
0x4002bfc	      0x25c7010000	                          and eax, 0x1c7	      1670	undo.c	FUNCTION_35	CALL_36
0x4002c01	            0x89c2	                            mov edx, eax	      1670	undo.c	FUNCTION_35	CALL_36
0x4002c03	    0x8b8558feffff	            mov eax, dword [rbp - 0x1a8]	      1670	undo.c	FUNCTION_35	CALL_36
0x4002c09	          0x83e007	                              and eax, 7	      1670	undo.c	FUNCTION_35	CALL_36
0x4002c0c	          0xc1e003	                              shl eax, 3	      1670	undo.c	FUNCTION_35	CALL_36
0x4002c0f	             0x9d0	                             or eax, edx	      1670	undo.c	FUNCTION_35	CALL_36
0x4002c11	          0x4863d0	                         movsxd rdx, eax	      1670	undo.c	FUNCTION_35	CALL_36
0x4002c14	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1670	undo.c	FUNCTION_35	CALL_36
0x4002c1b	          0x4889d6	                            mov rsi, rdx	      1670	undo.c	FUNCTION_35	CALL_36
0x4002c1e	          0x4889c7	                            mov rdi, rax	      1670	undo.c	FUNCTION_35	CALL_36
0x4002c21	      0xe800000000	                          call 0x4002c26	      1670	undo.c	FUNCTION_35	CALL_36
0x4002c26	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	      1677	undo.c	FUNCTION_35	CALL_38
0x4002c2c	      0xbe00000000	                              mov esi, 0	      1677	undo.c	FUNCTION_35	CALL_38
0x4002c31	            0x89c7	                            mov edi, eax	      1677	undo.c	FUNCTION_35	CALL_38
0x4002c33	      0xe800000000	                          call 0x4002c38	      1677	undo.c	FUNCTION_35	CALL_38
0x4002c38	    0x48898580feff	            mov qword [rbp - 0x180], rax	      1677	undo.c	FUNCTION_35	CALL_38
0x4002c3f	    0x4883bd80feff	              cmp qword [rbp - 0x180], 0	      1678	undo.c	FUNCTION_35	IF_23
0x4002c47	            0x7540	                           jne 0x4002c89	      1678	undo.c	FUNCTION_35	IF_23
0x4002c49	      0xbf00000000	                              mov edi, 0	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x4002c4e	      0xe800000000	                          call 0x4002c53	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x4002c53	          0x4889c2	                            mov rdx, rax	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x4002c56	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x4002c5d	          0x4889c6	                            mov rsi, rax	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x4002c60	          0x4889d7	                            mov rdi, rdx	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x4002c63	      0xe800000000	                          call 0x4002c68	      1680	undo.c	FUNCTION_35	IF_23	CALL_40
0x4002c68	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	      1681	undo.c	FUNCTION_35	IF_23	CALL_41
0x4002c6e	            0x89c7	                            mov edi, eax	      1681	undo.c	FUNCTION_35	IF_23	CALL_41
0x4002c70	      0xe800000000	                          call 0x4002c75	      1681	undo.c	FUNCTION_35	IF_23	CALL_41
0x4002c75	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1682	undo.c	FUNCTION_35	IF_23	CALL_42
0x4002c7c	          0x4889c7	                            mov rdi, rax	      1682	undo.c	FUNCTION_35	IF_23	CALL_42
0x4002c7f	      0xe800000000	                          call 0x4002c84	      1682	undo.c	FUNCTION_35	IF_23	CALL_42
0x4002c84	      0xe9af020000	                           jmp 0x4002f38	      1683	undo.c	FUNCTION_35	IF_23
0x4002c89	      0xbf01000000	                              mov edi, 1	      1687	undo.c	FUNCTION_35	CALL_43
0x4002c8e	      0xe800000000	                          call 0x4002c93	      1687	undo.c	FUNCTION_35	CALL_43
0x4002c93	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1692	undo.c	FUNCTION_35
0x4002c9a	    0x48898590feff	            mov qword [rbp - 0x170], rax	      1692	undo.c	FUNCTION_35
0x4002ca1	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      1693	undo.c	FUNCTION_35
0x4002ca8	    0x48898598feff	            mov qword [rbp - 0x168], rax	      1693	undo.c	FUNCTION_35
0x4002caf	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x4002cb6	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x4002cbd	          0x4889d6	                            mov rsi, rdx	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x4002cc0	          0x4889c7	                            mov rdi, rax	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x4002cc3	      0xe87decffff	               call sym.serialize_header	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x4002cc8	            0x85c0	                           test eax, eax	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x4002cca	     0xf84cc010000	                            je 0x4002e9c	      1694	undo.c	FUNCTION_35	IF_24	CALL_44
0x4002cd0	    0x8b0500000000	            mov eax, dword [0x04002cd6] 	      1700	undo.c	FUNCTION_35
0x4002cd6	          0x83c001	                              add eax, 1	      1700	undo.c	FUNCTION_35
0x4002cd9	    0x890500000000	            mov dword [0x04002cdf], eax 	      1700	undo.c	FUNCTION_35
0x4002cdf	    0x8b0500000000	            mov eax, dword [0x04002ce5] 	      1700	undo.c	FUNCTION_35
0x4002ce5	    0x89856cfeffff	            mov dword [rbp - 0x194], eax	      1700	undo.c	FUNCTION_35
0x4002ceb	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1701	undo.c	FUNCTION_35
0x4002cf2	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      1701	undo.c	FUNCTION_35
0x4002cf9	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1701	undo.c	FUNCTION_35
0x4002d00	      0xe936010000	                           jmp 0x4002e3b	      1702	undo.c	FUNCTION_35	WHILE_1
0x4002d05	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1705	undo.c	FUNCTION_35	WHILE_1	IF_25
0x4002d0c	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1705	undo.c	FUNCTION_35	WHILE_1	IF_25
0x4002d0f	    0x3b856cfeffff	            cmp eax, dword [rbp - 0x194]	      1705	undo.c	FUNCTION_35	WHILE_1	IF_25
0x4002d15	            0x7431	                            je 0x4002d48	      1705	undo.c	FUNCTION_35	WHILE_1	IF_25
0x4002d17	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1707	undo.c	FUNCTION_35	WHILE_1	IF_25
0x4002d1e	    0x8b956cfeffff	            mov edx, dword [rbp - 0x194]	      1707	undo.c	FUNCTION_35	WHILE_1	IF_25
0x4002d24	          0x895028	             mov dword [rax + 0x28], edx	      1707	undo.c	FUNCTION_35	WHILE_1	IF_25
0x4002d27	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x4002d2e	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x4002d35	          0x4889d6	                            mov rsi, rdx	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x4002d38	          0x4889c7	                            mov rdi, rax	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x4002d3b	      0xe82bf0ffff	                  call sym.serialize_uhp	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x4002d40	            0x85c0	                           test eax, eax	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x4002d42	     0xf8457010000	                            je 0x4002e9f	      1711	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26	CALL_45
0x4002d48	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d4f	        0x488b4008	                mov rax, qword [rax + 8]	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d53	          0x4885c0	                           test rax, rax	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d56	            0x742d	                            je 0x4002d85	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d58	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d5f	        0x488b4008	                mov rax, qword [rax + 8]	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d63	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d66	    0x3b856cfeffff	            cmp eax, dword [rbp - 0x194]	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d6c	            0x7417	                            je 0x4002d85	      1716	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d6e	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1717	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d75	        0x488b4008	                mov rax, qword [rax + 8]	      1717	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d79	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1717	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d80	      0xe9b6000000	                           jmp 0x4002e3b	      1717	undo.c	FUNCTION_35	WHILE_1	IF_27
0x4002d85	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1718	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002d8c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1718	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002d90	          0x4885c0	                           test rax, rax	      1718	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002d93	            0x742a	                            je 0x4002dbf	      1718	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002d95	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1719	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002d9c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1719	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002da0	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1719	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002da3	    0x3b856cfeffff	            cmp eax, dword [rbp - 0x194]	      1719	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002da9	            0x7414	                            je 0x4002dbf	      1719	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002dab	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1720	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002db2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1720	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002db6	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1720	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002dbd	            0xeb7c	                           jmp 0x4002e3b	      1720	undo.c	FUNCTION_35	WHILE_1	ELSE_3	IF_28
0x4002dbf	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002dc6	          0x488b00	                    mov rax, qword [rax]	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002dc9	          0x4885c0	                           test rax, rax	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002dcc	            0x7438	                            je 0x4002e06	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002dce	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002dd5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002dd9	          0x4885c0	                           test rax, rax	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002ddc	            0x7528	                           jne 0x4002e06	      1721	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002dde	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1722	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002de5	          0x488b00	                    mov rax, qword [rax]	      1722	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002de8	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1722	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002deb	    0x3b856cfeffff	            cmp eax, dword [rbp - 0x194]	      1722	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002df1	            0x7413	                            je 0x4002e06	      1722	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002df3	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1723	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002dfa	          0x488b00	                    mov rax, qword [rax]	      1723	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002dfd	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1723	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002e04	            0xeb35	                           jmp 0x4002e3b	      1723	undo.c	FUNCTION_35	WHILE_1	ELSE_4	IF_29
0x4002e06	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1724	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x4002e0d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1724	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x4002e11	          0x4885c0	                           test rax, rax	      1724	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x4002e14	            0x7414	                            je 0x4002e2a	      1724	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x4002e16	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1725	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x4002e1d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1725	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x4002e21	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1725	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x4002e28	            0xeb11	                           jmp 0x4002e3b	      1725	undo.c	FUNCTION_35	WHILE_1	ELSE_5	IF_30
0x4002e2a	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1727	undo.c	FUNCTION_35	WHILE_1	ELSE_6
0x4002e31	          0x488b00	                    mov rax, qword [rax]	      1727	undo.c	FUNCTION_35	WHILE_1	ELSE_6
0x4002e34	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1727	undo.c	FUNCTION_35	WHILE_1	ELSE_6
0x4002e3b	    0x4883bd70feff	              cmp qword [rbp - 0x190], 0	      1702	undo.c	FUNCTION_35	WHILE_1
0x4002e43	     0xf85bcfeffff	                           jne 0x4002d05	      1702	undo.c	FUNCTION_35	WHILE_1
0x4002e49	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x4002e50	      0xba02000000	                              mov edx, 2	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x4002e55	      0xbeaae70000	                         mov esi, 0xe7aa	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x4002e5a	          0x4889c7	                            mov rdi, rax	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x4002e5d	      0xe887e5ffff	               call sym.undo_write_bytes	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x4002e62	          0x83f801	                              cmp eax, 1	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x4002e65	            0x750a	                           jne 0x4002e71	      1730	undo.c	FUNCTION_35	IF_31	CALL_46
0x4002e67	    0xc7855cfeffff	              mov dword [rbp - 0x1a4], 1	      1731	undo.c	FUNCTION_35	IF_31
0x4002e71	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x4002e78	          0x4885c0	                           test rax, rax	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x4002e7b	            0x7423	                            je 0x4002ea0	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x4002e7d	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x4002e84	          0x4889c7	                            mov rdi, rax	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x4002e87	      0xe883e3ffff	                     call sym.undo_flush	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x4002e8c	            0x85c0	                           test eax, eax	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x4002e8e	            0x7510	                           jne 0x4002ea0	      1741	undo.c	FUNCTION_35	IF_33	CALL_49
0x4002e90	    0xc7855cfeffff	              mov dword [rbp - 0x1a4], 0	      1742	undo.c	FUNCTION_35	IF_33
0x4002e9a	            0xeb04	                           jmp 0x4002ea0	      1742	undo.c	FUNCTION_35	IF_33
0x4002e9c	              0x90	                                     nop	      1695	undo.c	FUNCTION_35	IF_24
0x4002e9d	            0xeb01	                           jmp 0x4002ea0	      1695	undo.c	FUNCTION_35	IF_24
0x4002e9f	              0x90	                                     nop	      1712	undo.c	FUNCTION_35	WHILE_1	IF_25	IF_26
0x4002ea0	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      1746	undo.c	FUNCTION_35	CALL_50
0x4002ea7	          0x4889c7	                            mov rdi, rax	      1746	undo.c	FUNCTION_35	CALL_50
0x4002eaa	      0xe800000000	                          call 0x4002eaf	      1746	undo.c	FUNCTION_35	CALL_50
0x4002eaf	    0x83bd5cfeffff	              cmp dword [rbp - 0x1a4], 0	      1747	undo.c	FUNCTION_35	IF_34
0x4002eb6	            0x751f	                           jne 0x4002ed7	      1747	undo.c	FUNCTION_35	IF_34
0x4002eb8	      0xbf00000000	                              mov edi, 0	      1748	undo.c	FUNCTION_35	CALL_52
0x4002ebd	      0xe800000000	                          call 0x4002ec2	      1748	undo.c	FUNCTION_35	CALL_52
0x4002ec2	          0x4889c2	                            mov rdx, rax	      1748	undo.c	FUNCTION_35	CALL_52
0x4002ec5	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1748	undo.c	FUNCTION_35	CALL_52
0x4002ecc	          0x4889c6	                            mov rsi, rax	      1748	undo.c	FUNCTION_35	CALL_52
0x4002ecf	          0x4889d7	                            mov rdi, rdx	      1748	undo.c	FUNCTION_35	CALL_52
0x4002ed2	      0xe800000000	                          call 0x4002ed7	      1748	undo.c	FUNCTION_35	CALL_52
0x4002ed7	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1757	undo.c	FUNCTION_35	IF_36
0x4002ede	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1757	undo.c	FUNCTION_35	IF_36
0x4002ee5	          0x4885c0	                           test rax, rax	      1757	undo.c	FUNCTION_35	IF_36
0x4002ee8	            0x744e	                            je 0x4002f38	      1757	undo.c	FUNCTION_35	IF_36
0x4002eea	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      1762	undo.c	FUNCTION_35	IF_36	CALL_54
0x4002ef1	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1762	undo.c	FUNCTION_35	IF_36	CALL_54
0x4002ef8	          0x4889c7	                            mov rdi, rax	      1762	undo.c	FUNCTION_35	IF_36	CALL_54
0x4002efb	      0xe800000000	                          call 0x4002f00	      1762	undo.c	FUNCTION_35	IF_36	CALL_54
0x4002f00	    0x48898588feff	            mov qword [rbp - 0x178], rax	      1762	undo.c	FUNCTION_35	IF_36	CALL_54
0x4002f07	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	      1763	undo.c	FUNCTION_35	IF_36	CALL_55
0x4002f0e	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1763	undo.c	FUNCTION_35	IF_36	CALL_55
0x4002f15	          0x4889d6	                            mov rsi, rdx	      1763	undo.c	FUNCTION_35	IF_36	CALL_55
0x4002f18	          0x4889c7	                            mov rdi, rax	      1763	undo.c	FUNCTION_35	IF_36	CALL_55
0x4002f1b	      0xe800000000	                          call 0x4002f20	      1763	undo.c	FUNCTION_35	IF_36	CALL_55
0x4002f20	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      1764	undo.c	FUNCTION_35	IF_36	CALL_56
0x4002f27	          0x4889c7	                            mov rdi, rax	      1764	undo.c	FUNCTION_35	IF_36	CALL_56
0x4002f2a	      0xe800000000	                          call 0x4002f2f	      1764	undo.c	FUNCTION_35	IF_36	CALL_56
0x4002f2f	            0xeb07	                           jmp 0x4002f38	      1764	undo.c	FUNCTION_35	IF_36	CALL_56
0x4002f31	              0x90	                                     nop	      1599	undo.c	FUNCTION_35	IF_7	IF_8	IF_9
0x4002f32	            0xeb04	                           jmp 0x4002f38	      1599	undo.c	FUNCTION_35	IF_7	IF_8	IF_9
0x4002f34	              0x90	                                     nop	      1621	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13
0x4002f35	            0xeb01	                           jmp 0x4002f38	      1621	undo.c	FUNCTION_35	IF_7	IF_8	ELSE_2	IF_13
0x4002f37	              0x90	                                     nop	      1634	undo.c	FUNCTION_35	IF_17
0x4002f38	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1770	undo.c	FUNCTION_35	IF_37
0x4002f3f	          0x4885c0	                           test rax, rax	      1770	undo.c	FUNCTION_35	IF_37
0x4002f42	            0x740f	                            je 0x4002f53	      1770	undo.c	FUNCTION_35	IF_37
0x4002f44	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1771	undo.c	FUNCTION_35	CALL_57
0x4002f4b	          0x4889c7	                            mov rdi, rax	      1771	undo.c	FUNCTION_35	CALL_57
0x4002f4e	      0xe800000000	                          call 0x4002f53	      1771	undo.c	FUNCTION_35	CALL_57
0x4002f53	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1772	undo.c	FUNCTION_35	CALL_58
0x4002f5a	          0x4889c7	                            mov rdi, rax	      1772	undo.c	FUNCTION_35	CALL_58
0x4002f5d	      0xe800000000	                          call 0x4002f62	      1772	undo.c	FUNCTION_35	CALL_58
0x4002f62	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1774	undo.c	FUNCTION_35	IF_38
0x4002f69	    0x483b8548feff	            cmp rax, qword [rbp - 0x1b8]	      1774	undo.c	FUNCTION_35	IF_38
0x4002f70	            0x7412	                            je 0x4002f84	      1774	undo.c	FUNCTION_35	IF_38
0x4002f72	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1775	undo.c	FUNCTION_35	CALL_59
0x4002f79	          0x4889c7	                            mov rdi, rax	      1775	undo.c	FUNCTION_35	CALL_59
0x4002f7c	      0xe800000000	                          call 0x4002f81	      1775	undo.c	FUNCTION_35	CALL_59
0x4002f81	            0xeb01	                           jmp 0x4002f84	      1775	undo.c	FUNCTION_35	CALL_59
0x4002f83	              0x90	                                     nop	      1549	undo.c	FUNCTION_35	IF_1	IF_2
0x4002f84	        0x488b45f8	                mov rax, qword [rbp - 8]	      1776	undo.c	FUNCTION_35
0x4002f88	    0x644833042528	                xor rax, qword fs:[0x28]	      1776	undo.c	FUNCTION_35
0x4002f91	            0x7405	                            je 0x4002f98	      1776	undo.c	FUNCTION_35
0x4002f93	      0xe800000000	                          call 0x4002f98	      1776	undo.c	FUNCTION_35
0x4002f98	              0xc9	                                   leave	      1776	undo.c	FUNCTION_35
0x4002f99	              0xc3	                                     ret	      1776	undo.c	FUNCTION_35
u_unchanged	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	13
0x400615f	              0x55	                                push rbp	      3161	undo.c	ELSE_1	FUNCTION_47
0x4006160	          0x4889e5	                            mov rbp, rsp	      3161	undo.c	ELSE_1	FUNCTION_47
0x4006163	        0x4883ec10	                           sub rsp, 0x10	      3161	undo.c	ELSE_1	FUNCTION_47
0x4006167	        0x48897df8	                mov qword [rbp - 8], rdi	      3161	undo.c	ELSE_1	FUNCTION_47
0x400616b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x400616f	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x4006176	          0x4889c7	                            mov rdi, rax	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x4006179	      0xe8fd010000	                  call sym.u_unch_branch	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x400617e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3163	undo.c	ELSE_1	FUNCTION_47
0x4006182	    0xc78054170000	            mov dword [rax + 0x1754], 0 	      3163	undo.c	ELSE_1	FUNCTION_47
0x400618c	              0x90	                                     nop	      3164	undo.c	ELSE_1	FUNCTION_47
0x400618d	              0xc9	                                   leave	      3164	undo.c	ELSE_1	FUNCTION_47
0x400618e	              0xc3	                                     ret	      3164	undo.c	ELSE_1	FUNCTION_47
unserialize_uep	SWITCH,0:FOR,1:IF,6:functions,0:ELSE,1:CALL,9:WHILE,0:DO,0	119
0x400241b	              0x55	                                push rbp	      1391	undo.c	FUNCTION_30
0x400241c	          0x4889e5	                            mov rbp, rsp	      1391	undo.c	FUNCTION_30
0x400241f	        0x4883ec40	                           sub rsp, 0x40	      1391	undo.c	FUNCTION_30
0x4002423	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1391	undo.c	FUNCTION_30
0x4002427	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1391	undo.c	FUNCTION_30
0x400242b	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1391	undo.c	FUNCTION_30
0x400242f	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1394	undo.c	FUNCTION_30
0x4002437	      0xbe00000000	                              mov esi, 0	      1398	undo.c	FUNCTION_30
0x400243c	      0xbf30000000	                           mov edi, 0x30	      1398	undo.c	FUNCTION_30
0x4002441	      0xe800000000	                          call 0x4002446	      1398	undo.c	FUNCTION_30
0x4002446	        0x488945f8	                mov qword [rbp - 8], rax	      1398	undo.c	FUNCTION_30
0x400244a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1399	undo.c	FUNCTION_30	IF_1
0x400244f	            0x750a	                           jne 0x400245b	      1399	undo.c	FUNCTION_30	IF_1
0x4002451	      0xb800000000	                              mov eax, 0	      1400	undo.c	FUNCTION_30	IF_1
0x4002456	      0xe999010000	                           jmp 0x40025f4	      1400	undo.c	FUNCTION_30	IF_1
0x400245b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1401	undo.c	FUNCTION_30	CALL_1
0x400245f	      0xba30000000	                           mov edx, 0x30	      1401	undo.c	FUNCTION_30	CALL_1
0x4002464	      0xbe00000000	                              mov esi, 0	      1401	undo.c	FUNCTION_30	CALL_1
0x4002469	          0x4889c7	                            mov rdi, rax	      1401	undo.c	FUNCTION_30	CALL_1
0x400246c	      0xe800000000	                          call 0x4002471	      1401	undo.c	FUNCTION_30	CALL_1
0x4002471	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1405	undo.c	FUNCTION_30	CALL_2
0x4002475	          0x4889c7	                            mov rdi, rax	      1405	undo.c	FUNCTION_30	CALL_2
0x4002478	      0xe83af0ffff	                   call sym.undo_read_4c	      1405	undo.c	FUNCTION_30	CALL_2
0x400247d	          0x4863d0	                         movsxd rdx, eax	      1405	undo.c	FUNCTION_30	CALL_2
0x4002480	        0x488b45f8	                mov rax, qword [rbp - 8]	      1405	undo.c	FUNCTION_30	CALL_2
0x4002484	        0x48895008	                mov qword [rax + 8], rdx	      1405	undo.c	FUNCTION_30	CALL_2
0x4002488	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1406	undo.c	FUNCTION_30	CALL_3
0x400248c	          0x4889c7	                            mov rdi, rax	      1406	undo.c	FUNCTION_30	CALL_3
0x400248f	      0xe823f0ffff	                   call sym.undo_read_4c	      1406	undo.c	FUNCTION_30	CALL_3
0x4002494	          0x4863d0	                         movsxd rdx, eax	      1406	undo.c	FUNCTION_30	CALL_3
0x4002497	        0x488b45f8	                mov rax, qword [rbp - 8]	      1406	undo.c	FUNCTION_30	CALL_3
0x400249b	        0x48895010	             mov qword [rax + 0x10], rdx	      1406	undo.c	FUNCTION_30	CALL_3
0x400249f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1407	undo.c	FUNCTION_30	CALL_4
0x40024a3	          0x4889c7	                            mov rdi, rax	      1407	undo.c	FUNCTION_30	CALL_4
0x40024a6	      0xe80cf0ffff	                   call sym.undo_read_4c	      1407	undo.c	FUNCTION_30	CALL_4
0x40024ab	          0x4863d0	                         movsxd rdx, eax	      1407	undo.c	FUNCTION_30	CALL_4
0x40024ae	        0x488b45f8	                mov rax, qword [rbp - 8]	      1407	undo.c	FUNCTION_30	CALL_4
0x40024b2	        0x48895018	             mov qword [rax + 0x18], rdx	      1407	undo.c	FUNCTION_30	CALL_4
0x40024b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1408	undo.c	FUNCTION_30	CALL_5
0x40024ba	          0x4889c7	                            mov rdi, rax	      1408	undo.c	FUNCTION_30	CALL_5
0x40024bd	      0xe8f5efffff	                   call sym.undo_read_4c	      1408	undo.c	FUNCTION_30	CALL_5
0x40024c2	          0x4863d0	                         movsxd rdx, eax	      1408	undo.c	FUNCTION_30	CALL_5
0x40024c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1408	undo.c	FUNCTION_30	CALL_5
0x40024c9	        0x48895028	             mov qword [rax + 0x28], rdx	      1408	undo.c	FUNCTION_30	CALL_5
0x40024cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1409	undo.c	FUNCTION_30	IF_2
0x40024d1	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1409	undo.c	FUNCTION_30	IF_2
0x40024d5	          0x4885c0	                           test rax, rax	      1409	undo.c	FUNCTION_30	IF_2
0x40024d8	            0x7e6f	                           jle 0x4002549	      1409	undo.c	FUNCTION_30	IF_2
0x40024da	        0x488b45f8	                mov rax, qword [rbp - 8]	      1411	undo.c	FUNCTION_30	IF_2	IF_3
0x40024de	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1411	undo.c	FUNCTION_30	IF_2	IF_3
0x40024e2	    0x48b8feffffff	          movabs rax, 0xffffffffffffffe 	      1411	undo.c	FUNCTION_30	IF_2	IF_3
0x40024ec	          0x4839c2	                            cmp rdx, rax	      1411	undo.c	FUNCTION_30	IF_2	IF_3
0x40024ef	            0x7f1d	                            jg 0x400250e	      1411	undo.c	FUNCTION_30	IF_2	IF_3
0x40024f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1412	undo.c	FUNCTION_30	IF_2	IF_3
0x40024f5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1412	undo.c	FUNCTION_30	IF_2	IF_3
0x40024f9	        0x48c1e003	                              shl rax, 3	      1412	undo.c	FUNCTION_30	IF_2	IF_3
0x40024fd	      0xbe00000000	                              mov esi, 0	      1412	undo.c	FUNCTION_30	IF_2	IF_3
0x4002502	          0x4889c7	                            mov rdi, rax	      1412	undo.c	FUNCTION_30	IF_2	IF_3
0x4002505	      0xe800000000	                          call 0x400250a	      1412	undo.c	FUNCTION_30	IF_2	IF_3
0x400250a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1412	undo.c	FUNCTION_30	IF_2	IF_3
0x400250e	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1413	undo.c	FUNCTION_30	IF_2	IF_4
0x4002513	            0x7513	                           jne 0x4002528	      1413	undo.c	FUNCTION_30	IF_2	IF_4
0x4002515	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1415	undo.c	FUNCTION_30	IF_2	IF_4
0x4002519	    0xc70001000000	                      mov dword [rax], 1	      1415	undo.c	FUNCTION_30	IF_2	IF_4
0x400251f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1416	undo.c	FUNCTION_30	IF_2	IF_4
0x4002523	      0xe9cc000000	                           jmp 0x40025f4	      1416	undo.c	FUNCTION_30	IF_2	IF_4
0x4002528	        0x488b45f8	                mov rax, qword [rbp - 8]	      1418	undo.c	FUNCTION_30	IF_2	CALL_6
0x400252c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1418	undo.c	FUNCTION_30	IF_2	CALL_6
0x4002530	    0x488d14c50000	                        lea rdx, [rax*8]	      1418	undo.c	FUNCTION_30	IF_2	CALL_6
0x4002538	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1418	undo.c	FUNCTION_30	IF_2	CALL_6
0x400253c	      0xbe00000000	                              mov esi, 0	      1418	undo.c	FUNCTION_30	IF_2	CALL_6
0x4002541	          0x4889c7	                            mov rdi, rax	      1418	undo.c	FUNCTION_30	IF_2	CALL_6
0x4002544	      0xe800000000	                          call 0x4002549	      1418	undo.c	FUNCTION_30	IF_2	CALL_6
0x4002549	        0x488b45f8	                mov rax, qword [rbp - 8]	      1420	undo.c	FUNCTION_30
0x400254d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1420	undo.c	FUNCTION_30
0x4002551	        0x48895020	             mov qword [rax + 0x20], rdx	      1420	undo.c	FUNCTION_30
0x4002555	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1422	undo.c	FUNCTION_30	FOR_1
0x400255c	            0xeb7b	                           jmp 0x40025d9	      1422	undo.c	FUNCTION_30	FOR_1
0x400255e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1424	undo.c	FUNCTION_30	FOR_1	CALL_7
0x4002562	          0x4889c7	                            mov rdi, rax	      1424	undo.c	FUNCTION_30	FOR_1	CALL_7
0x4002565	      0xe84defffff	                   call sym.undo_read_4c	      1424	undo.c	FUNCTION_30	FOR_1	CALL_7
0x400256a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1424	undo.c	FUNCTION_30	FOR_1	CALL_7
0x400256d	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1425	undo.c	FUNCTION_30	FOR_1	IF_5
0x4002571	            0x7817	                            js 0x400258a	      1425	undo.c	FUNCTION_30	FOR_1	IF_5
0x4002573	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1426	undo.c	FUNCTION_30	FOR_1	CALL_8
0x4002576	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1426	undo.c	FUNCTION_30	FOR_1	CALL_8
0x400257a	            0x89d6	                            mov esi, edx	      1426	undo.c	FUNCTION_30	FOR_1	CALL_8
0x400257c	          0x4889c7	                            mov rdi, rax	      1426	undo.c	FUNCTION_30	FOR_1	CALL_8
0x400257f	      0xe817f3ffff	            call sym.read_string_decrypt	      1426	undo.c	FUNCTION_30	FOR_1	CALL_8
0x4002584	        0x488945f0	             mov qword [rbp - 0x10], rax	      1426	undo.c	FUNCTION_30	FOR_1	CALL_8
0x4002588	            0xeb19	                           jmp 0x40025a3	      1426	undo.c	FUNCTION_30	FOR_1	CALL_8
0x400258a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1429	undo.c	FUNCTION_30	FOR_1	ELSE_1
0x4002592	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1430	undo.c	FUNCTION_30	FOR_1	ELSE_1	CALL_9
0x4002596	          0x4889c6	                            mov rsi, rax	      1430	undo.c	FUNCTION_30	FOR_1	ELSE_1	CALL_9
0x4002599	      0xbf00000000	                              mov edi, 0	      1430	undo.c	FUNCTION_30	FOR_1	ELSE_1	CALL_9
0x400259e	      0xe899eaffff	               call sym.corruption_error	      1430	undo.c	FUNCTION_30	FOR_1	ELSE_1	CALL_9
0x40025a3	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1432	undo.c	FUNCTION_30	FOR_1	IF_6
0x40025a8	            0x7510	                           jne 0x40025ba	      1432	undo.c	FUNCTION_30	FOR_1	IF_6
0x40025aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1434	undo.c	FUNCTION_30	FOR_1	IF_6
0x40025ae	    0xc70001000000	                      mov dword [rax], 1	      1434	undo.c	FUNCTION_30	FOR_1	IF_6
0x40025b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1435	undo.c	FUNCTION_30	FOR_1	IF_6
0x40025b8	            0xeb3a	                           jmp 0x40025f4	      1435	undo.c	FUNCTION_30	FOR_1	IF_6
0x40025ba	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1437	undo.c	FUNCTION_30	FOR_1
0x40025bd	            0x4898	                                    cdqe	      1437	undo.c	FUNCTION_30	FOR_1
0x40025bf	    0x488d14c50000	                        lea rdx, [rax*8]	      1437	undo.c	FUNCTION_30	FOR_1
0x40025c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1437	undo.c	FUNCTION_30	FOR_1
0x40025cb	          0x4801c2	                            add rdx, rax	      1437	undo.c	FUNCTION_30	FOR_1
0x40025ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1437	undo.c	FUNCTION_30	FOR_1
0x40025d2	          0x488902	                    mov qword [rdx], rax	      1437	undo.c	FUNCTION_30	FOR_1
0x40025d5	        0x8345e001	               add dword [rbp - 0x20], 1	      1422	undo.c	FUNCTION_30	FOR_1
0x40025d9	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1422	undo.c	FUNCTION_30	FOR_1
0x40025dc	          0x4863d0	                         movsxd rdx, eax	      1422	undo.c	FUNCTION_30	FOR_1
0x40025df	        0x488b45f8	                mov rax, qword [rbp - 8]	      1422	undo.c	FUNCTION_30	FOR_1
0x40025e3	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1422	undo.c	FUNCTION_30	FOR_1
0x40025e7	          0x4839c2	                            cmp rdx, rax	      1422	undo.c	FUNCTION_30	FOR_1
0x40025ea	     0xf8c6effffff	                            jl 0x400255e	      1422	undo.c	FUNCTION_30	FOR_1
0x40025f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1439	undo.c	FUNCTION_30
0x40025f4	              0xc9	                                   leave	      1440	undo.c	FUNCTION_30
0x40025f5	              0xc3	                                     ret	      1440	undo.c	FUNCTION_30
serialize_uhp	SWITCH,0:FOR,2:IF,2:functions,0:ELSE,0:CALL,21:WHILE,0:DO,0	165
0x4001d6b	              0x55	                                push rbp	      1231	undo.c	FUNCTION_27
0x4001d6c	          0x4889e5	                            mov rbp, rsp	      1231	undo.c	FUNCTION_27
0x4001d6f	        0x4883ec30	                           sub rsp, 0x30	      1231	undo.c	FUNCTION_27
0x4001d73	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1231	undo.c	FUNCTION_27
0x4001d77	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1231	undo.c	FUNCTION_27
0x4001d7b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1231	undo.c	FUNCTION_27
0x4001d84	        0x488945f8	                mov qword [rbp - 8], rax	      1231	undo.c	FUNCTION_27
0x4001d88	            0x31c0	                            xor eax, eax	      1231	undo.c	FUNCTION_27
0x4001d8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x4001d8e	      0xba02000000	                              mov edx, 2	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x4001d93	      0xbed05f0000	                         mov esi, 0x5fd0	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x4001d98	          0x4889c7	                            mov rdi, rax	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x4001d9b	      0xe849f6ffff	               call sym.undo_write_bytes	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x4001da0	            0x85c0	                           test eax, eax	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x4001da2	            0x750a	                           jne 0x4001dae	      1236	undo.c	FUNCTION_27	IF_1	CALL_1
0x4001da4	      0xb800000000	                              mov eax, 0	      1237	undo.c	FUNCTION_27	IF_1
0x4001da9	      0xe92f020000	                           jmp 0x4001fdd	      1237	undo.c	FUNCTION_27	IF_1
0x4001dae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1239	undo.c	FUNCTION_27	CALL_2
0x4001db2	          0x488b10	                    mov rdx, qword [rax]	      1239	undo.c	FUNCTION_27	CALL_2
0x4001db5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1239	undo.c	FUNCTION_27	CALL_2
0x4001db9	          0x4889d6	                            mov rsi, rdx	      1239	undo.c	FUNCTION_27	CALL_2
0x4001dbc	          0x4889c7	                            mov rdi, rax	      1239	undo.c	FUNCTION_27	CALL_2
0x4001dbf	      0xe8b3f6ffff	                 call sym.put_header_ptr	      1239	undo.c	FUNCTION_27	CALL_2
0x4001dc4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1240	undo.c	FUNCTION_27	CALL_3
0x4001dc8	        0x488b5008	                mov rdx, qword [rax + 8]	      1240	undo.c	FUNCTION_27	CALL_3
0x4001dcc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1240	undo.c	FUNCTION_27	CALL_3
0x4001dd0	          0x4889d6	                            mov rsi, rdx	      1240	undo.c	FUNCTION_27	CALL_3
0x4001dd3	          0x4889c7	                            mov rdi, rax	      1240	undo.c	FUNCTION_27	CALL_3
0x4001dd6	      0xe89cf6ffff	                 call sym.put_header_ptr	      1240	undo.c	FUNCTION_27	CALL_3
0x4001ddb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1241	undo.c	FUNCTION_27	CALL_4
0x4001ddf	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1241	undo.c	FUNCTION_27	CALL_4
0x4001de3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1241	undo.c	FUNCTION_27	CALL_4
0x4001de7	          0x4889d6	                            mov rsi, rdx	      1241	undo.c	FUNCTION_27	CALL_4
0x4001dea	          0x4889c7	                            mov rdi, rax	      1241	undo.c	FUNCTION_27	CALL_4
0x4001ded	      0xe885f6ffff	                 call sym.put_header_ptr	      1241	undo.c	FUNCTION_27	CALL_4
0x4001df2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1242	undo.c	FUNCTION_27	CALL_5
0x4001df6	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1242	undo.c	FUNCTION_27	CALL_5
0x4001dfa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1242	undo.c	FUNCTION_27	CALL_5
0x4001dfe	          0x4889d6	                            mov rsi, rdx	      1242	undo.c	FUNCTION_27	CALL_5
0x4001e01	          0x4889c7	                            mov rdi, rax	      1242	undo.c	FUNCTION_27	CALL_5
0x4001e04	      0xe86ef6ffff	                 call sym.put_header_ptr	      1242	undo.c	FUNCTION_27	CALL_5
0x4001e09	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1243	undo.c	FUNCTION_27	CALL_6
0x4001e0d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1243	undo.c	FUNCTION_27	CALL_6
0x4001e11	          0x4889c1	                            mov rcx, rax	      1243	undo.c	FUNCTION_27	CALL_6
0x4001e14	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1243	undo.c	FUNCTION_27	CALL_6
0x4001e18	      0xba04000000	                              mov edx, 4	      1243	undo.c	FUNCTION_27	CALL_6
0x4001e1d	          0x4889ce	                            mov rsi, rcx	      1243	undo.c	FUNCTION_27	CALL_6
0x4001e20	          0x4889c7	                            mov rdi, rax	      1243	undo.c	FUNCTION_27	CALL_6
0x4001e23	      0xe8c1f5ffff	               call sym.undo_write_bytes	      1243	undo.c	FUNCTION_27	CALL_6
0x4001e28	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1244	undo.c	FUNCTION_27	CALL_7
0x4001e2c	        0x488b4840	            mov rcx, qword [rax + 0x40] 	      1244	undo.c	FUNCTION_27	CALL_7
0x4001e30	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1244	undo.c	FUNCTION_27	CALL_7
0x4001e34	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1244	undo.c	FUNCTION_27	CALL_7
0x4001e38	          0x4889ce	                            mov rsi, rcx	      1244	undo.c	FUNCTION_27	CALL_7
0x4001e3b	          0x4889c7	                            mov rdi, rax	      1244	undo.c	FUNCTION_27	CALL_7
0x4001e3e	      0xe8b3070000	                  call sym.serialize_pos	      1244	undo.c	FUNCTION_27	CALL_7
0x4001e43	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1246	undo.c	FUNCTION_27	CALL_8
0x4001e47	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1246	undo.c	FUNCTION_27	CALL_8
0x4001e4b	          0x4889c1	                            mov rcx, rax	      1246	undo.c	FUNCTION_27	CALL_8
0x4001e4e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1246	undo.c	FUNCTION_27	CALL_8
0x4001e52	      0xba04000000	                              mov edx, 4	      1246	undo.c	FUNCTION_27	CALL_8
0x4001e57	          0x4889ce	                            mov rsi, rcx	      1246	undo.c	FUNCTION_27	CALL_8
0x4001e5a	          0x4889c7	                            mov rdi, rax	      1246	undo.c	FUNCTION_27	CALL_8
0x4001e5d	      0xe887f5ffff	               call sym.undo_write_bytes	      1246	undo.c	FUNCTION_27	CALL_8
0x4001e62	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1250	undo.c	FUNCTION_27	CALL_10
0x4001e66	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1250	undo.c	FUNCTION_27	CALL_10
0x4001e69	          0x4863c8	                         movsxd rcx, eax	      1250	undo.c	FUNCTION_27	CALL_10
0x4001e6c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1250	undo.c	FUNCTION_27	CALL_10
0x4001e70	      0xba02000000	                              mov edx, 2	      1250	undo.c	FUNCTION_27	CALL_10
0x4001e75	          0x4889ce	                            mov rsi, rcx	      1250	undo.c	FUNCTION_27	CALL_10
0x4001e78	          0x4889c7	                            mov rdi, rax	      1250	undo.c	FUNCTION_27	CALL_10
0x4001e7b	      0xe869f5ffff	               call sym.undo_write_bytes	      1250	undo.c	FUNCTION_27	CALL_10
0x4001e80	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1252	undo.c	FUNCTION_27	FOR_1
0x4001e87	            0xeb2f	                           jmp 0x4001eb8	      1252	undo.c	FUNCTION_27	FOR_1
0x4001e89	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1253	undo.c	FUNCTION_27	CALL_11
0x4001e8d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1253	undo.c	FUNCTION_27	CALL_11
0x4001e90	          0x4863d2	                         movsxd rdx, edx	      1253	undo.c	FUNCTION_27	CALL_11
0x4001e93	        0x4883c206	                              add rdx, 6	      1253	undo.c	FUNCTION_27	CALL_11
0x4001e97	        0x48c1e204	                              shl rdx, 4	      1253	undo.c	FUNCTION_27	CALL_11
0x4001e9b	          0x4801d0	                            add rax, rdx	      1253	undo.c	FUNCTION_27	CALL_11
0x4001e9e	          0x488b08	                    mov rcx, qword [rax]	      1253	undo.c	FUNCTION_27	CALL_11
0x4001ea1	        0x488b5008	                mov rdx, qword [rax + 8]	      1253	undo.c	FUNCTION_27	CALL_11
0x4001ea5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1253	undo.c	FUNCTION_27	CALL_11
0x4001ea9	          0x4889ce	                            mov rsi, rcx	      1253	undo.c	FUNCTION_27	CALL_11
0x4001eac	          0x4889c7	                            mov rdi, rax	      1253	undo.c	FUNCTION_27	CALL_11
0x4001eaf	      0xe842070000	                  call sym.serialize_pos	      1253	undo.c	FUNCTION_27	CALL_11
0x4001eb4	        0x8345e401	               add dword [rbp - 0x1c], 1	      1252	undo.c	FUNCTION_27	FOR_1
0x4001eb8	        0x837de419	           cmp dword [rbp - 0x1c], 0x19 	      1252	undo.c	FUNCTION_27	FOR_1
0x4001ebc	            0x7ecb	                           jle 0x4001e89	      1252	undo.c	FUNCTION_27	FOR_1
0x4001ebe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1254	undo.c	FUNCTION_27	CALL_12
0x4001ec2	    0x488d90000200	                  lea rdx, [rax + 0x200]	      1254	undo.c	FUNCTION_27	CALL_12
0x4001ec9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1254	undo.c	FUNCTION_27	CALL_12
0x4001ecd	          0x4889d6	                            mov rsi, rdx	      1254	undo.c	FUNCTION_27	CALL_12
0x4001ed0	          0x4889c7	                            mov rdi, rax	      1254	undo.c	FUNCTION_27	CALL_12
0x4001ed3	      0xe823080000	           call sym.serialize_visualinfo	      1254	undo.c	FUNCTION_27	CALL_12
0x4001ed8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1255	undo.c	FUNCTION_27	CALL_13
0x4001edc	    0x488b80280200	           mov rax, qword [rax + 0x228] 	      1255	undo.c	FUNCTION_27	CALL_13
0x4001ee3	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1255	undo.c	FUNCTION_27	CALL_13
0x4001ee7	          0x4889d6	                            mov rsi, rdx	      1255	undo.c	FUNCTION_27	CALL_13
0x4001eea	          0x4889c7	                            mov rdi, rax	      1255	undo.c	FUNCTION_27	CALL_13
0x4001eed	      0xe800000000	                          call 0x4001ef2	      1255	undo.c	FUNCTION_27	CALL_13
0x4001ef2	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1256	undo.c	FUNCTION_27	CALL_14
0x4001ef6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1256	undo.c	FUNCTION_27	CALL_14
0x4001efa	      0xba08000000	                              mov edx, 8	      1256	undo.c	FUNCTION_27	CALL_14
0x4001eff	          0x4889ce	                            mov rsi, rcx	      1256	undo.c	FUNCTION_27	CALL_14
0x4001f02	          0x4889c7	                            mov rdi, rax	      1256	undo.c	FUNCTION_27	CALL_14
0x4001f05	      0xe8bff1ffff	                     call sym.undo_write	      1256	undo.c	FUNCTION_27	CALL_14
0x4001f0a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1259	undo.c	FUNCTION_27	CALL_15
0x4001f0e	      0xba01000000	                              mov edx, 1	      1259	undo.c	FUNCTION_27	CALL_15
0x4001f13	      0xbe04000000	                              mov esi, 4	      1259	undo.c	FUNCTION_27	CALL_15
0x4001f18	          0x4889c7	                            mov rdi, rax	      1259	undo.c	FUNCTION_27	CALL_15
0x4001f1b	      0xe8c9f4ffff	               call sym.undo_write_bytes	      1259	undo.c	FUNCTION_27	CALL_15
0x4001f20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1260	undo.c	FUNCTION_27	CALL_16
0x4001f24	      0xba01000000	                              mov edx, 1	      1260	undo.c	FUNCTION_27	CALL_16
0x4001f29	      0xbe01000000	                              mov esi, 1	      1260	undo.c	FUNCTION_27	CALL_16
0x4001f2e	          0x4889c7	                            mov rdi, rax	      1260	undo.c	FUNCTION_27	CALL_16
0x4001f31	      0xe8b3f4ffff	               call sym.undo_write_bytes	      1260	undo.c	FUNCTION_27	CALL_16
0x4001f36	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1261	undo.c	FUNCTION_27	CALL_17
0x4001f3a	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      1261	undo.c	FUNCTION_27	CALL_17
0x4001f41	          0x4889c1	                            mov rcx, rax	      1261	undo.c	FUNCTION_27	CALL_17
0x4001f44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1261	undo.c	FUNCTION_27	CALL_17
0x4001f48	      0xba04000000	                              mov edx, 4	      1261	undo.c	FUNCTION_27	CALL_17
0x4001f4d	          0x4889ce	                            mov rsi, rcx	      1261	undo.c	FUNCTION_27	CALL_17
0x4001f50	          0x4889c7	                            mov rdi, rax	      1261	undo.c	FUNCTION_27	CALL_17
0x4001f53	      0xe891f4ffff	               call sym.undo_write_bytes	      1261	undo.c	FUNCTION_27	CALL_17
0x4001f58	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1263	undo.c	FUNCTION_27	CALL_18
0x4001f5c	      0xba01000000	                              mov edx, 1	      1263	undo.c	FUNCTION_27	CALL_18
0x4001f61	      0xbe00000000	                              mov esi, 0	      1263	undo.c	FUNCTION_27	CALL_18
0x4001f66	          0x4889c7	                            mov rdi, rax	      1263	undo.c	FUNCTION_27	CALL_18
0x4001f69	      0xe87bf4ffff	               call sym.undo_write_bytes	      1263	undo.c	FUNCTION_27	CALL_18
0x4001f6e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1266	undo.c	FUNCTION_27	FOR_2
0x4001f72	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1266	undo.c	FUNCTION_27	FOR_2
0x4001f76	        0x488945e8	             mov qword [rbp - 0x18], rax	      1266	undo.c	FUNCTION_27	FOR_2
0x4001f7a	            0xeb3f	                           jmp 0x4001fbb	      1266	undo.c	FUNCTION_27	FOR_2
0x4001f7c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1268	undo.c	FUNCTION_27	FOR_2	CALL_19
0x4001f80	      0xba02000000	                              mov edx, 2	      1268	undo.c	FUNCTION_27	FOR_2	CALL_19
0x4001f85	      0xbe18f50000	                         mov esi, 0xf518	      1268	undo.c	FUNCTION_27	FOR_2	CALL_19
0x4001f8a	          0x4889c7	                            mov rdi, rax	      1268	undo.c	FUNCTION_27	FOR_2	CALL_19
0x4001f8d	      0xe857f4ffff	               call sym.undo_write_bytes	      1268	undo.c	FUNCTION_27	FOR_2	CALL_19
0x4001f92	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x4001f96	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x4001f9a	          0x4889d6	                            mov rsi, rdx	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x4001f9d	          0x4889c7	                            mov rdi, rax	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x4001fa0	      0xe838030000	                  call sym.serialize_uep	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x4001fa5	            0x85c0	                           test eax, eax	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x4001fa7	            0x7507	                           jne 0x4001fb0	      1269	undo.c	FUNCTION_27	FOR_2	IF_2	CALL_20
0x4001fa9	      0xb800000000	                              mov eax, 0	      1270	undo.c	FUNCTION_27	FOR_2	IF_2
0x4001fae	            0xeb2d	                           jmp 0x4001fdd	      1270	undo.c	FUNCTION_27	FOR_2	IF_2
0x4001fb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1266	undo.c	FUNCTION_27	FOR_2
0x4001fb4	          0x488b00	                    mov rax, qword [rax]	      1266	undo.c	FUNCTION_27	FOR_2
0x4001fb7	        0x488945e8	             mov qword [rbp - 0x18], rax	      1266	undo.c	FUNCTION_27	FOR_2
0x4001fbb	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1266	undo.c	FUNCTION_27	FOR_2
0x4001fc0	            0x75ba	                           jne 0x4001f7c	      1266	undo.c	FUNCTION_27	FOR_2
0x4001fc2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1272	undo.c	FUNCTION_27	CALL_21
0x4001fc6	      0xba02000000	                              mov edx, 2	      1272	undo.c	FUNCTION_27	CALL_21
0x4001fcb	      0xbe81350000	                         mov esi, 0x3581	      1272	undo.c	FUNCTION_27	CALL_21
0x4001fd0	          0x4889c7	                            mov rdi, rax	      1272	undo.c	FUNCTION_27	CALL_21
0x4001fd3	      0xe811f4ffff	               call sym.undo_write_bytes	      1272	undo.c	FUNCTION_27	CALL_21
0x4001fd8	      0xb801000000	                              mov eax, 1	      1273	undo.c	FUNCTION_27
0x4001fdd	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1274	undo.c	FUNCTION_27
0x4001fe1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1274	undo.c	FUNCTION_27
0x4001fea	            0x7405	                            je 0x4001ff1	      1274	undo.c	FUNCTION_27
0x4001fec	      0xe800000000	                          call 0x4001ff1	      1274	undo.c	FUNCTION_27
0x4001ff1	              0xc9	                                   leave	      1274	undo.c	FUNCTION_27
0x4001ff2	              0xc3	                                     ret	      1274	undo.c	FUNCTION_27
u_find_first_changed	SWITCH,0:FOR,1:IF,4:functions,0:ELSE,0:CALL,4:WHILE,0:DO,0	86
0x400618f	              0x55	                                push rbp	      3172	undo.c	FUNCTION_48
0x4006190	          0x4889e5	                            mov rbp, rsp	      3172	undo.c	FUNCTION_48
0x4006193	              0x53	                                push rbx	      3172	undo.c	FUNCTION_48
0x4006194	        0x4883ec28	                           sub rsp, 0x28	      3172	undo.c	FUNCTION_48
0x4006198	    0x488b05000000	            mov rax, qword [0x0400619f] 	      3173	undo.c	FUNCTION_48
0x400619f	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3173	undo.c	FUNCTION_48
0x40061a6	        0x488945e0	             mov qword [rbp - 0x20], rax	      3173	undo.c	FUNCTION_48
0x40061aa	    0x488b05000000	            mov rax, qword [0x040061b1] 	      3177	undo.c	FUNCTION_48	IF_1
0x40061b1	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      3177	undo.c	FUNCTION_48	IF_1
0x40061b8	          0x4885c0	                           test rax, rax	      3177	undo.c	FUNCTION_48	IF_1
0x40061bb	     0xf8525010000	                           jne 0x40062e6	      3177	undo.c	FUNCTION_48	IF_1
0x40061c1	      0x48837de000	               cmp qword [rbp - 0x20], 0	      3177	undo.c	FUNCTION_48	IF_1
0x40061c6	     0xf841a010000	                            je 0x40062e6	      3177	undo.c	FUNCTION_48	IF_1
0x40061cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3181	undo.c	FUNCTION_48
0x40061d0	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3181	undo.c	FUNCTION_48
0x40061d4	        0x488945e8	             mov qword [rbp - 0x18], rax	      3181	undo.c	FUNCTION_48
0x40061d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3182	undo.c	FUNCTION_48	IF_2
0x40061dc	        0x488b4008	                mov rax, qword [rax + 8]	      3182	undo.c	FUNCTION_48	IF_2
0x40061e0	          0x4885c0	                           test rax, rax	      3182	undo.c	FUNCTION_48	IF_2
0x40061e3	     0xf8500010000	                           jne 0x40062e9	      3182	undo.c	FUNCTION_48	IF_2
0x40061e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3182	undo.c	FUNCTION_48	IF_2
0x40061ed	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3182	undo.c	FUNCTION_48	IF_2
0x40061f1	          0x4885c0	                           test rax, rax	      3182	undo.c	FUNCTION_48	IF_2
0x40061f4	     0xf85ef000000	                           jne 0x40062e9	      3182	undo.c	FUNCTION_48	IF_2
0x40061fa	    0x48c745d80100	               mov qword [rbp - 0x28], 1	      3185	undo.c	FUNCTION_48	FOR_1
0x4006202	            0xeb79	                           jmp 0x400627d	      3185	undo.c	FUNCTION_48	FOR_1
0x4006204	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006208	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x400620c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006210	        0x48c1e203	                              shl rdx, 3	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006214	        0x4883ea08	                              sub rdx, 8	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006218	          0x4801d0	                            add rax, rdx	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x400621b	          0x488b18	                    mov rbx, qword [rax]	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x400621e	    0x488b05000000	            mov rax, qword [0x04006225] 	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006225	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006229	      0xba00000000	                              mov edx, 0	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x400622e	          0x4889ce	                            mov rsi, rcx	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006231	          0x4889c7	                            mov rdi, rax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006234	      0xe800000000	                          call 0x4006239	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006239	          0x4889de	                            mov rsi, rbx	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x400623c	          0x4889c7	                            mov rdi, rax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x400623f	      0xe800000000	                          call 0x4006244	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006244	            0x85c0	                           test eax, eax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006246	            0x7430	                            je 0x4006278	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4006248	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x400624c	    0x48c740400000	               mov qword [rax + 0x40], 0	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x4006254	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x4006258	    0xc74048000000	               mov dword [rax + 0x48], 0	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x400625f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x4006263	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      3190	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_3
0x400626a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3191	undo.c	FUNCTION_48	FOR_1	IF_3
0x400626e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3191	undo.c	FUNCTION_48	FOR_1	IF_3
0x4006272	        0x48895040	             mov qword [rax + 0x40], rdx	      3191	undo.c	FUNCTION_48	FOR_1	IF_3
0x4006276	            0xeb72	                           jmp 0x40062ea	      3192	undo.c	FUNCTION_48	FOR_1	IF_3
0x4006278	      0x488345d801	               add qword [rbp - 0x28], 1	      3186	undo.c	FUNCTION_48	FOR_1
0x400627d	    0x488b05000000	            mov rax, qword [0x04006284] 	      3185	undo.c	FUNCTION_48	FOR_1
0x4006284	          0x488b00	                    mov rax, qword [rax]	      3185	undo.c	FUNCTION_48	FOR_1
0x4006287	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3185	undo.c	FUNCTION_48	FOR_1
0x400628b	            0x7e12	                           jle 0x400629f	      3185	undo.c	FUNCTION_48	FOR_1
0x400628d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3186	undo.c	FUNCTION_48	FOR_1
0x4006291	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3186	undo.c	FUNCTION_48	FOR_1
0x4006295	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3186	undo.c	FUNCTION_48	FOR_1
0x4006299	     0xf8d65ffffff	                           jge 0x4006204	      3186	undo.c	FUNCTION_48	FOR_1
0x400629f	    0x488b05000000	            mov rax, qword [0x040062a6] 	      3194	undo.c	FUNCTION_48	IF_4
0x40062a6	          0x488b10	                    mov rdx, qword [rax]	      3194	undo.c	FUNCTION_48	IF_4
0x40062a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3194	undo.c	FUNCTION_48	IF_4
0x40062ad	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3194	undo.c	FUNCTION_48	IF_4
0x40062b1	          0x4839c2	                            cmp rdx, rax	      3194	undo.c	FUNCTION_48	IF_4
0x40062b4	            0x7434	                            je 0x40062ea	      3194	undo.c	FUNCTION_48	IF_4
0x40062b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x40062ba	    0x48c740400000	               mov qword [rax + 0x40], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x40062c2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x40062c6	    0xc74048000000	               mov dword [rax + 0x48], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x40062cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x40062d1	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x40062d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3198	undo.c	FUNCTION_48	IF_4
0x40062dc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3198	undo.c	FUNCTION_48	IF_4
0x40062e0	        0x48895040	             mov qword [rax + 0x40], rdx	      3198	undo.c	FUNCTION_48	IF_4
0x40062e4	            0xeb04	                           jmp 0x40062ea	      3198	undo.c	FUNCTION_48	IF_4
0x40062e6	              0x90	                                     nop	      3178	undo.c	FUNCTION_48	IF_1
0x40062e7	            0xeb01	                           jmp 0x40062ea	      3178	undo.c	FUNCTION_48	IF_1
0x40062e9	              0x90	                                     nop	      3183	undo.c	FUNCTION_48	IF_2
0x40062ea	        0x4883c428	                           add rsp, 0x28	      3200	undo.c	FUNCTION_48
0x40062ee	              0x5b	                                 pop rbx	      3200	undo.c	FUNCTION_48
0x40062ef	              0x5d	                                 pop rbp	      3200	undo.c	FUNCTION_48
0x40062f0	              0xc3	                                     ret	      3200	undo.c	FUNCTION_48
unserialize_uhp	SWITCH,1:FOR,2:IF,6:functions,0:ELSE,1:CALL,24:WHILE,2:DO,0	194
0x4001ff3	              0x55	                                push rbp	      1278	undo.c	FUNCTION_28
0x4001ff4	          0x4889e5	                            mov rbp, rsp	      1278	undo.c	FUNCTION_28
0x4001ff7	        0x4883ec50	                           sub rsp, 0x50	      1278	undo.c	FUNCTION_28
0x4001ffb	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1278	undo.c	FUNCTION_28
0x4001fff	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1278	undo.c	FUNCTION_28
0x4002003	    0x64488b042528	                mov rax, qword fs:[0x28]	      1278	undo.c	FUNCTION_28
0x400200c	        0x488945f8	                mov qword [rbp - 8], rax	      1278	undo.c	FUNCTION_28
0x4002010	            0x31c0	                            xor eax, eax	      1278	undo.c	FUNCTION_28
0x4002012	      0xbe00000000	                              mov esi, 0	      1285	undo.c	FUNCTION_28
0x4002017	      0xbf38020000	                          mov edi, 0x238	      1285	undo.c	FUNCTION_28
0x400201c	      0xe800000000	                          call 0x4002021	      1285	undo.c	FUNCTION_28
0x4002021	        0x488945e8	             mov qword [rbp - 0x18], rax	      1285	undo.c	FUNCTION_28
0x4002025	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1286	undo.c	FUNCTION_28	IF_1
0x400202a	            0x750a	                           jne 0x4002036	      1286	undo.c	FUNCTION_28	IF_1
0x400202c	      0xb800000000	                              mov eax, 0	      1287	undo.c	FUNCTION_28	IF_1
0x4002031	      0xe991020000	                           jmp 0x40022c7	      1287	undo.c	FUNCTION_28	IF_1
0x4002036	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1288	undo.c	FUNCTION_28	CALL_1
0x400203a	      0xba38020000	                          mov edx, 0x238	      1288	undo.c	FUNCTION_28	CALL_1
0x400203f	      0xbe00000000	                              mov esi, 0	      1288	undo.c	FUNCTION_28	CALL_1
0x4002044	          0x4889c7	                            mov rdi, rax	      1288	undo.c	FUNCTION_28	CALL_1
0x4002047	      0xe800000000	                          call 0x400204c	      1288	undo.c	FUNCTION_28	CALL_1
0x400204c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1292	undo.c	FUNCTION_28	CALL_2
0x4002050	          0x4889c7	                            mov rdi, rax	      1292	undo.c	FUNCTION_28	CALL_2
0x4002053	      0xe85ff4ffff	                   call sym.undo_read_4c	      1292	undo.c	FUNCTION_28	CALL_2
0x4002058	          0x4863d0	                         movsxd rdx, eax	      1292	undo.c	FUNCTION_28	CALL_2
0x400205b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1292	undo.c	FUNCTION_28	CALL_2
0x400205f	          0x488910	                    mov qword [rax], rdx	      1292	undo.c	FUNCTION_28	CALL_2
0x4002062	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1293	undo.c	FUNCTION_28	CALL_3
0x4002066	          0x4889c7	                            mov rdi, rax	      1293	undo.c	FUNCTION_28	CALL_3
0x4002069	      0xe849f4ffff	                   call sym.undo_read_4c	      1293	undo.c	FUNCTION_28	CALL_3
0x400206e	          0x4863d0	                         movsxd rdx, eax	      1293	undo.c	FUNCTION_28	CALL_3
0x4002071	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1293	undo.c	FUNCTION_28	CALL_3
0x4002075	        0x48895008	                mov qword [rax + 8], rdx	      1293	undo.c	FUNCTION_28	CALL_3
0x4002079	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1294	undo.c	FUNCTION_28	CALL_4
0x400207d	          0x4889c7	                            mov rdi, rax	      1294	undo.c	FUNCTION_28	CALL_4
0x4002080	      0xe832f4ffff	                   call sym.undo_read_4c	      1294	undo.c	FUNCTION_28	CALL_4
0x4002085	          0x4863d0	                         movsxd rdx, eax	      1294	undo.c	FUNCTION_28	CALL_4
0x4002088	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1294	undo.c	FUNCTION_28	CALL_4
0x400208c	        0x48895010	             mov qword [rax + 0x10], rdx	      1294	undo.c	FUNCTION_28	CALL_4
0x4002090	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1295	undo.c	FUNCTION_28	CALL_5
0x4002094	          0x4889c7	                            mov rdi, rax	      1295	undo.c	FUNCTION_28	CALL_5
0x4002097	      0xe81bf4ffff	                   call sym.undo_read_4c	      1295	undo.c	FUNCTION_28	CALL_5
0x400209c	          0x4863d0	                         movsxd rdx, eax	      1295	undo.c	FUNCTION_28	CALL_5
0x400209f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1295	undo.c	FUNCTION_28	CALL_5
0x40020a3	        0x48895018	             mov qword [rax + 0x18], rdx	      1295	undo.c	FUNCTION_28	CALL_5
0x40020a7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1296	undo.c	FUNCTION_28	CALL_6
0x40020ab	          0x4889c7	                            mov rdi, rax	      1296	undo.c	FUNCTION_28	CALL_6
0x40020ae	      0xe804f4ffff	                   call sym.undo_read_4c	      1296	undo.c	FUNCTION_28	CALL_6
0x40020b3	          0x4863d0	                         movsxd rdx, eax	      1296	undo.c	FUNCTION_28	CALL_6
0x40020b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1296	undo.c	FUNCTION_28	CALL_6
0x40020ba	        0x48895020	             mov qword [rax + 0x20], rdx	      1296	undo.c	FUNCTION_28	CALL_6
0x40020be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1297	undo.c	FUNCTION_28	IF_2
0x40020c2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1297	undo.c	FUNCTION_28	IF_2
0x40020c6	          0x4885c0	                           test rax, rax	      1297	undo.c	FUNCTION_28	IF_2
0x40020c9	            0x7f27	                            jg 0x40020f2	      1297	undo.c	FUNCTION_28	IF_2
0x40020cb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1299	undo.c	FUNCTION_28	IF_2	CALL_7
0x40020cf	          0x4889c6	                            mov rsi, rax	      1299	undo.c	FUNCTION_28	IF_2	CALL_7
0x40020d2	      0xbf00000000	                              mov edi, 0	      1299	undo.c	FUNCTION_28	IF_2	CALL_7
0x40020d7	      0xe860efffff	               call sym.corruption_error	      1299	undo.c	FUNCTION_28	IF_2	CALL_7
0x40020dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1300	undo.c	FUNCTION_28	IF_2	CALL_8
0x40020e0	          0x4889c7	                            mov rdi, rax	      1300	undo.c	FUNCTION_28	IF_2	CALL_8
0x40020e3	      0xe800000000	                          call 0x40020e8	      1300	undo.c	FUNCTION_28	IF_2	CALL_8
0x40020e8	      0xb800000000	                              mov eax, 0	      1301	undo.c	FUNCTION_28	IF_2
0x40020ed	      0xe9d5010000	                           jmp 0x40022c7	      1301	undo.c	FUNCTION_28	IF_2
0x40020f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1303	undo.c	FUNCTION_28	CALL_9
0x40020f6	        0x488d5040	                   lea rdx, [rax + 0x40]	      1303	undo.c	FUNCTION_28	CALL_9
0x40020fa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1303	undo.c	FUNCTION_28	CALL_9
0x40020fe	          0x4889d6	                            mov rsi, rdx	      1303	undo.c	FUNCTION_28	CALL_9
0x4002101	          0x4889c7	                            mov rdi, rax	      1303	undo.c	FUNCTION_28	CALL_9
0x4002104	      0xe85c050000	                call sym.unserialize_pos	      1303	undo.c	FUNCTION_28	CALL_9
0x4002109	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1305	undo.c	FUNCTION_28	CALL_10
0x400210d	          0x4889c7	                            mov rdi, rax	      1305	undo.c	FUNCTION_28	CALL_10
0x4002110	      0xe8a2f3ffff	                   call sym.undo_read_4c	      1305	undo.c	FUNCTION_28	CALL_10
0x4002115	          0x4863d0	                         movsxd rdx, eax	      1305	undo.c	FUNCTION_28	CALL_10
0x4002118	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1305	undo.c	FUNCTION_28	CALL_10
0x400211c	        0x48895050	             mov qword [rax + 0x50], rdx	      1305	undo.c	FUNCTION_28	CALL_10
0x4002120	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1309	undo.c	FUNCTION_28	CALL_12
0x4002124	          0x4889c7	                            mov rdi, rax	      1309	undo.c	FUNCTION_28	CALL_12
0x4002127	      0xe826f4ffff	                   call sym.undo_read_2c	      1309	undo.c	FUNCTION_28	CALL_12
0x400212c	            0x89c2	                            mov edx, eax	      1309	undo.c	FUNCTION_28	CALL_12
0x400212e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1309	undo.c	FUNCTION_28	CALL_12
0x4002132	          0x895058	             mov dword [rax + 0x58], edx	      1309	undo.c	FUNCTION_28	CALL_12
0x4002135	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1310	undo.c	FUNCTION_28	FOR_1
0x400213c	            0xeb2a	                           jmp 0x4002168	      1310	undo.c	FUNCTION_28	FOR_1
0x400213e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1311	undo.c	FUNCTION_28	CALL_13
0x4002141	            0x4898	                                    cdqe	      1311	undo.c	FUNCTION_28	CALL_13
0x4002143	        0x4883c006	                              add rax, 6	      1311	undo.c	FUNCTION_28	CALL_13
0x4002147	        0x48c1e004	                              shl rax, 4	      1311	undo.c	FUNCTION_28	CALL_13
0x400214b	          0x4889c2	                            mov rdx, rax	      1311	undo.c	FUNCTION_28	CALL_13
0x400214e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1311	undo.c	FUNCTION_28	CALL_13
0x4002152	          0x4801c2	                            add rdx, rax	      1311	undo.c	FUNCTION_28	CALL_13
0x4002155	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1311	undo.c	FUNCTION_28	CALL_13
0x4002159	          0x4889d6	                            mov rsi, rdx	      1311	undo.c	FUNCTION_28	CALL_13
0x400215c	          0x4889c7	                            mov rdi, rax	      1311	undo.c	FUNCTION_28	CALL_13
0x400215f	      0xe801050000	                call sym.unserialize_pos	      1311	undo.c	FUNCTION_28	CALL_13
0x4002164	        0x8345d001	               add dword [rbp - 0x30], 1	      1310	undo.c	FUNCTION_28	FOR_1
0x4002168	        0x837dd019	           cmp dword [rbp - 0x30], 0x19 	      1310	undo.c	FUNCTION_28	FOR_1
0x400216c	            0x7ed0	                           jle 0x400213e	      1310	undo.c	FUNCTION_28	FOR_1
0x400216e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1312	undo.c	FUNCTION_28	CALL_14
0x4002172	    0x488d90000200	                  lea rdx, [rax + 0x200]	      1312	undo.c	FUNCTION_28	CALL_14
0x4002179	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1312	undo.c	FUNCTION_28	CALL_14
0x400217d	          0x4889d6	                            mov rsi, rdx	      1312	undo.c	FUNCTION_28	CALL_14
0x4002180	          0x4889c7	                            mov rdi, rax	      1312	undo.c	FUNCTION_28	CALL_14
0x4002183	      0xe8f7050000	         call sym.unserialize_visualinfo	      1312	undo.c	FUNCTION_28	CALL_14
0x4002188	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1313	undo.c	FUNCTION_28	CALL_15
0x400218c	          0x4889c7	                            mov rdi, rax	      1313	undo.c	FUNCTION_28	CALL_15
0x400218f	      0xe8b0f4ffff	                 call sym.undo_read_time	      1313	undo.c	FUNCTION_28	CALL_15
0x4002194	          0x4889c2	                            mov rdx, rax	      1313	undo.c	FUNCTION_28	CALL_15
0x4002197	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1313	undo.c	FUNCTION_28	CALL_15
0x400219b	    0x488990280200	            mov qword [rax + 0x228], rdx	      1313	undo.c	FUNCTION_28	CALL_15
0x40021a2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1318	undo.c	FUNCTION_28	FOR_2	CALL_16
0x40021a6	          0x4889c7	                            mov rdi, rax	      1318	undo.c	FUNCTION_28	FOR_2	CALL_16
0x40021a9	      0xe827f4ffff	                 call sym.undo_read_byte	      1318	undo.c	FUNCTION_28	FOR_2	CALL_16
0x40021ae	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1318	undo.c	FUNCTION_28	FOR_2	CALL_16
0x40021b1	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1321	undo.c	FUNCTION_28	FOR_2	IF_3
0x40021b5	            0x744d	                            je 0x4002204	      1321	undo.c	FUNCTION_28	FOR_2	IF_3
0x40021b7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1323	undo.c	FUNCTION_28	FOR_2	CALL_17
0x40021bb	          0x4889c7	                            mov rdi, rax	      1323	undo.c	FUNCTION_28	FOR_2	CALL_17
0x40021be	      0xe812f4ffff	                 call sym.undo_read_byte	      1323	undo.c	FUNCTION_28	FOR_2	CALL_17
0x40021c3	          0x8945d8	             mov dword [rbp - 0x28], eax	      1323	undo.c	FUNCTION_28	FOR_2	CALL_17
0x40021c6	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1324	undo.c	FUNCTION_28	FOR_2	SWITCH_1
0x40021c9	          0x83f801	                              cmp eax, 1	      1324	undo.c	FUNCTION_28	FOR_2	SWITCH_1
0x40021cc	            0x751c	                           jne 0x40021ea	      1324	undo.c	FUNCTION_28	FOR_2	SWITCH_1
0x40021ce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_18
0x40021d2	          0x4889c7	                            mov rdi, rax	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_18
0x40021d5	      0xe8ddf2ffff	                   call sym.undo_read_4c	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_18
0x40021da	          0x4863d0	                         movsxd rdx, eax	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_18
0x40021dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_18
0x40021e1	    0x488990300200	            mov qword [rax + 0x230], rdx	      1327	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_18
0x40021e8	            0xeb18	                           jmp 0x4002202	      1328	undo.c	FUNCTION_28	FOR_2	SWITCH_1
0x40021ea	            0xeb0c	                           jmp 0x40021f8	      1331	undo.c	FUNCTION_28	FOR_2	SWITCH_1	WHILE_1
0x40021ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1332	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_19
0x40021f0	          0x4889c7	                            mov rdi, rax	      1332	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_19
0x40021f3	      0xe8ddf3ffff	                 call sym.undo_read_byte	      1332	undo.c	FUNCTION_28	FOR_2	SWITCH_1	CALL_19
0x40021f8	        0x836dd401	               sub dword [rbp - 0x2c], 1	      1331	undo.c	FUNCTION_28	FOR_2	SWITCH_1	WHILE_1
0x40021fc	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1331	undo.c	FUNCTION_28	FOR_2	SWITCH_1	WHILE_1
0x4002200	            0x79ea	                           jns 0x40021ec	      1331	undo.c	FUNCTION_28	FOR_2	SWITCH_1	WHILE_1
0x4002202	            0xeb9e	                           jmp 0x40021a2	      1334	undo.c	FUNCTION_28	FOR_2
0x4002204	              0x90	                                     nop	      1322	undo.c	FUNCTION_28	FOR_2	IF_3
0x4002205	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1337	undo.c	FUNCTION_28
0x400220d	            0xeb6b	                           jmp 0x400227a	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_20
0x400220f	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1340	undo.c	FUNCTION_28	WHILE_2
0x4002216	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x400221a	        0x488d4dcc	                   lea rcx, [rbp - 0x34]	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x400221e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x4002222	          0x4889ce	                            mov rsi, rcx	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x4002225	          0x4889c7	                            mov rdi, rax	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x4002228	      0xe8ee010000	                call sym.unserialize_uep	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x400222d	        0x488945f0	             mov qword [rbp - 0x10], rax	      1341	undo.c	FUNCTION_28	WHILE_2	CALL_21
0x4002231	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1342	undo.c	FUNCTION_28	WHILE_2	IF_4
0x4002236	            0x750e	                           jne 0x4002246	      1342	undo.c	FUNCTION_28	WHILE_2	IF_4
0x4002238	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1343	undo.c	FUNCTION_28	WHILE_2	IF_4
0x400223c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1343	undo.c	FUNCTION_28	WHILE_2	IF_4
0x4002240	        0x48895030	             mov qword [rax + 0x30], rdx	      1343	undo.c	FUNCTION_28	WHILE_2	IF_4
0x4002244	            0xeb0b	                           jmp 0x4002251	      1343	undo.c	FUNCTION_28	WHILE_2	IF_4
0x4002246	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1345	undo.c	FUNCTION_28	WHILE_2	ELSE_1
0x400224a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1345	undo.c	FUNCTION_28	WHILE_2	ELSE_1
0x400224e	          0x488910	                    mov qword [rax], rdx	      1345	undo.c	FUNCTION_28	WHILE_2	ELSE_1
0x4002251	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1346	undo.c	FUNCTION_28	WHILE_2	ELSE_1
0x4002255	        0x488945e0	             mov qword [rbp - 0x20], rax	      1346	undo.c	FUNCTION_28	WHILE_2	ELSE_1
0x4002259	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1347	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x400225e	            0x7407	                            je 0x4002267	      1347	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x4002260	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1347	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x4002263	            0x85c0	                           test eax, eax	      1347	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x4002265	            0x7413	                            je 0x400227a	      1347	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x4002267	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1349	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5	CALL_22
0x400226b	          0x4889c7	                            mov rdi, rax	      1349	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5	CALL_22
0x400226e	      0xe8fcedffff	                     call sym.u_free_uhp	      1349	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5	CALL_22
0x4002273	      0xb800000000	                              mov eax, 0	      1350	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x4002278	            0xeb4d	                           jmp 0x40022c7	      1350	undo.c	FUNCTION_28	WHILE_2	ELSE_1	IF_5
0x400227a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_20
0x400227e	          0x4889c7	                            mov rdi, rax	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_20
0x4002281	      0xe8ccf2ffff	                   call sym.undo_read_2c	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_20
0x4002286	          0x8945dc	             mov dword [rbp - 0x24], eax	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_20
0x4002289	    0x817ddc18f500	         cmp dword [rbp - 0x24], 0xf518 	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_20
0x4002290	     0xf8479ffffff	                            je 0x400220f	      1338	undo.c	FUNCTION_28	WHILE_2	CALL_20
0x4002296	    0x817ddc813500	         cmp dword [rbp - 0x24], 0x3581 	      1353	undo.c	FUNCTION_28	IF_6
0x400229d	            0x7424	                            je 0x40022c3	      1353	undo.c	FUNCTION_28	IF_6
0x400229f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1355	undo.c	FUNCTION_28	IF_6	CALL_23
0x40022a3	          0x4889c6	                            mov rsi, rax	      1355	undo.c	FUNCTION_28	IF_6	CALL_23
0x40022a6	      0xbf00000000	                              mov edi, 0	      1355	undo.c	FUNCTION_28	IF_6	CALL_23
0x40022ab	      0xe88cedffff	               call sym.corruption_error	      1355	undo.c	FUNCTION_28	IF_6	CALL_23
0x40022b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1356	undo.c	FUNCTION_28	IF_6	CALL_24
0x40022b4	          0x4889c7	                            mov rdi, rax	      1356	undo.c	FUNCTION_28	IF_6	CALL_24
0x40022b7	      0xe8b3edffff	                     call sym.u_free_uhp	      1356	undo.c	FUNCTION_28	IF_6	CALL_24
0x40022bc	      0xb800000000	                              mov eax, 0	      1357	undo.c	FUNCTION_28	IF_6
0x40022c1	            0xeb04	                           jmp 0x40022c7	      1357	undo.c	FUNCTION_28	IF_6
0x40022c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1360	undo.c	FUNCTION_28
0x40022c7	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1361	undo.c	FUNCTION_28
0x40022cb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1361	undo.c	FUNCTION_28
0x40022d4	            0x7405	                            je 0x40022db	      1361	undo.c	FUNCTION_28
0x40022d6	      0xe800000000	                          call 0x40022db	      1361	undo.c	FUNCTION_28
0x40022db	              0xc9	                                   leave	      1361	undo.c	FUNCTION_28
0x40022dc	              0xc3	                                     ret	      1361	undo.c	FUNCTION_28
unserialize_visualinfo	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,4:WHILE,0:DO,0	31
0x400277f	              0x55	                                push rbp	      1495	undo.c	FUNCTION_34
0x4002780	          0x4889e5	                            mov rbp, rsp	      1495	undo.c	FUNCTION_34
0x4002783	        0x4883ec10	                           sub rsp, 0x10	      1495	undo.c	FUNCTION_34
0x4002787	        0x48897df8	                mov qword [rbp - 8], rdi	      1495	undo.c	FUNCTION_34
0x400278b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1495	undo.c	FUNCTION_34
0x400278f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1496	undo.c	FUNCTION_34	CALL_1
0x4002793	        0x488b45f8	                mov rax, qword [rbp - 8]	      1496	undo.c	FUNCTION_34	CALL_1
0x4002797	          0x4889d6	                            mov rsi, rdx	      1496	undo.c	FUNCTION_34	CALL_1
0x400279a	          0x4889c7	                            mov rdi, rax	      1496	undo.c	FUNCTION_34	CALL_1
0x400279d	      0xe8c3feffff	                call sym.unserialize_pos	      1496	undo.c	FUNCTION_34	CALL_1
0x40027a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1497	undo.c	FUNCTION_34	CALL_2
0x40027a6	        0x488d5010	                   lea rdx, [rax + 0x10]	      1497	undo.c	FUNCTION_34	CALL_2
0x40027aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1497	undo.c	FUNCTION_34	CALL_2
0x40027ae	          0x4889d6	                            mov rsi, rdx	      1497	undo.c	FUNCTION_34	CALL_2
0x40027b1	          0x4889c7	                            mov rdi, rax	      1497	undo.c	FUNCTION_34	CALL_2
0x40027b4	      0xe8acfeffff	                call sym.unserialize_pos	      1497	undo.c	FUNCTION_34	CALL_2
0x40027b9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1498	undo.c	FUNCTION_34	CALL_3
0x40027bd	          0x4889c7	                            mov rdi, rax	      1498	undo.c	FUNCTION_34	CALL_3
0x40027c0	      0xe8f2ecffff	                   call sym.undo_read_4c	      1498	undo.c	FUNCTION_34	CALL_3
0x40027c5	            0x89c2	                            mov edx, eax	      1498	undo.c	FUNCTION_34	CALL_3
0x40027c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1498	undo.c	FUNCTION_34	CALL_3
0x40027cb	          0x895020	             mov dword [rax + 0x20], edx	      1498	undo.c	FUNCTION_34	CALL_3
0x40027ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      1499	undo.c	FUNCTION_34	CALL_4
0x40027d2	          0x4889c7	                            mov rdi, rax	      1499	undo.c	FUNCTION_34	CALL_4
0x40027d5	      0xe8ddecffff	                   call sym.undo_read_4c	      1499	undo.c	FUNCTION_34	CALL_4
0x40027da	            0x89c2	                            mov edx, eax	      1499	undo.c	FUNCTION_34	CALL_4
0x40027dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1499	undo.c	FUNCTION_34	CALL_4
0x40027e0	          0x895024	             mov dword [rax + 0x24], edx	      1499	undo.c	FUNCTION_34	CALL_4
0x40027e3	              0x90	                                     nop	      1500	undo.c	FUNCTION_34
0x40027e4	              0xc9	                                   leave	      1500	undo.c	FUNCTION_34
0x40027e5	              0xc3	                                     ret	      1500	undo.c	FUNCTION_34
undo_read_4c	SWITCH,0:FOR,0:IF,1:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	45
0x40014b7	              0x55	                                push rbp	       994	undo.c	FUNCTION_20
0x40014b8	          0x4889e5	                            mov rbp, rsp	       994	undo.c	FUNCTION_20
0x40014bb	        0x4883ec30	                           sub rsp, 0x30	       994	undo.c	FUNCTION_20
0x40014bf	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       994	undo.c	FUNCTION_20
0x40014c3	    0x64488b042528	                mov rax, qword fs:[0x28]	       994	undo.c	FUNCTION_20
0x40014cc	        0x488945f8	                mov qword [rbp - 8], rax	       994	undo.c	FUNCTION_20
0x40014d0	            0x31c0	                            xor eax, eax	       994	undo.c	FUNCTION_20
0x40014d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       996	undo.c	FUNCTION_20	IF_1
0x40014d6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       996	undo.c	FUNCTION_20	IF_1
0x40014da	          0x4885c0	                           test rax, rax	       996	undo.c	FUNCTION_20	IF_1
0x40014dd	            0x744d	                            je 0x400152c	       996	undo.c	FUNCTION_20	IF_1
0x40014df	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x40014e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x40014e7	      0xba04000000	                              mov edx, 4	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x40014ec	          0x4889ce	                            mov rsi, rcx	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x40014ef	          0x4889c7	                            mov rdi, rax	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x40014f2	      0xe8f3010000	                      call sym.undo_read	      1001	undo.c	FUNCTION_20	IF_1	CALL_1
0x40014f7	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      1002	undo.c	FUNCTION_20	IF_1
0x40014fb	           0xfb6c0	                           movzx eax, al	      1002	undo.c	FUNCTION_20	IF_1
0x40014fe	          0xc1e018	                           shl eax, 0x18	      1002	undo.c	FUNCTION_20	IF_1
0x4001501	            0x89c2	                            mov edx, eax	      1002	undo.c	FUNCTION_20	IF_1
0x4001503	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      1002	undo.c	FUNCTION_20	IF_1
0x4001507	           0xfb6c0	                           movzx eax, al	      1002	undo.c	FUNCTION_20	IF_1
0x400150a	          0xc1e010	                           shl eax, 0x10	      1002	undo.c	FUNCTION_20	IF_1
0x400150d	             0x1c2	                            add edx, eax	      1002	undo.c	FUNCTION_20	IF_1
0x400150f	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	      1002	undo.c	FUNCTION_20	IF_1
0x4001513	           0xfb6c0	                           movzx eax, al	      1002	undo.c	FUNCTION_20	IF_1
0x4001516	          0xc1e008	                              shl eax, 8	      1002	undo.c	FUNCTION_20	IF_1
0x4001519	             0x1c2	                            add edx, eax	      1002	undo.c	FUNCTION_20	IF_1
0x400151b	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	      1002	undo.c	FUNCTION_20	IF_1
0x400151f	           0xfb6c0	                           movzx eax, al	      1002	undo.c	FUNCTION_20	IF_1
0x4001522	             0x1d0	                            add eax, edx	      1002	undo.c	FUNCTION_20	IF_1
0x4001524	          0x8945ec	             mov dword [rbp - 0x14], eax	      1002	undo.c	FUNCTION_20	IF_1
0x4001527	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1003	undo.c	FUNCTION_20	IF_1
0x400152a	            0xeb10	                           jmp 0x400153c	      1003	undo.c	FUNCTION_20	IF_1
0x400152c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1006	undo.c	FUNCTION_20	CALL_2
0x4001530	        0x488b4008	                mov rax, qword [rax + 8]	      1006	undo.c	FUNCTION_20	CALL_2
0x4001534	          0x4889c7	                            mov rdi, rax	      1006	undo.c	FUNCTION_20	CALL_2
0x4001537	      0xe800000000	                          call 0x400153c	      1006	undo.c	FUNCTION_20	CALL_2
0x400153c	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1007	undo.c	FUNCTION_20
0x4001540	    0x644833342528	                xor rsi, qword fs:[0x28]	      1007	undo.c	FUNCTION_20
0x4001549	            0x7405	                            je 0x4001550	      1007	undo.c	FUNCTION_20
0x400154b	      0xe800000000	                          call 0x4001550	      1007	undo.c	FUNCTION_20
0x4001550	              0xc9	                                   leave	      1007	undo.c	FUNCTION_20
0x4001551	              0xc3	                                     ret	      1007	undo.c	FUNCTION_20
undo_write	SWITCH,0:FOR,0:IF,4:functions,0:ELSE,0:CALL,4:WHILE,1:DO,0	85
0x40010c9	              0x55	                                push rbp	       886	undo.c	FUNCTION_15
0x40010ca	          0x4889e5	                            mov rbp, rsp	       886	undo.c	FUNCTION_15
0x40010cd	        0x4883ec40	                           sub rsp, 0x40	       886	undo.c	FUNCTION_15
0x40010d1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       886	undo.c	FUNCTION_15
0x40010d5	        0x488975d0	             mov qword [rbp - 0x30], rsi	       886	undo.c	FUNCTION_15
0x40010d9	        0x488955c8	             mov qword [rbp - 0x38], rdx	       886	undo.c	FUNCTION_15
0x40010dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       888	undo.c	FUNCTION_15	IF_1
0x40010e1	        0x488b4018	            mov rax, qword [rax + 0x18] 	       888	undo.c	FUNCTION_15	IF_1
0x40010e5	          0x4885c0	                           test rax, rax	       888	undo.c	FUNCTION_15	IF_1
0x40010e8	     0xf84ed000000	                            je 0x40011db	       888	undo.c	FUNCTION_15	IF_1
0x40010ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       890	undo.c	FUNCTION_15	IF_1
0x40010f2	        0x488945e8	             mov qword [rbp - 0x18], rax	       890	undo.c	FUNCTION_15	IF_1
0x40010f6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       891	undo.c	FUNCTION_15	IF_1
0x40010fa	        0x488945f0	             mov qword [rbp - 0x10], rax	       891	undo.c	FUNCTION_15	IF_1
0x40010fe	            0xeb74	                           jmp 0x4001174	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001100	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001104	        0x488b4020	            mov rax, qword [rax + 0x20] 	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001108	      0xba00200000	                         mov edx, 0x2000	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400110d	          0x4829c2	                            sub rdx, rax	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001110	          0x4889d0	                            mov rax, rdx	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001113	        0x488945f8	                mov qword [rbp - 8], rax	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001117	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x400111b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x400111f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x4001123	        0x488b4020	            mov rax, qword [rax + 0x20] 	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x4001127	        0x488d0c02	                    lea rcx, [rdx + rax]	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x400112b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x400112f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x4001133	          0x4889c6	                            mov rsi, rax	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x4001136	          0x4889cf	                            mov rdi, rcx	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x4001139	      0xe800000000	                          call 0x400113e	       897	undo.c	FUNCTION_15	IF_1	WHILE_1	CALL_1
0x400113e	        0x488b45f8	                mov rax, qword [rbp - 8]	       898	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001142	        0x482945e8	             sub qword [rbp - 0x18], rax	       898	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001146	        0x488b45f8	                mov rax, qword [rbp - 8]	       899	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400114a	        0x480145f0	            add qword [rbp - 0x10], rax 	       899	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400114e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       900	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001152	    0x48c740200020	         mov qword [rax + 0x20], 0x2000 	       900	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400115a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x400115e	          0x4889c7	                            mov rdi, rax	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x4001161	      0xe8a9000000	                     call sym.undo_flush	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x4001166	            0x85c0	                           test eax, eax	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x4001168	            0x750a	                           jne 0x4001174	       901	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2	CALL_2
0x400116a	      0xb800000000	                              mov eax, 0	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x400116f	      0xe999000000	                           jmp 0x400120d	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x4001174	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001178	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400117c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001180	          0x4801d0	                            add rax, rdx	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001183	    0x483dff1f0000	                         cmp rax, 0x1fff	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4001189	     0xf8771ffffff	                            ja 0x4001100	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400118f	      0x48837de800	               cmp qword [rbp - 0x18], 0	       904	undo.c	FUNCTION_15	IF_1	IF_3
0x4001194	            0x743e	                            je 0x40011d4	       904	undo.c	FUNCTION_15	IF_1	IF_3
0x4001196	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x400119a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x400119e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x40011a2	        0x488b4020	            mov rax, qword [rax + 0x20] 	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x40011a6	        0x488d0c02	                    lea rcx, [rdx + rax]	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x40011aa	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x40011ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x40011b2	          0x4889c6	                            mov rsi, rax	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x40011b5	          0x4889cf	                            mov rdi, rcx	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x40011b8	      0xe800000000	                          call 0x40011bd	       906	undo.c	FUNCTION_15	IF_1	IF_3	CALL_3
0x40011bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x40011c1	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x40011c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x40011c9	          0x4801c2	                            add rdx, rax	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x40011cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x40011d0	        0x48895020	             mov qword [rax + 0x20], rdx	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x40011d4	      0xb801000000	                              mov eax, 1	       909	undo.c	FUNCTION_15	IF_1
0x40011d9	            0xeb32	                           jmp 0x400120d	       909	undo.c	FUNCTION_15	IF_1
0x40011db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40011df	        0x488b5008	                mov rdx, qword [rax + 8]	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40011e3	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40011e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40011eb	          0x4889d1	                            mov rcx, rdx	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40011ee	      0xba01000000	                              mov edx, 1	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40011f3	          0x4889c7	                            mov rdi, rax	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40011f6	      0xe800000000	                          call 0x40011fb	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40011fb	        0x4883f801	                              cmp rax, 1	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x40011ff	            0x7407	                            je 0x4001208	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x4001201	      0xb800000000	                              mov eax, 0	       913	undo.c	FUNCTION_15	IF_4
0x4001206	            0xeb05	                           jmp 0x400120d	       913	undo.c	FUNCTION_15	IF_4
0x4001208	      0xb801000000	                              mov eax, 1	       914	undo.c	FUNCTION_15
0x400120d	              0xc9	                                   leave	       915	undo.c	FUNCTION_15
0x400120e	              0xc3	                                     ret	       915	undo.c	FUNCTION_15
u_sync	SWITCH,0:FOR,0:IF,3:functions,0:ELSE,1:CALL,3:WHILE,0:DO,0	34
0x4005bbc	              0x55	                                push rbp	      2985	undo.c	FUNCTION_43
0x4005bbd	          0x4889e5	                            mov rbp, rsp	      2985	undo.c	FUNCTION_43
0x4005bc0	        0x4883ec10	                           sub rsp, 0x10	      2985	undo.c	FUNCTION_43
0x4005bc4	          0x897dfc	                mov dword [rbp - 4], edi	      2985	undo.c	FUNCTION_43
0x4005bc7	    0x488b05000000	            mov rax, qword [0x04005bce] 	      2987	undo.c	FUNCTION_43	IF_1
0x4005bce	    0x8b8034120000	          mov eax, dword [rax + 0x1234] 	      2987	undo.c	FUNCTION_43	IF_1
0x4005bd4	            0x85c0	                           test eax, eax	      2987	undo.c	FUNCTION_43	IF_1
0x4005bd6	            0x755b	                           jne 0x4005c33	      2987	undo.c	FUNCTION_43	IF_1
0x4005bd8	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2987	undo.c	FUNCTION_43	IF_1
0x4005bdc	            0x750a	                           jne 0x4005be8	      2987	undo.c	FUNCTION_43	IF_1
0x4005bde	    0x8b0500000000	            mov eax, dword [0x04005be4] 	      2987	undo.c	FUNCTION_43	IF_1
0x4005be4	            0x85c0	                           test eax, eax	      2987	undo.c	FUNCTION_43	IF_1
0x4005be6	            0x7f4b	                            jg 0x4005c33	      2987	undo.c	FUNCTION_43	IF_1
0x4005be8	    0x488b05000000	            mov rax, qword [0x04005bef] 	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4005bef	          0x4885c0	                           test rax, rax	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4005bf2	            0x7509	                           jne 0x4005bfd	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4005bf4	      0xe800000000	                          call 0x4005bf9	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4005bf9	            0x85c0	                           test eax, eax	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4005bfb	            0x7539	                           jne 0x4005c36	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4005bfd	      0xe85ba6ffff	                  call sym.get_undolevel	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x4005c02	          0x4885c0	                           test rax, rax	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x4005c05	            0x7913	                           jns 0x4005c1a	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x4005c07	    0x488b05000000	            mov rax, qword [0x04005c0e] 	      2994	undo.c	FUNCTION_43	IF_3
0x4005c0e	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      2994	undo.c	FUNCTION_43	IF_3
0x4005c18	            0xeb1d	                           jmp 0x4005c37	      2994	undo.c	FUNCTION_43	IF_3
0x4005c1a	      0xe813080000	                       call sym.u_getbot	      2997	undo.c	FUNCTION_43	ELSE_1	CALL_3
0x4005c1f	    0x488b05000000	            mov rax, qword [0x04005c26] 	      2998	undo.c	FUNCTION_43	ELSE_1
0x4005c26	    0x48c780281200	            mov qword [rax + 0x1228], 0 	      2998	undo.c	FUNCTION_43	ELSE_1
0x4005c31	            0xeb04	                           jmp 0x4005c37	      2998	undo.c	FUNCTION_43	ELSE_1
0x4005c33	              0x90	                                     nop	      2988	undo.c	FUNCTION_43	IF_1
0x4005c34	            0xeb01	                           jmp 0x4005c37	      2988	undo.c	FUNCTION_43	IF_1
0x4005c36	              0x90	                                     nop	      2991	undo.c	FUNCTION_43	IF_2
0x4005c37	              0xc9	                                   leave	      3000	undo.c	FUNCTION_43
0x4005c38	              0xc3	                                     ret	      3000	undo.c	FUNCTION_43
fwrite_crypt	SWITCH,0:FOR,0:IF,4:functions,0:ELSE,1:CALL,5:WHILE,0:DO,0	69
0x40012ad	              0x55	                                push rbp	       938	undo.c	FUNCTION_17
0x40012ae	          0x4889e5	                            mov rbp, rsp	       938	undo.c	FUNCTION_17
0x40012b1	    0x4881eca00000	                           sub rsp, 0xa0	       938	undo.c	FUNCTION_17
0x40012b8	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       938	undo.c	FUNCTION_17
0x40012bf	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       938	undo.c	FUNCTION_17
0x40012c6	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       938	undo.c	FUNCTION_17
0x40012cd	    0x64488b042528	                mov rax, qword fs:[0x28]	       938	undo.c	FUNCTION_17
0x40012d6	        0x488945f8	                mov qword [rbp - 8], rax	       938	undo.c	FUNCTION_17
0x40012da	            0x31c0	                            xor eax, eax	       938	undo.c	FUNCTION_17
0x40012dc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       944	undo.c	FUNCTION_17	IF_1
0x40012e3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       944	undo.c	FUNCTION_17	IF_1
0x40012e7	          0x4885c0	                           test rax, rax	       944	undo.c	FUNCTION_17	IF_1
0x40012ea	     0xf84c3000000	                            je 0x40013b3	       944	undo.c	FUNCTION_17	IF_1
0x40012f0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       944	undo.c	FUNCTION_17	IF_1
0x40012f7	        0x488b4018	            mov rax, qword [rax + 0x18] 	       944	undo.c	FUNCTION_17	IF_1
0x40012fb	          0x4885c0	                           test rax, rax	       944	undo.c	FUNCTION_17	IF_1
0x40012fe	     0xf85af000000	                           jne 0x40013b3	       944	undo.c	FUNCTION_17	IF_1
0x4001304	    0x4883bd68ffff	           cmp qword [rbp - 0x98], 0x63 	       947	undo.c	FUNCTION_17	IF_1	IF_2
0x400130c	            0x770a	                            ja 0x4001318	       947	undo.c	FUNCTION_17	IF_1	IF_2
0x400130e	        0x488d4590	                   lea rax, [rbp - 0x70]	       948	undo.c	FUNCTION_17	IF_1	IF_2
0x4001312	        0x48894580	             mov qword [rbp - 0x80], rax	       948	undo.c	FUNCTION_17	IF_1	IF_2
0x4001316	            0xeb29	                           jmp 0x4001341	       948	undo.c	FUNCTION_17	IF_1	IF_2
0x4001318	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x400131f	      0xbe00000000	                              mov esi, 0	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x4001324	          0x4889c7	                            mov rdi, rax	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x4001327	      0xe800000000	                          call 0x400132c	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x400132c	        0x48894580	             mov qword [rbp - 0x80], rax	       951	undo.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x4001330	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       952	undo.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x4001335	            0x750a	                           jne 0x4001341	       952	undo.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x4001337	      0xb800000000	                              mov eax, 0	       953	undo.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x400133c	      0xe992000000	                           jmp 0x40013d3	       953	undo.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x4001341	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x4001348	        0x488b4010	            mov rax, qword [rax + 0x10] 	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x400134c	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x4001350	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x4001357	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x400135e	          0x4889c7	                            mov rdi, rax	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x4001361	      0xe800000000	                          call 0x4001366	       955	undo.c	FUNCTION_17	IF_1	CALL_2
0x4001366	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x400136d	        0x488b5008	                mov rdx, qword [rax + 8]	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4001371	    0x488bb568ffff	             mov rsi, qword [rbp - 0x98]	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4001378	        0x488b4580	             mov rax, qword [rbp - 0x80]	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x400137c	          0x4889d1	                            mov rcx, rdx	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x400137f	      0xba01000000	                              mov edx, 1	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4001384	          0x4889c7	                            mov rdi, rax	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4001387	      0xe800000000	                          call 0x400138c	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x400138c	        0x48894588	             mov qword [rbp - 0x78], rax	       956	undo.c	FUNCTION_17	IF_1	CALL_3
0x4001390	        0x488d4590	                   lea rax, [rbp - 0x70]	       957	undo.c	FUNCTION_17	IF_1	IF_4
0x4001394	        0x48394580	            cmp qword [rbp - 0x80], rax 	       957	undo.c	FUNCTION_17	IF_1	IF_4
0x4001398	            0x740c	                            je 0x40013a6	       957	undo.c	FUNCTION_17	IF_1	IF_4
0x400139a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       958	undo.c	FUNCTION_17	IF_1	CALL_4
0x400139e	          0x4889c7	                            mov rdi, rax	       958	undo.c	FUNCTION_17	IF_1	CALL_4
0x40013a1	      0xe800000000	                          call 0x40013a6	       958	undo.c	FUNCTION_17	IF_1	CALL_4
0x40013a6	      0x48837d8801	               cmp qword [rbp - 0x78], 1	       959	undo.c	FUNCTION_17	IF_1
0x40013ab	           0xf94c0	                                 sete al	       959	undo.c	FUNCTION_17	IF_1
0x40013ae	           0xfb6c0	                           movzx eax, al	       959	undo.c	FUNCTION_17	IF_1
0x40013b1	            0xeb20	                           jmp 0x40013d3	       959	undo.c	FUNCTION_17	IF_1
0x40013b3	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       962	undo.c	FUNCTION_17	CALL_5
0x40013ba	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	       962	undo.c	FUNCTION_17	CALL_5
0x40013c1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       962	undo.c	FUNCTION_17	CALL_5
0x40013c8	          0x4889ce	                            mov rsi, rcx	       962	undo.c	FUNCTION_17	CALL_5
0x40013cb	          0x4889c7	                            mov rdi, rax	       962	undo.c	FUNCTION_17	CALL_5
0x40013ce	      0xe8f6fcffff	                     call sym.undo_write	       962	undo.c	FUNCTION_17	CALL_5
0x40013d3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       963	undo.c	FUNCTION_17
0x40013d7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       963	undo.c	FUNCTION_17
0x40013e0	            0x7405	                            je 0x40013e7	       963	undo.c	FUNCTION_17
0x40013e2	      0xe800000000	                          call 0x40013e7	       963	undo.c	FUNCTION_17
0x40013e7	              0xc9	                                   leave	       963	undo.c	FUNCTION_17
0x40013e8	              0xc3	                                     ret	       963	undo.c	FUNCTION_17
u_doit	SWITCH,0:FOR,0:IF,10:functions,0:ELSE,2:CALL,13:WHILE,1:DO,0	115
0x4003f94	              0x55	                                push rbp	      2185	undo.c	FUNCTION_39
0x4003f95	          0x4889e5	                            mov rbp, rsp	      2185	undo.c	FUNCTION_39
0x4003f98	        0x4883ec20	                           sub rsp, 0x20	      2185	undo.c	FUNCTION_39
0x4003f9c	          0x897dec	             mov dword [rbp - 0x14], edi	      2185	undo.c	FUNCTION_39
0x4003f9f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2186	undo.c	FUNCTION_39
0x4003fa2	          0x8945fc	                mov dword [rbp - 4], eax	      2186	undo.c	FUNCTION_39
0x4003fa5	      0xe800000000	                          call 0x4003faa	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x4003faa	            0x85c0	                           test eax, eax	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x4003fac	     0xf84f7010000	                            je 0x40041a9	      2188	undo.c	FUNCTION_39	IF_1	CALL_1
0x4003fb2	    0x48c705000000	               mov qword [0x04003fbd], 0	      2191	undo.c	FUNCTION_39
0x4003fbd	    0x48c705000000	               mov qword [0x04003fc8], 0	      2192	undo.c	FUNCTION_39
0x4003fc8	    0x488b05000000	            mov rax, qword [0x04003fcf] 	      2193	undo.c	FUNCTION_39	IF_2
0x4003fcf	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2193	undo.c	FUNCTION_39	IF_2
0x4003fd2	          0x83e001	                              and eax, 1	      2193	undo.c	FUNCTION_39	IF_2
0x4003fd5	            0x85c0	                           test eax, eax	      2193	undo.c	FUNCTION_39	IF_2
0x4003fd7	     0xf84a1010000	                            je 0x400417e	      2193	undo.c	FUNCTION_39	IF_2
0x4003fdd	    0x48c705000000	mov qword [0x04003fe8], 0xffffffffffffffff 	      2194	undo.c	FUNCTION_39	IF_2
0x4003fe8	      0xe991010000	                           jmp 0x400417e	      2195	undo.c	FUNCTION_39	WHILE_1
0x4003fed	      0xbf00000000	                              mov edi, 0	      2201	undo.c	FUNCTION_39	WHILE_1	CALL_2
0x4003ff2	      0xe800000000	                          call 0x4003ff7	      2201	undo.c	FUNCTION_39	WHILE_1	CALL_2
0x4003ff7	    0x8b0500000000	            mov eax, dword [0x04003ffd] 	      2203	undo.c	FUNCTION_39	WHILE_1	IF_3
0x4003ffd	            0x85c0	                           test eax, eax	      2203	undo.c	FUNCTION_39	WHILE_1	IF_3
0x4003fff	     0xf84d4000000	                            je 0x40040d9	      2203	undo.c	FUNCTION_39	WHILE_1	IF_3
0x4004005	    0x488b05000000	            mov rax, qword [0x0400400c] 	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x400400c	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x4004013	          0x4885c0	                           test rax, rax	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x4004016	            0x751e	                           jne 0x4004036	      2205	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x4004018	    0x488b05000000	            mov rax, qword [0x0400401f] 	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x400401f	    0x488b15000000	            mov rdx, qword [0x04004026] 	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x4004026	    0x488b92201200	          mov rdx, qword [rdx + 0x1220] 	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x400402d	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x4004034	            0xeb29	                           jmp 0x400405f	      2206	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_4
0x4004036	      0xe822c2ffff	                  call sym.get_undolevel	      2207	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5	CALL_3
0x400403b	          0x4885c0	                           test rax, rax	      2207	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5	CALL_3
0x400403e	            0x7e1f	                           jle 0x400405f	      2207	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5	CALL_3
0x4004040	    0x488b05000000	            mov rax, qword [0x04004047] 	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x4004047	    0x488b15000000	            mov rdx, qword [0x0400404e] 	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x400404e	    0x488b92281200	          mov rdx, qword [rdx + 0x1228] 	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x4004055	          0x488b12	                    mov rdx, qword [rdx]	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x4004058	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2209	undo.c	FUNCTION_39	WHILE_1	IF_3	ELSE_1	IF_5
0x400405f	    0x488b05000000	            mov rax, qword [0x04004066] 	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4004066	    0x8b8030120000	          mov eax, dword [rax + 0x1230] 	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x400406c	            0x85c0	                           test eax, eax	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x400406e	            0x7413	                            je 0x4004083	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4004070	    0x488b05000000	            mov rax, qword [0x04004077] 	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4004077	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x400407e	          0x4885c0	                           test rax, rax	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4004081	            0x7547	                           jne 0x40040ca	      2211	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4004083	    0x488b05000000	            mov rax, qword [0x0400408a] 	      2214	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x400408a	    0x488b15000000	            mov rdx, qword [0x04004091] 	      2214	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4004091	    0x488b92181200	          mov rdx, qword [rdx + 0x1218] 	      2214	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4004098	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2214	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x400409f	      0xe800000000	                          call 0x40040a4	      2215	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	CALL_4
0x40040a4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2216	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x40040a7	          0x83e801	                              sub eax, 1	      2216	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x40040aa	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2216	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x40040ad	     0xf85de000000	                           jne 0x4004191	      2216	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x40040b3	      0xbf00000000	                              mov edi, 0	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x40040b8	      0xe800000000	                          call 0x40040bd	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x40040bd	          0x4889c7	                            mov rdi, rax	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x40040c0	      0xe800000000	                          call 0x40040c5	      2218	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7	CALL_6
0x40040c5	      0xe9e0000000	                           jmp 0x40041aa	      2219	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6	IF_7
0x40040ca	      0xbf01000000	                              mov edi, 1	      2224	undo.c	FUNCTION_39	WHILE_1	IF_3	CALL_7
0x40040cf	      0xe87d0a0000	                     call sym.u_undoredo	      2224	undo.c	FUNCTION_39	WHILE_1	IF_3	CALL_7
0x40040d4	      0xe9a5000000	                           jmp 0x400417e	      2224	undo.c	FUNCTION_39	WHILE_1	IF_3	CALL_7
0x40040d9	    0x488b05000000	            mov rax, qword [0x040040e0] 	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40040e0	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40040e7	          0x4885c0	                           test rax, rax	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40040ea	            0x740a	                            je 0x40040f6	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40040ec	      0xe86cc1ffff	                  call sym.get_undolevel	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40040f1	          0x4885c0	                           test rax, rax	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40040f4	            0x7f2b	                            jg 0x4004121	      2228	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_8
0x40040f6	      0xe800000000	                          call 0x40040fb	      2230	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	CALL_9
0x40040fb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2231	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x40040fe	          0x83e801	                              sub eax, 1	      2231	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x4004101	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2231	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x4004104	     0xf858a000000	                           jne 0x4004194	      2231	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x400410a	      0xbf00000000	                              mov edi, 0	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x400410f	      0xe800000000	                          call 0x4004114	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x4004114	          0x4889c7	                            mov rdi, rax	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x4004117	      0xe800000000	                          call 0x400411c	      2233	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9	CALL_11
0x400411c	      0xe989000000	                           jmp 0x40041aa	      2234	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8	IF_9
0x4004121	      0xbf00000000	                              mov edi, 0	      2239	undo.c	FUNCTION_39	WHILE_1	ELSE_2	CALL_12
0x4004126	      0xe8260a0000	                     call sym.u_undoredo	      2239	undo.c	FUNCTION_39	WHILE_1	ELSE_2	CALL_12
0x400412b	    0x488b05000000	            mov rax, qword [0x04004132] 	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4004132	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4004139	        0x488b4008	                mov rax, qword [rax + 8]	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x400413d	          0x4885c0	                           test rax, rax	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4004140	            0x751c	                           jne 0x400415e	      2243	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4004142	    0x488b05000000	            mov rax, qword [0x04004149] 	      2244	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4004149	    0x488b15000000	            mov rdx, qword [0x04004150] 	      2244	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4004150	    0x488b92281200	          mov rdx, qword [rdx + 0x1228] 	      2244	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x4004157	    0x488990201200	          mov qword [rax + 0x1220], rdx 	      2244	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_10
0x400415e	    0x488b05000000	            mov rax, qword [0x04004165] 	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x4004165	    0x488b15000000	            mov rdx, qword [0x0400416c] 	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x400416c	    0x488b92281200	          mov rdx, qword [rdx + 0x1228] 	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x4004173	        0x488b5208	                mov rdx, qword [rdx + 8]	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x4004177	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2245	undo.c	FUNCTION_39	WHILE_1	ELSE_2
0x400417e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2195	undo.c	FUNCTION_39	WHILE_1
0x4004181	          0x8d50ff	                      lea edx, [rax - 1]	      2195	undo.c	FUNCTION_39	WHILE_1
0x4004184	          0x8955fc	                mov dword [rbp - 4], edx	      2195	undo.c	FUNCTION_39	WHILE_1
0x4004187	            0x85c0	                           test eax, eax	      2195	undo.c	FUNCTION_39	WHILE_1
0x4004189	     0xf855efeffff	                           jne 0x4003fed	      2195	undo.c	FUNCTION_39	WHILE_1
0x400418f	            0xeb04	                           jmp 0x4004195	      2195	undo.c	FUNCTION_39	WHILE_1
0x4004191	              0x90	                                     nop	      2221	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4004192	            0xeb01	                           jmp 0x4004195	      2221	undo.c	FUNCTION_39	WHILE_1	IF_3	IF_6
0x4004194	              0x90	                                     nop	      2236	undo.c	FUNCTION_39	WHILE_1	ELSE_2	IF_8
0x4004195	    0x8b0500000000	            mov eax, dword [0x0400419b] 	      2248	undo.c	FUNCTION_39	CALL_13
0x400419b	      0xbe00000000	                              mov esi, 0	      2248	undo.c	FUNCTION_39	CALL_13
0x40041a0	            0x89c7	                            mov edi, eax	      2248	undo.c	FUNCTION_39	CALL_13
0x40041a2	      0xe8df160000	                     call sym.u_undo_end	      2248	undo.c	FUNCTION_39	CALL_13
0x40041a7	            0xeb01	                           jmp 0x40041aa	      2248	undo.c	FUNCTION_39	CALL_13
0x40041a9	              0x90	                                     nop	      2189	undo.c	FUNCTION_39	IF_1
0x40041aa	              0xc9	                                   leave	      2249	undo.c	FUNCTION_39
0x40041ab	              0xc3	                                     ret	      2249	undo.c	FUNCTION_39
u_get_undo_file_name	SWITCH,0:FOR,1:IF,9:functions,0:ELSE,1:CALL,19:WHILE,1:DO,0	167
0x4000d0e	              0x55	                                push rbp	       776	undo.c	FUNCTION_12
0x4000d0f	          0x4889e5	                            mov rbp, rsp	       776	undo.c	FUNCTION_12
0x4000d12	    0x4881ecf01400	                         sub rsp, 0x14f0	       776	undo.c	FUNCTION_12
0x4000d19	    0x4889bd18ebff	           mov qword [rbp - 0x14e8], rdi	       776	undo.c	FUNCTION_12
0x4000d20	    0x89b514ebffff	           mov dword [rbp - 0x14ec], esi	       776	undo.c	FUNCTION_12
0x4000d26	    0x64488b042528	                mov rax, qword fs:[0x28]	       776	undo.c	FUNCTION_12
0x4000d2f	        0x488945f8	                mov qword [rbp - 8], rax	       776	undo.c	FUNCTION_12
0x4000d33	            0x31c0	                            xor eax, eax	       776	undo.c	FUNCTION_12
0x4000d35	    0x48c78530ebff	             mov qword [rbp - 0x14d0], 0	       779	undo.c	FUNCTION_12
0x4000d40	    0x48c78538ebff	             mov qword [rbp - 0x14c8], 0	       780	undo.c	FUNCTION_12
0x4000d4b	    0x488b8518ebff	           mov rax, qword [rbp - 0x14e8]	       784	undo.c	FUNCTION_12
0x4000d52	    0x48898548ebff	           mov qword [rbp - 0x14b8], rax	       784	undo.c	FUNCTION_12
0x4000d59	    0x4883bd48ebff	             cmp qword [rbp - 0x14b8], 0	       789	undo.c	FUNCTION_12	IF_1
0x4000d61	            0x750a	                           jne 0x4000d6d	       789	undo.c	FUNCTION_12	IF_1
0x4000d63	      0xb800000000	                              mov eax, 0	       790	undo.c	FUNCTION_12	IF_1
0x4000d68	      0xe9b9020000	                           jmp 0x4001026	       790	undo.c	FUNCTION_12	IF_1
0x4000d6d	    0x488d95f0efff	                 lea rdx, [rbp - 0x1010]	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0x4000d74	    0x488b8548ebff	           mov rax, qword [rbp - 0x14b8]	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0x4000d7b	          0x4889d6	                            mov rsi, rdx	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0x4000d7e	          0x4889c7	                            mov rdi, rax	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0x4000d81	      0xe800000000	                          call 0x4000d86	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0x4000d86	          0x83f801	                              cmp eax, 1	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0x4000d89	            0x750e	                           jne 0x4000d99	       795	undo.c	FUNCTION_12	IF_2	CALL_1
0x4000d8b	    0x488d85f0efff	                 lea rax, [rbp - 0x1010]	       796	undo.c	FUNCTION_12	IF_2
0x4000d92	    0x48898548ebff	           mov qword [rbp - 0x14b8], rax	       796	undo.c	FUNCTION_12	IF_2
0x4000d99	    0x488b05000000	            mov rax, qword [0x04000da0] 	       801	undo.c	FUNCTION_12
0x4000da0	    0x48898528ebff	           mov qword [rbp - 0x14d8], rax	       801	undo.c	FUNCTION_12
0x4000da7	      0xe94f020000	                           jmp 0x4000ffb	       802	undo.c	FUNCTION_12	WHILE_1
0x4000dac	    0x488db5e0ebff	                 lea rsi, [rbp - 0x1420]	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0x4000db3	    0x488d8528ebff	                 lea rax, [rbp - 0x14d8]	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0x4000dba	      0xb900000000	                              mov ecx, 0	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0x4000dbf	      0xba01040000	                          mov edx, 0x401	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0x4000dc4	          0x4889c7	                            mov rdi, rax	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0x4000dc7	      0xe800000000	                          call 0x4000dcc	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0x4000dcc	    0x898524ebffff	           mov dword [rbp - 0x14dc], eax	       804	undo.c	FUNCTION_12	WHILE_1	CALL_2
0x4000dd2	    0x83bd24ebffff	            cmp dword [rbp - 0x14dc], 1 	       805	undo.c	FUNCTION_12	WHILE_1	IF_3
0x4000dd9	     0xf85d7000000	                           jne 0x4000eb6	       805	undo.c	FUNCTION_12	WHILE_1	IF_3
0x4000ddf	     0xfb685e0ebff	          movzx eax, byte [rbp - 0x1420]	       805	undo.c	FUNCTION_12	WHILE_1	IF_3
0x4000de6	            0x3c2e	                            cmp al, 0x2e	       805	undo.c	FUNCTION_12	WHILE_1	IF_3
0x4000de8	     0xf85c8000000	                           jne 0x4000eb6	       805	undo.c	FUNCTION_12	WHILE_1	IF_3
0x4000dee	    0x488b8548ebff	           mov rax, qword [rbp - 0x14b8]	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000df5	          0x4889c7	                            mov rdi, rax	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000df8	      0xe800000000	                          call 0x4000dfd	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000dfd	          0x83c005	                              add eax, 5	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000e00	            0x89c2	                            mov edx, eax	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000e02	    0x488b8548ebff	           mov rax, qword [rbp - 0x14b8]	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000e09	            0x89d6	                            mov esi, edx	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000e0b	          0x4889c7	                            mov rdi, rax	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000e0e	      0xe800000000	                          call 0x4000e13	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000e13	    0x48898538ebff	           mov qword [rbp - 0x14c8], rax	       809	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000e1a	    0x4883bd38ebff	             cmp qword [rbp - 0x14c8], 0	       810	undo.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x4000e22	     0xf84e7010000	                            je 0x400100f	       810	undo.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x4000e28	    0x488b8538ebff	           mov rax, qword [rbp - 0x14c8]	       812	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0x4000e2f	          0x4889c7	                            mov rdi, rax	       812	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0x4000e32	      0xe800000000	                          call 0x4000e37	       812	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0x4000e37	    0x48898540ebff	           mov qword [rbp - 0x14c0], rax	       812	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0x4000e3e	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0x4000e45	          0x4889c7	                            mov rdi, rax	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0x4000e48	      0xe800000000	                          call 0x4000e4d	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0x4000e4d	        0x488d5001	                      lea rdx, [rax + 1]	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0x4000e51	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0x4000e58	        0x488d4801	                      lea rcx, [rax + 1]	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0x4000e5c	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0x4000e63	          0x4889c6	                            mov rsi, rax	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0x4000e66	          0x4889cf	                            mov rdi, rcx	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0x4000e69	      0xe800000000	                          call 0x4000e6e	       823	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_10
0x4000e6e	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       824	undo.c	FUNCTION_12	WHILE_1	IF_3
0x4000e75	          0xc6002e	                    mov byte [rax], 0x2e	       824	undo.c	FUNCTION_12	WHILE_1	IF_3
0x4000e78	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000e7f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000e86	          0x4889c2	                            mov rdx, rax	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000e89	      0xb800000000	                              mov eax, 0	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000e8e	          0x4889d7	                            mov rdi, rdx	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000e91	            0xf2ae	              repne scasb al, byte [rdi]	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000e93	          0x4889c8	                            mov rax, rcx	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000e96	          0x48f7d0	                                 not rax	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000e99	        0x488d50ff	                      lea rdx, [rax - 1]	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000e9d	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000ea4	          0x4801d0	                            add rax, rdx	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000ea7	    0xc7002e756e7e	            mov dword [rax], 0x7e6e752e 	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000ead	        0xc6400400	                   mov byte [rax + 4], 0	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000eb1	      0xe9f1000000	                           jmp 0x4000fa7	       825	undo.c	FUNCTION_12	WHILE_1	IF_3	CALL_11
0x4000eb6	    0x8b8524ebffff	           mov eax, dword [rbp - 0x14dc]	       830	undo.c	FUNCTION_12	WHILE_1	ELSE_1
0x4000ebc	            0x4898	                                    cdqe	       830	undo.c	FUNCTION_12	WHILE_1	ELSE_1
0x4000ebe	    0xc68405e0ebff	        mov byte [rbp + rax - 0x1420], 0	       830	undo.c	FUNCTION_12	WHILE_1	ELSE_1
0x4000ec6	    0x488d85e0ebff	                 lea rax, [rbp - 0x1420]	       831	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_12
0x4000ecd	          0x4889c7	                            mov rdi, rax	       831	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_12
0x4000ed0	      0xe800000000	                          call 0x4000ed5	       831	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_12
0x4000ed5	            0x85c0	                           test eax, eax	       831	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_12
0x4000ed7	     0xf84ca000000	                            je 0x4000fa7	       831	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_12
0x4000edd	    0x4883bd30ebff	             cmp qword [rbp - 0x14d0], 0	       833	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6
0x4000ee5	     0xf8597000000	                           jne 0x4000f82	       833	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6
0x4000eeb	    0x488b8548ebff	           mov rax, qword [rbp - 0x14b8]	       835	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	CALL_13
0x4000ef2	          0x4889c7	                            mov rdi, rax	       835	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	CALL_13
0x4000ef5	      0xe800000000	                          call 0x4000efa	       835	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	CALL_13
0x4000efa	    0x48898530ebff	           mov qword [rbp - 0x14d0], rax	       835	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	CALL_13
0x4000f01	    0x4883bd30ebff	             cmp qword [rbp - 0x14d0], 0	       836	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	IF_7
0x4000f09	            0x750a	                           jne 0x4000f15	       836	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	IF_7
0x4000f0b	      0xb800000000	                              mov eax, 0	       837	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	IF_7
0x4000f10	      0xe911010000	                           jmp 0x4001026	       837	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	IF_7
0x4000f15	    0x488b8530ebff	           mov rax, qword [rbp - 0x14d0]	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f1c	    0x48898540ebff	           mov qword [rbp - 0x14c0], rax	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f23	            0xeb4f	                           jmp 0x4000f74	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f25	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0x4000f2c	           0xfb600	                   movzx eax, byte [rax]	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0x4000f2f	           0xfb6c0	                           movzx eax, al	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0x4000f32	            0x89c7	                            mov edi, eax	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0x4000f34	      0xe800000000	                          call 0x4000f39	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0x4000f39	            0x85c0	                           test eax, eax	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0x4000f3b	            0x740a	                            je 0x4000f47	       839	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8	CALL_15
0x4000f3d	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       840	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8
0x4000f44	          0xc60025	                    mov byte [rax], 0x25	       840	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	IF_8
0x4000f47	    0x8b0500000000	            mov eax, dword [0x04000f4d] 	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f4d	            0x85c0	                           test eax, eax	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f4f	            0x7415	                            je 0x4000f66	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f51	    0x488b05000000	            mov rax, qword [0x04000f58] 	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f58	    0x488b9540ebff	           mov rdx, qword [rbp - 0x14c0]	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f5f	          0x4889d7	                            mov rdi, rdx	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f62	            0xffd0	                                call rax	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f64	            0xeb05	                           jmp 0x4000f6b	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f66	      0xb801000000	                              mov eax, 1	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f6b	            0x4898	                                    cdqe	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f6d	    0x48018540ebff	          add qword [rbp - 0x14c0], rax 	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f74	    0x488b8540ebff	           mov rax, qword [rbp - 0x14c0]	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f7b	           0xfb600	                   movzx eax, byte [rax]	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f7e	            0x84c0	                             test al, al	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f80	            0x75a3	                           jne 0x4000f25	       838	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	IF_6	FOR_1	CALL_14
0x4000f82	    0x488b8d30ebff	           mov rcx, qword [rbp - 0x14d0]	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0x4000f89	    0x488d85e0ebff	                 lea rax, [rbp - 0x1420]	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0x4000f90	      0xba01000000	                              mov edx, 1	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0x4000f95	          0x4889ce	                            mov rsi, rcx	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0x4000f98	          0x4889c7	                            mov rdi, rax	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0x4000f9b	      0xe800000000	                          call 0x4000fa0	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0x4000fa0	    0x48898538ebff	           mov qword [rbp - 0x14c8], rax	       842	undo.c	FUNCTION_12	WHILE_1	ELSE_1	IF_5	CALL_16
0x4000fa7	    0x4883bd38ebff	             cmp qword [rbp - 0x14c8], 0	       847	undo.c	FUNCTION_12	WHILE_1	IF_9
0x4000faf	            0x7426	                            je 0x4000fd7	       847	undo.c	FUNCTION_12	WHILE_1	IF_9
0x4000fb1	    0x83bd14ebffff	             cmp dword [rbp - 0x14ec], 0	       847	undo.c	FUNCTION_12	WHILE_1	IF_9
0x4000fb8	            0x7456	                            je 0x4001010	       847	undo.c	FUNCTION_12	WHILE_1	IF_9
0x4000fba	    0x488d9550ebff	                 lea rdx, [rbp - 0x14b0]	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0x4000fc1	    0x488b8538ebff	           mov rax, qword [rbp - 0x14c8]	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0x4000fc8	          0x4889d6	                            mov rsi, rdx	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0x4000fcb	          0x4889c7	                            mov rdi, rax	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0x4000fce	      0xe800000000	                          call 0x4000fd3	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0x4000fd3	            0x85c0	                           test eax, eax	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0x4000fd5	            0x7939	                           jns 0x4001010	       848	undo.c	FUNCTION_12	WHILE_1	IF_9	CALL_17
0x4000fd7	    0x4883bd38ebff	             cmp qword [rbp - 0x14c8], 0	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0x4000fdf	            0x741a	                            je 0x4000ffb	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0x4000fe1	    0x488b8538ebff	           mov rax, qword [rbp - 0x14c8]	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0x4000fe8	          0x4889c7	                            mov rdi, rax	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0x4000feb	      0xe800000000	                          call 0x4000ff0	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0x4000ff0	    0x48c78538ebff	             mov qword [rbp - 0x14c8], 0	       850	undo.c	FUNCTION_12	WHILE_1	CALL_18
0x4000ffb	    0x488b8528ebff	           mov rax, qword [rbp - 0x14d8]	       802	undo.c	FUNCTION_12	WHILE_1
0x4001002	           0xfb600	                   movzx eax, byte [rax]	       802	undo.c	FUNCTION_12	WHILE_1
0x4001005	            0x84c0	                             test al, al	       802	undo.c	FUNCTION_12	WHILE_1
0x4001007	     0xf859ffdffff	                           jne 0x4000dac	       802	undo.c	FUNCTION_12	WHILE_1
0x400100d	            0xeb01	                           jmp 0x4001010	       802	undo.c	FUNCTION_12	WHILE_1
0x400100f	              0x90	                                     nop	       811	undo.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x4001010	    0x488b8530ebff	           mov rax, qword [rbp - 0x14d0]	       853	undo.c	FUNCTION_12	CALL_19
0x4001017	          0x4889c7	                            mov rdi, rax	       853	undo.c	FUNCTION_12	CALL_19
0x400101a	      0xe800000000	                          call 0x400101f	       853	undo.c	FUNCTION_12	CALL_19
0x400101f	    0x488b8538ebff	           mov rax, qword [rbp - 0x14c8]	       854	undo.c	FUNCTION_12
0x4001026	        0x488b75f8	                mov rsi, qword [rbp - 8]	       855	undo.c	FUNCTION_12
0x400102a	    0x644833342528	                xor rsi, qword fs:[0x28]	       855	undo.c	FUNCTION_12
0x4001033	            0x7405	                            je 0x400103a	       855	undo.c	FUNCTION_12
0x4001035	      0xe800000000	                          call 0x400103a	       855	undo.c	FUNCTION_12
0x400103a	              0xc9	                                   leave	       855	undo.c	FUNCTION_12
0x400103b	              0xc3	                                     ret	       855	undo.c	FUNCTION_12
u_savecommon	SWITCH,0:FOR,2:IF,37:functions,0:ELSE,11:CALL,37:WHILE,2:DO,0	558
0x4000290	              0x55	                                push rbp	       387	undo.c	FUNCTION_10
0x4000291	          0x4889e5	                            mov rbp, rsp	       387	undo.c	FUNCTION_10
0x4000294	              0x53	                                push rbx	       387	undo.c	FUNCTION_10
0x4000295	        0x4883ec78	                           sub rsp, 0x78	       387	undo.c	FUNCTION_10
0x4000299	        0x48897d98	             mov qword [rbp - 0x68], rdi	       387	undo.c	FUNCTION_10
0x400029d	        0x48897590	             mov qword [rbp - 0x70], rsi	       387	undo.c	FUNCTION_10
0x40002a1	        0x48895588	             mov qword [rbp - 0x78], rdx	       387	undo.c	FUNCTION_10
0x40002a5	          0x894d84	             mov dword [rbp - 0x7c], ecx	       387	undo.c	FUNCTION_10
0x40002a8	    0x64488b042528	                mov rax, qword fs:[0x28]	       387	undo.c	FUNCTION_10
0x40002b1	        0x488945e8	             mov qword [rbp - 0x18], rax	       387	undo.c	FUNCTION_10
0x40002b5	            0x31c0	                            xor eax, eax	       387	undo.c	FUNCTION_10
0x40002b7	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       396	undo.c	FUNCTION_10	IF_1
0x40002bb	     0xf85bb000000	                           jne 0x400037c	       396	undo.c	FUNCTION_10	IF_1
0x40002c1	      0xe800000000	                          call 0x40002c6	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x40002c6	            0x85c0	                           test eax, eax	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x40002c8	            0x750a	                           jne 0x40002d4	       400	undo.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x40002ca	      0xb800000000	                              mov eax, 0	       401	undo.c	FUNCTION_10	IF_1	IF_2
0x40002cf	      0xe974090000	                           jmp 0x4000c48	       401	undo.c	FUNCTION_10	IF_1	IF_2
0x40002d4	      0xe800000000	                          call 0x40002d9	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x40002d9	            0x85c0	                           test eax, eax	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x40002db	            0x7460	                            je 0x400033d	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x40002dd	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x40002e1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x40002e5	          0x4889d6	                            mov rsi, rdx	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x40002e8	          0x4889c7	                            mov rdi, rax	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x40002eb	      0xe800000000	                          call 0x40002f0	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x40002f0	            0x85c0	                           test eax, eax	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x40002f2	            0x741c	                            je 0x4000310	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x40002f4	      0xbf00000000	                              mov edi, 0	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x40002f9	      0xe800000000	                          call 0x40002fe	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x40002fe	          0x4889c7	                            mov rdi, rax	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x4000301	      0xe800000000	                          call 0x4000306	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x4000306	      0xb800000000	                              mov eax, 0	       413	undo.c	FUNCTION_10	IF_1	IF_3	IF_4
0x400030b	      0xe938090000	                           jmp 0x4000c48	       413	undo.c	FUNCTION_10	IF_1	IF_3	IF_4
0x4000310	    0x488b05000000	            mov rax, qword [0x04000317] 	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4000317	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x400031d	            0x85c0	                           test eax, eax	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x400031f	            0x741c	                            je 0x400033d	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4000321	      0xbf00000000	                              mov edi, 0	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4000326	      0xe800000000	                          call 0x400032b	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x400032b	          0x4889c7	                            mov rdi, rax	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x400032e	      0xe800000000	                          call 0x4000333	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4000333	      0xb800000000	                              mov eax, 0	       418	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4000338	      0xe90b090000	                           jmp 0x4000c48	       418	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x400033d	      0xe800000000	                          call 0x4000342	       424	undo.c	FUNCTION_10	IF_1	CALL_8
0x4000342	      0xbf00000000	                              mov edi, 0	       433	undo.c	FUNCTION_10	IF_1	CALL_9
0x4000347	      0xe800000000	                          call 0x400034c	       433	undo.c	FUNCTION_10	IF_1	CALL_9
0x400034c	    0x488b05000000	            mov rax, qword [0x04000353] 	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4000353	          0x488b00	                    mov rax, qword [rax]	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4000356	        0x4883c001	                              add rax, 1	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x400035a	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x400035e	            0x7d1c	                           jge 0x400037c	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4000360	      0xbf00000000	                              mov edi, 0	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4000365	      0xe800000000	                          call 0x400036a	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x400036a	          0x4889c7	                            mov rdi, rax	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x400036d	      0xe800000000	                          call 0x4000372	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4000372	      0xb800000000	                              mov eax, 0	       439	undo.c	FUNCTION_10	IF_1	IF_6
0x4000377	      0xe9cc080000	                           jmp 0x4000c48	       439	undo.c	FUNCTION_10	IF_1	IF_6
0x400037c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       447	undo.c	FUNCTION_10
0x4000380	        0x482b4598	             sub rax, qword [rbp - 0x68]	       447	undo.c	FUNCTION_10
0x4000384	        0x4883e801	                              sub rax, 1	       447	undo.c	FUNCTION_10
0x4000388	        0x488945e0	             mov qword [rbp - 0x20], rax	       447	undo.c	FUNCTION_10
0x400038c	    0x488b05000000	            mov rax, qword [0x04000393] 	       452	undo.c	FUNCTION_10	IF_7
0x4000393	    0x8b8034120000	          mov eax, dword [rax + 0x1234] 	       452	undo.c	FUNCTION_10	IF_7
0x4000399	            0x85c0	                           test eax, eax	       452	undo.c	FUNCTION_10	IF_7
0x400039b	     0xf845b040000	                            je 0x40007fc	       452	undo.c	FUNCTION_10	IF_7
0x40003a1	    0x488b05000000	            mov rax, qword [0x040003a8] 	       456	undo.c	FUNCTION_10	IF_7
0x40003a8	    0xc7809c090000	              mov dword [rax + 0x99c], 1	       456	undo.c	FUNCTION_10	IF_7
0x40003b2	      0xe8a6feffff	                  call sym.get_undolevel	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x40003b7	          0x4885c0	                           test rax, rax	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x40003ba	            0x781f	                            js 0x40003db	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x40003bc	      0xbe00000000	                              mov esi, 0	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x40003c1	      0xbf38020000	                          mov edi, 0x238	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x40003c6	      0xe800000000	                          call 0x40003cb	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x40003cb	        0x488945c0	             mov qword [rbp - 0x40], rax	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x40003cf	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x40003d4	            0x750d	                           jne 0x40003e3	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x40003d6	      0xe927080000	                           jmp 0x4000c02	       467	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x40003db	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       473	undo.c	FUNCTION_10	IF_7	ELSE_1
0x40003e3	    0x488b05000000	            mov rax, qword [0x040003ea] 	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x40003ea	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x40003f1	        0x488945a8	             mov qword [rbp - 0x58], rax	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x40003f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x40003f9	          0x4885c0	                           test rax, rax	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x40003fc	     0xf84c0000000	                            je 0x40004c2	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4000402	    0x488b05000000	            mov rax, qword [0x04000409] 	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4000409	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x400040d	          0x488b12	                    mov rdx, qword [rdx]	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4000410	    0x488990201200	          mov qword [rax + 0x1220], rdx 	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4000417	    0x488b05000000	            mov rax, qword [0x0400041e] 	       483	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x400041e	    0x48c780281200	            mov qword [rax + 0x1228], 0 	       483	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4000429	      0xe994000000	                           jmp 0x40004c2	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x400042e	    0x488b05000000	            mov rax, qword [0x04000435] 	       492	undo.c	FUNCTION_10	IF_7	WHILE_1
0x4000435	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	       492	undo.c	FUNCTION_10	IF_7	WHILE_1
0x400043c	        0x488945d8	             mov qword [rbp - 0x28], rax	       492	undo.c	FUNCTION_10	IF_7	WHILE_1
0x4000440	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x4000444	        0x483945d8	            cmp qword [rbp - 0x28], rax 	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x4000448	            0x751c	                           jne 0x4000466	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x400044a	    0x488b05000000	            mov rax, qword [0x04000451] 	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x4000451	        0x488d55a8	                   lea rdx, [rbp - 0x58]	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x4000455	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x4000459	          0x4889ce	                            mov rsi, rcx	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x400045c	          0x4889c7	                            mov rdi, rax	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x400045f	      0xe8ba610000	                   call sym.u_freebranch	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x4000464	            0xeb5c	                           jmp 0x40004c2	       496	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_15
0x4000466	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x400046a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x400046e	          0x4885c0	                           test rax, rax	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4000471	            0x7528	                           jne 0x400049b	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4000473	    0x488b05000000	            mov rax, qword [0x0400047a] 	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x400047a	        0x488d55a8	                   lea rdx, [rbp - 0x58]	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x400047e	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4000482	          0x4889ce	                            mov rsi, rcx	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4000485	          0x4889c7	                            mov rdi, rax	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4000488	      0xe89a600000	                   call sym.u_freeheader	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x400048d	            0xeb33	                           jmp 0x40004c2	       499	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x400048f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       504	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x4000493	        0x488b4010	            mov rax, qword [rax + 0x10] 	       504	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x4000497	        0x488945d8	             mov qword [rbp - 0x28], rax	       504	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x400049b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x400049f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x40004a3	          0x4885c0	                           test rax, rax	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x40004a6	            0x75e7	                           jne 0x400048f	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x40004a8	    0x488b05000000	            mov rax, qword [0x040004af] 	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x40004af	        0x488d55a8	                   lea rdx, [rbp - 0x58]	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x40004b3	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x40004b7	          0x4889ce	                            mov rsi, rcx	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x40004ba	          0x4889c7	                            mov rdi, rax	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x40004bd	      0xe85c610000	                   call sym.u_freebranch	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x40004c2	    0x488b05000000	            mov rax, qword [0x040004c9] 	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40004c9	    0x8b8030120000	          mov eax, dword [rax + 0x1230] 	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40004cf	          0x4863d8	                         movsxd rbx, eax	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40004d2	      0xe886fdffff	                  call sym.get_undolevel	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40004d7	          0x4839c3	                            cmp rbx, rax	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40004da	            0x7e17	                           jle 0x40004f3	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x40004dc	    0x488b05000000	            mov rax, qword [0x040004e3] 	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x40004e3	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x40004ea	          0x4885c0	                           test rax, rax	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x40004ed	     0xf853bffffff	                           jne 0x400042e	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x40004f3	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       512	undo.c	FUNCTION_10	IF_7	IF_13
0x40004f8	            0x753f	                           jne 0x4000539	       512	undo.c	FUNCTION_10	IF_7	IF_13
0x40004fa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x40004fe	          0x4885c0	                           test rax, rax	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x4000501	            0x741b	                            je 0x400051e	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x4000503	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4000507	    0x488b05000000	            mov rax, qword [0x0400050e] 	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x400050e	      0xba00000000	                              mov edx, 0	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4000513	          0x4889ce	                            mov rsi, rcx	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4000516	          0x4889c7	                            mov rdi, rax	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4000519	      0xe800610000	                   call sym.u_freebranch	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x400051e	    0x488b05000000	            mov rax, qword [0x04000525] 	       516	undo.c	FUNCTION_10	IF_7	IF_13
0x4000525	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       516	undo.c	FUNCTION_10	IF_7	IF_13
0x400052f	      0xb801000000	                              mov eax, 1	       517	undo.c	FUNCTION_10	IF_7	IF_13
0x4000534	      0xe90f070000	                           jmp 0x4000c48	       517	undo.c	FUNCTION_10	IF_7	IF_13
0x4000539	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       520	undo.c	FUNCTION_10	IF_7
0x400053d	    0x48c740080000	                  mov qword [rax + 8], 0	       520	undo.c	FUNCTION_10	IF_7
0x4000545	    0x488b05000000	            mov rax, qword [0x0400054c] 	       521	undo.c	FUNCTION_10	IF_7
0x400054c	    0x488b90201200	          mov rdx, qword [rax + 0x1220] 	       521	undo.c	FUNCTION_10	IF_7
0x4000553	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       521	undo.c	FUNCTION_10	IF_7
0x4000557	          0x488910	                    mov qword [rax], rdx	       521	undo.c	FUNCTION_10	IF_7
0x400055a	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       522	undo.c	FUNCTION_10	IF_7
0x400055e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       522	undo.c	FUNCTION_10	IF_7
0x4000562	        0x48895010	             mov qword [rax + 0x10], rdx	       522	undo.c	FUNCTION_10	IF_7
0x4000566	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x400056a	          0x4885c0	                           test rax, rax	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x400056d	            0x7464	                            je 0x40005d3	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x400056f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x4000573	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x4000577	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x400057b	        0x48895018	             mov qword [rax + 0x18], rdx	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x400057f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4000583	        0x488b4018	            mov rax, qword [rax + 0x18] 	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4000587	          0x4885c0	                           test rax, rax	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x400058a	            0x7410	                            je 0x400059c	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x400058c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       527	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4000590	        0x488b4018	            mov rax, qword [rax + 0x18] 	       527	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4000594	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       527	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4000598	        0x48895010	             mov qword [rax + 0x10], rdx	       527	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x400059c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       528	undo.c	FUNCTION_10	IF_7	IF_15
0x40005a0	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       528	undo.c	FUNCTION_10	IF_7	IF_15
0x40005a4	        0x48895018	             mov qword [rax + 0x18], rdx	       528	undo.c	FUNCTION_10	IF_7	IF_15
0x40005a8	    0x488b05000000	            mov rax, qword [0x040005af] 	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x40005af	    0x488b90181200	          mov rdx, qword [rax + 0x1218] 	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x40005b6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x40005ba	          0x4839c2	                            cmp rdx, rax	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x40005bd	            0x7520	                           jne 0x40005df	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x40005bf	    0x488b05000000	            mov rax, qword [0x040005c6] 	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x40005c6	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x40005ca	    0x488990181200	          mov qword [rax + 0x1218], rdx 	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x40005d1	            0xeb0c	                           jmp 0x40005df	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x40005d3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       533	undo.c	FUNCTION_10	IF_7	ELSE_4
0x40005d7	    0x48c740180000	               mov qword [rax + 0x18], 0	       533	undo.c	FUNCTION_10	IF_7	ELSE_4
0x40005df	    0x488b05000000	            mov rax, qword [0x040005e6] 	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x40005e6	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x40005ed	          0x4885c0	                           test rax, rax	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x40005f0	            0x7416	                            je 0x4000608	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x40005f2	    0x488b05000000	            mov rax, qword [0x040005f9] 	       535	undo.c	FUNCTION_10	IF_7	IF_18
0x40005f9	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       535	undo.c	FUNCTION_10	IF_7	IF_18
0x4000600	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       535	undo.c	FUNCTION_10	IF_7	IF_18
0x4000604	        0x48895008	                mov qword [rax + 8], rdx	       535	undo.c	FUNCTION_10	IF_7	IF_18
0x4000608	    0x488b05000000	            mov rax, qword [0x0400060f] 	       537	undo.c	FUNCTION_10	IF_7
0x400060f	    0x488b90381200	          mov rdx, qword [rax + 0x1238] 	       537	undo.c	FUNCTION_10	IF_7
0x4000616	        0x4883c201	                              add rdx, 1	       537	undo.c	FUNCTION_10	IF_7
0x400061a	    0x488990381200	          mov qword [rax + 0x1238], rdx 	       537	undo.c	FUNCTION_10	IF_7
0x4000621	    0x488b90381200	          mov rdx, qword [rax + 0x1238] 	       537	undo.c	FUNCTION_10	IF_7
0x4000628	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       537	undo.c	FUNCTION_10	IF_7
0x400062c	        0x48895020	             mov qword [rax + 0x20], rdx	       537	undo.c	FUNCTION_10	IF_7
0x4000630	    0x488b05000000	            mov rax, qword [0x04000637] 	       538	undo.c	FUNCTION_10	IF_7
0x4000637	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       538	undo.c	FUNCTION_10	IF_7
0x400063b	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       538	undo.c	FUNCTION_10	IF_7
0x400063f	    0x488990481200	          mov qword [rax + 0x1248], rdx 	       538	undo.c	FUNCTION_10	IF_7
0x4000646	      0xe800000000	                          call 0x400064b	       539	undo.c	FUNCTION_10	IF_7	CALL_20
0x400064b	          0x4889c2	                            mov rdx, rax	       539	undo.c	FUNCTION_10	IF_7	CALL_20
0x400064e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       539	undo.c	FUNCTION_10	IF_7	CALL_20
0x4000652	    0x488990280200	            mov qword [rax + 0x228], rdx	       539	undo.c	FUNCTION_10	IF_7	CALL_20
0x4000659	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       540	undo.c	FUNCTION_10	IF_7
0x400065d	    0x48c780300200	              mov qword [rax + 0x230], 0	       540	undo.c	FUNCTION_10	IF_7
0x4000668	    0x488b05000000	            mov rax, qword [0x0400066f] 	       541	undo.c	FUNCTION_10	IF_7
0x400066f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       541	undo.c	FUNCTION_10	IF_7
0x4000673	    0x488b92280200	           mov rdx, qword [rdx + 0x228] 	       541	undo.c	FUNCTION_10	IF_7
0x400067a	        0x4883c201	                              add rdx, 1	       541	undo.c	FUNCTION_10	IF_7
0x400067e	    0x488990501200	          mov qword [rax + 0x1250], rdx 	       541	undo.c	FUNCTION_10	IF_7
0x4000685	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       543	undo.c	FUNCTION_10	IF_7
0x4000689	    0xc74028000000	               mov dword [rax + 0x28], 0	       543	undo.c	FUNCTION_10	IF_7
0x4000690	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       544	undo.c	FUNCTION_10	IF_7
0x4000694	    0x48c740300000	               mov qword [rax + 0x30], 0	       544	undo.c	FUNCTION_10	IF_7
0x400069c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       545	undo.c	FUNCTION_10	IF_7
0x40006a0	    0x48c740380000	               mov qword [rax + 0x38], 0	       545	undo.c	FUNCTION_10	IF_7
0x40006a8	    0x488b05000000	            mov rax, qword [0x040006af] 	       546	undo.c	FUNCTION_10	IF_7
0x40006af	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       546	undo.c	FUNCTION_10	IF_7
0x40006b3	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       546	undo.c	FUNCTION_10	IF_7
0x40006b7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       546	undo.c	FUNCTION_10	IF_7
0x40006bb	        0x48894140	             mov qword [rcx + 0x40], rax	       546	undo.c	FUNCTION_10	IF_7
0x40006bf	        0x48895148	             mov qword [rcx + 0x48], rdx	       546	undo.c	FUNCTION_10	IF_7
0x40006c3	      0xe800000000	                          call 0x40006c8	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x40006c8	            0x85c0	                           test eax, eax	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x40006ca	            0x7420	                            je 0x40006ec	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x40006cc	    0x488b05000000	            mov rax, qword [0x040006d3] 	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x40006d3	          0x8b4044	            mov eax, dword [rax + 0x44] 	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x40006d6	            0x85c0	                           test eax, eax	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x40006d8	            0x7e12	                           jle 0x40006ec	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x40006da	      0xe800000000	                          call 0x40006df	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x40006df	          0x4863d0	                         movsxd rdx, eax	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x40006e2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x40006e6	        0x48895050	             mov qword [rax + 0x50], rdx	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x40006ea	            0xeb0c	                           jmp 0x40006f8	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x40006ec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       551	undo.c	FUNCTION_10	IF_7	ELSE_5
0x40006f0	    0x48c74050ffff	mov qword [rax + 0x50], 0xffffffffffffffff	       551	undo.c	FUNCTION_10	IF_7	ELSE_5
0x40006f8	    0x488b05000000	            mov rax, qword [0x040006ff] 	       555	undo.c	FUNCTION_10	IF_7
0x40006ff	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	       555	undo.c	FUNCTION_10	IF_7
0x4000705	            0x85c0	                           test eax, eax	       555	undo.c	FUNCTION_10	IF_7
0x4000707	           0xf95c0	                                setne al	       555	undo.c	FUNCTION_10	IF_7
0x400070a	           0xfb6d0	                           movzx edx, al	       555	undo.c	FUNCTION_10	IF_7
0x400070d	    0x488b05000000	            mov rax, qword [0x04000714] 	       556	undo.c	FUNCTION_10	IF_7
0x4000714	          0x8b4010	            mov eax, dword [rax + 0x10] 	       556	undo.c	FUNCTION_10	IF_7
0x4000717	          0x83e001	                              and eax, 1	       556	undo.c	FUNCTION_10	IF_7
0x400071a	            0x85c0	                           test eax, eax	       556	undo.c	FUNCTION_10	IF_7
0x400071c	            0x7407	                            je 0x4000725	       556	undo.c	FUNCTION_10	IF_7
0x400071e	      0xb802000000	                              mov eax, 2	       556	undo.c	FUNCTION_10	IF_7
0x4000723	            0xeb05	                           jmp 0x400072a	       556	undo.c	FUNCTION_10	IF_7
0x4000725	      0xb800000000	                              mov eax, 0	       556	undo.c	FUNCTION_10	IF_7
0x400072a	             0x1c2	                            add edx, eax	       555	undo.c	FUNCTION_10	IF_7
0x400072c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       555	undo.c	FUNCTION_10	IF_7
0x4000730	          0x895058	             mov dword [rax + 0x58], edx	       555	undo.c	FUNCTION_10	IF_7
0x4000733	    0x488b05000000	            mov rax, qword [0x0400073a] 	       559	undo.c	FUNCTION_10	IF_7	CALL_23
0x400073a	    0x488d88580100	                  lea rcx, [rax + 0x158]	       559	undo.c	FUNCTION_10	IF_7	CALL_23
0x4000741	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       559	undo.c	FUNCTION_10	IF_7	CALL_23
0x4000745	        0x4883c060	                           add rax, 0x60	       559	undo.c	FUNCTION_10	IF_7	CALL_23
0x4000749	      0xbaa0010000	                          mov edx, 0x1a0	       559	undo.c	FUNCTION_10	IF_7	CALL_23
0x400074e	          0x4889ce	                            mov rsi, rcx	       559	undo.c	FUNCTION_10	IF_7	CALL_23
0x4000751	          0x4889c7	                            mov rdi, rax	       559	undo.c	FUNCTION_10	IF_7	CALL_23
0x4000754	      0xe800000000	                          call 0x4000759	       559	undo.c	FUNCTION_10	IF_7	CALL_23
0x4000759	    0x488b15000000	            mov rdx, qword [0x04000760] 	       560	undo.c	FUNCTION_10	IF_7
0x4000760	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       560	undo.c	FUNCTION_10	IF_7
0x4000764	    0x488b8af80200	           mov rcx, qword [rdx + 0x2f8] 	       560	undo.c	FUNCTION_10	IF_7
0x400076b	    0x488988000200	            mov qword [rax + 0x200], rcx	       560	undo.c	FUNCTION_10	IF_7
0x4000772	    0x488b8a000300	           mov rcx, qword [rdx + 0x300] 	       560	undo.c	FUNCTION_10	IF_7
0x4000779	    0x488988080200	            mov qword [rax + 0x208], rcx	       560	undo.c	FUNCTION_10	IF_7
0x4000780	    0x488b8a080300	           mov rcx, qword [rdx + 0x308] 	       560	undo.c	FUNCTION_10	IF_7
0x4000787	    0x488988100200	            mov qword [rax + 0x210], rcx	       560	undo.c	FUNCTION_10	IF_7
0x400078e	    0x488b8a100300	           mov rcx, qword [rdx + 0x310] 	       560	undo.c	FUNCTION_10	IF_7
0x4000795	    0x488988180200	            mov qword [rax + 0x218], rcx	       560	undo.c	FUNCTION_10	IF_7
0x400079c	    0x488b92180300	           mov rdx, qword [rdx + 0x318] 	       560	undo.c	FUNCTION_10	IF_7
0x40007a3	    0x488990200200	            mov qword [rax + 0x220], rdx	       560	undo.c	FUNCTION_10	IF_7
0x40007aa	    0x488b05000000	            mov rax, qword [0x040007b1] 	       562	undo.c	FUNCTION_10	IF_7
0x40007b1	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       562	undo.c	FUNCTION_10	IF_7
0x40007b5	    0x488990201200	          mov qword [rax + 0x1220], rdx 	       562	undo.c	FUNCTION_10	IF_7
0x40007bc	    0x488b05000000	            mov rax, qword [0x040007c3] 	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x40007c3	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x40007ca	          0x4885c0	                           test rax, rax	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x40007cd	            0x7512	                           jne 0x40007e1	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x40007cf	    0x488b05000000	            mov rax, qword [0x040007d6] 	       564	undo.c	FUNCTION_10	IF_7	IF_20
0x40007d6	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       564	undo.c	FUNCTION_10	IF_7	IF_20
0x40007da	    0x488990181200	          mov qword [rax + 0x1218], rdx 	       564	undo.c	FUNCTION_10	IF_7	IF_20
0x40007e1	    0x488b05000000	            mov rax, qword [0x040007e8] 	       565	undo.c	FUNCTION_10	IF_7
0x40007e8	    0x8b9030120000	          mov edx, dword [rax + 0x1230] 	       565	undo.c	FUNCTION_10	IF_7
0x40007ee	          0x83c201	                              add edx, 1	       565	undo.c	FUNCTION_10	IF_7
0x40007f1	    0x899030120000	          mov dword [rax + 0x1230], edx 	       565	undo.c	FUNCTION_10	IF_7
0x40007f7	      0xe914020000	                           jmp 0x4000a10	       565	undo.c	FUNCTION_10	IF_7
0x40007fc	      0xe85cfaffff	                  call sym.get_undolevel	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_24
0x4000801	          0x4885c0	                           test rax, rax	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_24
0x4000804	            0x790a	                           jns 0x4000810	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_24
0x4000806	      0xb801000000	                              mov eax, 1	       570	undo.c	FUNCTION_10	ELSE_6	IF_21
0x400080b	      0xe938040000	                           jmp 0x4000c48	       570	undo.c	FUNCTION_10	ELSE_6	IF_21
0x4000810	      0x48837de001	               cmp qword [rbp - 0x20], 1	       581	undo.c	FUNCTION_10	ELSE_6	IF_22
0x4000815	     0xf85f0010000	                           jne 0x4000a0b	       581	undo.c	FUNCTION_10	ELSE_6	IF_22
0x400081b	      0xe8b75b0000	                call sym.u_get_headentry	       583	undo.c	FUNCTION_10	ELSE_6	IF_22	CALL_25
0x4000820	        0x488945c8	             mov qword [rbp - 0x38], rax	       583	undo.c	FUNCTION_10	ELSE_6	IF_22	CALL_25
0x4000824	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       584	undo.c	FUNCTION_10	ELSE_6	IF_22
0x400082c	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4000834	      0xe9c4010000	                           jmp 0x40009fd	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4000839	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x400083e	     0xf84c6010000	                            je 0x4000a0a	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4000844	    0x488b05000000	            mov rax, qword [0x0400084b] 	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400084b	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000852	        0x488b4038	            mov rax, qword [rax + 0x38] 	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000856	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400085a	            0x7447	                            je 0x40008a3	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400085c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000860	        0x488b5008	                mov rdx, qword [rax + 8]	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000864	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000868	        0x488b4028	            mov rax, qword [rax + 0x28] 	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400086c	          0x4801d0	                            add rax, rdx	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400086f	        0x488d5001	                      lea rdx, [rax + 1]	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000873	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       594	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000877	        0x488b4010	            mov rax, qword [rax + 0x10] 	       594	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400087b	          0x4885c0	                           test rax, rax	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400087e	            0x7510	                           jne 0x4000890	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000880	    0x488b05000000	            mov rax, qword [0x04000887] 	       595	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000887	          0x488b00	                    mov rax, qword [rax]	       595	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400088a	        0x4883c001	                              add rax, 1	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400088e	            0xeb08	                           jmp 0x4000898	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000890	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000894	        0x488b4010	            mov rax, qword [rax + 0x10] 	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000898	          0x4839c2	                            cmp rdx, rax	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400089b	     0xf856a010000	                           jne 0x4000a0b	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008a1	            0xeb1b	                           jmp 0x40008be	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       597	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008a7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       597	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008ab	    0x488b05000000	            mov rax, qword [0x040008b2] 	       597	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008b2	          0x488b00	                    mov rax, qword [rax]	       597	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008b5	          0x4839c2	                            cmp rdx, rax	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008b8	     0xf854d010000	                           jne 0x4000a0b	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008c2	        0x488b4028	            mov rax, qword [rax + 0x28] 	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008c6	        0x4883f801	                              cmp rax, 1	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008ca	            0x7e36	                           jle 0x4000902	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008d0	        0x488b4008	                mov rax, qword [rax + 8]	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008d4	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008d8	            0x7f28	                            jg 0x4000902	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008da	        0x488b4598	             mov rax, qword [rbp - 0x68]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008de	        0x488d4802	                      lea rcx, [rax + 2]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008e6	        0x488b5008	                mov rdx, qword [rax + 8]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008ee	        0x488b4028	            mov rax, qword [rax + 0x28] 	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008f2	          0x4801d0	                            add rax, rdx	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008f5	        0x4883c001	                              add rax, 1	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008f9	          0x4839c1	                            cmp rcx, rax	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x40008fc	     0xf8e09010000	                           jle 0x4000a0b	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4000902	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4000906	        0x488b4028	            mov rax, qword [rax + 0x28] 	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x400090a	        0x4883f801	                              cmp rax, 1	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x400090e	     0xf85d1000000	                           jne 0x40009e5	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4000914	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4000918	        0x488b4008	                mov rax, qword [rax + 8]	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x400091c	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4000920	     0xf85bf000000	                           jne 0x40009e5	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4000926	      0x48837db800	               cmp qword [rbp - 0x48], 0	       606	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x400092b	            0x7e53	                           jle 0x4000980	       606	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x400092d	      0xe8005b0000	                       call sym.u_getbot	       611	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26	CALL_26
0x4000932	    0x488b05000000	            mov rax, qword [0x04000939] 	       612	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4000939	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       612	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4000943	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4000947	          0x488b10	                    mov rdx, qword [rax]	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x400094a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x400094e	          0x488910	                    mov qword [rax], rdx	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4000951	    0x488b05000000	            mov rax, qword [0x04000958] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4000958	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x400095f	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4000963	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4000967	          0x488910	                    mov qword [rax], rdx	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x400096a	    0x488b05000000	            mov rax, qword [0x04000971] 	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4000971	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4000978	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x400097c	        0x48895030	             mov qword [rax + 0x30], rdx	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4000980	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       626	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4000985	            0x740e	                            je 0x4000995	       626	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4000987	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x400098b	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x400098f	        0x48895010	             mov qword [rax + 0x10], rdx	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4000993	            0xeb46	                           jmp 0x40009db	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4000995	    0x488b05000000	            mov rax, qword [0x0400099c] 	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x400099c	          0x488b00	                    mov rax, qword [rax]	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x400099f	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x40009a3	            0x7d0e	                           jge 0x40009b3	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x40009a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       629	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x40009a9	    0x48c740100000	               mov qword [rax + 0x10], 0	       629	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x40009b1	            0xeb28	                           jmp 0x40009db	       629	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x40009b3	    0x488b05000000	            mov rax, qword [0x040009ba] 	       632	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x40009ba	          0x488b10	                    mov rdx, qword [rax]	       632	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x40009bd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       632	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x40009c1	        0x48895018	             mov qword [rax + 0x18], rdx	       632	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x40009c5	    0x488b05000000	            mov rax, qword [0x040009cc] 	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x40009cc	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x40009d3	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x40009d7	        0x48895038	             mov qword [rax + 0x38], rdx	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x40009db	      0xb801000000	                              mov eax, 1	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x40009e0	      0xe963020000	                           jmp 0x4000c48	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x40009e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       637	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x40009e9	        0x488945d0	             mov qword [rbp - 0x30], rax	       637	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x40009ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       638	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x40009f1	          0x488b00	                    mov rax, qword [rax]	       638	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x40009f4	        0x488945c8	             mov qword [rbp - 0x38], rax	       638	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x40009f8	      0x488345b801	               add qword [rbp - 0x48], 1	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x40009fd	      0x48837db809	               cmp qword [rbp - 0x48], 9	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4000a02	     0xf8e31feffff	                           jle 0x4000839	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4000a08	            0xeb01	                           jmp 0x4000a0b	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4000a0a	              0x90	                                     nop	       588	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4000a0b	      0xe8225a0000	                       call sym.u_getbot	       643	undo.c	FUNCTION_10	ELSE_6	CALL_27
0x4000a10	      0xbe00000000	                              mov esi, 0	       658	undo.c	FUNCTION_10
0x4000a15	      0xbf30000000	                           mov edi, 0x30	       658	undo.c	FUNCTION_10
0x4000a1a	      0xe800000000	                          call 0x4000a1f	       658	undo.c	FUNCTION_10
0x4000a1f	        0x488945c8	             mov qword [rbp - 0x38], rax	       658	undo.c	FUNCTION_10
0x4000a23	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       659	undo.c	FUNCTION_10	IF_30
0x4000a28	     0xf84d3010000	                            je 0x4000c01	       659	undo.c	FUNCTION_10	IF_30
0x4000a2e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       661	undo.c	FUNCTION_10	CALL_28
0x4000a32	      0xba30000000	                           mov edx, 0x30	       661	undo.c	FUNCTION_10	CALL_28
0x4000a37	      0xbe00000000	                              mov esi, 0	       661	undo.c	FUNCTION_10	CALL_28
0x4000a3c	          0x4889c7	                            mov rdi, rax	       661	undo.c	FUNCTION_10	CALL_28
0x4000a3f	      0xe800000000	                          call 0x4000a44	       661	undo.c	FUNCTION_10	CALL_28
0x4000a44	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       666	undo.c	FUNCTION_10
0x4000a48	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       666	undo.c	FUNCTION_10
0x4000a4c	        0x48895028	             mov qword [rax + 0x28], rdx	       666	undo.c	FUNCTION_10
0x4000a50	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       667	undo.c	FUNCTION_10
0x4000a54	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       667	undo.c	FUNCTION_10
0x4000a58	        0x48895008	                mov qword [rax + 8], rdx	       667	undo.c	FUNCTION_10
0x4000a5c	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       668	undo.c	FUNCTION_10	IF_31
0x4000a61	            0x740e	                            je 0x4000a71	       668	undo.c	FUNCTION_10	IF_31
0x4000a63	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       669	undo.c	FUNCTION_10	IF_31
0x4000a67	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       669	undo.c	FUNCTION_10	IF_31
0x4000a6b	        0x48895010	             mov qword [rax + 0x10], rdx	       669	undo.c	FUNCTION_10	IF_31
0x4000a6f	            0xeb46	                           jmp 0x4000ab7	       669	undo.c	FUNCTION_10	IF_31
0x4000a71	    0x488b05000000	            mov rax, qword [0x04000a78] 	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4000a78	          0x488b00	                    mov rax, qword [rax]	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4000a7b	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4000a7f	            0x7d0e	                           jge 0x4000a8f	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4000a81	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       675	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4000a85	    0x48c740100000	               mov qword [rax + 0x10], 0	       675	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4000a8d	            0xeb28	                           jmp 0x4000ab7	       675	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4000a8f	    0x488b05000000	            mov rax, qword [0x04000a96] 	       678	undo.c	FUNCTION_10	ELSE_10
0x4000a96	          0x488b10	                    mov rdx, qword [rax]	       678	undo.c	FUNCTION_10	ELSE_10
0x4000a99	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       678	undo.c	FUNCTION_10	ELSE_10
0x4000a9d	        0x48895018	             mov qword [rax + 0x18], rdx	       678	undo.c	FUNCTION_10	ELSE_10
0x4000aa1	    0x488b05000000	            mov rax, qword [0x04000aa8] 	       679	undo.c	FUNCTION_10	ELSE_10
0x4000aa8	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       679	undo.c	FUNCTION_10	ELSE_10
0x4000aaf	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       679	undo.c	FUNCTION_10	ELSE_10
0x4000ab3	        0x48895038	             mov qword [rax + 0x38], rdx	       679	undo.c	FUNCTION_10	ELSE_10
0x4000ab7	      0x48837de000	               cmp qword [rbp - 0x20], 0	       682	undo.c	FUNCTION_10	IF_33
0x4000abc	     0xf8ee2000000	                           jle 0x4000ba4	       682	undo.c	FUNCTION_10	IF_33
0x4000ac2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000ac6	        0x48c1e003	                              shl rax, 3	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000aca	      0xbe00000000	                              mov esi, 0	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000acf	          0x4889c7	                            mov rdi, rax	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000ad2	      0xe800000000	                          call 0x4000ad7	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000ad7	          0x4889c2	                            mov rdx, rax	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000ada	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000ade	        0x48895020	             mov qword [rax + 0x20], rdx	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000ae2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000ae6	        0x488b4020	            mov rax, qword [rax + 0x20] 	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000aea	          0x4885c0	                           test rax, rax	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000aed	            0x7516	                           jne 0x4000b05	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4000aef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_29
0x4000af3	      0xbe00000000	                              mov esi, 0	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_29
0x4000af8	          0x4889c7	                            mov rdi, rax	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_29
0x4000afb	      0xe8d35c0000	                    call sym.u_freeentry	       687	undo.c	FUNCTION_10	IF_33	IF_34	CALL_29
0x4000b00	      0xe9fd000000	                           jmp 0x4000c02	       688	undo.c	FUNCTION_10	IF_33	IF_34
0x4000b05	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4000b0d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4000b11	        0x4883c001	                              add rax, 1	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4000b15	        0x488945b0	             mov qword [rbp - 0x50], rax	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4000b19	            0xeb79	                           jmp 0x4000b94	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4000b1b	      0xe800000000	                          call 0x4000b20	       692	undo.c	FUNCTION_10	IF_33	FOR_2	CALL_30
0x4000b20	    0x8b0500000000	            mov eax, dword [0x04000b26] 	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4000b26	            0x85c0	                           test eax, eax	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4000b28	            0x741d	                            je 0x4000b47	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4000b2a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_31
0x4000b2e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_31
0x4000b32	          0x4889d6	                            mov rsi, rdx	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_31
0x4000b35	          0x4889c7	                            mov rdi, rax	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_31
0x4000b38	      0xe8965c0000	                    call sym.u_freeentry	       695	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35	CALL_31
0x4000b3d	      0xb800000000	                              mov eax, 0	       696	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4000b42	      0xe901010000	                           jmp 0x4000c48	       696	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4000b47	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b4b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b4f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b53	        0x48c1e203	                              shl rdx, 3	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b57	        0x488d1c10	                    lea rbx, [rax + rdx]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b5b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b5f	        0x488d5001	                      lea rdx, [rax + 1]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b63	        0x488955b0	             mov qword [rbp - 0x50], rdx	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b67	          0x4889c7	                            mov rdi, rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b6a	      0xe871600000	                    call sym.u_save_line	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b6f	          0x488903	                    mov qword [rbx], rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b72	          0x488b03	                    mov rax, qword [rbx]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b75	          0x4885c0	                           test rax, rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b78	            0x7515	                           jne 0x4000b8f	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4000b7a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_33
0x4000b7e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_33
0x4000b82	          0x4889d6	                            mov rsi, rdx	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_33
0x4000b85	          0x4889c7	                            mov rdi, rax	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_33
0x4000b88	      0xe8465c0000	                    call sym.u_freeentry	       700	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_33
0x4000b8d	            0xeb73	                           jmp 0x4000c02	       701	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36
0x4000b8f	      0x488345b801	               add qword [rbp - 0x48], 1	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4000b94	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4000b98	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4000b9c	     0xf8c79ffffff	                            jl 0x4000b1b	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4000ba2	            0xeb0c	                           jmp 0x4000bb0	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4000ba4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       706	undo.c	FUNCTION_10	ELSE_11
0x4000ba8	    0x48c740200000	               mov qword [rax + 0x20], 0	       706	undo.c	FUNCTION_10	ELSE_11
0x4000bb0	    0x488b05000000	            mov rax, qword [0x04000bb7] 	       707	undo.c	FUNCTION_10
0x4000bb7	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       707	undo.c	FUNCTION_10
0x4000bbe	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       707	undo.c	FUNCTION_10
0x4000bc2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       707	undo.c	FUNCTION_10
0x4000bc6	          0x488910	                    mov qword [rax], rdx	       707	undo.c	FUNCTION_10
0x4000bc9	    0x488b05000000	            mov rax, qword [0x04000bd0] 	       708	undo.c	FUNCTION_10
0x4000bd0	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       708	undo.c	FUNCTION_10
0x4000bd7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       708	undo.c	FUNCTION_10
0x4000bdb	        0x48895030	             mov qword [rax + 0x30], rdx	       708	undo.c	FUNCTION_10
0x4000bdf	    0x488b05000000	            mov rax, qword [0x04000be6] 	       709	undo.c	FUNCTION_10
0x4000be6	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       709	undo.c	FUNCTION_10
0x4000bf0	    0xc70500000000	               mov dword [0x04000bfa], 0	       710	undo.c	FUNCTION_10
0x4000bfa	      0xb801000000	                              mov eax, 1	       715	undo.c	FUNCTION_10
0x4000bff	            0xeb47	                           jmp 0x4000c48	       715	undo.c	FUNCTION_10
0x4000c01	              0x90	                                     nop	       660	undo.c	FUNCTION_10	IF_30
0x4000c02	    0xc70500000000	               mov dword [0x04000c0c], 0	       718	undo.c	FUNCTION_10
0x4000c0c	      0xbf00000000	                              mov edi, 0	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4000c11	      0xe800000000	                          call 0x4000c16	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4000c16	      0xbe01000000	                              mov esi, 1	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4000c1b	          0x4889c7	                            mov rdi, rax	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4000c1e	      0xe800000000	                          call 0x4000c23	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4000c23	          0x83f879	                           cmp eax, 0x79	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4000c26	            0x7511	                           jne 0x4000c39	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4000c28	    0xc70500000000	               mov dword [0x04000c32], 1	       722	undo.c	FUNCTION_10	IF_37
0x4000c32	      0xb801000000	                              mov eax, 1	       723	undo.c	FUNCTION_10	IF_37
0x4000c37	            0xeb0f	                           jmp 0x4000c48	       723	undo.c	FUNCTION_10	IF_37
0x4000c39	      0xbf00000000	                              mov edi, 0	       725	undo.c	FUNCTION_10	CALL_37
0x4000c3e	      0xe800000000	                          call 0x4000c43	       725	undo.c	FUNCTION_10	CALL_37
0x4000c43	      0xb800000000	                              mov eax, 0	       726	undo.c	FUNCTION_10
0x4000c48	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       727	undo.c	FUNCTION_10
0x4000c4c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       727	undo.c	FUNCTION_10
0x4000c55	            0x7405	                            je 0x4000c5c	       727	undo.c	FUNCTION_10
0x4000c57	      0xe800000000	                          call 0x4000c5c	       727	undo.c	FUNCTION_10
0x4000c5c	        0x4883c478	                           add rsp, 0x78	       727	undo.c	FUNCTION_10
0x4000c60	              0x5b	                                 pop rbx	       727	undo.c	FUNCTION_10
0x4000c61	              0x5d	                                 pop rbp	       727	undo.c	FUNCTION_10
0x4000c62	              0xc3	                                     ret	       727	undo.c	FUNCTION_10
u_undo	SWITCH,0:FOR,0:IF,2:functions,0:ELSE,1:CALL,3:WHILE,0:DO,0	30
0x4003ee6	              0x55	                                push rbp	      2149	undo.c	FUNCTION_37
0x4003ee7	          0x4889e5	                            mov rbp, rsp	      2149	undo.c	FUNCTION_37
0x4003eea	        0x4883ec10	                           sub rsp, 0x10	      2149	undo.c	FUNCTION_37
0x4003eee	          0x897dfc	                mov dword [rbp - 4], edi	      2149	undo.c	FUNCTION_37
0x4003ef1	    0x488b05000000	            mov rax, qword [0x04003ef8] 	      2155	undo.c	FUNCTION_37	IF_1
0x4003ef8	    0x8b8034120000	          mov eax, dword [rax + 0x1234] 	      2155	undo.c	FUNCTION_37	IF_1
0x4003efe	            0x85c0	                           test eax, eax	      2155	undo.c	FUNCTION_37	IF_1
0x4003f00	            0x7511	                           jne 0x4003f13	      2155	undo.c	FUNCTION_37	IF_1
0x4003f02	      0xbf01000000	                              mov edi, 1	      2157	undo.c	FUNCTION_37	IF_1	CALL_1
0x4003f07	      0xe800000000	                          call 0x4003f0c	      2157	undo.c	FUNCTION_37	IF_1	CALL_1
0x4003f0c	    0xc745fc010000	                  mov dword [rbp - 4], 1	      2158	undo.c	FUNCTION_37	IF_1
0x4003f13	    0x488b05000000	            mov rax, qword [0x04003f1a] 	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4003f1a	      0xbe75000000	                           mov esi, 0x75	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4003f1f	          0x4889c7	                            mov rdi, rax	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4003f22	      0xe800000000	                          call 0x4003f27	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4003f27	          0x4885c0	                           test rax, rax	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4003f2a	            0x750c	                           jne 0x4003f38	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4003f2c	    0xc70500000000	               mov dword [0x04003f36], 1	      2162	undo.c	FUNCTION_37	IF_2
0x4003f36	            0xeb14	                           jmp 0x4003f4c	      2162	undo.c	FUNCTION_37	IF_2
0x4003f38	    0x8b0500000000	            mov eax, dword [0x04003f3e] 	      2164	undo.c	FUNCTION_37	ELSE_1
0x4003f3e	            0x85c0	                           test eax, eax	      2164	undo.c	FUNCTION_37	ELSE_1
0x4003f40	           0xf94c0	                                 sete al	      2164	undo.c	FUNCTION_37	ELSE_1
0x4003f43	           0xfb6c0	                           movzx eax, al	      2164	undo.c	FUNCTION_37	ELSE_1
0x4003f46	    0x890500000000	            mov dword [0x04003f4c], eax 	      2164	undo.c	FUNCTION_37	ELSE_1
0x4003f4c	          0x8b45fc	                mov eax, dword [rbp - 4]	      2165	undo.c	FUNCTION_37	CALL_3
0x4003f4f	            0x89c7	                            mov edi, eax	      2165	undo.c	FUNCTION_37	CALL_3
0x4003f51	      0xe83e000000	                         call sym.u_doit	      2165	undo.c	FUNCTION_37	CALL_3
0x4003f56	              0x90	                                     nop	      2166	undo.c	FUNCTION_37
0x4003f57	              0xc9	                                   leave	      2166	undo.c	FUNCTION_37
0x4003f58	              0xc3	                                     ret	      2166	undo.c	FUNCTION_37
u_save_line	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	11
0x4006be0	              0x55	                                push rbp	      3515	undo.c	FUNCTION_62
0x4006be1	          0x4889e5	                            mov rbp, rsp	      3515	undo.c	FUNCTION_62
0x4006be4	        0x4883ec10	                           sub rsp, 0x10	      3515	undo.c	FUNCTION_62
0x4006be8	        0x48897df8	                mov qword [rbp - 8], rdi	      3515	undo.c	FUNCTION_62
0x4006bec	        0x488b45f8	                mov rax, qword [rbp - 8]	      3516	undo.c	FUNCTION_62	CALL_2
0x4006bf0	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x4006bf3	      0xe800000000	                          call 0x4006bf8	      3516	undo.c	FUNCTION_62	CALL_2
0x4006bf8	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x4006bfb	      0xe800000000	                          call 0x4006c00	      3516	undo.c	FUNCTION_62	CALL_2
0x4006c00	              0xc9	                                   leave	      3517	undo.c	FUNCTION_62
0x4006c01	              0xc3	                                     ret	      3517	undo.c	FUNCTION_62
put_header_ptr	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	20
0x4001477	              0x55	                                push rbp	       988	undo.c	FUNCTION_19
0x4001478	          0x4889e5	                            mov rbp, rsp	       988	undo.c	FUNCTION_19
0x400147b	        0x4883ec10	                           sub rsp, 0x10	       988	undo.c	FUNCTION_19
0x400147f	        0x48897df8	                mov qword [rbp - 8], rdi	       988	undo.c	FUNCTION_19
0x4001483	        0x488975f0	             mov qword [rbp - 0x10], rsi	       988	undo.c	FUNCTION_19
0x4001487	      0x48837df000	               cmp qword [rbp - 0x10], 0	       989	undo.c	FUNCTION_19	CALL_1
0x400148c	            0x740d	                            je 0x400149b	       989	undo.c	FUNCTION_19	CALL_1
0x400148e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       989	undo.c	FUNCTION_19	CALL_1
0x4001492	        0x488b4020	            mov rax, qword [rax + 0x20] 	       989	undo.c	FUNCTION_19	CALL_1
0x4001496	          0x4889c1	                            mov rcx, rax	       989	undo.c	FUNCTION_19	CALL_1
0x4001499	            0xeb05	                           jmp 0x40014a0	       989	undo.c	FUNCTION_19	CALL_1
0x400149b	      0xb900000000	                              mov ecx, 0	       989	undo.c	FUNCTION_19	CALL_1
0x40014a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       989	undo.c	FUNCTION_19	CALL_1
0x40014a4	      0xba04000000	                              mov edx, 4	       989	undo.c	FUNCTION_19	CALL_1
0x40014a9	          0x4889ce	                            mov rsi, rcx	       989	undo.c	FUNCTION_19	CALL_1
0x40014ac	          0x4889c7	                            mov rdi, rax	       989	undo.c	FUNCTION_19	CALL_1
0x40014af	      0xe835ffffff	               call sym.undo_write_bytes	       989	undo.c	FUNCTION_19	CALL_1
0x40014b4	              0x90	                                     nop	       990	undo.c	FUNCTION_19
0x40014b5	              0xc9	                                   leave	       990	undo.c	FUNCTION_19
0x40014b6	              0xc3	                                     ret	       990	undo.c	FUNCTION_19
unserialize_pos	SWITCH,0:FOR,0:IF,3:functions,0:ELSE,0:CALL,4:WHILE,0:DO,0	44
0x4002665	              0x55	                                push rbp	      1462	undo.c	FUNCTION_32
0x4002666	          0x4889e5	                            mov rbp, rsp	      1462	undo.c	FUNCTION_32
0x4002669	        0x4883ec10	                           sub rsp, 0x10	      1462	undo.c	FUNCTION_32
0x400266d	        0x48897df8	                mov qword [rbp - 8], rdi	      1462	undo.c	FUNCTION_32
0x4002671	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1462	undo.c	FUNCTION_32
0x4002675	        0x488b45f8	                mov rax, qword [rbp - 8]	      1463	undo.c	FUNCTION_32	CALL_1
0x4002679	          0x4889c7	                            mov rdi, rax	      1463	undo.c	FUNCTION_32	CALL_1
0x400267c	      0xe836eeffff	                   call sym.undo_read_4c	      1463	undo.c	FUNCTION_32	CALL_1
0x4002681	          0x4863d0	                         movsxd rdx, eax	      1463	undo.c	FUNCTION_32	CALL_1
0x4002684	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1463	undo.c	FUNCTION_32	CALL_1
0x4002688	          0x488910	                    mov qword [rax], rdx	      1463	undo.c	FUNCTION_32	CALL_1
0x400268b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1464	undo.c	FUNCTION_32	IF_1
0x400268f	          0x488b00	                    mov rax, qword [rax]	      1464	undo.c	FUNCTION_32	IF_1
0x4002692	          0x4885c0	                           test rax, rax	      1464	undo.c	FUNCTION_32	IF_1
0x4002695	            0x790b	                           jns 0x40026a2	      1464	undo.c	FUNCTION_32	IF_1
0x4002697	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1465	undo.c	FUNCTION_32	IF_1
0x400269b	    0x48c700000000	                      mov qword [rax], 0	      1465	undo.c	FUNCTION_32	IF_1
0x40026a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1466	undo.c	FUNCTION_32	CALL_2
0x40026a6	          0x4889c7	                            mov rdi, rax	      1466	undo.c	FUNCTION_32	CALL_2
0x40026a9	      0xe809eeffff	                   call sym.undo_read_4c	      1466	undo.c	FUNCTION_32	CALL_2
0x40026ae	            0x89c2	                            mov edx, eax	      1466	undo.c	FUNCTION_32	CALL_2
0x40026b0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1466	undo.c	FUNCTION_32	CALL_2
0x40026b4	          0x895008	                mov dword [rax + 8], edx	      1466	undo.c	FUNCTION_32	CALL_2
0x40026b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1467	undo.c	FUNCTION_32	IF_2
0x40026bb	          0x8b4008	                mov eax, dword [rax + 8]	      1467	undo.c	FUNCTION_32	IF_2
0x40026be	            0x85c0	                           test eax, eax	      1467	undo.c	FUNCTION_32	IF_2
0x40026c0	            0x790b	                           jns 0x40026cd	      1467	undo.c	FUNCTION_32	IF_2
0x40026c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1468	undo.c	FUNCTION_32	IF_2
0x40026c6	    0xc74008000000	                  mov dword [rax + 8], 0	      1468	undo.c	FUNCTION_32	IF_2
0x40026cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1470	undo.c	FUNCTION_32	CALL_3
0x40026d1	          0x4889c7	                            mov rdi, rax	      1470	undo.c	FUNCTION_32	CALL_3
0x40026d4	      0xe8deedffff	                   call sym.undo_read_4c	      1470	undo.c	FUNCTION_32	CALL_3
0x40026d9	            0x89c2	                            mov edx, eax	      1470	undo.c	FUNCTION_32	CALL_3
0x40026db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1470	undo.c	FUNCTION_32	CALL_3
0x40026df	          0x89500c	              mov dword [rax + 0xc], edx	      1470	undo.c	FUNCTION_32	CALL_3
0x40026e2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1471	undo.c	FUNCTION_32	IF_3
0x40026e6	          0x8b400c	              mov eax, dword [rax + 0xc]	      1471	undo.c	FUNCTION_32	IF_3
0x40026e9	            0x85c0	                           test eax, eax	      1471	undo.c	FUNCTION_32	IF_3
0x40026eb	            0x790b	                           jns 0x40026f8	      1471	undo.c	FUNCTION_32	IF_3
0x40026ed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1472	undo.c	FUNCTION_32	IF_3
0x40026f1	    0xc7400c000000	                mov dword [rax + 0xc], 0	      1472	undo.c	FUNCTION_32	IF_3
0x40026f8	              0x90	                                     nop	      1476	undo.c	FUNCTION_32
0x40026f9	              0xc9	                                   leave	      1476	undo.c	FUNCTION_32
0x40026fa	              0xc3	                                     ret	      1476	undo.c	FUNCTION_32
ex_undojoin	SWITCH,0:FOR,0:IF,4:functions,0:ELSE,1:CALL,3:WHILE,0:DO,0	34
0x40060e2	              0x55	                                push rbp	      3138	undo.c	FUNCTION_46
0x40060e3	          0x4889e5	                            mov rbp, rsp	      3138	undo.c	FUNCTION_46
0x40060e6	        0x4883ec10	                           sub rsp, 0x10	      3138	undo.c	FUNCTION_46
0x40060ea	        0x48897df8	                mov qword [rbp - 8], rdi	      3138	undo.c	FUNCTION_46
0x40060ee	    0x488b05000000	            mov rax, qword [0x040060f5] 	      3139	undo.c	FUNCTION_46	IF_1
0x40060f5	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3139	undo.c	FUNCTION_46	IF_1
0x40060fc	          0x4885c0	                           test rax, rax	      3139	undo.c	FUNCTION_46	IF_1
0x40060ff	            0x7455	                            je 0x4006156	      3139	undo.c	FUNCTION_46	IF_1
0x4006101	    0x488b05000000	            mov rax, qword [0x04006108] 	      3141	undo.c	FUNCTION_46	IF_2
0x4006108	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      3141	undo.c	FUNCTION_46	IF_2
0x400610f	          0x4885c0	                           test rax, rax	      3141	undo.c	FUNCTION_46	IF_2
0x4006112	            0x7414	                            je 0x4006128	      3141	undo.c	FUNCTION_46	IF_2
0x4006114	      0xbf00000000	                              mov edi, 0	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4006119	      0xe800000000	                          call 0x400611e	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x400611e	          0x4889c7	                            mov rdi, rax	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4006121	      0xe800000000	                          call 0x4006126	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4006126	            0xeb35	                           jmp 0x400615d	      3144	undo.c	FUNCTION_46	IF_2
0x4006128	    0x488b05000000	            mov rax, qword [0x0400612f] 	      3146	undo.c	FUNCTION_46	IF_3
0x400612f	    0x8b8034120000	          mov eax, dword [rax + 0x1234] 	      3146	undo.c	FUNCTION_46	IF_3
0x4006135	            0x85c0	                           test eax, eax	      3146	undo.c	FUNCTION_46	IF_3
0x4006137	            0x7420	                            je 0x4006159	      3146	undo.c	FUNCTION_46	IF_3
0x4006139	      0xe81fa1ffff	                  call sym.get_undolevel	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x400613e	          0x4885c0	                           test rax, rax	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x4006141	            0x7819	                            js 0x400615c	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x4006143	    0x488b05000000	            mov rax, qword [0x0400614a] 	      3152	undo.c	FUNCTION_46	ELSE_1
0x400614a	    0xc78034120000	            mov dword [rax + 0x1234], 0 	      3152	undo.c	FUNCTION_46	ELSE_1
0x4006154	            0xeb07	                           jmp 0x400615d	      3152	undo.c	FUNCTION_46	ELSE_1
0x4006156	              0x90	                                     nop	      3140	undo.c	FUNCTION_46	IF_1
0x4006157	            0xeb04	                           jmp 0x400615d	      3140	undo.c	FUNCTION_46	IF_1
0x4006159	              0x90	                                     nop	      3147	undo.c	FUNCTION_46	IF_3
0x400615a	            0xeb01	                           jmp 0x400615d	      3147	undo.c	FUNCTION_46	IF_3
0x400615c	              0x90	                                     nop	      3149	undo.c	FUNCTION_46	IF_4
0x400615d	              0xc9	                                   leave	      3153	undo.c	FUNCTION_46	ELSE_1
0x400615e	              0xc3	                                     ret	      3153	undo.c	FUNCTION_46	ELSE_1
undo_allowed	SWITCH,0:FOR,0:IF,3:functions,0:ELSE,0:CALL,6:WHILE,0:DO,0	33
0x40001e2	              0x55	                                push rbp	       333	undo.c	FUNCTION_8
0x40001e3	          0x4889e5	                            mov rbp, rsp	       333	undo.c	FUNCTION_8
0x40001e6	    0x488b05000000	            mov rax, qword [0x040001ed] 	       335	undo.c	FUNCTION_8	IF_1
0x40001ed	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	       335	undo.c	FUNCTION_8	IF_1
0x40001f3	            0x85c0	                           test eax, eax	       335	undo.c	FUNCTION_8	IF_1
0x40001f5	            0x7519	                           jne 0x4000210	       335	undo.c	FUNCTION_8	IF_1
0x40001f7	      0xbf00000000	                              mov edi, 0	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x40001fc	      0xe800000000	                          call 0x4000201	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x4000201	          0x4889c7	                            mov rdi, rax	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x4000204	      0xe800000000	                          call 0x4000209	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x4000209	      0xb800000000	                              mov eax, 0	       338	undo.c	FUNCTION_8	IF_1
0x400020e	            0xeb4b	                           jmp 0x400025b	       338	undo.c	FUNCTION_8	IF_1
0x4000210	    0x8b0500000000	            mov eax, dword [0x04000216] 	       343	undo.c	FUNCTION_8	IF_2
0x4000216	            0x85c0	                           test eax, eax	       343	undo.c	FUNCTION_8	IF_2
0x4000218	            0x7419	                            je 0x4000233	       343	undo.c	FUNCTION_8	IF_2
0x400021a	      0xbf00000000	                              mov edi, 0	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x400021f	      0xe800000000	                          call 0x4000224	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4000224	          0x4889c7	                            mov rdi, rax	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4000227	      0xe800000000	                          call 0x400022c	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x400022c	      0xb800000000	                              mov eax, 0	       346	undo.c	FUNCTION_8	IF_2
0x4000231	            0xeb28	                           jmp 0x400025b	       346	undo.c	FUNCTION_8	IF_2
0x4000233	    0x8b0500000000	            mov eax, dword [0x04000239] 	       352	undo.c	FUNCTION_8	IF_3
0x4000239	            0x85c0	                           test eax, eax	       352	undo.c	FUNCTION_8	IF_3
0x400023b	            0x7419	                            je 0x4000256	       352	undo.c	FUNCTION_8	IF_3
0x400023d	      0xbf00000000	                              mov edi, 0	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4000242	      0xe800000000	                          call 0x4000247	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4000247	          0x4889c7	                            mov rdi, rax	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x400024a	      0xe800000000	                          call 0x400024f	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x400024f	      0xb800000000	                              mov eax, 0	       355	undo.c	FUNCTION_8	IF_3
0x4000254	            0xeb05	                           jmp 0x400025b	       355	undo.c	FUNCTION_8	IF_3
0x4000256	      0xb801000000	                              mov eax, 1	       358	undo.c	FUNCTION_8
0x400025b	              0x5d	                                 pop rbp	       359	undo.c	FUNCTION_8
0x400025c	              0xc3	                                     ret	       359	undo.c	FUNCTION_8
u_redo	SWITCH,0:FOR,0:IF,1:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	17
0x4003f59	              0x55	                                push rbp	      2174	undo.c	FUNCTION_38
0x4003f5a	          0x4889e5	                            mov rbp, rsp	      2174	undo.c	FUNCTION_38
0x4003f5d	        0x4883ec10	                           sub rsp, 0x10	      2174	undo.c	FUNCTION_38
0x4003f61	          0x897dfc	                mov dword [rbp - 4], edi	      2174	undo.c	FUNCTION_38
0x4003f64	    0x488b05000000	            mov rax, qword [0x04003f6b] 	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x4003f6b	      0xbe75000000	                           mov esi, 0x75	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x4003f70	          0x4889c7	                            mov rdi, rax	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x4003f73	      0xe800000000	                          call 0x4003f78	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x4003f78	          0x4885c0	                           test rax, rax	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x4003f7b	            0x750a	                           jne 0x4003f87	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x4003f7d	    0xc70500000000	               mov dword [0x04003f87], 0	      2176	undo.c	FUNCTION_38	IF_1
0x4003f87	          0x8b45fc	                mov eax, dword [rbp - 4]	      2177	undo.c	FUNCTION_38	CALL_2
0x4003f8a	            0x89c7	                            mov edi, eax	      2177	undo.c	FUNCTION_38	CALL_2
0x4003f8c	      0xe803000000	                         call sym.u_doit	      2177	undo.c	FUNCTION_38	CALL_2
0x4003f91	              0x90	                                     nop	      2178	undo.c	FUNCTION_38
0x4003f92	              0xc9	                                   leave	      2178	undo.c	FUNCTION_38
0x4003f93	              0xc3	                                     ret	      2178	undo.c	FUNCTION_38
u_get_headentry	SWITCH,0:FOR,0:IF,1:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	22
0x40063d7	              0x55	                                push rbp	      3241	undo.c	FUNCTION_51
0x40063d8	          0x4889e5	                            mov rbp, rsp	      3241	undo.c	FUNCTION_51
0x40063db	    0x488b05000000	            mov rax, qword [0x040063e2] 	      3242	undo.c	FUNCTION_51	IF_1
0x40063e2	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3242	undo.c	FUNCTION_51	IF_1
0x40063e9	          0x4885c0	                           test rax, rax	      3242	undo.c	FUNCTION_51	IF_1
0x40063ec	            0x7417	                            je 0x4006405	      3242	undo.c	FUNCTION_51	IF_1
0x40063ee	    0x488b05000000	            mov rax, qword [0x040063f5] 	      3242	undo.c	FUNCTION_51	IF_1
0x40063f5	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3242	undo.c	FUNCTION_51	IF_1
0x40063fc	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3242	undo.c	FUNCTION_51	IF_1
0x4006400	          0x4885c0	                           test rax, rax	      3242	undo.c	FUNCTION_51	IF_1
0x4006403	            0x7519	                           jne 0x400641e	      3242	undo.c	FUNCTION_51	IF_1
0x4006405	      0xbf00000000	                              mov edi, 0	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x400640a	      0xe800000000	                          call 0x400640f	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x400640f	          0x4889c7	                            mov rdi, rax	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x4006412	      0xe800000000	                          call 0x4006417	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x4006417	      0xb800000000	                              mov eax, 0	      3245	undo.c	FUNCTION_51	IF_1
0x400641c	            0xeb12	                           jmp 0x4006430	      3245	undo.c	FUNCTION_51	IF_1
0x400641e	    0x488b05000000	            mov rax, qword [0x04006425] 	      3247	undo.c	FUNCTION_51
0x4006425	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3247	undo.c	FUNCTION_51
0x400642c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3247	undo.c	FUNCTION_51
0x4006430	              0x5d	                                 pop rbp	      3248	undo.c	FUNCTION_51
0x4006431	              0xc3	                                     ret	      3248	undo.c	FUNCTION_51
u_freeheader	SWITCH,0:FOR,1:IF,4:functions,0:ELSE,2:CALL,2:WHILE,0:DO,0	69
0x4006527	              0x55	                                push rbp	      3297	undo.c	FUNCTION_53
0x4006528	          0x4889e5	                            mov rbp, rsp	      3297	undo.c	FUNCTION_53
0x400652b	        0x4883ec30	                           sub rsp, 0x30	      3297	undo.c	FUNCTION_53
0x400652f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3297	undo.c	FUNCTION_53
0x4006533	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3297	undo.c	FUNCTION_53
0x4006537	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3297	undo.c	FUNCTION_53
0x400653b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3302	undo.c	FUNCTION_53	IF_1
0x400653f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3302	undo.c	FUNCTION_53	IF_1
0x4006543	          0x4885c0	                           test rax, rax	      3302	undo.c	FUNCTION_53	IF_1
0x4006546	            0x741b	                            je 0x4006563	      3302	undo.c	FUNCTION_53	IF_1
0x4006548	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3303	undo.c	FUNCTION_53	CALL_1
0x400654c	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      3303	undo.c	FUNCTION_53	CALL_1
0x4006550	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3303	undo.c	FUNCTION_53	CALL_1
0x4006554	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3303	undo.c	FUNCTION_53	CALL_1
0x4006558	          0x4889ce	                            mov rsi, rcx	      3303	undo.c	FUNCTION_53	CALL_1
0x400655b	          0x4889c7	                            mov rdi, rax	      3303	undo.c	FUNCTION_53	CALL_1
0x400655e	      0xe8bb000000	                   call sym.u_freebranch	      3303	undo.c	FUNCTION_53	CALL_1
0x4006563	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3305	undo.c	FUNCTION_53	IF_2
0x4006567	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3305	undo.c	FUNCTION_53	IF_2
0x400656b	          0x4885c0	                           test rax, rax	      3305	undo.c	FUNCTION_53	IF_2
0x400656e	            0x7410	                            je 0x4006580	      3305	undo.c	FUNCTION_53	IF_2
0x4006570	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3306	undo.c	FUNCTION_53	IF_2
0x4006574	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3306	undo.c	FUNCTION_53	IF_2
0x4006578	    0x48c740100000	               mov qword [rax + 0x10], 0	      3306	undo.c	FUNCTION_53	IF_2
0x4006580	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3309	undo.c	FUNCTION_53	IF_3
0x4006584	          0x488b00	                    mov rax, qword [rax]	      3309	undo.c	FUNCTION_53	IF_3
0x4006587	          0x4885c0	                           test rax, rax	      3309	undo.c	FUNCTION_53	IF_3
0x400658a	            0x7515	                           jne 0x40065a1	      3309	undo.c	FUNCTION_53	IF_3
0x400658c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3310	undo.c	FUNCTION_53	IF_3
0x4006590	        0x488b5008	                mov rdx, qword [rax + 8]	      3310	undo.c	FUNCTION_53	IF_3
0x4006594	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3310	undo.c	FUNCTION_53	IF_3
0x4006598	    0x488990181200	          mov qword [rax + 0x1218], rdx 	      3310	undo.c	FUNCTION_53	IF_3
0x400659f	            0xeb13	                           jmp 0x40065b4	      3310	undo.c	FUNCTION_53	IF_3
0x40065a1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3312	undo.c	FUNCTION_53	ELSE_1
0x40065a5	          0x488b00	                    mov rax, qword [rax]	      3312	undo.c	FUNCTION_53	ELSE_1
0x40065a8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3312	undo.c	FUNCTION_53	ELSE_1
0x40065ac	        0x488b5208	                mov rdx, qword [rdx + 8]	      3312	undo.c	FUNCTION_53	ELSE_1
0x40065b0	        0x48895008	                mov qword [rax + 8], rdx	      3312	undo.c	FUNCTION_53	ELSE_1
0x40065b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3314	undo.c	FUNCTION_53	IF_4
0x40065b8	        0x488b4008	                mov rax, qword [rax + 8]	      3314	undo.c	FUNCTION_53	IF_4
0x40065bc	          0x4885c0	                           test rax, rax	      3314	undo.c	FUNCTION_53	IF_4
0x40065bf	            0x7514	                           jne 0x40065d5	      3314	undo.c	FUNCTION_53	IF_4
0x40065c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3315	undo.c	FUNCTION_53	IF_4
0x40065c5	          0x488b10	                    mov rdx, qword [rax]	      3315	undo.c	FUNCTION_53	IF_4
0x40065c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3315	undo.c	FUNCTION_53	IF_4
0x40065cc	    0x488990201200	          mov qword [rax + 0x1220], rdx 	      3315	undo.c	FUNCTION_53	IF_4
0x40065d3	            0xeb2f	                           jmp 0x4006604	      3315	undo.c	FUNCTION_53	IF_4
0x40065d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40065d9	        0x488b4008	                mov rax, qword [rax + 8]	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40065dd	        0x488945f8	                mov qword [rbp - 8], rax	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40065e1	            0xeb1a	                           jmp 0x40065fd	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40065e3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40065e7	          0x488b10	                    mov rdx, qword [rax]	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40065ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40065ee	          0x488910	                    mov qword [rax], rdx	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40065f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3318	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40065f5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3318	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40065f9	        0x488945f8	                mov qword [rbp - 8], rax	      3318	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40065fd	      0x48837df800	                  cmp qword [rbp - 8], 0	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x4006602	            0x75df	                           jne 0x40065e3	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x4006604	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3321	undo.c	FUNCTION_53	CALL_2
0x4006608	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3321	undo.c	FUNCTION_53	CALL_2
0x400660c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3321	undo.c	FUNCTION_53	CALL_2
0x4006610	          0x4889ce	                            mov rsi, rcx	      3321	undo.c	FUNCTION_53	CALL_2
0x4006613	          0x4889c7	                            mov rdi, rax	      3321	undo.c	FUNCTION_53	CALL_2
0x4006616	      0xe8e0000000	                  call sym.u_freeentries	      3321	undo.c	FUNCTION_53	CALL_2
0x400661b	              0x90	                                     nop	      3322	undo.c	FUNCTION_53
0x400661c	              0xc9	                                   leave	      3322	undo.c	FUNCTION_53
0x400661d	              0xc3	                                     ret	      3322	undo.c	FUNCTION_53
u_savesub	SWITCH,0:FOR,0:IF,1:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	20
0x40000ff	              0x55	                                push rbp	       288	undo.c	FUNCTION_5
0x4000100	          0x4889e5	                            mov rbp, rsp	       288	undo.c	FUNCTION_5
0x4000103	        0x4883ec10	                           sub rsp, 0x10	       288	undo.c	FUNCTION_5
0x4000107	        0x48897df8	                mov qword [rbp - 8], rdi	       288	undo.c	FUNCTION_5
0x400010b	    0x8b0500000000	            mov eax, dword [0x04000111] 	       289	undo.c	FUNCTION_5	IF_1
0x4000111	            0x85c0	                           test eax, eax	       289	undo.c	FUNCTION_5	IF_1
0x4000113	            0x7407	                            je 0x400011c	       289	undo.c	FUNCTION_5	IF_1
0x4000115	      0xb801000000	                              mov eax, 1	       290	undo.c	FUNCTION_5	IF_1
0x400011a	            0xeb25	                           jmp 0x4000141	       290	undo.c	FUNCTION_5	IF_1
0x400011c	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	undo.c	FUNCTION_5	CALL_1
0x4000120	        0x488d5001	                      lea rdx, [rax + 1]	       292	undo.c	FUNCTION_5	CALL_1
0x4000124	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	undo.c	FUNCTION_5	CALL_1
0x4000128	        0x488d7001	                      lea rsi, [rax + 1]	       292	undo.c	FUNCTION_5	CALL_1
0x400012c	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	undo.c	FUNCTION_5	CALL_1
0x4000130	        0x4883e801	                              sub rax, 1	       292	undo.c	FUNCTION_5	CALL_1
0x4000134	      0xb900000000	                              mov ecx, 0	       292	undo.c	FUNCTION_5	CALL_1
0x4000139	          0x4889c7	                            mov rdi, rax	       292	undo.c	FUNCTION_5	CALL_1
0x400013c	      0xe800000000	                          call 0x4000141	       292	undo.c	FUNCTION_5	CALL_1
0x4000141	              0xc9	                                   leave	       293	undo.c	FUNCTION_5
0x4000142	              0xc3	                                     ret	       293	undo.c	FUNCTION_5
curbufIsChanged	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	7
0x4006c87	              0x55	                                push rbp	      3548	undo.c	FUNCTION_65
0x4006c88	          0x4889e5	                            mov rbp, rsp	      3548	undo.c	FUNCTION_65
0x4006c8b	    0x488b05000000	            mov rax, qword [0x04006c92] 	      3549	undo.c	FUNCTION_65	CALL_1
0x4006c92	          0x4889c7	                            mov rdi, rax	      3549	undo.c	FUNCTION_65	CALL_1
0x4006c95	      0xe800000000	                          call 0x4006c9a	      3549	undo.c	FUNCTION_65	CALL_1
0x4006c9a	              0x5d	                                 pop rbp	      3550	undo.c	FUNCTION_65
0x4006c9b	              0xc3	                                     ret	      3550	undo.c	FUNCTION_65
u_inssub	SWITCH,0:FOR,0:IF,1:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	19
0x4000143	              0x55	                                push rbp	       303	undo.c	FUNCTION_6
0x4000144	          0x4889e5	                            mov rbp, rsp	       303	undo.c	FUNCTION_6
0x4000147	        0x4883ec10	                           sub rsp, 0x10	       303	undo.c	FUNCTION_6
0x400014b	        0x48897df8	                mov qword [rbp - 8], rdi	       303	undo.c	FUNCTION_6
0x400014f	    0x8b0500000000	            mov eax, dword [0x04000155] 	       304	undo.c	FUNCTION_6	IF_1
0x4000155	            0x85c0	                           test eax, eax	       304	undo.c	FUNCTION_6	IF_1
0x4000157	            0x7407	                            je 0x4000160	       304	undo.c	FUNCTION_6	IF_1
0x4000159	      0xb801000000	                              mov eax, 1	       305	undo.c	FUNCTION_6	IF_1
0x400015e	            0xeb21	                           jmp 0x4000181	       305	undo.c	FUNCTION_6	IF_1
0x4000160	        0x488b45f8	                mov rax, qword [rbp - 8]	       307	undo.c	FUNCTION_6	CALL_1
0x4000164	        0x488d5001	                      lea rdx, [rax + 1]	       307	undo.c	FUNCTION_6	CALL_1
0x4000168	        0x488b45f8	                mov rax, qword [rbp - 8]	       307	undo.c	FUNCTION_6	CALL_1
0x400016c	        0x488d78ff	                      lea rdi, [rax - 1]	       307	undo.c	FUNCTION_6	CALL_1
0x4000170	        0x488b45f8	                mov rax, qword [rbp - 8]	       307	undo.c	FUNCTION_6	CALL_1
0x4000174	      0xb900000000	                              mov ecx, 0	       307	undo.c	FUNCTION_6	CALL_1
0x4000179	          0x4889c6	                            mov rsi, rax	       307	undo.c	FUNCTION_6	CALL_1
0x400017c	      0xe800000000	                          call 0x4000181	       307	undo.c	FUNCTION_6	CALL_1
0x4000181	              0xc9	                                   leave	       308	undo.c	FUNCTION_6
0x4000182	              0xc3	                                     ret	       308	undo.c	FUNCTION_6
u_save_cursor	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	13
0x4000040	              0x55	                                push rbp	       252	undo.c	FUNCTION_3
0x4000041	          0x4889e5	                            mov rbp, rsp	       252	undo.c	FUNCTION_3
0x4000044	    0x488b05000000	            mov rax, qword [0x0400004b] 	       254	undo.c	FUNCTION_3
0x400004b	        0x488b4038	            mov rax, qword [rax + 0x38] 	       254	undo.c	FUNCTION_3
0x400004f	        0x488d5001	                      lea rdx, [rax + 1]	       254	undo.c	FUNCTION_3
0x4000053	    0x488b05000000	            mov rax, qword [0x0400005a] 	       253	undo.c	FUNCTION_3	CALL_1
0x400005a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       253	undo.c	FUNCTION_3	CALL_1
0x400005e	        0x4883e801	                              sub rax, 1	       253	undo.c	FUNCTION_3	CALL_1
0x4000062	          0x4889d6	                            mov rsi, rdx	       253	undo.c	FUNCTION_3	CALL_1
0x4000065	          0x4889c7	                            mov rdi, rax	       253	undo.c	FUNCTION_3	CALL_1
0x4000068	      0xe800000000	                          call 0x400006d	       253	undo.c	FUNCTION_3	CALL_1
0x400006d	              0x5d	                                 pop rbp	       255	undo.c	FUNCTION_3
0x400006e	              0xc3	                                     ret	       255	undo.c	FUNCTION_3
u_undo_end	SWITCH,0:FOR,0:IF,12:functions,1:ELSE,9:CALL,14:WHILE,0:DO,0	177
0x4005886	              0x55	                                push rbp	      2903	undo.c	FUNCTION_42
0x4005887	          0x4889e5	                            mov rbp, rsp	      2903	undo.c	FUNCTION_42
0x400588a	            0x4156	                                push r14	      2903	undo.c	FUNCTION_42
0x400588c	            0x4155	                                push r13	      2903	undo.c	FUNCTION_42
0x400588e	            0x4154	                                push r12	      2903	undo.c	FUNCTION_42
0x4005890	              0x53	                                push rbx	      2903	undo.c	FUNCTION_42
0x4005891	    0x4881ec900000	                           sub rsp, 0x90	      2903	undo.c	FUNCTION_42
0x4005898	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	      2903	undo.c	FUNCTION_42
0x400589e	    0x89b558ffffff	             mov dword [rbp - 0xa8], esi	      2903	undo.c	FUNCTION_42
0x40058a4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2903	undo.c	FUNCTION_42
0x40058ad	        0x488945d8	             mov qword [rbp - 0x28], rax	      2903	undo.c	FUNCTION_42
0x40058b1	            0x31c0	                            xor eax, eax	      2903	undo.c	FUNCTION_42
0x40058b3	    0x8b0500000000	            mov eax, dword [0x040058b9] 	      2909	undo.c	FUNCTION_42	IF_1
0x40058b9	      0x2500020000	                          and eax, 0x200	      2909	undo.c	FUNCTION_42	IF_1
0x40058be	            0x85c0	                           test eax, eax	      2909	undo.c	FUNCTION_42	IF_1
0x40058c0	            0x740f	                            je 0x40058d1	      2909	undo.c	FUNCTION_42	IF_1
0x40058c2	    0x8b0500000000	            mov eax, dword [0x040058c8] 	      2909	undo.c	FUNCTION_42	IF_1
0x40058c8	            0x85c0	                           test eax, eax	      2909	undo.c	FUNCTION_42	IF_1
0x40058ca	            0x7405	                            je 0x40058d1	      2909	undo.c	FUNCTION_42	IF_1
0x40058cc	      0xe800000000	                          call 0x40058d1	      2910	undo.c	FUNCTION_42	CALL_1
0x40058d1	    0x8b0500000000	            mov eax, dword [0x040058d7] 	      2913	undo.c	FUNCTION_42	IF_2
0x40058d7	            0x85c0	                           test eax, eax	      2913	undo.c	FUNCTION_42	IF_2
0x40058d9	     0xf85b8020000	                           jne 0x4005b97	      2913	undo.c	FUNCTION_42	IF_2
0x40058df	      0xe800000000	                          call 0x40058e4	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x40058e4	            0x85c0	                           test eax, eax	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x40058e6	     0xf84ab020000	                            je 0x4005b97	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x40058ec	    0x488b05000000	            mov rax, qword [0x040058f3] 	      2917	undo.c	FUNCTION_42	IF_3
0x40058f3	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2917	undo.c	FUNCTION_42	IF_3
0x40058f6	          0x83e001	                              and eax, 1	      2917	undo.c	FUNCTION_42	IF_3
0x40058f9	            0x85c0	                           test eax, eax	      2917	undo.c	FUNCTION_42	IF_3
0x40058fb	            0x7412	                            je 0x400590f	      2917	undo.c	FUNCTION_42	IF_3
0x40058fd	    0x488b05000000	            mov rax, qword [0x04005904] 	      2918	undo.c	FUNCTION_42	IF_3
0x4005904	        0x4883e801	                              sub rax, 1	      2918	undo.c	FUNCTION_42	IF_3
0x4005908	    0x488905000000	            mov qword [0x0400590f], rax 	      2918	undo.c	FUNCTION_42	IF_3
0x400590f	    0x488b15000000	            mov rdx, qword [0x04005916] 	      2920	undo.c	FUNCTION_42
0x4005916	    0x488b05000000	            mov rax, qword [0x0400591d] 	      2920	undo.c	FUNCTION_42
0x400591d	          0x4829c2	                            sub rdx, rax	      2920	undo.c	FUNCTION_42
0x4005920	          0x4889d0	                            mov rax, rdx	      2920	undo.c	FUNCTION_42
0x4005923	    0x488905000000	            mov qword [0x0400592a], rax 	      2920	undo.c	FUNCTION_42
0x400592a	    0x488b05000000	            mov rax, qword [0x04005931] 	      2921	undo.c	FUNCTION_42	IF_4
0x4005931	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2921	undo.c	FUNCTION_42	IF_4
0x4005935	            0x7510	                           jne 0x4005947	      2921	undo.c	FUNCTION_42	IF_4
0x4005937	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2922	undo.c	FUNCTION_42	CALL_3
0x4005942	      0xe980000000	                           jmp 0x40059c7	      2922	undo.c	FUNCTION_42	CALL_3
0x4005947	    0x488b05000000	            mov rax, qword [0x0400594e] 	      2923	undo.c	FUNCTION_42	ELSE_1	IF_5
0x400594e	          0x4885c0	                           test rax, rax	      2923	undo.c	FUNCTION_42	ELSE_1	IF_5
0x4005951	            0x790d	                           jns 0x4005960	      2923	undo.c	FUNCTION_42	ELSE_1	IF_5
0x4005953	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2924	undo.c	FUNCTION_42	ELSE_1	IF_5
0x400595e	            0xeb67	                           jmp 0x40059c7	      2924	undo.c	FUNCTION_42	ELSE_1	IF_5
0x4005960	    0x488b05000000	            mov rax, qword [0x04005967] 	      2925	undo.c	FUNCTION_42	ELSE_2	IF_6
0x4005967	        0x4883f801	                              cmp rax, 1	      2925	undo.c	FUNCTION_42	ELSE_2	IF_6
0x400596b	            0x750d	                           jne 0x400597a	      2925	undo.c	FUNCTION_42	ELSE_2	IF_6
0x400596d	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2926	undo.c	FUNCTION_42	ELSE_2	IF_6
0x4005978	            0xeb4d	                           jmp 0x40059c7	      2926	undo.c	FUNCTION_42	ELSE_2	IF_6
0x400597a	    0x488b05000000	            mov rax, qword [0x04005981] 	      2927	undo.c	FUNCTION_42	ELSE_3	IF_7
0x4005981	        0x4883f801	                              cmp rax, 1	      2927	undo.c	FUNCTION_42	ELSE_3	IF_7
0x4005985	            0x7e0d	                           jle 0x4005994	      2927	undo.c	FUNCTION_42	ELSE_3	IF_7
0x4005987	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2928	undo.c	FUNCTION_42	ELSE_3	IF_7
0x4005992	            0xeb33	                           jmp 0x40059c7	      2928	undo.c	FUNCTION_42	ELSE_3	IF_7
0x4005994	    0x488b05000000	            mov rax, qword [0x0400599b] 	      2931	undo.c	FUNCTION_42	ELSE_4
0x400599b	    0x488905000000	            mov qword [0x040059a2], rax 	      2931	undo.c	FUNCTION_42	ELSE_4
0x40059a2	    0x488b05000000	            mov rax, qword [0x040059a9] 	      2932	undo.c	FUNCTION_42	ELSE_4	IF_8
0x40059a9	        0x4883f801	                              cmp rax, 1	      2932	undo.c	FUNCTION_42	ELSE_4	IF_8
0x40059ad	            0x750d	                           jne 0x40059bc	      2932	undo.c	FUNCTION_42	ELSE_4	IF_8
0x40059af	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2933	undo.c	FUNCTION_42	ELSE_4	CALL_7
0x40059ba	            0xeb0b	                           jmp 0x40059c7	      2933	undo.c	FUNCTION_42	ELSE_4	CALL_7
0x40059bc	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2935	undo.c	FUNCTION_42	ELSE_4	CALL_8
0x40059c7	    0x488b05000000	            mov rax, qword [0x040059ce] 	      2938	undo.c	FUNCTION_42	IF_9
0x40059ce	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2938	undo.c	FUNCTION_42	IF_9
0x40059d5	          0x4885c0	                           test rax, rax	      2938	undo.c	FUNCTION_42	IF_9
0x40059d8	            0x747d	                            je 0x4005a57	      2938	undo.c	FUNCTION_42	IF_9
0x40059da	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x40059e1	            0x743a	                            je 0x4005a1d	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x40059e3	    0x488b05000000	            mov rax, qword [0x040059ea] 	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x40059ea	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x40059f1	          0x488b00	                    mov rax, qword [rax]	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x40059f4	          0x4885c0	                           test rax, rax	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x40059f7	            0x7424	                            je 0x4005a1d	      2941	undo.c	FUNCTION_42	IF_9	IF_10
0x40059f9	    0x488b05000000	            mov rax, qword [0x04005a00] 	      2943	undo.c	FUNCTION_42	IF_9	IF_10
0x4005a00	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2943	undo.c	FUNCTION_42	IF_9	IF_10
0x4005a07	          0x488b00	                    mov rax, qword [rax]	      2943	undo.c	FUNCTION_42	IF_9	IF_10
0x4005a0a	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2943	undo.c	FUNCTION_42	IF_9	IF_10
0x4005a11	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2944	undo.c	FUNCTION_42	IF_9	IF_10
0x4005a1b	            0xeb4f	                           jmp 0x4005a6c	      2944	undo.c	FUNCTION_42	IF_9	IF_10
0x4005a1d	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2946	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x4005a24	            0x7417	                            je 0x4005a3d	      2946	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x4005a26	    0x488b05000000	            mov rax, qword [0x04005a2d] 	      2947	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x4005a2d	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2947	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x4005a34	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2947	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x4005a3b	            0xeb2f	                           jmp 0x4005a6c	      2947	undo.c	FUNCTION_42	IF_9	ELSE_6	IF_11
0x4005a3d	    0x488b05000000	            mov rax, qword [0x04005a44] 	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x4005a44	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x4005a4b	          0x488b00	                    mov rax, qword [rax]	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x4005a4e	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x4005a55	            0xeb15	                           jmp 0x4005a6c	      2949	undo.c	FUNCTION_42	IF_9	ELSE_7
0x4005a57	    0x488b05000000	            mov rax, qword [0x04005a5e] 	      2952	undo.c	FUNCTION_42	ELSE_8
0x4005a5e	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      2952	undo.c	FUNCTION_42	ELSE_8
0x4005a65	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2952	undo.c	FUNCTION_42	ELSE_8
0x4005a6c	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      2954	undo.c	FUNCTION_42	IF_12
0x4005a74	            0x7506	                           jne 0x4005a7c	      2954	undo.c	FUNCTION_42	IF_12
0x4005a76	        0xc6458000	                mov byte [rbp - 0x80], 0	      2955	undo.c	FUNCTION_42	IF_12
0x4005a7a	            0xeb1f	                           jmp 0x4005a9b	      2955	undo.c	FUNCTION_42	IF_12
0x4005a7c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2957	undo.c	FUNCTION_42	CALL_9
0x4005a83	    0x488b90280200	           mov rdx, qword [rax + 0x228] 	      2957	undo.c	FUNCTION_42	CALL_9
0x4005a8a	        0x488d4580	                   lea rax, [rbp - 0x80]	      2957	undo.c	FUNCTION_42	CALL_9
0x4005a8e	      0xbe50000000	                           mov esi, 0x50	      2957	undo.c	FUNCTION_42	CALL_9
0x4005a93	          0x4889c7	                            mov rdi, rax	      2957	undo.c	FUNCTION_42	CALL_9
0x4005a96	      0xe875050000	                     call sym.u_add_time	      2957	undo.c	FUNCTION_42	CALL_9
0x4005a9b	    0x488b05000000	            mov rax, qword [0x04005aa2] 	      2963	undo.c	FUNCTION_42
0x4005aa2	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2963	undo.c	FUNCTION_42
0x4005aa9	            0xeb50	                           jmp 0x4005afb	      2963	undo.c	FUNCTION_42
0x4005aab	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4005ab2	        0x488b5008	                mov rdx, qword [rax + 8]	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4005ab6	    0x488b05000000	            mov rax, qword [0x04005abd] 	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4005abd	          0x4839c2	                            cmp rdx, rax	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4005ac0	            0x7527	                           jne 0x4005ae9	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4005ac2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4005ac9	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4005ad0	          0x4885c0	                           test rax, rax	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4005ad3	            0x7e14	                           jle 0x4005ae9	      2965	undo.c	FUNCTION_42	FUNCTION_1	IF_1
0x4005ad5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2966	undo.c	FUNCTION_42	FUNCTION_1	CALL_1
0x4005adc	      0xbe28000000	                           mov esi, 0x28	      2966	undo.c	FUNCTION_42	FUNCTION_1	CALL_1
0x4005ae1	          0x4889c7	                            mov rdi, rax	      2966	undo.c	FUNCTION_42	FUNCTION_1	CALL_1
0x4005ae4	      0xe800000000	                          call 0x4005ae9	      2966	undo.c	FUNCTION_42	FUNCTION_1	CALL_1
0x4005ae9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2963	undo.c	FUNCTION_42
0x4005af0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2963	undo.c	FUNCTION_42
0x4005af4	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2963	undo.c	FUNCTION_42
0x4005afb	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      2963	undo.c	FUNCTION_42
0x4005b03	            0x75a6	                           jne 0x4005aab	      2963	undo.c	FUNCTION_42
0x4005b05	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b0d	            0x740d	                            je 0x4005b1c	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b0f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b16	        0x4c8b6020	            mov r12, qword [rax + 0x20] 	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b1a	            0xeb06	                           jmp 0x4005b22	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b1c	    0x41bc00000000	                             mov r12d, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b22	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b29	            0x740f	                            je 0x4005b3a	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b2b	      0xbf00000000	                              mov edi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b30	      0xe800000000	                          call 0x4005b35	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b35	          0x4989c5	                            mov r13, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b38	            0xeb0d	                           jmp 0x4005b47	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b3a	      0xbf00000000	                              mov edi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b3f	      0xe800000000	                          call 0x4005b44	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b44	          0x4989c5	                            mov r13, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b47	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b4e	          0x4889c7	                            mov rdi, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b51	      0xe800000000	                          call 0x4005b56	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b56	          0x4989c6	                            mov r14, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b59	    0x488b05000000	            mov rax, qword [0x04005b60] 	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b60	            0x4899	                                     cqo	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b62	          0x4831d0	                            xor rax, rdx	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b65	          0x4889c3	                            mov rbx, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b68	          0x4829d3	                            sub rbx, rdx	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b6b	      0xbf00000000	                              mov edi, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b70	      0xe800000000	                          call 0x4005b75	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b75	          0x4889c7	                            mov rdi, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b78	        0x488d4580	                   lea rax, [rbp - 0x80]	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b7c	          0x4989c1	                             mov r9, rax	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b7f	          0x4d89e0	                             mov r8, r12	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b82	          0x4c89e9	                            mov rcx, r13	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b85	          0x4c89f2	                            mov rdx, r14	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b88	          0x4889de	                            mov rsi, rbx	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b8b	      0xb800000000	                              mov eax, 0	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b90	      0xe800000000	                          call 0x4005b95	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b95	            0xeb01	                           jmp 0x4005b98	      2971	undo.c	FUNCTION_42	CALL_11
0x4005b97	              0x90	                                     nop	      2915	undo.c	FUNCTION_42	IF_2
0x4005b98	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2977	undo.c	FUNCTION_42
0x4005b9c	    0x644833042528	                xor rax, qword fs:[0x28]	      2977	undo.c	FUNCTION_42
0x4005ba5	            0x7405	                            je 0x4005bac	      2977	undo.c	FUNCTION_42
0x4005ba7	      0xe800000000	                          call 0x4005bac	      2977	undo.c	FUNCTION_42
0x4005bac	    0x4881c4900000	                           add rsp, 0x90	      2977	undo.c	FUNCTION_42
0x4005bb3	              0x5b	                                 pop rbx	      2977	undo.c	FUNCTION_42
0x4005bb4	            0x415c	                                 pop r12	      2977	undo.c	FUNCTION_42
0x4005bb6	            0x415d	                                 pop r13	      2977	undo.c	FUNCTION_42
0x4005bb8	            0x415e	                                 pop r14	      2977	undo.c	FUNCTION_42
0x4005bba	              0x5d	                                 pop rbp	      2977	undo.c	FUNCTION_42
0x4005bbb	              0xc3	                                     ret	      2977	undo.c	FUNCTION_42
u_update_save_nr	SWITCH,0:FOR,0:IF,2:functions,0:ELSE,1:CALL,0:WHILE,0:DO,0	33
0x40062f1	              0x55	                                push rbp	      3208	undo.c	FUNCTION_49
0x40062f2	          0x4889e5	                            mov rbp, rsp	      3208	undo.c	FUNCTION_49
0x40062f5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3208	undo.c	FUNCTION_49
0x40062f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3211	undo.c	FUNCTION_49
0x40062fd	    0x488b80401200	          mov rax, qword [rax + 0x1240] 	      3211	undo.c	FUNCTION_49
0x4006304	        0x488d5001	                      lea rdx, [rax + 1]	      3211	undo.c	FUNCTION_49
0x4006308	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3211	undo.c	FUNCTION_49
0x400630c	    0x488990401200	          mov qword [rax + 0x1240], rdx 	      3211	undo.c	FUNCTION_49
0x4006313	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3212	undo.c	FUNCTION_49
0x4006317	    0x488b90401200	          mov rdx, qword [rax + 0x1240] 	      3212	undo.c	FUNCTION_49
0x400631e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3212	undo.c	FUNCTION_49
0x4006322	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      3212	undo.c	FUNCTION_49
0x4006329	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3213	undo.c	FUNCTION_49
0x400632d	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      3213	undo.c	FUNCTION_49
0x4006334	        0x488945f8	                mov qword [rbp - 8], rax	      3213	undo.c	FUNCTION_49
0x4006338	      0x48837df800	                  cmp qword [rbp - 8], 0	      3214	undo.c	FUNCTION_49	IF_1
0x400633d	            0x740d	                            je 0x400634c	      3214	undo.c	FUNCTION_49	IF_1
0x400633f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3215	undo.c	FUNCTION_49	IF_1
0x4006343	          0x488b00	                    mov rax, qword [rax]	      3215	undo.c	FUNCTION_49	IF_1
0x4006346	        0x488945f8	                mov qword [rbp - 8], rax	      3215	undo.c	FUNCTION_49	IF_1
0x400634a	            0xeb0f	                           jmp 0x400635b	      3215	undo.c	FUNCTION_49	IF_1
0x400634c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3217	undo.c	FUNCTION_49	ELSE_1
0x4006350	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3217	undo.c	FUNCTION_49	ELSE_1
0x4006357	        0x488945f8	                mov qword [rbp - 8], rax	      3217	undo.c	FUNCTION_49	ELSE_1
0x400635b	      0x48837df800	                  cmp qword [rbp - 8], 0	      3218	undo.c	FUNCTION_49	IF_2
0x4006360	            0x7416	                            je 0x4006378	      3218	undo.c	FUNCTION_49	IF_2
0x4006362	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3219	undo.c	FUNCTION_49	IF_2
0x4006366	    0x488b90401200	          mov rdx, qword [rax + 0x1240] 	      3219	undo.c	FUNCTION_49	IF_2
0x400636d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3219	undo.c	FUNCTION_49	IF_2
0x4006371	    0x488990300200	            mov qword [rax + 0x230], rdx	      3219	undo.c	FUNCTION_49	IF_2
0x4006378	              0x90	                                     nop	      3220	undo.c	FUNCTION_49
0x4006379	              0x5d	                                 pop rbp	      3220	undo.c	FUNCTION_49
0x400637a	              0xc3	                                     ret	      3220	undo.c	FUNCTION_49
u_read_undo	SWITCH,1:FOR,9:IF,46:functions,0:ELSE,2:CALL,78:WHILE,2:DO,0	786
0x4002f9a	              0x55	                                push rbp	      1787	undo.c	FUNCTION_36
0x4002f9b	          0x4889e5	                            mov rbp, rsp	      1787	undo.c	FUNCTION_36
0x4002f9e	              0x53	                                push rbx	      1787	undo.c	FUNCTION_36
0x4002f9f	    0x4881ec680200	                          sub rsp, 0x268	      1787	undo.c	FUNCTION_36
0x4002fa6	    0x4889bda8fdff	            mov qword [rbp - 0x258], rdi	      1787	undo.c	FUNCTION_36
0x4002fad	    0x4889b5a0fdff	            mov qword [rbp - 0x260], rsi	      1787	undo.c	FUNCTION_36
0x4002fb4	    0x48899598fdff	            mov qword [rbp - 0x268], rdx	      1787	undo.c	FUNCTION_36
0x4002fbb	    0x64488b042528	                mov rax, qword fs:[0x28]	      1787	undo.c	FUNCTION_36
0x4002fc4	        0x488945e8	             mov qword [rbp - 0x18], rax	      1787	undo.c	FUNCTION_36
0x4002fc8	            0x31c0	                            xor eax, eax	      1787	undo.c	FUNCTION_36
0x4002fca	    0x48c785d8fdff	              mov qword [rbp - 0x228], 0	      1791	undo.c	FUNCTION_36
0x4002fd5	    0x48c785f8fdff	              mov qword [rbp - 0x208], 0	      1795	undo.c	FUNCTION_36
0x4002fe0	    0x48c785e0fdff	              mov qword [rbp - 0x220], 0	      1798	undo.c	FUNCTION_36
0x4002feb	    0x66c785b2fdff	          mov word [rbp - 0x24e], 0xffff	      1799	undo.c	FUNCTION_36
0x4002ff4	    0x66c785b4fdff	          mov word [rbp - 0x24c], 0xffff	      1799	undo.c	FUNCTION_36
0x4002ffd	    0x66c785b6fdff	          mov word [rbp - 0x24a], 0xffff	      1799	undo.c	FUNCTION_36
0x4003006	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	      1800	undo.c	FUNCTION_36
0x4003011	    0x48c785f0fdff	              mov qword [rbp - 0x210], 0	      1805	undo.c	FUNCTION_36
0x400301c	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1817	undo.c	FUNCTION_36	CALL_1
0x4003023	      0xba30000000	                           mov edx, 0x30	      1817	undo.c	FUNCTION_36	CALL_1
0x4003028	      0xbe00000000	                              mov esi, 0	      1817	undo.c	FUNCTION_36	CALL_1
0x400302d	          0x4889c7	                            mov rdi, rax	      1817	undo.c	FUNCTION_36	CALL_1
0x4003030	      0xe800000000	                          call 0x4003035	      1817	undo.c	FUNCTION_36	CALL_1
0x4003035	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      1818	undo.c	FUNCTION_36	IF_1
0x400303d	     0xf85d0000000	                           jne 0x4003113	      1818	undo.c	FUNCTION_36	IF_1
0x4003043	    0x488b05000000	            mov rax, qword [0x0400304a] 	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x400304a	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x4003051	      0xbe01000000	                              mov esi, 1	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x4003056	          0x4889c7	                            mov rdi, rax	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x4003059	      0xe800000000	                          call 0x400305e	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x400305e	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      1820	undo.c	FUNCTION_36	IF_1	CALL_2
0x4003065	    0x4883bdd0fdff	              cmp qword [rbp - 0x230], 0	      1821	undo.c	FUNCTION_36	IF_1	IF_2
0x400306d	     0xf844e0e0000	                            je 0x4003ec1	      1821	undo.c	FUNCTION_36	IF_1	IF_2
0x4003073	    0x488d9590feff	                  lea rdx, [rbp - 0x170]	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x400307a	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x4003081	          0x4889d6	                            mov rsi, rdx	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x4003084	          0x4889c7	                            mov rdi, rax	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x4003087	      0xe800000000	                          call 0x400308c	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x400308c	            0x85c0	                           test eax, eax	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x400308e	     0xf888d000000	                            js 0x4003121	      1827	undo.c	FUNCTION_36	IF_1	IF_3	CALL_3
0x4003094	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x400309b	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x40030a2	          0x4889d6	                            mov rsi, rdx	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x40030a5	          0x4889c7	                            mov rdi, rax	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x40030a8	      0xe800000000	                          call 0x40030ad	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x40030ad	            0x85c0	                           test eax, eax	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x40030af	            0x7870	                            js 0x4003121	      1828	undo.c	FUNCTION_36	IF_1	IF_3	CALL_4
0x40030b1	    0x8b95acfeffff	            mov edx, dword [rbp - 0x154]	      1829	undo.c	FUNCTION_36	IF_1	IF_3
0x40030b7	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      1829	undo.c	FUNCTION_36	IF_1	IF_3
0x40030bd	            0x39c2	                            cmp edx, eax	      1829	undo.c	FUNCTION_36	IF_1	IF_3
0x40030bf	            0x7460	                            je 0x4003121	      1829	undo.c	FUNCTION_36	IF_1	IF_3
0x40030c1	    0x8b9d3cffffff	             mov ebx, dword [rbp - 0xc4]	      1830	undo.c	FUNCTION_36	IF_1	IF_3	CALL_5
0x40030c7	      0xe800000000	                          call 0x40030cc	      1830	undo.c	FUNCTION_36	IF_1	IF_3	CALL_5
0x40030cc	            0x39c3	                            cmp ebx, eax	      1830	undo.c	FUNCTION_36	IF_1	IF_3	CALL_5
0x40030ce	            0x7451	                            je 0x4003121	      1830	undo.c	FUNCTION_36	IF_1	IF_3	CALL_5
0x40030d0	    0x488b05000000	            mov rax, qword [0x040030d7] 	      1832	undo.c	FUNCTION_36	IF_1	IF_3	IF_4
0x40030d7	          0x4885c0	                           test rax, rax	      1832	undo.c	FUNCTION_36	IF_1	IF_3	IF_4
0x40030da	     0xf8ee40d0000	                           jle 0x4003ec4	      1832	undo.c	FUNCTION_36	IF_1	IF_3	IF_4
0x40030e0	      0xe800000000	                          call 0x40030e5	      1834	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_6
0x40030e5	      0xbf00000000	                              mov edi, 0	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x40030ea	      0xe800000000	                          call 0x40030ef	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x40030ef	          0x4889c2	                            mov rdx, rax	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x40030f2	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x40030f9	          0x4889c6	                            mov rsi, rax	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x40030fc	          0x4889d7	                            mov rdi, rdx	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x40030ff	      0xb800000000	                              mov eax, 0	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x4003104	      0xe800000000	                          call 0x4003109	      1835	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_8
0x4003109	      0xe800000000	                          call 0x400310e	      1837	undo.c	FUNCTION_36	IF_1	IF_3	IF_4	CALL_9
0x400310e	      0xe9b10d0000	                           jmp 0x4003ec4	      1839	undo.c	FUNCTION_36	IF_1	IF_3
0x4003113	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      1844	undo.c	FUNCTION_36	ELSE_1
0x400311a	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      1844	undo.c	FUNCTION_36	ELSE_1
0x4003121	    0x488b05000000	            mov rax, qword [0x04003128] 	      1846	undo.c	FUNCTION_36	ELSE_1	IF_5
0x4003128	          0x4885c0	                           test rax, rax	      1846	undo.c	FUNCTION_36	ELSE_1	IF_5
0x400312b	            0x7e2e	                           jle 0x400315b	      1846	undo.c	FUNCTION_36	ELSE_1	IF_5
0x400312d	      0xe800000000	                          call 0x4003132	      1848	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4003132	      0xbf00000000	                              mov edi, 0	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x4003137	      0xe800000000	                          call 0x400313c	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x400313c	          0x4889c2	                            mov rdx, rax	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x400313f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x4003146	          0x4889c6	                            mov rsi, rax	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x4003149	          0x4889d7	                            mov rdi, rdx	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x400314c	      0xb800000000	                              mov eax, 0	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x4003151	      0xe800000000	                          call 0x4003156	      1849	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_12
0x4003156	      0xe800000000	                          call 0x400315b	      1850	undo.c	FUNCTION_36	ELSE_1	IF_5	CALL_13
0x400315b	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1853	undo.c	FUNCTION_36	CALL_14
0x4003162	      0xbe00000000	                              mov esi, 0	      1853	undo.c	FUNCTION_36	CALL_14
0x4003167	          0x4889c7	                            mov rdi, rax	      1853	undo.c	FUNCTION_36	CALL_14
0x400316a	      0xe800000000	                          call 0x400316f	      1853	undo.c	FUNCTION_36	CALL_14
0x400316f	    0x48898500feff	            mov qword [rbp - 0x200], rax	      1853	undo.c	FUNCTION_36	CALL_14
0x4003176	    0x4883bd00feff	              cmp qword [rbp - 0x200], 0	      1854	undo.c	FUNCTION_36	IF_6
0x400317e	            0x753e	                           jne 0x40031be	      1854	undo.c	FUNCTION_36	IF_6
0x4003180	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      1856	undo.c	FUNCTION_36	IF_6	IF_7
0x4003188	            0x7510	                           jne 0x400319a	      1856	undo.c	FUNCTION_36	IF_6	IF_7
0x400318a	    0x488b05000000	            mov rax, qword [0x04003191] 	      1856	undo.c	FUNCTION_36	IF_6	IF_7
0x4003191	          0x4885c0	                           test rax, rax	      1856	undo.c	FUNCTION_36	IF_6	IF_7
0x4003194	     0xf8e1f0c0000	                           jle 0x4003db9	      1856	undo.c	FUNCTION_36	IF_6	IF_7
0x400319a	      0xbf00000000	                              mov edi, 0	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x400319f	      0xe800000000	                          call 0x40031a4	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x40031a4	          0x4889c2	                            mov rdx, rax	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x40031a7	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x40031ae	          0x4889c6	                            mov rsi, rax	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x40031b1	          0x4889d7	                            mov rdi, rdx	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x40031b4	      0xe800000000	                          call 0x40031b9	      1857	undo.c	FUNCTION_36	IF_6	CALL_16
0x40031b9	      0xe9fb0b0000	                           jmp 0x4003db9	      1858	undo.c	FUNCTION_36	IF_6
0x40031be	    0x488b05000000	            mov rax, qword [0x040031c5] 	      1860	undo.c	FUNCTION_36
0x40031c5	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      1860	undo.c	FUNCTION_36
0x40031cc	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      1861	undo.c	FUNCTION_36
0x40031d3	    0x48898568feff	            mov qword [rbp - 0x198], rax	      1861	undo.c	FUNCTION_36
0x40031da	    0x488b9500feff	            mov rdx, qword [rbp - 0x200]	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x40031e1	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x40031e5	          0x4889d1	                            mov rcx, rdx	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x40031e8	      0xba01000000	                              mov edx, 1	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x40031ed	      0xbe09000000	                              mov esi, 9	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x40031f2	          0x4889c7	                            mov rdi, rax	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x40031f5	      0xe800000000	                          call 0x40031fa	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x40031fa	        0x4883f801	                              cmp rax, 1	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x40031fe	            0x751a	                           jne 0x400321a	      1866	undo.c	FUNCTION_36	IF_8	CALL_17
0x4003200	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x4003204	      0xba09000000	                              mov edx, 9	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x4003209	      0xbe00000000	                              mov esi, 0	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x400320e	          0x4889c7	                            mov rdi, rax	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x4003211	      0xe800000000	                          call 0x4003216	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x4003216	            0x85c0	                           test eax, eax	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x4003218	            0x7424	                            je 0x400323e	      1867	undo.c	FUNCTION_36	IF_8	CALL_18
0x400321a	      0xbf00000000	                              mov edi, 0	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x400321f	      0xe800000000	                          call 0x4003224	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x4003224	          0x4889c2	                            mov rdx, rax	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x4003227	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x400322e	          0x4889c6	                            mov rsi, rax	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x4003231	          0x4889d7	                            mov rdi, rdx	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x4003234	      0xe800000000	                          call 0x4003239	      1869	undo.c	FUNCTION_36	IF_8	CALL_20
0x4003239	      0xe9880b0000	                           jmp 0x4003dc6	      1870	undo.c	FUNCTION_36	IF_8
0x400323e	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      1872	undo.c	FUNCTION_36	CALL_21
0x4003245	          0x4889c7	                            mov rdi, rax	      1872	undo.c	FUNCTION_36	CALL_21
0x4003248	      0xe800000000	                          call 0x400324d	      1872	undo.c	FUNCTION_36	CALL_21
0x400324d	            0x4898	                                    cdqe	      1872	undo.c	FUNCTION_36	CALL_21
0x400324f	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      1872	undo.c	FUNCTION_36	CALL_21
0x4003256	    0x4881bd08feff	        cmp qword [rbp - 0x1f8], 0x8002 	      1873	undo.c	FUNCTION_36	IF_9
0x4003261	     0xf85fc000000	                           jne 0x4003363	      1873	undo.c	FUNCTION_36	IF_9
0x4003267	    0x488b05000000	            mov rax, qword [0x0400326e] 	      1876	undo.c	FUNCTION_36	IF_9	IF_10
0x400326e	    0x488b80101500	          mov rax, qword [rax + 0x1510] 	      1876	undo.c	FUNCTION_36	IF_9	IF_10
0x4003275	           0xfb600	                   movzx eax, byte [rax]	      1876	undo.c	FUNCTION_36	IF_9	IF_10
0x4003278	            0x84c0	                             test al, al	      1876	undo.c	FUNCTION_36	IF_9	IF_10
0x400327a	            0x7524	                           jne 0x40032a0	      1876	undo.c	FUNCTION_36	IF_9	IF_10
0x400327c	      0xbf00000000	                              mov edi, 0	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x4003281	      0xe800000000	                          call 0x4003286	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x4003286	          0x4889c2	                            mov rdx, rax	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x4003289	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x4003290	          0x4889c6	                            mov rsi, rax	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x4003293	          0x4889d7	                            mov rdi, rdx	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x4003296	      0xe800000000	                          call 0x400329b	      1878	undo.c	FUNCTION_36	IF_9	IF_10	CALL_23
0x400329b	      0xe9260b0000	                           jmp 0x4003dc6	      1880	undo.c	FUNCTION_36	IF_9	IF_10
0x40032a0	    0x488b05000000	            mov rax, qword [0x040032a7] 	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x40032a7	    0x488b90101500	          mov rdx, qword [rax + 0x1510] 	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x40032ae	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x40032b5	          0x4889d6	                            mov rsi, rdx	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x40032b8	          0x4889c7	                            mov rdi, rax	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x40032bb	      0xe800000000	                          call 0x40032c0	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x40032c0	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1882	undo.c	FUNCTION_36	IF_9	CALL_24
0x40032c7	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1883	undo.c	FUNCTION_36	IF_9	IF_11
0x40032ce	          0x4885c0	                           test rax, rax	      1883	undo.c	FUNCTION_36	IF_9	IF_11
0x40032d1	            0x7524	                           jne 0x40032f7	      1883	undo.c	FUNCTION_36	IF_9	IF_11
0x40032d3	      0xbf00000000	                              mov edi, 0	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x40032d8	      0xe800000000	                          call 0x40032dd	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x40032dd	          0x4889c2	                            mov rdx, rax	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x40032e0	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x40032e7	          0x4889c6	                            mov rsi, rax	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x40032ea	          0x4889d7	                            mov rdi, rdx	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x40032ed	      0xe800000000	                          call 0x40032f2	      1885	undo.c	FUNCTION_36	IF_9	IF_11	CALL_26
0x40032f2	      0xe9cf0a0000	                           jmp 0x4003dc6	      1886	undo.c	FUNCTION_36	IF_9	IF_11
0x40032f7	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x40032fe	            0x8b00	                    mov eax, dword [rax]	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x4003300	            0x89c7	                            mov edi, eax	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x4003302	      0xe800000000	                          call 0x4003307	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x4003307	            0x85c0	                           test eax, eax	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x4003309	     0xf8482000000	                            je 0x4003391	      1888	undo.c	FUNCTION_36	IF_9	IF_12	CALL_27
0x400330f	      0xbf00200000	                         mov edi, 0x2000	      1890	undo.c	FUNCTION_36	IF_9	IF_12	CALL_28
0x4003314	      0xe800000000	                          call 0x4003319	      1890	undo.c	FUNCTION_36	IF_9	IF_12	CALL_28
0x4003319	    0x48898578feff	            mov qword [rbp - 0x188], rax	      1890	undo.c	FUNCTION_36	IF_9	IF_12	CALL_28
0x4003320	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1891	undo.c	FUNCTION_36	IF_9	IF_12	IF_13
0x4003327	          0x4885c0	                           test rax, rax	      1891	undo.c	FUNCTION_36	IF_9	IF_12	IF_13
0x400332a	            0x751f	                           jne 0x400334b	      1891	undo.c	FUNCTION_36	IF_9	IF_12	IF_13
0x400332c	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1893	undo.c	FUNCTION_36	IF_9	IF_12	IF_13	CALL_29
0x4003333	          0x4889c7	                            mov rdi, rax	      1893	undo.c	FUNCTION_36	IF_9	IF_12	IF_13	CALL_29
0x4003336	      0xe800000000	                          call 0x400333b	      1893	undo.c	FUNCTION_36	IF_9	IF_12	IF_13	CALL_29
0x400333b	    0x48c78570feff	              mov qword [rbp - 0x190], 0	      1894	undo.c	FUNCTION_36	IF_9	IF_12	IF_13
0x4003346	      0xe97b0a0000	                           jmp 0x4003dc6	      1895	undo.c	FUNCTION_36	IF_9	IF_12	IF_13
0x400334b	    0x48c78588feff	              mov qword [rbp - 0x178], 0	      1897	undo.c	FUNCTION_36	IF_9	IF_12
0x4003356	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      1898	undo.c	FUNCTION_36	IF_9	IF_12
0x4003361	            0xeb2e	                           jmp 0x4003391	      1898	undo.c	FUNCTION_36	IF_9	IF_12
0x4003363	    0x4883bd08feff	              cmp qword [rbp - 0x1f8], 2	      1905	undo.c	FUNCTION_36	ELSE_2	IF_14
0x400336b	            0x7424	                            je 0x4003391	      1905	undo.c	FUNCTION_36	ELSE_2	IF_14
0x400336d	      0xbf00000000	                              mov edi, 0	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x4003372	      0xe800000000	                          call 0x4003377	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x4003377	          0x4889c2	                            mov rdx, rax	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x400337a	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x4003381	          0x4889c6	                            mov rsi, rax	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x4003384	          0x4889d7	                            mov rdi, rdx	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x4003387	      0xe800000000	                          call 0x400338c	      1907	undo.c	FUNCTION_36	ELSE_2	IF_14	CALL_33
0x400338c	      0xe9350a0000	                           jmp 0x4003dc6	      1908	undo.c	FUNCTION_36	ELSE_2	IF_14
0x4003391	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x4003395	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x400339c	      0xba20000000	                           mov edx, 0x20	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x40033a1	          0x4889ce	                            mov rsi, rcx	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x40033a4	          0x4889c7	                            mov rdi, rax	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x40033a7	      0xe83ee3ffff	                      call sym.undo_read	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x40033ac	            0x85c0	                           test eax, eax	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x40033ae	            0x7519	                           jne 0x40033c9	      1911	undo.c	FUNCTION_36	IF_15	CALL_34
0x40033b0	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1913	undo.c	FUNCTION_36	IF_15	CALL_35
0x40033b7	          0x4889c6	                            mov rsi, rax	      1913	undo.c	FUNCTION_36	IF_15	CALL_35
0x40033ba	      0xbf00000000	                              mov edi, 0	      1913	undo.c	FUNCTION_36	IF_15	CALL_35
0x40033bf	      0xe878dcffff	               call sym.corruption_error	      1913	undo.c	FUNCTION_36	IF_15	CALL_35
0x40033c4	      0xe9fd090000	                           jmp 0x4003dc6	      1914	undo.c	FUNCTION_36	IF_15
0x40033c9	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1916	undo.c	FUNCTION_36	CALL_36
0x40033d0	          0x4889c7	                            mov rdi, rax	      1916	undo.c	FUNCTION_36	CALL_36
0x40033d3	      0xe8dfe0ffff	                   call sym.undo_read_4c	      1916	undo.c	FUNCTION_36	CALL_36
0x40033d8	            0x4898	                                    cdqe	      1916	undo.c	FUNCTION_36	CALL_36
0x40033da	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      1916	undo.c	FUNCTION_36	CALL_36
0x40033e1	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x40033e5	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x40033ec	      0xba20000000	                           mov edx, 0x20	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x40033f1	          0x4889ce	                            mov rsi, rcx	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x40033f4	          0x4889c7	                            mov rdi, rax	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x40033f7	      0xe800000000	                          call 0x40033fc	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x40033fc	            0x85c0	                           test eax, eax	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x40033fe	            0x7513	                           jne 0x4003413	      1917	undo.c	FUNCTION_36	IF_16	CALL_37
0x4003400	    0x488b05000000	            mov rax, qword [0x04003407] 	      1918	undo.c	FUNCTION_36	IF_16
0x4003407	          0x488b00	                    mov rax, qword [rax]	      1918	undo.c	FUNCTION_36	IF_16
0x400340a	    0x483b8510feff	            cmp rax, qword [rbp - 0x1f0]	      1918	undo.c	FUNCTION_36	IF_16
0x4003411	            0x7458	                            je 0x400346b	      1918	undo.c	FUNCTION_36	IF_16
0x4003413	    0x488b05000000	            mov rax, qword [0x0400341a] 	      1920	undo.c	FUNCTION_36	IF_16	IF_17
0x400341a	          0x4885c0	                           test rax, rax	      1920	undo.c	FUNCTION_36	IF_16	IF_17
0x400341d	            0x7f0e	                            jg 0x400342d	      1920	undo.c	FUNCTION_36	IF_16	IF_17
0x400341f	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      1920	undo.c	FUNCTION_36	IF_16	IF_17
0x4003427	     0xf848f090000	                            je 0x4003dbc	      1920	undo.c	FUNCTION_36	IF_16	IF_17
0x400342d	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      1922	undo.c	FUNCTION_36	IF_16	IF_17	IF_18
0x4003435	            0x7505	                           jne 0x400343c	      1922	undo.c	FUNCTION_36	IF_16	IF_17	IF_18
0x4003437	      0xe800000000	                          call 0x400343c	      1923	undo.c	FUNCTION_36	IF_16	IF_17	CALL_38
0x400343c	      0xbf00000000	                              mov edi, 0	      1925	undo.c	FUNCTION_36	IF_16	IF_17	CALL_40
0x4003441	      0xe800000000	                          call 0x4003446	      1925	undo.c	FUNCTION_36	IF_16	IF_17	CALL_40
0x4003446	      0xbe01000000	                              mov esi, 1	      1924	undo.c	FUNCTION_36	IF_16	IF_17	CALL_39
0x400344b	          0x4889c7	                            mov rdi, rax	      1924	undo.c	FUNCTION_36	IF_16	IF_17	CALL_39
0x400344e	      0xe800000000	                          call 0x4003453	      1924	undo.c	FUNCTION_36	IF_16	IF_17	CALL_39
0x4003453	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      1926	undo.c	FUNCTION_36	IF_16	IF_17	IF_19
0x400345b	     0xf855b090000	                           jne 0x4003dbc	      1926	undo.c	FUNCTION_36	IF_16	IF_17	IF_19
0x4003461	      0xe800000000	                          call 0x4003466	      1927	undo.c	FUNCTION_36	IF_16	IF_17	CALL_41
0x4003466	      0xe951090000	                           jmp 0x4003dbc	      1929	undo.c	FUNCTION_36	IF_16
0x400346b	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1933	undo.c	FUNCTION_36	CALL_42
0x4003472	          0x4889c7	                            mov rdi, rax	      1933	undo.c	FUNCTION_36	CALL_42
0x4003475	      0xe83de0ffff	                   call sym.undo_read_4c	      1933	undo.c	FUNCTION_36	CALL_42
0x400347a	            0x4898	                                    cdqe	      1933	undo.c	FUNCTION_36	CALL_42
0x400347c	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	      1933	undo.c	FUNCTION_36	CALL_42
0x4003483	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	      1934	undo.c	FUNCTION_36	IF_20
0x400348b	     0xf882e090000	                            js 0x4003dbf	      1934	undo.c	FUNCTION_36	IF_20
0x4003491	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	      1936	undo.c	FUNCTION_36	IF_21
0x4003499	            0x7e21	                           jle 0x40034bc	      1936	undo.c	FUNCTION_36	IF_21
0x400349b	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      1937	undo.c	FUNCTION_36	CALL_43
0x40034a2	            0x89c2	                            mov edx, eax	      1937	undo.c	FUNCTION_36	CALL_43
0x40034a4	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1937	undo.c	FUNCTION_36	CALL_43
0x40034ab	            0x89d6	                            mov esi, edx	      1937	undo.c	FUNCTION_36	CALL_43
0x40034ad	          0x4889c7	                            mov rdi, rax	      1937	undo.c	FUNCTION_36	CALL_43
0x40034b0	      0xe8e6e3ffff	            call sym.read_string_decrypt	      1937	undo.c	FUNCTION_36	CALL_43
0x40034b5	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      1937	undo.c	FUNCTION_36	CALL_43
0x40034bc	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1938	undo.c	FUNCTION_36	CALL_44
0x40034c3	          0x4889c7	                            mov rdi, rax	      1938	undo.c	FUNCTION_36	CALL_44
0x40034c6	      0xe8ecdfffff	                   call sym.undo_read_4c	      1938	undo.c	FUNCTION_36	CALL_44
0x40034cb	            0x4898	                                    cdqe	      1938	undo.c	FUNCTION_36	CALL_44
0x40034cd	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	      1938	undo.c	FUNCTION_36	CALL_44
0x40034d4	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1939	undo.c	FUNCTION_36	CALL_45
0x40034db	          0x4889c7	                            mov rdi, rax	      1939	undo.c	FUNCTION_36	CALL_45
0x40034de	      0xe8d4dfffff	                   call sym.undo_read_4c	      1939	undo.c	FUNCTION_36	CALL_45
0x40034e3	    0x8985c4fdffff	            mov dword [rbp - 0x23c], eax	      1939	undo.c	FUNCTION_36	CALL_45
0x40034e9	    0x4883bd20feff	              cmp qword [rbp - 0x1e0], 0	      1940	undo.c	FUNCTION_36	IF_22
0x40034f1	            0x7809	                            js 0x40034fc	      1940	undo.c	FUNCTION_36	IF_22
0x40034f3	    0x83bdc4fdffff	              cmp dword [rbp - 0x23c], 0	      1940	undo.c	FUNCTION_36	IF_22
0x40034fa	            0x7919	                           jns 0x4003515	      1940	undo.c	FUNCTION_36	IF_22
0x40034fc	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1942	undo.c	FUNCTION_36	IF_22	CALL_46
0x4003503	          0x4889c6	                            mov rsi, rax	      1942	undo.c	FUNCTION_36	IF_22	CALL_46
0x4003506	      0xbf00000000	                              mov edi, 0	      1942	undo.c	FUNCTION_36	IF_22	CALL_46
0x400350b	      0xe82cdbffff	               call sym.corruption_error	      1942	undo.c	FUNCTION_36	IF_22	CALL_46
0x4003510	      0xe9b1080000	                           jmp 0x4003dc6	      1943	undo.c	FUNCTION_36	IF_22
0x4003515	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1947	undo.c	FUNCTION_36	CALL_47
0x400351c	          0x4889c7	                            mov rdi, rax	      1947	undo.c	FUNCTION_36	CALL_47
0x400351f	      0xe893dfffff	                   call sym.undo_read_4c	      1947	undo.c	FUNCTION_36	CALL_47
0x4003524	            0x4898	                                    cdqe	      1947	undo.c	FUNCTION_36	CALL_47
0x4003526	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      1947	undo.c	FUNCTION_36	CALL_47
0x400352d	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1948	undo.c	FUNCTION_36	CALL_48
0x4003534	          0x4889c7	                            mov rdi, rax	      1948	undo.c	FUNCTION_36	CALL_48
0x4003537	      0xe87bdfffff	                   call sym.undo_read_4c	      1948	undo.c	FUNCTION_36	CALL_48
0x400353c	            0x4898	                                    cdqe	      1948	undo.c	FUNCTION_36	CALL_48
0x400353e	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      1948	undo.c	FUNCTION_36	CALL_48
0x4003545	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1949	undo.c	FUNCTION_36	CALL_49
0x400354c	          0x4889c7	                            mov rdi, rax	      1949	undo.c	FUNCTION_36	CALL_49
0x400354f	      0xe863dfffff	                   call sym.undo_read_4c	      1949	undo.c	FUNCTION_36	CALL_49
0x4003554	            0x4898	                                    cdqe	      1949	undo.c	FUNCTION_36	CALL_49
0x4003556	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	      1949	undo.c	FUNCTION_36	CALL_49
0x400355d	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1950	undo.c	FUNCTION_36	CALL_50
0x4003564	          0x4889c7	                            mov rdi, rax	      1950	undo.c	FUNCTION_36	CALL_50
0x4003567	      0xe84bdfffff	                   call sym.undo_read_4c	      1950	undo.c	FUNCTION_36	CALL_50
0x400356c	            0x4898	                                    cdqe	      1950	undo.c	FUNCTION_36	CALL_50
0x400356e	    0x488985f8fdff	            mov qword [rbp - 0x208], rax	      1950	undo.c	FUNCTION_36	CALL_50
0x4003575	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1951	undo.c	FUNCTION_36	CALL_51
0x400357c	          0x4889c7	                            mov rdi, rax	      1951	undo.c	FUNCTION_36	CALL_51
0x400357f	      0xe833dfffff	                   call sym.undo_read_4c	      1951	undo.c	FUNCTION_36	CALL_51
0x4003584	            0x4898	                                    cdqe	      1951	undo.c	FUNCTION_36	CALL_51
0x4003586	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      1951	undo.c	FUNCTION_36	CALL_51
0x400358d	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1952	undo.c	FUNCTION_36	CALL_52
0x4003594	          0x4889c7	                            mov rdi, rax	      1952	undo.c	FUNCTION_36	CALL_52
0x4003597	      0xe81bdfffff	                   call sym.undo_read_4c	      1952	undo.c	FUNCTION_36	CALL_52
0x400359c	            0x4898	                                    cdqe	      1952	undo.c	FUNCTION_36	CALL_52
0x400359e	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      1952	undo.c	FUNCTION_36	CALL_52
0x40035a5	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1953	undo.c	FUNCTION_36	CALL_53
0x40035ac	          0x4889c7	                            mov rdi, rax	      1953	undo.c	FUNCTION_36	CALL_53
0x40035af	      0xe890e0ffff	                 call sym.undo_read_time	      1953	undo.c	FUNCTION_36	CALL_53
0x40035b4	    0x48898550feff	            mov qword [rbp - 0x1b0], rax	      1953	undo.c	FUNCTION_36	CALL_53
0x40035bb	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1958	undo.c	FUNCTION_36	FOR_1	CALL_54
0x40035c2	          0x4889c7	                            mov rdi, rax	      1958	undo.c	FUNCTION_36	FOR_1	CALL_54
0x40035c5	      0xe80be0ffff	                 call sym.undo_read_byte	      1958	undo.c	FUNCTION_36	FOR_1	CALL_54
0x40035ca	    0x8985c0fdffff	            mov dword [rbp - 0x240], eax	      1958	undo.c	FUNCTION_36	FOR_1	CALL_54
0x40035d0	    0x83bdc0fdffff	              cmp dword [rbp - 0x240], 0	      1961	undo.c	FUNCTION_36	FOR_1	IF_23
0x40035d7	            0x7469	                            je 0x4003642	      1961	undo.c	FUNCTION_36	FOR_1	IF_23
0x40035d9	    0x83bdc0fdffff	cmp dword [rbp - 0x240], 0xffffffffffffffff	      1961	undo.c	FUNCTION_36	FOR_1	IF_23
0x40035e0	            0x7460	                            je 0x4003642	      1961	undo.c	FUNCTION_36	FOR_1	IF_23
0x40035e2	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1963	undo.c	FUNCTION_36	FOR_1	CALL_55
0x40035e9	          0x4889c7	                            mov rdi, rax	      1963	undo.c	FUNCTION_36	FOR_1	CALL_55
0x40035ec	      0xe8e4dfffff	                 call sym.undo_read_byte	      1963	undo.c	FUNCTION_36	FOR_1	CALL_55
0x40035f1	    0x8985c8fdffff	            mov dword [rbp - 0x238], eax	      1963	undo.c	FUNCTION_36	FOR_1	CALL_55
0x40035f7	    0x8b85c8fdffff	            mov eax, dword [rbp - 0x238]	      1964	undo.c	FUNCTION_36	FOR_1	SWITCH_1
0x40035fd	          0x83f801	                              cmp eax, 1	      1964	undo.c	FUNCTION_36	FOR_1	SWITCH_1
0x4003600	            0x751a	                           jne 0x400361c	      1964	undo.c	FUNCTION_36	FOR_1	SWITCH_1
0x4003602	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1967	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_56
0x4003609	          0x4889c7	                            mov rdi, rax	      1967	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_56
0x400360c	      0xe8a6deffff	                   call sym.undo_read_4c	      1967	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_56
0x4003611	            0x4898	                                    cdqe	      1967	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_56
0x4003613	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      1967	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_56
0x400361a	            0xeb21	                           jmp 0x400363d	      1968	undo.c	FUNCTION_36	FOR_1	SWITCH_1
0x400361c	            0xeb0f	                           jmp 0x400362d	      1971	undo.c	FUNCTION_36	FOR_1	SWITCH_1	WHILE_1
0x400361e	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1972	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_57
0x4003625	          0x4889c7	                            mov rdi, rax	      1972	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_57
0x4003628	      0xe8a8dfffff	                 call sym.undo_read_byte	      1972	undo.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_57
0x400362d	    0x83adc0fdffff	              sub dword [rbp - 0x240], 1	      1971	undo.c	FUNCTION_36	FOR_1	SWITCH_1	WHILE_1
0x4003634	    0x83bdc0fdffff	              cmp dword [rbp - 0x240], 0	      1971	undo.c	FUNCTION_36	FOR_1	SWITCH_1	WHILE_1
0x400363b	            0x79e1	                           jns 0x400361e	      1971	undo.c	FUNCTION_36	FOR_1	SWITCH_1	WHILE_1
0x400363d	      0xe979ffffff	                           jmp 0x40035bb	      1974	undo.c	FUNCTION_36	FOR_1
0x4003642	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      1980	undo.c	FUNCTION_36	IF_24
0x400364a	     0xf8eca000000	                           jle 0x400371a	      1980	undo.c	FUNCTION_36	IF_24
0x4003650	    0x48b8feffffff	          movabs rax, 0xffffffffffffffe 	      1982	undo.c	FUNCTION_36	IF_24	IF_25
0x400365a	    0x483985f8fdff	           cmp qword [rbp - 0x208], rax 	      1982	undo.c	FUNCTION_36	IF_24	IF_25
0x4003661	            0x7f1f	                            jg 0x4003682	      1982	undo.c	FUNCTION_36	IF_24	IF_25
0x4003663	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      1983	undo.c	FUNCTION_36	IF_24	IF_25
0x400366a	        0x48c1e003	                              shl rax, 3	      1983	undo.c	FUNCTION_36	IF_24	IF_25
0x400366e	      0xbe00000000	                              mov esi, 0	      1983	undo.c	FUNCTION_36	IF_24	IF_25
0x4003673	          0x4889c7	                            mov rdi, rax	      1983	undo.c	FUNCTION_36	IF_24	IF_25
0x4003676	      0xe800000000	                          call 0x400367b	      1983	undo.c	FUNCTION_36	IF_24	IF_25
0x400367b	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      1983	undo.c	FUNCTION_36	IF_24	IF_25
0x4003682	    0x4883bdf0fdff	              cmp qword [rbp - 0x210], 0	      1985	undo.c	FUNCTION_36	IF_24	IF_26
0x400368a	     0xf8432070000	                            je 0x4003dc2	      1985	undo.c	FUNCTION_36	IF_24	IF_26
0x4003690	      0xe985000000	                           jmp 0x400371a	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_58
0x4003695	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      1991	undo.c	FUNCTION_36	WHILE_2	IF_27
0x400369c	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      1991	undo.c	FUNCTION_36	WHILE_2	IF_27
0x40036a3	            0x7c19	                            jl 0x40036be	      1991	undo.c	FUNCTION_36	WHILE_2	IF_27
0x40036a5	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      1993	undo.c	FUNCTION_36	WHILE_2	IF_27	CALL_59
0x40036ac	          0x4889c6	                            mov rsi, rax	      1993	undo.c	FUNCTION_36	WHILE_2	IF_27	CALL_59
0x40036af	      0xbf00000000	                              mov edi, 0	      1993	undo.c	FUNCTION_36	WHILE_2	IF_27	CALL_59
0x40036b4	      0xe883d9ffff	               call sym.corruption_error	      1993	undo.c	FUNCTION_36	WHILE_2	IF_27	CALL_59
0x40036b9	      0xe908070000	                           jmp 0x4003dc6	      1994	undo.c	FUNCTION_36	WHILE_2	IF_27
0x40036be	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_60
0x40036c5	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_60
0x40036cc	          0x4889d6	                            mov rsi, rdx	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_60
0x40036cf	          0x4889c7	                            mov rdi, rax	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_60
0x40036d2	      0xe81ce9ffff	                call sym.unserialize_uhp	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_60
0x40036d7	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      1997	undo.c	FUNCTION_36	WHILE_2	CALL_60
0x40036de	    0x4883bd58feff	              cmp qword [rbp - 0x1a8], 0	      1998	undo.c	FUNCTION_36	WHILE_2	IF_28
0x40036e6	     0xf84d9060000	                            je 0x4003dc5	      1998	undo.c	FUNCTION_36	WHILE_2	IF_28
0x40036ec	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2000	undo.c	FUNCTION_36	WHILE_2
0x40036f3	        0x488d5001	                      lea rdx, [rax + 1]	      2000	undo.c	FUNCTION_36	WHILE_2
0x40036f7	    0x488995e8fdff	            mov qword [rbp - 0x218], rdx	      2000	undo.c	FUNCTION_36	WHILE_2
0x40036fe	    0x488d14c50000	                        lea rdx, [rax*8]	      2000	undo.c	FUNCTION_36	WHILE_2
0x4003706	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2000	undo.c	FUNCTION_36	WHILE_2
0x400370d	          0x4801c2	                            add rdx, rax	      2000	undo.c	FUNCTION_36	WHILE_2
0x4003710	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2000	undo.c	FUNCTION_36	WHILE_2
0x4003717	          0x488902	                    mov qword [rdx], rax	      2000	undo.c	FUNCTION_36	WHILE_2
0x400371a	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_58
0x4003721	          0x4889c7	                            mov rdi, rax	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_58
0x4003724	      0xe829deffff	                   call sym.undo_read_2c	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_58
0x4003729	    0x8985ccfdffff	            mov dword [rbp - 0x234], eax	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_58
0x400372f	    0x81bdccfdffff	        cmp dword [rbp - 0x234], 0x5fd0 	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_58
0x4003739	     0xf8456ffffff	                            je 0x4003695	      1989	undo.c	FUNCTION_36	WHILE_2	CALL_58
0x400373f	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2003	undo.c	FUNCTION_36	IF_29
0x4003746	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2003	undo.c	FUNCTION_36	IF_29
0x400374d	            0x7419	                            je 0x4003768	      2003	undo.c	FUNCTION_36	IF_29
0x400374f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2005	undo.c	FUNCTION_36	IF_29	CALL_61
0x4003756	          0x4889c6	                            mov rsi, rax	      2005	undo.c	FUNCTION_36	IF_29	CALL_61
0x4003759	      0xbf00000000	                              mov edi, 0	      2005	undo.c	FUNCTION_36	IF_29	CALL_61
0x400375e	      0xe8d9d8ffff	               call sym.corruption_error	      2005	undo.c	FUNCTION_36	IF_29	CALL_61
0x4003763	      0xe95e060000	                           jmp 0x4003dc6	      2006	undo.c	FUNCTION_36	IF_29
0x4003768	    0x81bdccfdffff	        cmp dword [rbp - 0x234], 0xe7aa 	      2008	undo.c	FUNCTION_36	IF_30
0x4003772	            0x7419	                            je 0x400378d	      2008	undo.c	FUNCTION_36	IF_30
0x4003774	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2010	undo.c	FUNCTION_36	IF_30	CALL_62
0x400377b	          0x4889c6	                            mov rsi, rax	      2010	undo.c	FUNCTION_36	IF_30	CALL_62
0x400377e	      0xbf00000000	                              mov edi, 0	      2010	undo.c	FUNCTION_36	IF_30	CALL_62
0x4003783	      0xe8b4d8ffff	               call sym.corruption_error	      2010	undo.c	FUNCTION_36	IF_30	CALL_62
0x4003788	      0xe939060000	                           jmp 0x4003dc6	      2011	undo.c	FUNCTION_36	IF_30
0x400378d	    0xc785b8fdffff	              mov dword [rbp - 0x248], 0	      2025	undo.c	FUNCTION_36	FOR_2
0x4003797	      0xe934040000	                           jmp 0x4003bd0	      2025	undo.c	FUNCTION_36	FOR_2
0x400379c	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2027	undo.c	FUNCTION_36	FOR_2
0x40037a2	            0x4898	                                    cdqe	      2027	undo.c	FUNCTION_36	FOR_2
0x40037a4	    0x488d14c50000	                        lea rdx, [rax*8]	      2027	undo.c	FUNCTION_36	FOR_2
0x40037ac	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2027	undo.c	FUNCTION_36	FOR_2
0x40037b3	          0x4801d0	                            add rax, rdx	      2027	undo.c	FUNCTION_36	FOR_2
0x40037b6	          0x488b00	                    mov rax, qword [rax]	      2027	undo.c	FUNCTION_36	FOR_2
0x40037b9	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      2027	undo.c	FUNCTION_36	FOR_2
0x40037c0	    0x4883bd58feff	              cmp qword [rbp - 0x1a8], 0	      2028	undo.c	FUNCTION_36	FOR_2	IF_31
0x40037c8	     0xf84fa030000	                            je 0x4003bc8	      2028	undo.c	FUNCTION_36	FOR_2	IF_31
0x40037ce	    0xc785bcfdffff	              mov dword [rbp - 0x244], 0	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x40037d8	      0xe997000000	                           jmp 0x4003874	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x40037dd	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x40037e3	            0x4898	                                    cdqe	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x40037e5	    0x488d14c50000	                        lea rdx, [rax*8]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x40037ed	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x40037f4	          0x4801d0	                            add rax, rdx	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x40037f7	          0x488b00	                    mov rax, qword [rax]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x40037fa	          0x4885c0	                           test rax, rax	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x40037fd	            0x746e	                            je 0x400386d	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x40037ff	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x4003805	    0x3b85bcfdffff	            cmp eax, dword [rbp - 0x244]	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x400380b	            0x7460	                            je 0x400386d	      2031	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x400380d	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x4003813	            0x4898	                                    cdqe	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x4003815	    0x488d14c50000	                        lea rdx, [rax*8]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x400381d	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x4003824	          0x4801d0	                            add rax, rdx	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x4003827	          0x488b00	                    mov rax, qword [rax]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x400382a	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x400382e	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x4003834	            0x4898	                                    cdqe	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x4003836	    0x488d0cc50000	                        lea rcx, [rax*8]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x400383e	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x4003845	          0x4801c8	                            add rax, rcx	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x4003848	          0x488b00	                    mov rax, qword [rax]	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x400384b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x400384f	          0x4839c2	                            cmp rdx, rax	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x4003852	            0x7519	                           jne 0x400386d	      2032	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x4003854	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2034	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32	CALL_64
0x400385b	          0x4889c6	                            mov rsi, rax	      2034	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32	CALL_64
0x400385e	      0xbf00000000	                              mov edi, 0	      2034	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32	CALL_64
0x4003863	      0xe8d4d7ffff	               call sym.corruption_error	      2034	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32	CALL_64
0x4003868	      0xe959050000	                           jmp 0x4003dc6	      2035	undo.c	FUNCTION_36	FOR_2	FOR_3	IF_32
0x400386d	    0x8385bcfdffff	              add dword [rbp - 0x244], 1	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x4003874	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x400387a	            0x4898	                                    cdqe	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x400387c	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x4003883	     0xf8c54ffffff	                            jl 0x40037dd	      2030	undo.c	FUNCTION_36	FOR_2	FOR_3
0x4003889	    0xc785bcfdffff	              mov dword [rbp - 0x244], 0	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x4003893	      0xe982000000	                           jmp 0x400391a	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x4003898	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x400389e	            0x4898	                                    cdqe	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038a0	    0x488d14c50000	                        lea rdx, [rax*8]	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038a8	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038af	          0x4801d0	                            add rax, rdx	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038b2	          0x488b00	                    mov rax, qword [rax]	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038b5	          0x4885c0	                           test rax, rax	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038b8	            0x7459	                            je 0x4003913	      2038	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038ba	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038c0	            0x4898	                                    cdqe	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038c2	    0x488d14c50000	                        lea rdx, [rax*8]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038ca	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038d1	          0x4801d0	                            add rax, rdx	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038d4	          0x488b00	                    mov rax, qword [rax]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038d7	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038db	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038e2	          0x488b00	                    mov rax, qword [rax]	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038e5	          0x4839c2	                            cmp rdx, rax	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038e8	            0x7529	                           jne 0x4003913	      2039	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038ea	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038f0	            0x4898	                                    cdqe	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038f2	    0x488d14c50000	                        lea rdx, [rax*8]	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x40038fa	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x4003901	          0x4801d0	                            add rax, rdx	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x4003904	          0x488b10	                    mov rdx, qword [rax]	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x4003907	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x400390e	          0x488910	                    mov qword [rax], rdx	      2041	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x4003911	            0xeb1c	                           jmp 0x400392f	      2043	undo.c	FUNCTION_36	FOR_2	FOR_4	IF_33
0x4003913	    0x8385bcfdffff	              add dword [rbp - 0x244], 1	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x400391a	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x4003920	            0x4898	                                    cdqe	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x4003922	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x4003929	     0xf8c69ffffff	                            jl 0x4003898	      2037	undo.c	FUNCTION_36	FOR_2	FOR_4
0x400392f	    0xc785bcfdffff	              mov dword [rbp - 0x244], 0	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x4003939	      0xe984000000	                           jmp 0x40039c2	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x400393e	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003944	            0x4898	                                    cdqe	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003946	    0x488d14c50000	                        lea rdx, [rax*8]	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x400394e	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003955	          0x4801d0	                            add rax, rdx	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003958	          0x488b00	                    mov rax, qword [rax]	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x400395b	          0x4885c0	                           test rax, rax	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x400395e	            0x745b	                            je 0x40039bb	      2046	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003960	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003966	            0x4898	                                    cdqe	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003968	    0x488d14c50000	                        lea rdx, [rax*8]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003970	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003977	          0x4801d0	                            add rax, rdx	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x400397a	          0x488b00	                    mov rax, qword [rax]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x400397d	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003981	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003988	        0x488b4008	                mov rax, qword [rax + 8]	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x400398c	          0x4839c2	                            cmp rdx, rax	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x400398f	            0x752a	                           jne 0x40039bb	      2047	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003991	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003997	            0x4898	                                    cdqe	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x4003999	    0x488d14c50000	                        lea rdx, [rax*8]	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x40039a1	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x40039a8	          0x4801d0	                            add rax, rdx	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x40039ab	          0x488b10	                    mov rdx, qword [rax]	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x40039ae	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x40039b5	        0x48895008	                mov qword [rax + 8], rdx	      2049	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x40039b9	            0xeb1c	                           jmp 0x40039d7	      2051	undo.c	FUNCTION_36	FOR_2	FOR_5	IF_34
0x40039bb	    0x8385bcfdffff	              add dword [rbp - 0x244], 1	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x40039c2	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x40039c8	            0x4898	                                    cdqe	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x40039ca	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x40039d1	     0xf8c67ffffff	                            jl 0x400393e	      2045	undo.c	FUNCTION_36	FOR_2	FOR_5
0x40039d7	    0xc785bcfdffff	              mov dword [rbp - 0x244], 0	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x40039e1	      0xe984000000	                           jmp 0x4003a6a	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x40039e6	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x40039ec	            0x4898	                                    cdqe	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x40039ee	    0x488d14c50000	                        lea rdx, [rax*8]	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x40039f6	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x40039fd	          0x4801d0	                            add rax, rdx	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a00	          0x488b00	                    mov rax, qword [rax]	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a03	          0x4885c0	                           test rax, rax	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a06	            0x745b	                            je 0x4003a63	      2054	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a08	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a0e	            0x4898	                                    cdqe	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a10	    0x488d14c50000	                        lea rdx, [rax*8]	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a18	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a1f	          0x4801d0	                            add rax, rdx	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a22	          0x488b00	                    mov rax, qword [rax]	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a25	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a29	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a30	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a34	          0x4839c2	                            cmp rdx, rax	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a37	            0x752a	                           jne 0x4003a63	      2055	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a39	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a3f	            0x4898	                                    cdqe	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a41	    0x488d14c50000	                        lea rdx, [rax*8]	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a49	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a50	          0x4801d0	                            add rax, rdx	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a53	          0x488b10	                    mov rdx, qword [rax]	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a56	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a5d	        0x48895010	             mov qword [rax + 0x10], rdx	      2057	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a61	            0xeb1c	                           jmp 0x4003a7f	      2059	undo.c	FUNCTION_36	FOR_2	FOR_6	IF_35
0x4003a63	    0x8385bcfdffff	              add dword [rbp - 0x244], 1	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x4003a6a	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x4003a70	            0x4898	                                    cdqe	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x4003a72	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x4003a79	     0xf8c67ffffff	                            jl 0x40039e6	      2053	undo.c	FUNCTION_36	FOR_2	FOR_6
0x4003a7f	    0xc785bcfdffff	              mov dword [rbp - 0x244], 0	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x4003a89	      0xe984000000	                           jmp 0x4003b12	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x4003a8e	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003a94	            0x4898	                                    cdqe	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003a96	    0x488d14c50000	                        lea rdx, [rax*8]	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003a9e	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003aa5	          0x4801d0	                            add rax, rdx	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003aa8	          0x488b00	                    mov rax, qword [rax]	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003aab	          0x4885c0	                           test rax, rax	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003aae	            0x745b	                            je 0x4003b0b	      2062	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003ab0	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003ab6	            0x4898	                                    cdqe	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003ab8	    0x488d14c50000	                        lea rdx, [rax*8]	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003ac0	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003ac7	          0x4801d0	                            add rax, rdx	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003aca	          0x488b00	                    mov rax, qword [rax]	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003acd	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003ad1	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003ad8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003adc	          0x4839c2	                            cmp rdx, rax	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003adf	            0x752a	                           jne 0x4003b0b	      2063	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003ae1	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003ae7	            0x4898	                                    cdqe	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003ae9	    0x488d14c50000	                        lea rdx, [rax*8]	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003af1	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003af8	          0x4801d0	                            add rax, rdx	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003afb	          0x488b10	                    mov rdx, qword [rax]	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003afe	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003b05	        0x48895018	             mov qword [rax + 0x18], rdx	      2065	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003b09	            0xeb1c	                           jmp 0x4003b27	      2067	undo.c	FUNCTION_36	FOR_2	FOR_7	IF_36
0x4003b0b	    0x8385bcfdffff	              add dword [rbp - 0x244], 1	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x4003b12	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x4003b18	            0x4898	                                    cdqe	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x4003b1a	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x4003b21	     0xf8c67ffffff	                            jl 0x4003a8e	      2061	undo.c	FUNCTION_36	FOR_2	FOR_7
0x4003b27	    0x4883bd28feff	              cmp qword [rbp - 0x1d8], 0	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x4003b2f	            0x7e2b	                           jle 0x4003b5c	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x4003b31	    0x6683bdb2fdff	               cmp word [rbp - 0x24e], 0	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x4003b39	            0x7921	                           jns 0x4003b5c	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x4003b3b	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x4003b42	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x4003b46	    0x483b8528feff	            cmp rax, qword [rbp - 0x1d8]	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x4003b4d	            0x750d	                           jne 0x4003b5c	      2069	undo.c	FUNCTION_36	FOR_2	IF_37
0x4003b4f	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2071	undo.c	FUNCTION_36	FOR_2	IF_37
0x4003b55	    0x668985b2fdff	              mov word [rbp - 0x24e], ax	      2071	undo.c	FUNCTION_36	FOR_2	IF_37
0x4003b5c	    0x4883bd30feff	              cmp qword [rbp - 0x1d0], 0	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x4003b64	            0x7e2b	                           jle 0x4003b91	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x4003b66	    0x6683bdb4fdff	               cmp word [rbp - 0x24c], 0	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x4003b6e	            0x7921	                           jns 0x4003b91	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x4003b70	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x4003b77	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x4003b7b	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x4003b82	            0x750d	                           jne 0x4003b91	      2074	undo.c	FUNCTION_36	FOR_2	IF_38
0x4003b84	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2076	undo.c	FUNCTION_36	FOR_2	IF_38
0x4003b8a	    0x668985b4fdff	              mov word [rbp - 0x24c], ax	      2076	undo.c	FUNCTION_36	FOR_2	IF_38
0x4003b91	    0x4883bd38feff	              cmp qword [rbp - 0x1c8], 0	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x4003b99	            0x7e2e	                           jle 0x4003bc9	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x4003b9b	    0x6683bdb6fdff	               cmp word [rbp - 0x24a], 0	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x4003ba3	            0x7924	                           jns 0x4003bc9	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x4003ba5	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x4003bac	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x4003bb0	    0x483b8538feff	            cmp rax, qword [rbp - 0x1c8]	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x4003bb7	            0x7510	                           jne 0x4003bc9	      2079	undo.c	FUNCTION_36	FOR_2	IF_39
0x4003bb9	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2081	undo.c	FUNCTION_36	FOR_2	IF_39
0x4003bbf	    0x668985b6fdff	              mov word [rbp - 0x24a], ax	      2081	undo.c	FUNCTION_36	FOR_2	IF_39
0x4003bc6	            0xeb01	                           jmp 0x4003bc9	      2081	undo.c	FUNCTION_36	FOR_2	IF_39
0x4003bc8	              0x90	                                     nop	      2029	undo.c	FUNCTION_36	FOR_2	IF_31
0x4003bc9	    0x8385b8fdffff	              add dword [rbp - 0x248], 1	      2025	undo.c	FUNCTION_36	FOR_2
0x4003bd0	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2025	undo.c	FUNCTION_36	FOR_2
0x4003bd6	            0x4898	                                    cdqe	      2025	undo.c	FUNCTION_36	FOR_2
0x4003bd8	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2025	undo.c	FUNCTION_36	FOR_2
0x4003bdf	     0xf8cb7fbffff	                            jl 0x400379c	      2025	undo.c	FUNCTION_36	FOR_2
0x4003be5	    0x488b05000000	            mov rax, qword [0x04003bec] 	      2088	undo.c	FUNCTION_36	CALL_65
0x4003bec	          0x4889c7	                            mov rdi, rax	      2088	undo.c	FUNCTION_36	CALL_65
0x4003bef	      0xe800000000	                          call 0x4003bf4	      2088	undo.c	FUNCTION_36	CALL_65
0x4003bf4	    0x488b15000000	            mov rdx, qword [0x04003bfb] 	      2089	undo.c	FUNCTION_36
0x4003bfb	    0x6683bdb2fdff	               cmp word [rbp - 0x24e], 0	      2089	undo.c	FUNCTION_36
0x4003c03	            0x781f	                            js 0x4003c24	      2089	undo.c	FUNCTION_36
0x4003c05	    0x480fbf85b2fd	           movsx rax, word [rbp - 0x24e]	      2089	undo.c	FUNCTION_36
0x4003c0d	    0x488d0cc50000	                        lea rcx, [rax*8]	      2089	undo.c	FUNCTION_36
0x4003c15	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2089	undo.c	FUNCTION_36
0x4003c1c	          0x4801c8	                            add rax, rcx	      2089	undo.c	FUNCTION_36
0x4003c1f	          0x488b00	                    mov rax, qword [rax]	      2089	undo.c	FUNCTION_36
0x4003c22	            0xeb05	                           jmp 0x4003c29	      2089	undo.c	FUNCTION_36
0x4003c24	      0xb800000000	                              mov eax, 0	      2089	undo.c	FUNCTION_36
0x4003c29	    0x488982181200	          mov qword [rdx + 0x1218], rax 	      2089	undo.c	FUNCTION_36
0x4003c30	    0x488b15000000	            mov rdx, qword [0x04003c37] 	      2090	undo.c	FUNCTION_36
0x4003c37	    0x6683bdb4fdff	               cmp word [rbp - 0x24c], 0	      2090	undo.c	FUNCTION_36
0x4003c3f	            0x781f	                            js 0x4003c60	      2090	undo.c	FUNCTION_36
0x4003c41	    0x480fbf85b4fd	           movsx rax, word [rbp - 0x24c]	      2090	undo.c	FUNCTION_36
0x4003c49	    0x488d0cc50000	                        lea rcx, [rax*8]	      2090	undo.c	FUNCTION_36
0x4003c51	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2090	undo.c	FUNCTION_36
0x4003c58	          0x4801c8	                            add rax, rcx	      2090	undo.c	FUNCTION_36
0x4003c5b	          0x488b00	                    mov rax, qword [rax]	      2090	undo.c	FUNCTION_36
0x4003c5e	            0xeb05	                           jmp 0x4003c65	      2090	undo.c	FUNCTION_36
0x4003c60	      0xb800000000	                              mov eax, 0	      2090	undo.c	FUNCTION_36
0x4003c65	    0x488982201200	          mov qword [rdx + 0x1220], rax 	      2090	undo.c	FUNCTION_36
0x4003c6c	    0x488b15000000	            mov rdx, qword [0x04003c73] 	      2091	undo.c	FUNCTION_36
0x4003c73	    0x6683bdb6fdff	               cmp word [rbp - 0x24a], 0	      2091	undo.c	FUNCTION_36
0x4003c7b	            0x781f	                            js 0x4003c9c	      2091	undo.c	FUNCTION_36
0x4003c7d	    0x480fbf85b6fd	           movsx rax, word [rbp - 0x24a]	      2091	undo.c	FUNCTION_36
0x4003c85	    0x488d0cc50000	                        lea rcx, [rax*8]	      2091	undo.c	FUNCTION_36
0x4003c8d	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2091	undo.c	FUNCTION_36
0x4003c94	          0x4801c8	                            add rax, rcx	      2091	undo.c	FUNCTION_36
0x4003c97	          0x488b00	                    mov rax, qword [rax]	      2091	undo.c	FUNCTION_36
0x4003c9a	            0xeb05	                           jmp 0x4003ca1	      2091	undo.c	FUNCTION_36
0x4003c9c	      0xb800000000	                              mov eax, 0	      2091	undo.c	FUNCTION_36
0x4003ca1	    0x488982281200	          mov qword [rdx + 0x1228], rax 	      2091	undo.c	FUNCTION_36
0x4003ca8	    0x488b05000000	            mov rax, qword [0x04003caf] 	      2092	undo.c	FUNCTION_36
0x4003caf	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	      2092	undo.c	FUNCTION_36
0x4003cb6	    0x488990601200	          mov qword [rax + 0x1260], rdx 	      2092	undo.c	FUNCTION_36
0x4003cbd	    0x488b05000000	            mov rax, qword [0x04003cc4] 	      2093	undo.c	FUNCTION_36
0x4003cc4	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      2093	undo.c	FUNCTION_36
0x4003ccb	    0x488990681200	          mov qword [rax + 0x1268], rdx 	      2093	undo.c	FUNCTION_36
0x4003cd2	    0x488b05000000	            mov rax, qword [0x04003cd9] 	      2094	undo.c	FUNCTION_36
0x4003cd9	    0x8b95c4fdffff	            mov edx, dword [rbp - 0x23c]	      2094	undo.c	FUNCTION_36
0x4003cdf	    0x899070120000	          mov dword [rax + 0x1270], edx 	      2094	undo.c	FUNCTION_36
0x4003ce5	    0x488b05000000	            mov rax, qword [0x04003cec] 	      2095	undo.c	FUNCTION_36
0x4003cec	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2095	undo.c	FUNCTION_36
0x4003cf3	    0x899030120000	          mov dword [rax + 0x1230], edx 	      2095	undo.c	FUNCTION_36
0x4003cf9	    0x488b05000000	            mov rax, qword [0x04003d00] 	      2096	undo.c	FUNCTION_36
0x4003d00	    0x488b9540feff	            mov rdx, qword [rbp - 0x1c0]	      2096	undo.c	FUNCTION_36
0x4003d07	    0x488990381200	          mov qword [rax + 0x1238], rdx 	      2096	undo.c	FUNCTION_36
0x4003d0e	    0x488b05000000	            mov rax, qword [0x04003d15] 	      2097	undo.c	FUNCTION_36
0x4003d15	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      2097	undo.c	FUNCTION_36
0x4003d1c	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2097	undo.c	FUNCTION_36
0x4003d23	    0x488b05000000	            mov rax, qword [0x04003d2a] 	      2098	undo.c	FUNCTION_36
0x4003d2a	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	      2098	undo.c	FUNCTION_36
0x4003d31	    0x488990501200	          mov qword [rax + 0x1250], rdx 	      2098	undo.c	FUNCTION_36
0x4003d38	    0x488b05000000	            mov rax, qword [0x04003d3f] 	      2099	undo.c	FUNCTION_36
0x4003d3f	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      2099	undo.c	FUNCTION_36
0x4003d46	    0x488990401200	          mov qword [rax + 0x1240], rdx 	      2099	undo.c	FUNCTION_36
0x4003d4d	    0x488b05000000	            mov rax, qword [0x04003d54] 	      2100	undo.c	FUNCTION_36
0x4003d54	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      2100	undo.c	FUNCTION_36
0x4003d5b	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2100	undo.c	FUNCTION_36
0x4003d62	    0x488b05000000	            mov rax, qword [0x04003d69] 	      2102	undo.c	FUNCTION_36
0x4003d69	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      2102	undo.c	FUNCTION_36
0x4003d73	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2103	undo.c	FUNCTION_36	CALL_66
0x4003d7a	          0x4889c7	                            mov rdi, rax	      2103	undo.c	FUNCTION_36	CALL_66
0x4003d7d	      0xe800000000	                          call 0x4003d82	      2103	undo.c	FUNCTION_36	CALL_66
0x4003d82	    0x4883bda8fdff	              cmp qword [rbp - 0x258], 0	      2113	undo.c	FUNCTION_36	IF_41
0x4003d8a	     0xf84cb000000	                            je 0x4003e5b	      2113	undo.c	FUNCTION_36	IF_41
0x4003d90	      0xbf00000000	                              mov edi, 0	      2114	undo.c	FUNCTION_36	CALL_71
0x4003d95	      0xe800000000	                          call 0x4003d9a	      2114	undo.c	FUNCTION_36	CALL_71
0x4003d9a	          0x4889c2	                            mov rdx, rax	      2114	undo.c	FUNCTION_36	CALL_71
0x4003d9d	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2114	undo.c	FUNCTION_36	CALL_71
0x4003da4	          0x4889c6	                            mov rsi, rax	      2114	undo.c	FUNCTION_36	CALL_71
0x4003da7	          0x4889d7	                            mov rdi, rdx	      2114	undo.c	FUNCTION_36	CALL_71
0x4003daa	      0xb800000000	                              mov eax, 0	      2114	undo.c	FUNCTION_36	CALL_71
0x4003daf	      0xe800000000	                          call 0x4003db4	      2114	undo.c	FUNCTION_36	CALL_71
0x4003db4	      0xe9a2000000	                           jmp 0x4003e5b	      2115	undo.c	FUNCTION_36
0x4003db9	              0x90	                                     nop	      1858	undo.c	FUNCTION_36	IF_6
0x4003dba	            0xeb0a	                           jmp 0x4003dc6	      1858	undo.c	FUNCTION_36	IF_6
0x4003dbc	              0x90	                                     nop	      1929	undo.c	FUNCTION_36	IF_16
0x4003dbd	            0xeb07	                           jmp 0x4003dc6	      1929	undo.c	FUNCTION_36	IF_16
0x4003dbf	              0x90	                                     nop	      1935	undo.c	FUNCTION_36	IF_20
0x4003dc0	            0xeb04	                           jmp 0x4003dc6	      1935	undo.c	FUNCTION_36	IF_20
0x4003dc2	              0x90	                                     nop	      1986	undo.c	FUNCTION_36	IF_24	IF_26
0x4003dc3	            0xeb01	                           jmp 0x4003dc6	      1986	undo.c	FUNCTION_36	IF_24	IF_26
0x4003dc5	              0x90	                                     nop	      1999	undo.c	FUNCTION_36	WHILE_2	IF_28
0x4003dc6	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2118	undo.c	FUNCTION_36	CALL_72
0x4003dcd	          0x4889c7	                            mov rdi, rax	      2118	undo.c	FUNCTION_36	CALL_72
0x4003dd0	      0xe800000000	                          call 0x4003dd5	      2118	undo.c	FUNCTION_36	CALL_72
0x4003dd5	    0x4883bdf0fdff	              cmp qword [rbp - 0x210], 0	      2119	undo.c	FUNCTION_36	IF_42
0x4003ddd	            0x747d	                            je 0x4003e5c	      2119	undo.c	FUNCTION_36	IF_42
0x4003ddf	    0xc785b8fdffff	              mov dword [rbp - 0x248], 0	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x4003de9	            0xeb4e	                           jmp 0x4003e39	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x4003deb	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003df1	            0x4898	                                    cdqe	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003df3	    0x488d14c50000	                        lea rdx, [rax*8]	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003dfb	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e02	          0x4801d0	                            add rax, rdx	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e05	          0x488b00	                    mov rax, qword [rax]	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e08	          0x4885c0	                           test rax, rax	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e0b	            0x7425	                            je 0x4003e32	      2122	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e0d	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e13	            0x4898	                                    cdqe	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e15	    0x488d14c50000	                        lea rdx, [rax*8]	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e1d	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e24	          0x4801d0	                            add rax, rdx	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e27	          0x488b00	                    mov rax, qword [rax]	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e2a	          0x4889c7	                            mov rdi, rax	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e2d	      0xe83dd2ffff	                     call sym.u_free_uhp	      2123	undo.c	FUNCTION_36	IF_42	FOR_9	IF_43
0x4003e32	    0x8385b8fdffff	              add dword [rbp - 0x248], 1	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x4003e39	    0x8b85b8fdffff	            mov eax, dword [rbp - 0x248]	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x4003e3f	            0x4898	                                    cdqe	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x4003e41	    0x483b85e8fdff	            cmp rax, qword [rbp - 0x218]	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x4003e48	            0x7ca1	                            jl 0x4003deb	      2121	undo.c	FUNCTION_36	IF_42	FOR_9
0x4003e4a	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2124	undo.c	FUNCTION_36	IF_42	CALL_74
0x4003e51	          0x4889c7	                            mov rdi, rax	      2124	undo.c	FUNCTION_36	IF_42	CALL_74
0x4003e54	      0xe800000000	                          call 0x4003e59	      2124	undo.c	FUNCTION_36	IF_42	CALL_74
0x4003e59	            0xeb01	                           jmp 0x4003e5c	      2124	undo.c	FUNCTION_36	IF_42	CALL_74
0x4003e5b	              0x90	                                     nop	      2115	undo.c	FUNCTION_36
0x4003e5c	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2129	undo.c	FUNCTION_36	IF_44
0x4003e63	          0x4885c0	                           test rax, rax	      2129	undo.c	FUNCTION_36	IF_44
0x4003e66	            0x740f	                            je 0x4003e77	      2129	undo.c	FUNCTION_36	IF_44
0x4003e68	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2130	undo.c	FUNCTION_36	CALL_75
0x4003e6f	          0x4889c7	                            mov rdi, rax	      2130	undo.c	FUNCTION_36	CALL_75
0x4003e72	      0xe800000000	                          call 0x4003e77	      2130	undo.c	FUNCTION_36	CALL_75
0x4003e77	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2131	undo.c	FUNCTION_36	CALL_76
0x4003e7e	          0x4889c7	                            mov rdi, rax	      2131	undo.c	FUNCTION_36	CALL_76
0x4003e81	      0xe800000000	                          call 0x4003e86	      2131	undo.c	FUNCTION_36	CALL_76
0x4003e86	    0x4883bd00feff	              cmp qword [rbp - 0x200], 0	      2133	undo.c	FUNCTION_36	IF_45
0x4003e8e	            0x740f	                            je 0x4003e9f	      2133	undo.c	FUNCTION_36	IF_45
0x4003e90	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2134	undo.c	FUNCTION_36	CALL_77
0x4003e97	          0x4889c7	                            mov rdi, rax	      2134	undo.c	FUNCTION_36	CALL_77
0x4003e9a	      0xe800000000	                          call 0x4003e9f	      2134	undo.c	FUNCTION_36	CALL_77
0x4003e9f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2135	undo.c	FUNCTION_36	IF_46
0x4003ea6	    0x483b85a8fdff	            cmp rax, qword [rbp - 0x258]	      2135	undo.c	FUNCTION_36	IF_46
0x4003ead	            0x7418	                            je 0x4003ec7	      2135	undo.c	FUNCTION_36	IF_46
0x4003eaf	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2136	undo.c	FUNCTION_36	CALL_78
0x4003eb6	          0x4889c7	                            mov rdi, rax	      2136	undo.c	FUNCTION_36	CALL_78
0x4003eb9	      0xe800000000	                          call 0x4003ebe	      2136	undo.c	FUNCTION_36	CALL_78
0x4003ebe	              0x90	                                     nop	      2137	undo.c	FUNCTION_36
0x4003ebf	            0xeb06	                           jmp 0x4003ec7	      2137	undo.c	FUNCTION_36
0x4003ec1	              0x90	                                     nop	      1822	undo.c	FUNCTION_36	IF_1	IF_2
0x4003ec2	            0xeb04	                           jmp 0x4003ec8	      1822	undo.c	FUNCTION_36	IF_1	IF_2
0x4003ec4	              0x90	                                     nop	      1839	undo.c	FUNCTION_36	IF_1	IF_3
0x4003ec5	            0xeb01	                           jmp 0x4003ec8	      1839	undo.c	FUNCTION_36	IF_1	IF_3
0x4003ec7	              0x90	                                     nop	      2137	undo.c	FUNCTION_36
0x4003ec8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2138	undo.c	FUNCTION_36
0x4003ecc	    0x644833042528	                xor rax, qword fs:[0x28]	      2138	undo.c	FUNCTION_36
0x4003ed5	            0x7405	                            je 0x4003edc	      2138	undo.c	FUNCTION_36
0x4003ed7	      0xe800000000	                          call 0x4003edc	      2138	undo.c	FUNCTION_36
0x4003edc	    0x4881c4680200	                          add rsp, 0x268	      2138	undo.c	FUNCTION_36
0x4003ee3	              0x5b	                                 pop rbx	      2138	undo.c	FUNCTION_36
0x4003ee4	              0x5d	                                 pop rbp	      2138	undo.c	FUNCTION_36
0x4003ee5	              0xc3	                                     ret	      2138	undo.c	FUNCTION_36
serialize_pos	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,4:WHILE,0:DO,0	33
0x40025f6	              0x55	                                push rbp	      1447	undo.c	FUNCTION_31
0x40025f7	          0x4889e5	                            mov rbp, rsp	      1447	undo.c	FUNCTION_31
0x40025fa	        0x4883ec20	                           sub rsp, 0x20	      1447	undo.c	FUNCTION_31
0x40025fe	        0x48897df8	                mov qword [rbp - 8], rdi	      1447	undo.c	FUNCTION_31
0x4002602	          0x4889f0	                            mov rax, rsi	      1447	undo.c	FUNCTION_31
0x4002605	          0x4889d1	                            mov rcx, rdx	      1447	undo.c	FUNCTION_31
0x4002608	          0x4889ca	                            mov rdx, rcx	      1447	undo.c	FUNCTION_31
0x400260b	        0x488945e0	             mov qword [rbp - 0x20], rax	      1447	undo.c	FUNCTION_31
0x400260f	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1447	undo.c	FUNCTION_31
0x4002613	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1448	undo.c	FUNCTION_31	CALL_1
0x4002617	          0x4889c1	                            mov rcx, rax	      1448	undo.c	FUNCTION_31	CALL_1
0x400261a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1448	undo.c	FUNCTION_31	CALL_1
0x400261e	      0xba04000000	                              mov edx, 4	      1448	undo.c	FUNCTION_31	CALL_1
0x4002623	          0x4889ce	                            mov rsi, rcx	      1448	undo.c	FUNCTION_31	CALL_1
0x4002626	          0x4889c7	                            mov rdi, rax	      1448	undo.c	FUNCTION_31	CALL_1
0x4002629	      0xe8bbedffff	               call sym.undo_write_bytes	      1448	undo.c	FUNCTION_31	CALL_1
0x400262e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1449	undo.c	FUNCTION_31	CALL_2
0x4002631	          0x4863c8	                         movsxd rcx, eax	      1449	undo.c	FUNCTION_31	CALL_2
0x4002634	        0x488b45f8	                mov rax, qword [rbp - 8]	      1449	undo.c	FUNCTION_31	CALL_2
0x4002638	      0xba04000000	                              mov edx, 4	      1449	undo.c	FUNCTION_31	CALL_2
0x400263d	          0x4889ce	                            mov rsi, rcx	      1449	undo.c	FUNCTION_31	CALL_2
0x4002640	          0x4889c7	                            mov rdi, rax	      1449	undo.c	FUNCTION_31	CALL_2
0x4002643	      0xe8a1edffff	               call sym.undo_write_bytes	      1449	undo.c	FUNCTION_31	CALL_2
0x4002648	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1451	undo.c	FUNCTION_31	CALL_3
0x400264b	          0x4863c8	                         movsxd rcx, eax	      1451	undo.c	FUNCTION_31	CALL_3
0x400264e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1451	undo.c	FUNCTION_31	CALL_3
0x4002652	      0xba04000000	                              mov edx, 4	      1451	undo.c	FUNCTION_31	CALL_3
0x4002657	          0x4889ce	                            mov rsi, rcx	      1451	undo.c	FUNCTION_31	CALL_3
0x400265a	          0x4889c7	                            mov rdi, rax	      1451	undo.c	FUNCTION_31	CALL_3
0x400265d	      0xe887edffff	               call sym.undo_write_bytes	      1451	undo.c	FUNCTION_31	CALL_3
0x4002662	              0x90	                                     nop	      1455	undo.c	FUNCTION_31
0x4002663	              0xc9	                                   leave	      1455	undo.c	FUNCTION_31
0x4002664	              0xc3	                                     ret	      1455	undo.c	FUNCTION_31
u_undoline	SWITCH,0:FOR,0:IF,5:functions,0:ELSE,0:CALL,8:WHILE,0:DO,0	87
0x40069e8	              0x55	                                push rbp	      3461	undo.c	FUNCTION_60
0x40069e9	          0x4889e5	                            mov rbp, rsp	      3461	undo.c	FUNCTION_60
0x40069ec	        0x4883ec10	                           sub rsp, 0x10	      3461	undo.c	FUNCTION_60
0x40069f0	    0x8b0500000000	            mov eax, dword [0x040069f6] 	      3465	undo.c	FUNCTION_60	IF_1
0x40069f6	            0x85c0	                           test eax, eax	      3465	undo.c	FUNCTION_60	IF_1
0x40069f8	     0xf8589010000	                           jne 0x4006b87	      3465	undo.c	FUNCTION_60	IF_1
0x40069fe	    0x488b05000000	            mov rax, qword [0x04006a05] 	      3468	undo.c	FUNCTION_60	IF_2
0x4006a05	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3468	undo.c	FUNCTION_60	IF_2
0x4006a0c	          0x4885c0	                           test rax, rax	      3468	undo.c	FUNCTION_60	IF_2
0x4006a0f	            0x741d	                            je 0x4006a2e	      3468	undo.c	FUNCTION_60	IF_2
0x4006a11	    0x488b05000000	            mov rax, qword [0x04006a18] 	      3469	undo.c	FUNCTION_60	IF_2
0x4006a18	    0x488b90681200	          mov rdx, qword [rax + 0x1268] 	      3469	undo.c	FUNCTION_60	IF_2
0x4006a1f	    0x488b05000000	            mov rax, qword [0x04006a26] 	      3469	undo.c	FUNCTION_60	IF_2
0x4006a26	          0x488b00	                    mov rax, qword [rax]	      3469	undo.c	FUNCTION_60	IF_2
0x4006a29	          0x4839c2	                            cmp rdx, rax	      3469	undo.c	FUNCTION_60	IF_2
0x4006a2c	            0x7e0a	                           jle 0x4006a38	      3469	undo.c	FUNCTION_60	IF_2
0x4006a2e	      0xe800000000	                          call 0x4006a33	      3471	undo.c	FUNCTION_60	IF_2	CALL_1
0x4006a33	      0xe953010000	                           jmp 0x4006b8b	      3472	undo.c	FUNCTION_60	IF_2
0x4006a38	    0x488b05000000	            mov rax, qword [0x04006a3f] 	      3477	undo.c	FUNCTION_60	IF_3
0x4006a3f	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3477	undo.c	FUNCTION_60	IF_3
0x4006a46	        0x488d7001	                      lea rsi, [rax + 1]	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4006a4a	    0x488b05000000	            mov rax, qword [0x04006a51] 	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4006a51	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4006a58	        0x4883e801	                              sub rax, 1	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4006a5c	      0xb900000000	                              mov ecx, 0	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4006a61	      0xba00000000	                              mov edx, 0	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4006a66	          0x4889c7	                            mov rdi, rax	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4006a69	      0xe800000000	                          call 0x4006a6e	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4006a6e	            0x85c0	                           test eax, eax	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4006a70	     0xf8414010000	                            je 0x4006b8a	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x4006a76	    0x488b05000000	            mov rax, qword [0x04006a7d] 	      3479	undo.c	FUNCTION_60	CALL_3
0x4006a7d	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3479	undo.c	FUNCTION_60	CALL_3
0x4006a84	          0x4889c7	                            mov rdi, rax	      3479	undo.c	FUNCTION_60	CALL_3
0x4006a87	      0xe854010000	                    call sym.u_save_line	      3479	undo.c	FUNCTION_60	CALL_3
0x4006a8c	        0x488945f8	                mov qword [rbp - 8], rax	      3479	undo.c	FUNCTION_60	CALL_3
0x4006a90	      0x48837df800	                  cmp qword [rbp - 8], 0	      3480	undo.c	FUNCTION_60	IF_4
0x4006a95	            0x750f	                           jne 0x4006aa6	      3480	undo.c	FUNCTION_60	IF_4
0x4006a97	      0xbf00000000	                              mov edi, 0	      3482	undo.c	FUNCTION_60	IF_4	CALL_4
0x4006a9c	      0xe800000000	                          call 0x4006aa1	      3482	undo.c	FUNCTION_60	IF_4	CALL_4
0x4006aa1	      0xe9e5000000	                           jmp 0x4006b8b	      3483	undo.c	FUNCTION_60	IF_4
0x4006aa6	    0x488b05000000	            mov rax, qword [0x04006aad] 	      3485	undo.c	FUNCTION_60	CALL_5
0x4006aad	    0x488b88601200	          mov rcx, qword [rax + 0x1260] 	      3485	undo.c	FUNCTION_60	CALL_5
0x4006ab4	    0x488b05000000	            mov rax, qword [0x04006abb] 	      3485	undo.c	FUNCTION_60	CALL_5
0x4006abb	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3485	undo.c	FUNCTION_60	CALL_5
0x4006ac2	      0xba01000000	                              mov edx, 1	      3485	undo.c	FUNCTION_60	CALL_5
0x4006ac7	          0x4889ce	                            mov rsi, rcx	      3485	undo.c	FUNCTION_60	CALL_5
0x4006aca	          0x4889c7	                            mov rdi, rax	      3485	undo.c	FUNCTION_60	CALL_5
0x4006acd	      0xe800000000	                          call 0x4006ad2	      3485	undo.c	FUNCTION_60	CALL_5
0x4006ad2	    0x488b05000000	            mov rax, qword [0x04006ad9] 	      3486	undo.c	FUNCTION_60	CALL_6
0x4006ad9	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3486	undo.c	FUNCTION_60	CALL_6
0x4006ae0	      0xbe00000000	                              mov esi, 0	      3486	undo.c	FUNCTION_60	CALL_6
0x4006ae5	          0x4889c7	                            mov rdi, rax	      3486	undo.c	FUNCTION_60	CALL_6
0x4006ae8	      0xe800000000	                          call 0x4006aed	      3486	undo.c	FUNCTION_60	CALL_6
0x4006aed	    0x488b05000000	            mov rax, qword [0x04006af4] 	      3487	undo.c	FUNCTION_60	CALL_7
0x4006af4	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3487	undo.c	FUNCTION_60	CALL_7
0x4006afb	          0x4889c7	                            mov rdi, rax	      3487	undo.c	FUNCTION_60	CALL_7
0x4006afe	      0xe800000000	                          call 0x4006b03	      3487	undo.c	FUNCTION_60	CALL_7
0x4006b03	    0x488b05000000	            mov rax, qword [0x04006b0a] 	      3488	undo.c	FUNCTION_60
0x4006b0a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3488	undo.c	FUNCTION_60
0x4006b0e	    0x488990601200	          mov qword [rax + 0x1260], rdx 	      3488	undo.c	FUNCTION_60
0x4006b15	    0x488b05000000	            mov rax, qword [0x04006b1c] 	      3490	undo.c	FUNCTION_60
0x4006b1c	    0x8b8070120000	          mov eax, dword [rax + 0x1270] 	      3490	undo.c	FUNCTION_60
0x4006b22	          0x8945f4	              mov dword [rbp - 0xc], eax	      3490	undo.c	FUNCTION_60
0x4006b25	    0x488b05000000	            mov rax, qword [0x04006b2c] 	      3491	undo.c	FUNCTION_60	IF_5
0x4006b2c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3491	undo.c	FUNCTION_60	IF_5
0x4006b30	    0x488b05000000	            mov rax, qword [0x04006b37] 	      3491	undo.c	FUNCTION_60	IF_5
0x4006b37	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3491	undo.c	FUNCTION_60	IF_5
0x4006b3e	          0x4839c2	                            cmp rdx, rax	      3491	undo.c	FUNCTION_60	IF_5
0x4006b41	            0x7517	                           jne 0x4006b5a	      3491	undo.c	FUNCTION_60	IF_5
0x4006b43	    0x488b05000000	            mov rax, qword [0x04006b4a] 	      3492	undo.c	FUNCTION_60	IF_5
0x4006b4a	    0x488b15000000	            mov rdx, qword [0x04006b51] 	      3492	undo.c	FUNCTION_60	IF_5
0x4006b51	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3492	undo.c	FUNCTION_60	IF_5
0x4006b54	    0x899070120000	          mov dword [rax + 0x1270], edx 	      3492	undo.c	FUNCTION_60	IF_5
0x4006b5a	    0x488b05000000	            mov rax, qword [0x04006b61] 	      3493	undo.c	FUNCTION_60
0x4006b61	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3493	undo.c	FUNCTION_60
0x4006b64	          0x895040	             mov dword [rax + 0x40], edx	      3493	undo.c	FUNCTION_60
0x4006b67	    0x488b05000000	            mov rax, qword [0x04006b6e] 	      3494	undo.c	FUNCTION_60
0x4006b6e	    0x488b15000000	            mov rdx, qword [0x04006b75] 	      3494	undo.c	FUNCTION_60
0x4006b75	    0x488b92681200	          mov rdx, qword [rdx + 0x1268] 	      3494	undo.c	FUNCTION_60
0x4006b7c	        0x48895038	             mov qword [rax + 0x38], rdx	      3494	undo.c	FUNCTION_60
0x4006b80	      0xe800000000	                          call 0x4006b85	      3495	undo.c	FUNCTION_60	CALL_8
0x4006b85	            0xeb04	                           jmp 0x4006b8b	      3495	undo.c	FUNCTION_60	CALL_8
0x4006b87	              0x90	                                     nop	      3466	undo.c	FUNCTION_60	IF_1
0x4006b88	            0xeb01	                           jmp 0x4006b8b	      3466	undo.c	FUNCTION_60	IF_1
0x4006b8a	              0x90	                                     nop	      3478	undo.c	FUNCTION_60	IF_3
0x4006b8b	              0xc9	                                   leave	      3496	undo.c	FUNCTION_60
0x4006b8c	              0xc3	                                     ret	      3496	undo.c	FUNCTION_60
undo_read_2c	SWITCH,0:FOR,0:IF,1:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	37
0x4001552	              0x55	                                push rbp	      1011	undo.c	FUNCTION_21
0x4001553	          0x4889e5	                            mov rbp, rsp	      1011	undo.c	FUNCTION_21
0x4001556	        0x4883ec30	                           sub rsp, 0x30	      1011	undo.c	FUNCTION_21
0x400155a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1011	undo.c	FUNCTION_21
0x400155e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1011	undo.c	FUNCTION_21
0x4001567	        0x488945f8	                mov qword [rbp - 8], rax	      1011	undo.c	FUNCTION_21
0x400156b	            0x31c0	                            xor eax, eax	      1011	undo.c	FUNCTION_21
0x400156d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1013	undo.c	FUNCTION_21	IF_1
0x4001571	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1013	undo.c	FUNCTION_21	IF_1
0x4001575	          0x4885c0	                           test rax, rax	      1013	undo.c	FUNCTION_21	IF_1
0x4001578	            0x7435	                            je 0x40015af	      1013	undo.c	FUNCTION_21	IF_1
0x400157a	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x400157e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x4001582	      0xba02000000	                              mov edx, 2	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x4001587	          0x4889ce	                            mov rsi, rcx	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x400158a	          0x4889c7	                            mov rdi, rax	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x400158d	      0xe858010000	                      call sym.undo_read	      1018	undo.c	FUNCTION_21	IF_1	CALL_1
0x4001592	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      1019	undo.c	FUNCTION_21	IF_1
0x4001596	           0xfb6c0	                           movzx eax, al	      1019	undo.c	FUNCTION_21	IF_1
0x4001599	          0xc1e008	                              shl eax, 8	      1019	undo.c	FUNCTION_21	IF_1
0x400159c	            0x89c2	                            mov edx, eax	      1019	undo.c	FUNCTION_21	IF_1
0x400159e	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	      1019	undo.c	FUNCTION_21	IF_1
0x40015a2	           0xfb6c0	                           movzx eax, al	      1019	undo.c	FUNCTION_21	IF_1
0x40015a5	             0x1d0	                            add eax, edx	      1019	undo.c	FUNCTION_21	IF_1
0x40015a7	          0x8945ec	             mov dword [rbp - 0x14], eax	      1019	undo.c	FUNCTION_21	IF_1
0x40015aa	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1020	undo.c	FUNCTION_21	IF_1
0x40015ad	            0xeb10	                           jmp 0x40015bf	      1020	undo.c	FUNCTION_21	IF_1
0x40015af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1023	undo.c	FUNCTION_21	CALL_2
0x40015b3	        0x488b4008	                mov rax, qword [rax + 8]	      1023	undo.c	FUNCTION_21	CALL_2
0x40015b7	          0x4889c7	                            mov rdi, rax	      1023	undo.c	FUNCTION_21	CALL_2
0x40015ba	      0xe800000000	                          call 0x40015bf	      1023	undo.c	FUNCTION_21	CALL_2
0x40015bf	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1024	undo.c	FUNCTION_21
0x40015c3	    0x644833342528	                xor rsi, qword fs:[0x28]	      1024	undo.c	FUNCTION_21
0x40015cc	            0x7405	                            je 0x40015d3	      1024	undo.c	FUNCTION_21
0x40015ce	      0xe800000000	                          call 0x40015d3	      1024	undo.c	FUNCTION_21
0x40015d3	              0xc9	                                   leave	      1024	undo.c	FUNCTION_21
0x40015d4	              0xc3	                                     ret	      1024	undo.c	FUNCTION_21
serialize_visualinfo	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,4:WHILE,0:DO,0	38
0x40026fb	              0x55	                                push rbp	      1483	undo.c	FUNCTION_33
0x40026fc	          0x4889e5	                            mov rbp, rsp	      1483	undo.c	FUNCTION_33
0x40026ff	        0x4883ec10	                           sub rsp, 0x10	      1483	undo.c	FUNCTION_33
0x4002703	        0x48897df8	                mov qword [rbp - 8], rdi	      1483	undo.c	FUNCTION_33
0x4002707	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1483	undo.c	FUNCTION_33
0x400270b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1484	undo.c	FUNCTION_33	CALL_1
0x400270f	          0x488b08	                    mov rcx, qword [rax]	      1484	undo.c	FUNCTION_33	CALL_1
0x4002712	        0x488b5008	                mov rdx, qword [rax + 8]	      1484	undo.c	FUNCTION_33	CALL_1
0x4002716	        0x488b45f8	                mov rax, qword [rbp - 8]	      1484	undo.c	FUNCTION_33	CALL_1
0x400271a	          0x4889ce	                            mov rsi, rcx	      1484	undo.c	FUNCTION_33	CALL_1
0x400271d	          0x4889c7	                            mov rdi, rax	      1484	undo.c	FUNCTION_33	CALL_1
0x4002720	      0xe8d1feffff	                  call sym.serialize_pos	      1484	undo.c	FUNCTION_33	CALL_1
0x4002725	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1485	undo.c	FUNCTION_33	CALL_2
0x4002729	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1485	undo.c	FUNCTION_33	CALL_2
0x400272d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1485	undo.c	FUNCTION_33	CALL_2
0x4002731	        0x488b45f8	                mov rax, qword [rbp - 8]	      1485	undo.c	FUNCTION_33	CALL_2
0x4002735	          0x4889ce	                            mov rsi, rcx	      1485	undo.c	FUNCTION_33	CALL_2
0x4002738	          0x4889c7	                            mov rdi, rax	      1485	undo.c	FUNCTION_33	CALL_2
0x400273b	      0xe8b6feffff	                  call sym.serialize_pos	      1485	undo.c	FUNCTION_33	CALL_2
0x4002740	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1486	undo.c	FUNCTION_33	CALL_3
0x4002744	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1486	undo.c	FUNCTION_33	CALL_3
0x4002747	          0x4863c8	                         movsxd rcx, eax	      1486	undo.c	FUNCTION_33	CALL_3
0x400274a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1486	undo.c	FUNCTION_33	CALL_3
0x400274e	      0xba04000000	                              mov edx, 4	      1486	undo.c	FUNCTION_33	CALL_3
0x4002753	          0x4889ce	                            mov rsi, rcx	      1486	undo.c	FUNCTION_33	CALL_3
0x4002756	          0x4889c7	                            mov rdi, rax	      1486	undo.c	FUNCTION_33	CALL_3
0x4002759	      0xe88becffff	               call sym.undo_write_bytes	      1486	undo.c	FUNCTION_33	CALL_3
0x400275e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1487	undo.c	FUNCTION_33	CALL_4
0x4002762	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1487	undo.c	FUNCTION_33	CALL_4
0x4002765	          0x4863c8	                         movsxd rcx, eax	      1487	undo.c	FUNCTION_33	CALL_4
0x4002768	        0x488b45f8	                mov rax, qword [rbp - 8]	      1487	undo.c	FUNCTION_33	CALL_4
0x400276c	      0xba04000000	                              mov edx, 4	      1487	undo.c	FUNCTION_33	CALL_4
0x4002771	          0x4889ce	                            mov rsi, rcx	      1487	undo.c	FUNCTION_33	CALL_4
0x4002774	          0x4889c7	                            mov rdi, rax	      1487	undo.c	FUNCTION_33	CALL_4
0x4002777	      0xe86decffff	               call sym.undo_write_bytes	      1487	undo.c	FUNCTION_33	CALL_4
0x400277c	              0x90	                                     nop	      1488	undo.c	FUNCTION_33
0x400277d	              0xc9	                                   leave	      1488	undo.c	FUNCTION_33
0x400277e	              0xc3	                                     ret	      1488	undo.c	FUNCTION_33
u_savedel	SWITCH,0:FOR,0:IF,1:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	27
0x4000183	              0x55	                                push rbp	       319	undo.c	FUNCTION_7
0x4000184	          0x4889e5	                            mov rbp, rsp	       319	undo.c	FUNCTION_7
0x4000187	        0x4883ec10	                           sub rsp, 0x10	       319	undo.c	FUNCTION_7
0x400018b	        0x48897df8	                mov qword [rbp - 8], rdi	       319	undo.c	FUNCTION_7
0x400018f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       319	undo.c	FUNCTION_7
0x4000193	    0x8b0500000000	            mov eax, dword [0x04000199] 	       320	undo.c	FUNCTION_7	IF_1
0x4000199	            0x85c0	                           test eax, eax	       320	undo.c	FUNCTION_7	IF_1
0x400019b	            0x7407	                            je 0x40001a4	       320	undo.c	FUNCTION_7	IF_1
0x400019d	      0xb801000000	                              mov eax, 1	       321	undo.c	FUNCTION_7	IF_1
0x40001a2	            0xeb3c	                           jmp 0x40001e0	       321	undo.c	FUNCTION_7	IF_1
0x40001a4	    0x488b05000000	            mov rax, qword [0x040001ab] 	       324	undo.c	FUNCTION_7
0x40001ab	          0x488b00	                    mov rax, qword [rax]	       324	undo.c	FUNCTION_7
0x40001ae	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       323	undo.c	FUNCTION_7	CALL_1
0x40001b2	            0x7406	                            je 0x40001ba	       323	undo.c	FUNCTION_7	CALL_1
0x40001b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       323	undo.c	FUNCTION_7	CALL_1
0x40001b8	            0xeb05	                           jmp 0x40001bf	       323	undo.c	FUNCTION_7	CALL_1
0x40001ba	      0xb802000000	                              mov eax, 2	       323	undo.c	FUNCTION_7	CALL_1
0x40001bf	        0x488b4df8	                mov rcx, qword [rbp - 8]	       323	undo.c	FUNCTION_7	CALL_1
0x40001c3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       323	undo.c	FUNCTION_7	CALL_1
0x40001c7	        0x488d3411	                    lea rsi, [rcx + rdx]	       323	undo.c	FUNCTION_7	CALL_1
0x40001cb	        0x488b55f8	                mov rdx, qword [rbp - 8]	       323	undo.c	FUNCTION_7	CALL_1
0x40001cf	        0x488d7aff	                      lea rdi, [rdx - 1]	       323	undo.c	FUNCTION_7	CALL_1
0x40001d3	      0xb900000000	                              mov ecx, 0	       323	undo.c	FUNCTION_7	CALL_1
0x40001d8	          0x4889c2	                            mov rdx, rax	       323	undo.c	FUNCTION_7	CALL_1
0x40001db	      0xe800000000	                          call 0x40001e0	       323	undo.c	FUNCTION_7	CALL_1
0x40001e0	              0xc9	                                   leave	       325	undo.c	FUNCTION_7
0x40001e1	              0xc3	                                     ret	       325	undo.c	FUNCTION_7
u_freebranch	SWITCH,0:FOR,0:IF,3:functions,0:ELSE,0:CALL,3:WHILE,2:DO,0	59
0x400661e	              0x55	                                push rbp	      3332	undo.c	FUNCTION_54
0x400661f	          0x4889e5	                            mov rbp, rsp	      3332	undo.c	FUNCTION_54
0x4006622	        0x4883ec30	                           sub rsp, 0x30	      3332	undo.c	FUNCTION_54
0x4006626	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3332	undo.c	FUNCTION_54
0x400662a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3332	undo.c	FUNCTION_54
0x400662e	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3332	undo.c	FUNCTION_54
0x4006632	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3337	undo.c	FUNCTION_54	IF_1
0x4006636	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      3337	undo.c	FUNCTION_54	IF_1
0x400663d	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3337	undo.c	FUNCTION_54	IF_1
0x4006641	            0x7535	                           jne 0x4006678	      3337	undo.c	FUNCTION_54	IF_1
0x4006643	            0xeb1e	                           jmp 0x4006663	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x4006645	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x4006649	    0x488b88181200	          mov rcx, qword [rax + 0x1218] 	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x4006650	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x4006654	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x4006658	          0x4889ce	                            mov rsi, rcx	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x400665b	          0x4889c7	                            mov rdi, rax	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x400665e	      0xe8c4feffff	                   call sym.u_freeheader	      3340	undo.c	FUNCTION_54	IF_1	CALL_1
0x4006663	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x4006667	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x400666e	          0x4885c0	                           test rax, rax	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x4006671	            0x75d2	                           jne 0x4006645	      3339	undo.c	FUNCTION_54	IF_1	WHILE_1
0x4006673	      0xe981000000	                           jmp 0x40066f9	      3341	undo.c	FUNCTION_54	IF_1
0x4006678	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3344	undo.c	FUNCTION_54	IF_2
0x400667c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3344	undo.c	FUNCTION_54	IF_2
0x4006680	          0x4885c0	                           test rax, rax	      3344	undo.c	FUNCTION_54	IF_2
0x4006683	            0x7410	                            je 0x4006695	      3344	undo.c	FUNCTION_54	IF_2
0x4006685	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3345	undo.c	FUNCTION_54	IF_2
0x4006689	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3345	undo.c	FUNCTION_54	IF_2
0x400668d	    0x48c740100000	               mov qword [rax + 0x10], 0	      3345	undo.c	FUNCTION_54	IF_2
0x4006695	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3347	undo.c	FUNCTION_54
0x4006699	        0x488945f0	             mov qword [rbp - 0x10], rax	      3347	undo.c	FUNCTION_54
0x400669d	            0xeb53	                           jmp 0x40066f2	      3348	undo.c	FUNCTION_54	WHILE_2
0x400669f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3350	undo.c	FUNCTION_54	WHILE_2
0x40066a3	        0x488945f8	                mov qword [rbp - 8], rax	      3350	undo.c	FUNCTION_54	WHILE_2
0x40066a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3351	undo.c	FUNCTION_54	WHILE_2	IF_3
0x40066ab	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3351	undo.c	FUNCTION_54	WHILE_2	IF_3
0x40066af	          0x4885c0	                           test rax, rax	      3351	undo.c	FUNCTION_54	WHILE_2	IF_3
0x40066b2	            0x741b	                            je 0x40066cf	      3351	undo.c	FUNCTION_54	WHILE_2	IF_3
0x40066b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x40066b8	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x40066bc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x40066c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x40066c4	          0x4889ce	                            mov rsi, rcx	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x40066c7	          0x4889c7	                            mov rdi, rax	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x40066ca	      0xe84fffffff	                   call sym.u_freebranch	      3352	undo.c	FUNCTION_54	WHILE_2	CALL_2
0x40066cf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3353	undo.c	FUNCTION_54	WHILE_2
0x40066d3	        0x488b4008	                mov rax, qword [rax + 8]	      3353	undo.c	FUNCTION_54	WHILE_2
0x40066d7	        0x488945f0	             mov qword [rbp - 0x10], rax	      3353	undo.c	FUNCTION_54	WHILE_2
0x40066db	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x40066df	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x40066e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x40066e7	          0x4889ce	                            mov rsi, rcx	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x40066ea	          0x4889c7	                            mov rdi, rax	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x40066ed	      0xe809000000	                  call sym.u_freeentries	      3354	undo.c	FUNCTION_54	WHILE_2	CALL_3
0x40066f2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3348	undo.c	FUNCTION_54	WHILE_2
0x40066f7	            0x75a6	                           jne 0x400669f	      3348	undo.c	FUNCTION_54	WHILE_2
0x40066f9	              0xc9	                                   leave	      3356	undo.c	FUNCTION_54
0x40066fa	              0xc3	                                     ret	      3356	undo.c	FUNCTION_54
u_save	SWITCH,0:FOR,0:IF,3:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	40
0x400006f	              0x55	                                push rbp	       265	undo.c	FUNCTION_4
0x4000070	          0x4889e5	                            mov rbp, rsp	       265	undo.c	FUNCTION_4
0x4000073	        0x4883ec10	                           sub rsp, 0x10	       265	undo.c	FUNCTION_4
0x4000077	        0x48897df8	                mov qword [rbp - 8], rdi	       265	undo.c	FUNCTION_4
0x400007b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       265	undo.c	FUNCTION_4
0x400007f	    0x8b0500000000	            mov eax, dword [0x04000085] 	       266	undo.c	FUNCTION_4	IF_1
0x4000085	            0x85c0	                           test eax, eax	       266	undo.c	FUNCTION_4	IF_1
0x4000087	            0x7407	                            je 0x4000090	       266	undo.c	FUNCTION_4	IF_1
0x4000089	      0xb801000000	                              mov eax, 1	       267	undo.c	FUNCTION_4	IF_1
0x400008e	            0xeb6d	                           jmp 0x40000fd	       267	undo.c	FUNCTION_4	IF_1
0x4000090	    0x488b05000000	            mov rax, qword [0x04000097] 	       269	undo.c	FUNCTION_4	IF_2
0x4000097	          0x488b00	                    mov rax, qword [rax]	       269	undo.c	FUNCTION_4	IF_2
0x400009a	        0x483b45f8	                cmp rax, qword [rbp - 8]	       269	undo.c	FUNCTION_4	IF_2
0x400009e	            0x7c1e	                            jl 0x40000be	       269	undo.c	FUNCTION_4	IF_2
0x40000a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       270	undo.c	FUNCTION_4	IF_2
0x40000a4	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       270	undo.c	FUNCTION_4	IF_2
0x40000a8	            0x7d14	                           jge 0x40000be	       270	undo.c	FUNCTION_4	IF_2
0x40000aa	    0x488b05000000	            mov rax, qword [0x040000b1] 	       271	undo.c	FUNCTION_4	IF_2
0x40000b1	          0x488b00	                    mov rax, qword [rax]	       271	undo.c	FUNCTION_4	IF_2
0x40000b4	        0x4883c001	                              add rax, 1	       271	undo.c	FUNCTION_4	IF_2
0x40000b8	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       271	undo.c	FUNCTION_4	IF_2
0x40000bc	            0x7d07	                           jge 0x40000c5	       271	undo.c	FUNCTION_4	IF_2
0x40000be	      0xb800000000	                              mov eax, 0	       272	undo.c	FUNCTION_4	IF_2
0x40000c3	            0xeb38	                           jmp 0x40000fd	       272	undo.c	FUNCTION_4	IF_2
0x40000c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       274	undo.c	FUNCTION_4	IF_3
0x40000c9	        0x4883c002	                              add rax, 2	       274	undo.c	FUNCTION_4	IF_3
0x40000cd	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       274	undo.c	FUNCTION_4	IF_3
0x40000d1	            0x7510	                           jne 0x40000e3	       274	undo.c	FUNCTION_4	IF_3
0x40000d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       275	undo.c	FUNCTION_4	CALL_1
0x40000d7	        0x4883c001	                              add rax, 1	       275	undo.c	FUNCTION_4	CALL_1
0x40000db	          0x4889c7	                            mov rdi, rax	       275	undo.c	FUNCTION_4	CALL_1
0x40000de	      0xe800000000	                          call 0x40000e3	       275	undo.c	FUNCTION_4	CALL_1
0x40000e3	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       277	undo.c	FUNCTION_4	CALL_2
0x40000e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	undo.c	FUNCTION_4	CALL_2
0x40000eb	      0xb900000000	                              mov ecx, 0	       277	undo.c	FUNCTION_4	CALL_2
0x40000f0	      0xba00000000	                              mov edx, 0	       277	undo.c	FUNCTION_4	CALL_2
0x40000f5	          0x4889c7	                            mov rdi, rax	       277	undo.c	FUNCTION_4	CALL_2
0x40000f8	      0xe800000000	                          call 0x40000fd	       277	undo.c	FUNCTION_4	CALL_2
0x40000fd	              0xc9	                                   leave	       278	undo.c	FUNCTION_4
0x40000fe	              0xc3	                                     ret	       278	undo.c	FUNCTION_4
undo_flush	SWITCH,0:FOR,0:IF,2:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	44
0x400120f	              0x55	                                push rbp	       920	undo.c	FUNCTION_16
0x4001210	          0x4889e5	                            mov rbp, rsp	       920	undo.c	FUNCTION_16
0x4001213	        0x4883ec10	                           sub rsp, 0x10	       920	undo.c	FUNCTION_16
0x4001217	        0x48897df8	                mov qword [rbp - 8], rdi	       920	undo.c	FUNCTION_16
0x400121b	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	undo.c	FUNCTION_16	IF_1
0x400121f	        0x488b4018	            mov rax, qword [rax + 0x18] 	       921	undo.c	FUNCTION_16	IF_1
0x4001223	          0x4885c0	                           test rax, rax	       921	undo.c	FUNCTION_16	IF_1
0x4001226	            0x747e	                            je 0x40012a6	       921	undo.c	FUNCTION_16	IF_1
0x4001228	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	undo.c	FUNCTION_16	IF_1
0x400122c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       921	undo.c	FUNCTION_16	IF_1
0x4001230	          0x4885c0	                           test rax, rax	       921	undo.c	FUNCTION_16	IF_1
0x4001233	            0x7471	                            je 0x40012a6	       921	undo.c	FUNCTION_16	IF_1
0x4001235	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	undo.c	FUNCTION_16	IF_1
0x4001239	        0x488b4020	            mov rax, qword [rax + 0x20] 	       921	undo.c	FUNCTION_16	IF_1
0x400123d	          0x4885c0	                           test rax, rax	       921	undo.c	FUNCTION_16	IF_1
0x4001240	            0x7464	                            je 0x40012a6	       921	undo.c	FUNCTION_16	IF_1
0x4001242	        0x488b45f8	                mov rax, qword [rbp - 8]	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x4001246	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x400124a	        0x488b45f8	                mov rax, qword [rbp - 8]	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x400124e	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x4001252	        0x488b45f8	                mov rax, qword [rbp - 8]	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x4001256	        0x488b4010	            mov rax, qword [rax + 0x10] 	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x400125a	          0x4889ce	                            mov rsi, rcx	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x400125d	          0x4889c7	                            mov rdi, rax	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x4001260	      0xe800000000	                          call 0x4001265	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x4001265	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4001269	        0x488b5008	                mov rdx, qword [rax + 8]	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x400126d	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4001271	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4001275	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4001279	        0x488b4018	            mov rax, qword [rax + 0x18] 	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x400127d	          0x4889d1	                            mov rcx, rdx	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4001280	      0xba01000000	                              mov edx, 1	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4001285	          0x4889c7	                            mov rdi, rax	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4001288	      0xe800000000	                          call 0x400128d	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x400128d	        0x4883f801	                              cmp rax, 1	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4001291	            0x7407	                            je 0x400129a	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4001293	      0xb800000000	                              mov eax, 0	       925	undo.c	FUNCTION_16	IF_1	IF_2
0x4001298	            0xeb11	                           jmp 0x40012ab	       925	undo.c	FUNCTION_16	IF_1	IF_2
0x400129a	        0x488b45f8	                mov rax, qword [rbp - 8]	       926	undo.c	FUNCTION_16	IF_1
0x400129e	    0x48c740200000	               mov qword [rax + 0x20], 0	       926	undo.c	FUNCTION_16	IF_1
0x40012a6	      0xb801000000	                              mov eax, 1	       928	undo.c	FUNCTION_16
0x40012ab	              0xc9	                                   leave	       929	undo.c	FUNCTION_16
0x40012ac	              0xc3	                                     ret	       929	undo.c	FUNCTION_16
read_string_decrypt	SWITCH,0:FOR,0:IF,3:functions,0:ELSE,0:CALL,4:WHILE,0:DO,0	52
0x400189b	              0x55	                                push rbp	      1121	undo.c	FUNCTION_25
0x400189c	          0x4889e5	                            mov rbp, rsp	      1121	undo.c	FUNCTION_25
0x400189f	        0x4883ec20	                           sub rsp, 0x20	      1121	undo.c	FUNCTION_25
0x40018a3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1121	undo.c	FUNCTION_25
0x40018a7	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1121	undo.c	FUNCTION_25
0x40018aa	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1122	undo.c	FUNCTION_25	CALL_1
0x40018ad	          0x83c001	                              add eax, 1	      1122	undo.c	FUNCTION_25	CALL_1
0x40018b0	            0x89c7	                            mov edi, eax	      1122	undo.c	FUNCTION_25	CALL_1
0x40018b2	      0xe800000000	                          call 0x40018b7	      1122	undo.c	FUNCTION_25	CALL_1
0x40018b7	        0x488945f8	                mov qword [rbp - 8], rax	      1122	undo.c	FUNCTION_25	CALL_1
0x40018bb	      0x48837df800	                  cmp qword [rbp - 8], 0	      1124	undo.c	FUNCTION_25	IF_1
0x40018c0	            0x747d	                            je 0x400193f	      1124	undo.c	FUNCTION_25	IF_1
0x40018c2	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40018c6	            0x7e30	                           jle 0x40018f8	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40018c8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40018cb	          0x4863d0	                         movsxd rdx, eax	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40018ce	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40018d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40018d6	          0x4889ce	                            mov rsi, rcx	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40018d9	          0x4889c7	                            mov rdi, rax	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40018dc	      0xe809feffff	                      call sym.undo_read	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40018e1	            0x85c0	                           test eax, eax	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40018e3	            0x7513	                           jne 0x40018f8	      1126	undo.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x40018e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1128	undo.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x40018e9	          0x4889c7	                            mov rdi, rax	      1128	undo.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x40018ec	      0xe800000000	                          call 0x40018f1	      1128	undo.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x40018f1	      0xb800000000	                              mov eax, 0	      1129	undo.c	FUNCTION_25	IF_1	IF_2
0x40018f6	            0xeb4b	                           jmp 0x4001943	      1129	undo.c	FUNCTION_25	IF_1	IF_2
0x40018f8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1131	undo.c	FUNCTION_25	IF_1
0x40018fb	          0x4863d0	                         movsxd rdx, eax	      1131	undo.c	FUNCTION_25	IF_1
0x40018fe	        0x488b45f8	                mov rax, qword [rbp - 8]	      1131	undo.c	FUNCTION_25	IF_1
0x4001902	          0x4801d0	                            add rax, rdx	      1131	undo.c	FUNCTION_25	IF_1
0x4001905	          0xc60000	                       mov byte [rax], 0	      1131	undo.c	FUNCTION_25	IF_1
0x4001908	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x400190c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x4001910	          0x4885c0	                           test rax, rax	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x4001913	            0x742a	                            je 0x400193f	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x4001915	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x4001919	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x400191d	          0x4885c0	                           test rax, rax	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x4001920	            0x751d	                           jne 0x400193f	      1133	undo.c	FUNCTION_25	IF_1	IF_3
0x4001922	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x4001925	          0x4863d0	                         movsxd rdx, eax	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x4001928	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x400192c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x4001930	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x4001934	          0x4889ce	                            mov rsi, rcx	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x4001937	          0x4889c7	                            mov rdi, rax	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x400193a	      0xe800000000	                          call 0x400193f	      1134	undo.c	FUNCTION_25	IF_1	CALL_4
0x400193f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1137	undo.c	FUNCTION_25
0x4001943	              0xc9	                                   leave	      1138	undo.c	FUNCTION_25
0x4001944	              0xc3	                                     ret	      1138	undo.c	FUNCTION_25
undo_read_byte	SWITCH,0:FOR,0:IF,1:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	30
0x40015d5	              0x55	                                push rbp	      1028	undo.c	FUNCTION_22
0x40015d6	          0x4889e5	                            mov rbp, rsp	      1028	undo.c	FUNCTION_22
0x40015d9	        0x4883ec20	                           sub rsp, 0x20	      1028	undo.c	FUNCTION_22
0x40015dd	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1028	undo.c	FUNCTION_22
0x40015e1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1028	undo.c	FUNCTION_22
0x40015ea	        0x488945f8	                mov qword [rbp - 8], rax	      1028	undo.c	FUNCTION_22
0x40015ee	            0x31c0	                            xor eax, eax	      1028	undo.c	FUNCTION_22
0x40015f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1030	undo.c	FUNCTION_22	IF_1
0x40015f4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1030	undo.c	FUNCTION_22	IF_1
0x40015f8	          0x4885c0	                           test rax, rax	      1030	undo.c	FUNCTION_22	IF_1
0x40015fb	            0x7421	                            je 0x400161e	      1030	undo.c	FUNCTION_22	IF_1
0x40015fd	        0x488d4df7	                      lea rcx, [rbp - 9]	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x4001601	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x4001605	      0xba01000000	                              mov edx, 1	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x400160a	          0x4889ce	                            mov rsi, rcx	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x400160d	          0x4889c7	                            mov rdi, rax	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x4001610	      0xe8d5000000	                      call sym.undo_read	      1034	undo.c	FUNCTION_22	IF_1	CALL_1
0x4001615	         0xfb645f7	               movzx eax, byte [rbp - 9]	      1035	undo.c	FUNCTION_22	IF_1
0x4001619	           0xfb6c0	                           movzx eax, al	      1035	undo.c	FUNCTION_22	IF_1
0x400161c	            0xeb10	                           jmp 0x400162e	      1035	undo.c	FUNCTION_22	IF_1
0x400161e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1038	undo.c	FUNCTION_22	CALL_2
0x4001622	        0x488b4008	                mov rax, qword [rax + 8]	      1038	undo.c	FUNCTION_22	CALL_2
0x4001626	          0x4889c7	                            mov rdi, rax	      1038	undo.c	FUNCTION_22	CALL_2
0x4001629	      0xe800000000	                          call 0x400162e	      1038	undo.c	FUNCTION_22	CALL_2
0x400162e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1039	undo.c	FUNCTION_22
0x4001632	    0x644833142528	                xor rdx, qword fs:[0x28]	      1039	undo.c	FUNCTION_22
0x400163b	            0x7405	                            je 0x4001642	      1039	undo.c	FUNCTION_22
0x400163d	      0xe800000000	                          call 0x4001642	      1039	undo.c	FUNCTION_22
0x4001642	              0xc9	                                   leave	      1039	undo.c	FUNCTION_22
0x4001643	              0xc3	                                     ret	      1039	undo.c	FUNCTION_22
u_add_time	SWITCH,0:FOR,0:IF,2:functions,0:ELSE,2:CALL,8:WHILE,0:DO,0	60
0x4006010	              0x55	                                push rbp	      3113	undo.c	FUNCTION_45
0x4006011	          0x4889e5	                            mov rbp, rsp	      3113	undo.c	FUNCTION_45
0x4006014	              0x53	                                push rbx	      3113	undo.c	FUNCTION_45
0x4006015	        0x4883ec38	                           sub rsp, 0x38	      3113	undo.c	FUNCTION_45
0x4006019	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3113	undo.c	FUNCTION_45
0x400601d	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3113	undo.c	FUNCTION_45
0x4006021	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3113	undo.c	FUNCTION_45
0x4006025	      0xe800000000	                          call 0x400602a	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x400602a	          0x4889c2	                            mov rdx, rax	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x400602d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x4006031	          0x4829c2	                            sub rdx, rax	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x4006034	          0x4889d0	                            mov rax, rdx	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x4006037	        0x4883f863	                           cmp rax, 0x63	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x400603b	            0x7e66	                           jle 0x40060a3	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x400603d	        0x488d45c8	                   lea rax, [rbp - 0x38]	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x4006041	          0x4889c7	                            mov rdi, rax	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x4006044	      0xe800000000	                          call 0x4006049	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x4006049	        0x488945e8	             mov qword [rbp - 0x18], rax	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x400604d	      0xe800000000	                          call 0x4006052	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4006052	          0x4889c2	                            mov rdx, rax	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4006055	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4006059	          0x4829c2	                            sub rdx, rax	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x400605c	          0x4889d0	                            mov rax, rdx	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x400605f	    0x483dbfa80000	                         cmp rax, 0xa8bf	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4006065	            0x7f1e	                            jg 0x4006085	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4006067	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x400606b	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x400606f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4006073	          0x4889d1	                            mov rcx, rdx	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4006076	      0xba00000000	                              mov edx, 0	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x400607b	          0x4889c7	                            mov rdi, rax	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x400607e	      0xe800000000	                          call 0x4006083	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4006083	            0xeb55	                           jmp 0x40060da	      3131	undo.c	FUNCTION_45
0x4006085	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4006089	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x400608d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4006091	          0x4889d1	                            mov rcx, rdx	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4006094	      0xba00000000	                              mov edx, 0	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4006099	          0x4889c7	                            mov rdi, rax	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x400609c	      0xe800000000	                          call 0x40060a1	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x40060a1	            0xeb37	                           jmp 0x40060da	      3131	undo.c	FUNCTION_45
0x40060a3	      0xe800000000	                          call 0x40060a8	      3130	undo.c	FUNCTION_45	CALL_8
0x40060a8	          0x4889c2	                            mov rdx, rax	      3130	undo.c	FUNCTION_45	CALL_8
0x40060ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060af	          0x4889d3	                            mov rbx, rdx	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060b2	          0x4829c3	                            sub rbx, rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060b5	      0xbf00000000	                              mov edi, 0	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060ba	      0xe800000000	                          call 0x40060bf	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060bf	          0x4889c2	                            mov rdx, rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060c2	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060ca	          0x4889d9	                            mov rcx, rbx	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060cd	          0x4889c7	                            mov rdi, rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060d0	      0xb800000000	                              mov eax, 0	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060d5	      0xe800000000	                          call 0x40060da	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x40060da	              0x90	                                     nop	      3131	undo.c	FUNCTION_45
0x40060db	        0x4883c438	                           add rsp, 0x38	      3131	undo.c	FUNCTION_45
0x40060df	              0x5b	                                 pop rbx	      3131	undo.c	FUNCTION_45
0x40060e0	              0x5d	                                 pop rbp	      3131	undo.c	FUNCTION_45
0x40060e1	              0xc3	                                     ret	      3131	undo.c	FUNCTION_45
u_undoredo	SWITCH,0:FOR,5:IF,33:functions,0:ELSE,12:CALL,31:WHILE,1:DO,0	640
0x4004b51	              0x55	                                push rbp	      2615	undo.c	FUNCTION_41
0x4004b52	          0x4889e5	                            mov rbp, rsp	      2615	undo.c	FUNCTION_41
0x4004b55	              0x53	                                push rbx	      2615	undo.c	FUNCTION_41
0x4004b56	    0x4881ec680200	                          sub rsp, 0x268	      2615	undo.c	FUNCTION_41
0x4004b5d	    0x89bd9cfdffff	            mov dword [rbp - 0x264], edi	      2615	undo.c	FUNCTION_41
0x4004b63	    0x64488b042528	                mov rax, qword fs:[0x28]	      2615	undo.c	FUNCTION_41
0x4004b6c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2615	undo.c	FUNCTION_41
0x4004b70	            0x31c0	                            xor eax, eax	      2615	undo.c	FUNCTION_41
0x4004b72	    0x48c785b0fdff	              mov qword [rbp - 0x250], 0	      2616	undo.c	FUNCTION_41
0x4004b7d	    0x48c785c8fdff	     mov qword [rbp - 0x238], 0x7fffffff	      2621	undo.c	FUNCTION_41
0x4004b88	    0x48c785e0fdff	              mov qword [rbp - 0x220], 0	      2624	undo.c	FUNCTION_41
0x4004b93	    0x488b05000000	            mov rax, qword [0x04004b9a] 	      2630	undo.c	FUNCTION_41
0x4004b9a	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2630	undo.c	FUNCTION_41
0x4004ba1	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	      2630	undo.c	FUNCTION_41
0x4004ba8	      0xe800000000	                          call 0x4004bad	      2634	undo.c	FUNCTION_41	CALL_1
0x4004bad	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2639	undo.c	FUNCTION_41
0x4004bb4	          0x8b4058	            mov eax, dword [rax + 0x58] 	      2639	undo.c	FUNCTION_41
0x4004bb7	    0x8985a8fdffff	            mov dword [rbp - 0x258], eax	      2639	undo.c	FUNCTION_41
0x4004bbd	    0x488b05000000	            mov rax, qword [0x04004bc4] 	      2640	undo.c	FUNCTION_41
0x4004bc4	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      2640	undo.c	FUNCTION_41
0x4004bca	            0x85c0	                           test eax, eax	      2640	undo.c	FUNCTION_41
0x4004bcc	           0xf95c0	                                setne al	      2640	undo.c	FUNCTION_41
0x4004bcf	           0xfb6d0	                           movzx edx, al	      2640	undo.c	FUNCTION_41
0x4004bd2	    0x488b05000000	            mov rax, qword [0x04004bd9] 	      2641	undo.c	FUNCTION_41
0x4004bd9	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2641	undo.c	FUNCTION_41
0x4004bdc	          0x83e001	                              and eax, 1	      2641	undo.c	FUNCTION_41
0x4004bdf	            0x85c0	                           test eax, eax	      2641	undo.c	FUNCTION_41
0x4004be1	            0x7407	                            je 0x4004bea	      2641	undo.c	FUNCTION_41
0x4004be3	      0xb802000000	                              mov eax, 2	      2641	undo.c	FUNCTION_41
0x4004be8	            0xeb05	                           jmp 0x4004bef	      2641	undo.c	FUNCTION_41
0x4004bea	      0xb800000000	                              mov eax, 0	      2641	undo.c	FUNCTION_41
0x4004bef	             0x1d0	                            add eax, edx	      2640	undo.c	FUNCTION_41
0x4004bf1	    0x8985acfdffff	            mov dword [rbp - 0x254], eax	      2640	undo.c	FUNCTION_41
0x4004bf7	      0xe800000000	                          call 0x4004bfc	      2642	undo.c	FUNCTION_41	CALL_3
0x4004bfc	    0x488b05000000	            mov rax, qword [0x04004c03] 	      2647	undo.c	FUNCTION_41	CALL_4
0x4004c03	    0x488d88580100	                  lea rcx, [rax + 0x158]	      2647	undo.c	FUNCTION_41	CALL_4
0x4004c0a	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	      2647	undo.c	FUNCTION_41	CALL_4
0x4004c11	      0xbaa0010000	                          mov edx, 0x1a0	      2647	undo.c	FUNCTION_41	CALL_4
0x4004c16	          0x4889ce	                            mov rsi, rcx	      2647	undo.c	FUNCTION_41	CALL_4
0x4004c19	          0x4889c7	                            mov rdi, rax	      2647	undo.c	FUNCTION_41	CALL_4
0x4004c1c	      0xe800000000	                          call 0x4004c21	      2647	undo.c	FUNCTION_41	CALL_4
0x4004c21	    0x488b05000000	            mov rax, qword [0x04004c28] 	      2648	undo.c	FUNCTION_41
0x4004c28	    0x488b90f80200	           mov rdx, qword [rax + 0x2f8] 	      2648	undo.c	FUNCTION_41
0x4004c2f	    0x48899510feff	            mov qword [rbp - 0x1f0], rdx	      2648	undo.c	FUNCTION_41
0x4004c36	    0x488b90000300	           mov rdx, qword [rax + 0x300] 	      2648	undo.c	FUNCTION_41
0x4004c3d	    0x48899518feff	            mov qword [rbp - 0x1e8], rdx	      2648	undo.c	FUNCTION_41
0x4004c44	    0x488b90080300	           mov rdx, qword [rax + 0x308] 	      2648	undo.c	FUNCTION_41
0x4004c4b	    0x48899520feff	            mov qword [rbp - 0x1e0], rdx	      2648	undo.c	FUNCTION_41
0x4004c52	    0x488b90100300	           mov rdx, qword [rax + 0x310] 	      2648	undo.c	FUNCTION_41
0x4004c59	    0x48899528feff	            mov qword [rbp - 0x1d8], rdx	      2648	undo.c	FUNCTION_41
0x4004c60	    0x488b80180300	           mov rax, qword [rax + 0x318] 	      2648	undo.c	FUNCTION_41
0x4004c67	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      2648	undo.c	FUNCTION_41
0x4004c6e	    0x488b05000000	            mov rax, qword [0x04004c75] 	      2649	undo.c	FUNCTION_41
0x4004c75	    0x488b15000000	            mov rdx, qword [0x04004c7c] 	      2649	undo.c	FUNCTION_41
0x4004c7c	          0x488b12	                    mov rdx, qword [rdx]	      2649	undo.c	FUNCTION_41
0x4004c7f	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      2649	undo.c	FUNCTION_41
0x4004c86	    0x488b05000000	            mov rax, qword [0x04004c8d] 	      2650	undo.c	FUNCTION_41
0x4004c8d	    0xc780e8110000	            mov dword [rax + 0x11e8], 0 	      2650	undo.c	FUNCTION_41
0x4004c97	    0x488b05000000	            mov rax, qword [0x04004c9e] 	      2651	undo.c	FUNCTION_41
0x4004c9e	    0x48c780001200	            mov qword [rax + 0x1200], 0 	      2651	undo.c	FUNCTION_41
0x4004ca9	    0x488b05000000	            mov rax, qword [0x04004cb0] 	      2652	undo.c	FUNCTION_41
0x4004cb0	    0xc78008120000	            mov dword [rax + 0x1208], 0 	      2652	undo.c	FUNCTION_41
0x4004cba	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2654	undo.c	FUNCTION_41	FOR_1
0x4004cc1	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2654	undo.c	FUNCTION_41	FOR_1
0x4004cc5	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      2654	undo.c	FUNCTION_41	FOR_1
0x4004ccc	      0xe952070000	                           jmp 0x4005423	      2654	undo.c	FUNCTION_41	FOR_1
0x4004cd1	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2656	undo.c	FUNCTION_41	FOR_1
0x4004cd8	        0x488b4008	                mov rax, qword [rax + 8]	      2656	undo.c	FUNCTION_41	FOR_1
0x4004cdc	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      2656	undo.c	FUNCTION_41	FOR_1
0x4004ce3	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2657	undo.c	FUNCTION_41	FOR_1
0x4004cea	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2657	undo.c	FUNCTION_41	FOR_1
0x4004cee	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      2657	undo.c	FUNCTION_41	FOR_1
0x4004cf5	    0x4883bdb8fdff	              cmp qword [rbp - 0x248], 0	      2658	undo.c	FUNCTION_41	FOR_1	IF_1
0x4004cfd	            0x7515	                           jne 0x4004d14	      2658	undo.c	FUNCTION_41	FOR_1	IF_1
0x4004cff	    0x488b05000000	            mov rax, qword [0x04004d06] 	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4004d06	          0x488b00	                    mov rax, qword [rax]	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4004d09	        0x4883c001	                              add rax, 1	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4004d0d	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4004d14	    0x488b05000000	            mov rax, qword [0x04004d1b] 	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d1b	          0x488b00	                    mov rax, qword [rax]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d1e	    0x483b85f0fdff	            cmp rax, qword [rbp - 0x210]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d25	            0x7c27	                            jl 0x4004d4e	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d27	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d2e	    0x483b85b8fdff	            cmp rax, qword [rbp - 0x248]	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d35	            0x7d17	                           jge 0x4004d4e	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d37	    0x488b05000000	            mov rax, qword [0x04004d3e] 	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d3e	          0x488b00	                    mov rax, qword [rax]	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d41	        0x4883c001	                              add rax, 1	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d45	    0x483b85b8fdff	            cmp rax, qword [rbp - 0x248]	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d4c	            0x7d21	                           jge 0x4004d6f	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4004d4e	      0xe800000000	                          call 0x4004d53	      2663	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_5
0x4004d53	      0xbf00000000	                              mov edi, 0	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4004d58	      0xe800000000	                          call 0x4004d5d	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4004d5d	          0x4889c7	                            mov rdi, rax	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4004d60	      0xe800000000	                          call 0x4004d65	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4004d65	      0xe800000000	                          call 0x4004d6a	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4004d6a	      0xe9f90a0000	                           jmp 0x4005868	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4004d6f	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2669	undo.c	FUNCTION_41	FOR_1
0x4004d76	    0x482b85f0fdff	            sub rax, qword [rbp - 0x210]	      2669	undo.c	FUNCTION_41	FOR_1
0x4004d7d	        0x4883e801	                              sub rax, 1	      2669	undo.c	FUNCTION_41	FOR_1
0x4004d81	    0x488985f8fdff	            mov qword [rbp - 0x208], rax	      2669	undo.c	FUNCTION_41	FOR_1
0x4004d88	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2670	undo.c	FUNCTION_41	FOR_1
0x4004d8f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2670	undo.c	FUNCTION_41	FOR_1
0x4004d93	    0x48898500feff	            mov qword [rbp - 0x200], rax	      2670	undo.c	FUNCTION_41	FOR_1
0x4004d9a	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4004da1	    0x483b85c8fdff	            cmp rax, qword [rbp - 0x238]	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4004da8	     0xf8d8c010000	                           jge 0x4004f3a	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4004dae	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4004db5	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4004db9	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4004dc0	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004dc7	    0x483b85f0fdff	            cmp rax, qword [rbp - 0x210]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004dce	            0x7c57	                            jl 0x4004e27	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004dd0	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004dd7	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004dde	          0x4801d0	                            add rax, rdx	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004de1	        0x4883c001	                              add rax, 1	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004de5	    0x483b85c0fdff	            cmp rax, qword [rbp - 0x240]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004dec	            0x7c39	                            jl 0x4004e27	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004dee	    0x488b0d000000	            mov rcx, qword [0x04004df5] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004df5	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004dfc	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004e00	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004e04	        0x48894138	             mov qword [rcx + 0x38], rax	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004e08	        0x48895140	             mov qword [rcx + 0x40], rdx	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004e0c	    0x488b05000000	            mov rax, qword [0x04004e13] 	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004e13	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004e17	        0x4883e801	                              sub rax, 1	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004e1b	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004e22	      0xe913010000	                           jmp 0x4004f3a	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4004e27	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4004e32	            0xeb53	                           jmp 0x4004e87	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4004e34	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e3b	        0x488d5001	                      lea rdx, [rax + 1]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e3f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e46	          0x4801d0	                            add rax, rdx	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e49	          0x4889c7	                            mov rdi, rax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e4c	      0xe800000000	                          call 0x4004e51	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e51	          0x4889c1	                            mov rcx, rax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e54	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e5b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e5f	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e66	        0x48c1e203	                              shl rdx, 3	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e6a	          0x4801d0	                            add rax, rdx	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e6d	          0x488b00	                    mov rax, qword [rax]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e70	          0x4889ce	                            mov rsi, rcx	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e73	          0x4889c7	                            mov rdi, rax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e76	      0xe800000000	                          call 0x4004e7b	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e7b	            0x85c0	                           test eax, eax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e7d	            0x752a	                           jne 0x4004ea9	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4004e7f	    0x488385d0fdff	              add qword [rbp - 0x230], 1	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4004e87	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4004e8e	    0x483b8500feff	            cmp rax, qword [rbp - 0x200]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4004e95	            0x7d13	                           jge 0x4004eaa	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4004e97	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4004e9e	    0x483b85f8fdff	            cmp rax, qword [rbp - 0x208]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4004ea5	            0x7c8d	                            jl 0x4004e34	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4004ea7	            0xeb01	                           jmp 0x4004eaa	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4004ea9	              0x90	                                     nop	      2690	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5
0x4004eaa	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004eb1	    0x483b8500feff	            cmp rax, qword [rbp - 0x200]	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004eb8	            0x7542	                           jne 0x4004efc	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004eba	    0x4881bdc8fdff	    cmp qword [rbp - 0x238], 0x7fffffff 	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004ec5	            0x7535	                           jne 0x4004efc	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004ec7	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004ece	          0x488b00	                    mov rax, qword [rax]	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004ed1	          0x4885c0	                           test rax, rax	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004ed4	            0x7526	                           jne 0x4004efc	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004ed6	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2693	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004edd	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2693	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004ee4	    0x488b05000000	            mov rax, qword [0x04004eeb] 	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004eeb	    0x488b95c8fdff	            mov rdx, qword [rbp - 0x238]	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004ef2	        0x4883c201	                              add rdx, 1	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004ef6	        0x48895038	             mov qword [rax + 0x38], rdx	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004efa	            0xeb3e	                           jmp 0x4004f3a	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4004efc	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4004f03	    0x483b8500feff	            cmp rax, qword [rbp - 0x200]	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4004f0a	            0x7d2e	                           jge 0x4004f3a	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4004f0c	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4004f13	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4004f1a	          0x4801d0	                            add rax, rdx	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4004f1d	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4004f24	    0x488b05000000	            mov rax, qword [0x04004f2b] 	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4004f2b	    0x488b95c8fdff	            mov rdx, qword [rbp - 0x238]	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4004f32	        0x4883c201	                              add rdx, 1	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4004f36	        0x48895038	             mov qword [rax + 0x38], rdx	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4004f3a	    0xc785a4fdffff	              mov dword [rbp - 0x25c], 0	      2704	undo.c	FUNCTION_41	FOR_1
0x4004f44	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4004f4c	     0xf8e37010000	                           jle 0x4005089	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4004f52	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4004f59	        0x48c1e003	                              shl rax, 3	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4004f5d	      0xbe00000000	                              mov esi, 0	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4004f62	          0x4889c7	                            mov rdi, rax	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4004f65	      0xe800000000	                          call 0x4004f6a	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4004f6a	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4004f71	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4004f79	            0x7560	                           jne 0x4004fdb	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4004f7b	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4004f82	        0x48c1e003	                              shl rax, 3	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4004f86	          0x4889c7	                            mov rdi, rax	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4004f89	      0xe800000000	                          call 0x4004f8e	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4004f8e	            0xeb3c	                           jmp 0x4004fcc	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4004f90	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2719	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4004f97	          0x488b00	                    mov rax, qword [rax]	      2719	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4004f9a	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      2719	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4004fa1	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_12
0x4004fa8	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_12
0x4004fac	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_12
0x4004fb3	          0x4889d6	                            mov rsi, rdx	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_12
0x4004fb6	          0x4889c7	                            mov rdi, rax	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_12
0x4004fb9	      0xe815180000	                    call sym.u_freeentry	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_12
0x4004fbe	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      2721	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4004fc5	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      2721	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4004fcc	    0x4883bdd8fdff	              cmp qword [rbp - 0x228], 0	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4004fd4	            0x75ba	                           jne 0x4004f90	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4004fd6	      0xe956040000	                           jmp 0x4005431	      2723	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4004fdb	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4004fe2	        0x4883e801	                              sub rax, 1	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4004fe6	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4004fed	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4004ff4	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4004ffb	            0xeb74	                           jmp 0x4005071	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4004ffd	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4005004	    0x488d14c50000	                        lea rdx, [rax*8]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x400500c	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4005013	        0x488d1c02	                    lea rbx, [rdx + rax]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4005017	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x400501e	          0x4889c7	                            mov rdi, rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4005021	      0xe8ba1b0000	                    call sym.u_save_line	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4005026	          0x488903	                    mov qword [rbx], rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4005029	          0x488b03	                    mov rax, qword [rbx]	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x400502c	          0x4885c0	                           test rax, rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x400502f	            0x750a	                           jne 0x400503b	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4005031	      0xbf00000000	                              mov edi, 0	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_14
0x4005036	      0xe800000000	                          call 0x400503b	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_14
0x400503b	    0x488b05000000	            mov rax, qword [0x04005042] 	      2733	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4005042	          0x488b00	                    mov rax, qword [rax]	      2733	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4005045	        0x4883f801	                              cmp rax, 1	      2733	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4005049	            0x750a	                           jne 0x4005055	      2733	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x400504b	    0xc785a4fdffff	              mov dword [rbp - 0x25c], 1	      2734	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4005055	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x400505c	      0xbe00000000	                              mov esi, 0	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4005061	          0x4889c7	                            mov rdi, rax	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4005064	      0xe800000000	                          call 0x4005069	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4005069	    0x4883adc0fdff	              sub qword [rbp - 0x240], 1	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4005071	    0x4883add0fdff	              sub qword [rbp - 0x230], 1	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4005079	    0x4883bdd0fdff	              cmp qword [rbp - 0x230], 0	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4005081	     0xf8976ffffff	                           jns 0x4004ffd	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4005087	            0xeb0b	                           jmp 0x4005094	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4005089	    0x48c785b0fdff	              mov qword [rbp - 0x250], 0	      2739	undo.c	FUNCTION_41	FOR_1	ELSE_3
0x4005094	    0x4883bd00feff	              cmp qword [rbp - 0x200], 0	      2742	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12
0x400509c	     0xf84f1000000	                            je 0x4005193	      2742	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12
0x40050a2	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x40050a9	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x40050b0	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x40050bb	      0xe9ac000000	                           jmp 0x400516c	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x40050c0	    0x83bda4fdffff	              cmp dword [rbp - 0x25c], 0	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x40050c7	            0x743a	                            je 0x4005103	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x40050c9	    0x4883bdc0fdff	              cmp qword [rbp - 0x240], 0	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x40050d1	            0x7530	                           jne 0x4005103	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x40050d3	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x40050da	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x40050de	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x40050e5	        0x48c1e203	                              shl rdx, 3	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x40050e9	          0x4801d0	                            add rax, rdx	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x40050ec	          0x488b00	                    mov rax, qword [rax]	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x40050ef	      0xba01000000	                              mov edx, 1	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x40050f4	          0x4889c6	                            mov rsi, rax	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x40050f7	      0xbf01000000	                              mov edi, 1	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x40050fc	      0xe800000000	                          call 0x4005101	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4005101	            0xeb35	                           jmp 0x4005138	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4005103	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x400510a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x400510e	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4005115	        0x48c1e203	                              shl rdx, 3	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4005119	          0x4801d0	                            add rax, rdx	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x400511c	          0x488b30	                    mov rsi, qword [rax]	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x400511f	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4005126	      0xb900000000	                              mov ecx, 0	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x400512b	      0xba00000000	                              mov edx, 0	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4005130	          0x4889c7	                            mov rdi, rax	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4005133	      0xe800000000	                          call 0x4005138	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4005138	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x400513f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4005143	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x400514a	        0x48c1e203	                              shl rdx, 3	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x400514e	          0x4801d0	                            add rax, rdx	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4005151	          0x488b00	                    mov rax, qword [rax]	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4005154	          0x4889c7	                            mov rdi, rax	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4005157	      0xe800000000	                          call 0x400515c	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x400515c	    0x488385d0fdff	              add qword [rbp - 0x230], 1	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4005164	    0x488385c0fdff	              add qword [rbp - 0x240], 1	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x400516c	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4005173	    0x483b8500feff	            cmp rax, qword [rbp - 0x200]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x400517a	     0xf8c40ffffff	                            jl 0x40050c0	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4005180	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_19
0x4005187	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_19
0x400518b	          0x4889c7	                            mov rdi, rax	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_19
0x400518e	      0xe800000000	                          call 0x4005193	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_19
0x4005193	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x400519a	    0x483b8500feff	            cmp rax, qword [rbp - 0x200]	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x40051a1	     0xf84da000000	                            je 0x4005281	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x40051a7	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40051ae	    0x482b85f8fdff	            sub rax, qword [rbp - 0x208]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40051b5	    0x488b8df0fdff	            mov rcx, qword [rbp - 0x210]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40051bc	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40051c3	        0x488d3411	                    lea rsi, [rcx + rdx]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40051c7	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40051ce	        0x488d7a01	                      lea rdi, [rdx + 1]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40051d2	          0x4889c1	                            mov rcx, rax	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40051d5	      0xbaffffff7f	                     mov edx, 0x7fffffff	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40051da	      0xe800000000	                          call 0x40051df	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x40051df	    0x488b05000000	            mov rax, qword [0x040051e6] 	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x40051e6	    0x488b80e01100	          mov rax, qword [rax + 0x11e0] 	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x40051ed	    0x488b8df0fdff	            mov rcx, qword [rbp - 0x210]	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x40051f4	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x40051fb	          0x4801ca	                            add rdx, rcx	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x40051fe	          0x4839d0	                            cmp rax, rdx	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4005201	            0x7e2d	                           jle 0x4005230	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4005203	    0x488b05000000	            mov rax, qword [0x0400520a] 	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x400520a	    0x488b15000000	            mov rdx, qword [0x04005211] 	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4005211	    0x488b8ae01100	          mov rcx, qword [rdx + 0x11e0] 	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4005218	    0x488b9500feff	            mov rdx, qword [rbp - 0x200]	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x400521f	    0x482b95f8fdff	            sub rdx, qword [rbp - 0x208]	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4005226	          0x4801ca	                            add rdx, rcx	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4005229	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4005230	    0x488b05000000	            mov rax, qword [0x04005237] 	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4005237	    0x488b80001200	          mov rax, qword [rax + 0x1200] 	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x400523e	    0x488b8df0fdff	            mov rcx, qword [rbp - 0x210]	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4005245	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x400524c	          0x4801ca	                            add rdx, rcx	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x400524f	          0x4839d0	                            cmp rax, rdx	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4005252	            0x7e2d	                           jle 0x4005281	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4005254	    0x488b05000000	            mov rax, qword [0x0400525b] 	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x400525b	    0x488b15000000	            mov rdx, qword [0x04005262] 	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4005262	    0x488b8a001200	          mov rcx, qword [rdx + 0x1200] 	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4005269	    0x488b9500feff	            mov rdx, qword [rbp - 0x200]	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4005270	    0x482b95f8fdff	            sub rdx, qword [rbp - 0x208]	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4005277	          0x4801ca	                            add rdx, rcx	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x400527a	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4005281	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4005288	    0x482b85f8fdff	            sub rax, qword [rbp - 0x208]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x400528f	          0x4889c2	                            mov rdx, rax	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4005292	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4005299	        0x488d7801	                      lea rdi, [rax + 1]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x400529d	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x40052a4	          0x4889d1	                            mov rcx, rdx	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x40052a7	          0x4889c2	                            mov rdx, rax	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x40052aa	      0xbe00000000	                              mov esi, 0	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x40052af	      0xe800000000	                          call 0x40052b4	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x40052b4	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x40052bb	        0x488d5001	                      lea rdx, [rax + 1]	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x40052bf	    0x488b05000000	            mov rax, qword [0x040052c6] 	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x40052c6	    0x488b80e01100	          mov rax, qword [rax + 0x11e0] 	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x40052cd	          0x4839c2	                            cmp rdx, rax	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x40052d0	            0x7d19	                           jge 0x40052eb	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x40052d2	    0x488b05000000	            mov rax, qword [0x040052d9] 	      2774	undo.c	FUNCTION_41	FOR_1	IF_17
0x40052d9	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2774	undo.c	FUNCTION_41	FOR_1	IF_17
0x40052e0	        0x4883c201	                              add rdx, 1	      2774	undo.c	FUNCTION_41	FOR_1	IF_17
0x40052e4	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      2774	undo.c	FUNCTION_41	FOR_1	IF_17
0x40052eb	    0x4883bd00feff	              cmp qword [rbp - 0x200], 0	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x40052f3	            0x7539	                           jne 0x400532e	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x40052f5	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x40052fc	        0x488d5001	                      lea rdx, [rax + 1]	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4005300	    0x488b05000000	            mov rax, qword [0x04005307] 	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4005307	    0x488b80001200	          mov rax, qword [rax + 0x1200] 	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x400530e	          0x4839c2	                            cmp rdx, rax	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4005311	            0x7e1b	                           jle 0x400532e	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4005313	    0x488b05000000	            mov rax, qword [0x0400531a] 	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x400531a	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x4005321	        0x4883c201	                              add rdx, 1	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x4005325	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x400532c	            0xeb43	                           jmp 0x4005371	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x400532e	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4005335	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x400533c	          0x4801c2	                            add rdx, rax	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x400533f	    0x488b05000000	            mov rax, qword [0x04005346] 	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4005346	    0x488b80001200	          mov rax, qword [rax + 0x1200] 	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x400534d	          0x4839c2	                            cmp rdx, rax	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4005350	            0x7e1f	                           jle 0x4005371	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4005352	    0x488b05000000	            mov rax, qword [0x04005359] 	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4005359	    0x488b8df0fdff	            mov rcx, qword [rbp - 0x210]	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4005360	    0x488b9500feff	            mov rdx, qword [rbp - 0x200]	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4005367	          0x4801ca	                            add rdx, rcx	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x400536a	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4005371	    0x488b15000000	            mov rdx, qword [0x04005378] 	      2780	undo.c	FUNCTION_41	FOR_1
0x4005378	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2780	undo.c	FUNCTION_41	FOR_1
0x400537f	          0x4801d0	                            add rax, rdx	      2780	undo.c	FUNCTION_41	FOR_1
0x4005382	    0x488905000000	            mov qword [0x04005389], rax 	      2780	undo.c	FUNCTION_41	FOR_1
0x4005389	    0x488b15000000	            mov rdx, qword [0x04005390] 	      2781	undo.c	FUNCTION_41	FOR_1
0x4005390	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      2781	undo.c	FUNCTION_41	FOR_1
0x4005397	          0x4801d0	                            add rax, rdx	      2781	undo.c	FUNCTION_41	FOR_1
0x400539a	    0x488905000000	            mov qword [0x040053a1], rax 	      2781	undo.c	FUNCTION_41	FOR_1
0x40053a1	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2782	undo.c	FUNCTION_41	FOR_1
0x40053a8	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2782	undo.c	FUNCTION_41	FOR_1
0x40053af	        0x48895028	             mov qword [rax + 0x28], rdx	      2782	undo.c	FUNCTION_41	FOR_1
0x40053b3	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2783	undo.c	FUNCTION_41	FOR_1
0x40053ba	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      2783	undo.c	FUNCTION_41	FOR_1
0x40053c1	        0x48895020	             mov qword [rax + 0x20], rdx	      2783	undo.c	FUNCTION_41	FOR_1
0x40053c5	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2784	undo.c	FUNCTION_41	FOR_1
0x40053cc	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2784	undo.c	FUNCTION_41	FOR_1
0x40053d3	          0x4801d0	                            add rax, rdx	      2784	undo.c	FUNCTION_41	FOR_1
0x40053d6	        0x488d5001	                      lea rdx, [rax + 1]	      2784	undo.c	FUNCTION_41	FOR_1
0x40053da	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2784	undo.c	FUNCTION_41	FOR_1
0x40053e1	        0x48895010	             mov qword [rax + 0x10], rdx	      2784	undo.c	FUNCTION_41	FOR_1
0x40053e5	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2789	undo.c	FUNCTION_41	FOR_1
0x40053ec	          0x488b00	                    mov rax, qword [rax]	      2789	undo.c	FUNCTION_41	FOR_1
0x40053ef	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      2789	undo.c	FUNCTION_41	FOR_1
0x40053f6	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2790	undo.c	FUNCTION_41	FOR_1
0x40053fd	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      2790	undo.c	FUNCTION_41	FOR_1
0x4005404	          0x488910	                    mov qword [rax], rdx	      2790	undo.c	FUNCTION_41	FOR_1
0x4005407	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2791	undo.c	FUNCTION_41	FOR_1
0x400540e	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      2791	undo.c	FUNCTION_41	FOR_1
0x4005415	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      2654	undo.c	FUNCTION_41	FOR_1
0x400541c	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      2654	undo.c	FUNCTION_41	FOR_1
0x4005423	    0x4883bdd8fdff	              cmp qword [rbp - 0x228], 0	      2654	undo.c	FUNCTION_41	FOR_1
0x400542b	     0xf85a0f8ffff	                           jne 0x4004cd1	      2654	undo.c	FUNCTION_41	FOR_1
0x4005431	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2794	undo.c	FUNCTION_41
0x4005438	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      2794	undo.c	FUNCTION_41
0x400543f	        0x48895030	             mov qword [rax + 0x30], rdx	      2794	undo.c	FUNCTION_41
0x4005443	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2795	undo.c	FUNCTION_41
0x400544a	    0x8b95acfdffff	            mov edx, dword [rbp - 0x254]	      2795	undo.c	FUNCTION_41
0x4005450	          0x895058	             mov dword [rax + 0x58], edx	      2795	undo.c	FUNCTION_41
0x4005453	    0x8b85a8fdffff	            mov eax, dword [rbp - 0x258]	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4005459	          0x83e002	                              and eax, 2	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400545c	            0x85c0	                           test eax, eax	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400545e	            0x7438	                            je 0x4005498	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4005460	    0x488b05000000	            mov rax, qword [0x04005467] 	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4005467	          0x488b00	                    mov rax, qword [rax]	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400546a	        0x4883f801	                              cmp rax, 1	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400546e	            0x7528	                           jne 0x4005498	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4005470	      0xbf01000000	                              mov edi, 1	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4005475	      0xe800000000	                          call 0x400547a	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400547a	           0xfb600	                   movzx eax, byte [rax]	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400547d	            0x84c0	                             test al, al	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400547f	            0x7517	                           jne 0x4005498	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4005481	    0x488b05000000	            mov rax, qword [0x04005488] 	      2797	undo.c	FUNCTION_41	IF_20
0x4005488	    0x488b15000000	            mov rdx, qword [0x0400548f] 	      2797	undo.c	FUNCTION_41	IF_20
0x400548f	          0x8b5210	            mov edx, dword [rdx + 0x10] 	      2797	undo.c	FUNCTION_41	IF_20
0x4005492	          0x83ca01	                               or edx, 1	      2797	undo.c	FUNCTION_41	IF_20
0x4005495	          0x895010	             mov dword [rax + 0x10], edx	      2797	undo.c	FUNCTION_41	IF_20
0x4005498	    0x8b85a8fdffff	            mov eax, dword [rbp - 0x258]	      2798	undo.c	FUNCTION_41	IF_21
0x400549e	          0x83e001	                              and eax, 1	      2798	undo.c	FUNCTION_41	IF_21
0x40054a1	            0x85c0	                           test eax, eax	      2798	undo.c	FUNCTION_41	IF_21
0x40054a3	            0x7407	                            je 0x40054ac	      2798	undo.c	FUNCTION_41	IF_21
0x40054a5	      0xe800000000	                          call 0x40054aa	      2799	undo.c	FUNCTION_41	CALL_23
0x40054aa	            0xeb27	                           jmp 0x40054d3	      2799	undo.c	FUNCTION_41	CALL_23
0x40054ac	    0x488b05000000	            mov rax, qword [0x040054b3] 	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40054b3	          0x4889c7	                            mov rdi, rax	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40054b6	      0xe800000000	                          call 0x40054bb	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40054bb	            0x85c0	                           test eax, eax	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40054bd	            0x7514	                           jne 0x40054d3	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x40054bf	    0x488b05000000	            mov rax, qword [0x040054c6] 	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x40054c6	      0xbe00000000	                              mov esi, 0	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x40054cb	          0x4889c7	                            mov rdi, rax	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x40054ce	      0xe800000000	                          call 0x40054d3	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x40054d3	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	      2810	undo.c	FUNCTION_41	FOR_5
0x40054de	      0xe9ed000000	                           jmp 0x40055d0	      2810	undo.c	FUNCTION_41	FOR_5
0x40054e3	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x40054ea	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x40054f1	        0x4883c206	                              add rdx, 6	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x40054f5	        0x48c1e204	                              shl rdx, 4	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x40054f9	          0x4801d0	                            add rax, rdx	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x40054fc	          0x488b00	                    mov rax, qword [rax]	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x40054ff	          0x4885c0	                           test rax, rax	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x4005502	            0x7442	                            je 0x4005546	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x4005504	    0x488b05000000	            mov rax, qword [0x0400550b] 	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x400550b	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4005512	        0x4883c215	                           add rdx, 0x15	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4005516	        0x48c1e204	                              shl rdx, 4	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x400551a	        0x488d0c10	                    lea rcx, [rax + rdx]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x400551e	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4005525	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x400552c	        0x4883c206	                              add rdx, 6	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4005530	        0x48c1e204	                              shl rdx, 4	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4005534	          0x4801d0	                            add rax, rdx	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4005537	        0x488b5008	                mov rdx, qword [rax + 8]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x400553b	          0x488b00	                    mov rax, qword [rax]	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x400553e	        0x48894108	                mov qword [rcx + 8], rax	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4005542	        0x48895110	             mov qword [rcx + 0x10], rdx	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x4005546	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x400554d	        0x48c1e004	                              shl rax, 4	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005551	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005555	          0x4801d8	                            add rax, rbx	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005558	    0x482db0010000	                          sub rax, 0x1b0	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x400555e	          0x488b00	                    mov rax, qword [rax]	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005561	          0x4885c0	                           test rax, rax	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005564	            0x7442	                            je 0x40055a8	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005566	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x400556d	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005574	        0x4883c206	                              add rdx, 6	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005578	        0x48c1e204	                              shl rdx, 4	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x400557c	        0x488d0c10	                    lea rcx, [rax + rdx]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005580	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005587	        0x48c1e004	                              shl rax, 4	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x400558b	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x400558f	          0x4801d8	                            add rax, rbx	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005592	    0x482db0010000	                          sub rax, 0x1b0	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x4005598	        0x488b5008	                mov rdx, qword [rax + 8]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x400559c	          0x488b00	                    mov rax, qword [rax]	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x400559f	          0x488901	                    mov qword [rcx], rax	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x40055a2	        0x48895108	                mov qword [rcx + 8], rdx	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x40055a6	            0xeb20	                           jmp 0x40055c8	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x40055a8	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x40055af	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x40055b6	        0x4883c206	                              add rdx, 6	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x40055ba	        0x48c1e204	                              shl rdx, 4	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x40055be	          0x4801d0	                            add rax, rdx	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x40055c1	    0x48c700000000	                      mov qword [rax], 0	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x40055c8	    0x488385d0fdff	              add qword [rbp - 0x230], 1	      2810	undo.c	FUNCTION_41	FOR_5
0x40055d0	    0x4883bdd0fdff	          cmp qword [rbp - 0x230], 0x19 	      2810	undo.c	FUNCTION_41	FOR_5
0x40055d8	     0xf8e05ffffff	                           jle 0x40054e3	      2810	undo.c	FUNCTION_41	FOR_5
0x40055de	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40055e5	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40055ec	          0x4885c0	                           test rax, rax	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40055ef	     0xf84a1000000	                            je 0x4005696	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40055f5	    0x488b05000000	            mov rax, qword [0x040055fc] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40055fc	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005603	    0x488b8a000200	           mov rcx, qword [rdx + 0x200] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400560a	    0x488988f80200	            mov qword [rax + 0x2f8], rcx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005611	    0x488b8a080200	           mov rcx, qword [rdx + 0x208] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005618	    0x488988000300	            mov qword [rax + 0x300], rcx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400561f	    0x488b8a100200	           mov rcx, qword [rdx + 0x210] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005626	    0x488988080300	            mov qword [rax + 0x308], rcx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400562d	    0x488b8a180200	           mov rcx, qword [rdx + 0x218] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005634	    0x488988100300	            mov qword [rax + 0x310], rcx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400563b	    0x488b92200200	           mov rdx, qword [rdx + 0x220] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005642	    0x488990180300	            mov qword [rax + 0x318], rdx	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005649	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005650	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005657	    0x488990000200	            mov qword [rax + 0x200], rdx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400565e	    0x488b9518feff	            mov rdx, qword [rbp - 0x1e8]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005665	    0x488990080200	            mov qword [rax + 0x208], rdx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400566c	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005673	    0x488990100200	            mov qword [rax + 0x210], rdx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400567a	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005681	    0x488990180200	            mov qword [rax + 0x218], rdx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005688	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400568f	    0x488990200200	            mov qword [rax + 0x220], rdx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4005696	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2830	undo.c	FUNCTION_41	IF_26
0x400569d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2830	undo.c	FUNCTION_41	IF_26
0x40056a1	        0x488d5001	                      lea rdx, [rax + 1]	      2830	undo.c	FUNCTION_41	IF_26
0x40056a5	    0x488b05000000	            mov rax, qword [0x040056ac] 	      2830	undo.c	FUNCTION_41	IF_26
0x40056ac	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2830	undo.c	FUNCTION_41	IF_26
0x40056b0	          0x4839c2	                            cmp rdx, rax	      2830	undo.c	FUNCTION_41	IF_26
0x40056b3	            0x7524	                           jne 0x40056d9	      2830	undo.c	FUNCTION_41	IF_26
0x40056b5	    0x488b05000000	            mov rax, qword [0x040056bc] 	      2831	undo.c	FUNCTION_41	IF_26
0x40056bc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2831	undo.c	FUNCTION_41	IF_26
0x40056c0	        0x4883f801	                              cmp rax, 1	      2831	undo.c	FUNCTION_41	IF_26
0x40056c4	            0x7e13	                           jle 0x40056d9	      2831	undo.c	FUNCTION_41	IF_26
0x40056c6	    0x488b05000000	            mov rax, qword [0x040056cd] 	      2832	undo.c	FUNCTION_41	IF_26
0x40056cd	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2832	undo.c	FUNCTION_41	IF_26
0x40056d1	        0x4883ea01	                              sub rdx, 1	      2832	undo.c	FUNCTION_41	IF_26
0x40056d5	        0x48895038	             mov qword [rax + 0x38], rdx	      2832	undo.c	FUNCTION_41	IF_26
0x40056d9	    0x488b05000000	            mov rax, qword [0x040056e0] 	      2833	undo.c	FUNCTION_41	IF_27
0x40056e0	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2833	undo.c	FUNCTION_41	IF_27
0x40056e4	    0x488b05000000	            mov rax, qword [0x040056eb] 	      2833	undo.c	FUNCTION_41	IF_27
0x40056eb	          0x488b00	                    mov rax, qword [rax]	      2833	undo.c	FUNCTION_41	IF_27
0x40056ee	          0x4839c2	                            cmp rdx, rax	      2833	undo.c	FUNCTION_41	IF_27
0x40056f1	            0x7f78	                            jg 0x400576b	      2833	undo.c	FUNCTION_41	IF_27
0x40056f3	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x40056fa	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x40056fe	    0x488b05000000	            mov rax, qword [0x04005705] 	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x4005705	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x4005709	          0x4839c2	                            cmp rdx, rax	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x400570c	            0x7551	                           jne 0x400575f	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x400570e	    0x488b05000000	            mov rax, qword [0x04005715] 	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x4005715	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x400571c	          0x8b5248	            mov edx, dword [rdx + 0x48] 	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x400571f	          0x895040	             mov dword [rax + 0x40], edx	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x4005722	      0xe800000000	                          call 0x4005727	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x4005727	            0x85c0	                           test eax, eax	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x4005729	            0x7424	                            je 0x400574f	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x400572b	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x4005732	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x4005736	          0x4885c0	                           test rax, rax	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x4005739	            0x7814	                            js 0x400574f	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x400573b	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_27
0x4005742	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_27
0x4005746	            0x89c7	                            mov edi, eax	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_27
0x4005748	      0xe800000000	                          call 0x400574d	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_27
0x400574d	            0xeb38	                           jmp 0x4005787	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_27
0x400574f	    0x488b05000000	            mov rax, qword [0x04005756] 	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x4005756	    0xc74044000000	               mov dword [rax + 0x44], 0	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x400575d	            0xeb28	                           jmp 0x4005787	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x400575f	      0xbf06000000	                              mov edi, 6	      2846	undo.c	FUNCTION_41	IF_27	CALL_28
0x4005764	      0xe800000000	                          call 0x4005769	      2846	undo.c	FUNCTION_41	IF_27	CALL_28
0x4005769	            0xeb1c	                           jmp 0x4005787	      2846	undo.c	FUNCTION_41	IF_27	CALL_28
0x400576b	    0x488b05000000	            mov rax, qword [0x04005772] 	      2854	undo.c	FUNCTION_41	ELSE_10
0x4005772	    0xc74040000000	               mov dword [rax + 0x40], 0	      2854	undo.c	FUNCTION_41	ELSE_10
0x4005779	    0x488b05000000	            mov rax, qword [0x04005780] 	      2856	undo.c	FUNCTION_41	ELSE_10
0x4005780	    0xc74044000000	               mov dword [rax + 0x44], 0	      2856	undo.c	FUNCTION_41	ELSE_10
0x4005787	      0xe800000000	                          call 0x400578c	      2861	undo.c	FUNCTION_41	CALL_29
0x400578c	    0x488b05000000	            mov rax, qword [0x04005793] 	      2864	undo.c	FUNCTION_41
0x4005793	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2864	undo.c	FUNCTION_41
0x400579a	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2864	undo.c	FUNCTION_41
0x400579e	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2864	undo.c	FUNCTION_41
0x40057a5	    0x83bd9cfdffff	              cmp dword [rbp - 0x264], 0	      2865	undo.c	FUNCTION_41	IF_30
0x40057ac	            0x743f	                            je 0x40057ed	      2865	undo.c	FUNCTION_41	IF_30
0x40057ae	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x40057b5	          0x488b00	                    mov rax, qword [rax]	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x40057b8	          0x4885c0	                           test rax, rax	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x40057bb	            0x741e	                            je 0x40057db	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x40057bd	    0x488b05000000	            mov rax, qword [0x040057c4] 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x40057c4	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x40057cb	          0x488b12	                    mov rdx, qword [rdx]	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x40057ce	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x40057d2	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x40057d9	            0xeb12	                           jmp 0x40057ed	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x40057db	    0x488b05000000	            mov rax, qword [0x040057e2] 	      2872	undo.c	FUNCTION_41	IF_30	ELSE_11
0x40057e2	    0x48c780481200	            mov qword [rax + 0x1248], 0 	      2872	undo.c	FUNCTION_41	IF_30	ELSE_11
0x40057ed	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x40057f4	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x40057fb	          0x4885c0	                           test rax, rax	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x40057fe	            0x7447	                            je 0x4005847	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4005800	    0x83bd9cfdffff	              cmp dword [rbp - 0x264], 0	      2878	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x4005807	            0x7422	                            je 0x400582b	      2878	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x4005809	    0x488b05000000	            mov rax, qword [0x04005810] 	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x4005810	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x4005817	    0x488b92300200	           mov rdx, qword [rdx + 0x230] 	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x400581e	        0x4883ea01	                              sub rdx, 1	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x4005822	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x4005829	            0xeb1c	                           jmp 0x4005847	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x400582b	    0x488b05000000	            mov rax, qword [0x04005832] 	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x4005832	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x4005839	    0x488b92300200	           mov rdx, qword [rdx + 0x230] 	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x4005840	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x4005847	    0x488b05000000	            mov rax, qword [0x0400584e] 	      2886	undo.c	FUNCTION_41
0x400584e	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2886	undo.c	FUNCTION_41
0x4005855	    0x488b92280200	           mov rdx, qword [rdx + 0x228] 	      2886	undo.c	FUNCTION_41
0x400585c	    0x488990501200	          mov qword [rax + 0x1250], rdx 	      2886	undo.c	FUNCTION_41
0x4005863	      0xe800000000	                          call 0x4005868	      2888	undo.c	FUNCTION_41	CALL_30
0x4005868	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2892	undo.c	FUNCTION_41
0x400586c	    0x644833042528	                xor rax, qword fs:[0x28]	      2892	undo.c	FUNCTION_41
0x4005875	            0x7405	                            je 0x400587c	      2892	undo.c	FUNCTION_41
0x4005877	      0xe800000000	                          call 0x400587c	      2892	undo.c	FUNCTION_41
0x400587c	    0x4881c4680200	                          add rsp, 0x268	      2892	undo.c	FUNCTION_41
0x4005883	              0x5b	                                 pop rbx	      2892	undo.c	FUNCTION_41
0x4005884	              0x5d	                                 pop rbp	      2892	undo.c	FUNCTION_41
0x4005885	              0xc3	                                     ret	      2892	undo.c	FUNCTION_41
undo_time	SWITCH,0:FOR,1:IF,47:functions,0:ELSE,18:CALL,14:WHILE,6:DO,0	604
0x40041ac	              0x55	                                push rbp	      2266	undo.c	FUNCTION_40
0x40041ad	          0x4889e5	                            mov rbp, rsp	      2266	undo.c	FUNCTION_40
0x40041b0	        0x4883c480	             add rsp, 0xffffffffffffff80	      2266	undo.c	FUNCTION_40
0x40041b4	        0x48897d98	             mov qword [rbp - 0x68], rdi	      2266	undo.c	FUNCTION_40
0x40041b8	          0x897594	             mov dword [rbp - 0x6c], esi	      2266	undo.c	FUNCTION_40
0x40041bb	          0x895590	             mov dword [rbp - 0x70], edx	      2266	undo.c	FUNCTION_40
0x40041be	          0x894d8c	             mov dword [rbp - 0x74], ecx	      2266	undo.c	FUNCTION_40
0x40041c1	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2270	undo.c	FUNCTION_40
0x40041c9	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2272	undo.c	FUNCTION_40
0x40041d1	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2277	undo.c	FUNCTION_40
0x40041d4	          0x8945b8	             mov dword [rbp - 0x48], eax	      2277	undo.c	FUNCTION_40
0x40041d7	          0x8b4590	             mov eax, dword [rbp - 0x70]	      2278	undo.c	FUNCTION_40
0x40041da	          0x8945bc	             mov dword [rbp - 0x44], eax	      2278	undo.c	FUNCTION_40
0x40041dd	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      2279	undo.c	FUNCTION_40
0x40041e4	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      2280	undo.c	FUNCTION_40
0x40041eb	    0x488b05000000	            mov rax, qword [0x040041f2] 	      2283	undo.c	FUNCTION_40	IF_1
0x40041f2	    0x8b8034120000	          mov eax, dword [rax + 0x1234] 	      2283	undo.c	FUNCTION_40	IF_1
0x40041f8	            0x85c0	                           test eax, eax	      2283	undo.c	FUNCTION_40	IF_1
0x40041fa	            0x750a	                           jne 0x4004206	      2283	undo.c	FUNCTION_40	IF_1
0x40041fc	      0xbf01000000	                              mov edi, 1	      2284	undo.c	FUNCTION_40	CALL_1
0x4004201	      0xe800000000	                          call 0x4004206	      2284	undo.c	FUNCTION_40	CALL_1
0x4004206	    0x48c705000000	               mov qword [0x04004211], 0	      2286	undo.c	FUNCTION_40
0x4004211	    0x48c705000000	               mov qword [0x0400421c], 0	      2287	undo.c	FUNCTION_40
0x400421c	    0x488b05000000	            mov rax, qword [0x04004223] 	      2288	undo.c	FUNCTION_40	IF_2
0x4004223	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2288	undo.c	FUNCTION_40	IF_2
0x4004226	          0x83e001	                              and eax, 1	      2288	undo.c	FUNCTION_40	IF_2
0x4004229	            0x85c0	                           test eax, eax	      2288	undo.c	FUNCTION_40	IF_2
0x400422b	            0x740b	                            je 0x4004238	      2288	undo.c	FUNCTION_40	IF_2
0x400422d	    0x48c705000000	mov qword [0x04004238], 0xffffffffffffffff 	      2289	undo.c	FUNCTION_40	IF_2
0x4004238	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      2293	undo.c	FUNCTION_40	IF_3
0x400423c	            0x7415	                            je 0x4004253	      2293	undo.c	FUNCTION_40	IF_3
0x400423e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2295	undo.c	FUNCTION_40	IF_3
0x4004242	        0x488945c8	             mov qword [rbp - 0x38], rax	      2295	undo.c	FUNCTION_40	IF_3
0x4004246	    0x48c745d0ffff	mov qword [rbp - 0x30], 0xffffffffffffffff	      2296	undo.c	FUNCTION_40	IF_3
0x400424e	      0xe9b4010000	                           jmp 0x4004407	      2296	undo.c	FUNCTION_40	IF_3
0x4004253	        0x837db800	               cmp dword [rbp - 0x48], 0	      2300	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4004257	            0x741e	                            je 0x4004277	      2300	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4004259	    0x488b05000000	            mov rax, qword [0x04004260] 	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4004260	    0x488b90501200	          mov rdx, qword [rax + 0x1250] 	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4004267	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x400426b	          0x4801d0	                            add rax, rdx	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x400426e	        0x488945c8	             mov qword [rbp - 0x38], rax	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4004272	      0xe911010000	                           jmp 0x4004388	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4004277	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2302	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5
0x400427b	     0xf84ee000000	                            je 0x400436f	      2302	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5
0x4004281	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2304	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x4004286	     0xf8997000000	                           jns 0x4004323	      2304	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x400428c	    0x488b05000000	            mov rax, qword [0x04004293] 	      2309	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x4004293	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2309	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x400429a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2309	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x400429e	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2310	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x40042a3	            0x740d	                            je 0x40042b2	      2310	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x40042a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x40042a9	          0x488b00	                    mov rax, qword [rax]	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x40042ac	        0x488945e8	             mov qword [rbp - 0x18], rax	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x40042b0	            0xeb12	                           jmp 0x40042c4	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x40042b2	    0x488b05000000	            mov rax, qword [0x040042b9] 	      2313	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_3
0x40042b9	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      2313	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_3
0x40042c0	        0x488945e8	             mov qword [rbp - 0x18], rax	      2313	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_3
0x40042c4	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042c9	            0x742b	                            je 0x40042f6	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042cf	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042d6	          0x4885c0	                           test rax, rax	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042d9	            0x741b	                            je 0x40042f6	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042db	    0x488b05000000	            mov rax, qword [0x040042e2] 	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042e2	    0x488b90581200	          mov rdx, qword [rax + 0x1258] 	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042e9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042ed	          0x4801d0	                            add rax, rdx	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042f0	        0x488945c8	             mov qword [rbp - 0x38], rax	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042f4	            0xeb1d	                           jmp 0x4004313	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40042f6	    0x488b05000000	            mov rax, qword [0x040042fd] 	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x40042fd	    0x488b90581200	          mov rdx, qword [rax + 0x1258] 	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x4004304	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x4004308	          0x4801d0	                            add rax, rdx	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x400430b	        0x4883c001	                              add rax, 1	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x400430f	        0x488945c8	             mov qword [rbp - 0x38], rax	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x4004313	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2321	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x4004318	            0x7f6e	                            jg 0x4004388	      2321	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x400431a	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x4004321	            0xeb65	                           jmp 0x4004388	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x4004323	    0x488b05000000	            mov rax, qword [0x0400432a] 	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x400432a	    0x488b90581200	          mov rdx, qword [rax + 0x1258] 	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x4004331	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x4004335	          0x4801d0	                            add rax, rdx	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x4004338	        0x488945c8	             mov qword [rbp - 0x38], rax	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x400433c	    0x488b05000000	            mov rax, qword [0x04004343] 	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4004343	    0x488b80401200	          mov rax, qword [rax + 0x1240] 	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x400434a	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x400434e	            0x7d38	                           jge 0x4004388	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4004350	    0x488b05000000	            mov rax, qword [0x04004357] 	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4004357	    0x488b80381200	          mov rax, qword [rax + 0x1238] 	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x400435e	        0x4883c001	                              add rax, 1	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4004362	        0x488945c8	             mov qword [rbp - 0x38], rax	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4004366	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2335	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x400436d	            0xeb19	                           jmp 0x4004388	      2335	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x400436f	    0x488b05000000	            mov rax, qword [0x04004376] 	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x4004376	    0x488b90481200	          mov rdx, qword [rax + 0x1248] 	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x400437d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x4004381	          0x4801d0	                            add rax, rdx	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x4004384	        0x488945c8	             mov qword [rbp - 0x38], rax	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x4004388	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x400438d	            0x7919	                           jns 0x40043a8	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x400438f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2343	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x4004394	            0x7908	                           jns 0x400439e	      2343	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x4004396	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2344	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x400439e	    0x48c745d0ffff	mov qword [rbp - 0x30], 0xffffffffffffffff	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x40043a6	            0xeb5f	                           jmp 0x4004407	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x40043a8	        0x837db800	               cmp dword [rbp - 0x48], 0	      2349	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_13
0x40043ac	            0x740f	                            je 0x40043bd	      2349	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_13
0x40043ae	      0xe800000000	                          call 0x40043b3	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x40043b3	        0x4883c001	                              add rax, 1	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x40043b7	        0x488945d0	             mov qword [rbp - 0x30], rax	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x40043bb	            0xeb34	                           jmp 0x40043f1	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x40043bd	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2351	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40043c1	            0x7418	                            je 0x40043db	      2351	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40043c3	    0x488b05000000	            mov rax, qword [0x040043ca] 	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40043ca	    0x488b80401200	          mov rax, qword [rax + 0x1240] 	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40043d1	        0x4883c002	                              add rax, 2	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40043d5	        0x488945d0	             mov qword [rbp - 0x30], rax	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40043d9	            0xeb16	                           jmp 0x40043f1	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40043db	    0x488b05000000	            mov rax, qword [0x040043e2] 	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x40043e2	    0x488b80381200	          mov rax, qword [rax + 0x1238] 	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x40043e9	        0x4883c002	                              add rax, 2	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x40043ed	        0x488945d0	             mov qword [rbp - 0x30], rax	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x40043f1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2355	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40043f5	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2355	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40043f9	            0x7c0c	                            jl 0x4004407	      2355	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40043fb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40043ff	        0x4883e801	                              sub rax, 1	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x4004403	        0x488945c8	             mov qword [rbp - 0x38], rax	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x4004407	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2359	undo.c	FUNCTION_40
0x400440b	        0x488945f8	                mov qword [rbp - 8], rax	      2359	undo.c	FUNCTION_40
0x400440f	    0x488b05000000	            mov rax, qword [0x04004416] 	      2360	undo.c	FUNCTION_40
0x4004416	    0x488b80481200	          mov rax, qword [rax + 0x1248] 	      2360	undo.c	FUNCTION_40
0x400441d	        0x488945d8	             mov qword [rbp - 0x28], rax	      2360	undo.c	FUNCTION_40
0x4004421	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2363	undo.c	FUNCTION_40	IF_16
0x4004426	            0x750e	                           jne 0x4004436	      2363	undo.c	FUNCTION_40	IF_16
0x4004428	    0x8b0500000000	            mov eax, dword [0x0400442e] 	      2365	undo.c	FUNCTION_40	IF_16
0x400442e	          0x8945ac	             mov dword [rbp - 0x54], eax	      2365	undo.c	FUNCTION_40	IF_16
0x4004431	      0xe9fd030000	                           jmp 0x4004833	      2366	undo.c	FUNCTION_40	IF_16
0x4004436	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      2377	undo.c	FUNCTION_40	FOR_1
0x400443d	      0xe9e4030000	                           jmp 0x4004826	      2377	undo.c	FUNCTION_40	FOR_1
0x4004442	    0x8b0500000000	            mov eax, dword [0x04004448] 	      2383	undo.c	FUNCTION_40	FOR_1
0x4004448	          0x83c001	                              add eax, 1	      2383	undo.c	FUNCTION_40	FOR_1
0x400444b	    0x890500000000	            mov dword [0x04004451], eax 	      2383	undo.c	FUNCTION_40	FOR_1
0x4004451	    0x8b0500000000	            mov eax, dword [0x04004457] 	      2383	undo.c	FUNCTION_40	FOR_1
0x4004457	          0x8945ac	             mov dword [rbp - 0x54], eax	      2383	undo.c	FUNCTION_40	FOR_1
0x400445a	    0x8b0500000000	            mov eax, dword [0x04004460] 	      2384	undo.c	FUNCTION_40	FOR_1
0x4004460	          0x83c001	                              add eax, 1	      2384	undo.c	FUNCTION_40	FOR_1
0x4004463	    0x890500000000	            mov dword [0x04004469], eax 	      2384	undo.c	FUNCTION_40	FOR_1
0x4004469	    0x8b0500000000	            mov eax, dword [0x0400446f] 	      2384	undo.c	FUNCTION_40	FOR_1
0x400446f	          0x8945b0	             mov dword [rbp - 0x50], eax	      2384	undo.c	FUNCTION_40	FOR_1
0x4004472	    0x488b05000000	            mov rax, qword [0x04004479] 	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004479	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004480	          0x4885c0	                           test rax, rax	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004483	            0x7517	                           jne 0x400449c	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004485	    0x488b05000000	            mov rax, qword [0x0400448c] 	      2387	undo.c	FUNCTION_40	FOR_1	IF_17
0x400448c	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      2387	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004493	        0x488945e8	             mov qword [rbp - 0x18], rax	      2387	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004497	      0xe9e6020000	                           jmp 0x4004782	      2387	undo.c	FUNCTION_40	FOR_1	IF_17
0x400449c	    0x488b05000000	            mov rax, qword [0x040044a3] 	      2389	undo.c	FUNCTION_40	FOR_1	ELSE_10
0x40044a3	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2389	undo.c	FUNCTION_40	FOR_1	ELSE_10
0x40044aa	        0x488945e8	             mov qword [rbp - 0x18], rax	      2389	undo.c	FUNCTION_40	FOR_1	ELSE_10
0x40044ae	      0xe9cf020000	                           jmp 0x4004782	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x40044b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2393	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x40044b7	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2393	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x40044ba	          0x895028	             mov dword [rax + 0x28], edx	      2393	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x40044bd	        0x837db800	               cmp dword [rbp - 0x48], 0	      2394	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x40044c1	            0x7411	                            je 0x40044d4	      2394	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x40044c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2395	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x40044c7	    0x488b80280200	           mov rax, qword [rax + 0x228] 	      2395	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x40044ce	        0x488945e0	             mov qword [rbp - 0x20], rax	      2395	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x40044d2	            0xeb23	                           jmp 0x40044f7	      2395	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x40044d4	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2396	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x40044d8	            0x7411	                            je 0x40044eb	      2396	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x40044da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2397	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x40044de	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      2397	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x40044e5	        0x488945e0	             mov qword [rbp - 0x20], rax	      2397	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x40044e9	            0xeb0c	                           jmp 0x40044f7	      2397	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x40044eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2399	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12
0x40044ef	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2399	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12
0x40044f3	        0x488945e0	             mov qword [rbp - 0x20], rax	      2399	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12
0x40044f7	        0x837db401	               cmp dword [rbp - 0x4c], 1	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40044fb	     0xf8552010000	                           jne 0x4004653	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004501	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004505	            0x740b	                            je 0x4004512	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004507	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400450c	     0xf8441010000	                            je 0x4004653	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004512	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004517	            0x791e	                           jns 0x4004537	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004519	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400451d	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004521	    0x488b05000000	            mov rax, qword [0x04004528] 	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004528	    0x488b80481200	          mov rax, qword [rax + 0x1248] 	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400452f	          0x4839c2	                            cmp rdx, rax	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004532	           0xf9ec0	                                setle al	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004535	            0xeb1c	                           jmp 0x4004553	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004537	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2408	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400453b	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2408	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400453f	    0x488b05000000	            mov rax, qword [0x04004546] 	      2408	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004546	    0x488b80481200	          mov rax, qword [rax + 0x1248] 	      2408	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400454d	          0x4839c2	                            cmp rdx, rax	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004550	           0xf9fc0	                                 setg al	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004553	            0x84c0	                             test al, al	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004555	     0xf84f8000000	                            je 0x4004653	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400455b	        0x837db800	               cmp dword [rbp - 0x48], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400455f	            0x7439	                            je 0x400459a	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004561	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004565	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004569	            0x752f	                           jne 0x400459a	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400456b	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004570	            0x7914	                           jns 0x4004586	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004572	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2411	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004576	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2411	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400457a	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400457e	           0xf9cc0	                                 setl al	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004581	      0xe9b5000000	                           jmp 0x400463b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004586	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2412	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400458a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2412	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400458e	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004592	           0xf9fc0	                                 setg al	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004595	      0xe9a1000000	                           jmp 0x400463b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400459a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400459e	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045a2	     0xf8484000000	                            je 0x400462c	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045ac	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045b0	            0x7e3e	                           jle 0x40045f0	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045b6	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045ba	            0x7e1a	                           jle 0x40045d6	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2416	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045c0	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      2416	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045c4	          0x4889c2	                            mov rdx, rax	      2416	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2416	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045cb	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      2416	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045cf	          0x4839c2	                            cmp rdx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045d2	            0x7e58	                           jle 0x400462c	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045d4	            0xeb5d	                           jmp 0x4004633	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2417	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045da	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      2417	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045de	          0x4889c2	                            mov rdx, rax	      2417	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2417	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045e5	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      2417	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045e9	          0x4839c2	                            cmp rdx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045ec	            0x7e3e	                           jle 0x400462c	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045ee	            0xeb43	                           jmp 0x4004633	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045f4	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045f8	            0x7e1a	                           jle 0x4004614	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2419	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40045fe	        0x482b45e0	             sub rax, qword [rbp - 0x20]	      2419	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004602	          0x4889c2	                            mov rdx, rax	      2419	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004605	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2419	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004609	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      2419	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400460d	          0x4839c2	                            cmp rdx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004610	            0x7e1a	                           jle 0x400462c	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004612	            0xeb1f	                           jmp 0x4004633	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004614	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2420	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004618	        0x482b45e0	             sub rax, qword [rbp - 0x20]	      2420	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400461c	          0x4889c2	                            mov rdx, rax	      2420	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400461f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2420	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004623	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      2420	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004627	          0x4839c2	                            cmp rdx, rax	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400462a	            0x7f07	                            jg 0x4004633	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400462c	      0xb801000000	                              mov eax, 1	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004631	            0xeb05	                           jmp 0x4004638	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004633	      0xb800000000	                              mov eax, 0	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004638	          0x83e001	                              and eax, 1	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400463b	            0x84c0	                             test al, al	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400463d	            0x7414	                            je 0x4004653	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400463f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2422	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004643	        0x488945d0	             mov qword [rbp - 0x30], rax	      2422	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004647	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400464b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400464f	        0x488945d8	             mov qword [rbp - 0x28], rax	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004653	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4004657	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x400465b	            0x7517	                           jne 0x4004674	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x400465d	        0x837db800	               cmp dword [rbp - 0x48], 0	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4004661	            0x7511	                           jne 0x4004674	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4004663	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4004667	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x400466b	        0x488945c8	             mov qword [rbp - 0x38], rax	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x400466f	      0xe919010000	                           jmp 0x400478d	      2432	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x4004674	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4004678	        0x488b4008	                mov rax, qword [rax + 8]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400467c	          0x4885c0	                           test rax, rax	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400467f	            0x7431	                            je 0x40046b2	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4004681	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4004685	        0x488b4008	                mov rax, qword [rax + 8]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4004689	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400468c	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400468f	            0x7421	                            je 0x40046b2	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4004691	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4004695	        0x488b4008	                mov rax, qword [rax + 8]	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4004699	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400469c	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400469f	            0x7411	                            je 0x40046b2	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40046a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2438	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40046a5	        0x488b4008	                mov rax, qword [rax + 8]	      2438	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40046a9	        0x488945e8	             mov qword [rbp - 0x18], rax	      2438	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40046ad	      0xe9d0000000	                           jmp 0x4004782	      2438	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x40046b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046b6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046ba	          0x4885c0	                           test rax, rax	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046bd	            0x7431	                            je 0x40046f0	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046c3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046c7	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046ca	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046cd	            0x7421	                            je 0x40046f0	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046d3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046d7	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046da	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046dd	            0x7411	                            je 0x40046f0	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2444	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046e3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2444	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046e7	        0x488945e8	             mov qword [rbp - 0x18], rax	      2444	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046eb	      0xe992000000	                           jmp 0x4004782	      2444	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x40046f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40046f4	          0x488b00	                    mov rax, qword [rax]	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40046f7	          0x4885c0	                           test rax, rax	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40046fa	            0x7456	                            je 0x4004752	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x40046fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004700	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004704	          0x4885c0	                           test rax, rax	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004707	            0x7549	                           jne 0x4004752	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004709	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400470d	          0x488b00	                    mov rax, qword [rax]	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004710	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004713	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004716	            0x743a	                            je 0x4004752	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004718	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400471c	          0x488b00	                    mov rax, qword [rax]	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400471f	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004722	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004725	            0x742b	                            je 0x4004752	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004727	    0x488b05000000	            mov rax, qword [0x0400472e] 	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x400472e	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4004735	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4004739	            0x750a	                           jne 0x4004745	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x400473b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x400473f	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4004742	          0x895028	             mov dword [rax + 0x28], edx	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4004745	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2455	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004749	          0x488b00	                    mov rax, qword [rax]	      2455	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400474c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2455	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004750	            0xeb30	                           jmp 0x4004782	      2455	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004752	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x4004756	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x4004759	          0x895028	             mov dword [rax + 0x28], edx	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x400475c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4004760	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4004764	          0x4885c0	                           test rax, rax	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4004767	            0x740e	                            je 0x4004777	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4004769	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2463	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x400476d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2463	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4004771	        0x488945e8	             mov qword [rbp - 0x18], rax	      2463	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4004775	            0xeb0b	                           jmp 0x4004782	      2463	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4004777	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2465	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	ELSE_16
0x400477b	          0x488b00	                    mov rax, qword [rax]	      2465	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	ELSE_16
0x400477e	        0x488945e8	             mov qword [rbp - 0x18], rax	      2465	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	ELSE_16
0x4004782	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4004787	     0xf8526fdffff	                           jne 0x40044b3	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x400478d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2469	undo.c	FUNCTION_40	FOR_1	IF_28
0x4004792	     0xf859a000000	                           jne 0x4004832	      2469	undo.c	FUNCTION_40	FOR_1	IF_28
0x4004798	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x400479c	            0x7421	                            je 0x40047bf	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x400479e	      0xbf00000000	                              mov edi, 0	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x40047a3	      0xe800000000	                          call 0x40047a8	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x40047a8	          0x4889c2	                            mov rdx, rax	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x40047ab	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x40047af	          0x4889c6	                            mov rsi, rax	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x40047b2	          0x4889d7	                            mov rdi, rdx	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x40047b5	      0xe800000000	                          call 0x40047ba	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x40047ba	      0xe990030000	                           jmp 0x4004b4f	      2475	undo.c	FUNCTION_40	FOR_1	IF_29
0x40047bf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x40047c3	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x40047c7	            0x7535	                           jne 0x40047fe	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x40047c9	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x40047ce	            0x7917	                           jns 0x40047e7	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x40047d0	      0xbf00000000	                              mov edi, 0	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x40047d5	      0xe800000000	                          call 0x40047da	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x40047da	          0x4889c7	                            mov rdi, rax	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x40047dd	      0xe800000000	                          call 0x40047e2	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x40047e2	      0xe968030000	                           jmp 0x4004b4f	      2484	undo.c	FUNCTION_40	FOR_1	IF_30
0x40047e7	      0xbf00000000	                              mov edi, 0	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x40047ec	      0xe800000000	                          call 0x40047f1	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x40047f1	          0x4889c7	                            mov rdi, rax	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x40047f4	      0xe800000000	                          call 0x40047f9	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x40047f9	      0xe951030000	                           jmp 0x4004b4f	      2484	undo.c	FUNCTION_40	FOR_1	IF_30
0x40047fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2487	undo.c	FUNCTION_40	FOR_1
0x4004802	        0x488945c8	             mov qword [rbp - 0x38], rax	      2487	undo.c	FUNCTION_40	FOR_1
0x4004806	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      2488	undo.c	FUNCTION_40	FOR_1
0x400480d	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2489	undo.c	FUNCTION_40	FOR_1
0x4004814	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2490	undo.c	FUNCTION_40	FOR_1	IF_32
0x4004819	            0x7907	                           jns 0x4004822	      2490	undo.c	FUNCTION_40	FOR_1	IF_32
0x400481b	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      2491	undo.c	FUNCTION_40	FOR_1	IF_32
0x4004822	        0x8345b401	               add dword [rbp - 0x4c], 1	      2377	undo.c	FUNCTION_40	FOR_1
0x4004826	        0x837db402	               cmp dword [rbp - 0x4c], 2	      2377	undo.c	FUNCTION_40	FOR_1
0x400482a	     0xf8e12fcffff	                           jle 0x4004442	      2377	undo.c	FUNCTION_40	FOR_1
0x4004830	            0xeb01	                           jmp 0x4004833	      2377	undo.c	FUNCTION_40	FOR_1
0x4004832	              0x90	                                     nop	      2470	undo.c	FUNCTION_40	FOR_1	IF_28
0x4004833	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2496	undo.c	FUNCTION_40	IF_33
0x4004838	     0xf85ad000000	                           jne 0x40048eb	      2496	undo.c	FUNCTION_40	IF_33
0x400483e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2496	undo.c	FUNCTION_40	IF_33
0x4004843	     0xf85f7020000	                           jne 0x4004b40	      2496	undo.c	FUNCTION_40	IF_33
0x4004849	      0xe99d000000	                           jmp 0x40048eb	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x400484e	      0xbf00000000	                              mov edi, 0	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x4004853	      0xe800000000	                          call 0x4004858	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x4004858	    0x488b05000000	            mov rax, qword [0x0400485f] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x400485f	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4004866	        0x488945e8	             mov qword [rbp - 0x18], rax	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x400486a	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x400486f	            0x7514	                           jne 0x4004885	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4004871	    0x488b05000000	            mov rax, qword [0x04004878] 	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4004878	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x400487f	        0x488945e8	             mov qword [rbp - 0x18], rax	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4004883	            0xeb0b	                           jmp 0x4004890	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4004885	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2510	undo.c	FUNCTION_40	IF_33	WHILE_2	ELSE_18
0x4004889	          0x488b00	                    mov rax, qword [rax]	      2510	undo.c	FUNCTION_40	IF_33	WHILE_2	ELSE_18
0x400488c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2510	undo.c	FUNCTION_40	IF_33	WHILE_2	ELSE_18
0x4004890	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4004895	            0x7462	                            je 0x40048f9	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4004897	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400489c	            0x7e0c	                           jle 0x40048aa	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400489e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40048a2	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40048a5	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40048a8	            0x754f	                           jne 0x40048f9	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40048aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40048ae	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40048b2	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40048b6	            0x7506	                           jne 0x40048be	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40048b8	        0x837dc000	               cmp dword [rbp - 0x40], 0	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40048bc	            0x743b	                            je 0x40048f9	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40048be	    0x488b05000000	            mov rax, qword [0x040048c5] 	      2514	undo.c	FUNCTION_40	IF_33	WHILE_2
0x40048c5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2514	undo.c	FUNCTION_40	IF_33	WHILE_2
0x40048c9	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2514	undo.c	FUNCTION_40	IF_33	WHILE_2
0x40048d0	      0xbf01000000	                              mov edi, 1	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x40048d5	      0xe877020000	                     call sym.u_undoredo	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x40048da	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2516	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x40048df	            0x7e0a	                           jle 0x40048eb	      2516	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x40048e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x40048e5	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x40048e8	          0x895028	             mov dword [rax + 0x28], edx	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x40048eb	    0x8b0500000000	            mov eax, dword [0x040048f1] 	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x40048f1	            0x85c0	                           test eax, eax	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x40048f3	     0xf8455ffffff	                            je 0x400484e	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x40048f9	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2521	undo.c	FUNCTION_40	IF_33	IF_37
0x40048fe	     0xf8e3c020000	                           jle 0x4004b40	      2521	undo.c	FUNCTION_40	IF_33	IF_37
0x4004904	      0xe920020000	                           jmp 0x4004b29	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004909	      0xbf00000000	                              mov edi, 0	      2529	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_11
0x400490e	      0xe800000000	                          call 0x4004913	      2529	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_11
0x4004913	    0x488b05000000	            mov rax, qword [0x0400491a] 	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x400491a	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004921	        0x488945e8	             mov qword [rbp - 0x18], rax	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004925	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x400492a	     0xf8409020000	                            je 0x4004b39	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x4004930	            0xeb0c	                           jmp 0x400493e	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4004932	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2538	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4004936	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2538	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x400493a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2538	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x400493e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4004942	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4004946	          0x4885c0	                           test rax, rax	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4004949	            0x7410	                            je 0x400495b	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x400494b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x400494f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4004953	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4004956	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x4004959	            0x74d7	                            je 0x4004932	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x400495b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2541	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x400495f	        0x488945f0	             mov qword [rbp - 0x10], rax	      2541	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004963	            0xeb0c	                           jmp 0x4004971	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4004965	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2544	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4004969	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2544	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x400496d	        0x488945f0	             mov qword [rbp - 0x10], rax	      2544	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4004971	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4004975	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4004979	          0x4885c0	                           test rax, rax	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x400497c	            0x7410	                            je 0x400498e	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x400497e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4004982	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4004986	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x4004989	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x400498c	            0x74d7	                            je 0x4004965	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x400498e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004992	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004996	     0xf84bd000000	                            je 0x4004a59	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x400499c	            0xeb0c	                           jmp 0x40049aa	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x400499e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2550	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40049a2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2550	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40049a6	        0x488945e8	             mov qword [rbp - 0x18], rax	      2550	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40049aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40049ae	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40049b2	          0x4885c0	                           test rax, rax	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40049b5	            0x75e7	                           jne 0x400499e	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40049b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40049bb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40049bf	          0x4885c0	                           test rax, rax	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40049c2	            0x7414	                            je 0x40049d8	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40049c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2552	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40049c8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2552	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40049cc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2553	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40049d0	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      2553	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40049d4	        0x48895018	             mov qword [rax + 0x18], rdx	      2552	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40049d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40049dc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40049e0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2555	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40049e4	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      2555	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40049e8	        0x48895010	             mov qword [rax + 0x10], rdx	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40049ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2556	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40049f0	    0x48c740180000	               mov qword [rax + 0x18], 0	      2556	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40049f8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2557	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40049fc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2557	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004a00	        0x48895010	             mov qword [rax + 0x10], rdx	      2557	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004a04	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2558	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004a08	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2558	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004a0c	        0x48895018	             mov qword [rax + 0x18], rdx	      2558	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004a10	    0x488b05000000	            mov rax, qword [0x04004a17] 	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4004a17	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4004a1e	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4004a22	            0x7512	                           jne 0x4004a36	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4004a24	    0x488b05000000	            mov rax, qword [0x04004a2b] 	      2561	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4004a2b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2561	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4004a2f	    0x488990181200	          mov qword [rax + 0x1218], rdx 	      2561	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4004a36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2562	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004a3a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2562	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004a3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4004a42	          0x488b00	                    mov rax, qword [rax]	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4004a45	          0x4885c0	                           test rax, rax	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4004a48	            0x740f	                            je 0x4004a59	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4004a4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2564	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4004a4e	          0x488b00	                    mov rax, qword [rax]	      2564	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4004a51	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2564	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4004a55	        0x48895008	                mov qword [rax + 8], rdx	      2564	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4004a59	    0x488b05000000	            mov rax, qword [0x04004a60] 	      2566	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004a60	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2566	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004a64	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2566	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004a6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4004a6f	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4004a72	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4004a75	     0xf85c1000000	                           jne 0x4004b3c	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4004a7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004a7f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004a83	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004a87	            0x7521	                           jne 0x4004aaa	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004a89	        0x837dc000	               cmp dword [rbp - 0x40], 0	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004a8d	            0x741b	                            je 0x4004aaa	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004a8f	    0x488b05000000	            mov rax, qword [0x04004a96] 	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004a96	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004a9a	        0x4883ea01	                              sub rdx, 1	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004a9e	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004aa5	      0xe996000000	                           jmp 0x4004b40	      2576	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004aaa	      0xbf00000000	                              mov edi, 0	      2579	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_12
0x4004aaf	      0xe89d000000	                     call sym.u_undoredo	      2579	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_12
0x4004ab4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4004ab8	        0x488b4008	                mov rax, qword [rax + 8]	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4004abc	          0x4885c0	                           test rax, rax	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4004abf	            0x7512	                           jne 0x4004ad3	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4004ac1	    0x488b05000000	            mov rax, qword [0x04004ac8] 	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4004ac8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4004acc	    0x488990201200	          mov qword [rax + 0x1220], rdx 	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4004ad3	    0x488b05000000	            mov rax, qword [0x04004ada] 	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004ada	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004ade	        0x488b5208	                mov rdx, qword [rdx + 8]	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004ae2	    0x488990281200	          mov qword [rax + 0x1228], rdx 	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004ae9	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004af0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4004af4	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4004af8	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4004afc	            0x7441	                            je 0x4004b3f	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4004afe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2591	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004b02	        0x488b4008	                mov rax, qword [rax + 8]	      2591	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004b06	        0x488945e8	             mov qword [rbp - 0x18], rax	      2591	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004b0a	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4004b0f	            0x740c	                            je 0x4004b1d	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4004b11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4004b15	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4004b18	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4004b1b	            0x740c	                            je 0x4004b29	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4004b1d	      0xbf00000000	                              mov edi, 0	      2595	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47	CALL_13
0x4004b22	      0xe800000000	                          call 0x4004b27	      2595	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47	CALL_13
0x4004b27	            0xeb17	                           jmp 0x4004b40	      2596	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4004b29	    0x8b0500000000	            mov eax, dword [0x04004b2f] 	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004b2f	            0x85c0	                           test eax, eax	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004b31	     0xf84d2fdffff	                            je 0x4004909	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004b37	            0xeb07	                           jmp 0x4004b40	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004b39	              0x90	                                     nop	      2533	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x4004b3a	            0xeb04	                           jmp 0x4004b40	      2533	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x4004b3c	              0x90	                                     nop	      2569	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4004b3d	            0xeb01	                           jmp 0x4004b40	      2569	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x4004b3f	              0x90	                                     nop	      2589	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4004b40	          0x8b558c	             mov edx, dword [rbp - 0x74]	      2601	undo.c	FUNCTION_40	CALL_14
0x4004b43	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2601	undo.c	FUNCTION_40	CALL_14
0x4004b46	            0x89d6	                            mov esi, edx	      2601	undo.c	FUNCTION_40	CALL_14
0x4004b48	            0x89c7	                            mov edi, eax	      2601	undo.c	FUNCTION_40	CALL_14
0x4004b4a	      0xe8370d0000	                     call sym.u_undo_end	      2601	undo.c	FUNCTION_40	CALL_14
0x4004b4f	              0xc9	                                   leave	      2602	undo.c	FUNCTION_40
0x4004b50	              0xc3	                                     ret	      2602	undo.c	FUNCTION_40
undo_read_time	SWITCH,0:FOR,1:IF,1:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	44
0x4001644	              0x55	                                push rbp	      1043	undo.c	FUNCTION_23
0x4001645	          0x4889e5	                            mov rbp, rsp	      1043	undo.c	FUNCTION_23
0x4001648	        0x4883ec30	                           sub rsp, 0x30	      1043	undo.c	FUNCTION_23
0x400164c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1043	undo.c	FUNCTION_23
0x4001650	    0x64488b042528	                mov rax, qword fs:[0x28]	      1043	undo.c	FUNCTION_23
0x4001659	        0x488945f8	                mov qword [rbp - 8], rax	      1043	undo.c	FUNCTION_23
0x400165d	            0x31c0	                            xor eax, eax	      1043	undo.c	FUNCTION_23
0x400165f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1045	undo.c	FUNCTION_23	IF_1
0x4001663	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1045	undo.c	FUNCTION_23	IF_1
0x4001667	          0x4885c0	                           test rax, rax	      1045	undo.c	FUNCTION_23	IF_1
0x400166a	            0x7458	                            je 0x40016c4	      1045	undo.c	FUNCTION_23	IF_1
0x400166c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1048	undo.c	FUNCTION_23	IF_1
0x4001674	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x4001678	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x400167c	      0xba08000000	                              mov edx, 8	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x4001681	          0x4889ce	                            mov rsi, rcx	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x4001684	          0x4889c7	                            mov rdi, rax	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x4001687	      0xe85e000000	                      call sym.undo_read	      1051	undo.c	FUNCTION_23	IF_1	CALL_1
0x400168c	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x4001693	            0xeb23	                           jmp 0x40016b8	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x4001695	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x4001699	        0x48c1e008	                              shl rax, 8	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x400169d	          0x4889c2	                            mov rdx, rax	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x40016a0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x40016a3	            0x4898	                                    cdqe	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x40016a5	       0xfb64405f0	      movzx eax, byte [rbp + rax - 0x10]	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x40016aa	           0xfb6c0	                           movzx eax, al	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x40016ad	          0x4801d0	                            add rax, rdx	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x40016b0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1053	undo.c	FUNCTION_23	IF_1	FOR_1
0x40016b4	        0x8345e401	               add dword [rbp - 0x1c], 1	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x40016b8	        0x837de407	               cmp dword [rbp - 0x1c], 7	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x40016bc	            0x7ed7	                           jle 0x4001695	      1052	undo.c	FUNCTION_23	IF_1	FOR_1
0x40016be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1054	undo.c	FUNCTION_23	IF_1
0x40016c2	            0xeb10	                           jmp 0x40016d4	      1054	undo.c	FUNCTION_23	IF_1
0x40016c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1057	undo.c	FUNCTION_23	CALL_2
0x40016c8	        0x488b4008	                mov rax, qword [rax + 8]	      1057	undo.c	FUNCTION_23	CALL_2
0x40016cc	          0x4889c7	                            mov rdi, rax	      1057	undo.c	FUNCTION_23	CALL_2
0x40016cf	      0xe800000000	                          call 0x40016d4	      1057	undo.c	FUNCTION_23	CALL_2
0x40016d4	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1058	undo.c	FUNCTION_23
0x40016d8	    0x644833342528	                xor rsi, qword fs:[0x28]	      1058	undo.c	FUNCTION_23
0x40016e1	            0x7405	                            je 0x40016e8	      1058	undo.c	FUNCTION_23
0x40016e3	      0xe800000000	                          call 0x40016e8	      1058	undo.c	FUNCTION_23
0x40016e8	              0xc9	                                   leave	      1058	undo.c	FUNCTION_23
0x40016e9	              0xc3	                                     ret	      1058	undo.c	FUNCTION_23
bufIsChangedNotTerm	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	24
0x4006c3a	              0x55	                                push rbp	      3541	undo.c	FUNCTION_64
0x4006c3b	          0x4889e5	                            mov rbp, rsp	      3541	undo.c	FUNCTION_64
0x4006c3e	        0x4883ec10	                           sub rsp, 0x10	      3541	undo.c	FUNCTION_64
0x4006c42	        0x48897df8	                mov qword [rbp - 8], rdi	      3541	undo.c	FUNCTION_64
0x4006c46	        0x488b45f8	                mov rax, qword [rbp - 8]	      3542	undo.c	FUNCTION_64	CALL_1
0x4006c4a	          0x4889c7	                            mov rdi, rax	      3542	undo.c	FUNCTION_64	CALL_1
0x4006c4d	      0xe800000000	                          call 0x4006c52	      3542	undo.c	FUNCTION_64	CALL_1
0x4006c52	            0x85c0	                           test eax, eax	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c54	            0x752a	                           jne 0x4006c80	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c56	        0x488b45f8	                mov rax, qword [rbp - 8]	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c5a	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c60	            0x85c0	                           test eax, eax	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c62	            0x7515	                           jne 0x4006c79	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c64	        0x488b45f8	                mov rax, qword [rbp - 8]	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c68	      0xbe01000000	                              mov esi, 1	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c6d	          0x4889c7	                            mov rdi, rax	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c70	      0xe800000000	                          call 0x4006c75	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c75	            0x85c0	                           test eax, eax	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c77	            0x7407	                            je 0x4006c80	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c79	      0xb801000000	                              mov eax, 1	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c7e	            0xeb05	                           jmp 0x4006c85	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c80	      0xb800000000	                              mov eax, 0	      3543	undo.c	FUNCTION_64	CALL_2
0x4006c85	              0xc9	                                   leave	      3544	undo.c	FUNCTION_64
0x4006c86	              0xc3	                                     ret	      3544	undo.c	FUNCTION_64
u_compute_hash	SWITCH,0:FOR,1:IF,0:functions,0:ELSE,0:CALL,5:WHILE,0:DO,0	42
0x4000c63	              0x55	                                push rbp	       753	undo.c	FUNCTION_11
0x4000c64	          0x4889e5	                            mov rbp, rsp	       753	undo.c	FUNCTION_11
0x4000c67	    0x4881ec900000	                           sub rsp, 0x90	       753	undo.c	FUNCTION_11
0x4000c6e	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       753	undo.c	FUNCTION_11
0x4000c75	    0x64488b042528	                mov rax, qword fs:[0x28]	       753	undo.c	FUNCTION_11
0x4000c7e	        0x488945f8	                mov qword [rbp - 8], rax	       753	undo.c	FUNCTION_11
0x4000c82	            0x31c0	                            xor eax, eax	       753	undo.c	FUNCTION_11
0x4000c84	        0x488d4590	                   lea rax, [rbp - 0x70]	       758	undo.c	FUNCTION_11	CALL_1
0x4000c88	          0x4889c7	                            mov rdi, rax	       758	undo.c	FUNCTION_11	CALL_1
0x4000c8b	      0xe800000000	                          call 0x4000c90	       758	undo.c	FUNCTION_11	CALL_1
0x4000c90	    0x48c745800100	               mov qword [rbp - 0x80], 1	       759	undo.c	FUNCTION_11	FOR_1
0x4000c98	            0xeb37	                           jmp 0x4000cd1	       759	undo.c	FUNCTION_11	FOR_1
0x4000c9a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x4000c9e	          0x4889c7	                            mov rdi, rax	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x4000ca1	      0xe800000000	                          call 0x4000ca6	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x4000ca6	        0x48894588	             mov qword [rbp - 0x78], rax	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x4000caa	        0x488b4588	             mov rax, qword [rbp - 0x78]	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4000cae	          0x4889c7	                            mov rdi, rax	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4000cb1	      0xe800000000	                          call 0x4000cb6	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4000cb6	          0x8d5001	                      lea edx, [rax + 1]	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4000cb9	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4000cbd	        0x488d4590	                   lea rax, [rbp - 0x70]	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4000cc1	          0x4889ce	                            mov rsi, rcx	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4000cc4	          0x4889c7	                            mov rdi, rax	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4000cc7	      0xe800000000	                          call 0x4000ccc	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4000ccc	      0x4883458001	               add qword [rbp - 0x80], 1	       759	undo.c	FUNCTION_11	FOR_1
0x4000cd1	    0x488b05000000	            mov rax, qword [0x04000cd8] 	       759	undo.c	FUNCTION_11	FOR_1
0x4000cd8	          0x488b00	                    mov rax, qword [rax]	       759	undo.c	FUNCTION_11	FOR_1
0x4000cdb	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       759	undo.c	FUNCTION_11	FOR_1
0x4000cdf	            0x7db9	                           jge 0x4000c9a	       759	undo.c	FUNCTION_11	FOR_1
0x4000ce1	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       764	undo.c	FUNCTION_11	CALL_5
0x4000ce8	        0x488d4590	                   lea rax, [rbp - 0x70]	       764	undo.c	FUNCTION_11	CALL_5
0x4000cec	          0x4889d6	                            mov rsi, rdx	       764	undo.c	FUNCTION_11	CALL_5
0x4000cef	          0x4889c7	                            mov rdi, rax	       764	undo.c	FUNCTION_11	CALL_5
0x4000cf2	      0xe800000000	                          call 0x4000cf7	       764	undo.c	FUNCTION_11	CALL_5
0x4000cf7	              0x90	                                     nop	       765	undo.c	FUNCTION_11
0x4000cf8	        0x488b45f8	                mov rax, qword [rbp - 8]	       765	undo.c	FUNCTION_11
0x4000cfc	    0x644833042528	                xor rax, qword fs:[0x28]	       765	undo.c	FUNCTION_11
0x4000d05	            0x7405	                            je 0x4000d0c	       765	undo.c	FUNCTION_11
0x4000d07	      0xe800000000	                          call 0x4000d0c	       765	undo.c	FUNCTION_11
0x4000d0c	              0xc9	                                   leave	       765	undo.c	FUNCTION_11
0x4000d0d	              0xc3	                                     ret	       765	undo.c	FUNCTION_11
get_undolevel	SWITCH,0:FOR,0:IF,1:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0	12
0x400025d	              0x55	                                push rbp	       366	undo.c	FUNCTION_9
0x400025e	          0x4889e5	                            mov rbp, rsp	       366	undo.c	FUNCTION_9
0x4000261	    0x488b05000000	            mov rax, qword [0x04000268] 	       367	undo.c	FUNCTION_9	IF_1
0x4000268	    0x488b80481600	          mov rax, qword [rax + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x400026f	    0x483dc01dfeff	             cmp rax, 0xfffffffffffe1dc0	       367	undo.c	FUNCTION_9	IF_1
0x4000275	            0x7509	                           jne 0x4000280	       367	undo.c	FUNCTION_9	IF_1
0x4000277	    0x488b05000000	            mov rax, qword [0x0400027e] 	       368	undo.c	FUNCTION_9	IF_1
0x400027e	            0xeb0e	                           jmp 0x400028e	       368	undo.c	FUNCTION_9	IF_1
0x4000280	    0x488b05000000	            mov rax, qword [0x04000287] 	       369	undo.c	FUNCTION_9
0x4000287	    0x488b80481600	          mov rax, qword [rax + 0x1648] 	       369	undo.c	FUNCTION_9
0x400028e	              0x5d	                                 pop rbp	       370	undo.c	FUNCTION_9
0x400028f	              0xc3	                                     ret	       370	undo.c	FUNCTION_9
bufIsChanged	SWITCH,0:FOR,0:IF,1:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	17
0x4006c02	              0x55	                                push rbp	      3528	undo.c	FUNCTION_63
0x4006c03	          0x4889e5	                            mov rbp, rsp	      3528	undo.c	FUNCTION_63
0x4006c06	        0x4883ec10	                           sub rsp, 0x10	      3528	undo.c	FUNCTION_63
0x4006c0a	        0x48897df8	                mov qword [rbp - 8], rdi	      3528	undo.c	FUNCTION_63
0x4006c0e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4006c12	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4006c19	          0x4889c7	                            mov rdi, rax	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4006c1c	      0xe800000000	                          call 0x4006c21	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4006c21	            0x85c0	                           test eax, eax	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4006c23	            0x7407	                            je 0x4006c2c	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4006c25	      0xb801000000	                              mov eax, 1	      3531	undo.c	FUNCTION_63	IF_1
0x4006c2a	            0xeb0c	                           jmp 0x4006c38	      3531	undo.c	FUNCTION_63	IF_1
0x4006c2c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3533	undo.c	FUNCTION_63	CALL_2
0x4006c30	          0x4889c7	                            mov rdi, rax	      3533	undo.c	FUNCTION_63	CALL_2
0x4006c33	      0xe800000000	                          call 0x4006c38	      3533	undo.c	FUNCTION_63	CALL_2
0x4006c38	              0xc9	                                   leave	      3534	undo.c	FUNCTION_63
0x4006c39	              0xc3	                                     ret	      3534	undo.c	FUNCTION_63
u_blockfree	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,2:WHILE,1:DO,0	23
0x4006b8d	              0x55	                                push rbp	      3503	undo.c	FUNCTION_61
0x4006b8e	          0x4889e5	                            mov rbp, rsp	      3503	undo.c	FUNCTION_61
0x4006b91	        0x4883ec10	                           sub rsp, 0x10	      3503	undo.c	FUNCTION_61
0x4006b95	        0x48897df8	                mov qword [rbp - 8], rdi	      3503	undo.c	FUNCTION_61
0x4006b99	            0xeb1f	                           jmp 0x4006bba	      3504	undo.c	FUNCTION_61	WHILE_1
0x4006b9b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3505	undo.c	FUNCTION_61	CALL_1
0x4006b9f	    0x488b88181200	          mov rcx, qword [rax + 0x1218] 	      3505	undo.c	FUNCTION_61	CALL_1
0x4006ba6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3505	undo.c	FUNCTION_61	CALL_1
0x4006baa	      0xba00000000	                              mov edx, 0	      3505	undo.c	FUNCTION_61	CALL_1
0x4006baf	          0x4889ce	                            mov rsi, rcx	      3505	undo.c	FUNCTION_61	CALL_1
0x4006bb2	          0x4889c7	                            mov rdi, rax	      3505	undo.c	FUNCTION_61	CALL_1
0x4006bb5	      0xe86df9ffff	                   call sym.u_freeheader	      3505	undo.c	FUNCTION_61	CALL_1
0x4006bba	        0x488b45f8	                mov rax, qword [rbp - 8]	      3504	undo.c	FUNCTION_61	WHILE_1
0x4006bbe	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      3504	undo.c	FUNCTION_61	WHILE_1
0x4006bc5	          0x4885c0	                           test rax, rax	      3504	undo.c	FUNCTION_61	WHILE_1
0x4006bc8	            0x75d1	                           jne 0x4006b9b	      3504	undo.c	FUNCTION_61	WHILE_1
0x4006bca	        0x488b45f8	                mov rax, qword [rbp - 8]	      3506	undo.c	FUNCTION_61	CALL_2
0x4006bce	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3506	undo.c	FUNCTION_61	CALL_2
0x4006bd5	          0x4889c7	                            mov rdi, rax	      3506	undo.c	FUNCTION_61	CALL_2
0x4006bd8	      0xe800000000	                          call 0x4006bdd	      3506	undo.c	FUNCTION_61	CALL_2
0x4006bdd	              0x90	                                     nop	      3507	undo.c	FUNCTION_61
0x4006bde	              0xc9	                                   leave	      3507	undo.c	FUNCTION_61
0x4006bdf	              0xc3	                                     ret	      3507	undo.c	FUNCTION_61
serialize_header	SWITCH,0:FOR,0:IF,8:functions,0:ELSE,1:CALL,31:WHILE,0:DO,0	262
0x4001945	              0x55	                                push rbp	      1145	undo.c	FUNCTION_26
0x4001946	          0x4889e5	                            mov rbp, rsp	      1145	undo.c	FUNCTION_26
0x4001949	              0x53	                                push rbx	      1145	undo.c	FUNCTION_26
0x400194a	        0x4883ec48	                           sub rsp, 0x48	      1145	undo.c	FUNCTION_26
0x400194e	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1145	undo.c	FUNCTION_26
0x4001952	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1145	undo.c	FUNCTION_26
0x4001956	    0x64488b042528	                mov rax, qword fs:[0x28]	      1145	undo.c	FUNCTION_26
0x400195f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1145	undo.c	FUNCTION_26
0x4001963	            0x31c0	                            xor eax, eax	      1145	undo.c	FUNCTION_26
0x4001965	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1147	undo.c	FUNCTION_26
0x4001969	          0x488b00	                    mov rax, qword [rax]	      1147	undo.c	FUNCTION_26
0x400196c	        0x488945d0	             mov qword [rbp - 0x30], rax	      1147	undo.c	FUNCTION_26
0x4001970	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1148	undo.c	FUNCTION_26
0x4001974	        0x488b4008	                mov rax, qword [rax + 8]	      1148	undo.c	FUNCTION_26
0x4001978	        0x488945d8	             mov qword [rbp - 0x28], rax	      1148	undo.c	FUNCTION_26
0x400197c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x4001980	          0x4889c1	                            mov rcx, rax	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x4001983	      0xba01000000	                              mov edx, 1	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x4001988	      0xbe09000000	                              mov esi, 9	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x400198d	      0xbf00000000	                              mov edi, 0	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x4001992	      0xe800000000	                          call 0x4001997	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x4001997	        0x4883f801	                              cmp rax, 1	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x400199b	            0x740a	                            je 0x40019a7	      1152	undo.c	FUNCTION_26	IF_1	CALL_1
0x400199d	      0xb800000000	                              mov eax, 0	      1153	undo.c	FUNCTION_26	IF_1
0x40019a2	      0xe9a9030000	                           jmp 0x4001d50	      1153	undo.c	FUNCTION_26	IF_1
0x40019a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1158	undo.c	FUNCTION_26	IF_2
0x40019ab	    0x488b80101500	          mov rax, qword [rax + 0x1510] 	      1158	undo.c	FUNCTION_26	IF_2
0x40019b2	           0xfb600	                   movzx eax, byte [rax]	      1158	undo.c	FUNCTION_26	IF_2
0x40019b5	            0x84c0	                             test al, al	      1158	undo.c	FUNCTION_26	IF_2
0x40019b7	     0xf842d010000	                            je 0x4001aea	      1158	undo.c	FUNCTION_26	IF_2
0x40019bd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1163	undo.c	FUNCTION_26	IF_2	CALL_2
0x40019c1	      0xba02000000	                              mov edx, 2	      1163	undo.c	FUNCTION_26	IF_2	CALL_2
0x40019c6	      0xbe02800000	                         mov esi, 0x8002	      1163	undo.c	FUNCTION_26	IF_2	CALL_2
0x40019cb	          0x4889c7	                            mov rdi, rax	      1163	undo.c	FUNCTION_26	IF_2	CALL_2
0x40019ce	      0xe816faffff	               call sym.undo_write_bytes	      1163	undo.c	FUNCTION_26	IF_2	CALL_2
0x40019d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x40019d7	    0x488b98101500	          mov rbx, qword [rax + 0x1510] 	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x40019de	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x40019e2	          0x4889c7	                            mov rdi, rax	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x40019e5	      0xe800000000	                          call 0x40019ea	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x40019ea	            0x89c7	                            mov edi, eax	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x40019ec	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x40019f0	        0x488d45c8	                   lea rax, [rbp - 0x38]	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x40019f4	          0x4889d1	                            mov rcx, rdx	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x40019f7	          0x4889c2	                            mov rdx, rax	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x40019fa	          0x4889de	                            mov rsi, rbx	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x40019fd	      0xe800000000	                          call 0x4001a02	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x4001a02	          0x4889c2	                            mov rdx, rax	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x4001a05	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x4001a09	        0x48895010	             mov qword [rax + 0x10], rdx	      1164	undo.c	FUNCTION_26	IF_2	CALL_4
0x4001a0d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1166	undo.c	FUNCTION_26	IF_2	IF_3
0x4001a11	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1166	undo.c	FUNCTION_26	IF_2	IF_3
0x4001a15	          0x4885c0	                           test rax, rax	      1166	undo.c	FUNCTION_26	IF_2	IF_3
0x4001a18	            0x750a	                           jne 0x4001a24	      1166	undo.c	FUNCTION_26	IF_2	IF_3
0x4001a1a	      0xb800000000	                              mov eax, 0	      1167	undo.c	FUNCTION_26	IF_2	IF_3
0x4001a1f	      0xe92c030000	                           jmp 0x4001d50	      1167	undo.c	FUNCTION_26	IF_2	IF_3
0x4001a24	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x4001a27	          0x4863f0	                         movsxd rsi, eax	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x4001a2a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x4001a2e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x4001a32	          0x4889d1	                            mov rcx, rdx	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x4001a35	      0xba01000000	                              mov edx, 1	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x4001a3a	          0x4889c7	                            mov rdi, rax	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x4001a3d	      0xe800000000	                          call 0x4001a42	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x4001a42	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1168	undo.c	FUNCTION_26	IF_2	CALL_5
0x4001a45	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1169	undo.c	FUNCTION_26	IF_2	CALL_6
0x4001a49	          0x4889c7	                            mov rdi, rax	      1169	undo.c	FUNCTION_26	IF_2	CALL_6
0x4001a4c	      0xe800000000	                          call 0x4001a51	      1169	undo.c	FUNCTION_26	IF_2	CALL_6
0x4001a51	        0x837dc401	               cmp dword [rbp - 0x3c], 1	      1170	undo.c	FUNCTION_26	IF_2	IF_4
0x4001a55	            0x7426	                            je 0x4001a7d	      1170	undo.c	FUNCTION_26	IF_2	IF_4
0x4001a57	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1172	undo.c	FUNCTION_26	IF_2	IF_4	CALL_7
0x4001a5b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1172	undo.c	FUNCTION_26	IF_2	IF_4	CALL_7
0x4001a5f	          0x4889c7	                            mov rdi, rax	      1172	undo.c	FUNCTION_26	IF_2	IF_4	CALL_7
0x4001a62	      0xe800000000	                          call 0x4001a67	      1172	undo.c	FUNCTION_26	IF_2	IF_4	CALL_7
0x4001a67	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1173	undo.c	FUNCTION_26	IF_2	IF_4
0x4001a6b	    0x48c740100000	               mov qword [rax + 0x10], 0	      1173	undo.c	FUNCTION_26	IF_2	IF_4
0x4001a73	      0xb800000000	                              mov eax, 0	      1174	undo.c	FUNCTION_26	IF_2	IF_4
0x4001a78	      0xe9d3020000	                           jmp 0x4001d50	      1174	undo.c	FUNCTION_26	IF_2	IF_4
0x4001a7d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x4001a81	          0x4889c7	                            mov rdi, rax	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x4001a84	      0xe800000000	                          call 0x4001a89	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x4001a89	            0x89c7	                            mov edi, eax	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x4001a8b	      0xe800000000	                          call 0x4001a90	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x4001a90	            0x85c0	                           test eax, eax	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x4001a92	            0x746c	                            je 0x4001b00	      1177	undo.c	FUNCTION_26	IF_2	IF_5	CALL_9
0x4001a94	      0xbf00200000	                         mov edi, 0x2000	      1179	undo.c	FUNCTION_26	IF_2	IF_5	CALL_10
0x4001a99	      0xe800000000	                          call 0x4001a9e	      1179	undo.c	FUNCTION_26	IF_2	IF_5	CALL_10
0x4001a9e	          0x4889c2	                            mov rdx, rax	      1179	undo.c	FUNCTION_26	IF_2	IF_5	CALL_10
0x4001aa1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1179	undo.c	FUNCTION_26	IF_2	IF_5	CALL_10
0x4001aa5	        0x48895018	             mov qword [rax + 0x18], rdx	      1179	undo.c	FUNCTION_26	IF_2	IF_5	CALL_10
0x4001aa9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1180	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x4001aad	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1180	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x4001ab1	          0x4885c0	                           test rax, rax	      1180	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x4001ab4	            0x7526	                           jne 0x4001adc	      1180	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x4001ab6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1182	undo.c	FUNCTION_26	IF_2	IF_5	IF_6	CALL_11
0x4001aba	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1182	undo.c	FUNCTION_26	IF_2	IF_5	IF_6	CALL_11
0x4001abe	          0x4889c7	                            mov rdi, rax	      1182	undo.c	FUNCTION_26	IF_2	IF_5	IF_6	CALL_11
0x4001ac1	      0xe800000000	                          call 0x4001ac6	      1182	undo.c	FUNCTION_26	IF_2	IF_5	IF_6	CALL_11
0x4001ac6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1183	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x4001aca	    0x48c740100000	               mov qword [rax + 0x10], 0	      1183	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x4001ad2	      0xb800000000	                              mov eax, 0	      1184	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x4001ad7	      0xe974020000	                           jmp 0x4001d50	      1184	undo.c	FUNCTION_26	IF_2	IF_5	IF_6
0x4001adc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1186	undo.c	FUNCTION_26	IF_2	IF_5
0x4001ae0	    0x48c740200000	               mov qword [rax + 0x20], 0	      1186	undo.c	FUNCTION_26	IF_2	IF_5
0x4001ae8	            0xeb16	                           jmp 0x4001b00	      1186	undo.c	FUNCTION_26	IF_2	IF_5
0x4001aea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1191	undo.c	FUNCTION_26	CALL_12
0x4001aee	      0xba02000000	                              mov edx, 2	      1191	undo.c	FUNCTION_26	CALL_12
0x4001af3	      0xbe02000000	                              mov esi, 2	      1191	undo.c	FUNCTION_26	CALL_12
0x4001af8	          0x4889c7	                            mov rdi, rax	      1191	undo.c	FUNCTION_26	CALL_12
0x4001afb	      0xe8e9f8ffff	               call sym.undo_write_bytes	      1191	undo.c	FUNCTION_26	CALL_12
0x4001b00	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x4001b04	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x4001b08	      0xba20000000	                           mov edx, 0x20	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x4001b0d	          0x4889ce	                            mov rsi, rcx	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x4001b10	          0x4889c7	                            mov rdi, rax	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x4001b13	      0xe8b1f5ffff	                     call sym.undo_write	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x4001b18	            0x85c0	                           test eax, eax	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x4001b1a	            0x750a	                           jne 0x4001b26	      1196	undo.c	FUNCTION_26	IF_7	CALL_13
0x4001b1c	      0xb800000000	                              mov eax, 0	      1197	undo.c	FUNCTION_26	IF_7
0x4001b21	      0xe92a020000	                           jmp 0x4001d50	      1197	undo.c	FUNCTION_26	IF_7
0x4001b26	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1200	undo.c	FUNCTION_26	CALL_14
0x4001b2a	          0x488b00	                    mov rax, qword [rax]	      1200	undo.c	FUNCTION_26	CALL_14
0x4001b2d	          0x4889c1	                            mov rcx, rax	      1200	undo.c	FUNCTION_26	CALL_14
0x4001b30	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1200	undo.c	FUNCTION_26	CALL_14
0x4001b34	      0xba04000000	                              mov edx, 4	      1200	undo.c	FUNCTION_26	CALL_14
0x4001b39	          0x4889ce	                            mov rsi, rcx	      1200	undo.c	FUNCTION_26	CALL_14
0x4001b3c	          0x4889c7	                            mov rdi, rax	      1200	undo.c	FUNCTION_26	CALL_14
0x4001b3f	      0xe8a5f8ffff	               call sym.undo_write_bytes	      1200	undo.c	FUNCTION_26	CALL_14
0x4001b44	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1201	undo.c	FUNCTION_26	CALL_15
0x4001b48	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      1201	undo.c	FUNCTION_26	CALL_15
0x4001b4f	          0x4885c0	                           test rax, rax	      1201	undo.c	FUNCTION_26	CALL_15
0x4001b52	            0x7415	                            je 0x4001b69	      1201	undo.c	FUNCTION_26	CALL_15
0x4001b54	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1201	undo.c	FUNCTION_26	CALL_15
0x4001b58	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      1201	undo.c	FUNCTION_26	CALL_15
0x4001b5f	          0x4889c7	                            mov rdi, rax	      1201	undo.c	FUNCTION_26	CALL_15
0x4001b62	      0xe800000000	                          call 0x4001b67	      1201	undo.c	FUNCTION_26	CALL_15
0x4001b67	            0xeb05	                           jmp 0x4001b6e	      1201	undo.c	FUNCTION_26	CALL_15
0x4001b69	      0xb800000000	                              mov eax, 0	      1201	undo.c	FUNCTION_26	CALL_15
0x4001b6e	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1201	undo.c	FUNCTION_26	CALL_15
0x4001b71	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1202	undo.c	FUNCTION_26	CALL_16
0x4001b74	          0x4863c8	                         movsxd rcx, eax	      1202	undo.c	FUNCTION_26	CALL_16
0x4001b77	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1202	undo.c	FUNCTION_26	CALL_16
0x4001b7b	      0xba04000000	                              mov edx, 4	      1202	undo.c	FUNCTION_26	CALL_16
0x4001b80	          0x4889ce	                            mov rsi, rcx	      1202	undo.c	FUNCTION_26	CALL_16
0x4001b83	          0x4889c7	                            mov rdi, rax	      1202	undo.c	FUNCTION_26	CALL_16
0x4001b86	      0xe85ef8ffff	               call sym.undo_write_bytes	      1202	undo.c	FUNCTION_26	CALL_16
0x4001b8b	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001b8f	            0x7e2e	                           jle 0x4001bbf	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001b91	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001b94	          0x4863d0	                         movsxd rdx, eax	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001b97	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001b9b	    0x488b88601200	          mov rcx, qword [rax + 0x1260] 	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001ba2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001ba6	          0x4889ce	                            mov rsi, rcx	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001ba9	          0x4889c7	                            mov rdi, rax	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001bac	      0xe8fcf6ffff	                   call sym.fwrite_crypt	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001bb1	            0x85c0	                           test eax, eax	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001bb3	            0x750a	                           jne 0x4001bbf	      1203	undo.c	FUNCTION_26	IF_8	CALL_17
0x4001bb5	      0xb800000000	                              mov eax, 0	      1204	undo.c	FUNCTION_26	IF_8
0x4001bba	      0xe991010000	                           jmp 0x4001d50	      1204	undo.c	FUNCTION_26	IF_8
0x4001bbf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1205	undo.c	FUNCTION_26	CALL_18
0x4001bc3	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      1205	undo.c	FUNCTION_26	CALL_18
0x4001bca	          0x4889c1	                            mov rcx, rax	      1205	undo.c	FUNCTION_26	CALL_18
0x4001bcd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1205	undo.c	FUNCTION_26	CALL_18
0x4001bd1	      0xba04000000	                              mov edx, 4	      1205	undo.c	FUNCTION_26	CALL_18
0x4001bd6	          0x4889ce	                            mov rsi, rcx	      1205	undo.c	FUNCTION_26	CALL_18
0x4001bd9	          0x4889c7	                            mov rdi, rax	      1205	undo.c	FUNCTION_26	CALL_18
0x4001bdc	      0xe808f8ffff	               call sym.undo_write_bytes	      1205	undo.c	FUNCTION_26	CALL_18
0x4001be1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1206	undo.c	FUNCTION_26	CALL_19
0x4001be5	    0x8b8070120000	          mov eax, dword [rax + 0x1270] 	      1206	undo.c	FUNCTION_26	CALL_19
0x4001beb	          0x4863c8	                         movsxd rcx, eax	      1206	undo.c	FUNCTION_26	CALL_19
0x4001bee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1206	undo.c	FUNCTION_26	CALL_19
0x4001bf2	      0xba04000000	                              mov edx, 4	      1206	undo.c	FUNCTION_26	CALL_19
0x4001bf7	          0x4889ce	                            mov rsi, rcx	      1206	undo.c	FUNCTION_26	CALL_19
0x4001bfa	          0x4889c7	                            mov rdi, rax	      1206	undo.c	FUNCTION_26	CALL_19
0x4001bfd	      0xe8e7f7ffff	               call sym.undo_write_bytes	      1206	undo.c	FUNCTION_26	CALL_19
0x4001c02	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1209	undo.c	FUNCTION_26	CALL_20
0x4001c06	    0x488b90181200	          mov rdx, qword [rax + 0x1218] 	      1209	undo.c	FUNCTION_26	CALL_20
0x4001c0d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1209	undo.c	FUNCTION_26	CALL_20
0x4001c11	          0x4889d6	                            mov rsi, rdx	      1209	undo.c	FUNCTION_26	CALL_20
0x4001c14	          0x4889c7	                            mov rdi, rax	      1209	undo.c	FUNCTION_26	CALL_20
0x4001c17	      0xe85bf8ffff	                 call sym.put_header_ptr	      1209	undo.c	FUNCTION_26	CALL_20
0x4001c1c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1210	undo.c	FUNCTION_26	CALL_21
0x4001c20	    0x488b90201200	          mov rdx, qword [rax + 0x1220] 	      1210	undo.c	FUNCTION_26	CALL_21
0x4001c27	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1210	undo.c	FUNCTION_26	CALL_21
0x4001c2b	          0x4889d6	                            mov rsi, rdx	      1210	undo.c	FUNCTION_26	CALL_21
0x4001c2e	          0x4889c7	                            mov rdi, rax	      1210	undo.c	FUNCTION_26	CALL_21
0x4001c31	      0xe841f8ffff	                 call sym.put_header_ptr	      1210	undo.c	FUNCTION_26	CALL_21
0x4001c36	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1211	undo.c	FUNCTION_26	CALL_22
0x4001c3a	    0x488b90281200	          mov rdx, qword [rax + 0x1228] 	      1211	undo.c	FUNCTION_26	CALL_22
0x4001c41	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1211	undo.c	FUNCTION_26	CALL_22
0x4001c45	          0x4889d6	                            mov rsi, rdx	      1211	undo.c	FUNCTION_26	CALL_22
0x4001c48	          0x4889c7	                            mov rdi, rax	      1211	undo.c	FUNCTION_26	CALL_22
0x4001c4b	      0xe827f8ffff	                 call sym.put_header_ptr	      1211	undo.c	FUNCTION_26	CALL_22
0x4001c50	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1213	undo.c	FUNCTION_26	CALL_23
0x4001c54	    0x8b8030120000	          mov eax, dword [rax + 0x1230] 	      1213	undo.c	FUNCTION_26	CALL_23
0x4001c5a	          0x4863c8	                         movsxd rcx, eax	      1213	undo.c	FUNCTION_26	CALL_23
0x4001c5d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1213	undo.c	FUNCTION_26	CALL_23
0x4001c61	      0xba04000000	                              mov edx, 4	      1213	undo.c	FUNCTION_26	CALL_23
0x4001c66	          0x4889ce	                            mov rsi, rcx	      1213	undo.c	FUNCTION_26	CALL_23
0x4001c69	          0x4889c7	                            mov rdi, rax	      1213	undo.c	FUNCTION_26	CALL_23
0x4001c6c	      0xe878f7ffff	               call sym.undo_write_bytes	      1213	undo.c	FUNCTION_26	CALL_23
0x4001c71	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1214	undo.c	FUNCTION_26	CALL_24
0x4001c75	    0x488b80381200	          mov rax, qword [rax + 0x1238] 	      1214	undo.c	FUNCTION_26	CALL_24
0x4001c7c	          0x4889c1	                            mov rcx, rax	      1214	undo.c	FUNCTION_26	CALL_24
0x4001c7f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1214	undo.c	FUNCTION_26	CALL_24
0x4001c83	      0xba04000000	                              mov edx, 4	      1214	undo.c	FUNCTION_26	CALL_24
0x4001c88	          0x4889ce	                            mov rsi, rcx	      1214	undo.c	FUNCTION_26	CALL_24
0x4001c8b	          0x4889c7	                            mov rdi, rax	      1214	undo.c	FUNCTION_26	CALL_24
0x4001c8e	      0xe856f7ffff	               call sym.undo_write_bytes	      1214	undo.c	FUNCTION_26	CALL_24
0x4001c93	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1215	undo.c	FUNCTION_26	CALL_25
0x4001c97	    0x488b80481200	          mov rax, qword [rax + 0x1248] 	      1215	undo.c	FUNCTION_26	CALL_25
0x4001c9e	          0x4889c1	                            mov rcx, rax	      1215	undo.c	FUNCTION_26	CALL_25
0x4001ca1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1215	undo.c	FUNCTION_26	CALL_25
0x4001ca5	      0xba04000000	                              mov edx, 4	      1215	undo.c	FUNCTION_26	CALL_25
0x4001caa	          0x4889ce	                            mov rsi, rcx	      1215	undo.c	FUNCTION_26	CALL_25
0x4001cad	          0x4889c7	                            mov rdi, rax	      1215	undo.c	FUNCTION_26	CALL_25
0x4001cb0	      0xe834f7ffff	               call sym.undo_write_bytes	      1215	undo.c	FUNCTION_26	CALL_25
0x4001cb5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1216	undo.c	FUNCTION_26	CALL_26
0x4001cb9	    0x488b80501200	          mov rax, qword [rax + 0x1250] 	      1216	undo.c	FUNCTION_26	CALL_26
0x4001cc0	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1216	undo.c	FUNCTION_26	CALL_26
0x4001cc4	          0x4889d6	                            mov rsi, rdx	      1216	undo.c	FUNCTION_26	CALL_26
0x4001cc7	          0x4889c7	                            mov rdi, rax	      1216	undo.c	FUNCTION_26	CALL_26
0x4001cca	      0xe800000000	                          call 0x4001ccf	      1216	undo.c	FUNCTION_26	CALL_26
0x4001ccf	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      1217	undo.c	FUNCTION_26	CALL_27
0x4001cd3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1217	undo.c	FUNCTION_26	CALL_27
0x4001cd7	      0xba08000000	                              mov edx, 8	      1217	undo.c	FUNCTION_26	CALL_27
0x4001cdc	          0x4889ce	                            mov rsi, rcx	      1217	undo.c	FUNCTION_26	CALL_27
0x4001cdf	          0x4889c7	                            mov rdi, rax	      1217	undo.c	FUNCTION_26	CALL_27
0x4001ce2	      0xe8e2f3ffff	                     call sym.undo_write	      1217	undo.c	FUNCTION_26	CALL_27
0x4001ce7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1220	undo.c	FUNCTION_26	CALL_28
0x4001ceb	      0xba01000000	                              mov edx, 1	      1220	undo.c	FUNCTION_26	CALL_28
0x4001cf0	      0xbe04000000	                              mov esi, 4	      1220	undo.c	FUNCTION_26	CALL_28
0x4001cf5	          0x4889c7	                            mov rdi, rax	      1220	undo.c	FUNCTION_26	CALL_28
0x4001cf8	      0xe8ecf6ffff	               call sym.undo_write_bytes	      1220	undo.c	FUNCTION_26	CALL_28
0x4001cfd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1221	undo.c	FUNCTION_26	CALL_29
0x4001d01	      0xba01000000	                              mov edx, 1	      1221	undo.c	FUNCTION_26	CALL_29
0x4001d06	      0xbe01000000	                              mov esi, 1	      1221	undo.c	FUNCTION_26	CALL_29
0x4001d0b	          0x4889c7	                            mov rdi, rax	      1221	undo.c	FUNCTION_26	CALL_29
0x4001d0e	      0xe8d6f6ffff	               call sym.undo_write_bytes	      1221	undo.c	FUNCTION_26	CALL_29
0x4001d13	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1222	undo.c	FUNCTION_26	CALL_30
0x4001d17	    0x488b80401200	          mov rax, qword [rax + 0x1240] 	      1222	undo.c	FUNCTION_26	CALL_30
0x4001d1e	          0x4889c1	                            mov rcx, rax	      1222	undo.c	FUNCTION_26	CALL_30
0x4001d21	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1222	undo.c	FUNCTION_26	CALL_30
0x4001d25	      0xba04000000	                              mov edx, 4	      1222	undo.c	FUNCTION_26	CALL_30
0x4001d2a	          0x4889ce	                            mov rsi, rcx	      1222	undo.c	FUNCTION_26	CALL_30
0x4001d2d	          0x4889c7	                            mov rdi, rax	      1222	undo.c	FUNCTION_26	CALL_30
0x4001d30	      0xe8b4f6ffff	               call sym.undo_write_bytes	      1222	undo.c	FUNCTION_26	CALL_30
0x4001d35	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1224	undo.c	FUNCTION_26	CALL_31
0x4001d39	      0xba01000000	                              mov edx, 1	      1224	undo.c	FUNCTION_26	CALL_31
0x4001d3e	      0xbe00000000	                              mov esi, 0	      1224	undo.c	FUNCTION_26	CALL_31
0x4001d43	          0x4889c7	                            mov rdi, rax	      1224	undo.c	FUNCTION_26	CALL_31
0x4001d46	      0xe89ef6ffff	               call sym.undo_write_bytes	      1224	undo.c	FUNCTION_26	CALL_31
0x4001d4b	      0xb801000000	                              mov eax, 1	      1226	undo.c	FUNCTION_26
0x4001d50	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1227	undo.c	FUNCTION_26
0x4001d54	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1227	undo.c	FUNCTION_26
0x4001d5d	            0x7405	                            je 0x4001d64	      1227	undo.c	FUNCTION_26
0x4001d5f	      0xe800000000	                          call 0x4001d64	      1227	undo.c	FUNCTION_26
0x4001d64	        0x4883c448	                           add rsp, 0x48	      1227	undo.c	FUNCTION_26
0x4001d68	              0x5b	                                 pop rbx	      1227	undo.c	FUNCTION_26
0x4001d69	              0x5d	                                 pop rbp	      1227	undo.c	FUNCTION_26
0x4001d6a	              0xc3	                                     ret	      1227	undo.c	FUNCTION_26
ex_undolist	SWITCH,0:FOR,1:IF,9:functions,0:ELSE,5:CALL,21:WHILE,2:DO,0	259
0x4005c39	              0x55	                                push rbp	      3007	undo.c	FUNCTION_44
0x4005c3a	          0x4889e5	                            mov rbp, rsp	      3007	undo.c	FUNCTION_44
0x4005c3d	            0x4155	                                push r13	      3007	undo.c	FUNCTION_44
0x4005c3f	            0x4154	                                push r12	      3007	undo.c	FUNCTION_44
0x4005c41	              0x53	                                push rbx	      3007	undo.c	FUNCTION_44
0x4005c42	        0x4883ec58	                           sub rsp, 0x58	      3007	undo.c	FUNCTION_44
0x4005c46	        0x48897d98	             mov qword [rbp - 0x68], rdi	      3007	undo.c	FUNCTION_44
0x4005c4a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3007	undo.c	FUNCTION_44
0x4005c53	        0x488945d8	             mov qword [rbp - 0x28], rax	      3007	undo.c	FUNCTION_44
0x4005c57	            0x31c0	                            xor eax, eax	      3007	undo.c	FUNCTION_44
0x4005c59	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      3012	undo.c	FUNCTION_44
0x4005c60	    0x8b0500000000	            mov eax, dword [0x04005c66] 	      3020	undo.c	FUNCTION_44
0x4005c66	          0x83c001	                              add eax, 1	      3020	undo.c	FUNCTION_44
0x4005c69	    0x890500000000	            mov dword [0x04005c6f], eax 	      3020	undo.c	FUNCTION_44
0x4005c6f	    0x8b0500000000	            mov eax, dword [0x04005c75] 	      3020	undo.c	FUNCTION_44
0x4005c75	          0x8945b0	             mov dword [rbp - 0x50], eax	      3020	undo.c	FUNCTION_44
0x4005c78	    0x8b0500000000	            mov eax, dword [0x04005c7e] 	      3021	undo.c	FUNCTION_44
0x4005c7e	          0x83c001	                              add eax, 1	      3021	undo.c	FUNCTION_44
0x4005c81	    0x890500000000	            mov dword [0x04005c87], eax 	      3021	undo.c	FUNCTION_44
0x4005c87	    0x8b0500000000	            mov eax, dword [0x04005c8d] 	      3021	undo.c	FUNCTION_44
0x4005c8d	          0x8945b4	             mov dword [rbp - 0x4c], eax	      3021	undo.c	FUNCTION_44
0x4005c90	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3022	undo.c	FUNCTION_44	CALL_1
0x4005c94	      0xba14000000	                           mov edx, 0x14	      3022	undo.c	FUNCTION_44	CALL_1
0x4005c99	      0xbe08000000	                              mov esi, 8	      3022	undo.c	FUNCTION_44	CALL_1
0x4005c9e	          0x4889c7	                            mov rdi, rax	      3022	undo.c	FUNCTION_44	CALL_1
0x4005ca1	      0xe800000000	                          call 0x4005ca6	      3022	undo.c	FUNCTION_44	CALL_1
0x4005ca6	    0x488b05000000	            mov rax, qword [0x04005cad] 	      3024	undo.c	FUNCTION_44
0x4005cad	    0x488b80181200	          mov rax, qword [rax + 0x1218] 	      3024	undo.c	FUNCTION_44
0x4005cb4	        0x488945b8	             mov qword [rbp - 0x48], rax	      3024	undo.c	FUNCTION_44
0x4005cb8	      0xe974020000	                           jmp 0x4005f31	      3025	undo.c	FUNCTION_44	WHILE_1
0x4005cbd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005cc1	        0x488b4008	                mov rax, qword [rax + 8]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005cc5	          0x4885c0	                           test rax, rax	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005cc8	     0xf8560010000	                           jne 0x4005e2e	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005cce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005cd2	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005cd5	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005cd8	     0xf8450010000	                            je 0x4005e2e	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005cde	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005ce2	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005ce5	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005ce8	     0xf8440010000	                            je 0x4005e2e	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4005cee	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x4005cf2	      0xbe01000000	                              mov esi, 1	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x4005cf7	          0x4889c7	                            mov rdi, rax	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x4005cfa	      0xe800000000	                          call 0x4005cff	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x4005cff	            0x85c0	                           test eax, eax	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x4005d01	     0xf8437020000	                            je 0x4005f3e	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x4005d07	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4005d0b	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4005d0f	    0x488b05000000	            mov rax, qword [0x04005d16] 	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4005d16	          0x8b4da8	             mov ecx, dword [rbp - 0x58]	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4005d19	          0x4189c8	                            mov r8d, ecx	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4005d1c	          0x4889d1	                            mov rcx, rdx	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4005d1f	      0xba00000000	                              mov edx, 0	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4005d24	      0xbe01040000	                          mov esi, 0x401	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4005d29	          0x4889c7	                            mov rdi, rax	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4005d2c	      0xb800000000	                              mov eax, 0	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4005d31	      0xe800000000	                          call 0x4005d36	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4005d36	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d3a	    0x488b98280200	           mov rbx, qword [rax + 0x228] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d41	    0x488b05000000	            mov rax, qword [0x04005d48] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d48	          0x4889c7	                            mov rdi, rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d4b	      0xe800000000	                          call 0x4005d50	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d50	      0xba01040000	                          mov edx, 0x401	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d55	          0x4829c2	                            sub rdx, rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d58	          0x4989d4	                            mov r12, rdx	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d5b	    0x4c8b2d000000	            mov r13, qword [0x04005d62] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d62	    0x488b05000000	            mov rax, qword [0x04005d69] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d69	          0x4889c7	                            mov rdi, rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d6c	      0xe800000000	                          call 0x4005d71	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d71	          0x4c01e8	                            add rax, r13	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d74	          0x4889da	                            mov rdx, rbx	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d77	          0x4c89e6	                            mov rsi, r12	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d7a	          0x4889c7	                            mov rdi, rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d7d	      0xe88e020000	                     call sym.u_add_time	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4005d82	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4005d86	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4005d8d	          0x4885c0	                           test rax, rax	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4005d90	            0x7e73	                           jle 0x4005e05	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4005d92	            0xeb30	                           jmp 0x4005dc4	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4005d94	    0x488b15000000	            mov rdx, qword [0x04005d9b] 	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005d9b	          0x4889d0	                            mov rax, rdx	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005d9e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005da5	          0x4889c6	                            mov rsi, rax	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005da8	      0xb800000000	                              mov eax, 0	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005dad	          0x4889f7	                            mov rdi, rsi	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005db0	            0xf2ae	              repne scasb al, byte [rdi]	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005db2	          0x4889c8	                            mov rax, rcx	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005db5	          0x48f7d0	                                 not rax	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005db8	        0x4883e801	                              sub rax, 1	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005dbc	          0x4801d0	                            add rax, rdx	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005dbf	      0x66c7002000	                    mov word [rax], 0x20	      3039	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_8
0x4005dc4	    0x488b05000000	            mov rax, qword [0x04005dcb] 	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4005dcb	          0x4889c7	                            mov rdi, rax	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4005dce	      0xe800000000	                          call 0x4005dd3	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4005dd3	        0x4883f820	                           cmp rax, 0x20	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4005dd7	            0x76bb	                           jbe 0x4005d94	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4005dd9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4005ddd	    0x488b90300200	           mov rdx, qword [rax + 0x230] 	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4005de4	    0x488b05000000	            mov rax, qword [0x04005deb] 	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4005deb	          0x4889d1	                            mov rcx, rdx	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4005dee	      0xba00000000	                              mov edx, 0	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4005df3	      0xbe01040000	                          mov esi, 0x401	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4005df8	          0x4889c7	                            mov rdi, rax	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4005dfb	      0xb800000000	                              mov eax, 0	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4005e00	      0xe800000000	                          call 0x4005e05	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4005e05	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4005e09	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4005e0c	          0x8d5001	                      lea edx, [rax + 1]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4005e0f	          0x8955c0	             mov dword [rbp - 0x40], edx	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4005e12	            0x4898	                                    cdqe	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4005e14	        0x48c1e003	                              shl rax, 3	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4005e18	        0x488d1c01	                    lea rbx, [rcx + rax]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4005e1c	    0x488b05000000	            mov rax, qword [0x04005e23] 	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4005e23	          0x4889c7	                            mov rdi, rax	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4005e26	      0xe800000000	                          call 0x4005e2b	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4005e2b	          0x488903	                    mov qword [rbx], rax	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4005e2e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3046	undo.c	FUNCTION_44	WHILE_1
0x4005e32	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      3046	undo.c	FUNCTION_44	WHILE_1
0x4005e35	          0x895028	             mov dword [rax + 0x28], edx	      3046	undo.c	FUNCTION_44	WHILE_1
0x4005e38	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e3c	        0x488b4008	                mov rax, qword [rax + 8]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e40	          0x4885c0	                           test rax, rax	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e43	            0x7435	                            je 0x4005e7a	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e45	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e49	        0x488b4008	                mov rax, qword [rax + 8]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e4d	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e50	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e53	            0x7425	                            je 0x4005e7a	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e55	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e59	        0x488b4008	                mov rax, qword [rax + 8]	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e5d	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e60	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e63	            0x7415	                            je 0x4005e7a	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e65	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3052	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e69	        0x488b4008	                mov rax, qword [rax + 8]	      3052	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e6d	        0x488945b8	             mov qword [rbp - 0x48], rax	      3052	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e71	        0x8345a801	               add dword [rbp - 0x58], 1	      3053	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e75	      0xe9b7000000	                           jmp 0x4005f31	      3053	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4005e7a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005e7e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005e82	          0x4885c0	                           test rax, rax	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005e85	            0x742e	                            je 0x4005eb5	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005e87	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005e8b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005e8f	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005e92	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005e95	            0x741e	                            je 0x4005eb5	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005e97	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005e9b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005e9f	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005ea2	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005ea5	            0x740e	                            je 0x4005eb5	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005ea7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3060	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005eab	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3060	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005eaf	        0x488945b8	             mov qword [rbp - 0x48], rax	      3060	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005eb3	            0xeb7c	                           jmp 0x4005f31	      3060	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4005eb5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005eb9	          0x488b00	                    mov rax, qword [rax]	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ebc	          0x4885c0	                           test rax, rax	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ebf	            0x743c	                            je 0x4005efd	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ec1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ec5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ec9	          0x4885c0	                           test rax, rax	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ecc	            0x752f	                           jne 0x4005efd	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ece	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ed2	          0x488b00	                    mov rax, qword [rax]	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ed5	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ed8	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005edb	            0x7420	                            je 0x4005efd	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005edd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ee1	          0x488b00	                    mov rax, qword [rax]	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ee4	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ee7	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005eea	            0x7411	                            je 0x4005efd	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005eec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3068	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ef0	          0x488b00	                    mov rax, qword [rax]	      3068	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ef3	        0x488945b8	             mov qword [rbp - 0x48], rax	      3068	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005ef7	        0x836da801	               sub dword [rbp - 0x58], 1	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005efb	            0xeb34	                           jmp 0x4005f31	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4005efd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4005f01	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4005f04	          0x895028	             mov dword [rax + 0x28], edx	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4005f07	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4005f0b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4005f0f	          0x4885c0	                           test rax, rax	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4005f12	            0x740e	                            je 0x4005f22	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4005f14	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3077	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4005f18	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3077	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4005f1c	        0x488945b8	             mov qword [rbp - 0x48], rax	      3077	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4005f20	            0xeb0f	                           jmp 0x4005f31	      3077	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4005f22	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3080	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x4005f26	          0x488b00	                    mov rax, qword [rax]	      3080	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x4005f29	        0x488945b8	             mov qword [rbp - 0x48], rax	      3080	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x4005f2d	        0x836da801	               sub dword [rbp - 0x58], 1	      3081	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x4005f31	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3025	undo.c	FUNCTION_44	WHILE_1
0x4005f36	     0xf8581fdffff	                           jne 0x4005cbd	      3025	undo.c	FUNCTION_44	WHILE_1
0x4005f3c	            0xeb01	                           jmp 0x4005f3f	      3025	undo.c	FUNCTION_44	WHILE_1
0x4005f3e	              0x90	                                     nop	      3031	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2
0x4005f3f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3086	undo.c	FUNCTION_44	IF_8
0x4005f42	            0x85c0	                           test eax, eax	      3086	undo.c	FUNCTION_44	IF_8
0x4005f44	            0x7517	                           jne 0x4005f5d	      3086	undo.c	FUNCTION_44	IF_8
0x4005f46	      0xbf00000000	                              mov edi, 0	      3087	undo.c	FUNCTION_44	CALL_12
0x4005f4b	      0xe800000000	                          call 0x4005f50	      3087	undo.c	FUNCTION_44	CALL_12
0x4005f50	          0x4889c7	                            mov rdi, rax	      3087	undo.c	FUNCTION_44	CALL_12
0x4005f53	      0xe800000000	                          call 0x4005f58	      3087	undo.c	FUNCTION_44	CALL_12
0x4005f58	      0xe993000000	                           jmp 0x4005ff0	      3106	undo.c	FUNCTION_44
0x4005f5d	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x4005f60	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x4005f64	            0x89d6	                            mov esi, edx	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x4005f66	          0x4889c7	                            mov rdi, rax	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x4005f69	      0xe800000000	                          call 0x4005f6e	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x4005f6e	      0xe800000000	                          call 0x4005f73	      3092	undo.c	FUNCTION_44	ELSE_5	CALL_14
0x4005f73	    0x8b1d00000000	            mov ebx, dword [0x04005f79] 	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4005f79	      0xbf00000000	                              mov edi, 0	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4005f7e	      0xe800000000	                          call 0x4005f83	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4005f83	            0x89de	                            mov esi, ebx	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4005f85	          0x4889c7	                            mov rdi, rax	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4005f88	      0xe800000000	                          call 0x4005f8d	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4005f8d	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4005f94	            0xeb34	                           jmp 0x4005fca	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4005f96	      0xbf0a000000	                            mov edi, 0xa	      3097	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_18
0x4005f9b	      0xe800000000	                          call 0x4005fa0	      3097	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_18
0x4005fa0	    0x8b0500000000	            mov eax, dword [0x04005fa6] 	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x4005fa6	            0x85c0	                           test eax, eax	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x4005fa8	            0x7534	                           jne 0x4005fde	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x4005faa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4005fae	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4005fb1	          0x4863d2	                         movsxd rdx, edx	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4005fb4	        0x48c1e203	                              shl rdx, 3	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4005fb8	          0x4801d0	                            add rax, rdx	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4005fbb	          0x488b00	                    mov rax, qword [rax]	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4005fbe	          0x4889c7	                            mov rdi, rax	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4005fc1	      0xe800000000	                          call 0x4005fc6	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4005fc6	        0x8345ac01	               add dword [rbp - 0x54], 1	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4005fca	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4005fcd	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4005fd0	            0x7e0d	                           jle 0x4005fdf	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4005fd2	    0x8b0500000000	            mov eax, dword [0x04005fd8] 	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4005fd8	            0x85c0	                           test eax, eax	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4005fda	            0x74ba	                            je 0x4005f96	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4005fdc	            0xeb01	                           jmp 0x4005fdf	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4005fde	              0x90	                                     nop	      3099	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x4005fdf	      0xe800000000	                          call 0x4005fe4	      3102	undo.c	FUNCTION_44	ELSE_5	CALL_20
0x4005fe4	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x4005fe8	          0x4889c7	                            mov rdi, rax	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x4005feb	      0xe800000000	                          call 0x4005ff0	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x4005ff0	              0x90	                                     nop	      3106	undo.c	FUNCTION_44
0x4005ff1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3106	undo.c	FUNCTION_44
0x4005ff5	    0x644833042528	                xor rax, qword fs:[0x28]	      3106	undo.c	FUNCTION_44
0x4005ffe	            0x7405	                            je 0x4006005	      3106	undo.c	FUNCTION_44
0x4006000	      0xe800000000	                          call 0x4006005	      3106	undo.c	FUNCTION_44
0x4006005	        0x4883c458	                           add rsp, 0x58	      3106	undo.c	FUNCTION_44
0x4006009	              0x5b	                                 pop rbx	      3106	undo.c	FUNCTION_44
0x400600a	            0x415c	                                 pop r12	      3106	undo.c	FUNCTION_44
0x400600c	            0x415d	                                 pop r13	      3106	undo.c	FUNCTION_44
0x400600e	              0x5d	                                 pop rbp	      3106	undo.c	FUNCTION_44
0x400600f	              0xc3	                                     ret	      3106	undo.c	FUNCTION_44
u_unch_branch	SWITCH,0:FOR,1:IF,1:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	29
0x400637b	              0x55	                                push rbp	      3224	undo.c	FUNCTION_50
0x400637c	          0x4889e5	                            mov rbp, rsp	      3224	undo.c	FUNCTION_50
0x400637f	        0x4883ec20	                           sub rsp, 0x20	      3224	undo.c	FUNCTION_50
0x4006383	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3224	undo.c	FUNCTION_50
0x4006387	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3227	undo.c	FUNCTION_50	FOR_1
0x400638b	        0x488945f8	                mov qword [rbp - 8], rax	      3227	undo.c	FUNCTION_50	FOR_1
0x400638f	            0xeb3c	                           jmp 0x40063cd	      3227	undo.c	FUNCTION_50	FOR_1
0x4006391	        0x488b45f8	                mov rax, qword [rbp - 8]	      3229	undo.c	FUNCTION_50	FOR_1
0x4006395	          0x8b4058	            mov eax, dword [rax + 0x58] 	      3229	undo.c	FUNCTION_50	FOR_1
0x4006398	          0x83c801	                               or eax, 1	      3229	undo.c	FUNCTION_50	FOR_1
0x400639b	            0x89c2	                            mov edx, eax	      3229	undo.c	FUNCTION_50	FOR_1
0x400639d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3229	undo.c	FUNCTION_50	FOR_1
0x40063a1	          0x895058	             mov dword [rax + 0x58], edx	      3229	undo.c	FUNCTION_50	FOR_1
0x40063a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x40063a8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x40063ac	          0x4885c0	                           test rax, rax	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x40063af	            0x7410	                            je 0x40063c1	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x40063b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3231	undo.c	FUNCTION_50	FOR_1	CALL_1
0x40063b5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3231	undo.c	FUNCTION_50	FOR_1	CALL_1
0x40063b9	          0x4889c7	                            mov rdi, rax	      3231	undo.c	FUNCTION_50	FOR_1	CALL_1
0x40063bc	      0xe8baffffff	                  call sym.u_unch_branch	      3231	undo.c	FUNCTION_50	FOR_1	CALL_1
0x40063c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3227	undo.c	FUNCTION_50	FOR_1
0x40063c5	        0x488b4008	                mov rax, qword [rax + 8]	      3227	undo.c	FUNCTION_50	FOR_1
0x40063c9	        0x488945f8	                mov qword [rbp - 8], rax	      3227	undo.c	FUNCTION_50	FOR_1
0x40063cd	      0x48837df800	                  cmp qword [rbp - 8], 0	      3227	undo.c	FUNCTION_50	FOR_1
0x40063d2	            0x75bd	                           jne 0x4006391	      3227	undo.c	FUNCTION_50	FOR_1
0x40063d4	              0x90	                                     nop	      3233	undo.c	FUNCTION_50
0x40063d5	              0xc9	                                   leave	      3233	undo.c	FUNCTION_50
0x40063d6	              0xc3	                                     ret	      3233	undo.c	FUNCTION_50
u_freeentries	SWITCH,0:FOR,1:IF,3:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	54
0x40066fb	              0x55	                                push rbp	      3367	undo.c	FUNCTION_55
0x40066fc	          0x4889e5	                            mov rbp, rsp	      3367	undo.c	FUNCTION_55
0x40066ff	        0x4883ec30	                           sub rsp, 0x30	      3367	undo.c	FUNCTION_55
0x4006703	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3367	undo.c	FUNCTION_55
0x4006707	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3367	undo.c	FUNCTION_55
0x400670b	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3367	undo.c	FUNCTION_55
0x400670f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3371	undo.c	FUNCTION_55	IF_1
0x4006713	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      3371	undo.c	FUNCTION_55	IF_1
0x400671a	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3371	undo.c	FUNCTION_55	IF_1
0x400671e	            0x750f	                           jne 0x400672f	      3371	undo.c	FUNCTION_55	IF_1
0x4006720	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3372	undo.c	FUNCTION_55	IF_1
0x4006724	    0x48c780281200	            mov qword [rax + 0x1228], 0 	      3372	undo.c	FUNCTION_55	IF_1
0x400672f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3373	undo.c	FUNCTION_55	IF_2
0x4006733	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3373	undo.c	FUNCTION_55	IF_2
0x400673a	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3373	undo.c	FUNCTION_55	IF_2
0x400673e	            0x750f	                           jne 0x400674f	      3373	undo.c	FUNCTION_55	IF_2
0x4006740	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3374	undo.c	FUNCTION_55	IF_2
0x4006744	    0x48c780201200	            mov qword [rax + 0x1220], 0 	      3374	undo.c	FUNCTION_55	IF_2
0x400674f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3375	undo.c	FUNCTION_55	IF_3
0x4006754	            0x7418	                            je 0x400676e	      3375	undo.c	FUNCTION_55	IF_3
0x4006756	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3375	undo.c	FUNCTION_55	IF_3
0x400675a	          0x488b00	                    mov rax, qword [rax]	      3375	undo.c	FUNCTION_55	IF_3
0x400675d	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3375	undo.c	FUNCTION_55	IF_3
0x4006761	            0x750b	                           jne 0x400676e	      3375	undo.c	FUNCTION_55	IF_3
0x4006763	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3376	undo.c	FUNCTION_55	IF_3
0x4006767	    0x48c700000000	                      mov qword [rax], 0	      3376	undo.c	FUNCTION_55	IF_3
0x400676e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3378	undo.c	FUNCTION_55	FOR_1
0x4006772	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3378	undo.c	FUNCTION_55	FOR_1
0x4006776	        0x488945f0	             mov qword [rbp - 0x10], rax	      3378	undo.c	FUNCTION_55	FOR_1
0x400677a	            0xeb2a	                           jmp 0x40067a6	      3378	undo.c	FUNCTION_55	FOR_1
0x400677c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3380	undo.c	FUNCTION_55	FOR_1
0x4006780	          0x488b00	                    mov rax, qword [rax]	      3380	undo.c	FUNCTION_55	FOR_1
0x4006783	        0x488945f8	                mov qword [rbp - 8], rax	      3380	undo.c	FUNCTION_55	FOR_1
0x4006787	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x400678b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x400678f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x4006793	          0x4889d6	                            mov rsi, rdx	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x4006796	          0x4889c7	                            mov rdi, rax	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x4006799	      0xe835000000	                    call sym.u_freeentry	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x400679e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3378	undo.c	FUNCTION_55	FOR_1
0x40067a2	        0x488945f0	             mov qword [rbp - 0x10], rax	      3378	undo.c	FUNCTION_55	FOR_1
0x40067a6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3378	undo.c	FUNCTION_55	FOR_1
0x40067ab	            0x75cf	                           jne 0x400677c	      3378	undo.c	FUNCTION_55	FOR_1
0x40067ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3387	undo.c	FUNCTION_55	CALL_2
0x40067b1	          0x4889c7	                            mov rdi, rax	      3387	undo.c	FUNCTION_55	CALL_2
0x40067b4	      0xe800000000	                          call 0x40067b9	      3387	undo.c	FUNCTION_55	CALL_2
0x40067b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3388	undo.c	FUNCTION_55
0x40067bd	    0x8b8030120000	          mov eax, dword [rax + 0x1230] 	      3388	undo.c	FUNCTION_55
0x40067c3	          0x8d50ff	                      lea edx, [rax - 1]	      3388	undo.c	FUNCTION_55
0x40067c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3388	undo.c	FUNCTION_55
0x40067ca	    0x899030120000	          mov dword [rax + 0x1230], edx 	      3388	undo.c	FUNCTION_55
0x40067d0	              0x90	                                     nop	      3389	undo.c	FUNCTION_55
0x40067d1	              0xc9	                                   leave	      3389	undo.c	FUNCTION_55
0x40067d2	              0xc3	                                     ret	      3389	undo.c	FUNCTION_55
undo_write_bytes	SWITCH,0:FOR,1:IF,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	41
0x40013e9	              0x55	                                push rbp	       972	undo.c	FUNCTION_18
0x40013ea	          0x4889e5	                            mov rbp, rsp	       972	undo.c	FUNCTION_18
0x40013ed	        0x4883ec40	                           sub rsp, 0x40	       972	undo.c	FUNCTION_18
0x40013f1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       972	undo.c	FUNCTION_18
0x40013f5	        0x488975d0	             mov qword [rbp - 0x30], rsi	       972	undo.c	FUNCTION_18
0x40013f9	          0x8955cc	             mov dword [rbp - 0x34], edx	       972	undo.c	FUNCTION_18
0x40013fc	    0x64488b042528	                mov rax, qword fs:[0x28]	       972	undo.c	FUNCTION_18
0x4001405	        0x488945f8	                mov qword [rbp - 8], rax	       972	undo.c	FUNCTION_18
0x4001409	            0x31c0	                            xor eax, eax	       972	undo.c	FUNCTION_18
0x400140b	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       975	undo.c	FUNCTION_18
0x4001412	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       977	undo.c	FUNCTION_18	FOR_1
0x4001415	          0x83e801	                              sub eax, 1	       977	undo.c	FUNCTION_18	FOR_1
0x4001418	          0x8945e8	             mov dword [rbp - 0x18], eax	       977	undo.c	FUNCTION_18	FOR_1
0x400141b	            0xeb25	                           jmp 0x4001442	       977	undo.c	FUNCTION_18	FOR_1
0x400141d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       978	undo.c	FUNCTION_18	FOR_1
0x4001420	          0x8d5001	                      lea edx, [rax + 1]	       978	undo.c	FUNCTION_18	FOR_1
0x4001423	          0x8955ec	             mov dword [rbp - 0x14], edx	       978	undo.c	FUNCTION_18	FOR_1
0x4001426	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       978	undo.c	FUNCTION_18	FOR_1
0x4001429	          0xc1e203	                              shl edx, 3	       978	undo.c	FUNCTION_18	FOR_1
0x400142c	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       978	undo.c	FUNCTION_18	FOR_1
0x4001430	            0x89d1	                            mov ecx, edx	       978	undo.c	FUNCTION_18	FOR_1
0x4001432	          0x48d3ee	                             shr rsi, cl	       978	undo.c	FUNCTION_18	FOR_1
0x4001435	          0x4889f2	                            mov rdx, rsi	       978	undo.c	FUNCTION_18	FOR_1
0x4001438	            0x4898	                                    cdqe	       978	undo.c	FUNCTION_18	FOR_1
0x400143a	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	       978	undo.c	FUNCTION_18	FOR_1
0x400143e	        0x836de801	               sub dword [rbp - 0x18], 1	       977	undo.c	FUNCTION_18	FOR_1
0x4001442	        0x837de800	               cmp dword [rbp - 0x18], 0	       977	undo.c	FUNCTION_18	FOR_1
0x4001446	            0x79d5	                           jns 0x400141d	       977	undo.c	FUNCTION_18	FOR_1
0x4001448	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       979	undo.c	FUNCTION_18	CALL_1
0x400144b	          0x4863d0	                         movsxd rdx, eax	       979	undo.c	FUNCTION_18	CALL_1
0x400144e	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       979	undo.c	FUNCTION_18	CALL_1
0x4001452	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       979	undo.c	FUNCTION_18	CALL_1
0x4001456	          0x4889ce	                            mov rsi, rcx	       979	undo.c	FUNCTION_18	CALL_1
0x4001459	          0x4889c7	                            mov rdi, rax	       979	undo.c	FUNCTION_18	CALL_1
0x400145c	      0xe868fcffff	                     call sym.undo_write	       979	undo.c	FUNCTION_18	CALL_1
0x4001461	        0x488b7df8	                mov rdi, qword [rbp - 8]	       980	undo.c	FUNCTION_18
0x4001465	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       980	undo.c	FUNCTION_18
0x400146e	            0x7405	                            je 0x4001475	       980	undo.c	FUNCTION_18
0x4001470	      0xe800000000	                          call 0x4001475	       980	undo.c	FUNCTION_18
0x4001475	              0xc9	                                   leave	       980	undo.c	FUNCTION_18
0x4001476	              0xc3	                                     ret	       980	undo.c	FUNCTION_18
u_clearall	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0	24
0x400682e	              0x55	                                push rbp	      3411	undo.c	FUNCTION_57
0x400682f	          0x4889e5	                            mov rbp, rsp	      3411	undo.c	FUNCTION_57
0x4006832	        0x48897df8	                mov qword [rbp - 8], rdi	      3411	undo.c	FUNCTION_57
0x4006836	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	undo.c	FUNCTION_57
0x400683a	    0x48c780281200	            mov qword [rax + 0x1228], 0 	      3412	undo.c	FUNCTION_57
0x4006845	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	undo.c	FUNCTION_57
0x4006849	    0x488b90281200	          mov rdx, qword [rax + 0x1228] 	      3412	undo.c	FUNCTION_57
0x4006850	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	undo.c	FUNCTION_57
0x4006854	    0x488990181200	          mov qword [rax + 0x1218], rdx 	      3412	undo.c	FUNCTION_57
0x400685b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	undo.c	FUNCTION_57
0x400685f	    0x488b90181200	          mov rdx, qword [rax + 0x1218] 	      3412	undo.c	FUNCTION_57
0x4006866	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	undo.c	FUNCTION_57
0x400686a	    0x488990201200	          mov qword [rax + 0x1220], rdx 	      3412	undo.c	FUNCTION_57
0x4006871	        0x488b45f8	                mov rax, qword [rbp - 8]	      3413	undo.c	FUNCTION_57
0x4006875	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      3413	undo.c	FUNCTION_57
0x400687f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3414	undo.c	FUNCTION_57
0x4006883	    0xc78030120000	            mov dword [rax + 0x1230], 0 	      3414	undo.c	FUNCTION_57
0x400688d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3415	undo.c	FUNCTION_57
0x4006891	    0x48c780601200	            mov qword [rax + 0x1260], 0 	      3415	undo.c	FUNCTION_57
0x400689c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3416	undo.c	FUNCTION_57
0x40068a0	    0x48c780681200	            mov qword [rax + 0x1268], 0 	      3416	undo.c	FUNCTION_57
0x40068ab	              0x90	                                     nop	      3417	undo.c	FUNCTION_57
0x40068ac	              0x5d	                                 pop rbp	      3417	undo.c	FUNCTION_57
0x40068ad	              0xc3	                                     ret	      3417	undo.c	FUNCTION_57
u_saveline	SWITCH,0:FOR,0:IF,4:functions,0:ELSE,1:CALL,3:WHILE,0:DO,0	48
0x40068ae	              0x55	                                push rbp	      3424	undo.c	FUNCTION_58
0x40068af	          0x4889e5	                            mov rbp, rsp	      3424	undo.c	FUNCTION_58
0x40068b2	              0x53	                                push rbx	      3424	undo.c	FUNCTION_58
0x40068b3	        0x4883ec18	                           sub rsp, 0x18	      3424	undo.c	FUNCTION_58
0x40068b7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3424	undo.c	FUNCTION_58
0x40068bb	    0x488b05000000	            mov rax, qword [0x040068c2] 	      3425	undo.c	FUNCTION_58	IF_1
0x40068c2	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      3425	undo.c	FUNCTION_58	IF_1
0x40068c9	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3425	undo.c	FUNCTION_58	IF_1
0x40068cd	     0xf84a3000000	                            je 0x4006976	      3425	undo.c	FUNCTION_58	IF_1
0x40068d3	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3427	undo.c	FUNCTION_58	IF_2
0x40068d8	     0xf8e9b000000	                           jle 0x4006979	      3427	undo.c	FUNCTION_58	IF_2
0x40068de	    0x488b05000000	            mov rax, qword [0x040068e5] 	      3427	undo.c	FUNCTION_58	IF_2
0x40068e5	          0x488b00	                    mov rax, qword [rax]	      3427	undo.c	FUNCTION_58	IF_2
0x40068e8	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3427	undo.c	FUNCTION_58	IF_2
0x40068ec	     0xf8c87000000	                            jl 0x4006979	      3427	undo.c	FUNCTION_58	IF_2
0x40068f2	      0xe800000000	                          call 0x40068f7	      3429	undo.c	FUNCTION_58	CALL_1
0x40068f7	    0x488b05000000	            mov rax, qword [0x040068fe] 	      3430	undo.c	FUNCTION_58
0x40068fe	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3430	undo.c	FUNCTION_58
0x4006902	    0x488990681200	          mov qword [rax + 0x1268], rdx 	      3430	undo.c	FUNCTION_58
0x4006909	    0x488b05000000	            mov rax, qword [0x04006910] 	      3431	undo.c	FUNCTION_58	IF_3
0x4006910	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3431	undo.c	FUNCTION_58	IF_3
0x4006914	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3431	undo.c	FUNCTION_58	IF_3
0x4006918	            0x7519	                           jne 0x4006933	      3431	undo.c	FUNCTION_58	IF_3
0x400691a	    0x488b05000000	            mov rax, qword [0x04006921] 	      3432	undo.c	FUNCTION_58	IF_3
0x4006921	    0x488b15000000	            mov rdx, qword [0x04006928] 	      3432	undo.c	FUNCTION_58	IF_3
0x4006928	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3432	undo.c	FUNCTION_58	IF_3
0x400692b	    0x899070120000	          mov dword [rax + 0x1270], edx 	      3432	undo.c	FUNCTION_58	IF_3
0x4006931	            0xeb11	                           jmp 0x4006944	      3432	undo.c	FUNCTION_58	IF_3
0x4006933	    0x488b05000000	            mov rax, qword [0x0400693a] 	      3434	undo.c	FUNCTION_58	ELSE_1
0x400693a	    0xc78070120000	            mov dword [rax + 0x1270], 0 	      3434	undo.c	FUNCTION_58	ELSE_1
0x4006944	    0x488b1d000000	            mov rbx, qword [0x0400694b] 	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x400694b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x400694f	          0x4889c7	                            mov rdi, rax	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x4006952	      0xe889020000	                    call sym.u_save_line	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x4006957	    0x488983601200	          mov qword [rbx + 0x1260], rax 	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x400695e	    0x488b83601200	          mov rax, qword [rbx + 0x1260] 	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x4006965	          0x4885c0	                           test rax, rax	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x4006968	            0x7510	                           jne 0x400697a	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x400696a	      0xbf00000000	                              mov edi, 0	      3436	undo.c	FUNCTION_58	CALL_3
0x400696f	      0xe800000000	                          call 0x4006974	      3436	undo.c	FUNCTION_58	CALL_3
0x4006974	            0xeb04	                           jmp 0x400697a	      3436	undo.c	FUNCTION_58	CALL_3
0x4006976	              0x90	                                     nop	      3426	undo.c	FUNCTION_58	IF_1
0x4006977	            0xeb01	                           jmp 0x400697a	      3426	undo.c	FUNCTION_58	IF_1
0x4006979	              0x90	                                     nop	      3428	undo.c	FUNCTION_58	IF_2
0x400697a	        0x4883c418	                           add rsp, 0x18	      3437	undo.c	FUNCTION_58
0x400697e	              0x5b	                                 pop rbx	      3437	undo.c	FUNCTION_58
0x400697f	              0x5d	                                 pop rbp	      3437	undo.c	FUNCTION_58
0x4006980	              0xc3	                                     ret	      3437	undo.c	FUNCTION_58
corruption_error	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	16
0x400103c	              0x55	                                push rbp	       859	undo.c	FUNCTION_13
0x400103d	          0x4889e5	                            mov rbp, rsp	       859	undo.c	FUNCTION_13
0x4001040	        0x4883ec10	                           sub rsp, 0x10	       859	undo.c	FUNCTION_13
0x4001044	        0x48897df8	                mov qword [rbp - 8], rdi	       859	undo.c	FUNCTION_13
0x4001048	        0x488975f0	             mov qword [rbp - 0x10], rsi	       859	undo.c	FUNCTION_13
0x400104c	      0xbf00000000	                              mov edi, 0	       860	undo.c	FUNCTION_13	CALL_2
0x4001051	      0xe800000000	                          call 0x4001056	       860	undo.c	FUNCTION_13	CALL_2
0x4001056	          0x4889c1	                            mov rcx, rax	       860	undo.c	FUNCTION_13	CALL_2
0x4001059	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       860	undo.c	FUNCTION_13	CALL_2
0x400105d	        0x488b45f8	                mov rax, qword [rbp - 8]	       860	undo.c	FUNCTION_13	CALL_2
0x4001061	          0x4889c6	                            mov rsi, rax	       860	undo.c	FUNCTION_13	CALL_2
0x4001064	          0x4889cf	                            mov rdi, rcx	       860	undo.c	FUNCTION_13	CALL_2
0x4001067	      0xe800000000	                          call 0x400106c	       860	undo.c	FUNCTION_13	CALL_2
0x400106c	              0x90	                                     nop	       861	undo.c	FUNCTION_13
0x400106d	              0xc9	                                   leave	       861	undo.c	FUNCTION_13
0x400106e	              0xc3	                                     ret	       861	undo.c	FUNCTION_13
u_eval_tree	SWITCH,0:FOR,0:IF,6:functions,0:ELSE,0:CALL,10:WHILE,1:DO,0	90
0x4006c9c	              0x55	                                push rbp	      3559	undo.c	FUNCTION_66
0x4006c9d	          0x4889e5	                            mov rbp, rsp	      3559	undo.c	FUNCTION_66
0x4006ca0	        0x4883ec30	                           sub rsp, 0x30	      3559	undo.c	FUNCTION_66
0x4006ca4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3559	undo.c	FUNCTION_66
0x4006ca8	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3559	undo.c	FUNCTION_66
0x4006cac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3560	undo.c	FUNCTION_66
0x4006cb0	        0x488945e8	             mov qword [rbp - 0x18], rax	      3560	undo.c	FUNCTION_66
0x4006cb4	      0xe94a010000	                           jmp 0x4006e03	      3563	undo.c	FUNCTION_66	WHILE_1
0x4006cb9	      0xe800000000	                          call 0x4006cbe	      3565	undo.c	FUNCTION_66	WHILE_1	CALL_1
0x4006cbe	        0x488945f0	             mov qword [rbp - 0x10], rax	      3565	undo.c	FUNCTION_66	WHILE_1	CALL_1
0x4006cc2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3566	undo.c	FUNCTION_66	WHILE_1	IF_1
0x4006cc7	     0xf8443010000	                            je 0x4006e10	      3566	undo.c	FUNCTION_66	WHILE_1	IF_1
0x4006ccd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006cd1	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006cd5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006cd9	      0xb900000000	                              mov ecx, 0	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006cde	      0xbe00000000	                              mov esi, 0	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006ce3	          0x4889c7	                            mov rdi, rax	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006ce6	      0xe800000000	                          call 0x4006ceb	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006ceb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006cef	    0x488b90280200	           mov rdx, qword [rax + 0x228] 	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006cf6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006cfa	      0xb900000000	                              mov ecx, 0	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006cff	      0xbe00000000	                              mov esi, 0	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006d04	          0x4889c7	                            mov rdi, rax	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006d07	      0xe800000000	                          call 0x4006d0c	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006d0c	    0x488b05000000	            mov rax, qword [0x04006d13] 	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4006d13	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4006d1a	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4006d1e	            0x751b	                           jne 0x4006d3b	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4006d20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4006d24	      0xb900000000	                              mov ecx, 0	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4006d29	      0xba01000000	                              mov edx, 1	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4006d2e	      0xbe00000000	                              mov esi, 0	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4006d33	          0x4889c7	                            mov rdi, rax	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4006d36	      0xe800000000	                          call 0x4006d3b	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4006d3b	    0x488b05000000	            mov rax, qword [0x04006d42] 	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4006d42	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4006d49	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4006d4d	            0x751b	                           jne 0x4006d6a	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4006d4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4006d53	      0xb900000000	                              mov ecx, 0	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4006d58	      0xba01000000	                              mov edx, 1	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4006d5d	      0xbe00000000	                              mov esi, 0	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4006d62	          0x4889c7	                            mov rdi, rax	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4006d65	      0xe800000000	                          call 0x4006d6a	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4006d6a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4006d6e	    0x488b80300200	           mov rax, qword [rax + 0x230] 	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4006d75	          0x4885c0	                           test rax, rax	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4006d78	            0x7e21	                           jle 0x4006d9b	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4006d7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4006d7e	    0x488b90300200	           mov rdx, qword [rax + 0x230] 	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4006d85	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4006d89	      0xb900000000	                              mov ecx, 0	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4006d8e	      0xbe00000000	                              mov esi, 0	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4006d93	          0x4889c7	                            mov rdi, rax	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4006d96	      0xe800000000	                          call 0x4006d9b	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4006d9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x4006d9f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x4006da3	          0x4885c0	                           test rax, rax	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x4006da6	            0x743c	                            je 0x4006de4	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x4006da8	      0xe800000000	                          call 0x4006dad	      3579	undo.c	FUNCTION_66	WHILE_1	IF_5	CALL_7
0x4006dad	        0x488945f8	                mov qword [rbp - 8], rax	      3579	undo.c	FUNCTION_66	WHILE_1	IF_5	CALL_7
0x4006db1	      0x48837df800	                  cmp qword [rbp - 8], 0	      3581	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6
0x4006db6	            0x742c	                            je 0x4006de4	      3581	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6
0x4006db8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4006dbc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4006dc0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4006dc4	          0x4889d6	                            mov rsi, rdx	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4006dc7	          0x4889c7	                            mov rdi, rax	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4006dca	      0xe800000000	                          call 0x4006dcf	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4006dcf	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4006dd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4006dd7	      0xbe00000000	                              mov esi, 0	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4006ddc	          0x4889c7	                            mov rdi, rax	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4006ddf	      0xe800000000	                          call 0x4006de4	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4006de4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4006de8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4006dec	          0x4889d6	                            mov rsi, rdx	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4006def	          0x4889c7	                            mov rdi, rax	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4006df2	      0xe800000000	                          call 0x4006df7	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4006df7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3590	undo.c	FUNCTION_66	WHILE_1
0x4006dfb	        0x488b4008	                mov rax, qword [rax + 8]	      3590	undo.c	FUNCTION_66	WHILE_1
0x4006dff	        0x488945e8	             mov qword [rbp - 0x18], rax	      3590	undo.c	FUNCTION_66	WHILE_1
0x4006e03	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3563	undo.c	FUNCTION_66	WHILE_1
0x4006e08	     0xf85abfeffff	                           jne 0x4006cb9	      3563	undo.c	FUNCTION_66	WHILE_1
0x4006e0e	            0xeb01	                           jmp 0x4006e11	      3563	undo.c	FUNCTION_66	WHILE_1
0x4006e10	              0x90	                                     nop	      3567	undo.c	FUNCTION_66	WHILE_1	IF_1
0x4006e11	              0xc9	                                   leave	      3592	undo.c	FUNCTION_66
0x4006e12	              0xc3	                                     ret	      3592	undo.c	FUNCTION_66
u_getbot	SWITCH,0:FOR,0:IF,3:functions,0:ELSE,0:CALL,3:WHILE,0:DO,0	58
0x4006432	              0x55	                                push rbp	      3256	undo.c	FUNCTION_52
0x4006433	          0x4889e5	                            mov rbp, rsp	      3256	undo.c	FUNCTION_52
0x4006436	        0x4883ec10	                           sub rsp, 0x10	      3256	undo.c	FUNCTION_52
0x400643a	      0xe898ffffff	                call sym.u_get_headentry	      3260	undo.c	FUNCTION_52	CALL_1
0x400643f	        0x488945f0	             mov qword [rbp - 0x10], rax	      3260	undo.c	FUNCTION_52	CALL_1
0x4006443	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3261	undo.c	FUNCTION_52	IF_1
0x4006448	     0xf84d6000000	                            je 0x4006524	      3261	undo.c	FUNCTION_52	IF_1
0x400644e	    0x488b05000000	            mov rax, qword [0x04006455] 	      3264	undo.c	FUNCTION_52
0x4006455	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3264	undo.c	FUNCTION_52
0x400645c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3264	undo.c	FUNCTION_52
0x4006460	        0x488945f0	             mov qword [rbp - 0x10], rax	      3264	undo.c	FUNCTION_52
0x4006464	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3265	undo.c	FUNCTION_52	IF_2
0x4006469	     0xf84a2000000	                            je 0x4006511	      3265	undo.c	FUNCTION_52	IF_2
0x400646f	    0x488b05000000	            mov rax, qword [0x04006476] 	      3272	undo.c	FUNCTION_52	IF_2
0x4006476	          0x488b10	                    mov rdx, qword [rax]	      3272	undo.c	FUNCTION_52	IF_2
0x4006479	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3272	undo.c	FUNCTION_52	IF_2
0x400647d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3272	undo.c	FUNCTION_52	IF_2
0x4006481	          0x4829c2	                            sub rdx, rax	      3272	undo.c	FUNCTION_52	IF_2
0x4006484	          0x4889d0	                            mov rax, rdx	      3272	undo.c	FUNCTION_52	IF_2
0x4006487	        0x488945f8	                mov qword [rbp - 8], rax	      3272	undo.c	FUNCTION_52	IF_2
0x400648b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3273	undo.c	FUNCTION_52	IF_2
0x400648f	        0x488b5008	                mov rdx, qword [rax + 8]	      3273	undo.c	FUNCTION_52	IF_2
0x4006493	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3273	undo.c	FUNCTION_52	IF_2
0x4006497	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3273	undo.c	FUNCTION_52	IF_2
0x400649b	          0x4801d0	                            add rax, rdx	      3273	undo.c	FUNCTION_52	IF_2
0x400649e	        0x488d5001	                      lea rdx, [rax + 1]	      3273	undo.c	FUNCTION_52	IF_2
0x40064a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3273	undo.c	FUNCTION_52	IF_2
0x40064a6	          0x4801c2	                            add rdx, rax	      3273	undo.c	FUNCTION_52	IF_2
0x40064a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3273	undo.c	FUNCTION_52	IF_2
0x40064ad	        0x48895010	             mov qword [rax + 0x10], rdx	      3273	undo.c	FUNCTION_52	IF_2
0x40064b1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40064b5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40064b9	          0x4885c0	                           test rax, rax	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40064bc	            0x7e17	                           jle 0x40064d5	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40064be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40064c2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40064c6	    0x488b05000000	            mov rax, qword [0x040064cd] 	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40064cd	          0x488b00	                    mov rax, qword [rax]	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40064d0	          0x4839c2	                            cmp rdx, rax	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40064d3	            0x7e26	                           jle 0x40064fb	      3274	undo.c	FUNCTION_52	IF_2	IF_3
0x40064d5	      0xbf00000000	                              mov edi, 0	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x40064da	      0xe800000000	                          call 0x40064df	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x40064df	          0x4889c7	                            mov rdi, rax	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x40064e2	      0xe800000000	                          call 0x40064e7	      3276	undo.c	FUNCTION_52	IF_2	IF_3	CALL_3
0x40064e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x40064eb	        0x488b4008	                mov rax, qword [rax + 8]	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x40064ef	        0x488d5001	                      lea rdx, [rax + 1]	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x40064f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x40064f7	        0x48895010	             mov qword [rax + 0x10], rdx	      3277	undo.c	FUNCTION_52	IF_2	IF_3
0x40064fb	    0x488b05000000	            mov rax, qword [0x04006502] 	      3283	undo.c	FUNCTION_52	IF_2
0x4006502	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	      3283	undo.c	FUNCTION_52	IF_2
0x4006509	    0x48c740380000	               mov qword [rax + 0x38], 0	      3283	undo.c	FUNCTION_52	IF_2
0x4006511	    0x488b05000000	            mov rax, qword [0x04006518] 	      3286	undo.c	FUNCTION_52
0x4006518	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      3286	undo.c	FUNCTION_52
0x4006522	            0xeb01	                           jmp 0x4006525	      3286	undo.c	FUNCTION_52
0x4006524	              0x90	                                     nop	      3262	undo.c	FUNCTION_52	IF_1
0x4006525	              0xc9	                                   leave	      3287	undo.c	FUNCTION_52
0x4006526	              0xc3	                                     ret	      3287	undo.c	FUNCTION_52
u_clearline	SWITCH,0:FOR,0:IF,1:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	21
0x4006981	              0x55	                                push rbp	      3445	undo.c	FUNCTION_59
0x4006982	          0x4889e5	                            mov rbp, rsp	      3445	undo.c	FUNCTION_59
0x4006985	    0x488b05000000	            mov rax, qword [0x0400698c] 	      3446	undo.c	FUNCTION_59	IF_1
0x400698c	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3446	undo.c	FUNCTION_59	IF_1
0x4006993	          0x4885c0	                           test rax, rax	      3446	undo.c	FUNCTION_59	IF_1
0x4006996	            0x744d	                            je 0x40069e5	      3446	undo.c	FUNCTION_59	IF_1
0x4006998	    0x488b05000000	            mov rax, qword [0x0400699f] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x400699f	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x40069a6	          0x4885c0	                           test rax, rax	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x40069a9	            0x7428	                            je 0x40069d3	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x40069ab	    0x488b05000000	            mov rax, qword [0x040069b2] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x40069b2	    0x488b80601200	          mov rax, qword [rax + 0x1260] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x40069b9	          0x4889c7	                            mov rdi, rax	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x40069bc	      0xe800000000	                          call 0x40069c1	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x40069c1	    0x488b05000000	            mov rax, qword [0x040069c8] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x40069c8	    0x48c780601200	            mov qword [rax + 0x1260], 0 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x40069d3	    0x488b05000000	            mov rax, qword [0x040069da] 	      3449	undo.c	FUNCTION_59	IF_1
0x40069da	    0x48c780681200	            mov qword [rax + 0x1268], 0 	      3449	undo.c	FUNCTION_59	IF_1
0x40069e5	              0x90	                                     nop	      3451	undo.c	FUNCTION_59
0x40069e6	              0x5d	                                 pop rbp	      3451	undo.c	FUNCTION_59
0x40069e7	              0xc3	                                     ret	      3451	undo.c	FUNCTION_59
serialize_uep	SWITCH,0:FOR,1:IF,2:functions,0:ELSE,0:CALL,7:WHILE,0:DO,0	87
0x40022dd	              0x55	                                push rbp	      1370	undo.c	FUNCTION_29
0x40022de	          0x4889e5	                            mov rbp, rsp	      1370	undo.c	FUNCTION_29
0x40022e1	        0x4883ec20	                           sub rsp, 0x20	      1370	undo.c	FUNCTION_29
0x40022e5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1370	undo.c	FUNCTION_29
0x40022e9	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1370	undo.c	FUNCTION_29
0x40022ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1374	undo.c	FUNCTION_29	CALL_1
0x40022f1	        0x488b4008	                mov rax, qword [rax + 8]	      1374	undo.c	FUNCTION_29	CALL_1
0x40022f5	          0x4889c1	                            mov rcx, rax	      1374	undo.c	FUNCTION_29	CALL_1
0x40022f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1374	undo.c	FUNCTION_29	CALL_1
0x40022fc	      0xba04000000	                              mov edx, 4	      1374	undo.c	FUNCTION_29	CALL_1
0x4002301	          0x4889ce	                            mov rsi, rcx	      1374	undo.c	FUNCTION_29	CALL_1
0x4002304	          0x4889c7	                            mov rdi, rax	      1374	undo.c	FUNCTION_29	CALL_1
0x4002307	      0xe8ddf0ffff	               call sym.undo_write_bytes	      1374	undo.c	FUNCTION_29	CALL_1
0x400230c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1375	undo.c	FUNCTION_29	CALL_2
0x4002310	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1375	undo.c	FUNCTION_29	CALL_2
0x4002314	          0x4889c1	                            mov rcx, rax	      1375	undo.c	FUNCTION_29	CALL_2
0x4002317	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1375	undo.c	FUNCTION_29	CALL_2
0x400231b	      0xba04000000	                              mov edx, 4	      1375	undo.c	FUNCTION_29	CALL_2
0x4002320	          0x4889ce	                            mov rsi, rcx	      1375	undo.c	FUNCTION_29	CALL_2
0x4002323	          0x4889c7	                            mov rdi, rax	      1375	undo.c	FUNCTION_29	CALL_2
0x4002326	      0xe8bef0ffff	               call sym.undo_write_bytes	      1375	undo.c	FUNCTION_29	CALL_2
0x400232b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1376	undo.c	FUNCTION_29	CALL_3
0x400232f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1376	undo.c	FUNCTION_29	CALL_3
0x4002333	          0x4889c1	                            mov rcx, rax	      1376	undo.c	FUNCTION_29	CALL_3
0x4002336	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1376	undo.c	FUNCTION_29	CALL_3
0x400233a	      0xba04000000	                              mov edx, 4	      1376	undo.c	FUNCTION_29	CALL_3
0x400233f	          0x4889ce	                            mov rsi, rcx	      1376	undo.c	FUNCTION_29	CALL_3
0x4002342	          0x4889c7	                            mov rdi, rax	      1376	undo.c	FUNCTION_29	CALL_3
0x4002345	      0xe89ff0ffff	               call sym.undo_write_bytes	      1376	undo.c	FUNCTION_29	CALL_3
0x400234a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1377	undo.c	FUNCTION_29	CALL_4
0x400234e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1377	undo.c	FUNCTION_29	CALL_4
0x4002352	          0x4889c1	                            mov rcx, rax	      1377	undo.c	FUNCTION_29	CALL_4
0x4002355	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1377	undo.c	FUNCTION_29	CALL_4
0x4002359	      0xba04000000	                              mov edx, 4	      1377	undo.c	FUNCTION_29	CALL_4
0x400235e	          0x4889ce	                            mov rsi, rcx	      1377	undo.c	FUNCTION_29	CALL_4
0x4002361	          0x4889c7	                            mov rdi, rax	      1377	undo.c	FUNCTION_29	CALL_4
0x4002364	      0xe880f0ffff	               call sym.undo_write_bytes	      1377	undo.c	FUNCTION_29	CALL_4
0x4002369	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1378	undo.c	FUNCTION_29	FOR_1
0x4002370	      0xe988000000	                           jmp 0x40023fd	      1378	undo.c	FUNCTION_29	FOR_1
0x4002375	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x4002379	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x400237d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x4002380	          0x4863d2	                         movsxd rdx, edx	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x4002383	        0x48c1e203	                              shl rdx, 3	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x4002387	          0x4801d0	                            add rax, rdx	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x400238a	          0x488b00	                    mov rax, qword [rax]	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x400238d	          0x4889c7	                            mov rdi, rax	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x4002390	      0xe800000000	                          call 0x4002395	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x4002395	        0x488945f8	                mov qword [rbp - 8], rax	      1380	undo.c	FUNCTION_29	FOR_1	CALL_5
0x4002399	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x400239d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x40023a1	      0xba04000000	                              mov edx, 4	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x40023a6	          0x4889ce	                            mov rsi, rcx	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x40023a9	          0x4889c7	                            mov rdi, rax	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x40023ac	      0xe838f0ffff	               call sym.undo_write_bytes	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x40023b1	            0x85c0	                           test eax, eax	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x40023b3	            0x7507	                           jne 0x40023bc	      1381	undo.c	FUNCTION_29	FOR_1	IF_1	CALL_6
0x40023b5	      0xb800000000	                              mov eax, 0	      1382	undo.c	FUNCTION_29	FOR_1	IF_1
0x40023ba	            0xeb5d	                           jmp 0x4002419	      1382	undo.c	FUNCTION_29	FOR_1	IF_1
0x40023bc	      0x48837df800	                  cmp qword [rbp - 8], 0	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023c1	            0x7436	                            je 0x40023f9	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023c7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023cb	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023ce	          0x4863d2	                         movsxd rdx, edx	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023d1	        0x48c1e203	                              shl rdx, 3	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023d5	          0x4801d0	                            add rax, rdx	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023d8	          0x488b08	                    mov rcx, qword [rax]	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023db	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023e3	          0x4889ce	                            mov rsi, rcx	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023e6	          0x4889c7	                            mov rdi, rax	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023e9	      0xe8bfeeffff	                   call sym.fwrite_crypt	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023ee	            0x85c0	                           test eax, eax	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023f0	            0x7507	                           jne 0x40023f9	      1383	undo.c	FUNCTION_29	FOR_1	IF_2	CALL_7
0x40023f2	      0xb800000000	                              mov eax, 0	      1384	undo.c	FUNCTION_29	FOR_1	IF_2
0x40023f7	            0xeb20	                           jmp 0x4002419	      1384	undo.c	FUNCTION_29	FOR_1	IF_2
0x40023f9	        0x8345f401	                add dword [rbp - 0xc], 1	      1378	undo.c	FUNCTION_29	FOR_1
0x40023fd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1378	undo.c	FUNCTION_29	FOR_1
0x4002400	          0x4863d0	                         movsxd rdx, eax	      1378	undo.c	FUNCTION_29	FOR_1
0x4002403	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1378	undo.c	FUNCTION_29	FOR_1
0x4002407	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1378	undo.c	FUNCTION_29	FOR_1
0x400240b	          0x4839c2	                            cmp rdx, rax	      1378	undo.c	FUNCTION_29	FOR_1
0x400240e	     0xf8c61ffffff	                            jl 0x4002375	      1378	undo.c	FUNCTION_29	FOR_1
0x4002414	      0xb801000000	                              mov eax, 1	      1386	undo.c	FUNCTION_29
0x4002419	              0xc9	                                   leave	      1387	undo.c	FUNCTION_29
0x400241a	              0xc3	                                     ret	      1387	undo.c	FUNCTION_29
undo_read	SWITCH,0:FOR,0:IF,6:functions,0:ELSE,1:CALL,5:WHILE,1:DO,0	112
0x40016ea	              0x55	                                push rbp	      1066	undo.c	FUNCTION_24
0x40016eb	          0x4889e5	                            mov rbp, rsp	      1066	undo.c	FUNCTION_24
0x40016ee	        0x4883ec40	                           sub rsp, 0x40	      1066	undo.c	FUNCTION_24
0x40016f2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1066	undo.c	FUNCTION_24
0x40016f6	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1066	undo.c	FUNCTION_24
0x40016fa	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1066	undo.c	FUNCTION_24
0x40016fe	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      1067	undo.c	FUNCTION_24
0x4001705	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1070	undo.c	FUNCTION_24	IF_1
0x4001709	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1070	undo.c	FUNCTION_24	IF_1
0x400170d	          0x4885c0	                           test rax, rax	      1070	undo.c	FUNCTION_24	IF_1
0x4001710	     0xf8438010000	                            je 0x400184e	      1070	undo.c	FUNCTION_24	IF_1
0x4001716	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1072	undo.c	FUNCTION_24	IF_1
0x400171a	          0x8945ec	             mov dword [rbp - 0x14], eax	      1072	undo.c	FUNCTION_24	IF_1
0x400171d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1073	undo.c	FUNCTION_24	IF_1
0x4001721	        0x488945f0	             mov qword [rbp - 0x10], rax	      1073	undo.c	FUNCTION_24	IF_1
0x4001725	      0xe918010000	                           jmp 0x4001842	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400172a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x400172e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x4001732	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x4001736	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x400173a	          0x4839c2	                            cmp rdx, rax	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x400173d	            0x7277	                            jb 0x40017b6	      1079	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x400173f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x4001743	        0x488b5008	                mov rdx, qword [rax + 8]	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x4001747	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x400174b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x400174f	          0x4889d1	                            mov rcx, rdx	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x4001752	      0xba00200000	                         mov edx, 0x2000	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x4001757	      0xbe01000000	                              mov esi, 1	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x400175c	          0x4889c7	                            mov rdi, rax	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x400175f	      0xe800000000	                          call 0x4001764	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x4001764	        0x488945f8	                mov qword [rbp - 8], rax	      1081	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_1
0x4001768	      0x48837df800	                  cmp qword [rbp - 8], 0	      1082	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x400176d	            0x750c	                           jne 0x400177b	      1082	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x400176f	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1084	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x4001776	      0xe900010000	                           jmp 0x400187b	      1085	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	IF_3
0x400177b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1087	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x400177f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1087	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x4001783	        0x48895028	             mov qword [rax + 0x28], rdx	      1087	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x4001787	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1088	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x400178b	    0x48c740200000	               mov qword [rax + 0x20], 0	      1088	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2
0x4001793	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x4001797	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x400179b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x400179f	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x40017a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x40017a7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x40017ab	          0x4889ce	                            mov rsi, rcx	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x40017ae	          0x4889c7	                            mov rdi, rax	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x40017b1	      0xe800000000	                          call 0x40017b6	      1089	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_2	CALL_2
0x40017b6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1091	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40017b9	            0x4898	                                    cdqe	      1091	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40017bb	        0x488945f8	                mov qword [rbp - 8], rax	      1091	undo.c	FUNCTION_24	IF_1	WHILE_1
0x40017bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017c3	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017cb	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017cf	          0x4829c2	                            sub rdx, rax	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017d2	          0x4889d0	                            mov rax, rdx	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017d5	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017d9	            0x731a	                           jae 0x40017f5	      1092	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017df	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017e7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017eb	          0x4829c2	                            sub rdx, rax	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017ee	          0x4889d0	                            mov rax, rdx	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017f1	        0x488945f8	                mov qword [rbp - 8], rax	      1093	undo.c	FUNCTION_24	IF_1	WHILE_1	IF_4
0x40017f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x40017f9	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x40017fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x4001801	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x4001805	        0x488d0c02	                    lea rcx, [rdx + rax]	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x4001809	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x400180d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x4001811	          0x4889ce	                            mov rsi, rcx	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x4001814	          0x4889c7	                            mov rdi, rax	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x4001817	      0xe800000000	                          call 0x400181c	      1094	undo.c	FUNCTION_24	IF_1	WHILE_1	CALL_3
0x400181c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4001820	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4001824	        0x488b45f8	                mov rax, qword [rbp - 8]	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4001828	          0x4801c2	                            add rdx, rax	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400182b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400182f	        0x48895020	             mov qword [rax + 0x20], rdx	      1095	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4001833	        0x488b45f8	                mov rax, qword [rbp - 8]	      1096	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4001837	          0x2945ec	             sub dword [rbp - 0x14], eax	      1096	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400183a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1097	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400183e	        0x480145f0	            add qword [rbp - 0x10], rax 	      1097	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4001842	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x4001846	     0xf8fdefeffff	                            jg 0x400172a	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400184c	            0xeb2d	                           jmp 0x400187b	      1075	undo.c	FUNCTION_24	IF_1	WHILE_1
0x400184e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x4001852	        0x488b5008	                mov rdx, qword [rax + 8]	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x4001856	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x400185a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x400185e	          0x4889d1	                            mov rcx, rdx	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x4001861	      0xba01000000	                              mov edx, 1	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x4001866	          0x4889c7	                            mov rdi, rax	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x4001869	      0xe800000000	                          call 0x400186e	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x400186e	        0x4883f801	                              cmp rax, 1	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x4001872	            0x7407	                            je 0x400187b	      1102	undo.c	FUNCTION_24	ELSE_1	IF_5	CALL_4
0x4001874	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1103	undo.c	FUNCTION_24	ELSE_1	IF_5
0x400187b	        0x837de800	               cmp dword [rbp - 0x18], 0	      1105	undo.c	FUNCTION_24	IF_6
0x400187f	            0x7515	                           jne 0x4001896	      1105	undo.c	FUNCTION_24	IF_6
0x4001881	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1108	undo.c	FUNCTION_24	CALL_5
0x4001885	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1108	undo.c	FUNCTION_24	CALL_5
0x4001889	      0xbe00000000	                              mov esi, 0	      1108	undo.c	FUNCTION_24	CALL_5
0x400188e	          0x4889c7	                            mov rdi, rax	      1108	undo.c	FUNCTION_24	CALL_5
0x4001891	      0xe800000000	                          call 0x4001896	      1108	undo.c	FUNCTION_24	CALL_5
0x4001896	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1109	undo.c	FUNCTION_24
0x4001899	              0xc9	                                   leave	      1110	undo.c	FUNCTION_24
0x400189a	              0xc3	                                     ret	      1110	undo.c	FUNCTION_24
u_free_uhp	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,2:WHILE,1:DO,0	27
0x400106f	              0x55	                                push rbp	       865	undo.c	FUNCTION_14
0x4001070	          0x4889e5	                            mov rbp, rsp	       865	undo.c	FUNCTION_14
0x4001073	        0x4883ec20	                           sub rsp, 0x20	       865	undo.c	FUNCTION_14
0x4001077	        0x48897de8	             mov qword [rbp - 0x18], rdi	       865	undo.c	FUNCTION_14
0x400107b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       869	undo.c	FUNCTION_14
0x400107f	        0x488b4030	            mov rax, qword [rax + 0x30] 	       869	undo.c	FUNCTION_14
0x4001083	        0x488945f0	             mov qword [rbp - 0x10], rax	       869	undo.c	FUNCTION_14
0x4001087	            0xeb2a	                           jmp 0x40010b3	       870	undo.c	FUNCTION_14	WHILE_1
0x4001089	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       872	undo.c	FUNCTION_14	WHILE_1
0x400108d	          0x488b00	                    mov rax, qword [rax]	       872	undo.c	FUNCTION_14	WHILE_1
0x4001090	        0x488945f8	                mov qword [rbp - 8], rax	       872	undo.c	FUNCTION_14	WHILE_1
0x4001094	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x4001098	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x400109c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x40010a0	          0x4889d6	                            mov rsi, rdx	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x40010a3	          0x4889c7	                            mov rdi, rax	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x40010a6	      0xe828570000	                    call sym.u_freeentry	       873	undo.c	FUNCTION_14	WHILE_1	CALL_1
0x40010ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       874	undo.c	FUNCTION_14	WHILE_1
0x40010af	        0x488945f0	             mov qword [rbp - 0x10], rax	       874	undo.c	FUNCTION_14	WHILE_1
0x40010b3	      0x48837df000	               cmp qword [rbp - 0x10], 0	       870	undo.c	FUNCTION_14	WHILE_1
0x40010b8	            0x75cf	                           jne 0x4001089	       870	undo.c	FUNCTION_14	WHILE_1
0x40010ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       876	undo.c	FUNCTION_14	CALL_2
0x40010be	          0x4889c7	                            mov rdi, rax	       876	undo.c	FUNCTION_14	CALL_2
0x40010c1	      0xe800000000	                          call 0x40010c6	       876	undo.c	FUNCTION_14	CALL_2
0x40010c6	              0x90	                                     nop	       877	undo.c	FUNCTION_14
0x40010c7	              0xc9	                                   leave	       877	undo.c	FUNCTION_14
0x40010c8	              0xc3	                                     ret	       877	undo.c	FUNCTION_14
u_freeentry	SWITCH,0:FOR,0:IF,0:functions,0:ELSE,0:CALL,3:WHILE,1:DO,0	27
0x40067d3	              0x55	                                push rbp	      3396	undo.c	FUNCTION_56
0x40067d4	          0x4889e5	                            mov rbp, rsp	      3396	undo.c	FUNCTION_56
0x40067d7	        0x4883ec10	                           sub rsp, 0x10	      3396	undo.c	FUNCTION_56
0x40067db	        0x48897df8	                mov qword [rbp - 8], rdi	      3396	undo.c	FUNCTION_56
0x40067df	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3396	undo.c	FUNCTION_56
0x40067e3	            0xeb23	                           jmp 0x4006808	      3397	undo.c	FUNCTION_56	WHILE_1
0x40067e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3398	undo.c	FUNCTION_56	CALL_1
0x40067e9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3398	undo.c	FUNCTION_56	CALL_1
0x40067ed	      0x48836df001	               sub qword [rbp - 0x10], 1	      3398	undo.c	FUNCTION_56	CALL_1
0x40067f2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3398	undo.c	FUNCTION_56	CALL_1
0x40067f6	        0x48c1e203	                              shl rdx, 3	      3398	undo.c	FUNCTION_56	CALL_1
0x40067fa	          0x4801d0	                            add rax, rdx	      3398	undo.c	FUNCTION_56	CALL_1
0x40067fd	          0x488b00	                    mov rax, qword [rax]	      3398	undo.c	FUNCTION_56	CALL_1
0x4006800	          0x4889c7	                            mov rdi, rax	      3398	undo.c	FUNCTION_56	CALL_1
0x4006803	      0xe800000000	                          call 0x4006808	      3398	undo.c	FUNCTION_56	CALL_1
0x4006808	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3397	undo.c	FUNCTION_56	WHILE_1
0x400680d	            0x7fd6	                            jg 0x40067e5	      3397	undo.c	FUNCTION_56	WHILE_1
0x400680f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3399	undo.c	FUNCTION_56	CALL_2
0x4006813	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3399	undo.c	FUNCTION_56	CALL_2
0x4006817	          0x4889c7	                            mov rdi, rax	      3399	undo.c	FUNCTION_56	CALL_2
0x400681a	      0xe800000000	                          call 0x400681f	      3399	undo.c	FUNCTION_56	CALL_2
0x400681f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3403	undo.c	FUNCTION_56	CALL_3
0x4006823	          0x4889c7	                            mov rdi, rax	      3403	undo.c	FUNCTION_56	CALL_3
0x4006826	      0xe800000000	                          call 0x400682b	      3403	undo.c	FUNCTION_56	CALL_3
0x400682b	              0x90	                                     nop	      3404	undo.c	FUNCTION_56
0x400682c	              0xc9	                                   leave	      3404	undo.c	FUNCTION_56
0x400682d	              0xc3	                                     ret	      3404	undo.c	FUNCTION_56
