enc_skip	CALL,2:IF,2:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	27
0x4003903	              0x55	                                push rbp	      4285	mbyte.c	FUNCTION_85
0x4003904	          0x4889e5	                            mov rbp, rsp	      4285	mbyte.c	FUNCTION_85
0x4003907	        0x4883ec10	                           sub rsp, 0x10	      4285	mbyte.c	FUNCTION_85
0x400390b	        0x48897df8	                mov qword [rbp - 8], rdi	      4285	mbyte.c	FUNCTION_85
0x400390f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x4003913	      0xba06000000	                              mov edx, 6	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x4003918	      0xbe00000000	                              mov esi, 0	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x400391d	          0x4889c7	                            mov rdi, rax	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x4003920	      0xe800000000	                          call 0x4003925	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x4003925	            0x85c0	                           test eax, eax	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x4003927	            0x750a	                           jne 0x4003933	      4286	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x4003929	        0x488b45f8	                mov rax, qword [rbp - 8]	      4287	mbyte.c	FUNCTION_85	IF_1
0x400392d	        0x4883c006	                              add rax, 6	      4287	mbyte.c	FUNCTION_85	IF_1
0x4003931	            0xeb28	                           jmp 0x400395b	      4287	mbyte.c	FUNCTION_85	IF_1
0x4003933	        0x488b45f8	                mov rax, qword [rbp - 8]	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x4003937	      0xba05000000	                              mov edx, 5	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x400393c	      0xbe00000000	                              mov esi, 0	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x4003941	          0x4889c7	                            mov rdi, rax	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x4003944	      0xe800000000	                          call 0x4003949	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x4003949	            0x85c0	                           test eax, eax	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x400394b	            0x750a	                           jne 0x4003957	      4288	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x400394d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4289	mbyte.c	FUNCTION_85	IF_2
0x4003951	        0x4883c005	                              add rax, 5	      4289	mbyte.c	FUNCTION_85	IF_2
0x4003955	            0xeb04	                           jmp 0x400395b	      4289	mbyte.c	FUNCTION_85	IF_2
0x4003957	        0x488b45f8	                mov rax, qword [rbp - 8]	      4290	mbyte.c	FUNCTION_85
0x400395b	              0xc9	                                   leave	      4291	mbyte.c	FUNCTION_85
0x400395c	              0xc3	                                     ret	      4291	mbyte.c	FUNCTION_85
utf_convert	CALL,0:IF,2:ELSE,2:DO,0:WHILE,1:functions,0:SWITCH,0:FOR,0	95
0x40022a4	              0x55	                                push rbp	      3130	mbyte.c	FUNCTION_58
0x40022a5	          0x4889e5	                            mov rbp, rsp	      3130	mbyte.c	FUNCTION_58
0x40022a8	          0x897dec	             mov dword [rbp - 0x14], edi	      3130	mbyte.c	FUNCTION_58
0x40022ab	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3130	mbyte.c	FUNCTION_58
0x40022af	          0x8955e8	             mov dword [rbp - 0x18], edx	      3130	mbyte.c	FUNCTION_58
0x40022b2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3132	mbyte.c	FUNCTION_58
0x40022b5	            0x4898	                                    cdqe	      3132	mbyte.c	FUNCTION_58
0x40022b7	        0x48c1e804	                              shr rax, 4	      3132	mbyte.c	FUNCTION_58
0x40022bb	          0x8945f8	                mov dword [rbp - 8], eax	      3132	mbyte.c	FUNCTION_58
0x40022be	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      3134	mbyte.c	FUNCTION_58
0x40022c5	          0x8b45f8	                mov eax, dword [rbp - 8]	      3135	mbyte.c	FUNCTION_58
0x40022c8	          0x8945f4	              mov dword [rbp - 0xc], eax	      3135	mbyte.c	FUNCTION_58
0x40022cb	            0xeb40	                           jmp 0x400230d	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x40022cd	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40022d0	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40022d3	             0x1d0	                            add eax, edx	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40022d5	            0x89c2	                            mov edx, eax	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40022d7	          0xc1ea1f	                           shr edx, 0x1f	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40022da	             0x1d0	                            add eax, edx	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40022dc	            0xd1f8	                              sar eax, 1	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40022de	          0x8945fc	                mov dword [rbp - 4], eax	      3139	mbyte.c	FUNCTION_58	WHILE_1
0x40022e1	          0x8b45fc	                mov eax, dword [rbp - 4]	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40022e4	            0x4898	                                    cdqe	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40022e6	        0x48c1e004	                              shl rax, 4	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40022ea	          0x4889c2	                            mov rdx, rax	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40022ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40022f1	          0x4801d0	                            add rax, rdx	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40022f4	          0x8b4004	                mov eax, dword [rax + 4]	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40022f7	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40022fa	            0x7d0b	                           jge 0x4002307	      3140	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40022fc	          0x8b45fc	                mov eax, dword [rbp - 4]	      3141	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x40022ff	          0x83c001	                              add eax, 1	      3141	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4002302	          0x8945f0	             mov dword [rbp - 0x10], eax	      3141	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4002305	            0xeb06	                           jmp 0x400230d	      3141	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x4002307	          0x8b45fc	                mov eax, dword [rbp - 4]	      3143	mbyte.c	FUNCTION_58	WHILE_1	ELSE_1
0x400230a	          0x8945f4	              mov dword [rbp - 0xc], eax	      3143	mbyte.c	FUNCTION_58	WHILE_1	ELSE_1
0x400230d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x4002310	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x4002313	            0x7cb8	                            jl 0x40022cd	      3136	mbyte.c	FUNCTION_58	WHILE_1
0x4002315	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3145	mbyte.c	FUNCTION_58	IF_2
0x4002318	          0x3b45f8	                cmp eax, dword [rbp - 8]	      3145	mbyte.c	FUNCTION_58	IF_2
0x400231b	     0xf8d8e000000	                           jge 0x40023af	      3145	mbyte.c	FUNCTION_58	IF_2
0x4002321	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3146	mbyte.c	FUNCTION_58	IF_2
0x4002324	            0x4898	                                    cdqe	      3146	mbyte.c	FUNCTION_58	IF_2
0x4002326	        0x48c1e004	                              shl rax, 4	      3146	mbyte.c	FUNCTION_58	IF_2
0x400232a	          0x4889c2	                            mov rdx, rax	      3146	mbyte.c	FUNCTION_58	IF_2
0x400232d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3146	mbyte.c	FUNCTION_58	IF_2
0x4002331	          0x4801d0	                            add rax, rdx	      3146	mbyte.c	FUNCTION_58	IF_2
0x4002334	            0x8b00	                    mov eax, dword [rax]	      3146	mbyte.c	FUNCTION_58	IF_2
0x4002336	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3146	mbyte.c	FUNCTION_58	IF_2
0x4002339	            0x7f74	                            jg 0x40023af	      3146	mbyte.c	FUNCTION_58	IF_2
0x400233b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3147	mbyte.c	FUNCTION_58	IF_2
0x400233e	            0x4898	                                    cdqe	      3147	mbyte.c	FUNCTION_58	IF_2
0x4002340	        0x48c1e004	                              shl rax, 4	      3147	mbyte.c	FUNCTION_58	IF_2
0x4002344	          0x4889c2	                            mov rdx, rax	      3147	mbyte.c	FUNCTION_58	IF_2
0x4002347	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3147	mbyte.c	FUNCTION_58	IF_2
0x400234b	          0x4801d0	                            add rax, rdx	      3147	mbyte.c	FUNCTION_58	IF_2
0x400234e	          0x8b4004	                mov eax, dword [rax + 4]	      3147	mbyte.c	FUNCTION_58	IF_2
0x4002351	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3147	mbyte.c	FUNCTION_58	IF_2
0x4002354	            0x7c59	                            jl 0x40023af	      3147	mbyte.c	FUNCTION_58	IF_2
0x4002356	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002359	            0x4898	                                    cdqe	      3148	mbyte.c	FUNCTION_58	IF_2
0x400235b	        0x48c1e004	                              shl rax, 4	      3148	mbyte.c	FUNCTION_58	IF_2
0x400235f	          0x4889c2	                            mov rdx, rax	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002362	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002366	          0x4801d0	                            add rax, rdx	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002369	            0x8b00	                    mov eax, dword [rax]	      3148	mbyte.c	FUNCTION_58	IF_2
0x400236b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3148	mbyte.c	FUNCTION_58	IF_2
0x400236e	            0x29c2	                            sub edx, eax	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002370	            0x89d0	                            mov eax, edx	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002372	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002375	          0x4863d2	                         movsxd rdx, edx	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002378	          0x4889d1	                            mov rcx, rdx	      3148	mbyte.c	FUNCTION_58	IF_2
0x400237b	        0x48c1e104	                              shl rcx, 4	      3148	mbyte.c	FUNCTION_58	IF_2
0x400237f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002383	          0x4801ca	                            add rdx, rcx	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002386	          0x8b4a08	                mov ecx, dword [rdx + 8]	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002389	              0x99	                                     cdq	      3148	mbyte.c	FUNCTION_58	IF_2
0x400238a	            0xf7f9	                                idiv ecx	      3148	mbyte.c	FUNCTION_58	IF_2
0x400238c	            0x89d0	                            mov eax, edx	      3148	mbyte.c	FUNCTION_58	IF_2
0x400238e	            0x85c0	                           test eax, eax	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002390	            0x751d	                           jne 0x40023af	      3148	mbyte.c	FUNCTION_58	IF_2
0x4002392	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3149	mbyte.c	FUNCTION_58	IF_2
0x4002395	            0x4898	                                    cdqe	      3149	mbyte.c	FUNCTION_58	IF_2
0x4002397	        0x48c1e004	                              shl rax, 4	      3149	mbyte.c	FUNCTION_58	IF_2
0x400239b	          0x4889c2	                            mov rdx, rax	      3149	mbyte.c	FUNCTION_58	IF_2
0x400239e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3149	mbyte.c	FUNCTION_58	IF_2
0x40023a2	          0x4801d0	                            add rax, rdx	      3149	mbyte.c	FUNCTION_58	IF_2
0x40023a5	          0x8b500c	              mov edx, dword [rax + 0xc]	      3149	mbyte.c	FUNCTION_58	IF_2
0x40023a8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3149	mbyte.c	FUNCTION_58	IF_2
0x40023ab	             0x1d0	                            add eax, edx	      3149	mbyte.c	FUNCTION_58	IF_2
0x40023ad	            0xeb03	                           jmp 0x40023b2	      3149	mbyte.c	FUNCTION_58	IF_2
0x40023af	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3151	mbyte.c	FUNCTION_58	ELSE_2
0x40023b2	              0x5d	                                 pop rbp	      3152	mbyte.c	FUNCTION_58	ELSE_2
0x40023b3	              0xc3	                                     ret	      3152	mbyte.c	FUNCTION_58	ELSE_2
mb_off_next	CALL,0:IF,5:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,2	78
0x4002d60	              0x55	                                push rbp	      3896	mbyte.c	FUNCTION_72
0x4002d61	          0x4889e5	                            mov rbp, rsp	      3896	mbyte.c	FUNCTION_72
0x4002d64	        0x4883ec20	                           sub rsp, 0x20	      3896	mbyte.c	FUNCTION_72
0x4002d68	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3896	mbyte.c	FUNCTION_72
0x4002d6c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3896	mbyte.c	FUNCTION_72
0x4002d70	    0x8b0500000000	            mov eax, dword [0x04002d76] 	      3900	mbyte.c	FUNCTION_72	IF_1
0x4002d76	            0x85c0	                           test eax, eax	      3900	mbyte.c	FUNCTION_72	IF_1
0x4002d78	     0xf84c9000000	                            je 0x4002e47	      3900	mbyte.c	FUNCTION_72	IF_1
0x4002d7e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3902	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002d82	           0xfb600	                   movzx eax, byte [rax]	      3902	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002d85	            0x84c0	                             test al, al	      3902	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002d87	            0x780a	                            js 0x4002d93	      3902	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002d89	      0xb800000000	                              mov eax, 0	      3903	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002d8e	      0xe9cb000000	                           jmp 0x4002e5e	      3903	mbyte.c	FUNCTION_72	IF_1	IF_2
0x4002d93	    0xc745f8000000	                  mov dword [rbp - 8], 0	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002d9a	            0xeb04	                           jmp 0x4002da0	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002d9c	        0x8345f801	                  add dword [rbp - 8], 1	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002da0	          0x8b45f8	                mov eax, dword [rbp - 8]	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002da3	          0x4863d0	                         movsxd rdx, eax	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002da6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002daa	          0x4801d0	                            add rax, rdx	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002dad	           0xfb600	                   movzx eax, byte [rax]	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002db0	           0xfb6c0	                           movzx eax, al	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002db3	      0x25c0000000	                           and eax, 0xc0	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002db8	      0x3d80000000	                           cmp eax, 0x80	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002dbd	            0x74dd	                            je 0x4002d9c	      3906	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x4002dbf	        0x837df800	                  cmp dword [rbp - 8], 0	      3908	mbyte.c	FUNCTION_72	IF_1	IF_3
0x4002dc3	            0x7e7d	                           jle 0x4002e42	      3908	mbyte.c	FUNCTION_72	IF_1	IF_3
0x4002dc5	    0xc745fc000000	                  mov dword [rbp - 4], 0	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002dcc	            0xeb25	                           jmp 0x4002df3	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002dce	          0x8b45fc	                mov eax, dword [rbp - 4]	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002dd1	            0xf7d8	                                 neg eax	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002dd3	          0x4863d0	                         movsxd rdx, eax	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002dd6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002dda	          0x4801d0	                            add rax, rdx	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002ddd	           0xfb600	                   movzx eax, byte [rax]	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002de0	           0xfb6c0	                           movzx eax, al	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002de3	      0x25c0000000	                           and eax, 0xc0	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002de8	      0x3d80000000	                           cmp eax, 0x80	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002ded	            0x751e	                           jne 0x4002e0d	      3912	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002def	        0x8345fc01	                  add dword [rbp - 4], 1	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002df3	          0x8b45fc	                mov eax, dword [rbp - 4]	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002df6	            0x4898	                                    cdqe	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002df8	          0x48f7d8	                                 neg rax	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002dfb	          0x4889c2	                            mov rdx, rax	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002dfe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002e02	          0x4801d0	                            add rax, rdx	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002e05	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002e09	            0x77c3	                            ja 0x4002dce	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002e0b	            0xeb01	                           jmp 0x4002e0e	      3911	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x4002e0d	              0x90	                                     nop	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x4002e0e	          0x8b45fc	                mov eax, dword [rbp - 4]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e11	            0xf7d8	                                 neg eax	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e13	          0x4863d0	                         movsxd rdx, eax	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e16	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e1a	          0x4801d0	                            add rax, rdx	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e1d	           0xfb600	                   movzx eax, byte [rax]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e20	           0xfb6c0	                           movzx eax, al	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e23	            0x4898	                                    cdqe	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e25	     0xfb680000000	                   movzx eax, byte [rax]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e2c	           0xfbec0	                           movsx eax, al	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e2f	          0x8b4df8	                mov ecx, dword [rbp - 8]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e32	          0x8b55fc	                mov edx, dword [rbp - 4]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e35	             0x1ca	                            add edx, ecx	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e37	            0x39d0	                            cmp eax, edx	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e39	            0x7407	                            je 0x4002e42	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e3b	      0xb800000000	                              mov eax, 0	      3915	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e40	            0xeb1c	                           jmp 0x4002e5e	      3915	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x4002e42	          0x8b45f8	                mov eax, dword [rbp - 8]	      3917	mbyte.c	FUNCTION_72	IF_1
0x4002e45	            0xeb17	                           jmp 0x4002e5e	      3917	mbyte.c	FUNCTION_72	IF_1
0x4002e47	    0x488b05000000	            mov rax, qword [0x04002e4e] 	      3922	mbyte.c	FUNCTION_72
0x4002e4e	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3922	mbyte.c	FUNCTION_72
0x4002e52	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3922	mbyte.c	FUNCTION_72
0x4002e56	          0x4889ce	                            mov rsi, rcx	      3922	mbyte.c	FUNCTION_72
0x4002e59	          0x4889d7	                            mov rdi, rdx	      3922	mbyte.c	FUNCTION_72
0x4002e5c	            0xffd0	                                call rax	      3922	mbyte.c	FUNCTION_72
0x4002e5e	              0xc9	                                   leave	      3923	mbyte.c	FUNCTION_72
0x4002e5f	              0xc3	                                     ret	      3923	mbyte.c	FUNCTION_72
dbcs_ptr2len	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	21
0x4000c57	              0x55	                                push rbp	      1137	mbyte.c	FUNCTION_15
0x4000c58	          0x4889e5	                            mov rbp, rsp	      1137	mbyte.c	FUNCTION_15
0x4000c5b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1137	mbyte.c	FUNCTION_15
0x4000c5f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1141	mbyte.c	FUNCTION_15	CALL_1
0x4000c63	           0xfb600	                   movzx eax, byte [rax]	      1141	mbyte.c	FUNCTION_15	CALL_1
0x4000c66	           0xfb6c0	                           movzx eax, al	      1141	mbyte.c	FUNCTION_15	CALL_1
0x4000c69	            0x4898	                                    cdqe	      1141	mbyte.c	FUNCTION_15	CALL_1
0x4000c6b	     0xfb680000000	                   movzx eax, byte [rax]	      1141	mbyte.c	FUNCTION_15	CALL_1
0x4000c72	           0xfbec0	                           movsx eax, al	      1141	mbyte.c	FUNCTION_15	CALL_1
0x4000c75	          0x8945fc	                mov dword [rbp - 4], eax	      1141	mbyte.c	FUNCTION_15	CALL_1
0x4000c78	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1142	mbyte.c	FUNCTION_15	IF_1
0x4000c7c	            0x7516	                           jne 0x4000c94	      1142	mbyte.c	FUNCTION_15	IF_1
0x4000c7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1142	mbyte.c	FUNCTION_15	IF_1
0x4000c82	        0x4883c001	                              add rax, 1	      1142	mbyte.c	FUNCTION_15	IF_1
0x4000c86	           0xfb600	                   movzx eax, byte [rax]	      1142	mbyte.c	FUNCTION_15	IF_1
0x4000c89	            0x84c0	                             test al, al	      1142	mbyte.c	FUNCTION_15	IF_1
0x4000c8b	            0x7507	                           jne 0x4000c94	      1142	mbyte.c	FUNCTION_15	IF_1
0x4000c8d	    0xc745fc010000	                  mov dword [rbp - 4], 1	      1143	mbyte.c	FUNCTION_15	IF_1
0x4000c94	          0x8b45fc	                mov eax, dword [rbp - 4]	      1144	mbyte.c	FUNCTION_15
0x4000c97	              0x5d	                                 pop rbp	      1145	mbyte.c	FUNCTION_15
0x4000c98	              0xc3	                                     ret	      1145	mbyte.c	FUNCTION_15
mb_copy_char	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	37
0x4002cec	              0x55	                                push rbp	      3881	mbyte.c	FUNCTION_71
0x4002ced	          0x4889e5	                            mov rbp, rsp	      3881	mbyte.c	FUNCTION_71
0x4002cf0	        0x4883ec20	                           sub rsp, 0x20	      3881	mbyte.c	FUNCTION_71
0x4002cf4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3881	mbyte.c	FUNCTION_71
0x4002cf8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3881	mbyte.c	FUNCTION_71
0x4002cfc	    0x488b05000000	            mov rax, qword [0x04002d03] 	      3882	mbyte.c	FUNCTION_71
0x4002d03	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3882	mbyte.c	FUNCTION_71
0x4002d07	          0x488b12	                    mov rdx, qword [rdx]	      3882	mbyte.c	FUNCTION_71
0x4002d0a	          0x4889d7	                            mov rdi, rdx	      3882	mbyte.c	FUNCTION_71
0x4002d0d	            0xffd0	                                call rax	      3882	mbyte.c	FUNCTION_71
0x4002d0f	          0x8945fc	                mov dword [rbp - 4], eax	      3882	mbyte.c	FUNCTION_71
0x4002d12	          0x8b45fc	                mov eax, dword [rbp - 4]	      3884	mbyte.c	FUNCTION_71	CALL_1
0x4002d15	          0x4863d0	                         movsxd rdx, eax	      3884	mbyte.c	FUNCTION_71	CALL_1
0x4002d18	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3884	mbyte.c	FUNCTION_71	CALL_1
0x4002d1c	          0x488b08	                    mov rcx, qword [rax]	      3884	mbyte.c	FUNCTION_71	CALL_1
0x4002d1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3884	mbyte.c	FUNCTION_71	CALL_1
0x4002d23	          0x488b00	                    mov rax, qword [rax]	      3884	mbyte.c	FUNCTION_71	CALL_1
0x4002d26	          0x4889ce	                            mov rsi, rcx	      3884	mbyte.c	FUNCTION_71	CALL_1
0x4002d29	          0x4889c7	                            mov rdi, rax	      3884	mbyte.c	FUNCTION_71	CALL_1
0x4002d2c	      0xe800000000	                          call 0x4002d31	      3884	mbyte.c	FUNCTION_71	CALL_1
0x4002d31	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3885	mbyte.c	FUNCTION_71
0x4002d35	          0x488b10	                    mov rdx, qword [rax]	      3885	mbyte.c	FUNCTION_71
0x4002d38	          0x8b45fc	                mov eax, dword [rbp - 4]	      3885	mbyte.c	FUNCTION_71
0x4002d3b	            0x4898	                                    cdqe	      3885	mbyte.c	FUNCTION_71
0x4002d3d	          0x4801c2	                            add rdx, rax	      3885	mbyte.c	FUNCTION_71
0x4002d40	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3885	mbyte.c	FUNCTION_71
0x4002d44	          0x488910	                    mov qword [rax], rdx	      3885	mbyte.c	FUNCTION_71
0x4002d47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3886	mbyte.c	FUNCTION_71
0x4002d4b	          0x488b10	                    mov rdx, qword [rax]	      3886	mbyte.c	FUNCTION_71
0x4002d4e	          0x8b45fc	                mov eax, dword [rbp - 4]	      3886	mbyte.c	FUNCTION_71
0x4002d51	            0x4898	                                    cdqe	      3886	mbyte.c	FUNCTION_71
0x4002d53	          0x4801c2	                            add rdx, rax	      3886	mbyte.c	FUNCTION_71
0x4002d56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3886	mbyte.c	FUNCTION_71
0x4002d5a	          0x488910	                    mov qword [rax], rdx	      3886	mbyte.c	FUNCTION_71
0x4002d5d	              0x90	                                     nop	      3887	mbyte.c	FUNCTION_71
0x4002d5e	              0xc9	                                   leave	      3887	mbyte.c	FUNCTION_71
0x4002d5f	              0xc3	                                     ret	      3887	mbyte.c	FUNCTION_71
latin_head_off	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	7
0x4002a2c	              0x55	                                push rbp	      3764	mbyte.c	FUNCTION_67
0x4002a2d	          0x4889e5	                            mov rbp, rsp	      3764	mbyte.c	FUNCTION_67
0x4002a30	        0x48897df8	                mov qword [rbp - 8], rdi	      3764	mbyte.c	FUNCTION_67
0x4002a34	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3764	mbyte.c	FUNCTION_67
0x4002a38	      0xb800000000	                              mov eax, 0	      3765	mbyte.c	FUNCTION_67
0x4002a3d	              0x5d	                                 pop rbp	      3766	mbyte.c	FUNCTION_67
0x4002a3e	              0xc3	                                     ret	      3766	mbyte.c	FUNCTION_67
im_commit_cb	CALL,11:IF,10:ELSE,2:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	99
0x4004cf8	              0x55	                                push rbp	      5165	mbyte.c	FUNCTION_110
0x4004cf9	          0x4889e5	                            mov rbp, rsp	      5165	mbyte.c	FUNCTION_110
0x4004cfc	        0x4883ec50	                           sub rsp, 0x50	      5165	mbyte.c	FUNCTION_110
0x4004d00	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5165	mbyte.c	FUNCTION_110
0x4004d04	        0x488975c0	             mov qword [rbp - 0x40], rsi	      5165	mbyte.c	FUNCTION_110
0x4004d08	        0x488955b8	             mov qword [rbp - 0x48], rdx	      5165	mbyte.c	FUNCTION_110
0x4004d0c	    0x64488b042528	                mov rax, qword fs:[0x28]	      5165	mbyte.c	FUNCTION_110
0x4004d15	        0x488945f8	                mov qword [rbp - 8], rax	      5165	mbyte.c	FUNCTION_110
0x4004d19	            0x31c0	                            xor eax, eax	      5165	mbyte.c	FUNCTION_110
0x4004d1b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4004d1f	          0x4889c7	                            mov rdi, rax	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4004d22	      0xe800000000	                          call 0x4004d27	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4004d27	          0x8945e8	             mov dword [rbp - 0x18], eax	      5166	mbyte.c	FUNCTION_110	CALL_1
0x4004d2a	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      5167	mbyte.c	FUNCTION_110
0x4004d31	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5169	mbyte.c	FUNCTION_110
0x4004d34	          0x8945dc	             mov dword [rbp - 0x24], eax	      5169	mbyte.c	FUNCTION_110
0x4004d37	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      5170	mbyte.c	FUNCTION_110
0x4004d3e	    0x488b05000000	            mov rax, qword [0x04004d45] 	      5177	mbyte.c	FUNCTION_110	IF_1
0x4004d45	          0x4885c0	                           test rax, rax	      5177	mbyte.c	FUNCTION_110	IF_1
0x4004d48	     0xf85a4000000	                           jne 0x4004df2	      5177	mbyte.c	FUNCTION_110	IF_1
0x4004d4e	      0xe8e8fdffff	              call sym.im_delete_preedit	      5181	mbyte.c	FUNCTION_110	IF_1	CALL_3
0x4004d53	    0x8b0500000000	            mov eax, dword [0x04004d59] 	      5184	mbyte.c	FUNCTION_110	IF_1	IF_2
0x4004d59	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      5184	mbyte.c	FUNCTION_110	IF_1	IF_2
0x4004d5e	            0x750c	                           jne 0x4004d6c	      5184	mbyte.c	FUNCTION_110	IF_1	IF_2
0x4004d60	      0xe803f7ffff	         call sym.init_preedit_start_col	      5186	mbyte.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x4004d65	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      5187	mbyte.c	FUNCTION_110	IF_1	IF_2
0x4004d6c	    0x8b0500000000	            mov eax, dword [0x04004d72] 	      5199	mbyte.c	FUNCTION_110	IF_1	IF_3
0x4004d72	            0x85c0	                           test eax, eax	      5199	mbyte.c	FUNCTION_110	IF_1	IF_3
0x4004d74	            0x7439	                            je 0x4004daf	      5199	mbyte.c	FUNCTION_110	IF_1	IF_3
0x4004d76	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      5201	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_5
0x4004d7a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5201	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_5
0x4004d7e	          0x4889c6	                            mov rsi, rax	      5201	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_5
0x4004d81	      0xbf00000000	                              mov edi, 0	      5201	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_5
0x4004d86	      0xe800000000	                          call 0x4004d8b	      5201	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_5
0x4004d8b	        0x488945f0	             mov qword [rbp - 0x10], rax	      5201	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_5
0x4004d8f	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004d94	            0x7521	                           jne 0x4004db7	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004d96	      0xba00000000	                              mov edx, 0	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004d9b	      0xbe00000000	                              mov esi, 0	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004da0	      0xbf00000000	                              mov edi, 0	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004da5	      0xe800000000	                          call 0x4004daa	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004daa	      0xe9cf000000	                           jmp 0x4004e7e	      5202	mbyte.c	FUNCTION_110	IF_1	IF_3	CALL_6
0x4004daf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5205	mbyte.c	FUNCTION_110	IF_1	ELSE_1
0x4004db3	        0x488945f0	             mov qword [rbp - 0x10], rax	      5205	mbyte.c	FUNCTION_110	IF_1	ELSE_1
0x4004db7	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4004dba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4004dbe	            0x89d6	                            mov esi, edx	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4004dc0	          0x4889c7	                            mov rdi, rax	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4004dc3	      0xe800000000	                          call 0x4004dc8	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4004dc8	          0x8945ec	             mov dword [rbp - 0x14], eax	      5207	mbyte.c	FUNCTION_110	IF_1	CALL_7
0x4004dcb	    0x8b0500000000	            mov eax, dword [0x04004dd1] 	      5209	mbyte.c	FUNCTION_110	IF_1	IF_4
0x4004dd1	            0x85c0	                           test eax, eax	      5209	mbyte.c	FUNCTION_110	IF_1	IF_4
0x4004dd3	            0x740c	                            je 0x4004de1	      5209	mbyte.c	FUNCTION_110	IF_1	IF_4
0x4004dd5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5210	mbyte.c	FUNCTION_110	IF_1	CALL_8
0x4004dd9	          0x4889c7	                            mov rdi, rax	      5210	mbyte.c	FUNCTION_110	IF_1	CALL_8
0x4004ddc	      0xe800000000	                          call 0x4004de1	      5210	mbyte.c	FUNCTION_110	IF_1	CALL_8
0x4004de1	    0x8b1500000000	            mov edx, dword [0x04004de7] 	      5211	mbyte.c	FUNCTION_110	IF_1
0x4004de7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5211	mbyte.c	FUNCTION_110	IF_1
0x4004dea	             0x1d0	                            add eax, edx	      5211	mbyte.c	FUNCTION_110	IF_1
0x4004dec	    0x890500000000	            mov dword [0x04004df2], eax 	      5211	mbyte.c	FUNCTION_110	IF_1
0x4004df2	    0x8b0500000000	            mov eax, dword [0x04004df8] 	      5218	mbyte.c	FUNCTION_110	IF_5
0x4004df8	            0x85c0	                           test eax, eax	      5218	mbyte.c	FUNCTION_110	IF_5
0x4004dfa	            0x7437	                            je 0x4004e33	      5218	mbyte.c	FUNCTION_110	IF_5
0x4004dfc	        0x837de801	               cmp dword [rbp - 0x18], 1	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004e00	            0x7527	                           jne 0x4004e29	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004e02	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004e06	           0xfb600	                   movzx eax, byte [rax]	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004e09	           0xfbed0	                           movsx edx, al	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004e0c	    0x8b0500000000	            mov eax, dword [0x04004e12] 	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004e12	            0x39c2	                            cmp edx, eax	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004e14	            0x7513	                           jne 0x4004e29	      5221	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004e16	    0xc70500000000	               mov dword [0x04004e20], 1	      5224	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004e20	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      5225	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004e27	            0xeb0a	                           jmp 0x4004e33	      5225	mbyte.c	FUNCTION_110	IF_5	IF_6
0x4004e29	    0xc70500000000	               mov dword [0x04004e33], 0	      5230	mbyte.c	FUNCTION_110	IF_5	ELSE_2
0x4004e33	        0x837de000	               cmp dword [rbp - 0x20], 0	      5234	mbyte.c	FUNCTION_110	IF_7
0x4004e37	            0x7411	                            je 0x4004e4a	      5234	mbyte.c	FUNCTION_110	IF_7
0x4004e39	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4004e3c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4004e40	            0x89d6	                            mov esi, edx	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4004e42	          0x4889c7	                            mov rdi, rax	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4004e45	      0xe8fcf7ffff	                call sym.im_add_to_input	      5235	mbyte.c	FUNCTION_110	CALL_9
0x4004e4a	    0x488b05000000	            mov rax, qword [0x04004e51] 	      5237	mbyte.c	FUNCTION_110	IF_8
0x4004e51	          0x4885c0	                           test rax, rax	      5237	mbyte.c	FUNCTION_110	IF_8
0x4004e54	            0x751a	                           jne 0x4004e70	      5237	mbyte.c	FUNCTION_110	IF_8
0x4004e56	        0x837de400	               cmp dword [rbp - 0x1c], 0	      5242	mbyte.c	FUNCTION_110	IF_8	IF_9
0x4004e5a	            0x750a	                           jne 0x4004e66	      5242	mbyte.c	FUNCTION_110	IF_8	IF_9
0x4004e5c	    0xc70500000000	     mov dword [0x04004e66], 0x7fffffff 	      5243	mbyte.c	FUNCTION_110	IF_8	IF_9
0x4004e66	    0xc70500000000	               mov dword [0x04004e70], 1	      5246	mbyte.c	FUNCTION_110	IF_8
0x4004e70	      0xe800000000	                          call 0x4004e75	      5249	mbyte.c	FUNCTION_110	IF_10	CALL_10
0x4004e75	            0x85c0	                           test eax, eax	      5249	mbyte.c	FUNCTION_110	IF_10	CALL_10
0x4004e77	            0x7405	                            je 0x4004e7e	      5249	mbyte.c	FUNCTION_110	IF_10	CALL_10
0x4004e79	      0xe800000000	                          call 0x4004e7e	      5250	mbyte.c	FUNCTION_110	CALL_11
0x4004e7e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5251	mbyte.c	FUNCTION_110
0x4004e82	    0x644833042528	                xor rax, qword fs:[0x28]	      5251	mbyte.c	FUNCTION_110
0x4004e8b	            0x7405	                            je 0x4004e92	      5251	mbyte.c	FUNCTION_110
0x4004e8d	      0xe800000000	                          call 0x4004e92	      5251	mbyte.c	FUNCTION_110
0x4004e92	              0xc9	                                   leave	      5251	mbyte.c	FUNCTION_110
0x4004e93	              0xc3	                                     ret	      5251	mbyte.c	FUNCTION_110
utf_ptr2len_len	CALL,0:IF,3:ELSE,1:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	43
0x4001bcd	              0x55	                                push rbp	      2115	mbyte.c	FUNCTION_47
0x4001bce	          0x4889e5	                            mov rbp, rsp	      2115	mbyte.c	FUNCTION_47
0x4001bd1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2115	mbyte.c	FUNCTION_47
0x4001bd5	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2115	mbyte.c	FUNCTION_47
0x4001bd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2120	mbyte.c	FUNCTION_47
0x4001bdc	           0xfb600	                   movzx eax, byte [rax]	      2120	mbyte.c	FUNCTION_47
0x4001bdf	           0xfb6c0	                           movzx eax, al	      2120	mbyte.c	FUNCTION_47
0x4001be2	            0x4898	                                    cdqe	      2120	mbyte.c	FUNCTION_47
0x4001be4	     0xfb680000000	                   movzx eax, byte [rax]	      2120	mbyte.c	FUNCTION_47
0x4001beb	           0xfbec0	                           movsx eax, al	      2120	mbyte.c	FUNCTION_47
0x4001bee	          0x8945fc	                mov dword [rbp - 4], eax	      2120	mbyte.c	FUNCTION_47
0x4001bf1	        0x837dfc01	                  cmp dword [rbp - 4], 1	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001bf5	            0x7507	                           jne 0x4001bfe	      2121	mbyte.c	FUNCTION_47	IF_1
0x4001bf7	      0xb801000000	                              mov eax, 1	      2122	mbyte.c	FUNCTION_47	IF_1
0x4001bfc	            0xeb54	                           jmp 0x4001c52	      2122	mbyte.c	FUNCTION_47	IF_1
0x4001bfe	          0x8b45fc	                mov eax, dword [rbp - 4]	      2123	mbyte.c	FUNCTION_47	IF_2
0x4001c01	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2123	mbyte.c	FUNCTION_47	IF_2
0x4001c04	            0x7e08	                           jle 0x4001c0e	      2123	mbyte.c	FUNCTION_47	IF_2
0x4001c06	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2124	mbyte.c	FUNCTION_47	IF_2
0x4001c09	          0x8945f8	                mov dword [rbp - 8], eax	      2124	mbyte.c	FUNCTION_47	IF_2
0x4001c0c	            0xeb06	                           jmp 0x4001c14	      2124	mbyte.c	FUNCTION_47	IF_2
0x4001c0e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2126	mbyte.c	FUNCTION_47	ELSE_1
0x4001c11	          0x8945f8	                mov dword [rbp - 8], eax	      2126	mbyte.c	FUNCTION_47	ELSE_1
0x4001c14	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001c1b	            0xeb2a	                           jmp 0x4001c47	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001c1d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001c20	          0x4863d0	                         movsxd rdx, eax	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001c23	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001c27	          0x4801d0	                            add rax, rdx	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001c2a	           0xfb600	                   movzx eax, byte [rax]	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001c2d	           0xfb6c0	                           movzx eax, al	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001c30	      0x25c0000000	                           and eax, 0xc0	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001c35	      0x3d80000000	                           cmp eax, 0x80	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001c3a	            0x7407	                            je 0x4001c43	      2128	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001c3c	      0xb801000000	                              mov eax, 1	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001c41	            0xeb0f	                           jmp 0x4001c52	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x4001c43	        0x8345f401	                add dword [rbp - 0xc], 1	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001c47	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001c4a	          0x3b45f8	                cmp eax, dword [rbp - 8]	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001c4d	            0x7cce	                            jl 0x4001c1d	      2127	mbyte.c	FUNCTION_47	FOR_1
0x4001c4f	          0x8b45fc	                mov eax, dword [rbp - 4]	      2130	mbyte.c	FUNCTION_47
0x4001c52	              0x5d	                                 pop rbp	      2131	mbyte.c	FUNCTION_47
0x4001c53	              0xc3	                                     ret	      2131	mbyte.c	FUNCTION_47
preedit_get_status	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	5
0x4005d50	              0x55	                                push rbp	      5884	mbyte.c	FUNCTION_124
0x4005d51	          0x4889e5	                            mov rbp, rsp	      5884	mbyte.c	FUNCTION_124
0x4005d54	    0x8b0500000000	            mov eax, dword [0x04005d5a] 	      5885	mbyte.c	FUNCTION_124
0x4005d5a	              0x5d	                                 pop rbp	      5886	mbyte.c	FUNCTION_124
0x4005d5b	              0xc3	                                     ret	      5886	mbyte.c	FUNCTION_124
mb_lefthalve	CALL,0:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	30
0x4003777	              0x55	                                push rbp	      4248	mbyte.c	FUNCTION_83
0x4003778	          0x4889e5	                            mov rbp, rsp	      4248	mbyte.c	FUNCTION_83
0x400377b	        0x4883ec10	                           sub rsp, 0x10	      4248	mbyte.c	FUNCTION_83
0x400377f	          0x897dfc	                mov dword [rbp - 4], edi	      4248	mbyte.c	FUNCTION_83
0x4003782	          0x8975f8	                mov dword [rbp - 8], esi	      4248	mbyte.c	FUNCTION_83
0x4003785	    0x488b05000000	            mov rax, qword [0x0400378c] 	      4253	mbyte.c	FUNCTION_83
0x400378c	    0x488b15000000	            mov rdx, qword [0x04003793] 	      4254	mbyte.c	FUNCTION_83
0x4003793	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      4254	mbyte.c	FUNCTION_83
0x4003796	          0x4863c9	                         movsxd rcx, ecx	      4254	mbyte.c	FUNCTION_83
0x4003799	        0x48c1e102	                              shl rcx, 2	      4254	mbyte.c	FUNCTION_83
0x400379d	          0x4801ca	                            add rdx, rcx	      4254	mbyte.c	FUNCTION_83
0x40037a0	            0x8b12	                    mov edx, dword [rdx]	      4254	mbyte.c	FUNCTION_83
0x40037a2	    0x8b0d00000000	            mov ecx, dword [0x040037a8] 	      4253	mbyte.c	FUNCTION_83
0x40037a8	             0x1d1	                            add ecx, edx	      4253	mbyte.c	FUNCTION_83
0x40037aa	    0x488b15000000	            mov rdx, qword [0x040037b1] 	      4253	mbyte.c	FUNCTION_83
0x40037b1	          0x8b75fc	                mov esi, dword [rbp - 4]	      4253	mbyte.c	FUNCTION_83
0x40037b4	          0x4863f6	                         movsxd rsi, esi	      4253	mbyte.c	FUNCTION_83
0x40037b7	        0x48c1e602	                              shl rsi, 2	      4253	mbyte.c	FUNCTION_83
0x40037bb	          0x4801f2	                            add rdx, rsi	      4253	mbyte.c	FUNCTION_83
0x40037be	            0x8b32	                    mov esi, dword [rdx]	      4253	mbyte.c	FUNCTION_83
0x40037c0	          0x8b55f8	                mov edx, dword [rbp - 8]	      4253	mbyte.c	FUNCTION_83
0x40037c3	             0x1f2	                            add edx, esi	      4253	mbyte.c	FUNCTION_83
0x40037c5	            0x89ce	                            mov esi, ecx	      4253	mbyte.c	FUNCTION_83
0x40037c7	            0x89d7	                            mov edi, edx	      4253	mbyte.c	FUNCTION_83
0x40037c9	            0xffd0	                                call rax	      4253	mbyte.c	FUNCTION_83
0x40037cb	          0x83f801	                              cmp eax, 1	      4254	mbyte.c	FUNCTION_83
0x40037ce	           0xf9fc0	                                 setg al	      4254	mbyte.c	FUNCTION_83
0x40037d1	           0xfb6c0	                           movzx eax, al	      4253	mbyte.c	FUNCTION_83
0x40037d4	              0xc9	                                   leave	      4255	mbyte.c	FUNCTION_83
0x40037d5	              0xc3	                                     ret	      4255	mbyte.c	FUNCTION_83
intable	CALL,0:IF,3:ELSE,2:DO,0:WHILE,1:functions,0:SWITCH,0:FOR,0	65
0x4000d2d	              0x55	                                push rbp	      1188	mbyte.c	FUNCTION_18
0x4000d2e	          0x4889e5	                            mov rbp, rsp	      1188	mbyte.c	FUNCTION_18
0x4000d31	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1188	mbyte.c	FUNCTION_18
0x4000d35	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1188	mbyte.c	FUNCTION_18
0x4000d39	          0x8955dc	             mov dword [rbp - 0x24], edx	      1188	mbyte.c	FUNCTION_18
0x4000d3c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4000d3f	          0x4863d0	                         movsxd rdx, eax	      1192	mbyte.c	FUNCTION_18	IF_1
0x4000d42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4000d46	          0x488b00	                    mov rax, qword [rax]	      1192	mbyte.c	FUNCTION_18	IF_1
0x4000d49	          0x4839c2	                            cmp rdx, rax	      1192	mbyte.c	FUNCTION_18	IF_1
0x4000d4c	            0x7d0a	                           jge 0x4000d58	      1192	mbyte.c	FUNCTION_18	IF_1
0x4000d4e	      0xb800000000	                              mov eax, 0	      1193	mbyte.c	FUNCTION_18	IF_1
0x4000d53	      0xe996000000	                           jmp 0x4000dee	      1193	mbyte.c	FUNCTION_18	IF_1
0x4000d58	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1196	mbyte.c	FUNCTION_18
0x4000d5f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1197	mbyte.c	FUNCTION_18
0x4000d63	        0x48c1e804	                              shr rax, 4	      1197	mbyte.c	FUNCTION_18
0x4000d67	          0x83e801	                              sub eax, 1	      1197	mbyte.c	FUNCTION_18
0x4000d6a	          0x8945f8	                mov dword [rbp - 8], eax	      1197	mbyte.c	FUNCTION_18
0x4000d6d	            0xeb72	                           jmp 0x4000de1	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4000d6f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4000d72	          0x8b45f8	                mov eax, dword [rbp - 8]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4000d75	             0x1d0	                            add eax, edx	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4000d77	            0x89c2	                            mov edx, eax	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4000d79	          0xc1ea1f	                           shr edx, 0x1f	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4000d7c	             0x1d0	                            add eax, edx	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4000d7e	            0xd1f8	                              sar eax, 1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4000d80	          0x8945fc	                mov dword [rbp - 4], eax	      1200	mbyte.c	FUNCTION_18	WHILE_1
0x4000d83	          0x8b45fc	                mov eax, dword [rbp - 4]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000d86	            0x4898	                                    cdqe	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000d88	        0x48c1e004	                              shl rax, 4	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000d8c	          0x4889c2	                            mov rdx, rax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000d8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000d93	          0x4801d0	                            add rax, rdx	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000d96	        0x488b5008	                mov rdx, qword [rax + 8]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000d9a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000d9d	            0x4898	                                    cdqe	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000d9f	          0x4839c2	                            cmp rdx, rax	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000da2	            0x7d0b	                           jge 0x4000daf	      1201	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000da4	          0x8b45fc	                mov eax, dword [rbp - 4]	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000da7	          0x83c001	                              add eax, 1	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000daa	          0x8945f4	              mov dword [rbp - 0xc], eax	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000dad	            0xeb32	                           jmp 0x4000de1	      1202	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0x4000daf	          0x8b45fc	                mov eax, dword [rbp - 4]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000db2	            0x4898	                                    cdqe	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000db4	        0x48c1e004	                              shl rax, 4	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000db8	          0x4889c2	                            mov rdx, rax	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dbf	          0x4801d0	                            add rax, rdx	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dc2	          0x488b10	                    mov rdx, qword [rax]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dc5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dc8	            0x4898	                                    cdqe	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dca	          0x4839c2	                            cmp rdx, rax	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dcd	            0x7e0b	                           jle 0x4000dda	      1203	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dcf	          0x8b45fc	                mov eax, dword [rbp - 4]	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dd2	          0x83e801	                              sub eax, 1	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dd5	          0x8945f8	                mov dword [rbp - 8], eax	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dd8	            0xeb07	                           jmp 0x4000de1	      1204	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0x4000dda	      0xb801000000	                              mov eax, 1	      1206	mbyte.c	FUNCTION_18	WHILE_1	ELSE_2
0x4000ddf	            0xeb0d	                           jmp 0x4000dee	      1206	mbyte.c	FUNCTION_18	WHILE_1	ELSE_2
0x4000de1	          0x8b45f8	                mov eax, dword [rbp - 8]	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4000de4	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4000de7	            0x7d86	                           jge 0x4000d6f	      1198	mbyte.c	FUNCTION_18	WHILE_1
0x4000de9	      0xb800000000	                              mov eax, 0	      1208	mbyte.c	FUNCTION_18	ELSE_2
0x4000dee	              0x5d	                                 pop rbp	      1209	mbyte.c	FUNCTION_18	ELSE_2
0x4000def	              0xc3	                                     ret	      1209	mbyte.c	FUNCTION_18	ELSE_2
utf_uint2cells	CALL,2:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	18
0x4000df0	              0x55	                                push rbp	      1402	mbyte.c	ELSE_2	FUNCTION_19
0x4000df1	          0x4889e5	                            mov rbp, rsp	      1402	mbyte.c	ELSE_2	FUNCTION_19
0x4000df4	        0x4883ec10	                           sub rsp, 0x10	      1402	mbyte.c	ELSE_2	FUNCTION_19
0x4000df8	          0x897dfc	                mov dword [rbp - 4], edi	      1402	mbyte.c	ELSE_2	FUNCTION_19
0x4000dfb	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x4000e02	            0x7615	                           jbe 0x4000e19	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x4000e04	          0x8b45fc	                mov eax, dword [rbp - 4]	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x4000e07	            0x89c7	                            mov edi, eax	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x4000e09	      0xe800000000	                          call 0x4000e0e	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x4000e0e	            0x85c0	                           test eax, eax	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x4000e10	            0x7407	                            je 0x4000e19	      1403	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0x4000e12	      0xb800000000	                              mov eax, 0	      1404	mbyte.c	ELSE_2	FUNCTION_19	IF_1
0x4000e17	            0xeb0a	                           jmp 0x4000e23	      1404	mbyte.c	ELSE_2	FUNCTION_19	IF_1
0x4000e19	          0x8b45fc	                mov eax, dword [rbp - 4]	      1405	mbyte.c	ELSE_2	FUNCTION_19	CALL_2
0x4000e1c	            0x89c7	                            mov edi, eax	      1405	mbyte.c	ELSE_2	FUNCTION_19	CALL_2
0x4000e1e	      0xe800000000	                          call 0x4000e23	      1405	mbyte.c	ELSE_2	FUNCTION_19	CALL_2
0x4000e23	              0xc9	                                   leave	      1406	mbyte.c	ELSE_2	FUNCTION_19
0x4000e24	              0xc3	                                     ret	      1406	mbyte.c	ELSE_2	FUNCTION_19
remove_bom	CALL,2:IF,2:ELSE,1:DO,0:WHILE,1:functions,0:SWITCH,0:FOR,0	43
0x4000829	              0x55	                                push rbp	       854	mbyte.c	FUNCTION_6
0x400082a	          0x4889e5	                            mov rbp, rsp	       854	mbyte.c	FUNCTION_6
0x400082d	        0x4883ec20	                           sub rsp, 0x20	       854	mbyte.c	FUNCTION_6
0x4000831	        0x48897de8	             mov qword [rbp - 0x18], rdi	       854	mbyte.c	FUNCTION_6
0x4000835	    0x8b0500000000	            mov eax, dword [0x0400083b] 	       855	mbyte.c	FUNCTION_6	IF_1
0x400083b	            0x85c0	                           test eax, eax	       855	mbyte.c	FUNCTION_6	IF_1
0x400083d	            0x7476	                            je 0x40008b5	       855	mbyte.c	FUNCTION_6	IF_1
0x400083f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       857	mbyte.c	FUNCTION_6	IF_1
0x4000843	        0x488945f8	                mov qword [rbp - 8], rax	       857	mbyte.c	FUNCTION_6	IF_1
0x4000847	            0xeb50	                           jmp 0x4000899	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x4000849	        0x488b45f8	                mov rax, qword [rbp - 8]	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x400084d	        0x4883c001	                              add rax, 1	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000851	           0xfb600	                   movzx eax, byte [rax]	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000854	            0x3cbb	                            cmp al, 0xbb	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000856	            0x753c	                           jne 0x4000894	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000858	        0x488b45f8	                mov rax, qword [rbp - 8]	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x400085c	        0x4883c002	                              add rax, 2	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000860	           0xfb600	                   movzx eax, byte [rax]	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000863	            0x3cbf	                            cmp al, 0xbf	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000865	            0x752d	                           jne 0x4000894	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000867	        0x488b45f8	                mov rax, qword [rbp - 8]	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x400086b	        0x4883c003	                              add rax, 3	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x400086f	          0x4889c7	                            mov rdi, rax	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000872	      0xe800000000	                          call 0x4000877	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000877	        0x488d5001	                      lea rdx, [rax + 1]	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x400087b	        0x488b45f8	                mov rax, qword [rbp - 8]	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x400087f	        0x488d4803	                      lea rcx, [rax + 3]	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000883	        0x488b45f8	                mov rax, qword [rbp - 8]	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000887	          0x4889ce	                            mov rsi, rcx	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x400088a	          0x4889c7	                            mov rdi, rax	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x400088d	      0xe800000000	                          call 0x4000892	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000892	            0xeb05	                           jmp 0x4000899	       862	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000894	      0x488345f801	                  add qword [rbp - 8], 1	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	ELSE_1
0x4000899	        0x488b45f8	                mov rax, qword [rbp - 8]	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x400089d	      0xbeef000000	                           mov esi, 0xef	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x40008a2	          0x4889c7	                            mov rdi, rax	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x40008a5	      0xe800000000	                          call 0x40008aa	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x40008aa	        0x488945f8	                mov qword [rbp - 8], rax	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x40008ae	      0x48837df800	                  cmp qword [rbp - 8], 0	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x40008b3	            0x7594	                           jne 0x4000849	       859	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x40008b5	              0x90	                                     nop	       867	mbyte.c	FUNCTION_6	ELSE_1
0x40008b6	              0xc9	                                   leave	       867	mbyte.c	FUNCTION_6	ELSE_1
0x40008b7	              0xc3	                                     ret	       867	mbyte.c	FUNCTION_6	ELSE_1
latin_off2cells	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	7
0x4001173	              0x55	                                push rbp	      1739	mbyte.c	FUNCTION_30
0x4001174	          0x4889e5	                            mov rbp, rsp	      1739	mbyte.c	FUNCTION_30
0x4001177	          0x897dfc	                mov dword [rbp - 4], edi	      1739	mbyte.c	FUNCTION_30
0x400117a	          0x8975f8	                mov dword [rbp - 8], esi	      1739	mbyte.c	FUNCTION_30
0x400117d	      0xb801000000	                              mov eax, 1	      1740	mbyte.c	FUNCTION_30
0x4001182	              0x5d	                                 pop rbp	      1741	mbyte.c	FUNCTION_30
0x4001183	              0xc3	                                     ret	      1741	mbyte.c	FUNCTION_30
convert_setup_ext	CALL,9:IF,15:ELSE,11:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	148
0x4005da0	              0x55	                                push rbp	      6545	mbyte.c	FUNCTION_141
0x4005da1	          0x4889e5	                            mov rbp, rsp	      6545	mbyte.c	FUNCTION_141
0x4005da4	        0x4883ec30	                           sub rsp, 0x30	      6545	mbyte.c	FUNCTION_141
0x4005da8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6545	mbyte.c	FUNCTION_141
0x4005dac	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6545	mbyte.c	FUNCTION_141
0x4005db0	          0x8955dc	             mov dword [rbp - 0x24], edx	      6545	mbyte.c	FUNCTION_141
0x4005db3	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      6545	mbyte.c	FUNCTION_141
0x4005db7	        0x448945d8	             mov dword [rbp - 0x28], r8d	      6545	mbyte.c	FUNCTION_141
0x4005dbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6553	mbyte.c	FUNCTION_141	IF_1
0x4005dbf	            0x8b00	                    mov eax, dword [rax]	      6553	mbyte.c	FUNCTION_141	IF_1
0x4005dc1	          0x83f805	                              cmp eax, 5	      6553	mbyte.c	FUNCTION_141	IF_1
0x4005dc4	            0x751e	                           jne 0x4005de4	      6553	mbyte.c	FUNCTION_141	IF_1
0x4005dc6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6553	mbyte.c	FUNCTION_141	IF_1
0x4005dca	        0x488b4008	                mov rax, qword [rax + 8]	      6553	mbyte.c	FUNCTION_141	IF_1
0x4005dce	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      6553	mbyte.c	FUNCTION_141	IF_1
0x4005dd2	            0x7410	                            je 0x4005de4	      6553	mbyte.c	FUNCTION_141	IF_1
0x4005dd4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6554	mbyte.c	FUNCTION_141	CALL_1
0x4005dd8	        0x488b4008	                mov rax, qword [rax + 8]	      6554	mbyte.c	FUNCTION_141	CALL_1
0x4005ddc	          0x4889c7	                            mov rdi, rax	      6554	mbyte.c	FUNCTION_141	CALL_1
0x4005ddf	      0xe800000000	                          call 0x4005de4	      6554	mbyte.c	FUNCTION_141	CALL_1
0x4005de4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6556	mbyte.c	FUNCTION_141
0x4005de8	    0xc70000000000	                      mov dword [rax], 0	      6556	mbyte.c	FUNCTION_141
0x4005dee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6557	mbyte.c	FUNCTION_141
0x4005df2	    0xc74004010000	                  mov dword [rax + 4], 1	      6557	mbyte.c	FUNCTION_141
0x4005df9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6558	mbyte.c	FUNCTION_141
0x4005dfd	    0xc74010000000	               mov dword [rax + 0x10], 0	      6558	mbyte.c	FUNCTION_141
0x4005e04	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e09	            0x7434	                            je 0x4005e3f	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e0b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e0f	           0xfb600	                   movzx eax, byte [rax]	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e12	            0x84c0	                             test al, al	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e14	            0x7429	                            je 0x4005e3f	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e16	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e1b	            0x7422	                            je 0x4005e3f	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e1d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e21	           0xfb600	                   movzx eax, byte [rax]	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e24	            0x84c0	                             test al, al	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e26	            0x7417	                            je 0x4005e3f	      6561	mbyte.c	FUNCTION_141	IF_2
0x4005e28	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x4005e2c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x4005e30	          0x4889d6	                            mov rsi, rdx	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x4005e33	          0x4889c7	                            mov rdi, rax	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x4005e36	      0xe800000000	                          call 0x4005e3b	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x4005e3b	            0x85c0	                           test eax, eax	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x4005e3d	            0x750a	                           jne 0x4005e49	      6562	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x4005e3f	      0xb801000000	                              mov eax, 1	      6563	mbyte.c	FUNCTION_141	IF_2
0x4005e44	      0xe95f010000	                           jmp 0x4005fa8	      6563	mbyte.c	FUNCTION_141	IF_2
0x4005e49	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6565	mbyte.c	FUNCTION_141	CALL_3
0x4005e4d	          0x4889c7	                            mov rdi, rax	      6565	mbyte.c	FUNCTION_141	CALL_3
0x4005e50	      0xe800000000	                          call 0x4005e55	      6565	mbyte.c	FUNCTION_141	CALL_3
0x4005e55	          0x8945f8	                mov dword [rbp - 8], eax	      6565	mbyte.c	FUNCTION_141	CALL_3
0x4005e58	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6566	mbyte.c	FUNCTION_141	CALL_4
0x4005e5c	          0x4889c7	                            mov rdi, rax	      6566	mbyte.c	FUNCTION_141	CALL_4
0x4005e5f	      0xe800000000	                          call 0x4005e64	      6566	mbyte.c	FUNCTION_141	CALL_4
0x4005e64	          0x8945fc	                mov dword [rbp - 4], eax	      6566	mbyte.c	FUNCTION_141	CALL_4
0x4005e67	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      6567	mbyte.c	FUNCTION_141	IF_3
0x4005e6b	            0x740b	                            je 0x4005e78	      6567	mbyte.c	FUNCTION_141	IF_3
0x4005e6d	          0x8b45f8	                mov eax, dword [rbp - 8]	      6568	mbyte.c	FUNCTION_141	IF_3
0x4005e70	          0x83e004	                              and eax, 4	      6568	mbyte.c	FUNCTION_141	IF_3
0x4005e73	          0x8945f0	             mov dword [rbp - 0x10], eax	      6568	mbyte.c	FUNCTION_141	IF_3
0x4005e76	            0xeb0d	                           jmp 0x4005e85	      6568	mbyte.c	FUNCTION_141	IF_3
0x4005e78	        0x837df804	                  cmp dword [rbp - 8], 4	      6570	mbyte.c	FUNCTION_141	ELSE_1
0x4005e7c	           0xf94c0	                                 sete al	      6570	mbyte.c	FUNCTION_141	ELSE_1
0x4005e7f	           0xfb6c0	                           movzx eax, al	      6570	mbyte.c	FUNCTION_141	ELSE_1
0x4005e82	          0x8945f0	             mov dword [rbp - 0x10], eax	      6570	mbyte.c	FUNCTION_141	ELSE_1
0x4005e85	        0x837dd800	               cmp dword [rbp - 0x28], 0	      6571	mbyte.c	FUNCTION_141	IF_4
0x4005e89	            0x740b	                            je 0x4005e96	      6571	mbyte.c	FUNCTION_141	IF_4
0x4005e8b	          0x8b45fc	                mov eax, dword [rbp - 4]	      6572	mbyte.c	FUNCTION_141	IF_4
0x4005e8e	          0x83e004	                              and eax, 4	      6572	mbyte.c	FUNCTION_141	IF_4
0x4005e91	          0x8945f4	              mov dword [rbp - 0xc], eax	      6572	mbyte.c	FUNCTION_141	IF_4
0x4005e94	            0xeb0d	                           jmp 0x4005ea3	      6572	mbyte.c	FUNCTION_141	IF_4
0x4005e96	        0x837dfc04	                  cmp dword [rbp - 4], 4	      6574	mbyte.c	FUNCTION_141	ELSE_2
0x4005e9a	           0xf94c0	                                 sete al	      6574	mbyte.c	FUNCTION_141	ELSE_2
0x4005e9d	           0xfb6c0	                           movzx eax, al	      6574	mbyte.c	FUNCTION_141	ELSE_2
0x4005ea0	          0x8945f4	              mov dword [rbp - 0xc], eax	      6574	mbyte.c	FUNCTION_141	ELSE_2
0x4005ea3	          0x8b45f8	                mov eax, dword [rbp - 8]	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4005ea6	      0x2500020000	                          and eax, 0x200	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4005eab	            0x85c0	                           test eax, eax	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4005ead	            0x7420	                            je 0x4005ecf	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4005eaf	        0x837df400	                cmp dword [rbp - 0xc], 0	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4005eb3	            0x741a	                            je 0x4005ecf	      6576	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4005eb5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6579	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4005eb9	    0xc70001000000	                      mov dword [rax], 1	      6579	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4005ebf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6580	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4005ec3	    0xc74004020000	                  mov dword [rax + 4], 2	      6580	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4005eca	      0xe9c3000000	                           jmp 0x4005f92	      6580	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4005ecf	          0x8b45f8	                mov eax, dword [rbp - 8]	      6582	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4005ed2	      0x2500040000	                          and eax, 0x400	      6582	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4005ed7	            0x85c0	                           test eax, eax	      6582	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4005ed9	            0x7420	                            je 0x4005efb	      6582	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4005edb	        0x837df400	                cmp dword [rbp - 0xc], 0	      6582	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4005edf	            0x741a	                            je 0x4005efb	      6582	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4005ee1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6585	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4005ee5	    0xc70002000000	                      mov dword [rax], 2	      6585	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4005eeb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6586	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4005eef	    0xc74004030000	                  mov dword [rax + 4], 3	      6586	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4005ef6	      0xe997000000	                           jmp 0x4005f92	      6586	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4005efb	        0x837df000	               cmp dword [rbp - 0x10], 0	      6588	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4005eff	            0x7418	                            je 0x4005f19	      6588	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4005f01	          0x8b45fc	                mov eax, dword [rbp - 4]	      6588	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4005f04	      0x2500020000	                          and eax, 0x200	      6588	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4005f09	            0x85c0	                           test eax, eax	      6588	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4005f0b	            0x740c	                            je 0x4005f19	      6588	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4005f0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6591	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4005f11	    0xc70003000000	                      mov dword [rax], 3	      6591	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4005f17	            0xeb79	                           jmp 0x4005f92	      6591	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4005f19	        0x837df000	               cmp dword [rbp - 0x10], 0	      6593	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x4005f1d	            0x7418	                            je 0x4005f37	      6593	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x4005f1f	          0x8b45fc	                mov eax, dword [rbp - 4]	      6593	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x4005f22	      0x2500040000	                          and eax, 0x400	      6593	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x4005f27	            0x85c0	                           test eax, eax	      6593	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x4005f29	            0x740c	                            je 0x4005f37	      6593	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x4005f2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6596	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x4005f2f	    0xc70004000000	                      mov dword [rax], 4	      6596	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x4005f35	            0xeb5b	                           jmp 0x4005f92	      6596	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x4005f37	        0x837df000	               cmp dword [rbp - 0x10], 0	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f3b	            0x7506	                           jne 0x4005f43	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f3d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f41	            0xeb05	                           jmp 0x4005f48	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f43	      0xba00000000	                              mov edx, 0	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f48	        0x837df400	                cmp dword [rbp - 0xc], 0	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f4c	            0x7506	                           jne 0x4005f54	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f4e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f52	            0xeb05	                           jmp 0x4005f59	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f54	      0xb800000000	                              mov eax, 0	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f59	          0x4889d6	                            mov rsi, rdx	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f5c	          0x4889c7	                            mov rdi, rax	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f5f	      0xe800000000	                          call 0x4005f64	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f64	          0x4889c2	                            mov rdx, rax	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f6b	        0x48895008	                mov qword [rax + 8], rdx	      6632	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x4005f6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6635	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4005f73	        0x488b4008	                mov rax, qword [rax + 8]	      6635	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4005f77	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      6635	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4005f7b	            0x7415	                            je 0x4005f92	      6635	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4005f7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6637	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4005f81	    0xc70005000000	                      mov dword [rax], 5	      6637	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4005f87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6638	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4005f8b	    0xc74004040000	                  mov dword [rax + 4], 4	      6638	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4005f92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6642	mbyte.c	FUNCTION_141	IF_15
0x4005f96	            0x8b00	                    mov eax, dword [rax]	      6642	mbyte.c	FUNCTION_141	IF_15
0x4005f98	            0x85c0	                           test eax, eax	      6642	mbyte.c	FUNCTION_141	IF_15
0x4005f9a	            0x7507	                           jne 0x4005fa3	      6642	mbyte.c	FUNCTION_141	IF_15
0x4005f9c	      0xb800000000	                              mov eax, 0	      6643	mbyte.c	FUNCTION_141	IF_15
0x4005fa1	            0xeb05	                           jmp 0x4005fa8	      6643	mbyte.c	FUNCTION_141	IF_15
0x4005fa3	      0xb801000000	                              mov eax, 1	      6645	mbyte.c	FUNCTION_141
0x4005fa8	              0xc9	                                   leave	      6646	mbyte.c	FUNCTION_141
0x4005fa9	              0xc3	                                     ret	      6646	mbyte.c	FUNCTION_141
mb_init	CALL,32:IF,28:ELSE,19:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,2	302
0x4000127	              0x55	                                push rbp	       516	mbyte.c	FUNCTION_4
0x4000128	          0x4889e5	                            mov rbp, rsp	       516	mbyte.c	FUNCTION_4
0x400012b	        0x4883ec60	                           sub rsp, 0x60	       516	mbyte.c	FUNCTION_4
0x400012f	    0x64488b042528	                mov rax, qword fs:[0x28]	       516	mbyte.c	FUNCTION_4
0x4000138	        0x488945f8	                mov qword [rbp - 8], rax	       516	mbyte.c	FUNCTION_4
0x400013c	            0x31c0	                            xor eax, eax	       516	mbyte.c	FUNCTION_4
0x400013e	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       520	mbyte.c	FUNCTION_4
0x4000145	    0x488b05000000	            mov rax, qword [0x0400014c] 	       528	mbyte.c	FUNCTION_4	IF_1
0x400014c	          0x4885c0	                           test rax, rax	       528	mbyte.c	FUNCTION_4	IF_1
0x400014f	            0x754a	                           jne 0x400019b	       528	mbyte.c	FUNCTION_4	IF_1
0x4000151	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x4000158	            0xeb10	                           jmp 0x400016a	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x400015a	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       532	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x400015d	            0x4898	                                    cdqe	       532	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x400015f	    0xc68000000000	                       mov byte [rax], 1	       532	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x4000166	        0x8345a801	               add dword [rbp - 0x58], 1	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x400016a	    0x817da8ff0000	           cmp dword [rbp - 0x58], 0xff 	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x4000171	            0x7ee7	                           jle 0x400015a	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x4000173	    0xc70500000000	               mov dword [0x0400017d], 0	       533	mbyte.c	FUNCTION_4	IF_1
0x400017d	    0xc70500000000	               mov dword [0x04000187], 1	       534	mbyte.c	FUNCTION_4	IF_1
0x4000187	    0xc70500000000	               mov dword [0x04000191], 0	       535	mbyte.c	FUNCTION_4	IF_1
0x4000191	      0xb800000000	                              mov eax, 0	       536	mbyte.c	FUNCTION_4	IF_1
0x4000196	      0xe94f050000	                           jmp 0x40006ea	       536	mbyte.c	FUNCTION_4	IF_1
0x400019b	    0x488b05000000	            mov rax, qword [0x040001a2] 	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x40001a2	      0xba05000000	                              mov edx, 5	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x40001a7	      0xbe00000000	                              mov esi, 0	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x40001ac	          0x4889c7	                            mov rdi, rax	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x40001af	      0xe800000000	                          call 0x40001b4	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x40001b4	            0x85c0	                           test eax, eax	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x40001b6	            0x741d	                            je 0x40001d5	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x40001b8	    0x488b05000000	            mov rax, qword [0x040001bf] 	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x40001bf	      0xba09000000	                              mov edx, 9	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x40001c4	      0xbe00000000	                              mov esi, 0	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x40001c9	          0x4889c7	                            mov rdi, rax	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x40001cc	      0xe800000000	                          call 0x40001d1	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x40001d1	            0x85c0	                           test eax, eax	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x40001d3	            0x7519	                           jne 0x40001ee	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x40001d5	    0xc70500000000	               mov dword [0x040001df], 0	       573	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x40001df	    0xc70500000000	               mov dword [0x040001e9], 0	       574	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x40001e9	      0xe9e9000000	                           jmp 0x40002d7	       574	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x40001ee	    0x488b05000000	            mov rax, qword [0x040001f5] 	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x40001f5	      0xba06000000	                              mov edx, 6	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x40001fa	      0xbe00000000	                              mov esi, 0	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x40001ff	          0x4889c7	                            mov rdi, rax	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4000202	      0xe800000000	                          call 0x4000207	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4000207	            0x85c0	                           test eax, eax	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x4000209	            0x750c	                           jne 0x4000217	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x400020b	    0xc745b0010000	               mov dword [rbp - 0x50], 1	       585	mbyte.c	FUNCTION_4	ELSE_5	IF_8
0x4000212	      0xe9c0000000	                           jmp 0x40002d7	       585	mbyte.c	FUNCTION_4	ELSE_5	IF_8
0x4000217	    0x488b05000000	            mov rax, qword [0x0400021e] 	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x400021e	          0x4889c7	                            mov rdi, rax	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x4000221	      0xe81afeffff	               call sym.enc_canon_search	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x4000226	          0x8945b4	             mov dword [rbp - 0x4c], eax	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x4000229	        0x837db400	               cmp dword [rbp - 0x4c], 0	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x400022d	     0xf889a000000	                            js 0x40002cd	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x4000233	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4000236	            0x4898	                                    cdqe	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4000238	        0x48c1e004	                              shl rax, 4	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x400023c	    0x480500000000	                              add rax, 0	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4000242	            0x8b00	                    mov eax, dword [rax]	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4000244	          0x8945a8	             mov dword [rbp - 0x58], eax	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x4000247	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x400024a	          0x83e004	                              and eax, 4	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x400024d	            0x85c0	                           test eax, eax	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x400024f	            0x7446	                            je 0x4000297	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x4000251	    0xc70500000000	               mov dword [0x0400025b], 1	       594	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x400025b	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x400025e	      0x2540010000	                          and eax, 0x140	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4000263	            0x85c0	                           test eax, eax	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4000265	            0x740c	                            je 0x4000273	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4000267	    0xc70500000000	               mov dword [0x04000271], 2	       596	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4000271	            0xeb64	                           jmp 0x40002d7	       596	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x4000273	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       597	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4000276	      0x2580000000	                           and eax, 0x80	       597	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x400027b	            0x85c0	                           test eax, eax	       597	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x400027d	            0x740c	                            je 0x400028b	       597	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x400027f	    0xc70500000000	               mov dword [0x04000289], 4	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x4000289	            0xeb4c	                           jmp 0x40002d7	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x400028b	    0xc70500000000	               mov dword [0x04000295], 0	       600	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_8
0x4000295	            0xeb40	                           jmp 0x40002d7	       600	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_8
0x4000297	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x400029a	          0x83e002	                              and eax, 2	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x400029d	            0x85c0	                           test eax, eax	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x400029f	            0x7416	                            je 0x40002b7	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x40002a1	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x40002a4	            0x4898	                                    cdqe	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x40002a6	        0x48c1e004	                              shl rax, 4	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x40002aa	    0x480500000000	                              add rax, 0	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x40002b0	            0x8b00	                    mov eax, dword [rax]	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x40002b2	          0x8945b0	             mov dword [rbp - 0x50], eax	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x40002b5	            0xeb20	                           jmp 0x40002d7	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x40002b7	    0xc70500000000	               mov dword [0x040002c1], 0	       610	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_10
0x40002c1	    0xc70500000000	               mov dword [0x040002cb], 0	       611	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_10
0x40002cb	            0xeb0a	                           jmp 0x40002d7	       611	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_10
0x40002cd	      0xb800000000	                              mov eax, 0	       615	mbyte.c	FUNCTION_4	ELSE_11
0x40002d2	      0xe913040000	                           jmp 0x40006ea	       615	mbyte.c	FUNCTION_4	ELSE_11
0x40002d7	        0x837db000	               cmp dword [rbp - 0x50], 0	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x40002db	            0x7414	                            je 0x40002f1	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x40002dd	    0xc70500000000	               mov dword [0x040002e7], 0	       624	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x40002e7	    0xc70500000000	               mov dword [0x040002f1], 0	       625	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x40002f1	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       627	mbyte.c	FUNCTION_4
0x40002f4	    0x890500000000	            mov dword [0x040002fa], eax 	       627	mbyte.c	FUNCTION_4
0x40002fa	    0x8b0500000000	            mov eax, dword [0x04000300] 	       628	mbyte.c	FUNCTION_4
0x4000300	            0x85c0	                           test eax, eax	       628	mbyte.c	FUNCTION_4
0x4000302	            0x750a	                           jne 0x400030e	       628	mbyte.c	FUNCTION_4
0x4000304	    0x8b0500000000	            mov eax, dword [0x0400030a] 	       628	mbyte.c	FUNCTION_4
0x400030a	            0x85c0	                           test eax, eax	       628	mbyte.c	FUNCTION_4
0x400030c	            0x7407	                            je 0x4000315	       628	mbyte.c	FUNCTION_4
0x400030e	      0xb801000000	                              mov eax, 1	       628	mbyte.c	FUNCTION_4
0x4000313	            0xeb05	                           jmp 0x400031a	       628	mbyte.c	FUNCTION_4
0x4000315	      0xb800000000	                              mov eax, 0	       628	mbyte.c	FUNCTION_4
0x400031a	    0x890500000000	            mov dword [0x04000320], eax 	       628	mbyte.c	FUNCTION_4
0x4000320	    0x8b0500000000	            mov eax, dword [0x04000326] 	       636	mbyte.c	FUNCTION_4	CALL_15
0x4000326	            0x85c0	                           test eax, eax	       637	mbyte.c	FUNCTION_4	CALL_16
0x4000328	            0x7530	                           jne 0x400035a	       637	mbyte.c	FUNCTION_4	CALL_16
0x400032a	    0x488b05000000	            mov rax, qword [0x04000331] 	       636	mbyte.c	FUNCTION_4	CALL_15
0x4000331	      0xbe00000000	                              mov esi, 0	       636	mbyte.c	FUNCTION_4	CALL_15
0x4000336	          0x4889c7	                            mov rdi, rax	       636	mbyte.c	FUNCTION_4	CALL_15
0x4000339	      0xe800000000	                          call 0x400033e	       636	mbyte.c	FUNCTION_4	CALL_15
0x400033e	            0x85c0	                           test eax, eax	       636	mbyte.c	FUNCTION_4	CALL_15
0x4000340	            0x7418	                            je 0x400035a	       636	mbyte.c	FUNCTION_4	CALL_15
0x4000342	    0x488b05000000	            mov rax, qword [0x04000349] 	       637	mbyte.c	FUNCTION_4	CALL_16
0x4000349	      0xbe00000000	                              mov esi, 0	       637	mbyte.c	FUNCTION_4	CALL_16
0x400034e	          0x4889c7	                            mov rdi, rax	       637	mbyte.c	FUNCTION_4	CALL_16
0x4000351	      0xe800000000	                          call 0x4000356	       637	mbyte.c	FUNCTION_4	CALL_16
0x4000356	            0x85c0	                           test eax, eax	       637	mbyte.c	FUNCTION_4	CALL_16
0x4000358	            0x7507	                           jne 0x4000361	       637	mbyte.c	FUNCTION_4	CALL_16
0x400035a	      0xb801000000	                              mov eax, 1	       637	mbyte.c	FUNCTION_4	CALL_16
0x400035f	            0xeb05	                           jmp 0x4000366	       637	mbyte.c	FUNCTION_4	CALL_16
0x4000361	      0xb800000000	                              mov eax, 0	       637	mbyte.c	FUNCTION_4	CALL_16
0x4000366	    0x890500000000	            mov dword [0x0400036c], eax 	       636	mbyte.c	FUNCTION_4	CALL_15
0x400036c	    0x8b0500000000	            mov eax, dword [0x04000372] 	       642	mbyte.c	FUNCTION_4	IF_17
0x4000372	            0x85c0	                           test eax, eax	       642	mbyte.c	FUNCTION_4	IF_17
0x4000374	            0x7473	                            je 0x40003e9	       642	mbyte.c	FUNCTION_4	IF_17
0x4000376	    0x48c705000000	               mov qword [0x04000381], 0	       644	mbyte.c	FUNCTION_4	IF_17
0x4000381	    0x48c705000000	               mov qword [0x0400038c], 0	       645	mbyte.c	FUNCTION_4	IF_17
0x400038c	    0x48c705000000	               mov qword [0x04000397], 0	       646	mbyte.c	FUNCTION_4	IF_17
0x4000397	    0x48c705000000	               mov qword [0x040003a2], 0	       647	mbyte.c	FUNCTION_4	IF_17
0x40003a2	    0x48c705000000	               mov qword [0x040003ad], 0	       648	mbyte.c	FUNCTION_4	IF_17
0x40003ad	    0x48c705000000	               mov qword [0x040003b8], 0	       649	mbyte.c	FUNCTION_4	IF_17
0x40003b8	    0x48c705000000	               mov qword [0x040003c3], 0	       650	mbyte.c	FUNCTION_4	IF_17
0x40003c3	    0x48c705000000	               mov qword [0x040003ce], 0	       651	mbyte.c	FUNCTION_4	IF_17
0x40003ce	    0x48c705000000	               mov qword [0x040003d9], 0	       652	mbyte.c	FUNCTION_4	IF_17
0x40003d9	    0x48c705000000	               mov qword [0x040003e4], 0	       653	mbyte.c	FUNCTION_4	IF_17
0x40003e4	      0xe9e8000000	                           jmp 0x40004d1	       653	mbyte.c	FUNCTION_4	IF_17
0x40003e9	    0x8b0500000000	            mov eax, dword [0x040003ef] 	       655	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40003ef	            0x85c0	                           test eax, eax	       655	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40003f1	            0x7470	                            je 0x4000463	       655	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40003f3	    0x48c705000000	               mov qword [0x040003fe], 0	       657	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40003fe	    0x48c705000000	               mov qword [0x04000409], 0	       658	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4000409	    0x48c705000000	               mov qword [0x04000414], 0	       659	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4000414	    0x48c705000000	               mov qword [0x0400041f], 0	       660	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x400041f	    0x48c705000000	               mov qword [0x0400042a], 0	       661	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x400042a	    0x48c705000000	               mov qword [0x04000435], 0	       662	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4000435	    0x48c705000000	               mov qword [0x04000440], 0	       663	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4000440	    0x48c705000000	               mov qword [0x0400044b], 0	       664	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x400044b	    0x48c705000000	               mov qword [0x04000456], 0	       665	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4000456	    0x48c705000000	               mov qword [0x04000461], 0	       666	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4000461	            0xeb6e	                           jmp 0x40004d1	       666	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x4000463	    0x48c705000000	               mov qword [0x0400046e], 0	       670	mbyte.c	FUNCTION_4	ELSE_13
0x400046e	    0x48c705000000	               mov qword [0x04000479], 0	       671	mbyte.c	FUNCTION_4	ELSE_13
0x4000479	    0x48c705000000	               mov qword [0x04000484], 0	       672	mbyte.c	FUNCTION_4	ELSE_13
0x4000484	    0x48c705000000	               mov qword [0x0400048f], 0	       673	mbyte.c	FUNCTION_4	ELSE_13
0x400048f	    0x48c705000000	               mov qword [0x0400049a], 0	       674	mbyte.c	FUNCTION_4	ELSE_13
0x400049a	    0x48c705000000	               mov qword [0x040004a5], 0	       675	mbyte.c	FUNCTION_4	ELSE_13
0x40004a5	    0x48c705000000	               mov qword [0x040004b0], 0	       676	mbyte.c	FUNCTION_4	ELSE_13
0x40004b0	    0x48c705000000	               mov qword [0x040004bb], 0	       677	mbyte.c	FUNCTION_4	ELSE_13
0x40004bb	    0x48c705000000	               mov qword [0x040004c6], 0	       678	mbyte.c	FUNCTION_4	ELSE_13
0x40004c6	    0x48c705000000	               mov qword [0x040004d1], 0	       679	mbyte.c	FUNCTION_4	ELSE_13
0x40004d1	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       688	mbyte.c	FUNCTION_4
0x40004d8	    0x8b0500000000	            mov eax, dword [0x040004de] 	       689	mbyte.c	FUNCTION_4	IF_19
0x40004de	            0x85c0	                           test eax, eax	       689	mbyte.c	FUNCTION_4	IF_19
0x40004e0	            0x7458	                            je 0x400053a	       689	mbyte.c	FUNCTION_4	IF_19
0x40004e2	      0xe800000000	                          call 0x40004e7	       691	mbyte.c	FUNCTION_4	IF_19	CALL_17
0x40004e7	        0x488945b8	             mov qword [rbp - 0x48], rax	       691	mbyte.c	FUNCTION_4	IF_19	CALL_17
0x40004eb	      0x48837db800	               cmp qword [rbp - 0x48], 0	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x40004f0	            0x741a	                            je 0x400050c	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x40004f2	    0x488b15000000	            mov rdx, qword [0x040004f9] 	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x40004f9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x40004fd	          0x4889d6	                            mov rsi, rdx	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4000500	          0x4889c7	                            mov rdi, rax	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4000503	      0xe800000000	                          call 0x4000508	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4000508	            0x85c0	                           test eax, eax	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x400050a	            0x7422	                            je 0x400052e	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x400050c	    0x488b0d000000	            mov rcx, qword [0x04000513] 	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4000513	        0x488d45c0	                   lea rax, [rbp - 0x40]	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4000517	      0xba00000000	                              mov edx, 0	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x400051c	          0x4889ce	                            mov rsi, rcx	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x400051f	          0x4889c7	                            mov rdi, rax	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4000522	      0xe800000000	                          call 0x4000527	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4000527	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       695	mbyte.c	FUNCTION_4	IF_19	IF_20
0x400052e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       697	mbyte.c	FUNCTION_4	IF_19	CALL_20
0x4000532	          0x4889c7	                            mov rdi, rax	       697	mbyte.c	FUNCTION_4	IF_19	CALL_20
0x4000535	      0xe800000000	                          call 0x400053a	       697	mbyte.c	FUNCTION_4	IF_19	CALL_20
0x400053a	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       701	mbyte.c	FUNCTION_4	FOR_2
0x4000541	      0xe9e9000000	                           jmp 0x400062f	       701	mbyte.c	FUNCTION_4	FOR_2
0x4000546	    0x8b0500000000	            mov eax, dword [0x0400054c] 	       705	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x400054c	            0x85c0	                           test eax, eax	       705	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x400054e	            0x7417	                            je 0x4000567	       705	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x4000550	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x4000553	            0x4898	                                    cdqe	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x4000555	     0xfb680000000	                   movzx eax, byte [rax]	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x400055c	           0xfbec0	                           movsx eax, al	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x400055f	          0x8945ac	             mov dword [rbp - 0x54], eax	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x4000562	      0xe9b4000000	                           jmp 0x400061b	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x4000567	    0x8b0500000000	            mov eax, dword [0x0400056d] 	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x400056d	            0x85c0	                           test eax, eax	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x400056f	            0x750c	                           jne 0x400057d	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x4000571	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       708	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x4000578	      0xe99e000000	                           jmp 0x400061b	       708	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x400057d	        0x837da800	               cmp dword [rbp - 0x58], 0	       728	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x4000581	            0x750c	                           jne 0x400058f	       728	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x4000583	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       729	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x400058a	      0xe98c000000	                           jmp 0x400061b	       729	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x400058f	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       732	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16
0x4000592	          0x8845e0	               mov byte [rbp - 0x20], al	       732	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16
0x4000595	        0xc645e100	                mov byte [rbp - 0x1f], 0	       733	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16
0x4000599	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       735	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24
0x400059c	            0x85c0	                           test eax, eax	       735	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24
0x400059e	            0x7441	                            je 0x40005e1	       735	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24
0x40005a0	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x40005a4	        0x488d45c0	                   lea rax, [rbp - 0x40]	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x40005a8	      0xba00000000	                              mov edx, 0	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x40005ad	          0x4889ce	                            mov rsi, rcx	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x40005b0	          0x4889c7	                            mov rdi, rax	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x40005b3	      0xe800000000	                          call 0x40005b8	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x40005b8	        0x488945b8	             mov qword [rbp - 0x48], rax	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x40005bc	      0x48837db800	               cmp qword [rbp - 0x48], 0	       742	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x40005c1	            0x7415	                            je 0x40005d8	       742	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x40005c3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       744	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25	CALL_23
0x40005c7	          0x4889c7	                            mov rdi, rax	       744	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25	CALL_23
0x40005ca	      0xe800000000	                          call 0x40005cf	       744	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25	CALL_23
0x40005cf	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       745	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x40005d6	            0xeb43	                           jmp 0x400061b	       745	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x40005d8	    0xc745ac020000	               mov dword [rbp - 0x54], 2	       748	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	ELSE_17
0x40005df	            0xeb3a	                           jmp 0x400061b	       748	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	ELSE_17
0x40005e1	      0xbe00000000	                              mov esi, 0	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x40005e6	      0xbf00000000	                              mov edi, 0	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x40005eb	      0xe800000000	                          call 0x40005f0	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x40005f0	    0x890500000000	            mov dword [0x040005f6], eax 	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18
0x40005f6	        0x488d45e0	                   lea rax, [rbp - 0x20]	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x40005fa	      0xbe01000000	                              mov esi, 1	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x40005ff	          0x4889c7	                            mov rdi, rax	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4000602	      0xe800000000	                          call 0x4000607	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4000607	            0x85c0	                           test eax, eax	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4000609	            0x7f09	                            jg 0x4000614	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x400060b	    0xc745ac020000	               mov dword [rbp - 0x54], 2	       761	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4000612	            0xeb07	                           jmp 0x400061b	       761	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x4000614	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       763	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	ELSE_19
0x400061b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       770	mbyte.c	FUNCTION_4	FOR_2
0x400061e	            0x89c2	                            mov edx, eax	       770	mbyte.c	FUNCTION_4	FOR_2
0x4000620	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       770	mbyte.c	FUNCTION_4	FOR_2
0x4000623	            0x4898	                                    cdqe	       770	mbyte.c	FUNCTION_4	FOR_2
0x4000625	    0x889000000000	                      mov byte [rax], dl	       770	mbyte.c	FUNCTION_4	FOR_2
0x400062b	        0x8345a801	               add dword [rbp - 0x58], 1	       701	mbyte.c	FUNCTION_4	FOR_2
0x400062f	    0x817da8ff0000	           cmp dword [rbp - 0x58], 0xff 	       701	mbyte.c	FUNCTION_4	FOR_2
0x4000636	     0xf8e0affffff	                           jle 0x4000546	       701	mbyte.c	FUNCTION_4	FOR_2
0x400063c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       774	mbyte.c	FUNCTION_4	CALL_24
0x4000640	      0xba00000000	                              mov edx, 0	       774	mbyte.c	FUNCTION_4	CALL_24
0x4000645	      0xbe00000000	                              mov esi, 0	       774	mbyte.c	FUNCTION_4	CALL_24
0x400064a	          0x4889c7	                            mov rdi, rax	       774	mbyte.c	FUNCTION_4	CALL_24
0x400064d	      0xe800000000	                          call 0x4000652	       774	mbyte.c	FUNCTION_4	CALL_24
0x4000652	      0xe800000000	                          call 0x4000657	       778	mbyte.c	FUNCTION_4	CALL_25
0x4000657	      0xbf00000000	                              mov edi, 0	       781	mbyte.c	FUNCTION_4	CALL_26
0x400065c	      0xe800000000	                          call 0x4000661	       781	mbyte.c	FUNCTION_4	CALL_26
0x4000661	    0x8b0500000000	            mov eax, dword [0x04000667] 	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4000667	            0x85c0	                           test eax, eax	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4000669	            0x742d	                            je 0x4000698	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x400066b	      0xbf00000000	                              mov edi, 0	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4000670	      0xe800000000	                          call 0x4000675	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4000675	            0x85c0	                           test eax, eax	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4000677	            0x751f	                           jne 0x4000698	       784	mbyte.c	FUNCTION_4	IF_27	CALL_27
0x4000679	    0x41b800000000	                              mov r8d, 0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x400067f	      0xb901000000	                              mov ecx, 1	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x4000684	      0xba00000000	                              mov edx, 0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x4000689	      0xbeffffffff	                     mov esi, 0xffffffff	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x400068e	      0xbf00000000	                              mov edi, 0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x4000693	      0xe800000000	                          call 0x4000698	       785	mbyte.c	FUNCTION_4	IF_27	CALL_28
0x4000698	    0x8b0500000000	            mov eax, dword [0x0400069e] 	       792	mbyte.c	FUNCTION_4
0x400069e	            0x85c0	                           test eax, eax	       791	mbyte.c	FUNCTION_4	CALL_29
0x40006a0	            0x7509	                           jne 0x40006ab	       791	mbyte.c	FUNCTION_4	CALL_29
0x40006a2	    0x488b05000000	            mov rax, qword [0x040006a9] 	       791	mbyte.c	FUNCTION_4	CALL_29
0x40006a9	            0xeb05	                           jmp 0x40006b0	       791	mbyte.c	FUNCTION_4	CALL_29
0x40006ab	      0xb800000000	                              mov eax, 0	       791	mbyte.c	FUNCTION_4	CALL_29
0x40006b0	          0x4889c6	                            mov rsi, rax	       791	mbyte.c	FUNCTION_4	CALL_29
0x40006b3	      0xbf00000000	                              mov edi, 0	       791	mbyte.c	FUNCTION_4	CALL_29
0x40006b8	      0xe800000000	                          call 0x40006bd	       791	mbyte.c	FUNCTION_4	CALL_29
0x40006bd	    0x488b05000000	            mov rax, qword [0x040006c4] 	       804	mbyte.c	FUNCTION_4	CALL_31
0x40006c4	          0x4989c0	                             mov r8, rax	       804	mbyte.c	FUNCTION_4	CALL_31
0x40006c7	      0xb900000000	                              mov ecx, 0	       804	mbyte.c	FUNCTION_4	CALL_31
0x40006cc	      0xba00000000	                              mov edx, 0	       804	mbyte.c	FUNCTION_4	CALL_31
0x40006d1	      0xbe00000000	                              mov esi, 0	       804	mbyte.c	FUNCTION_4	CALL_31
0x40006d6	      0xbf21000000	                           mov edi, 0x21	       804	mbyte.c	FUNCTION_4	CALL_31
0x40006db	      0xe800000000	                          call 0x40006e0	       804	mbyte.c	FUNCTION_4	CALL_31
0x40006e0	      0xe800000000	                          call 0x40006e5	       808	mbyte.c	FUNCTION_4	CALL_32
0x40006e5	      0xb800000000	                              mov eax, 0	       811	mbyte.c	FUNCTION_4
0x40006ea	        0x488b4df8	                mov rcx, qword [rbp - 8]	       812	mbyte.c	FUNCTION_4
0x40006ee	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       812	mbyte.c	FUNCTION_4
0x40006f7	            0x7405	                            je 0x40006fe	       812	mbyte.c	FUNCTION_4
0x40006f9	      0xe800000000	                          call 0x40006fe	       812	mbyte.c	FUNCTION_4
0x40006fe	              0xc9	                                   leave	       812	mbyte.c	FUNCTION_4
0x40006ff	              0xc3	                                     ret	       812	mbyte.c	FUNCTION_4
mb_charlen_len	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	29
0x4003560	              0x55	                                push rbp	      4167	mbyte.c	FUNCTION_81
0x4003561	          0x4889e5	                            mov rbp, rsp	      4167	mbyte.c	FUNCTION_81
0x4003564	        0x4883ec20	                           sub rsp, 0x20	      4167	mbyte.c	FUNCTION_81
0x4003568	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4167	mbyte.c	FUNCTION_81
0x400356c	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4167	mbyte.c	FUNCTION_81
0x400356f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4168	mbyte.c	FUNCTION_81
0x4003573	        0x488945f8	                mov qword [rbp - 8], rax	      4168	mbyte.c	FUNCTION_81
0x4003577	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4171	mbyte.c	FUNCTION_81	FOR_1
0x400357e	            0xeb1a	                           jmp 0x400359a	      4171	mbyte.c	FUNCTION_81	FOR_1
0x4003580	    0x488b05000000	            mov rax, qword [0x04003587] 	      4172	mbyte.c	FUNCTION_81	FOR_1
0x4003587	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4172	mbyte.c	FUNCTION_81	FOR_1
0x400358b	          0x4889d7	                            mov rdi, rdx	      4172	mbyte.c	FUNCTION_81	FOR_1
0x400358e	            0xffd0	                                call rax	      4172	mbyte.c	FUNCTION_81	FOR_1
0x4003590	            0x4898	                                    cdqe	      4172	mbyte.c	FUNCTION_81	FOR_1
0x4003592	        0x480145f8	                add qword [rbp - 8], rax	      4172	mbyte.c	FUNCTION_81	FOR_1
0x4003596	        0x8345f401	                add dword [rbp - 0xc], 1	      4171	mbyte.c	FUNCTION_81	FOR_1
0x400359a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4171	mbyte.c	FUNCTION_81	FOR_1
0x400359e	           0xfb600	                   movzx eax, byte [rax]	      4171	mbyte.c	FUNCTION_81	FOR_1
0x40035a1	            0x84c0	                             test al, al	      4171	mbyte.c	FUNCTION_81	FOR_1
0x40035a3	            0x7413	                            je 0x40035b8	      4171	mbyte.c	FUNCTION_81	FOR_1
0x40035a5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4171	mbyte.c	FUNCTION_81	FOR_1
0x40035a8	          0x4863d0	                         movsxd rdx, eax	      4171	mbyte.c	FUNCTION_81	FOR_1
0x40035ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4171	mbyte.c	FUNCTION_81	FOR_1
0x40035af	          0x4801d0	                            add rax, rdx	      4171	mbyte.c	FUNCTION_81	FOR_1
0x40035b2	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4171	mbyte.c	FUNCTION_81	FOR_1
0x40035b6	            0x77c8	                            ja 0x4003580	      4171	mbyte.c	FUNCTION_81	FOR_1
0x40035b8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4174	mbyte.c	FUNCTION_81
0x40035bb	              0xc9	                                   leave	      4175	mbyte.c	FUNCTION_81
0x40035bc	              0xc3	                                     ret	      4175	mbyte.c	FUNCTION_81
latin_ptr2len_len	CALL,0:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	15
0x4000c99	              0x55	                                push rbp	      1155	mbyte.c	FUNCTION_16
0x4000c9a	          0x4889e5	                            mov rbp, rsp	      1155	mbyte.c	FUNCTION_16
0x4000c9d	        0x48897df8	                mov qword [rbp - 8], rdi	      1155	mbyte.c	FUNCTION_16
0x4000ca1	          0x8975f4	              mov dword [rbp - 0xc], esi	      1155	mbyte.c	FUNCTION_16
0x4000ca4	        0x837df400	                cmp dword [rbp - 0xc], 0	      1156	mbyte.c	FUNCTION_16	IF_1
0x4000ca8	            0x7e0b	                           jle 0x4000cb5	      1156	mbyte.c	FUNCTION_16	IF_1
0x4000caa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1156	mbyte.c	FUNCTION_16	IF_1
0x4000cae	           0xfb600	                   movzx eax, byte [rax]	      1156	mbyte.c	FUNCTION_16	IF_1
0x4000cb1	            0x84c0	                             test al, al	      1156	mbyte.c	FUNCTION_16	IF_1
0x4000cb3	            0x7507	                           jne 0x4000cbc	      1156	mbyte.c	FUNCTION_16	IF_1
0x4000cb5	      0xb800000000	                              mov eax, 0	      1157	mbyte.c	FUNCTION_16	IF_1
0x4000cba	            0xeb05	                           jmp 0x4000cc1	      1157	mbyte.c	FUNCTION_16	IF_1
0x4000cbc	      0xb801000000	                              mov eax, 1	      1158	mbyte.c	FUNCTION_16
0x4000cc1	              0x5d	                                 pop rbp	      1159	mbyte.c	FUNCTION_16
0x4000cc2	              0xc3	                                     ret	      1159	mbyte.c	FUNCTION_16
string_convert	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	14
0x40060f2	              0x55	                                push rbp	      6716	mbyte.c	FUNCTION_144
0x40060f3	          0x4889e5	                            mov rbp, rsp	      6716	mbyte.c	FUNCTION_144
0x40060f6	        0x4883ec20	                           sub rsp, 0x20	      6716	mbyte.c	FUNCTION_144
0x40060fa	        0x48897df8	                mov qword [rbp - 8], rdi	      6716	mbyte.c	FUNCTION_144
0x40060fe	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6716	mbyte.c	FUNCTION_144
0x4006102	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6716	mbyte.c	FUNCTION_144
0x4006106	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6717	mbyte.c	FUNCTION_144	CALL_1
0x400610a	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      6717	mbyte.c	FUNCTION_144	CALL_1
0x400610e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4006112	      0xb900000000	                              mov ecx, 0	      6717	mbyte.c	FUNCTION_144	CALL_1
0x4006117	          0x4889c7	                            mov rdi, rax	      6717	mbyte.c	FUNCTION_144	CALL_1
0x400611a	      0xe800000000	                          call 0x400611f	      6717	mbyte.c	FUNCTION_144	CALL_1
0x400611f	              0xc9	                                   leave	      6718	mbyte.c	FUNCTION_144
0x4006120	              0xc3	                                     ret	      6718	mbyte.c	FUNCTION_144
utfc_ptr2len_len	CALL,3:IF,6:ELSE,0:DO,0:WHILE,1:functions,0:SWITCH,0:FOR,0	95
0x4001d29	              0x55	                                push rbp	      2186	mbyte.c	FUNCTION_49
0x4001d2a	          0x4889e5	                            mov rbp, rsp	      2186	mbyte.c	FUNCTION_49
0x4001d2d	        0x4883ec20	                           sub rsp, 0x20	      2186	mbyte.c	FUNCTION_49
0x4001d31	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2186	mbyte.c	FUNCTION_49
0x4001d35	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2186	mbyte.c	FUNCTION_49
0x4001d38	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2192	mbyte.c	FUNCTION_49	IF_1
0x4001d3c	            0x7e0b	                           jle 0x4001d49	      2192	mbyte.c	FUNCTION_49	IF_1
0x4001d3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2192	mbyte.c	FUNCTION_49	IF_1
0x4001d42	           0xfb600	                   movzx eax, byte [rax]	      2192	mbyte.c	FUNCTION_49	IF_1
0x4001d45	            0x84c0	                             test al, al	      2192	mbyte.c	FUNCTION_49	IF_1
0x4001d47	            0x750a	                           jne 0x4001d53	      2192	mbyte.c	FUNCTION_49	IF_1
0x4001d49	      0xb800000000	                              mov eax, 0	      2193	mbyte.c	FUNCTION_49	IF_1
0x4001d4e	      0xe9f2000000	                           jmp 0x4001e45	      2193	mbyte.c	FUNCTION_49	IF_1
0x4001d53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001d57	           0xfb600	                   movzx eax, byte [rax]	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001d5a	            0x84c0	                             test al, al	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001d5c	            0x781f	                            js 0x4001d7d	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001d5e	        0x837de401	               cmp dword [rbp - 0x1c], 1	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001d62	            0x740f	                            je 0x4001d73	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001d64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001d68	        0x4883c001	                              add rax, 1	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001d6c	           0xfb600	                   movzx eax, byte [rax]	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001d6f	            0x84c0	                             test al, al	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001d71	            0x780a	                            js 0x4001d7d	      2194	mbyte.c	FUNCTION_49	IF_2
0x4001d73	      0xb801000000	                              mov eax, 1	      2195	mbyte.c	FUNCTION_49	IF_2
0x4001d78	      0xe9c8000000	                           jmp 0x4001e45	      2195	mbyte.c	FUNCTION_49	IF_2
0x4001d7d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2198	mbyte.c	FUNCTION_49	CALL_1
0x4001d80	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2198	mbyte.c	FUNCTION_49	CALL_1
0x4001d84	            0x89d6	                            mov esi, edx	      2198	mbyte.c	FUNCTION_49	CALL_1
0x4001d86	          0x4889c7	                            mov rdi, rax	      2198	mbyte.c	FUNCTION_49	CALL_1
0x4001d89	      0xe800000000	                          call 0x4001d8e	      2198	mbyte.c	FUNCTION_49	CALL_1
0x4001d8e	          0x8945f4	              mov dword [rbp - 0xc], eax	      2198	mbyte.c	FUNCTION_49	CALL_1
0x4001d91	        0x837df401	                cmp dword [rbp - 0xc], 1	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001d95	            0x750b	                           jne 0x4001da2	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001d97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001d9b	           0xfb600	                   movzx eax, byte [rax]	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001d9e	            0x84c0	                             test al, al	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001da0	            0x7808	                            js 0x4001daa	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001da2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001da5	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001da8	            0x7e0a	                           jle 0x4001db4	      2201	mbyte.c	FUNCTION_49	IF_3
0x4001daa	      0xb801000000	                              mov eax, 1	      2202	mbyte.c	FUNCTION_49	IF_3
0x4001daf	      0xe991000000	                           jmp 0x4001e45	      2202	mbyte.c	FUNCTION_49	IF_3
0x4001db4	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2209	mbyte.c	FUNCTION_49
0x4001dbb	            0xeb74	                           jmp 0x4001e31	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x4001dbd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001dc0	          0x4863d0	                         movsxd rdx, eax	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001dc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001dc7	          0x4801d0	                            add rax, rdx	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001dca	           0xfb600	                   movzx eax, byte [rax]	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001dcd	            0x84c0	                             test al, al	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001dcf	            0x796a	                           jns 0x4001e3b	      2215	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001dd1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x4001dd4	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x4001dd7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x4001dda	          0x4863ca	                         movsxd rcx, edx	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x4001ddd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x4001de1	          0x4801ca	                            add rdx, rcx	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x4001de4	            0x89c6	                            mov esi, eax	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x4001de6	          0x4889d7	                            mov rdi, rdx	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x4001de9	      0xe800000000	                          call 0x4001dee	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x4001dee	          0x8945fc	                mov dword [rbp - 4], eax	      2222	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x4001df1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2223	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x4001df4	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      2223	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x4001df7	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2223	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x4001dfa	            0x7c42	                            jl 0x4001e3e	      2223	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x4001dfc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001dff	          0x4863d0	                         movsxd rdx, eax	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e02	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e06	          0x4801c2	                            add rdx, rax	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e09	          0x8b45f8	                mov eax, dword [rbp - 8]	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e0c	          0x4863c8	                         movsxd rcx, eax	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e0f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e13	          0x4801c8	                            add rax, rcx	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e16	          0x4889d6	                            mov rsi, rdx	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e19	          0x4889c7	                            mov rdi, rax	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e1c	      0xe800000000	                          call 0x4001e21	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e21	            0x85c0	                           test eax, eax	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e23	            0x741c	                            je 0x4001e41	      2226	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x4001e25	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2231	mbyte.c	FUNCTION_49	WHILE_1
0x4001e28	          0x8945f8	                mov dword [rbp - 8], eax	      2231	mbyte.c	FUNCTION_49	WHILE_1
0x4001e2b	          0x8b45fc	                mov eax, dword [rbp - 4]	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x4001e2e	           0x145f4	              add dword [rbp - 0xc], eax	      2233	mbyte.c	FUNCTION_49	WHILE_1
0x4001e31	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x4001e34	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x4001e37	            0x7c84	                            jl 0x4001dbd	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x4001e39	            0xeb07	                           jmp 0x4001e42	      2211	mbyte.c	FUNCTION_49	WHILE_1
0x4001e3b	              0x90	                                     nop	      2216	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001e3c	            0xeb04	                           jmp 0x4001e42	      2216	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x4001e3e	              0x90	                                     nop	      2224	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x4001e3f	            0xeb01	                           jmp 0x4001e42	      2224	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x4001e41	              0x90	                                     nop	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6
0x4001e42	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2235	mbyte.c	FUNCTION_49
0x4001e45	              0xc9	                                   leave	      2236	mbyte.c	FUNCTION_49
0x4001e46	              0xc3	                                     ret	      2236	mbyte.c	FUNCTION_49
show_utf8	CALL,8:IF,4:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	81
0x4002900	              0x55	                                push rbp	      3715	mbyte.c	FUNCTION_66
0x4002901	          0x4889e5	                            mov rbp, rsp	      3715	mbyte.c	FUNCTION_66
0x4002904	        0x4883ec20	                           sub rsp, 0x20	      3715	mbyte.c	FUNCTION_66
0x4002908	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      3717	mbyte.c	FUNCTION_66
0x400290f	      0xe800000000	                          call 0x4002914	      3724	mbyte.c	FUNCTION_66	CALL_1
0x4002914	        0x488945f8	                mov qword [rbp - 8], rax	      3724	mbyte.c	FUNCTION_66	CALL_1
0x4002918	        0x488b45f8	                mov rax, qword [rbp - 8]	      3725	mbyte.c	FUNCTION_66	CALL_2
0x400291c	          0x4889c7	                            mov rdi, rax	      3725	mbyte.c	FUNCTION_66	CALL_2
0x400291f	      0xe800000000	                          call 0x4002924	      3725	mbyte.c	FUNCTION_66	CALL_2
0x4002924	          0x8945f4	              mov dword [rbp - 0xc], eax	      3725	mbyte.c	FUNCTION_66	CALL_2
0x4002927	        0x837df400	                cmp dword [rbp - 0xc], 0	      3726	mbyte.c	FUNCTION_66	IF_1
0x400292b	            0x750f	                           jne 0x400293c	      3726	mbyte.c	FUNCTION_66	IF_1
0x400292d	      0xbf00000000	                              mov edi, 0	      3728	mbyte.c	FUNCTION_66	IF_1	CALL_3
0x4002932	      0xe800000000	                          call 0x4002937	      3728	mbyte.c	FUNCTION_66	IF_1	CALL_3
0x4002937	      0xe9ee000000	                           jmp 0x4002a2a	      3729	mbyte.c	FUNCTION_66	IF_1
0x400293c	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3732	mbyte.c	FUNCTION_66
0x4002943	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      3733	mbyte.c	FUNCTION_66	FOR_1
0x400294a	      0xe9bd000000	                           jmp 0x4002a0c	      3733	mbyte.c	FUNCTION_66	FOR_1
0x400294f	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3735	mbyte.c	FUNCTION_66	FOR_1	IF_2
0x4002953	            0x753a	                           jne 0x400298f	      3735	mbyte.c	FUNCTION_66	FOR_1	IF_2
0x4002955	        0x837df000	               cmp dword [rbp - 0x10], 0	      3738	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x4002959	            0x7e1c	                           jle 0x4002977	      3738	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x400295b	    0x488b15000000	            mov rdx, qword [0x04002962] 	      3740	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x4002962	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3740	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x4002965	            0x4898	                                    cdqe	      3740	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x4002967	          0x4801d0	                            add rax, rdx	      3740	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x400296a	      0x66c7002b20	                  mov word [rax], 0x202b	      3740	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x400296f	        0xc6400200	                   mov byte [rax + 2], 0	      3740	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x4002973	        0x8345e802	               add dword [rbp - 0x18], 2	      3741	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x4002977	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3743	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x400297a	          0x4863d0	                         movsxd rdx, eax	      3743	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x400297d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3743	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x4002981	          0x4801d0	                            add rax, rdx	      3743	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x4002984	          0x4889c7	                            mov rdi, rax	      3743	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x4002987	      0xe800000000	                          call 0x400298c	      3743	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x400298c	          0x8945ec	             mov dword [rbp - 0x14], eax	      3743	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x400298f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3746	mbyte.c	FUNCTION_66	FOR_1
0x4002992	          0x4863d0	                         movsxd rdx, eax	      3746	mbyte.c	FUNCTION_66	FOR_1
0x4002995	        0x488b45f8	                mov rax, qword [rbp - 8]	      3746	mbyte.c	FUNCTION_66	FOR_1
0x4002999	          0x4801d0	                            add rax, rdx	      3746	mbyte.c	FUNCTION_66	FOR_1
0x400299c	           0xfb600	                   movzx eax, byte [rax]	      3746	mbyte.c	FUNCTION_66	FOR_1
0x400299f	            0x3c0a	                             cmp al, 0xa	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029a1	            0x7415	                            je 0x40029b8	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029a3	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3746	mbyte.c	FUNCTION_66	FOR_1
0x40029a6	          0x4863d0	                         movsxd rdx, eax	      3746	mbyte.c	FUNCTION_66	FOR_1
0x40029a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3746	mbyte.c	FUNCTION_66	FOR_1
0x40029ad	          0x4801d0	                            add rax, rdx	      3746	mbyte.c	FUNCTION_66	FOR_1
0x40029b0	           0xfb600	                   movzx eax, byte [rax]	      3746	mbyte.c	FUNCTION_66	FOR_1
0x40029b3	           0xfb6c0	                           movzx eax, al	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029b6	            0xeb05	                           jmp 0x40029bd	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029b8	      0xb800000000	                              mov eax, 0	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029bd	    0x488b0d000000	            mov rcx, qword [0x040029c4] 	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029c4	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029c7	          0x4863d2	                         movsxd rdx, edx	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029ca	          0x4801d1	                            add rcx, rdx	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029cd	            0x89c2	                            mov edx, eax	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029cf	      0xbe00000000	                              mov esi, 0	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029d4	          0x4889cf	                            mov rdi, rcx	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029d7	      0xb800000000	                              mov eax, 0	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029dc	      0xe800000000	                          call 0x40029e1	      3745	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x40029e1	        0x836dec01	               sub dword [rbp - 0x14], 1	      3747	mbyte.c	FUNCTION_66	FOR_1
0x40029e5	    0x488b15000000	            mov rdx, qword [0x040029ec] 	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x40029ec	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x40029ef	            0x4898	                                    cdqe	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x40029f1	          0x4801d0	                            add rax, rdx	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x40029f4	          0x4889c7	                            mov rdi, rax	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x40029f7	      0xe800000000	                          call 0x40029fc	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x40029fc	           0x145e8	             add dword [rbp - 0x18], eax	      3748	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x40029ff	    0x817de8ed0300	          cmp dword [rbp - 0x18], 0x3ed 	      3749	mbyte.c	FUNCTION_66	FOR_1	IF_4
0x4002a06	            0x7f12	                            jg 0x4002a1a	      3749	mbyte.c	FUNCTION_66	FOR_1	IF_4
0x4002a08	        0x8345f001	               add dword [rbp - 0x10], 1	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002a0c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002a0f	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002a12	     0xf8c37ffffff	                            jl 0x400294f	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002a18	            0xeb01	                           jmp 0x4002a1b	      3733	mbyte.c	FUNCTION_66	FOR_1
0x4002a1a	              0x90	                                     nop	      3750	mbyte.c	FUNCTION_66	FOR_1	IF_4
0x4002a1b	    0x488b05000000	            mov rax, qword [0x04002a22] 	      3753	mbyte.c	FUNCTION_66	CALL_8
0x4002a22	          0x4889c7	                            mov rdi, rax	      3753	mbyte.c	FUNCTION_66	CALL_8
0x4002a25	      0xe800000000	                          call 0x4002a2a	      3753	mbyte.c	FUNCTION_66	CALL_8
0x4002a2a	              0xc9	                                   leave	      3754	mbyte.c	FUNCTION_66
0x4002a2b	              0xc3	                                     ret	      3754	mbyte.c	FUNCTION_66
enc_canonize	CALL,20:IF,11:ELSE,2:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	195
0x400395d	              0x55	                                push rbp	      4301	mbyte.c	FUNCTION_86
0x400395e	          0x4889e5	                            mov rbp, rsp	      4301	mbyte.c	FUNCTION_86
0x4003961	        0x4883ec30	                           sub rsp, 0x30	      4301	mbyte.c	FUNCTION_86
0x4003965	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4301	mbyte.c	FUNCTION_86
0x4003969	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x400396d	      0xbe00000000	                              mov esi, 0	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x4003972	          0x4889c7	                            mov rdi, rax	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x4003975	      0xe800000000	                          call 0x400397a	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x400397a	            0x85c0	                           test eax, eax	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x400397c	            0x7529	                           jne 0x40039a7	      4307	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x400397e	      0xe800000000	                          call 0x4003983	      4310	mbyte.c	FUNCTION_86	IF_1	CALL_2
0x4003983	        0x488945e8	             mov qword [rbp - 0x18], rax	      4310	mbyte.c	FUNCTION_86	IF_1	CALL_2
0x4003987	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4311	mbyte.c	FUNCTION_86	IF_1	IF_2
0x400398c	            0x7508	                           jne 0x4003996	      4311	mbyte.c	FUNCTION_86	IF_1	IF_2
0x400398e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4312	mbyte.c	FUNCTION_86	IF_1	IF_2
0x4003996	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4313	mbyte.c	FUNCTION_86	IF_1	CALL_3
0x400399a	          0x4889c7	                            mov rdi, rax	      4313	mbyte.c	FUNCTION_86	IF_1	CALL_3
0x400399d	      0xe800000000	                          call 0x40039a2	      4313	mbyte.c	FUNCTION_86	IF_1	CALL_3
0x40039a2	      0xe97a020000	                           jmp 0x4003c21	      4313	mbyte.c	FUNCTION_86	IF_1	CALL_3
0x40039a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40039ab	          0x4889c7	                            mov rdi, rax	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40039ae	      0xe800000000	                          call 0x40039b3	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40039b3	          0x83c003	                              add eax, 3	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40039b6	            0x89c7	                            mov edi, eax	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40039b8	      0xe800000000	                          call 0x40039bd	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40039bd	        0x488945e8	             mov qword [rbp - 0x18], rax	      4318	mbyte.c	FUNCTION_86	CALL_5
0x40039c1	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4319	mbyte.c	FUNCTION_86	IF_3
0x40039c6	     0xf8451020000	                            je 0x4003c1d	      4319	mbyte.c	FUNCTION_86	IF_3
0x40039cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4322	mbyte.c	FUNCTION_86	IF_3
0x40039d0	        0x488945f0	             mov qword [rbp - 0x10], rax	      4322	mbyte.c	FUNCTION_86	IF_3
0x40039d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x40039d8	        0x488945f8	                mov qword [rbp - 8], rax	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x40039dc	            0xeb5a	                           jmp 0x4003a38	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x40039de	        0x488b45f8	                mov rax, qword [rbp - 8]	      4325	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x40039e2	           0xfb600	                   movzx eax, byte [rax]	      4325	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x40039e5	            0x3c5f	                            cmp al, 0x5f	      4325	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x40039e7	            0x7511	                           jne 0x40039fa	      4325	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x40039e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4326	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x40039ed	        0x488d5001	                      lea rdx, [rax + 1]	      4326	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x40039f1	        0x488955f0	             mov qword [rbp - 0x10], rdx	      4326	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x40039f5	          0xc6002d	                    mov byte [rax], 0x2d	      4326	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x40039f8	            0xeb39	                           jmp 0x4003a33	      4326	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x40039fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x40039fe	        0x488d5001	                      lea rdx, [rax + 1]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a02	        0x488955f0	             mov qword [rbp - 0x10], rdx	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a06	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a0a	           0xfb612	                   movzx edx, byte [rdx]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a0d	          0x80fa40	                            cmp dl, 0x40	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a10	            0x760c	                           jbe 0x4003a1e	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a12	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a16	           0xfb612	                   movzx edx, byte [rdx]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a19	          0x80fa5a	                            cmp dl, 0x5a	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a1c	            0x7609	                           jbe 0x4003a27	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a1e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a22	           0xfb612	                   movzx edx, byte [rdx]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a25	            0xeb0a	                           jmp 0x4003a31	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a27	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a2b	           0xfb612	                   movzx edx, byte [rdx]	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a2e	          0x83c220	                           add edx, 0x20	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a31	            0x8810	                      mov byte [rax], dl	      4328	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x4003a33	      0x488345f801	                  add qword [rbp - 8], 1	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4003a38	        0x488b45f8	                mov rax, qword [rbp - 8]	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4003a3c	           0xfb600	                   movzx eax, byte [rax]	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4003a3f	            0x84c0	                             test al, al	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4003a41	            0x759b	                           jne 0x40039de	      4323	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x4003a43	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4330	mbyte.c	FUNCTION_86	IF_3
0x4003a47	          0xc60000	                       mov byte [rax], 0	      4330	mbyte.c	FUNCTION_86	IF_3
0x4003a4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4333	mbyte.c	FUNCTION_86	IF_3	CALL_7
0x4003a4e	          0x4889c7	                            mov rdi, rax	      4333	mbyte.c	FUNCTION_86	IF_3	CALL_7
0x4003a51	      0xe800000000	                          call 0x4003a56	      4333	mbyte.c	FUNCTION_86	IF_3	CALL_7
0x4003a56	        0x488945f0	             mov qword [rbp - 0x10], rax	      4333	mbyte.c	FUNCTION_86	IF_3	CALL_7
0x4003a5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4003a5e	      0xba0c000000	                            mov edx, 0xc	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4003a63	      0xbe00000000	                              mov esi, 0	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4003a68	          0x4889c7	                            mov rdi, rax	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4003a6b	      0xe800000000	                          call 0x4003a70	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4003a70	            0x85c0	                           test eax, eax	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4003a72	            0x752b	                           jne 0x4003a9f	      4336	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x4003a74	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x4003a78	        0x4883c00a	                            add rax, 0xa	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x4003a7c	          0x4889c7	                            mov rdi, rax	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x4003a7f	      0xe800000000	                          call 0x4003a84	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x4003a84	        0x488d5001	                      lea rdx, [rax + 1]	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x4003a88	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x4003a8c	        0x488d480a	                    lea rcx, [rax + 0xa]	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x4003a90	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x4003a94	          0x4889ce	                            mov rsi, rcx	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x4003a97	          0x4889c7	                            mov rdi, rax	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x4003a9a	      0xe800000000	                          call 0x4003a9f	      4337	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x4003a9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x4003aa3	      0xba07000000	                              mov edx, 7	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x4003aa8	      0xbe00000000	                              mov esi, 0	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x4003aad	          0x4889c7	                            mov rdi, rax	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x4003ab0	      0xe800000000	                          call 0x4003ab5	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x4003ab5	            0x85c0	                           test eax, eax	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x4003ab7	            0x753a	                           jne 0x4003af3	      4340	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x4003ab9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003abd	        0x4883c003	                              add rax, 3	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003ac1	          0x4889c7	                            mov rdi, rax	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003ac4	      0xe800000000	                          call 0x4003ac9	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003ac9	        0x488d5001	                      lea rdx, [rax + 1]	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003acd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003ad1	        0x488d4803	                      lea rcx, [rax + 3]	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003ad5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003ad9	        0x4883c004	                              add rax, 4	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003add	          0x4889ce	                            mov rsi, rcx	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003ae0	          0x4889c7	                            mov rdi, rax	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003ae3	      0xe800000000	                          call 0x4003ae8	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x4003ae8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4343	mbyte.c	FUNCTION_86	IF_3	IF_6
0x4003aec	        0x4883c003	                              add rax, 3	      4343	mbyte.c	FUNCTION_86	IF_3	IF_6
0x4003af0	          0xc6002d	                    mov byte [rax], 0x2d	      4343	mbyte.c	FUNCTION_86	IF_3	IF_6
0x4003af3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003af7	      0xba08000000	                              mov edx, 8	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003afc	      0xbe00000000	                              mov esi, 0	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003b01	          0x4889c7	                            mov rdi, rax	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003b04	      0xe800000000	                          call 0x4003b09	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003b09	            0x85c0	                           test eax, eax	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003b0b	            0x7549	                           jne 0x4003b56	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003b0d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003b11	        0x4883c008	                              add rax, 8	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003b15	           0xfb600	                   movzx eax, byte [rax]	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003b18	            0x3c2d	                            cmp al, 0x2d	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003b1a	            0x743a	                            je 0x4003b56	      4347	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x4003b1c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b20	        0x4883c008	                              add rax, 8	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b24	          0x4889c7	                            mov rdi, rax	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b27	      0xe800000000	                          call 0x4003b2c	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b2c	        0x488d5001	                      lea rdx, [rax + 1]	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b30	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b34	        0x488d4808	                      lea rcx, [rax + 8]	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b38	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b3c	        0x4883c009	                              add rax, 9	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b40	          0x4889ce	                            mov rsi, rcx	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b43	          0x4889c7	                            mov rdi, rax	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b46	      0xe800000000	                          call 0x4003b4b	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x4003b4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4350	mbyte.c	FUNCTION_86	IF_3	IF_7
0x4003b4f	        0x4883c008	                              add rax, 8	      4350	mbyte.c	FUNCTION_86	IF_3	IF_7
0x4003b53	          0xc6002d	                    mov byte [rax], 0x2d	      4350	mbyte.c	FUNCTION_86	IF_3	IF_7
0x4003b56	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4003b5a	      0xba06000000	                              mov edx, 6	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4003b5f	      0xbe00000000	                              mov esi, 0	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4003b64	          0x4889c7	                            mov rdi, rax	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4003b67	      0xe800000000	                          call 0x4003b6c	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4003b6c	            0x85c0	                           test eax, eax	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4003b6e	            0x752f	                           jne 0x4003b9f	      4354	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x4003b70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b74	        0x4883c006	                              add rax, 6	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b78	          0x4889c7	                            mov rdi, rax	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b7b	      0xe800000000	                          call 0x4003b80	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b80	        0x488d5001	                      lea rdx, [rax + 1]	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b84	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b88	        0x488d4806	                      lea rcx, [rax + 6]	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b8c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b90	        0x4883c005	                              add rax, 5	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b94	          0x4889ce	                            mov rsi, rcx	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b97	          0x4889c7	                            mov rdi, rax	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b9a	      0xe800000000	                          call 0x4003b9f	      4355	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x4003b9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x4003ba3	          0x4889c7	                            mov rdi, rax	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x4003ba6	      0xe895c4ffff	               call sym.enc_canon_search	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x4003bab	            0x85c0	                           test eax, eax	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x4003bad	            0x782f	                            js 0x4003bde	      4357	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x4003baf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	IF_10
0x4003bb3	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	IF_10
0x4003bb7	            0x7464	                            je 0x4003c1d	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	IF_10
0x4003bb9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x4003bbd	          0x4889c7	                            mov rdi, rax	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x4003bc0	      0xe800000000	                          call 0x4003bc5	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x4003bc5	        0x488d5001	                      lea rdx, [rax + 1]	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x4003bc9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x4003bcd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x4003bd1	          0x4889ce	                            mov rsi, rcx	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x4003bd4	          0x4889c7	                            mov rdi, rax	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x4003bd7	      0xe800000000	                          call 0x4003bdc	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x4003bdc	            0xeb3f	                           jmp 0x4003c1d	      4361	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x4003bde	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4363	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x4003be2	          0x4889c7	                            mov rdi, rax	      4363	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x4003be5	      0xe839000000	               call sym.enc_alias_search	      4363	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x4003bea	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4363	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x4003bed	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4363	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x4003bf1	            0x782a	                            js 0x4003c1d	      4363	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x4003bf3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_19
0x4003bf7	          0x4889c7	                            mov rdi, rax	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_19
0x4003bfa	      0xe800000000	                          call 0x4003bff	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_19
0x4003bff	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x4003c02	            0x4898	                                    cdqe	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x4003c04	        0x48c1e004	                              shl rax, 4	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x4003c08	    0x480500000000	                              add rax, 0	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x4003c0e	          0x488b00	                    mov rax, qword [rax]	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x4003c11	          0x4889c7	                            mov rdi, rax	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x4003c14	      0xe800000000	                          call 0x4003c19	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x4003c19	        0x488945e8	             mov qword [rbp - 0x18], rax	      4367	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x4003c1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4370	mbyte.c	FUNCTION_86
0x4003c21	              0xc9	                                   leave	      4371	mbyte.c	FUNCTION_86
0x4003c22	              0xc3	                                     ret	      4371	mbyte.c	FUNCTION_86
latin_ptr2cells	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	6
0x4000ef0	              0x55	                                push rbp	      1617	mbyte.c	FUNCTION_21
0x4000ef1	          0x4889e5	                            mov rbp, rsp	      1617	mbyte.c	FUNCTION_21
0x4000ef4	        0x48897df8	                mov qword [rbp - 8], rdi	      1617	mbyte.c	FUNCTION_21
0x4000ef8	      0xb801000000	                              mov eax, 1	      1618	mbyte.c	FUNCTION_21
0x4000efd	              0x5d	                                 pop rbp	      1619	mbyte.c	FUNCTION_21
0x4000efe	              0xc3	                                     ret	      1619	mbyte.c	FUNCTION_21
latin_ptr2char	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	8
0x4001222	              0x55	                                push rbp	      1769	mbyte.c	FUNCTION_33
0x4001223	          0x4889e5	                            mov rbp, rsp	      1769	mbyte.c	FUNCTION_33
0x4001226	        0x48897df8	                mov qword [rbp - 8], rdi	      1769	mbyte.c	FUNCTION_33
0x400122a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1770	mbyte.c	FUNCTION_33
0x400122e	           0xfb600	                   movzx eax, byte [rax]	      1770	mbyte.c	FUNCTION_33
0x4001231	           0xfb6c0	                           movzx eax, al	      1770	mbyte.c	FUNCTION_33
0x4001234	              0x5d	                                 pop rbp	      1771	mbyte.c	FUNCTION_33
0x4001235	              0xc3	                                     ret	      1771	mbyte.c	FUNCTION_33
im_preedit_end_cb	CALL,4:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	19
0x4004ecf	              0x55	                                push rbp	      5274	mbyte.c	FUNCTION_112
0x4004ed0	          0x4889e5	                            mov rbp, rsp	      5274	mbyte.c	FUNCTION_112
0x4004ed3	        0x4883ec10	                           sub rsp, 0x10	      5274	mbyte.c	FUNCTION_112
0x4004ed7	        0x48897df8	                mov qword [rbp - 8], rdi	      5274	mbyte.c	FUNCTION_112
0x4004edb	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5274	mbyte.c	FUNCTION_112
0x4004edf	      0xe857fcffff	              call sym.im_delete_preedit	      5278	mbyte.c	FUNCTION_112	CALL_2
0x4004ee4	    0x488b05000000	            mov rax, qword [0x04004eeb] 	      5281	mbyte.c	FUNCTION_112	IF_1
0x4004eeb	          0x4885c0	                           test rax, rax	      5281	mbyte.c	FUNCTION_112	IF_1
0x4004eee	            0x750a	                           jne 0x4004efa	      5281	mbyte.c	FUNCTION_112	IF_1
0x4004ef0	    0xc70500000000	     mov dword [0x04004efa], 0x7fffffff 	      5282	mbyte.c	FUNCTION_112	IF_1
0x4004efa	    0xc70500000000	               mov dword [0x04004f04], 0	      5283	mbyte.c	FUNCTION_112
0x4004f04	    0xc70500000000	               mov dword [0x04004f0e], 0	      5291	mbyte.c	FUNCTION_112
0x4004f0e	      0xbe00000000	                              mov esi, 0	      5292	mbyte.c	FUNCTION_112	CALL_3
0x4004f13	      0xbf01000000	                              mov edi, 1	      5292	mbyte.c	FUNCTION_112	CALL_3
0x4004f18	      0xe800000000	                          call 0x4004f1d	      5292	mbyte.c	FUNCTION_112	CALL_3
0x4004f1d	      0xe886fdffff	                   call sym.im_show_info	      5293	mbyte.c	FUNCTION_112	CALL_4
0x4004f22	              0x90	                                     nop	      5294	mbyte.c	FUNCTION_112
0x4004f23	              0xc9	                                   leave	      5294	mbyte.c	FUNCTION_112
0x4004f24	              0xc3	                                     ret	      5294	mbyte.c	FUNCTION_112
utf_fold	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	22
0x40023b4	              0x55	                                push rbp	      3160	mbyte.c	ELSE_2	FUNCTION_59
0x40023b5	          0x4889e5	                            mov rbp, rsp	      3160	mbyte.c	ELSE_2	FUNCTION_59
0x40023b8	        0x4883ec08	                              sub rsp, 8	      3160	mbyte.c	ELSE_2	FUNCTION_59
0x40023bc	          0x897dfc	                mov dword [rbp - 4], edi	      3160	mbyte.c	ELSE_2	FUNCTION_59
0x40023bf	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40023c3	            0x7f19	                            jg 0x40023de	      3161	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40023c5	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40023c9	            0x7e0e	                           jle 0x40023d9	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40023cb	        0x837dfc5a	               cmp dword [rbp - 4], 0x5a	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40023cf	            0x7f08	                            jg 0x40023d9	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40023d1	          0x8b45fc	                mov eax, dword [rbp - 4]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40023d4	          0x83c020	                           add eax, 0x20	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40023d7	            0xeb19	                           jmp 0x40023f2	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40023d9	          0x8b45fc	                mov eax, dword [rbp - 4]	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40023dc	            0xeb14	                           jmp 0x40023f2	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x40023de	          0x8b45fc	                mov eax, dword [rbp - 4]	      3164	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x40023e1	      0xba900b0000	                          mov edx, 0xb90	      3164	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x40023e6	      0xbe00000000	                              mov esi, 0	      3164	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x40023eb	            0x89c7	                            mov edi, eax	      3164	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x40023ed	      0xe8b2feffff	                    call sym.utf_convert	      3164	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x40023f2	              0xc9	                                   leave	      3165	mbyte.c	ELSE_2	FUNCTION_59
0x40023f3	              0xc3	                                     ret	      3165	mbyte.c	ELSE_2	FUNCTION_59
im_set_active	CALL,2:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	25
0x40044e2	              0x55	                                push rbp	      4859	mbyte.c	FUNCTION_98
0x40044e3	          0x4889e5	                            mov rbp, rsp	      4859	mbyte.c	FUNCTION_98
0x40044e6	        0x4883ec20	                           sub rsp, 0x20	      4859	mbyte.c	FUNCTION_98
0x40044ea	          0x897dec	             mov dword [rbp - 0x14], edi	      4859	mbyte.c	FUNCTION_98
0x40044ed	      0xe800000000	                          call 0x40044f2	      4862	mbyte.c	FUNCTION_98	CALL_1
0x40044f2	            0x85c0	                           test eax, eax	      4862	mbyte.c	FUNCTION_98	CALL_1
0x40044f4	           0xf95c0	                                setne al	      4862	mbyte.c	FUNCTION_98	CALL_1
0x40044f7	           0xfb6c0	                           movzx eax, al	      4862	mbyte.c	FUNCTION_98	CALL_1
0x40044fa	          0x8945fc	                mov dword [rbp - 4], eax	      4862	mbyte.c	FUNCTION_98	CALL_1
0x40044fd	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4863	mbyte.c	FUNCTION_98
0x4004501	            0x7411	                            je 0x4004514	      4863	mbyte.c	FUNCTION_98
0x4004503	    0x8b0500000000	            mov eax, dword [0x04004509] 	      4863	mbyte.c	FUNCTION_98
0x4004509	            0x85c0	                           test eax, eax	      4863	mbyte.c	FUNCTION_98
0x400450b	            0x7507	                           jne 0x4004514	      4863	mbyte.c	FUNCTION_98
0x400450d	      0xb801000000	                              mov eax, 1	      4863	mbyte.c	FUNCTION_98
0x4004512	            0xeb05	                           jmp 0x4004519	      4863	mbyte.c	FUNCTION_98
0x4004514	      0xb800000000	                              mov eax, 0	      4863	mbyte.c	FUNCTION_98
0x4004519	    0x890500000000	            mov dword [0x0400451f], eax 	      4863	mbyte.c	FUNCTION_98
0x400451f	    0x8b0500000000	            mov eax, dword [0x04004525] 	      4865	mbyte.c	FUNCTION_98	IF_1
0x4004525	          0x3b45fc	                cmp eax, dword [rbp - 4]	      4865	mbyte.c	FUNCTION_98	IF_1
0x4004528	            0x7405	                            je 0x400452f	      4865	mbyte.c	FUNCTION_98	IF_1
0x400452a	      0xe800000000	                          call 0x400452f	      4866	mbyte.c	FUNCTION_98	CALL_2
0x400452f	              0x90	                                     nop	      4867	mbyte.c	FUNCTION_98
0x4004530	              0xc9	                                   leave	      4867	mbyte.c	FUNCTION_98
0x4004531	              0xc3	                                     ret	      4867	mbyte.c	FUNCTION_98
xim_set_focus	CALL,2:IF,4:ELSE,1:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	19
0x4004532	              0x55	                                push rbp	      4871	mbyte.c	FUNCTION_99
0x4004533	          0x4889e5	                            mov rbp, rsp	      4871	mbyte.c	FUNCTION_99
0x4004536	        0x4883ec10	                           sub rsp, 0x10	      4871	mbyte.c	FUNCTION_99
0x400453a	          0x897dfc	                mov dword [rbp - 4], edi	      4871	mbyte.c	FUNCTION_99
0x400453d	    0x488b05000000	            mov rax, qword [0x04004544] 	      4872	mbyte.c	FUNCTION_99	IF_1
0x4004544	          0x4885c0	                           test rax, rax	      4872	mbyte.c	FUNCTION_99	IF_1
0x4004547	            0x7426	                            je 0x400456f	      4872	mbyte.c	FUNCTION_99	IF_1
0x4004549	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4874	mbyte.c	FUNCTION_99	IF_1	IF_2
0x400454d	            0x7411	                            je 0x4004560	      4874	mbyte.c	FUNCTION_99	IF_1	IF_2
0x400454f	    0x488b05000000	            mov rax, qword [0x04004556] 	      4875	mbyte.c	FUNCTION_99	IF_1	CALL_1
0x4004556	          0x4889c7	                            mov rdi, rax	      4875	mbyte.c	FUNCTION_99	IF_1	CALL_1
0x4004559	      0xe800000000	                          call 0x400455e	      4875	mbyte.c	FUNCTION_99	IF_1	CALL_1
0x400455e	            0xeb0f	                           jmp 0x400456f	      4879	mbyte.c	FUNCTION_99
0x4004560	    0x488b05000000	            mov rax, qword [0x04004567] 	      4877	mbyte.c	FUNCTION_99	IF_1	CALL_2
0x4004567	          0x4889c7	                            mov rdi, rax	      4877	mbyte.c	FUNCTION_99	IF_1	CALL_2
0x400456a	      0xe800000000	                          call 0x400456f	      4877	mbyte.c	FUNCTION_99	IF_1	CALL_2
0x400456f	              0x90	                                     nop	      4879	mbyte.c	FUNCTION_99
0x4004570	              0xc9	                                   leave	      4879	mbyte.c	FUNCTION_99
0x4004571	              0xc3	                                     ret	      4879	mbyte.c	FUNCTION_99
im_preedit_changed_cb	CALL,17:IF,12:ELSE,5:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	167
0x4004f25	              0x55	                                push rbp	      5335	mbyte.c	FUNCTION_113
0x4004f26	          0x4889e5	                            mov rbp, rsp	      5335	mbyte.c	FUNCTION_113
0x4004f29	        0x4883ec40	                           sub rsp, 0x40	      5335	mbyte.c	FUNCTION_113
0x4004f2d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5335	mbyte.c	FUNCTION_113
0x4004f31	        0x488975c0	             mov qword [rbp - 0x40], rsi	      5335	mbyte.c	FUNCTION_113
0x4004f35	    0x64488b042528	                mov rax, qword fs:[0x28]	      5335	mbyte.c	FUNCTION_113
0x4004f3e	        0x488945f8	                mov qword [rbp - 8], rax	      5335	mbyte.c	FUNCTION_113
0x4004f42	            0x31c0	                            xor eax, eax	      5335	mbyte.c	FUNCTION_113
0x4004f44	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      5336	mbyte.c	FUNCTION_113
0x4004f4c	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      5337	mbyte.c	FUNCTION_113
0x4004f53	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      5338	mbyte.c	FUNCTION_113
0x4004f5a	    0x488b05000000	            mov rax, qword [0x04004f61] 	      5343	mbyte.c	FUNCTION_113	IF_1
0x4004f61	          0x4885c0	                           test rax, rax	      5343	mbyte.c	FUNCTION_113	IF_1
0x4004f64	            0x751e	                           jne 0x4004f84	      5343	mbyte.c	FUNCTION_113	IF_1
0x4004f66	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4004f6a	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4004f6e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4004f72	          0x4889d1	                            mov rcx, rdx	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4004f75	      0xba00000000	                              mov edx, 0	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4004f7a	          0x4889c7	                            mov rdi, rax	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4004f7d	      0xe800000000	                          call 0x4004f82	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4004f82	            0xeb1a	                           jmp 0x4004f9e	      5344	mbyte.c	FUNCTION_113	IF_1	CALL_1
0x4004f84	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x4004f88	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x4004f8c	      0xb900000000	                              mov ecx, 0	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x4004f91	      0xba00000000	                              mov edx, 0	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x4004f96	          0x4889c7	                            mov rdi, rax	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x4004f99	      0xe800000000	                          call 0x4004f9e	      5348	mbyte.c	FUNCTION_113	ELSE_1	CALL_2
0x4004f9e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4004fa2	          0x4885c0	                           test rax, rax	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4004fa5	            0x7519	                           jne 0x4004fc0	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4004fa7	      0xba00000000	                              mov edx, 0	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4004fac	      0xbe00000000	                              mov esi, 0	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4004fb1	      0xbf00000000	                              mov edi, 0	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4004fb6	      0xe800000000	                          call 0x4004fbb	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4004fbb	      0xe9e8010000	                           jmp 0x40051a8	      5356	mbyte.c	FUNCTION_113	CALL_4
0x4004fc0	    0x488b05000000	            mov rax, qword [0x04004fc7] 	      5358	mbyte.c	FUNCTION_113	IF_2
0x4004fc7	        0x4883f801	                              cmp rax, 1	      5358	mbyte.c	FUNCTION_113	IF_2
0x4004fcb	            0x7538	                           jne 0x4005005	      5358	mbyte.c	FUNCTION_113	IF_2
0x4004fcd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5360	mbyte.c	FUNCTION_113	IF_2	IF_3
0x4004fd1	           0xfb600	                   movzx eax, byte [rax]	      5360	mbyte.c	FUNCTION_113	IF_2	IF_3
0x4004fd4	            0x84c0	                             test al, al	      5360	mbyte.c	FUNCTION_113	IF_2	IF_3
0x4004fd6	            0x7514	                           jne 0x4004fec	      5360	mbyte.c	FUNCTION_113	IF_2	IF_3
0x4004fd8	    0xc70500000000	               mov dword [0x04004fe2], 0	      5362	mbyte.c	FUNCTION_113	IF_2	IF_3
0x4004fe2	      0xe854fbffff	              call sym.im_delete_preedit	      5363	mbyte.c	FUNCTION_113	IF_2	IF_3	CALL_5
0x4004fe7	      0xe9a2010000	                           jmp 0x400518e	      5363	mbyte.c	FUNCTION_113	IF_2	IF_3	CALL_5
0x4004fec	    0xc70500000000	               mov dword [0x04004ff6], 1	      5367	mbyte.c	FUNCTION_113	IF_2	ELSE_2
0x4004ff6	      0xb800000000	                              mov eax, 0	      5368	mbyte.c	FUNCTION_113	IF_2	ELSE_2	CALL_6
0x4004ffb	      0xe816fbffff	                call sym.im_show_preedit	      5368	mbyte.c	FUNCTION_113	IF_2	ELSE_2	CALL_6
0x4005000	      0xe989010000	                           jmp 0x400518e	      5368	mbyte.c	FUNCTION_113	IF_2	ELSE_2	CALL_6
0x4005005	    0x8b0500000000	            mov eax, dword [0x0400500b] 	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x400500b	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4005010	            0x751c	                           jne 0x400502e	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4005012	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4005016	           0xfb600	                   movzx eax, byte [rax]	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4005019	            0x84c0	                             test al, al	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x400501b	            0x7411	                            je 0x400502e	      5374	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x400501d	    0xc70500000000	               mov dword [0x04005027], 1	      5376	mbyte.c	FUNCTION_113	ELSE_3	IF_4
0x4005027	      0xe83cf4ffff	         call sym.init_preedit_start_col	      5379	mbyte.c	FUNCTION_113	ELSE_3	IF_4	CALL_7
0x400502c	            0xeb26	                           jmp 0x4005054	      5379	mbyte.c	FUNCTION_113	ELSE_3	IF_4	CALL_7
0x400502e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005031	            0x85c0	                           test eax, eax	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005033	            0x751f	                           jne 0x4005054	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005035	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005039	           0xfb600	                   movzx eax, byte [rax]	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x400503c	            0x84c0	                             test al, al	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x400503e	            0x7514	                           jne 0x4005054	      5381	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005040	    0xc70500000000	               mov dword [0x0400504a], 0	      5383	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x400504a	    0xc70500000000	     mov dword [0x04005054], 0x7fffffff 	      5387	mbyte.c	FUNCTION_113	ELSE_3	ELSE_4	IF_5
0x4005054	      0xe8e2faffff	              call sym.im_delete_preedit	      5390	mbyte.c	FUNCTION_113	ELSE_3	CALL_8
0x4005059	    0x8b0500000000	            mov eax, dword [0x0400505f] 	      5399	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x400505f	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      5399	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x4005064	            0x740c	                            je 0x4005072	      5399	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x4005066	    0x8b0500000000	            mov eax, dword [0x0400506c] 	      5400	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x400506c	    0x890500000000	            mov dword [0x04005072], eax 	      5400	mbyte.c	FUNCTION_113	ELSE_3	IF_6
0x4005072	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5401	mbyte.c	FUNCTION_113	ELSE_3
0x4005076	        0x488945f0	             mov qword [rbp - 0x10], rax	      5401	mbyte.c	FUNCTION_113	ELSE_3
0x400507a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x400507e	        0x488945e8	             mov qword [rbp - 0x18], rax	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005082	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005089	      0xe9bf000000	                           jmp 0x400514d	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x400508e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x4005092	           0xfb600	                   movzx eax, byte [rax]	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x4005095	            0x84c0	                             test al, al	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x4005097	            0x791e	                           jns 0x40050b7	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x4005099	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x400509d	          0x4889c7	                            mov rdi, rax	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40050a0	      0xe800000000	                          call 0x40050a5	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40050a5	            0x89c7	                            mov edi, eax	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40050a7	      0xe800000000	                          call 0x40050ac	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40050ac	            0x85c0	                           test eax, eax	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40050ae	            0x7407	                            je 0x40050b7	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40050b0	      0xb801000000	                              mov eax, 1	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40050b5	            0xeb05	                           jmp 0x40050bc	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40050b7	      0xb800000000	                              mov eax, 0	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40050bc	          0x8945dc	             mov dword [rbp - 0x24], eax	      5406	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_11
0x40050bf	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x40050c3	            0x740a	                            je 0x40050cf	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x40050c5	    0x8b0500000000	            mov eax, dword [0x040050cb] 	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x40050cb	            0x85c0	                           test eax, eax	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x40050cd	            0x7428	                            je 0x40050f7	      5412	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7
0x40050cf	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40050d2	          0x3945d8	            cmp dword [rbp - 0x28], eax 	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40050d5	            0x7d11	                           jge 0x40050e8	      5414	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40050d7	    0x8b0500000000	            mov eax, dword [0x040050dd] 	      5415	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40050dd	          0x83c001	                              add eax, 1	      5415	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40050e0	    0x890500000000	            mov dword [0x040050e6], eax 	      5415	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40050e6	            0xeb0f	                           jmp 0x40050f7	      5415	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	IF_8
0x40050e8	    0x8b0500000000	            mov eax, dword [0x040050ee] 	      5417	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	ELSE_5
0x40050ee	          0x83c001	                              add eax, 1	      5417	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	ELSE_5
0x40050f1	    0x890500000000	            mov dword [0x040050f7], eax 	      5417	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_7	ELSE_5
0x40050f7	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5419	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x40050fb	            0x750c	                           jne 0x4005109	      5419	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x40050fd	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      5419	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x4005100	          0x3945d8	            cmp dword [rbp - 0x28], eax 	      5419	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x4005103	            0x7c04	                            jl 0x4005109	      5419	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x4005105	        0x8345d401	               add dword [rbp - 0x2c], 1	      5423	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	ELSE_5	IF_9
0x4005109	    0x8b0500000000	            mov eax, dword [0x0400510f] 	      5425	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_10
0x400510f	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      5425	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_10
0x4005114	            0x741c	                            je 0x4005132	      5425	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	IF_10
0x4005116	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x400511a	          0x4889c7	                            mov rdi, rax	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x400511d	      0xe800000000	                          call 0x4005122	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x4005122	            0x89c2	                            mov edx, eax	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x4005124	    0x8b0500000000	            mov eax, dword [0x0400512a] 	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x400512a	             0x1d0	                            add eax, edx	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x400512c	    0x890500000000	            mov dword [0x04005132], eax 	      5426	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_12
0x4005132	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005136	           0xfb600	                   movzx eax, byte [rax]	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005139	           0xfb6c0	                           movzx eax, al	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x400513c	            0x89c7	                            mov edi, eax	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x400513e	      0xe800000000	                          call 0x4005143	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005143	            0x4898	                                    cdqe	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005145	        0x480145e8	            add qword [rbp - 0x18], rax 	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005149	        0x8345d801	               add dword [rbp - 0x28], 1	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x400514d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005151	           0xfb600	                   movzx eax, byte [rax]	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005154	            0x84c0	                             test al, al	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x4005156	     0xf8532ffffff	                           jne 0x400508e	      5402	mbyte.c	FUNCTION_113	ELSE_3	FOR_1	CALL_9
0x400515c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5429	mbyte.c	FUNCTION_113	ELSE_3	IF_11
0x4005160	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      5429	mbyte.c	FUNCTION_113	ELSE_3	IF_11
0x4005164	            0x7628	                           jbe 0x400518e	      5429	mbyte.c	FUNCTION_113	ELSE_3	IF_11
0x4005166	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x400516a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x400516e	          0x4829c2	                            sub rdx, rax	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x4005171	          0x4889d0	                            mov rax, rdx	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x4005174	            0x89c2	                            mov edx, eax	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x4005176	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x400517a	            0x89d6	                            mov esi, edx	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x400517c	          0x4889c7	                            mov rdi, rax	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x400517f	      0xe8c2f4ffff	                call sym.im_add_to_input	      5431	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_13
0x4005184	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5432	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_14
0x4005187	            0x89c7	                            mov edi, eax	      5432	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_14
0x4005189	      0xe883faffff	              call sym.im_correct_cursor	      5432	mbyte.c	FUNCTION_113	ELSE_3	IF_11	CALL_14
0x400518e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5436	mbyte.c	FUNCTION_113	CALL_15
0x4005192	          0x4889c7	                            mov rdi, rax	      5436	mbyte.c	FUNCTION_113	CALL_15
0x4005195	      0xe800000000	                          call 0x400519a	      5436	mbyte.c	FUNCTION_113	CALL_15
0x400519a	      0xe800000000	                          call 0x400519f	      5438	mbyte.c	FUNCTION_113	IF_12	CALL_16
0x400519f	            0x85c0	                           test eax, eax	      5438	mbyte.c	FUNCTION_113	IF_12	CALL_16
0x40051a1	            0x7405	                            je 0x40051a8	      5438	mbyte.c	FUNCTION_113	IF_12	CALL_16
0x40051a3	      0xe800000000	                          call 0x40051a8	      5439	mbyte.c	FUNCTION_113	CALL_17
0x40051a8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5440	mbyte.c	FUNCTION_113
0x40051ac	    0x644833042528	                xor rax, qword fs:[0x28]	      5440	mbyte.c	FUNCTION_113
0x40051b5	            0x7405	                            je 0x40051bc	      5440	mbyte.c	FUNCTION_113
0x40051b7	      0xe800000000	                          call 0x40051bc	      5440	mbyte.c	FUNCTION_113
0x40051bc	              0xc9	                                   leave	      5440	mbyte.c	FUNCTION_113
0x40051bd	              0xc3	                                     ret	      5440	mbyte.c	FUNCTION_113
utf_valid_string	CALL,0:IF,3:ELSE,0:DO,0:WHILE,2:functions,0:SWITCH,0:FOR,0	58
0x400321e	              0x55	                                push rbp	      4045	mbyte.c	FUNCTION_75
0x400321f	          0x4889e5	                            mov rbp, rsp	      4045	mbyte.c	FUNCTION_75
0x4003222	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4045	mbyte.c	FUNCTION_75
0x4003226	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4045	mbyte.c	FUNCTION_75
0x400322a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4047	mbyte.c	FUNCTION_75
0x400322e	        0x488945f8	                mov qword [rbp - 8], rax	      4047	mbyte.c	FUNCTION_75
0x4003232	      0xe980000000	                           jmp 0x40032b7	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x4003237	        0x488b45f8	                mov rax, qword [rbp - 8]	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x400323b	           0xfb600	                   movzx eax, byte [rax]	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x400323e	           0xfb6c0	                           movzx eax, al	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x4003241	            0x4898	                                    cdqe	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x4003243	     0xfb680000000	                   movzx eax, byte [rax]	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x400324a	           0xfbec0	                           movsx eax, al	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x400324d	          0x8945f4	              mov dword [rbp - 0xc], eax	      4051	mbyte.c	FUNCTION_75	WHILE_1
0x4003250	        0x837df400	                cmp dword [rbp - 0xc], 0	      4052	mbyte.c	FUNCTION_75	WHILE_1	IF_1
0x4003254	            0x750a	                           jne 0x4003260	      4052	mbyte.c	FUNCTION_75	WHILE_1	IF_1
0x4003256	      0xb800000000	                              mov eax, 0	      4053	mbyte.c	FUNCTION_75	WHILE_1	IF_1
0x400325b	      0xe984000000	                           jmp 0x40032e4	      4053	mbyte.c	FUNCTION_75	WHILE_1	IF_1
0x4003260	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4003265	            0x741a	                            je 0x4003281	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4003267	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x400326a	          0x4863d0	                         movsxd rdx, eax	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x400326d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4003271	          0x4801d0	                            add rax, rdx	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4003274	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4003278	            0x7607	                           jbe 0x4003281	      4054	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x400327a	      0xb800000000	                              mov eax, 0	      4055	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x400327f	            0xeb63	                           jmp 0x40032e4	      4055	mbyte.c	FUNCTION_75	WHILE_1	IF_2
0x4003281	      0x488345f801	                  add qword [rbp - 8], 1	      4056	mbyte.c	FUNCTION_75	WHILE_1
0x4003286	            0xeb25	                           jmp 0x40032ad	      4057	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2
0x4003288	        0x488b45f8	                mov rax, qword [rbp - 8]	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x400328c	        0x488d5001	                      lea rdx, [rax + 1]	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x4003290	        0x488955f8	                mov qword [rbp - 8], rdx	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x4003294	           0xfb600	                   movzx eax, byte [rax]	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x4003297	           0xfb6c0	                           movzx eax, al	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x400329a	      0x25c0000000	                           and eax, 0xc0	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x400329f	      0x3d80000000	                           cmp eax, 0x80	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x40032a4	            0x7407	                            je 0x40032ad	      4058	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x40032a6	      0xb800000000	                              mov eax, 0	      4059	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x40032ab	            0xeb37	                           jmp 0x40032e4	      4059	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2	IF_3
0x40032ad	        0x836df401	                sub dword [rbp - 0xc], 1	      4057	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2
0x40032b1	        0x837df400	                cmp dword [rbp - 0xc], 0	      4057	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2
0x40032b5	            0x7fd1	                            jg 0x4003288	      4057	mbyte.c	FUNCTION_75	WHILE_1	WHILE_2
0x40032b7	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032bc	            0x750e	                           jne 0x40032cc	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032be	        0x488b45f8	                mov rax, qword [rbp - 8]	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032c2	           0xfb600	                   movzx eax, byte [rax]	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032c5	            0x84c0	                             test al, al	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032c7	           0xf95c0	                                setne al	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032ca	            0xeb0b	                           jmp 0x40032d7	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032d0	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032d4	           0xf92c0	                                 setb al	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032d7	            0x84c0	                             test al, al	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032d9	     0xf8558ffffff	                           jne 0x4003237	      4049	mbyte.c	FUNCTION_75	WHILE_1
0x40032df	      0xb801000000	                              mov eax, 1	      4061	mbyte.c	FUNCTION_75
0x40032e4	              0x5d	                                 pop rbp	      4062	mbyte.c	FUNCTION_75
0x40032e5	              0xc3	                                     ret	      4062	mbyte.c	FUNCTION_75
dbcs_screen_tail_off	CALL,2:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	40
0x40032e6	              0x55	                                push rbp	      4071	mbyte.c	FUNCTION_76
0x40032e7	          0x4889e5	                            mov rbp, rsp	      4071	mbyte.c	FUNCTION_76
0x40032ea	        0x4883ec10	                           sub rsp, 0x10	      4071	mbyte.c	FUNCTION_76
0x40032ee	        0x48897df8	                mov qword [rbp - 8], rdi	      4071	mbyte.c	FUNCTION_76
0x40032f2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4071	mbyte.c	FUNCTION_76
0x40032f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4076	mbyte.c	FUNCTION_76	IF_1
0x40032fa	           0xfb600	                   movzx eax, byte [rax]	      4076	mbyte.c	FUNCTION_76	IF_1
0x40032fd	            0x84c0	                             test al, al	      4076	mbyte.c	FUNCTION_76	IF_1
0x40032ff	            0x743e	                            je 0x400333f	      4076	mbyte.c	FUNCTION_76	IF_1
0x4003301	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4076	mbyte.c	FUNCTION_76	IF_1
0x4003305	        0x4883c001	                              add rax, 1	      4076	mbyte.c	FUNCTION_76	IF_1
0x4003309	           0xfb600	                   movzx eax, byte [rax]	      4076	mbyte.c	FUNCTION_76	IF_1
0x400330c	            0x84c0	                             test al, al	      4076	mbyte.c	FUNCTION_76	IF_1
0x400330e	            0x742f	                            je 0x400333f	      4076	mbyte.c	FUNCTION_76	IF_1
0x4003310	    0x8b0500000000	            mov eax, dword [0x04003316] 	      4077	mbyte.c	FUNCTION_76	IF_1
0x4003316	      0x3dcc260000	                         cmp eax, 0x26cc	      4077	mbyte.c	FUNCTION_76	IF_1
0x400331b	            0x750b	                           jne 0x4003328	      4077	mbyte.c	FUNCTION_76	IF_1
0x400331d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4077	mbyte.c	FUNCTION_76	IF_1
0x4003321	           0xfb600	                   movzx eax, byte [rax]	      4077	mbyte.c	FUNCTION_76	IF_1
0x4003324	            0x3c8e	                            cmp al, 0x8e	      4077	mbyte.c	FUNCTION_76	IF_1
0x4003326	            0x7417	                            je 0x400333f	      4077	mbyte.c	FUNCTION_76	IF_1
0x4003328	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x400332c	           0xfb600	                   movzx eax, byte [rax]	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x400332f	           0xfb6c0	                           movzx eax, al	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x4003332	            0x4898	                                    cdqe	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x4003334	     0xfb680000000	                   movzx eax, byte [rax]	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x400333b	            0x3c01	                               cmp al, 1	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x400333d	            0x7507	                           jne 0x4003346	      4078	mbyte.c	FUNCTION_76	IF_1	CALL_1
0x400333f	      0xb800000000	                              mov eax, 0	      4079	mbyte.c	FUNCTION_76	IF_1
0x4003344	            0xeb1c	                           jmp 0x4003362	      4079	mbyte.c	FUNCTION_76	IF_1
0x4003346	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4082	mbyte.c	FUNCTION_76	CALL_2
0x400334a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4082	mbyte.c	FUNCTION_76	CALL_2
0x400334e	          0x4889d6	                            mov rsi, rdx	      4082	mbyte.c	FUNCTION_76	CALL_2
0x4003351	          0x4889c7	                            mov rdi, rax	      4082	mbyte.c	FUNCTION_76	CALL_2
0x4003354	      0xe800000000	                          call 0x4003359	      4082	mbyte.c	FUNCTION_76	CALL_2
0x4003359	      0xba01000000	                              mov edx, 1	      4082	mbyte.c	FUNCTION_76	CALL_2
0x400335e	            0x29c2	                            sub edx, eax	      4082	mbyte.c	FUNCTION_76	CALL_2
0x4003360	            0x89d0	                            mov eax, edx	      4082	mbyte.c	FUNCTION_76	CALL_2
0x4003362	              0xc9	                                   leave	      4083	mbyte.c	FUNCTION_76
0x4003363	              0xc3	                                     ret	      4083	mbyte.c	FUNCTION_76
mb_fix_col	CALL,3:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	87
0x40037d6	              0x55	                                push rbp	      4263	mbyte.c	FUNCTION_84
0x40037d7	          0x4889e5	                            mov rbp, rsp	      4263	mbyte.c	FUNCTION_84
0x40037da	        0x4883ec10	                           sub rsp, 0x10	      4263	mbyte.c	FUNCTION_84
0x40037de	          0x897dfc	                mov dword [rbp - 4], edi	      4263	mbyte.c	FUNCTION_84
0x40037e1	          0x8975f8	                mov dword [rbp - 8], esi	      4263	mbyte.c	FUNCTION_84
0x40037e4	          0x8b45fc	                mov eax, dword [rbp - 4]	      4264	mbyte.c	FUNCTION_84	CALL_1
0x40037e7	            0x89c7	                            mov edi, eax	      4264	mbyte.c	FUNCTION_84	CALL_1
0x40037e9	      0xe800000000	                          call 0x40037ee	      4264	mbyte.c	FUNCTION_84	CALL_1
0x40037ee	          0x8945fc	                mov dword [rbp - 4], eax	      4264	mbyte.c	FUNCTION_84	CALL_1
0x40037f1	          0x8b45f8	                mov eax, dword [rbp - 8]	      4265	mbyte.c	FUNCTION_84	CALL_2
0x40037f4	            0x89c7	                            mov edi, eax	      4265	mbyte.c	FUNCTION_84	CALL_2
0x40037f6	      0xe800000000	                          call 0x40037fb	      4265	mbyte.c	FUNCTION_84	CALL_2
0x40037fb	          0x8945f8	                mov dword [rbp - 8], eax	      4265	mbyte.c	FUNCTION_84	CALL_2
0x40037fe	    0x8b0500000000	            mov eax, dword [0x04003804] 	      4266	mbyte.c	FUNCTION_84	IF_1
0x4003804	            0x85c0	                           test eax, eax	      4266	mbyte.c	FUNCTION_84	IF_1
0x4003806	     0xf84f2000000	                            je 0x40038fe	      4266	mbyte.c	FUNCTION_84	IF_1
0x400380c	    0x488b05000000	            mov rax, qword [0x04003813] 	      4266	mbyte.c	FUNCTION_84	IF_1
0x4003813	          0x4885c0	                           test rax, rax	      4266	mbyte.c	FUNCTION_84	IF_1
0x4003816	     0xf84e2000000	                            je 0x40038fe	      4266	mbyte.c	FUNCTION_84	IF_1
0x400381c	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4266	mbyte.c	FUNCTION_84	IF_1
0x4003820	     0xf8ed8000000	                           jle 0x40038fe	      4266	mbyte.c	FUNCTION_84	IF_1
0x4003826	    0x8b0500000000	            mov eax, dword [0x0400382c] 	      4267	mbyte.c	FUNCTION_84	IF_1
0x400382c	            0x85c0	                           test eax, eax	      4267	mbyte.c	FUNCTION_84	IF_1
0x400382e	     0xf848a000000	                            je 0x40038be	      4267	mbyte.c	FUNCTION_84	IF_1
0x4003834	    0x488b05000000	            mov rax, qword [0x0400383b] 	      4268	mbyte.c	FUNCTION_84	IF_1
0x400383b	    0x488b15000000	            mov rdx, qword [0x04003842] 	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003842	          0x8b4df8	                mov ecx, dword [rbp - 8]	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003845	          0x4863c9	                         movsxd rcx, ecx	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003848	        0x48c1e102	                              shl rcx, 2	      4268	mbyte.c	FUNCTION_84	IF_1
0x400384c	          0x4801ca	                            add rdx, rcx	      4268	mbyte.c	FUNCTION_84	IF_1
0x400384f	            0x8b0a	                    mov ecx, dword [rdx]	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003851	          0x8b55fc	                mov edx, dword [rbp - 4]	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003854	             0x1ca	                            add edx, ecx	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003856	            0x89d2	                            mov edx, edx	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003858	          0x4801d0	                            add rax, rdx	      4268	mbyte.c	FUNCTION_84	IF_1
0x400385b	           0xfb600	                   movzx eax, byte [rax]	      4268	mbyte.c	FUNCTION_84	IF_1
0x400385e	            0x84c0	                             test al, al	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003860	            0x745c	                            je 0x40038be	      4268	mbyte.c	FUNCTION_84	IF_1
0x4003862	    0x488b05000000	            mov rax, qword [0x04003869] 	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x4003869	    0x488b15000000	            mov rdx, qword [0x04003870] 	      4270	mbyte.c	FUNCTION_84	IF_1
0x4003870	          0x8b4df8	                mov ecx, dword [rbp - 8]	      4270	mbyte.c	FUNCTION_84	IF_1
0x4003873	          0x4863c9	                         movsxd rcx, ecx	      4270	mbyte.c	FUNCTION_84	IF_1
0x4003876	        0x48c1e102	                              shl rcx, 2	      4270	mbyte.c	FUNCTION_84	IF_1
0x400387a	          0x4801ca	                            add rdx, rcx	      4270	mbyte.c	FUNCTION_84	IF_1
0x400387d	            0x8b12	                    mov edx, dword [rdx]	      4270	mbyte.c	FUNCTION_84	IF_1
0x400387f	            0x89d1	                            mov ecx, edx	      4270	mbyte.c	FUNCTION_84	IF_1
0x4003881	          0x8b55fc	                mov edx, dword [rbp - 4]	      4270	mbyte.c	FUNCTION_84	IF_1
0x4003884	          0x4863d2	                         movsxd rdx, edx	      4270	mbyte.c	FUNCTION_84	IF_1
0x4003887	          0x4801ca	                            add rdx, rcx	      4270	mbyte.c	FUNCTION_84	IF_1
0x400388a	          0x4801c2	                            add rdx, rax	      4270	mbyte.c	FUNCTION_84	IF_1
0x400388d	    0x488b05000000	            mov rax, qword [0x04003894] 	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x4003894	    0x488b0d000000	            mov rcx, qword [0x0400389b] 	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x400389b	          0x8b75f8	                mov esi, dword [rbp - 8]	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x400389e	          0x4863f6	                         movsxd rsi, esi	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40038a1	        0x48c1e602	                              shl rsi, 2	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40038a5	          0x4801f1	                            add rcx, rsi	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40038a8	            0x8b09	                    mov ecx, dword [rcx]	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40038aa	            0x89c9	                            mov ecx, ecx	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40038ac	          0x4801c8	                            add rax, rcx	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40038af	          0x4889d6	                            mov rsi, rdx	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40038b2	          0x4889c7	                            mov rdi, rax	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40038b5	      0xe800000000	                          call 0x40038ba	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40038ba	            0x85c0	                           test eax, eax	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40038bc	            0x7538	                           jne 0x40038f6	      4269	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x40038be	    0x8b0500000000	            mov eax, dword [0x040038c4] 	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038c4	            0x85c0	                           test eax, eax	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038c6	            0x7436	                            je 0x40038fe	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038c8	    0x488b05000000	            mov rax, qword [0x040038cf] 	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038cf	    0x488b15000000	            mov rdx, qword [0x040038d6] 	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038d6	          0x8b4df8	                mov ecx, dword [rbp - 8]	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038d9	          0x4863c9	                         movsxd rcx, ecx	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038dc	        0x48c1e102	                              shl rcx, 2	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038e0	          0x4801ca	                            add rdx, rcx	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038e3	            0x8b0a	                    mov ecx, dword [rdx]	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038e5	          0x8b55fc	                mov edx, dword [rbp - 4]	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038e8	             0x1ca	                            add edx, ecx	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038ea	            0x89d2	                            mov edx, edx	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038ec	          0x4801d0	                            add rax, rdx	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038ef	           0xfb600	                   movzx eax, byte [rax]	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038f2	            0x84c0	                             test al, al	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038f4	            0x7508	                           jne 0x40038fe	      4271	mbyte.c	FUNCTION_84	IF_1
0x40038f6	          0x8b45fc	                mov eax, dword [rbp - 4]	      4272	mbyte.c	FUNCTION_84	IF_1
0x40038f9	          0x83e801	                              sub eax, 1	      4272	mbyte.c	FUNCTION_84	IF_1
0x40038fc	            0xeb03	                           jmp 0x4003901	      4272	mbyte.c	FUNCTION_84	IF_1
0x40038fe	          0x8b45fc	                mov eax, dword [rbp - 4]	      4273	mbyte.c	FUNCTION_84
0x4003901	              0xc9	                                   leave	      4274	mbyte.c	FUNCTION_84
0x4003902	              0xc3	                                     ret	      4274	mbyte.c	FUNCTION_84
im_preedit_window_open	CALL,54:IF,4:ELSE,1:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	172
0x4004828	              0x55	                                push rbp	      4953	mbyte.c	FUNCTION_104
0x4004829	          0x4889e5	                            mov rbp, rsp	      4953	mbyte.c	FUNCTION_104
0x400482c	            0x4154	                                push r12	      4953	mbyte.c	FUNCTION_104
0x400482e	              0x53	                                push rbx	      4953	mbyte.c	FUNCTION_104
0x400482f	        0x4883ec40	                           sub rsp, 0x40	      4953	mbyte.c	FUNCTION_104
0x4004833	    0x64488b042528	                mov rax, qword fs:[0x28]	      4953	mbyte.c	FUNCTION_104
0x400483c	        0x488945e8	             mov qword [rbp - 0x18], rax	      4953	mbyte.c	FUNCTION_104
0x4004840	            0x31c0	                            xor eax, eax	      4953	mbyte.c	FUNCTION_104
0x4004842	    0x488b05000000	            mov rax, qword [0x04004849] 	      4969	mbyte.c	FUNCTION_104	IF_1
0x4004849	          0x4885c0	                           test rax, rax	      4969	mbyte.c	FUNCTION_104	IF_1
0x400484c	     0xf85a4000000	                           jne 0x40048f6	      4969	mbyte.c	FUNCTION_104	IF_1
0x4004852	      0xbf01000000	                              mov edi, 1	      4971	mbyte.c	FUNCTION_104	IF_1	CALL_1
0x4004857	      0xe800000000	                          call 0x400485c	      4971	mbyte.c	FUNCTION_104	IF_1	CALL_1
0x400485c	    0x488905000000	            mov qword [0x04004863], rax 	      4971	mbyte.c	FUNCTION_104	IF_1	CALL_1
0x4004863	      0xe800000000	                          call 0x4004868	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4004868	          0x4889c2	                            mov rdx, rax	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x400486b	    0x488b05000000	            mov rax, qword [0x04004872] 	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4004872	          0x4889d6	                            mov rsi, rdx	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4004875	          0x4889c7	                            mov rdi, rax	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4004878	      0xe800000000	                          call 0x400487d	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x400487d	          0x4889c3	                            mov rbx, rax	      4973	mbyte.c	FUNCTION_104	IF_1	CALL_4
0x4004880	      0xe800000000	                          call 0x4004885	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4004885	          0x4889c2	                            mov rdx, rax	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4004888	    0x488b05000000	            mov rax, qword [0x0400488f] 	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x400488f	          0x4889d6	                            mov rsi, rdx	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4004892	          0x4889c7	                            mov rdi, rax	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x4004895	      0xe800000000	                          call 0x400489a	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x400489a	          0x4889de	                            mov rsi, rbx	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x400489d	          0x4889c7	                            mov rdi, rax	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x40048a0	      0xe800000000	                          call 0x40048a5	      4972	mbyte.c	FUNCTION_104	IF_1	CALL_3
0x40048a5	      0xbf00000000	                              mov edi, 0	      4974	mbyte.c	FUNCTION_104	IF_1	CALL_5
0x40048aa	      0xe800000000	                          call 0x40048af	      4974	mbyte.c	FUNCTION_104	IF_1	CALL_5
0x40048af	    0x488905000000	            mov qword [0x040048b6], rax 	      4974	mbyte.c	FUNCTION_104	IF_1	CALL_5
0x40048b6	    0x488b05000000	            mov rax, qword [0x040048bd] 	      4975	mbyte.c	FUNCTION_104	IF_1	CALL_6
0x40048bd	      0xbe00000000	                              mov esi, 0	      4975	mbyte.c	FUNCTION_104	IF_1	CALL_6
0x40048c2	          0x4889c7	                            mov rdi, rax	      4975	mbyte.c	FUNCTION_104	IF_1	CALL_6
0x40048c5	      0xe800000000	                          call 0x40048ca	      4975	mbyte.c	FUNCTION_104	IF_1	CALL_6
0x40048ca	    0x488b1d000000	            mov rbx, qword [0x040048d1] 	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x40048d1	      0xe800000000	                          call 0x40048d6	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x40048d6	          0x4889c2	                            mov rdx, rax	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x40048d9	    0x488b05000000	            mov rax, qword [0x040048e0] 	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x40048e0	          0x4889d6	                            mov rsi, rdx	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x40048e3	          0x4889c7	                            mov rdi, rax	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x40048e6	      0xe800000000	                          call 0x40048eb	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x40048eb	          0x4889de	                            mov rsi, rbx	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x40048ee	          0x4889c7	                            mov rdi, rax	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x40048f1	      0xe800000000	                          call 0x40048f6	      4976	mbyte.c	FUNCTION_104	IF_1	CALL_8
0x40048f6	    0x488b15000000	            mov rdx, qword [0x040048fd] 	      5041	mbyte.c	FUNCTION_104	CALL_33
0x40048fd	    0x488b05000000	            mov rax, qword [0x04004904] 	      5041	mbyte.c	FUNCTION_104	CALL_33
0x4004904	          0x4889d6	                            mov rsi, rdx	      5041	mbyte.c	FUNCTION_104	CALL_33
0x4004907	          0x4889c7	                            mov rdi, rax	      5041	mbyte.c	FUNCTION_104	CALL_33
0x400490a	      0xe800000000	                          call 0x400490f	      5041	mbyte.c	FUNCTION_104	CALL_33
0x400490f	    0x488b05000000	            mov rax, qword [0x04004916] 	      5043	mbyte.c	FUNCTION_104	CALL_34
0x4004916	            0x89c2	                            mov edx, eax	      5043	mbyte.c	FUNCTION_104	CALL_34
0x4004918	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5043	mbyte.c	FUNCTION_104	CALL_34
0x400491c	            0x89d1	                            mov ecx, edx	      5043	mbyte.c	FUNCTION_104	CALL_34
0x400491e	      0xba00000000	                              mov edx, 0	      5043	mbyte.c	FUNCTION_104	CALL_34
0x4004923	      0xbe08000000	                              mov esi, 8	      5043	mbyte.c	FUNCTION_104	CALL_34
0x4004928	          0x4889c7	                            mov rdi, rax	      5043	mbyte.c	FUNCTION_104	CALL_34
0x400492b	      0xb800000000	                              mov eax, 0	      5043	mbyte.c	FUNCTION_104	CALL_34
0x4004930	      0xe800000000	                          call 0x4004935	      5043	mbyte.c	FUNCTION_104	CALL_34
0x4004935	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      5044	mbyte.c	FUNCTION_104	CALL_35
0x4004939	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5044	mbyte.c	FUNCTION_104	CALL_35
0x400493d	          0x4889d6	                            mov rsi, rdx	      5044	mbyte.c	FUNCTION_104	CALL_35
0x4004940	          0x4889c7	                            mov rdi, rax	      5044	mbyte.c	FUNCTION_104	CALL_35
0x4004943	      0xe800000000	                          call 0x4004948	      5044	mbyte.c	FUNCTION_104	CALL_35
0x4004948	    0x488b05000000	            mov rax, qword [0x0400494f] 	      5045	mbyte.c	FUNCTION_104	CALL_36
0x400494f	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      5045	mbyte.c	FUNCTION_104	CALL_36
0x4004953	      0xbe00000000	                              mov esi, 0	      5045	mbyte.c	FUNCTION_104	CALL_36
0x4004958	          0x4889c7	                            mov rdi, rax	      5045	mbyte.c	FUNCTION_104	CALL_36
0x400495b	      0xe800000000	                          call 0x4004960	      5045	mbyte.c	FUNCTION_104	CALL_36
0x4004960	    0x488b05000000	            mov rax, qword [0x04004967] 	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4004967	            0x89c2	                            mov edx, eax	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4004969	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5047	mbyte.c	FUNCTION_104	CALL_37
0x400496d	            0x89d1	                            mov ecx, edx	      5047	mbyte.c	FUNCTION_104	CALL_37
0x400496f	      0xba00000000	                              mov edx, 0	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4004974	      0xbe08000000	                              mov esi, 8	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4004979	          0x4889c7	                            mov rdi, rax	      5047	mbyte.c	FUNCTION_104	CALL_37
0x400497c	      0xb800000000	                              mov eax, 0	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4004981	      0xe800000000	                          call 0x4004986	      5047	mbyte.c	FUNCTION_104	CALL_37
0x4004986	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      5048	mbyte.c	FUNCTION_104	CALL_38
0x400498a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5048	mbyte.c	FUNCTION_104	CALL_38
0x400498e	          0x4889d6	                            mov rsi, rdx	      5048	mbyte.c	FUNCTION_104	CALL_38
0x4004991	          0x4889c7	                            mov rdi, rax	      5048	mbyte.c	FUNCTION_104	CALL_38
0x4004994	      0xe800000000	                          call 0x4004999	      5048	mbyte.c	FUNCTION_104	CALL_38
0x4004999	    0x488b05000000	            mov rax, qword [0x040049a0] 	      5049	mbyte.c	FUNCTION_104	CALL_39
0x40049a0	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      5049	mbyte.c	FUNCTION_104	CALL_39
0x40049a4	      0xbe00000000	                              mov esi, 0	      5049	mbyte.c	FUNCTION_104	CALL_39
0x40049a9	          0x4889c7	                            mov rdi, rax	      5049	mbyte.c	FUNCTION_104	CALL_39
0x40049ac	      0xe800000000	                          call 0x40049b1	      5049	mbyte.c	FUNCTION_104	CALL_39
0x40049b1	    0x488b05000000	            mov rax, qword [0x040049b8] 	      5052	mbyte.c	FUNCTION_104	CALL_40
0x40049b8	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      5052	mbyte.c	FUNCTION_104	CALL_40
0x40049bc	        0x488d75b8	                   lea rsi, [rbp - 0x48]	      5052	mbyte.c	FUNCTION_104	CALL_40
0x40049c0	      0xb900000000	                              mov ecx, 0	      5052	mbyte.c	FUNCTION_104	CALL_40
0x40049c5	          0x4889c7	                            mov rdi, rax	      5052	mbyte.c	FUNCTION_104	CALL_40
0x40049c8	      0xe800000000	                          call 0x40049cd	      5052	mbyte.c	FUNCTION_104	CALL_40
0x40049cd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5054	mbyte.c	FUNCTION_104	IF_4
0x40049d1	           0xfb600	                   movzx eax, byte [rax]	      5054	mbyte.c	FUNCTION_104	IF_4
0x40049d4	            0x84c0	                             test al, al	      5054	mbyte.c	FUNCTION_104	IF_4
0x40049d6	     0xf84e2000000	                            je 0x4004abe	      5054	mbyte.c	FUNCTION_104	IF_4
0x40049dc	        0x488b5db8	             mov rbx, qword [rbp - 0x48]	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40049e0	      0xe800000000	                          call 0x40049e5	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40049e5	          0x4889c2	                            mov rdx, rax	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40049e8	    0x488b05000000	            mov rax, qword [0x040049ef] 	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40049ef	          0x4889d6	                            mov rsi, rdx	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40049f2	          0x4889c7	                            mov rdi, rax	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40049f5	      0xe800000000	                          call 0x40049fa	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40049fa	          0x4889de	                            mov rsi, rbx	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x40049fd	          0x4889c7	                            mov rdi, rax	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x4004a00	      0xe800000000	                          call 0x4004a05	      5056	mbyte.c	FUNCTION_104	IF_4	CALL_42
0x4004a05	        0x488b5dc0	             mov rbx, qword [rbp - 0x40]	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004a09	      0xe800000000	                          call 0x4004a0e	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004a0e	          0x4889c2	                            mov rdx, rax	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004a11	    0x488b05000000	            mov rax, qword [0x04004a18] 	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004a18	          0x4889d6	                            mov rsi, rdx	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004a1b	          0x4889c7	                            mov rdi, rax	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004a1e	      0xe800000000	                          call 0x4004a23	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004a23	          0x4889de	                            mov rsi, rbx	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004a26	          0x4889c7	                            mov rdi, rax	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004a29	      0xe800000000	                          call 0x4004a2e	      5057	mbyte.c	FUNCTION_104	IF_4	CALL_44
0x4004a2e	      0xe800000000	                          call 0x4004a33	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4004a33	          0x4889c2	                            mov rdx, rax	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4004a36	    0x488b05000000	            mov rax, qword [0x04004a3d] 	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4004a3d	          0x4889d6	                            mov rsi, rdx	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4004a40	          0x4889c7	                            mov rdi, rax	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4004a43	      0xe800000000	                          call 0x4004a48	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4004a48	          0x4889c7	                            mov rdi, rax	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4004a4b	      0xe800000000	                          call 0x4004a50	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4004a50	        0x488945c8	             mov qword [rbp - 0x38], rax	      5059	mbyte.c	FUNCTION_104	IF_4	CALL_46
0x4004a54	        0x488d55b4	                   lea rdx, [rbp - 0x4c]	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x4004a58	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x4004a5c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x4004a60	          0x4889ce	                            mov rsi, rcx	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x4004a63	          0x4889c7	                            mov rdi, rax	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x4004a66	      0xe800000000	                          call 0x4004a6b	      5060	mbyte.c	FUNCTION_104	IF_4	CALL_47
0x4004a6b	    0x8b1500000000	            mov edx, dword [0x04004a71] 	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x4004a71	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x4004a74	            0x39c2	                            cmp edx, eax	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x4004a76	           0xf4dc2	                         cmovge eax, edx	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x4004a79	          0x8945b4	             mov dword [rbp - 0x4c], eax	      5061	mbyte.c	FUNCTION_104	IF_4	CALL_48
0x4004a7c	        0x448b65b4	            mov r12d, dword [rbp - 0x4c]	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004a80	          0x8b5db0	             mov ebx, dword [rbp - 0x50]	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004a83	      0xe800000000	                          call 0x4004a88	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004a88	          0x4889c2	                            mov rdx, rax	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004a8b	    0x488b05000000	            mov rax, qword [0x04004a92] 	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004a92	          0x4889d6	                            mov rsi, rdx	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004a95	          0x4889c7	                            mov rdi, rax	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004a98	      0xe800000000	                          call 0x4004a9d	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004a9d	          0x4489e2	                           mov edx, r12d	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004aa0	            0x89de	                            mov esi, ebx	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004aa2	          0x4889c7	                            mov rdi, rax	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004aa5	      0xe800000000	                          call 0x4004aaa	      5062	mbyte.c	FUNCTION_104	IF_4	CALL_50
0x4004aaa	    0x488b05000000	            mov rax, qword [0x04004ab1] 	      5064	mbyte.c	FUNCTION_104	IF_4	CALL_51
0x4004ab1	          0x4889c7	                            mov rdi, rax	      5064	mbyte.c	FUNCTION_104	IF_4	CALL_51
0x4004ab4	      0xe800000000	                          call 0x4004ab9	      5064	mbyte.c	FUNCTION_104	IF_4	CALL_51
0x4004ab9	      0xe814fcffff	 call sym.im_preedit_window_set_position	      5066	mbyte.c	FUNCTION_104	IF_4	CALL_52
0x4004abe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5069	mbyte.c	FUNCTION_104	CALL_53
0x4004ac2	          0x4889c7	                            mov rdi, rax	      5069	mbyte.c	FUNCTION_104	CALL_53
0x4004ac5	      0xe800000000	                          call 0x4004aca	      5069	mbyte.c	FUNCTION_104	CALL_53
0x4004aca	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5070	mbyte.c	FUNCTION_104	CALL_54
0x4004ace	          0x4889c7	                            mov rdi, rax	      5070	mbyte.c	FUNCTION_104	CALL_54
0x4004ad1	      0xe800000000	                          call 0x4004ad6	      5070	mbyte.c	FUNCTION_104	CALL_54
0x4004ad6	              0x90	                                     nop	      5071	mbyte.c	FUNCTION_104
0x4004ad7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5071	mbyte.c	FUNCTION_104
0x4004adb	    0x644833042528	                xor rax, qword fs:[0x28]	      5071	mbyte.c	FUNCTION_104
0x4004ae4	            0x7405	                            je 0x4004aeb	      5071	mbyte.c	FUNCTION_104
0x4004ae6	      0xe800000000	                          call 0x4004aeb	      5071	mbyte.c	FUNCTION_104
0x4004aeb	        0x4883c440	                           add rsp, 0x40	      5071	mbyte.c	FUNCTION_104
0x4004aef	              0x5b	                                 pop rbx	      5071	mbyte.c	FUNCTION_104
0x4004af0	            0x415c	                                 pop r12	      5071	mbyte.c	FUNCTION_104
0x4004af2	              0x5d	                                 pop rbp	      5071	mbyte.c	FUNCTION_104
0x4004af3	              0xc3	                                     ret	      5071	mbyte.c	FUNCTION_104
mb_get_class	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	11
0x40008b8	              0x55	                                push rbp	       878	mbyte.c	ELSE_1	FUNCTION_7
0x40008b9	          0x4889e5	                            mov rbp, rsp	       878	mbyte.c	ELSE_1	FUNCTION_7
0x40008bc	        0x4883ec10	                           sub rsp, 0x10	       878	mbyte.c	ELSE_1	FUNCTION_7
0x40008c0	        0x48897df8	                mov qword [rbp - 8], rdi	       878	mbyte.c	ELSE_1	FUNCTION_7
0x40008c4	    0x488b15000000	            mov rdx, qword [0x040008cb] 	       879	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x40008cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       879	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x40008cf	          0x4889d6	                            mov rsi, rdx	       879	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x40008d2	          0x4889c7	                            mov rdi, rax	       879	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x40008d5	      0xe800000000	                          call 0x40008da	       879	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x40008da	              0xc9	                                   leave	       880	mbyte.c	ELSE_1	FUNCTION_7
0x40008db	              0xc3	                                     ret	       880	mbyte.c	ELSE_1	FUNCTION_7
bomb_size	CALL,4:IF,7:ELSE,4:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	67
0x4000700	              0x55	                                push rbp	       823	mbyte.c	FUNCTION_5
0x4000701	          0x4889e5	                            mov rbp, rsp	       823	mbyte.c	FUNCTION_5
0x4000704	        0x4883ec10	                           sub rsp, 0x10	       823	mbyte.c	FUNCTION_5
0x4000708	    0xc745fc000000	                  mov dword [rbp - 4], 0	       824	mbyte.c	FUNCTION_5
0x400070f	    0x488b05000000	            mov rax, qword [0x04000716] 	       826	mbyte.c	FUNCTION_5	IF_1
0x4000716	    0x8b800c140000	          mov eax, dword [rax + 0x140c] 	       826	mbyte.c	FUNCTION_5	IF_1
0x400071c	            0x85c0	                           test eax, eax	       826	mbyte.c	FUNCTION_5	IF_1
0x400071e	     0xf8400010000	                            je 0x4000824	       826	mbyte.c	FUNCTION_5	IF_1
0x4000724	    0x488b05000000	            mov rax, qword [0x0400072b] 	       826	mbyte.c	FUNCTION_5	IF_1
0x400072b	    0x8b8008140000	          mov eax, dword [rax + 0x1408] 	       826	mbyte.c	FUNCTION_5	IF_1
0x4000731	            0x85c0	                           test eax, eax	       826	mbyte.c	FUNCTION_5	IF_1
0x4000733	     0xf85eb000000	                           jne 0x4000824	       826	mbyte.c	FUNCTION_5	IF_1
0x4000739	    0x488b05000000	            mov rax, qword [0x04000740] 	       828	mbyte.c	FUNCTION_5	IF_1	IF_2
0x4000740	    0x488b80881400	          mov rax, qword [rax + 0x1488] 	       828	mbyte.c	FUNCTION_5	IF_1	IF_2
0x4000747	           0xfb600	                   movzx eax, byte [rax]	       828	mbyte.c	FUNCTION_5	IF_1	IF_2
0x400074a	            0x84c0	                             test al, al	       828	mbyte.c	FUNCTION_5	IF_1	IF_2
0x400074c	            0x7532	                           jne 0x4000780	       828	mbyte.c	FUNCTION_5	IF_1	IF_2
0x400074e	    0x8b0500000000	            mov eax, dword [0x04000754] 	       830	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000754	            0x85c0	                           test eax, eax	       830	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000756	     0xf84c8000000	                            je 0x4000824	       830	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3
0x400075c	    0x8b0500000000	            mov eax, dword [0x04000762] 	       832	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x4000762	            0x85c0	                           test eax, eax	       832	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x4000764	            0x740e	                            je 0x4000774	       832	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x4000766	    0x8b0500000000	            mov eax, dword [0x0400076c] 	       833	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x400076c	          0x8945fc	                mov dword [rbp - 4], eax	       833	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x400076f	      0xe9b0000000	                           jmp 0x4000824	       833	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x4000774	    0xc745fc030000	                  mov dword [rbp - 4], 3	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x400077b	      0xe9a4000000	                           jmp 0x4000824	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x4000780	    0x488b05000000	            mov rax, qword [0x04000787] 	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000787	    0x488b80881400	          mov rax, qword [rax + 0x1488] 	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x400078e	      0xbe00000000	                              mov esi, 0	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000793	          0x4889c7	                            mov rdi, rax	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x4000796	      0xe800000000	                          call 0x400079b	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x400079b	            0x85c0	                           test eax, eax	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x400079d	            0x7509	                           jne 0x40007a8	       838	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x400079f	    0xc745fc030000	                  mov dword [rbp - 4], 3	       839	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5
0x40007a6	            0xeb7c	                           jmp 0x4000824	       839	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5
0x40007a8	    0x488b05000000	            mov rax, qword [0x040007af] 	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x40007af	    0x488b80881400	          mov rax, qword [rax + 0x1488] 	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x40007b6	      0xba05000000	                              mov edx, 5	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x40007bb	      0xbe00000000	                              mov esi, 0	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x40007c0	          0x4889c7	                            mov rdi, rax	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x40007c3	      0xe800000000	                          call 0x40007c8	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x40007c8	            0x85c0	                           test eax, eax	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x40007ca	            0x7424	                            je 0x40007f0	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x40007cc	    0x488b05000000	            mov rax, qword [0x040007d3] 	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x40007d3	    0x488b80881400	          mov rax, qword [rax + 0x1488] 	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x40007da	      0xba06000000	                              mov edx, 6	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x40007df	      0xbe00000000	                              mov esi, 0	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x40007e4	          0x4889c7	                            mov rdi, rax	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x40007e7	      0xe800000000	                          call 0x40007ec	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x40007ec	            0x85c0	                           test eax, eax	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x40007ee	            0x7509	                           jne 0x40007f9	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x40007f0	    0xc745fc020000	                  mov dword [rbp - 4], 2	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6
0x40007f7	            0xeb2b	                           jmp 0x4000824	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6
0x40007f9	    0x488b05000000	            mov rax, qword [0x04000800] 	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000800	    0x488b80881400	          mov rax, qword [rax + 0x1488] 	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000807	      0xba05000000	                              mov edx, 5	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x400080c	      0xbe00000000	                              mov esi, 0	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000811	          0x4889c7	                            mov rdi, rax	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000814	      0xe800000000	                          call 0x4000819	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x4000819	            0x85c0	                           test eax, eax	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x400081b	            0x7507	                           jne 0x4000824	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x400081d	    0xc745fc040000	                  mov dword [rbp - 4], 4	       844	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7
0x4000824	          0x8b45fc	                mov eax, dword [rbp - 4]	       846	mbyte.c	FUNCTION_5
0x4000827	              0xc9	                                   leave	       847	mbyte.c	FUNCTION_5
0x4000828	              0xc3	                                     ret	       847	mbyte.c	FUNCTION_5
utf_char2len	CALL,0:IF,5:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	26
0x4001e47	              0x55	                                push rbp	      2244	mbyte.c	FUNCTION_50
0x4001e48	          0x4889e5	                            mov rbp, rsp	      2244	mbyte.c	FUNCTION_50
0x4001e4b	          0x897dfc	                mov dword [rbp - 4], edi	      2244	mbyte.c	FUNCTION_50
0x4001e4e	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      2245	mbyte.c	FUNCTION_50	IF_1
0x4001e52	            0x7f07	                            jg 0x4001e5b	      2245	mbyte.c	FUNCTION_50	IF_1
0x4001e54	      0xb801000000	                              mov eax, 1	      2246	mbyte.c	FUNCTION_50	IF_1
0x4001e59	            0xeb45	                           jmp 0x4001ea0	      2246	mbyte.c	FUNCTION_50	IF_1
0x4001e5b	    0x817dfcff0700	              cmp dword [rbp - 4], 0x7ff	      2247	mbyte.c	FUNCTION_50	IF_2
0x4001e62	            0x7f07	                            jg 0x4001e6b	      2247	mbyte.c	FUNCTION_50	IF_2
0x4001e64	      0xb802000000	                              mov eax, 2	      2248	mbyte.c	FUNCTION_50	IF_2
0x4001e69	            0xeb35	                           jmp 0x4001ea0	      2248	mbyte.c	FUNCTION_50	IF_2
0x4001e6b	    0x817dfcffff00	            cmp dword [rbp - 4], 0xffff 	      2249	mbyte.c	FUNCTION_50	IF_3
0x4001e72	            0x7f07	                            jg 0x4001e7b	      2249	mbyte.c	FUNCTION_50	IF_3
0x4001e74	      0xb803000000	                              mov eax, 3	      2250	mbyte.c	FUNCTION_50	IF_3
0x4001e79	            0xeb25	                           jmp 0x4001ea0	      2250	mbyte.c	FUNCTION_50	IF_3
0x4001e7b	    0x817dfcffff1f	          cmp dword [rbp - 4], 0x1fffff 	      2251	mbyte.c	FUNCTION_50	IF_4
0x4001e82	            0x7f07	                            jg 0x4001e8b	      2251	mbyte.c	FUNCTION_50	IF_4
0x4001e84	      0xb804000000	                              mov eax, 4	      2252	mbyte.c	FUNCTION_50	IF_4
0x4001e89	            0xeb15	                           jmp 0x4001ea0	      2252	mbyte.c	FUNCTION_50	IF_4
0x4001e8b	    0x817dfcffffff	         cmp dword [rbp - 4], 0x3ffffff 	      2253	mbyte.c	FUNCTION_50	IF_5
0x4001e92	            0x7f07	                            jg 0x4001e9b	      2253	mbyte.c	FUNCTION_50	IF_5
0x4001e94	      0xb805000000	                              mov eax, 5	      2254	mbyte.c	FUNCTION_50	IF_5
0x4001e99	            0xeb05	                           jmp 0x4001ea0	      2254	mbyte.c	FUNCTION_50	IF_5
0x4001e9b	      0xb806000000	                              mov eax, 6	      2255	mbyte.c	FUNCTION_50
0x4001ea0	              0x5d	                                 pop rbp	      2256	mbyte.c	FUNCTION_50
0x4001ea1	              0xc3	                                     ret	      2256	mbyte.c	FUNCTION_50
im_get_status	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	14
0x4005d25	              0x55	                                push rbp	      5874	mbyte.c	FUNCTION_123
0x4005d26	          0x4889e5	                            mov rbp, rsp	      5874	mbyte.c	FUNCTION_123
0x4005d29	    0x8b0500000000	            mov eax, dword [0x04005d2f] 	      5876	mbyte.c	FUNCTION_123	IF_1
0x4005d2f	            0x85c0	                           test eax, eax	      5876	mbyte.c	FUNCTION_123	IF_1
0x4005d31	            0x7515	                           jne 0x4005d48	      5876	mbyte.c	FUNCTION_123	IF_1
0x4005d33	    0x488b05000000	            mov rax, qword [0x04005d3a] 	      5876	mbyte.c	FUNCTION_123	IF_1
0x4005d3a	           0xfb600	                   movzx eax, byte [rax]	      5876	mbyte.c	FUNCTION_123	IF_1
0x4005d3d	            0x84c0	                             test al, al	      5876	mbyte.c	FUNCTION_123	IF_1
0x4005d3f	            0x7407	                            je 0x4005d48	      5876	mbyte.c	FUNCTION_123	IF_1
0x4005d41	      0xe8b5e6ffff	              call sym.call_imstatusfunc	      5877	mbyte.c	FUNCTION_123	CALL_1
0x4005d46	            0xeb06	                           jmp 0x4005d4e	      5877	mbyte.c	FUNCTION_123	CALL_1
0x4005d48	    0x8b0500000000	            mov eax, dword [0x04005d4e] 	      5879	mbyte.c	FUNCTION_123
0x4005d4e	              0x5d	                                 pop rbp	      5880	mbyte.c	FUNCTION_123
0x4005d4f	              0xc3	                                     ret	      5880	mbyte.c	FUNCTION_123
im_show_info	CALL,3:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	22
0x4004ca8	              0x55	                                push rbp	      5145	mbyte.c	FUNCTION_109
0x4004ca9	          0x4889e5	                            mov rbp, rsp	      5145	mbyte.c	FUNCTION_109
0x4004cac	        0x4883ec10	                           sub rsp, 0x10	      5145	mbyte.c	FUNCTION_109
0x4004cb0	    0x8b0500000000	            mov eax, dword [0x04004cb6] 	      5148	mbyte.c	FUNCTION_109
0x4004cb6	          0x8945fc	                mov dword [rbp - 4], eax	      5148	mbyte.c	FUNCTION_109
0x4004cb9	    0xc70500000000	               mov dword [0x04004cc3], 1	      5149	mbyte.c	FUNCTION_109
0x4004cc3	      0xe800000000	                          call 0x4004cc8	      5150	mbyte.c	FUNCTION_109	CALL_1
0x4004cc8	          0x8b45fc	                mov eax, dword [rbp - 4]	      5151	mbyte.c	FUNCTION_109
0x4004ccb	    0x890500000000	            mov dword [0x04004cd1], eax 	      5151	mbyte.c	FUNCTION_109
0x4004cd1	    0x8b0500000000	            mov eax, dword [0x04004cd7] 	      5152	mbyte.c	FUNCTION_109	IF_1
0x4004cd7	          0x83e001	                              and eax, 1	      5152	mbyte.c	FUNCTION_109	IF_1
0x4004cda	            0x85c0	                           test eax, eax	      5152	mbyte.c	FUNCTION_109	IF_1
0x4004cdc	            0x750d	                           jne 0x4004ceb	      5152	mbyte.c	FUNCTION_109	IF_1
0x4004cde	    0x8b0500000000	            mov eax, dword [0x04004ce4] 	      5152	mbyte.c	FUNCTION_109	IF_1
0x4004ce4	          0x83e010	                           and eax, 0x10	      5152	mbyte.c	FUNCTION_109	IF_1
0x4004ce7	            0x85c0	                           test eax, eax	      5152	mbyte.c	FUNCTION_109	IF_1
0x4004ce9	            0x7405	                            je 0x4004cf0	      5152	mbyte.c	FUNCTION_109	IF_1
0x4004ceb	      0xe800000000	                          call 0x4004cf0	      5153	mbyte.c	FUNCTION_109	CALL_2
0x4004cf0	      0xe800000000	                          call 0x4004cf5	      5154	mbyte.c	FUNCTION_109	CALL_3
0x4004cf5	              0x90	                                     nop	      5155	mbyte.c	FUNCTION_109
0x4004cf6	              0xc9	                                   leave	      5155	mbyte.c	FUNCTION_109
0x4004cf7	              0xc3	                                     ret	      5155	mbyte.c	FUNCTION_109
latin_char2cells	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	6
0x40010ab	              0x55	                                push rbp	      1702	mbyte.c	FUNCTION_27
0x40010ac	          0x4889e5	                            mov rbp, rsp	      1702	mbyte.c	FUNCTION_27
0x40010af	          0x897dfc	                mov dword [rbp - 4], edi	      1702	mbyte.c	FUNCTION_27
0x40010b2	      0xb801000000	                              mov eax, 1	      1703	mbyte.c	FUNCTION_27
0x40010b7	              0x5d	                                 pop rbp	      1704	mbyte.c	FUNCTION_27
0x40010b8	              0xc3	                                     ret	      1704	mbyte.c	FUNCTION_27
utfc_ptr2char_len	CALL,7:IF,4:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	106
0x4001930	              0x55	                                push rbp	      2016	mbyte.c	FUNCTION_43
0x4001931	          0x4889e5	                            mov rbp, rsp	      2016	mbyte.c	FUNCTION_43
0x4001934	        0x4883ec30	                           sub rsp, 0x30	      2016	mbyte.c	FUNCTION_43
0x4001938	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2016	mbyte.c	FUNCTION_43
0x400193c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2016	mbyte.c	FUNCTION_43
0x4001940	          0x8955dc	             mov dword [rbp - 0x24], edx	      2016	mbyte.c	FUNCTION_43
0x4001943	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2020	mbyte.c	FUNCTION_43
0x400194a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2022	mbyte.c	FUNCTION_43	CALL_1
0x400194e	          0x4889c7	                            mov rdi, rax	      2022	mbyte.c	FUNCTION_43	CALL_1
0x4001951	      0xe800000000	                          call 0x4001956	      2022	mbyte.c	FUNCTION_43	CALL_1
0x4001956	          0x8945fc	                mov dword [rbp - 4], eax	      2022	mbyte.c	FUNCTION_43	CALL_1
0x4001959	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2023	mbyte.c	FUNCTION_43	CALL_2
0x400195c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2023	mbyte.c	FUNCTION_43	CALL_2
0x4001960	            0x89d6	                            mov esi, edx	      2023	mbyte.c	FUNCTION_43	CALL_2
0x4001962	          0x4889c7	                            mov rdi, rax	      2023	mbyte.c	FUNCTION_43	CALL_2
0x4001965	      0xe800000000	                          call 0x400196a	      2023	mbyte.c	FUNCTION_43	CALL_2
0x400196a	          0x8945f0	             mov dword [rbp - 0x10], eax	      2023	mbyte.c	FUNCTION_43	CALL_2
0x400196d	        0x837df001	               cmp dword [rbp - 0x10], 1	      2025	mbyte.c	FUNCTION_43	IF_1
0x4001971	            0x7f0f	                            jg 0x4001982	      2025	mbyte.c	FUNCTION_43	IF_1
0x4001973	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2025	mbyte.c	FUNCTION_43	IF_1
0x4001977	           0xfb600	                   movzx eax, byte [rax]	      2025	mbyte.c	FUNCTION_43	IF_1
0x400197a	            0x84c0	                             test al, al	      2025	mbyte.c	FUNCTION_43	IF_1
0x400197c	     0xf88ed000000	                            js 0x4001a6f	      2025	mbyte.c	FUNCTION_43	IF_1
0x4001982	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2026	mbyte.c	FUNCTION_43	IF_1
0x4001985	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      2026	mbyte.c	FUNCTION_43	IF_1
0x4001988	     0xf8de1000000	                           jge 0x4001a6f	      2026	mbyte.c	FUNCTION_43	IF_1
0x400198e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2027	mbyte.c	FUNCTION_43	IF_1
0x4001991	          0x4863d0	                         movsxd rdx, eax	      2027	mbyte.c	FUNCTION_43	IF_1
0x4001994	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2027	mbyte.c	FUNCTION_43	IF_1
0x4001998	          0x4801d0	                            add rax, rdx	      2027	mbyte.c	FUNCTION_43	IF_1
0x400199b	           0xfb600	                   movzx eax, byte [rax]	      2027	mbyte.c	FUNCTION_43	IF_1
0x400199e	            0x84c0	                             test al, al	      2027	mbyte.c	FUNCTION_43	IF_1
0x40019a0	     0xf89c9000000	                           jns 0x4001a6f	      2027	mbyte.c	FUNCTION_43	IF_1
0x40019a6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019a9	          0x4863d0	                         movsxd rdx, eax	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019b0	          0x4801c2	                            add rdx, rax	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019b7	          0x4889d6	                            mov rsi, rdx	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019ba	          0x4889c7	                            mov rdi, rax	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019bd	      0xe800000000	                          call 0x40019c2	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019c2	            0x85c0	                           test eax, eax	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019c4	     0xf84a5000000	                            je 0x4001a6f	      2028	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x40019ca	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x40019cd	          0x4863d0	                         movsxd rdx, eax	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x40019d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x40019d4	          0x4801d0	                            add rax, rdx	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x40019d7	          0x4889c7	                            mov rdi, rax	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x40019da	      0xe800000000	                          call 0x40019df	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x40019df	          0x8945f4	              mov dword [rbp - 0xc], eax	      2030	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x40019e2	          0x8b45f8	                mov eax, dword [rbp - 8]	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40019e5	          0x8d5001	                      lea edx, [rax + 1]	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40019e8	          0x8955f8	                mov dword [rbp - 8], edx	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40019eb	            0x4898	                                    cdqe	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40019ed	    0x488d14850000	                        lea rdx, [rax*4]	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40019f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40019f9	          0x4801c2	                            add rdx, rax	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40019fc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x40019ff	            0x8902	                    mov dword [rdx], eax	      2033	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x4001a01	        0x837df806	                  cmp dword [rbp - 8], 6	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x4001a05	            0x7467	                            je 0x4001a6e	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x4001a07	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a0a	          0x2b45f0	             sub eax, dword [rbp - 0x10]	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a0d	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a10	          0x4863ca	                         movsxd rcx, edx	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a13	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a17	          0x4801ca	                            add rdx, rcx	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a1a	            0x89c6	                            mov esi, eax	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a1c	          0x4889d7	                            mov rdi, rdx	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a1f	      0xe800000000	                          call 0x4001a24	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a24	           0x145f0	             add dword [rbp - 0x10], eax	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x4001a27	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a2a	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a2d	            0x7d40	                           jge 0x4001a6f	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a2f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a32	          0x4863d0	                         movsxd rdx, eax	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a35	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a39	          0x4801d0	                            add rax, rdx	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a3c	           0xfb600	                   movzx eax, byte [rax]	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a3f	            0x84c0	                             test al, al	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a41	            0x792c	                           jns 0x4001a6f	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x4001a43	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a46	          0x4863d0	                         movsxd rdx, eax	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a4d	          0x4801d0	                            add rax, rdx	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a50	          0x4889c7	                            mov rdi, rax	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a53	      0xe800000000	                          call 0x4001a58	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a58	          0x8945f4	              mov dword [rbp - 0xc], eax	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a5b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a5e	            0x89c7	                            mov edi, eax	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a60	      0xe800000000	                          call 0x4001a65	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a65	            0x85c0	                           test eax, eax	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a67	            0x7406	                            je 0x4001a6f	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x4001a69	      0xe974ffffff	                           jmp 0x40019e2	      2041	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x4001a6e	              0x90	                                     nop	      2035	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x4001a6f	        0x837df805	                  cmp dword [rbp - 8], 5	      2044	mbyte.c	FUNCTION_43	IF_4
0x4001a73	            0x7f1a	                            jg 0x4001a8f	      2044	mbyte.c	FUNCTION_43	IF_4
0x4001a75	          0x8b45f8	                mov eax, dword [rbp - 8]	      2045	mbyte.c	FUNCTION_43	IF_4
0x4001a78	            0x4898	                                    cdqe	      2045	mbyte.c	FUNCTION_43	IF_4
0x4001a7a	    0x488d14850000	                        lea rdx, [rax*4]	      2045	mbyte.c	FUNCTION_43	IF_4
0x4001a82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2045	mbyte.c	FUNCTION_43	IF_4
0x4001a86	          0x4801d0	                            add rax, rdx	      2045	mbyte.c	FUNCTION_43	IF_4
0x4001a89	    0xc70000000000	                      mov dword [rax], 0	      2045	mbyte.c	FUNCTION_43	IF_4
0x4001a8f	          0x8b45fc	                mov eax, dword [rbp - 4]	      2047	mbyte.c	FUNCTION_43
0x4001a92	              0xc9	                                   leave	      2048	mbyte.c	FUNCTION_43
0x4001a93	              0xc3	                                     ret	      2048	mbyte.c	FUNCTION_43
im_get_feedback_attr	CALL,9:IF,5:ELSE,0:DO,1:WHILE,0:functions,0:SWITCH,0:FOR,1	98
0x40052a6	              0x55	                                push rbp	      5487	mbyte.c	FUNCTION_115
0x40052a7	          0x4889e5	                            mov rbp, rsp	      5487	mbyte.c	FUNCTION_115
0x40052aa	        0x4883ec40	                           sub rsp, 0x40	      5487	mbyte.c	FUNCTION_115
0x40052ae	          0x897dcc	             mov dword [rbp - 0x34], edi	      5487	mbyte.c	FUNCTION_115
0x40052b1	    0x64488b042528	                mov rax, qword fs:[0x28]	      5487	mbyte.c	FUNCTION_115
0x40052ba	        0x488945f8	                mov qword [rbp - 8], rax	      5487	mbyte.c	FUNCTION_115
0x40052be	            0x31c0	                            xor eax, eax	      5487	mbyte.c	FUNCTION_115
0x40052c0	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      5488	mbyte.c	FUNCTION_115
0x40052c8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      5489	mbyte.c	FUNCTION_115
0x40052d0	    0xc745d8ffffff	     mov dword [rbp - 0x28], 0xffffffff 	      5490	mbyte.c	FUNCTION_115
0x40052d7	    0x488b05000000	            mov rax, qword [0x040052de] 	      5492	mbyte.c	FUNCTION_115	IF_1
0x40052de	          0x4885c0	                           test rax, rax	      5492	mbyte.c	FUNCTION_115	IF_1
0x40052e1	            0x7508	                           jne 0x40052eb	      5492	mbyte.c	FUNCTION_115	IF_1
0x40052e3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      5493	mbyte.c	FUNCTION_115	IF_1
0x40052e6	      0xe913010000	                           jmp 0x40053fe	      5493	mbyte.c	FUNCTION_115	IF_1
0x40052eb	    0x488b05000000	            mov rax, qword [0x040052f2] 	      5495	mbyte.c	FUNCTION_115	CALL_1
0x40052f2	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      5495	mbyte.c	FUNCTION_115	CALL_1
0x40052f6	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      5495	mbyte.c	FUNCTION_115	CALL_1
0x40052fa	      0xb900000000	                              mov ecx, 0	      5495	mbyte.c	FUNCTION_115	CALL_1
0x40052ff	          0x4889c7	                            mov rdi, rax	      5495	mbyte.c	FUNCTION_115	CALL_1
0x4005302	      0xe800000000	                          call 0x4005307	      5495	mbyte.c	FUNCTION_115	CALL_1
0x4005307	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5497	mbyte.c	FUNCTION_115	IF_2
0x400530b	          0x4885c0	                           test rax, rax	      5497	mbyte.c	FUNCTION_115	IF_2
0x400530e	     0xf84c6000000	                            je 0x40053da	      5497	mbyte.c	FUNCTION_115	IF_2
0x4005314	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5497	mbyte.c	FUNCTION_115	IF_2
0x4005318	          0x4885c0	                           test rax, rax	      5497	mbyte.c	FUNCTION_115	IF_2
0x400531b	     0xf84b9000000	                            je 0x40053da	      5497	mbyte.c	FUNCTION_115	IF_2
0x4005321	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4005328	            0xeb1b	                           jmp 0x4005345	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400532a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5503	mbyte.c	FUNCTION_115	IF_2	CALL_2
0x400532e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5503	mbyte.c	FUNCTION_115	IF_2	CALL_2
0x4005331	            0x4898	                                    cdqe	      5503	mbyte.c	FUNCTION_115	IF_2	CALL_2
0x4005333	          0x4801d0	                            add rax, rdx	      5503	mbyte.c	FUNCTION_115	IF_2	CALL_2
0x4005336	          0x4889c7	                            mov rdi, rax	      5503	mbyte.c	FUNCTION_115	IF_2	CALL_2
0x4005339	      0xe800000000	                          call 0x400533e	      5503	mbyte.c	FUNCTION_115	IF_2	CALL_2
0x400533e	           0x145dc	             add dword [rbp - 0x24], eax	      5503	mbyte.c	FUNCTION_115	IF_2	CALL_2
0x4005341	        0x836dcc01	               sub dword [rbp - 0x34], 1	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4005345	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4005349	            0x7e13	                           jle 0x400535e	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400534b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400534f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4005352	            0x4898	                                    cdqe	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4005354	          0x4801d0	                            add rax, rdx	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x4005357	           0xfb600	                   movzx eax, byte [rax]	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400535a	            0x84c0	                             test al, al	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400535c	            0x75cc	                           jne 0x400532a	      5502	mbyte.c	FUNCTION_115	IF_2	FOR_1
0x400535e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x4005362	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x4005365	            0x4898	                                    cdqe	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x4005367	          0x4801d0	                            add rax, rdx	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x400536a	           0xfb600	                   movzx eax, byte [rax]	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x400536d	            0x84c0	                             test al, al	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x400536f	            0x7469	                            je 0x40053da	      5505	mbyte.c	FUNCTION_115	IF_2	IF_3
0x4005371	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      5510	mbyte.c	FUNCTION_115	IF_2	IF_3
0x4005378	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x400537c	          0x4889c7	                            mov rdi, rax	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x400537f	      0xe800000000	                          call 0x4005384	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x4005384	        0x488945f0	             mov qword [rbp - 0x10], rax	      5511	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_3
0x4005388	        0x488d55d4	                   lea rdx, [rbp - 0x2c]	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x400538c	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x4005390	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x4005394	          0x4889ce	                            mov rsi, rcx	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x4005397	          0x4889c7	                            mov rdi, rax	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x400539a	      0xe800000000	                          call 0x400539f	      5516	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_4
0x400539f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x40053a2	          0x3945dc	            cmp dword [rbp - 0x24], eax 	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x40053a5	            0x7c17	                            jl 0x40053be	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x40053a7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x40053aa	          0x3945dc	            cmp dword [rbp - 0x24], eax 	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x40053ad	            0x7d0f	                           jge 0x40053be	      5518	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	IF_4
0x40053af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5519	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_5
0x40053b3	          0x4889c7	                            mov rdi, rax	      5519	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_5
0x40053b6	      0xe803feffff	     call sym.translate_pango_attributes	      5519	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_5
0x40053bb	           0x945d8	              or dword [rbp - 0x28], eax	      5519	mbyte.c	FUNCTION_115	IF_2	IF_3	DO_1	CALL_5
0x40053be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x40053c2	          0x4889c7	                            mov rdi, rax	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x40053c5	      0xe800000000	                          call 0x40053ca	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x40053ca	            0x85c0	                           test eax, eax	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x40053cc	            0x75ba	                           jne 0x4005388	      5521	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_6
0x40053ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5523	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_7
0x40053d2	          0x4889c7	                            mov rdi, rax	      5523	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_7
0x40053d5	      0xe800000000	                          call 0x40053da	      5523	mbyte.c	FUNCTION_115	IF_2	IF_3	CALL_7
0x40053da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5527	mbyte.c	FUNCTION_115	IF_5
0x40053de	          0x4885c0	                           test rax, rax	      5527	mbyte.c	FUNCTION_115	IF_5
0x40053e1	            0x740c	                            je 0x40053ef	      5527	mbyte.c	FUNCTION_115	IF_5
0x40053e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5528	mbyte.c	FUNCTION_115	CALL_8
0x40053e7	          0x4889c7	                            mov rdi, rax	      5528	mbyte.c	FUNCTION_115	CALL_8
0x40053ea	      0xe800000000	                          call 0x40053ef	      5528	mbyte.c	FUNCTION_115	CALL_8
0x40053ef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5529	mbyte.c	FUNCTION_115	CALL_9
0x40053f3	          0x4889c7	                            mov rdi, rax	      5529	mbyte.c	FUNCTION_115	CALL_9
0x40053f6	      0xe800000000	                          call 0x40053fb	      5529	mbyte.c	FUNCTION_115	CALL_9
0x40053fb	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      5531	mbyte.c	FUNCTION_115
0x40053fe	        0x488b4df8	                mov rcx, qword [rbp - 8]	      5532	mbyte.c	FUNCTION_115
0x4005402	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5532	mbyte.c	FUNCTION_115
0x400540b	            0x7405	                            je 0x4005412	      5532	mbyte.c	FUNCTION_115
0x400540d	      0xe800000000	                          call 0x4005412	      5532	mbyte.c	FUNCTION_115
0x4005412	              0xc9	                                   leave	      5532	mbyte.c	FUNCTION_115
0x4005413	              0xc3	                                     ret	      5532	mbyte.c	FUNCTION_115
utf_iscomposing	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	11
0x40020b5	              0x55	                                push rbp	      2328	mbyte.c	FUNCTION_53
0x40020b6	          0x4889e5	                            mov rbp, rsp	      2328	mbyte.c	FUNCTION_53
0x40020b9	        0x4883ec08	                              sub rsp, 8	      2328	mbyte.c	FUNCTION_53
0x40020bd	          0x897dfc	                mov dword [rbp - 4], edi	      2328	mbyte.c	FUNCTION_53
0x40020c0	          0x8b45fc	                mov eax, dword [rbp - 4]	      2598	mbyte.c	FUNCTION_53	CALL_1
0x40020c3	            0x89c2	                            mov edx, eax	      2598	mbyte.c	FUNCTION_53	CALL_1
0x40020c5	      0xbe70100000	                         mov esi, 0x1070	      2598	mbyte.c	FUNCTION_53	CALL_1
0x40020ca	      0xbf00000000	                              mov edi, 0	      2598	mbyte.c	FUNCTION_53	CALL_1
0x40020cf	      0xe859ecffff	                        call sym.intable	      2598	mbyte.c	FUNCTION_53	CALL_1
0x40020d4	              0xc9	                                   leave	      2599	mbyte.c	FUNCTION_53
0x40020d5	              0xc3	                                     ret	      2599	mbyte.c	FUNCTION_53
dbcs_char2cells	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	19
0x40010b9	              0x55	                                push rbp	      1708	mbyte.c	FUNCTION_28
0x40010ba	          0x4889e5	                            mov rbp, rsp	      1708	mbyte.c	FUNCTION_28
0x40010bd	          0x897dfc	                mov dword [rbp - 4], edi	      1708	mbyte.c	FUNCTION_28
0x40010c0	    0x8b0500000000	            mov eax, dword [0x040010c6] 	      1711	mbyte.c	FUNCTION_28	IF_1
0x40010c6	      0x3dcc260000	                         cmp eax, 0x26cc	      1711	mbyte.c	FUNCTION_28	IF_1
0x40010cb	            0x7514	                           jne 0x40010e1	      1711	mbyte.c	FUNCTION_28	IF_1
0x40010cd	          0x8b45fc	                mov eax, dword [rbp - 4]	      1711	mbyte.c	FUNCTION_28	IF_1
0x40010d0	          0xc1e808	                              shr eax, 8	      1711	mbyte.c	FUNCTION_28	IF_1
0x40010d3	      0x3d8e000000	                           cmp eax, 0x8e	      1711	mbyte.c	FUNCTION_28	IF_1
0x40010d8	            0x7507	                           jne 0x40010e1	      1711	mbyte.c	FUNCTION_28	IF_1
0x40010da	      0xb801000000	                              mov eax, 1	      1712	mbyte.c	FUNCTION_28	IF_1
0x40010df	            0xeb12	                           jmp 0x40010f3	      1712	mbyte.c	FUNCTION_28	IF_1
0x40010e1	          0x8b45fc	                mov eax, dword [rbp - 4]	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40010e4	          0xc1e808	                              shr eax, 8	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40010e7	            0x89c0	                            mov eax, eax	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40010e9	     0xfb680000000	                   movzx eax, byte [rax]	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40010f0	           0xfbec0	                           movsx eax, al	      1714	mbyte.c	FUNCTION_28	CALL_1
0x40010f3	              0x5d	                                 pop rbp	      1715	mbyte.c	FUNCTION_28
0x40010f4	              0xc3	                                     ret	      1715	mbyte.c	FUNCTION_28
utf_ptr2cells_len	CALL,5:IF,4:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	53
0x4000fb9	              0x55	                                push rbp	      1665	mbyte.c	FUNCTION_25
0x4000fba	          0x4889e5	                            mov rbp, rsp	      1665	mbyte.c	FUNCTION_25
0x4000fbd	        0x4883ec20	                           sub rsp, 0x20	      1665	mbyte.c	FUNCTION_25
0x4000fc1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1665	mbyte.c	FUNCTION_25
0x4000fc5	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1665	mbyte.c	FUNCTION_25
0x4000fc8	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1669	mbyte.c	FUNCTION_25	IF_1
0x4000fcc	     0xf8e8a000000	                           jle 0x400105c	      1669	mbyte.c	FUNCTION_25	IF_1
0x4000fd2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1669	mbyte.c	FUNCTION_25	IF_1
0x4000fd6	           0xfb600	                   movzx eax, byte [rax]	      1669	mbyte.c	FUNCTION_25	IF_1
0x4000fd9	            0x84c0	                             test al, al	      1669	mbyte.c	FUNCTION_25	IF_1
0x4000fdb	            0x797f	                           jns 0x400105c	      1669	mbyte.c	FUNCTION_25	IF_1
0x4000fdd	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4000fe0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4000fe4	            0x89d6	                            mov esi, edx	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4000fe6	          0x4889c7	                            mov rdi, rax	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4000fe9	      0xe800000000	                          call 0x4000fee	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4000fee	            0x89c2	                            mov edx, eax	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4000ff0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4000ff4	           0xfb600	                   movzx eax, byte [rax]	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4000ff7	           0xfb6c0	                           movzx eax, al	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4000ffa	            0x4898	                                    cdqe	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4000ffc	     0xfb680000000	                   movzx eax, byte [rax]	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4001003	           0xfbec0	                           movsx eax, al	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4001006	            0x39c2	                            cmp edx, eax	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4001008	            0x7d07	                           jge 0x4001011	      1671	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x400100a	      0xb801000000	                              mov eax, 1	      1672	mbyte.c	FUNCTION_25	IF_1	IF_2
0x400100f	            0xeb50	                           jmp 0x4001061	      1672	mbyte.c	FUNCTION_25	IF_1	IF_2
0x4001011	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4001015	          0x4889c7	                            mov rdi, rax	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4001018	      0xe800000000	                          call 0x400101d	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x400101d	          0x8945fc	                mov dword [rbp - 4], eax	      1673	mbyte.c	FUNCTION_25	IF_1	CALL_2
0x4001020	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x4001024	          0x4889c7	                            mov rdi, rax	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x4001027	      0xe800000000	                          call 0x400102c	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x400102c	          0x83f801	                              cmp eax, 1	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x400102f	            0x7406	                            je 0x4001037	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x4001031	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x4001035	            0x7507	                           jne 0x400103e	      1675	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0x4001037	      0xb804000000	                              mov eax, 4	      1676	mbyte.c	FUNCTION_25	IF_1	IF_3
0x400103c	            0xeb23	                           jmp 0x4001061	      1676	mbyte.c	FUNCTION_25	IF_1	IF_3
0x400103e	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1678	mbyte.c	FUNCTION_25	IF_1	IF_4
0x4001042	            0x7f0c	                            jg 0x4001050	      1678	mbyte.c	FUNCTION_25	IF_1	IF_4
0x4001044	          0x8b45fc	                mov eax, dword [rbp - 4]	      1679	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x4001047	            0x89c7	                            mov edi, eax	      1679	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x4001049	      0xe800000000	                          call 0x400104e	      1679	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x400104e	            0xeb11	                           jmp 0x4001061	      1679	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x4001050	          0x8b45fc	                mov eax, dword [rbp - 4]	      1680	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x4001053	            0x89c7	                            mov edi, eax	      1680	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x4001055	      0xe800000000	                          call 0x400105a	      1680	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x400105a	            0xeb05	                           jmp 0x4001061	      1680	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x400105c	      0xb801000000	                              mov eax, 1	      1682	mbyte.c	FUNCTION_25
0x4001061	              0xc9	                                   leave	      1683	mbyte.c	FUNCTION_25
0x4001062	              0xc3	                                     ret	      1683	mbyte.c	FUNCTION_25
convert_input_safe	CALL,5:IF,4:ELSE,1:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	80
0x4005fdb	              0x55	                                push rbp	      6674	mbyte.c	FUNCTION_143
0x4005fdc	          0x4889e5	                            mov rbp, rsp	      6674	mbyte.c	FUNCTION_143
0x4005fdf	        0x4883ec40	                           sub rsp, 0x40	      6674	mbyte.c	FUNCTION_143
0x4005fe3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6674	mbyte.c	FUNCTION_143
0x4005fe7	          0x8975d4	             mov dword [rbp - 0x2c], esi	      6674	mbyte.c	FUNCTION_143
0x4005fea	          0x8955d0	             mov dword [rbp - 0x30], edx	      6674	mbyte.c	FUNCTION_143
0x4005fed	        0x48894dc8	             mov qword [rbp - 0x38], rcx	      6674	mbyte.c	FUNCTION_143
0x4005ff1	        0x4c8945c0	              mov qword [rbp - 0x40], r8	      6674	mbyte.c	FUNCTION_143
0x4005ff5	    0x64488b042528	                mov rax, qword fs:[0x28]	      6674	mbyte.c	FUNCTION_143
0x4005ffe	        0x488945f8	                mov qword [rbp - 8], rax	      6674	mbyte.c	FUNCTION_143
0x4006002	            0x31c0	                            xor eax, eax	      6674	mbyte.c	FUNCTION_143
0x4006004	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6676	mbyte.c	FUNCTION_143
0x4006007	          0x8945e8	             mov dword [rbp - 0x18], eax	      6676	mbyte.c	FUNCTION_143
0x400600a	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      6677	mbyte.c	FUNCTION_143
0x4006011	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4006016	            0x7406	                            je 0x400601e	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4006018	        0x488d45ec	                   lea rax, [rbp - 0x14]	      6679	mbyte.c	FUNCTION_143	CALL_1
0x400601c	            0xeb05	                           jmp 0x4006023	      6679	mbyte.c	FUNCTION_143	CALL_1
0x400601e	      0xb800000000	                              mov eax, 0	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4006023	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4006027	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      6679	mbyte.c	FUNCTION_143	CALL_1
0x400602b	          0x4889c1	                            mov rcx, rax	      6679	mbyte.c	FUNCTION_143	CALL_1
0x400602e	      0xbf00000000	                              mov edi, 0	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4006033	      0xe800000000	                          call 0x4006038	      6679	mbyte.c	FUNCTION_143	CALL_1
0x4006038	        0x488945f0	             mov qword [rbp - 0x10], rax	      6679	mbyte.c	FUNCTION_143	CALL_1
0x400603c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6681	mbyte.c	FUNCTION_143	IF_1
0x4006041	     0xf8492000000	                            je 0x40060d9	      6681	mbyte.c	FUNCTION_143	IF_1
0x4006047	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6683	mbyte.c	FUNCTION_143	IF_1	IF_2
0x400604a	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      6683	mbyte.c	FUNCTION_143	IF_1	IF_2
0x400604d	            0x7f78	                            jg 0x40060c7	      6683	mbyte.c	FUNCTION_143	IF_1	IF_2
0x400604f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6685	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4006052	            0x85c0	                           test eax, eax	      6685	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4006054	            0x7e56	                           jle 0x40060ac	      6685	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4006056	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x4006059	            0x89c7	                            mov edi, eax	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x400605b	      0xe800000000	                          call 0x4006060	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x4006060	          0x4889c2	                            mov rdx, rax	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x4006063	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x4006067	          0x488910	                    mov qword [rax], rdx	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x400606a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6689	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x400606e	          0x488b00	                    mov rax, qword [rax]	      6689	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x4006071	          0x4885c0	                           test rax, rax	      6689	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x4006074	            0x742d	                            je 0x40060a3	      6689	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x4006076	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x4006079	          0x4863d0	                         movsxd rdx, eax	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x400607c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x400607f	          0x4863c8	                         movsxd rcx, eax	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x4006082	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x4006085	            0x4898	                                    cdqe	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x4006087	          0x4829c1	                            sub rcx, rax	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x400608a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x400608e	          0x4801c1	                            add rcx, rax	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x4006091	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x4006095	          0x488b00	                    mov rax, qword [rax]	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x4006098	          0x4889ce	                            mov rsi, rcx	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x400609b	          0x4889c7	                            mov rdi, rax	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x400609e	      0xe800000000	                          call 0x40060a3	      6690	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x40060a3	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x40060a6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x40060aa	            0x8910	                    mov dword [rax], edx	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x40060ac	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x40060af	          0x4863d0	                         movsxd rdx, eax	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x40060b2	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x40060b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x40060ba	          0x4889ce	                            mov rsi, rcx	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x40060bd	          0x4889c7	                            mov rdi, rax	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x40060c0	      0xe800000000	                          call 0x40060c5	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x40060c5	            0xeb06	                           jmp 0x40060cd	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x40060c7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6698	mbyte.c	FUNCTION_143	IF_1	ELSE_1
0x40060ca	          0x8945e8	             mov dword [rbp - 0x18], eax	      6698	mbyte.c	FUNCTION_143	IF_1	ELSE_1
0x40060cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6699	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x40060d1	          0x4889c7	                            mov rdi, rax	      6699	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x40060d4	      0xe800000000	                          call 0x40060d9	      6699	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x40060d9	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6701	mbyte.c	FUNCTION_143
0x40060dc	        0x488b75f8	                mov rsi, qword [rbp - 8]	      6702	mbyte.c	FUNCTION_143
0x40060e0	    0x644833342528	                xor rsi, qword fs:[0x28]	      6702	mbyte.c	FUNCTION_143
0x40060e9	            0x7405	                            je 0x40060f0	      6702	mbyte.c	FUNCTION_143
0x40060eb	      0xe800000000	                          call 0x40060f0	      6702	mbyte.c	FUNCTION_143
0x40060f0	              0xc9	                                   leave	      6702	mbyte.c	FUNCTION_143
0x40060f1	              0xc3	                                     ret	      6702	mbyte.c	FUNCTION_143
utf_head_off	CALL,5:IF,6:ELSE,0:DO,0:WHILE,2:functions,0:SWITCH,0:FOR,2	112
0x4002b74	              0x55	                                push rbp	      3822	mbyte.c	FUNCTION_70
0x4002b75	          0x4889e5	                            mov rbp, rsp	      3822	mbyte.c	FUNCTION_70
0x4002b78	        0x4883ec30	                           sub rsp, 0x30	      3822	mbyte.c	FUNCTION_70
0x4002b7c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3822	mbyte.c	FUNCTION_70
0x4002b80	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3822	mbyte.c	FUNCTION_70
0x4002b84	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3831	mbyte.c	FUNCTION_70	IF_1
0x4002b88	           0xfb600	                   movzx eax, byte [rax]	      3831	mbyte.c	FUNCTION_70	IF_1
0x4002b8b	            0x84c0	                             test al, al	      3831	mbyte.c	FUNCTION_70	IF_1
0x4002b8d	            0x780a	                            js 0x4002b99	      3831	mbyte.c	FUNCTION_70	IF_1
0x4002b8f	      0xb800000000	                              mov eax, 0	      3832	mbyte.c	FUNCTION_70	IF_1
0x4002b94	      0xe951010000	                           jmp 0x4002cea	      3832	mbyte.c	FUNCTION_70	IF_1
0x4002b99	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3836	mbyte.c	FUNCTION_70	FOR_1
0x4002b9d	        0x488945e8	             mov qword [rbp - 0x18], rax	      3836	mbyte.c	FUNCTION_70	FOR_1
0x4002ba1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4002ba5	        0x488945f0	             mov qword [rbp - 0x10], rax	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4002ba9	            0xeb05	                           jmp 0x4002bb0	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4002bab	      0x488345f001	               add qword [rbp - 0x10], 1	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4002bb0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4002bb4	        0x4883c001	                              add rax, 1	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4002bb8	           0xfb600	                   movzx eax, byte [rax]	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4002bbb	           0xfb6c0	                           movzx eax, al	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4002bbe	      0x25c0000000	                           and eax, 0xc0	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4002bc3	      0x3d80000000	                           cmp eax, 0x80	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4002bc8	            0x74e1	                            je 0x4002bab	      3839	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x4002bca	            0xeb05	                           jmp 0x4002bd1	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4002bcc	      0x48836de801	               sub qword [rbp - 0x18], 1	      3843	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4002bd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4002bd5	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4002bd9	            0x7616	                           jbe 0x4002bf1	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4002bdb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4002bdf	           0xfb600	                   movzx eax, byte [rax]	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4002be2	           0xfb6c0	                           movzx eax, al	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4002be5	      0x25c0000000	                           and eax, 0xc0	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4002bea	      0x3d80000000	                           cmp eax, 0x80	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4002bef	            0x74db	                            je 0x4002bcc	      3842	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x4002bf1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3846	mbyte.c	FUNCTION_70	FOR_1
0x4002bf5	           0xfb600	                   movzx eax, byte [rax]	      3846	mbyte.c	FUNCTION_70	FOR_1
0x4002bf8	           0xfb6c0	                           movzx eax, al	      3846	mbyte.c	FUNCTION_70	FOR_1
0x4002bfb	            0x4898	                                    cdqe	      3846	mbyte.c	FUNCTION_70	FOR_1
0x4002bfd	     0xfb680000000	                   movzx eax, byte [rax]	      3846	mbyte.c	FUNCTION_70	FOR_1
0x4002c04	           0xfbec0	                           movsx eax, al	      3846	mbyte.c	FUNCTION_70	FOR_1
0x4002c07	          0x8945e0	             mov dword [rbp - 0x20], eax	      3846	mbyte.c	FUNCTION_70	FOR_1
0x4002c0a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c12	          0x4829c2	                            sub rdx, rax	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c15	          0x4889d0	                            mov rax, rdx	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c18	          0x83c001	                              add eax, 1	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c1b	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c1e	            0x7420	                            je 0x4002c40	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c20	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c28	          0x4829c2	                            sub rdx, rax	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c2b	          0x4889d0	                            mov rax, rdx	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c2e	          0x83c001	                              add eax, 1	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c31	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c34	            0x740a	                            je 0x4002c40	      3847	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c36	      0xb800000000	                              mov eax, 0	      3848	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c3b	      0xe9aa000000	                           jmp 0x4002cea	      3848	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x4002c40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3850	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x4002c44	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3850	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x4002c48	     0xf868a000000	                           jbe 0x4002cd8	      3850	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x4002c4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3853	mbyte.c	FUNCTION_70	FOR_1	CALL_1
0x4002c52	          0x4889c7	                            mov rdi, rax	      3853	mbyte.c	FUNCTION_70	FOR_1	CALL_1
0x4002c55	      0xe800000000	                          call 0x4002c5a	      3853	mbyte.c	FUNCTION_70	FOR_1	CALL_1
0x4002c5a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3853	mbyte.c	FUNCTION_70	FOR_1	CALL_1
0x4002c5d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3854	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x4002c60	            0x89c7	                            mov edi, eax	      3854	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x4002c62	      0xe800000000	                          call 0x4002c67	      3854	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x4002c67	            0x85c0	                           test eax, eax	      3854	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x4002c69	            0x7562	                           jne 0x4002ccd	      3854	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x4002c6b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3858	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x4002c6e	            0x89c7	                            mov edi, eax	      3858	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x4002c70	      0xe800000000	                          call 0x4002c75	      3858	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x4002c75	            0x85c0	                           test eax, eax	      3858	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x4002c77	            0x7462	                            je 0x4002cdb	      3858	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x4002c79	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3861	mbyte.c	FUNCTION_70	FOR_1	IF_5
0x4002c7d	        0x488945f8	                mov qword [rbp - 8], rax	      3861	mbyte.c	FUNCTION_70	FOR_1	IF_5
0x4002c81	      0x48836df801	                  sub qword [rbp - 8], 1	      3862	mbyte.c	FUNCTION_70	FOR_1	IF_5
0x4002c86	            0xeb05	                           jmp 0x4002c8d	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4002c88	      0x48836df801	                  sub qword [rbp - 8], 1	      3865	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4002c8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4002c91	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4002c95	            0x7616	                           jbe 0x4002cad	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4002c97	        0x488b45f8	                mov rax, qword [rbp - 8]	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4002c9b	           0xfb600	                   movzx eax, byte [rax]	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4002c9e	           0xfb6c0	                           movzx eax, al	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4002ca1	      0x25c0000000	                           and eax, 0xc0	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4002ca6	      0x3d80000000	                           cmp eax, 0x80	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4002cab	            0x74db	                            je 0x4002c88	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x4002cad	        0x488b45f8	                mov rax, qword [rbp - 8]	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4002cb1	          0x4889c7	                            mov rdi, rax	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4002cb4	      0xe800000000	                          call 0x4002cb9	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4002cb9	            0x89c2	                            mov edx, eax	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4002cbb	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4002cbe	            0x89c6	                            mov esi, eax	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4002cc0	            0x89d7	                            mov edi, edx	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4002cc2	      0xe800000000	                          call 0x4002cc7	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4002cc7	            0x85c0	                           test eax, eax	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4002cc9	            0x7410	                            je 0x4002cdb	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x4002ccb	            0xeb01	                           jmp 0x4002cce	      3867	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6
0x4002ccd	              0x90	                                     nop	      3855	mbyte.c	FUNCTION_70	FOR_1	IF_4
0x4002cce	      0x48836de801	               sub qword [rbp - 0x18], 1	      3836	mbyte.c	FUNCTION_70	FOR_1
0x4002cd3	      0xe9c9feffff	                           jmp 0x4002ba1	      3871	mbyte.c	FUNCTION_70	FOR_1
0x4002cd8	              0x90	                                     nop	      3851	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x4002cd9	            0xeb01	                           jmp 0x4002cdc	      3851	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x4002cdb	              0x90	                                     nop	      3870	mbyte.c	FUNCTION_70	FOR_1
0x4002cdc	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3873	mbyte.c	FUNCTION_70
0x4002ce0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3873	mbyte.c	FUNCTION_70
0x4002ce4	          0x4829c2	                            sub rdx, rax	      3873	mbyte.c	FUNCTION_70
0x4002ce7	          0x4889d0	                            mov rax, rdx	      3873	mbyte.c	FUNCTION_70
0x4002cea	              0xc9	                                   leave	      3874	mbyte.c	FUNCTION_70
0x4002ceb	              0xc3	                                     ret	      3874	mbyte.c	FUNCTION_70
mb_adjustpos	CALL,4:IF,3:ELSE,1:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	91
0x4003388	              0x55	                                push rbp	      4103	mbyte.c	FUNCTION_78
0x4003389	          0x4889e5	                            mov rbp, rsp	      4103	mbyte.c	FUNCTION_78
0x400338c	        0x4883ec20	                           sub rsp, 0x20	      4103	mbyte.c	FUNCTION_78
0x4003390	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4103	mbyte.c	FUNCTION_78
0x4003394	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4103	mbyte.c	FUNCTION_78
0x4003398	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4106	mbyte.c	FUNCTION_78	IF_1
0x400339c	          0x8b4008	                mov eax, dword [rax + 8]	      4106	mbyte.c	FUNCTION_78	IF_1
0x400339f	            0x85c0	                           test eax, eax	      4106	mbyte.c	FUNCTION_78	IF_1
0x40033a1	            0x7f10	                            jg 0x40033b3	      4106	mbyte.c	FUNCTION_78	IF_1
0x40033a3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4108	mbyte.c	FUNCTION_78	IF_1
0x40033a7	          0x8b400c	              mov eax, dword [rax + 0xc]	      4108	mbyte.c	FUNCTION_78	IF_1
0x40033aa	          0x83f801	                              cmp eax, 1	      4108	mbyte.c	FUNCTION_78	IF_1
0x40033ad	     0xf8efd000000	                           jle 0x40034b0	      4108	mbyte.c	FUNCTION_78	IF_1
0x40033b3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x40033b7	          0x488b08	                    mov rcx, qword [rax]	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x40033ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x40033be	      0xba00000000	                              mov edx, 0	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x40033c3	          0x4889ce	                            mov rsi, rcx	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x40033c6	          0x4889c7	                            mov rdi, rax	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x40033c9	      0xe800000000	                          call 0x40033ce	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x40033ce	        0x488945f8	                mov qword [rbp - 8], rax	      4112	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x40033d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033d6	           0xfb600	                   movzx eax, byte [rax]	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033d9	            0x84c0	                             test al, al	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033db	            0x7419	                            je 0x40033f6	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033e1	          0x4889c7	                            mov rdi, rax	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033e4	      0xe800000000	                          call 0x40033e9	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033e9	            0x89c2	                            mov edx, eax	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033eb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033ef	          0x8b4008	                mov eax, dword [rax + 8]	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033f2	            0x39c2	                            cmp edx, eax	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033f4	            0x7d0d	                           jge 0x4003403	      4113	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x40033f6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4114	mbyte.c	FUNCTION_78	IF_1	IF_2
0x40033fa	    0xc74008000000	                  mov dword [rax + 8], 0	      4114	mbyte.c	FUNCTION_78	IF_1	IF_2
0x4003401	            0xeb38	                           jmp 0x400343b	      4114	mbyte.c	FUNCTION_78	IF_1	IF_2
0x4003403	    0x488b05000000	            mov rax, qword [0x0400340a] 	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x400340a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x400340e	          0x8b5208	                mov edx, dword [rdx + 8]	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4003411	          0x4863ca	                         movsxd rcx, edx	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4003414	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4003418	          0x4801d1	                            add rcx, rdx	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x400341b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x400341f	          0x4889ce	                            mov rsi, rcx	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4003422	          0x4889d7	                            mov rdi, rdx	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4003425	            0xffd0	                                call rax	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4003427	            0x89c2	                            mov edx, eax	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4003429	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x400342d	          0x8b4008	                mov eax, dword [rax + 8]	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4003430	            0x29d0	                            sub eax, edx	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4003432	            0x89c2	                            mov edx, eax	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4003434	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x4003438	          0x895008	                mov dword [rax + 8], edx	      4116	mbyte.c	FUNCTION_78	IF_1	ELSE_1
0x400343b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4120	mbyte.c	FUNCTION_78	IF_1	IF_3
0x400343f	          0x8b400c	              mov eax, dword [rax + 0xc]	      4120	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4003442	          0x83f801	                              cmp eax, 1	      4120	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4003445	            0x7569	                           jne 0x40034b0	      4120	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4003447	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x400344b	          0x8b4008	                mov eax, dword [rax + 8]	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x400344e	          0x4863d0	                         movsxd rdx, eax	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4003451	        0x488b45f8	                mov rax, qword [rbp - 8]	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4003455	          0x4801d0	                            add rax, rdx	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x4003458	           0xfb600	                   movzx eax, byte [rax]	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x400345b	            0x3c09	                               cmp al, 9	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x400345d	            0x7451	                            je 0x40034b0	      4121	mbyte.c	FUNCTION_78	IF_1	IF_3
0x400345f	    0x488b05000000	            mov rax, qword [0x04003466] 	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4003466	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x400346a	          0x8b5208	                mov edx, dword [rdx + 8]	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x400346d	          0x4863ca	                         movsxd rcx, edx	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4003470	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4003474	          0x4801ca	                            add rdx, rcx	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4003477	          0x4889d7	                            mov rdi, rdx	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x400347a	            0xffd0	                                call rax	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x400347c	            0x89c7	                            mov edi, eax	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x400347e	      0xe800000000	                          call 0x4003483	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4003483	            0x85c0	                           test eax, eax	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4003485	            0x7429	                            je 0x40034b0	      4122	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_3
0x4003487	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x400348b	          0x8b4008	                mov eax, dword [rax + 8]	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x400348e	          0x4863d0	                         movsxd rdx, eax	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x4003491	        0x488b45f8	                mov rax, qword [rbp - 8]	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x4003495	          0x4801d0	                            add rax, rdx	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x4003498	          0x4889c7	                            mov rdi, rax	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x400349b	      0xe800000000	                          call 0x40034a0	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x40034a0	          0x83f801	                              cmp eax, 1	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x40034a3	            0x7e0b	                           jle 0x40034b0	      4123	mbyte.c	FUNCTION_78	IF_1	IF_3	CALL_4
0x40034a5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4124	mbyte.c	FUNCTION_78	IF_1	IF_3
0x40034a9	    0xc7400c000000	                mov dword [rax + 0xc], 0	      4124	mbyte.c	FUNCTION_78	IF_1	IF_3
0x40034b0	              0x90	                                     nop	      4127	mbyte.c	FUNCTION_78
0x40034b1	              0xc9	                                   leave	      4127	mbyte.c	FUNCTION_78
0x40034b2	              0xc3	                                     ret	      4127	mbyte.c	FUNCTION_78
utf_ambiguous_width	CALL,2:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	25
0x4002255	              0x55	                                push rbp	      2901	mbyte.c	FUNCTION_57
0x4002256	          0x4889e5	                            mov rbp, rsp	      2901	mbyte.c	FUNCTION_57
0x4002259	        0x4883ec08	                              sub rsp, 8	      2901	mbyte.c	FUNCTION_57
0x400225d	          0x897dfc	                mov dword [rbp - 4], edi	      2901	mbyte.c	FUNCTION_57
0x4002260	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      2902	mbyte.c	FUNCTION_57	CALL_1
0x4002264	            0x7e37	                           jle 0x400229d	      2902	mbyte.c	FUNCTION_57	CALL_1
0x4002266	          0x8b45fc	                mov eax, dword [rbp - 4]	      2902	mbyte.c	FUNCTION_57	CALL_1
0x4002269	            0x89c2	                            mov edx, eax	      2902	mbyte.c	FUNCTION_57	CALL_1
0x400226b	      0xbe300b0000	                          mov esi, 0xb30	      2902	mbyte.c	FUNCTION_57	CALL_1
0x4002270	      0xbf00000000	                              mov edi, 0	      2902	mbyte.c	FUNCTION_57	CALL_1
0x4002275	      0xe8b3eaffff	                        call sym.intable	      2902	mbyte.c	FUNCTION_57	CALL_1
0x400227a	            0x85c0	                           test eax, eax	      2902	mbyte.c	FUNCTION_57	CALL_1
0x400227c	            0x7518	                           jne 0x4002296	      2902	mbyte.c	FUNCTION_57	CALL_1
0x400227e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2903	mbyte.c	FUNCTION_57	CALL_2
0x4002281	            0x89c2	                            mov edx, eax	      2903	mbyte.c	FUNCTION_57	CALL_2
0x4002283	      0xbec0080000	                          mov esi, 0x8c0	      2903	mbyte.c	FUNCTION_57	CALL_2
0x4002288	      0xbf00000000	                              mov edi, 0	      2903	mbyte.c	FUNCTION_57	CALL_2
0x400228d	      0xe89beaffff	                        call sym.intable	      2903	mbyte.c	FUNCTION_57	CALL_2
0x4002292	            0x85c0	                           test eax, eax	      2903	mbyte.c	FUNCTION_57	CALL_2
0x4002294	            0x7407	                            je 0x400229d	      2903	mbyte.c	FUNCTION_57	CALL_2
0x4002296	      0xb801000000	                              mov eax, 1	      2902	mbyte.c	FUNCTION_57	CALL_1
0x400229b	            0xeb05	                           jmp 0x40022a2	      2902	mbyte.c	FUNCTION_57	CALL_1
0x400229d	      0xb800000000	                              mov eax, 0	      2902	mbyte.c	FUNCTION_57	CALL_1
0x40022a2	              0xc9	                                   leave	      2904	mbyte.c	FUNCTION_57
0x40022a3	              0xc3	                                     ret	      2904	mbyte.c	FUNCTION_57
utf_strnicmp	CALL,8:IF,11:ELSE,1:DO,0:WHILE,1:functions,0:SWITCH,0:FOR,1	174
0x4002535	              0x55	                                push rbp	      3588	mbyte.c	FUNCTION_64
0x4002536	          0x4889e5	                            mov rbp, rsp	      3588	mbyte.c	FUNCTION_64
0x4002539	              0x53	                                push rbx	      3588	mbyte.c	FUNCTION_64
0x400253a	        0x4883ec48	                           sub rsp, 0x48	      3588	mbyte.c	FUNCTION_64
0x400253e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3588	mbyte.c	FUNCTION_64
0x4002542	        0x488975c0	             mov qword [rbp - 0x40], rsi	      3588	mbyte.c	FUNCTION_64
0x4002546	        0x488955b8	             mov qword [rbp - 0x48], rdx	      3588	mbyte.c	FUNCTION_64
0x400254a	        0x48894db0	             mov qword [rbp - 0x50], rcx	      3588	mbyte.c	FUNCTION_64
0x400254e	    0x64488b042528	                mov rax, qword fs:[0x28]	      3588	mbyte.c	FUNCTION_64
0x4002557	        0x488945e8	             mov qword [rbp - 0x18], rax	      3588	mbyte.c	FUNCTION_64
0x400255b	            0x31c0	                            xor eax, eax	      3588	mbyte.c	FUNCTION_64
0x400255d	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x4002561	        0x488d45c8	                   lea rax, [rbp - 0x38]	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x4002565	          0x4889d6	                            mov rsi, rdx	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x4002568	          0x4889c7	                            mov rdi, rax	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x400256b	      0xe8cfefffff	         call sym.utf_safe_read_char_adv	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x4002570	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3594	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x4002573	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4002577	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x400257b	          0x4889d6	                            mov rsi, rdx	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x400257e	          0x4889c7	                            mov rdi, rax	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4002581	      0xe8b9efffff	         call sym.utf_safe_read_char_adv	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4002586	          0x8945d8	             mov dword [rbp - 0x28], eax	      3595	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x4002589	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x400258d	            0x7e3c	                           jle 0x40025cb	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x400258f	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x4002593	            0x7e36	                           jle 0x40025cb	      3597	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x4002595	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3600	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x4002598	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      3600	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x400259b	            0x742b	                            je 0x40025c8	      3600	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x400259d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x40025a0	            0x89c7	                            mov edi, eax	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x40025a2	      0xe800000000	                          call 0x40025a7	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x40025a7	            0x89c3	                            mov ebx, eax	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x40025a9	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x40025ac	            0x89c7	                            mov edi, eax	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x40025ae	      0xe800000000	                          call 0x40025b3	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x40025b3	            0x29c3	                            sub ebx, eax	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x40025b5	            0x89d8	                            mov eax, ebx	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x40025b7	          0x8945dc	             mov dword [rbp - 0x24], eax	      3603	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x40025ba	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3604	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x40025be	            0x749d	                            je 0x400255d	      3604	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x40025c0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3605	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x40025c3	      0xe99f010000	                           jmp 0x4002767	      3605	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x40025c8	              0x90	                                     nop	      3601	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x40025c9	            0xeb92	                           jmp 0x400255d	      3606	mbyte.c	FUNCTION_64	FOR_1
0x40025cb	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3610	mbyte.c	FUNCTION_64	IF_4
0x40025cf	            0x7406	                            je 0x40025d7	      3610	mbyte.c	FUNCTION_64	IF_4
0x40025d1	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3610	mbyte.c	FUNCTION_64	IF_4
0x40025d5	            0x7530	                           jne 0x4002607	      3610	mbyte.c	FUNCTION_64	IF_4
0x40025d7	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3613	mbyte.c	FUNCTION_64	IF_4	IF_5
0x40025db	            0x7510	                           jne 0x40025ed	      3613	mbyte.c	FUNCTION_64	IF_4	IF_5
0x40025dd	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3613	mbyte.c	FUNCTION_64	IF_4	IF_5
0x40025e1	            0x750a	                           jne 0x40025ed	      3613	mbyte.c	FUNCTION_64	IF_4	IF_5
0x40025e3	      0xb800000000	                              mov eax, 0	      3614	mbyte.c	FUNCTION_64	IF_4	IF_5
0x40025e8	      0xe97a010000	                           jmp 0x4002767	      3614	mbyte.c	FUNCTION_64	IF_4	IF_5
0x40025ed	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3615	mbyte.c	FUNCTION_64	IF_4
0x40025f1	            0x750a	                           jne 0x40025fd	      3615	mbyte.c	FUNCTION_64	IF_4
0x40025f3	      0xb8ffffffff	                     mov eax, 0xffffffff	      3615	mbyte.c	FUNCTION_64	IF_4
0x40025f8	      0xe96a010000	                           jmp 0x4002767	      3615	mbyte.c	FUNCTION_64	IF_4
0x40025fd	      0xb801000000	                              mov eax, 1	      3615	mbyte.c	FUNCTION_64	IF_4
0x4002602	      0xe960010000	                           jmp 0x4002767	      3615	mbyte.c	FUNCTION_64	IF_4
0x4002607	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3625	mbyte.c	FUNCTION_64	IF_6
0x400260b	            0x7430	                            je 0x400263d	      3625	mbyte.c	FUNCTION_64	IF_6
0x400260d	        0x837dd8ff	cmp dword [rbp - 0x28], 0xffffffffffffffff	      3625	mbyte.c	FUNCTION_64	IF_6
0x4002611	            0x752a	                           jne 0x400263d	      3625	mbyte.c	FUNCTION_64	IF_6
0x4002613	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4002616	            0x89c7	                            mov edi, eax	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4002618	      0xe800000000	                          call 0x400261d	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x400261d	            0x89c2	                            mov edx, eax	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x400261f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4002623	          0x4889c6	                            mov rsi, rax	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4002626	            0x89d7	                            mov edi, edx	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4002628	      0xe800000000	                          call 0x400262d	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x400262d	            0x4898	                                    cdqe	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x400262f	        0x488945b8	             mov qword [rbp - 0x48], rax	      3627	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x4002633	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3628	mbyte.c	FUNCTION_64	IF_6
0x4002637	        0x488945c8	             mov qword [rbp - 0x38], rax	      3628	mbyte.c	FUNCTION_64	IF_6
0x400263b	            0xeb3c	                           jmp 0x4002679	      3628	mbyte.c	FUNCTION_64	IF_6
0x400263d	        0x837dd8ff	cmp dword [rbp - 0x28], 0xffffffffffffffff	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4002641	     0xf848d000000	                            je 0x40026d4	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4002647	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x400264b	     0xf8583000000	                           jne 0x40026d4	      3630	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4002651	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4002654	            0x89c7	                            mov edi, eax	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4002656	      0xe800000000	                          call 0x400265b	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x400265b	            0x89c2	                            mov edx, eax	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x400265d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4002661	          0x4889c6	                            mov rsi, rax	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4002664	            0x89d7	                            mov edi, edx	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4002666	      0xe800000000	                          call 0x400266b	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x400266b	            0x4898	                                    cdqe	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x400266d	        0x488945b0	             mov qword [rbp - 0x50], rax	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x4002671	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3633	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4002675	        0x488945c0	             mov qword [rbp - 0x40], rax	      3633	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x4002679	            0xeb59	                           jmp 0x40026d4	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x400267b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x400267f	           0xfb600	                   movzx eax, byte [rax]	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4002682	           0xfb6d0	                           movzx edx, al	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4002685	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4002689	           0xfb600	                   movzx eax, byte [rax]	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x400268c	           0xfb6c0	                           movzx eax, al	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x400268f	            0x29c2	                            sub edx, eax	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4002691	            0x89d0	                            mov eax, edx	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4002693	          0x8945dc	             mov dword [rbp - 0x24], eax	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x4002696	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x400269a	            0x7408	                            je 0x40026a4	      3639	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x400269c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3640	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x400269f	      0xe9c3000000	                           jmp 0x4002767	      3640	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x40026a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3642	mbyte.c	FUNCTION_64	WHILE_1
0x40026a8	        0x4883c001	                              add rax, 1	      3642	mbyte.c	FUNCTION_64	WHILE_1
0x40026ac	        0x488945c8	             mov qword [rbp - 0x38], rax	      3642	mbyte.c	FUNCTION_64	WHILE_1
0x40026b0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3643	mbyte.c	FUNCTION_64	WHILE_1
0x40026b4	        0x4883c001	                              add rax, 1	      3643	mbyte.c	FUNCTION_64	WHILE_1
0x40026b8	        0x488945c0	             mov qword [rbp - 0x40], rax	      3643	mbyte.c	FUNCTION_64	WHILE_1
0x40026bc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3644	mbyte.c	FUNCTION_64	WHILE_1
0x40026c0	        0x4883e801	                              sub rax, 1	      3644	mbyte.c	FUNCTION_64	WHILE_1
0x40026c4	        0x488945b8	             mov qword [rbp - 0x48], rax	      3644	mbyte.c	FUNCTION_64	WHILE_1
0x40026c8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3645	mbyte.c	FUNCTION_64	WHILE_1
0x40026cc	        0x4883e801	                              sub rax, 1	      3645	mbyte.c	FUNCTION_64	WHILE_1
0x40026d0	        0x488945b0	             mov qword [rbp - 0x50], rax	      3645	mbyte.c	FUNCTION_64	WHILE_1
0x40026d4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026d8	          0x4885c0	                           test rax, rax	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026db	            0x7423	                            je 0x4002700	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026dd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026e1	          0x4885c0	                           test rax, rax	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026e4	            0x741a	                            je 0x4002700	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026e6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026ea	           0xfb600	                   movzx eax, byte [rax]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026ed	            0x84c0	                             test al, al	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026ef	            0x740f	                            je 0x4002700	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026f1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026f5	           0xfb600	                   movzx eax, byte [rax]	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026f8	            0x84c0	                             test al, al	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x40026fa	     0xf857bffffff	                           jne 0x400267b	      3636	mbyte.c	FUNCTION_64	WHILE_1
0x4002700	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3648	mbyte.c	FUNCTION_64	IF_9
0x4002704	          0x4885c0	                           test rax, rax	      3648	mbyte.c	FUNCTION_64	IF_9
0x4002707	            0x7413	                            je 0x400271c	      3648	mbyte.c	FUNCTION_64	IF_9
0x4002709	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3648	mbyte.c	FUNCTION_64	IF_9
0x400270d	           0xfb600	                   movzx eax, byte [rax]	      3648	mbyte.c	FUNCTION_64	IF_9
0x4002710	            0x84c0	                             test al, al	      3648	mbyte.c	FUNCTION_64	IF_9
0x4002712	            0x7508	                           jne 0x400271c	      3648	mbyte.c	FUNCTION_64	IF_9
0x4002714	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      3649	mbyte.c	FUNCTION_64	IF_9
0x400271c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3650	mbyte.c	FUNCTION_64	IF_10
0x4002720	          0x4885c0	                           test rax, rax	      3650	mbyte.c	FUNCTION_64	IF_10
0x4002723	            0x7413	                            je 0x4002738	      3650	mbyte.c	FUNCTION_64	IF_10
0x4002725	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3650	mbyte.c	FUNCTION_64	IF_10
0x4002729	           0xfb600	                   movzx eax, byte [rax]	      3650	mbyte.c	FUNCTION_64	IF_10
0x400272c	            0x84c0	                             test al, al	      3650	mbyte.c	FUNCTION_64	IF_10
0x400272e	            0x7508	                           jne 0x4002738	      3650	mbyte.c	FUNCTION_64	IF_10
0x4002730	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      3651	mbyte.c	FUNCTION_64	IF_10
0x4002738	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3653	mbyte.c	FUNCTION_64	IF_11
0x400273c	          0x4885c0	                           test rax, rax	      3653	mbyte.c	FUNCTION_64	IF_11
0x400273f	            0x7510	                           jne 0x4002751	      3653	mbyte.c	FUNCTION_64	IF_11
0x4002741	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3653	mbyte.c	FUNCTION_64	IF_11
0x4002745	          0x4885c0	                           test rax, rax	      3653	mbyte.c	FUNCTION_64	IF_11
0x4002748	            0x7507	                           jne 0x4002751	      3653	mbyte.c	FUNCTION_64	IF_11
0x400274a	      0xb800000000	                              mov eax, 0	      3654	mbyte.c	FUNCTION_64	IF_11
0x400274f	            0xeb16	                           jmp 0x4002767	      3654	mbyte.c	FUNCTION_64	IF_11
0x4002751	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3655	mbyte.c	FUNCTION_64
0x4002755	          0x4885c0	                           test rax, rax	      3655	mbyte.c	FUNCTION_64
0x4002758	            0x7507	                           jne 0x4002761	      3655	mbyte.c	FUNCTION_64
0x400275a	      0xb8ffffffff	                     mov eax, 0xffffffff	      3655	mbyte.c	FUNCTION_64
0x400275f	            0xeb06	                           jmp 0x4002767	      3655	mbyte.c	FUNCTION_64
0x4002761	      0xb801000000	                              mov eax, 1	      3655	mbyte.c	FUNCTION_64
0x4002766	              0x90	                                     nop	      3655	mbyte.c	FUNCTION_64
0x4002767	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      3656	mbyte.c	FUNCTION_64
0x400276b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3656	mbyte.c	FUNCTION_64
0x4002774	            0x7405	                            je 0x400277b	      3656	mbyte.c	FUNCTION_64
0x4002776	      0xe800000000	                          call 0x400277b	      3656	mbyte.c	FUNCTION_64
0x400277b	        0x4883c448	                           add rsp, 0x48	      3656	mbyte.c	FUNCTION_64
0x400277f	              0x5b	                                 pop rbx	      3656	mbyte.c	FUNCTION_64
0x4002780	              0x5d	                                 pop rbp	      3656	mbyte.c	FUNCTION_64
0x4002781	              0xc3	                                     ret	      3656	mbyte.c	FUNCTION_64
call_imactivatefunc	CALL,1:IF,1:ELSE,1:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	25
0x4004395	              0x55	                                push rbp	      4797	mbyte.c	FUNCTION_95
0x4004396	          0x4889e5	                            mov rbp, rsp	      4797	mbyte.c	FUNCTION_95
0x4004399	        0x4883ec20	                           sub rsp, 0x20	      4797	mbyte.c	FUNCTION_95
0x400439d	          0x897dec	             mov dword [rbp - 0x14], edi	      4797	mbyte.c	FUNCTION_95
0x40043a0	    0x64488b042528	                mov rax, qword fs:[0x28]	      4797	mbyte.c	FUNCTION_95
0x40043a9	        0x488945f8	                mov qword [rbp - 8], rax	      4797	mbyte.c	FUNCTION_95
0x40043ad	            0x31c0	                            xor eax, eax	      4797	mbyte.c	FUNCTION_95
0x40043af	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4800	mbyte.c	FUNCTION_95	IF_1
0x40043b3	            0x740a	                            je 0x40043bf	      4800	mbyte.c	FUNCTION_95	IF_1
0x40043b5	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4801	mbyte.c	FUNCTION_95	IF_1
0x40043bd	            0xeb08	                           jmp 0x40043c7	      4801	mbyte.c	FUNCTION_95	IF_1
0x40043bf	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4803	mbyte.c	FUNCTION_95	ELSE_1
0x40043c7	    0x488b05000000	            mov rax, qword [0x040043ce] 	      4804	mbyte.c	FUNCTION_95	CALL_1
0x40043ce	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      4804	mbyte.c	FUNCTION_95	CALL_1
0x40043d2	      0xb900000000	                              mov ecx, 0	      4804	mbyte.c	FUNCTION_95	CALL_1
0x40043d7	      0xbe01000000	                              mov esi, 1	      4804	mbyte.c	FUNCTION_95	CALL_1
0x40043dc	          0x4889c7	                            mov rdi, rax	      4804	mbyte.c	FUNCTION_95	CALL_1
0x40043df	      0xe800000000	                          call 0x40043e4	      4804	mbyte.c	FUNCTION_95	CALL_1
0x40043e4	              0x90	                                     nop	      4805	mbyte.c	FUNCTION_95
0x40043e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4805	mbyte.c	FUNCTION_95
0x40043e9	    0x644833042528	                xor rax, qword fs:[0x28]	      4805	mbyte.c	FUNCTION_95
0x40043f2	            0x7405	                            je 0x40043f9	      4805	mbyte.c	FUNCTION_95
0x40043f4	      0xe800000000	                          call 0x40043f9	      4805	mbyte.c	FUNCTION_95
0x40043f9	              0xc9	                                   leave	      4805	mbyte.c	FUNCTION_95
0x40043fa	              0xc3	                                     ret	      4805	mbyte.c	FUNCTION_95
call_imstatusfunc	CALL,2:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	29
0x40043fb	              0x55	                                push rbp	      4809	mbyte.c	FUNCTION_96
0x40043fc	          0x4889e5	                            mov rbp, rsp	      4809	mbyte.c	FUNCTION_96
0x40043ff	        0x4883ec10	                           sub rsp, 0x10	      4809	mbyte.c	FUNCTION_96
0x4004403	    0x8b0500000000	            mov eax, dword [0x04004409] 	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x4004409	            0x85c0	                           test eax, eax	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x400440b	            0x7509	                           jne 0x4004416	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x400440d	      0xe800000000	                          call 0x4004412	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x4004412	            0x85c0	                           test eax, eax	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x4004414	            0x7407	                            je 0x400441d	      4813	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x4004416	      0xb800000000	                              mov eax, 0	      4814	mbyte.c	FUNCTION_96	IF_1
0x400441b	            0xeb49	                           jmp 0x4004466	      4814	mbyte.c	FUNCTION_96	IF_1
0x400441d	    0x8b0500000000	            mov eax, dword [0x04004423] 	      4817	mbyte.c	FUNCTION_96
0x4004423	          0x83c001	                              add eax, 1	      4817	mbyte.c	FUNCTION_96
0x4004426	    0x890500000000	            mov dword [0x0400442c], eax 	      4817	mbyte.c	FUNCTION_96
0x400442c	    0x488b05000000	            mov rax, qword [0x04004433] 	      4818	mbyte.c	FUNCTION_96	CALL_2
0x4004433	      0xb900000000	                              mov ecx, 0	      4818	mbyte.c	FUNCTION_96	CALL_2
0x4004438	      0xba00000000	                              mov edx, 0	      4818	mbyte.c	FUNCTION_96	CALL_2
0x400443d	      0xbe00000000	                              mov esi, 0	      4818	mbyte.c	FUNCTION_96	CALL_2
0x4004442	          0x4889c7	                            mov rdi, rax	      4818	mbyte.c	FUNCTION_96	CALL_2
0x4004445	      0xe800000000	                          call 0x400444a	      4818	mbyte.c	FUNCTION_96	CALL_2
0x400444a	          0x8945fc	                mov dword [rbp - 4], eax	      4818	mbyte.c	FUNCTION_96	CALL_2
0x400444d	    0x8b0500000000	            mov eax, dword [0x04004453] 	      4819	mbyte.c	FUNCTION_96
0x4004453	          0x83e801	                              sub eax, 1	      4819	mbyte.c	FUNCTION_96
0x4004456	    0x890500000000	            mov dword [0x0400445c], eax 	      4819	mbyte.c	FUNCTION_96
0x400445c	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4820	mbyte.c	FUNCTION_96
0x4004460	           0xf9fc0	                                 setg al	      4820	mbyte.c	FUNCTION_96
0x4004463	           0xfb6c0	                           movzx eax, al	      4820	mbyte.c	FUNCTION_96
0x4004466	              0xc9	                                   leave	      4821	mbyte.c	FUNCTION_96
0x4004467	              0xc3	                                     ret	      4821	mbyte.c	FUNCTION_96
latin_char2len	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	6
0x4000b8c	              0x55	                                push rbp	      1080	mbyte.c	ELSE_8	FUNCTION_10
0x4000b8d	          0x4889e5	                            mov rbp, rsp	      1080	mbyte.c	ELSE_8	FUNCTION_10
0x4000b90	          0x897dfc	                mov dword [rbp - 4], edi	      1080	mbyte.c	ELSE_8	FUNCTION_10
0x4000b93	      0xb801000000	                              mov eax, 1	      1081	mbyte.c	ELSE_8	FUNCTION_10
0x4000b98	              0x5d	                                 pop rbp	      1082	mbyte.c	ELSE_8	FUNCTION_10
0x4000b99	              0xc3	                                     ret	      1082	mbyte.c	ELSE_8	FUNCTION_10
utf_islower	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	16
0x400246c	              0x55	                                push rbp	      3546	mbyte.c	FUNCTION_61
0x400246d	          0x4889e5	                            mov rbp, rsp	      3546	mbyte.c	FUNCTION_61
0x4002470	        0x4883ec10	                           sub rsp, 0x10	      3546	mbyte.c	FUNCTION_61
0x4002474	          0x897dfc	                mov dword [rbp - 4], edi	      3546	mbyte.c	FUNCTION_61
0x4002477	          0x8b45fc	                mov eax, dword [rbp - 4]	      3548	mbyte.c	FUNCTION_61	CALL_1
0x400247a	            0x89c7	                            mov edi, eax	      3548	mbyte.c	FUNCTION_61	CALL_1
0x400247c	      0xe800000000	                          call 0x4002481	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4002481	          0x3b45fc	                cmp eax, dword [rbp - 4]	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4002484	            0x7509	                           jne 0x400248f	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4002486	    0x817dfcdf0000	               cmp dword [rbp - 4], 0xdf	      3548	mbyte.c	FUNCTION_61	CALL_1
0x400248d	            0x7507	                           jne 0x4002496	      3548	mbyte.c	FUNCTION_61	CALL_1
0x400248f	      0xb801000000	                              mov eax, 1	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4002494	            0xeb05	                           jmp 0x400249b	      3548	mbyte.c	FUNCTION_61	CALL_1
0x4002496	      0xb800000000	                              mov eax, 0	      3548	mbyte.c	FUNCTION_61	CALL_1
0x400249b	              0xc9	                                   leave	      3549	mbyte.c	FUNCTION_61
0x400249c	              0xc3	                                     ret	      3549	mbyte.c	FUNCTION_61
mb_get_class_buf	CALL,6:IF,5:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	77
0x40008dc	              0x55	                                push rbp	       884	mbyte.c	FUNCTION_8
0x40008dd	          0x4889e5	                            mov rbp, rsp	       884	mbyte.c	FUNCTION_8
0x40008e0	        0x4883ec10	                           sub rsp, 0x10	       884	mbyte.c	FUNCTION_8
0x40008e4	        0x48897df8	                mov qword [rbp - 8], rdi	       884	mbyte.c	FUNCTION_8
0x40008e8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       884	mbyte.c	FUNCTION_8
0x40008ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x40008f0	           0xfb600	                   movzx eax, byte [rax]	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x40008f3	           0xfb6c0	                           movzx eax, al	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x40008f6	            0x4898	                                    cdqe	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x40008f8	     0xfb680000000	                   movzx eax, byte [rax]	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x40008ff	            0x3c01	                               cmp al, 1	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x4000901	            0x7555	                           jne 0x4000958	       885	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x4000903	        0x488b45f8	                mov rax, qword [rbp - 8]	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000907	           0xfb600	                   movzx eax, byte [rax]	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x400090a	            0x84c0	                             test al, al	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x400090c	            0x7416	                            je 0x4000924	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x400090e	        0x488b45f8	                mov rax, qword [rbp - 8]	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000912	           0xfb600	                   movzx eax, byte [rax]	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000915	            0x3c20	                            cmp al, 0x20	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000917	            0x740b	                            je 0x4000924	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000919	        0x488b45f8	                mov rax, qword [rbp - 8]	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x400091d	           0xfb600	                   movzx eax, byte [rax]	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000920	            0x3c09	                               cmp al, 9	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000922	            0x750a	                           jne 0x400092e	       887	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000924	      0xb800000000	                              mov eax, 0	       888	mbyte.c	FUNCTION_8	IF_1	IF_2
0x4000929	      0xe99e000000	                           jmp 0x40009cc	       888	mbyte.c	FUNCTION_8	IF_1	IF_2
0x400092e	        0x488b45f8	                mov rax, qword [rbp - 8]	       889	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x4000932	           0xfb600	                   movzx eax, byte [rax]	       889	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x4000935	           0xfb6c0	                           movzx eax, al	       889	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x4000938	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       889	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x400093c	          0x4889d6	                            mov rsi, rdx	       889	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x400093f	            0x89c7	                            mov edi, eax	       889	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x4000941	      0xe800000000	                          call 0x4000946	       889	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x4000946	            0x85c0	                           test eax, eax	       889	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x4000948	            0x7407	                            je 0x4000951	       889	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x400094a	      0xb802000000	                              mov eax, 2	       890	mbyte.c	FUNCTION_8	IF_1	IF_3
0x400094f	            0xeb7b	                           jmp 0x40009cc	       890	mbyte.c	FUNCTION_8	IF_1	IF_3
0x4000951	      0xb801000000	                              mov eax, 1	       891	mbyte.c	FUNCTION_8	IF_1
0x4000956	            0xeb74	                           jmp 0x40009cc	       891	mbyte.c	FUNCTION_8	IF_1
0x4000958	    0x8b0500000000	            mov eax, dword [0x0400095e] 	       893	mbyte.c	FUNCTION_8	IF_4
0x400095e	            0x85c0	                           test eax, eax	       893	mbyte.c	FUNCTION_8	IF_4
0x4000960	            0x743d	                            je 0x400099f	       893	mbyte.c	FUNCTION_8	IF_4
0x4000962	        0x488b45f8	                mov rax, qword [rbp - 8]	       893	mbyte.c	FUNCTION_8	IF_4
0x4000966	           0xfb600	                   movzx eax, byte [rax]	       893	mbyte.c	FUNCTION_8	IF_4
0x4000969	            0x84c0	                             test al, al	       893	mbyte.c	FUNCTION_8	IF_4
0x400096b	            0x7432	                            je 0x400099f	       893	mbyte.c	FUNCTION_8	IF_4
0x400096d	        0x488b45f8	                mov rax, qword [rbp - 8]	       893	mbyte.c	FUNCTION_8	IF_4
0x4000971	        0x4883c001	                              add rax, 1	       893	mbyte.c	FUNCTION_8	IF_4
0x4000975	           0xfb600	                   movzx eax, byte [rax]	       893	mbyte.c	FUNCTION_8	IF_4
0x4000978	            0x84c0	                             test al, al	       893	mbyte.c	FUNCTION_8	IF_4
0x400097a	            0x7423	                            je 0x400099f	       893	mbyte.c	FUNCTION_8	IF_4
0x400097c	        0x488b45f8	                mov rax, qword [rbp - 8]	       894	mbyte.c	FUNCTION_8	CALL_4
0x4000980	        0x4883c001	                              add rax, 1	       894	mbyte.c	FUNCTION_8	CALL_4
0x4000984	           0xfb600	                   movzx eax, byte [rax]	       894	mbyte.c	FUNCTION_8	CALL_4
0x4000987	           0xfb6d0	                           movzx edx, al	       894	mbyte.c	FUNCTION_8	CALL_4
0x400098a	        0x488b45f8	                mov rax, qword [rbp - 8]	       894	mbyte.c	FUNCTION_8	CALL_4
0x400098e	           0xfb600	                   movzx eax, byte [rax]	       894	mbyte.c	FUNCTION_8	CALL_4
0x4000991	           0xfb6c0	                           movzx eax, al	       894	mbyte.c	FUNCTION_8	CALL_4
0x4000994	            0x89d6	                            mov esi, edx	       894	mbyte.c	FUNCTION_8	CALL_4
0x4000996	            0x89c7	                            mov edi, eax	       894	mbyte.c	FUNCTION_8	CALL_4
0x4000998	      0xe800000000	                          call 0x400099d	       894	mbyte.c	FUNCTION_8	CALL_4
0x400099d	            0xeb2d	                           jmp 0x40009cc	       894	mbyte.c	FUNCTION_8	CALL_4
0x400099f	    0x8b0500000000	            mov eax, dword [0x040009a5] 	       895	mbyte.c	FUNCTION_8	IF_5
0x40009a5	            0x85c0	                           test eax, eax	       895	mbyte.c	FUNCTION_8	IF_5
0x40009a7	            0x741e	                            je 0x40009c7	       895	mbyte.c	FUNCTION_8	IF_5
0x40009a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       896	mbyte.c	FUNCTION_8	CALL_6
0x40009ad	          0x4889c7	                            mov rdi, rax	       896	mbyte.c	FUNCTION_8	CALL_6
0x40009b0	      0xe800000000	                          call 0x40009b5	       896	mbyte.c	FUNCTION_8	CALL_6
0x40009b5	            0x89c2	                            mov edx, eax	       896	mbyte.c	FUNCTION_8	CALL_6
0x40009b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       896	mbyte.c	FUNCTION_8	CALL_6
0x40009bb	          0x4889c6	                            mov rsi, rax	       896	mbyte.c	FUNCTION_8	CALL_6
0x40009be	            0x89d7	                            mov edi, edx	       896	mbyte.c	FUNCTION_8	CALL_6
0x40009c0	      0xe800000000	                          call 0x40009c5	       896	mbyte.c	FUNCTION_8	CALL_6
0x40009c5	            0xeb05	                           jmp 0x40009cc	       896	mbyte.c	FUNCTION_8	CALL_6
0x40009c7	      0xb800000000	                              mov eax, 0	       897	mbyte.c	FUNCTION_8
0x40009cc	              0xc9	                                   leave	       898	mbyte.c	FUNCTION_8
0x40009cd	              0xc3	                                     ret	       898	mbyte.c	FUNCTION_8
im_preedit_window_set_position	CALL,10:IF,3:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	97
0x40046d2	              0x55	                                push rbp	      4929	mbyte.c	FUNCTION_103
0x40046d3	          0x4889e5	                            mov rbp, rsp	      4929	mbyte.c	FUNCTION_103
0x40046d6	            0x4154	                                push r12	      4929	mbyte.c	FUNCTION_103
0x40046d8	              0x53	                                push rbx	      4929	mbyte.c	FUNCTION_103
0x40046d9	        0x4883ec20	                           sub rsp, 0x20	      4929	mbyte.c	FUNCTION_103
0x40046dd	    0x64488b042528	                mov rax, qword fs:[0x28]	      4929	mbyte.c	FUNCTION_103
0x40046e6	        0x488945e8	             mov qword [rbp - 0x18], rax	      4929	mbyte.c	FUNCTION_103
0x40046ea	            0x31c0	                            xor eax, eax	      4929	mbyte.c	FUNCTION_103
0x40046ec	    0x488b05000000	            mov rax, qword [0x040046f3] 	      4932	mbyte.c	FUNCTION_103	IF_1
0x40046f3	          0x4885c0	                           test rax, rax	      4932	mbyte.c	FUNCTION_103	IF_1
0x40046f6	     0xf840e010000	                            je 0x400480a	      4932	mbyte.c	FUNCTION_103	IF_1
0x40046fc	    0x488b05000000	            mov rax, qword [0x04004703] 	      4935	mbyte.c	FUNCTION_103	CALL_1
0x4004703	        0x488d55e4	                   lea rdx, [rbp - 0x1c]	      4935	mbyte.c	FUNCTION_103	CALL_1
0x4004707	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      4935	mbyte.c	FUNCTION_103	CALL_1
0x400470b	          0x4889ce	                            mov rsi, rcx	      4935	mbyte.c	FUNCTION_103	CALL_1
0x400470e	          0x4889c7	                            mov rdi, rax	      4935	mbyte.c	FUNCTION_103	CALL_1
0x4004711	      0xe800000000	                          call 0x4004716	      4935	mbyte.c	FUNCTION_103	CALL_1
0x4004716	    0x488b05000000	            mov rax, qword [0x0400471d] 	      4939	mbyte.c	FUNCTION_103	CALL_4
0x400471d	        0x488b4050	            mov rax, qword [rax + 0x50] 	      4939	mbyte.c	FUNCTION_103	CALL_4
0x4004721	        0x488d55d4	                   lea rdx, [rbp - 0x2c]	      4939	mbyte.c	FUNCTION_103	CALL_4
0x4004725	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      4939	mbyte.c	FUNCTION_103	CALL_4
0x4004729	          0x4889ce	                            mov rsi, rcx	      4939	mbyte.c	FUNCTION_103	CALL_4
0x400472c	          0x4889c7	                            mov rdi, rax	      4939	mbyte.c	FUNCTION_103	CALL_4
0x400472f	      0xe800000000	                          call 0x4004734	      4939	mbyte.c	FUNCTION_103	CALL_4
0x4004734	      0xe800000000	                          call 0x4004739	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4004739	          0x4889c2	                            mov rdx, rax	      4941	mbyte.c	FUNCTION_103	CALL_6
0x400473c	    0x488b05000000	            mov rax, qword [0x04004743] 	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4004743	          0x4889d6	                            mov rsi, rdx	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4004746	          0x4889c7	                            mov rdi, rax	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4004749	      0xe800000000	                          call 0x400474e	      4941	mbyte.c	FUNCTION_103	CALL_6
0x400474e	          0x4889c1	                            mov rcx, rax	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4004751	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4004755	        0x488d45d8	                   lea rax, [rbp - 0x28]	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4004759	          0x4889c6	                            mov rsi, rax	      4941	mbyte.c	FUNCTION_103	CALL_6
0x400475c	          0x4889cf	                            mov rdi, rcx	      4941	mbyte.c	FUNCTION_103	CALL_6
0x400475f	      0xe800000000	                          call 0x4004764	      4941	mbyte.c	FUNCTION_103	CALL_6
0x4004764	    0x8b1500000000	            mov edx, dword [0x0400476a] 	      4942	mbyte.c	FUNCTION_103	CALL_7
0x400476a	    0x8b0500000000	            mov eax, dword [0x04004770] 	      4942	mbyte.c	FUNCTION_103	CALL_7
0x4004770	           0xfafd0	                           imul edx, eax	      4942	mbyte.c	FUNCTION_103	CALL_7
0x4004773	    0x8b0500000000	            mov eax, dword [0x04004779] 	      4942	mbyte.c	FUNCTION_103	CALL_7
0x4004779	             0x1c2	                            add edx, eax	      4942	mbyte.c	FUNCTION_103	CALL_7
0x400477b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4942	mbyte.c	FUNCTION_103	CALL_7
0x400477e	             0x1d0	                            add eax, edx	      4942	mbyte.c	FUNCTION_103	CALL_7
0x4004780	          0x8945d0	             mov dword [rbp - 0x30], eax	      4942	mbyte.c	FUNCTION_103	CALL_7
0x4004783	    0x8b1500000000	            mov edx, dword [0x04004789] 	      4943	mbyte.c	FUNCTION_103	CALL_8
0x4004789	    0x8b0500000000	            mov eax, dword [0x0400478f] 	      4943	mbyte.c	FUNCTION_103	CALL_8
0x400478f	           0xfafd0	                           imul edx, eax	      4943	mbyte.c	FUNCTION_103	CALL_8
0x4004792	    0x8b0500000000	            mov eax, dword [0x04004798] 	      4943	mbyte.c	FUNCTION_103	CALL_8
0x4004798	             0x1c2	                            add edx, eax	      4943	mbyte.c	FUNCTION_103	CALL_8
0x400479a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4943	mbyte.c	FUNCTION_103	CALL_8
0x400479d	             0x1d0	                            add eax, edx	      4943	mbyte.c	FUNCTION_103	CALL_8
0x400479f	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4943	mbyte.c	FUNCTION_103	CALL_8
0x40047a2	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4944	mbyte.c	FUNCTION_103	IF_2
0x40047a5	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4944	mbyte.c	FUNCTION_103	IF_2
0x40047a8	             0x1c2	                            add edx, eax	      4944	mbyte.c	FUNCTION_103	IF_2
0x40047aa	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4944	mbyte.c	FUNCTION_103	IF_2
0x40047ad	            0x39c2	                            cmp edx, eax	      4944	mbyte.c	FUNCTION_103	IF_2
0x40047af	            0x7e0d	                           jle 0x40047be	      4944	mbyte.c	FUNCTION_103	IF_2
0x40047b1	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      4945	mbyte.c	FUNCTION_103	IF_2
0x40047b4	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4945	mbyte.c	FUNCTION_103	IF_2
0x40047b7	            0x29c2	                            sub edx, eax	      4945	mbyte.c	FUNCTION_103	IF_2
0x40047b9	            0x89d0	                            mov eax, edx	      4945	mbyte.c	FUNCTION_103	IF_2
0x40047bb	          0x8945d0	             mov dword [rbp - 0x30], eax	      4945	mbyte.c	FUNCTION_103	IF_2
0x40047be	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      4946	mbyte.c	FUNCTION_103	IF_3
0x40047c1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4946	mbyte.c	FUNCTION_103	IF_3
0x40047c4	             0x1c2	                            add edx, eax	      4946	mbyte.c	FUNCTION_103	IF_3
0x40047c6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4946	mbyte.c	FUNCTION_103	IF_3
0x40047c9	            0x39c2	                            cmp edx, eax	      4946	mbyte.c	FUNCTION_103	IF_3
0x40047cb	            0x7e0d	                           jle 0x40047da	      4946	mbyte.c	FUNCTION_103	IF_3
0x40047cd	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4947	mbyte.c	FUNCTION_103	IF_3
0x40047d0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4947	mbyte.c	FUNCTION_103	IF_3
0x40047d3	            0x29c2	                            sub edx, eax	      4947	mbyte.c	FUNCTION_103	IF_3
0x40047d5	            0x89d0	                            mov eax, edx	      4947	mbyte.c	FUNCTION_103	IF_3
0x40047d7	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4947	mbyte.c	FUNCTION_103	IF_3
0x40047da	        0x448b65d4	            mov r12d, dword [rbp - 0x2c]	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40047de	          0x8b5dd0	             mov ebx, dword [rbp - 0x30]	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40047e1	      0xe800000000	                          call 0x40047e6	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40047e6	          0x4889c2	                            mov rdx, rax	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40047e9	    0x488b05000000	            mov rax, qword [0x040047f0] 	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40047f0	          0x4889d6	                            mov rsi, rdx	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40047f3	          0x4889c7	                            mov rdi, rax	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40047f6	      0xe800000000	                          call 0x40047fb	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40047fb	          0x4489e2	                           mov edx, r12d	      4948	mbyte.c	FUNCTION_103	CALL_10
0x40047fe	            0x89de	                            mov esi, ebx	      4948	mbyte.c	FUNCTION_103	CALL_10
0x4004800	          0x4889c7	                            mov rdi, rax	      4948	mbyte.c	FUNCTION_103	CALL_10
0x4004803	      0xe800000000	                          call 0x4004808	      4948	mbyte.c	FUNCTION_103	CALL_10
0x4004808	            0xeb01	                           jmp 0x400480b	      4948	mbyte.c	FUNCTION_103	CALL_10
0x400480a	              0x90	                                     nop	      4933	mbyte.c	FUNCTION_103	IF_1
0x400480b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4949	mbyte.c	FUNCTION_103
0x400480f	    0x644833042528	                xor rax, qword fs:[0x28]	      4949	mbyte.c	FUNCTION_103
0x4004818	            0x7405	                            je 0x400481f	      4949	mbyte.c	FUNCTION_103
0x400481a	      0xe800000000	                          call 0x400481f	      4949	mbyte.c	FUNCTION_103
0x400481f	        0x4883c420	                           add rsp, 0x20	      4949	mbyte.c	FUNCTION_103
0x4004823	              0x5b	                                 pop rbx	      4949	mbyte.c	FUNCTION_103
0x4004824	            0x415c	                                 pop r12	      4949	mbyte.c	FUNCTION_103
0x4004826	              0x5d	                                 pop rbp	      4949	mbyte.c	FUNCTION_103
0x4004827	              0xc3	                                     ret	      4949	mbyte.c	FUNCTION_103
im_preedit_start_cb	CALL,3:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	14
0x4004e94	              0x55	                                push rbp	      5258	mbyte.c	FUNCTION_111
0x4004e95	          0x4889e5	                            mov rbp, rsp	      5258	mbyte.c	FUNCTION_111
0x4004e98	        0x4883ec10	                           sub rsp, 0x10	      5258	mbyte.c	FUNCTION_111
0x4004e9c	        0x48897df8	                mov qword [rbp - 8], rdi	      5258	mbyte.c	FUNCTION_111
0x4004ea0	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5258	mbyte.c	FUNCTION_111
0x4004ea4	    0xc70500000000	               mov dword [0x04004eae], 1	      5263	mbyte.c	FUNCTION_111
0x4004eae	    0xc70500000000	               mov dword [0x04004eb8], 1	      5264	mbyte.c	FUNCTION_111
0x4004eb8	      0xbe00000000	                              mov esi, 0	      5265	mbyte.c	FUNCTION_111	CALL_2
0x4004ebd	      0xbf01000000	                              mov edi, 1	      5265	mbyte.c	FUNCTION_111	CALL_2
0x4004ec2	      0xe800000000	                          call 0x4004ec7	      5265	mbyte.c	FUNCTION_111	CALL_2
0x4004ec7	      0xe8dcfdffff	                   call sym.im_show_info	      5266	mbyte.c	FUNCTION_111	CALL_3
0x4004ecc	              0x90	                                     nop	      5267	mbyte.c	FUNCTION_111
0x4004ecd	              0xc9	                                   leave	      5267	mbyte.c	FUNCTION_111
0x4004ece	              0xc3	                                     ret	      5267	mbyte.c	FUNCTION_111
dbcs_head_off	CALL,2:IF,1:ELSE,0:DO,0:WHILE,1:functions,0:SWITCH,0:FOR,0	39
0x4002a3f	              0x55	                                push rbp	      3770	mbyte.c	FUNCTION_68
0x4002a40	          0x4889e5	                            mov rbp, rsp	      3770	mbyte.c	FUNCTION_68
0x4002a43	        0x4883ec20	                           sub rsp, 0x20	      3770	mbyte.c	FUNCTION_68
0x4002a47	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3770	mbyte.c	FUNCTION_68
0x4002a4b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3770	mbyte.c	FUNCTION_68
0x4002a4f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a53	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a57	            0x7626	                           jbe 0x4002a7f	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a59	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a5d	        0x4883e801	                              sub rax, 1	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a61	           0xfb600	                   movzx eax, byte [rax]	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a64	           0xfb6c0	                           movzx eax, al	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a67	            0x4898	                                    cdqe	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a69	     0xfb680000000	                   movzx eax, byte [rax]	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a70	            0x3c01	                               cmp al, 1	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a72	            0x740b	                            je 0x4002a7f	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a74	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a78	           0xfb600	                   movzx eax, byte [rax]	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a7b	            0x84c0	                             test al, al	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a7d	            0x7507	                           jne 0x4002a86	      3775	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x4002a7f	      0xb800000000	                              mov eax, 0	      3776	mbyte.c	FUNCTION_68	IF_1
0x4002a84	            0xeb34	                           jmp 0x4002aba	      3776	mbyte.c	FUNCTION_68	IF_1
0x4002a86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3780	mbyte.c	FUNCTION_68
0x4002a8a	        0x488945f8	                mov qword [rbp - 8], rax	      3780	mbyte.c	FUNCTION_68
0x4002a8e	            0xeb12	                           jmp 0x4002aa2	      3781	mbyte.c	FUNCTION_68	WHILE_1
0x4002a90	        0x488b45f8	                mov rax, qword [rbp - 8]	      3782	mbyte.c	FUNCTION_68	CALL_2
0x4002a94	          0x4889c7	                            mov rdi, rax	      3782	mbyte.c	FUNCTION_68	CALL_2
0x4002a97	      0xe8bbe1ffff	                   call sym.dbcs_ptr2len	      3782	mbyte.c	FUNCTION_68	CALL_2
0x4002a9c	            0x4898	                                    cdqe	      3782	mbyte.c	FUNCTION_68	CALL_2
0x4002a9e	        0x480145f8	                add qword [rbp - 8], rax	      3782	mbyte.c	FUNCTION_68	CALL_2
0x4002aa2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3781	mbyte.c	FUNCTION_68	WHILE_1
0x4002aa6	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3781	mbyte.c	FUNCTION_68	WHILE_1
0x4002aaa	            0x72e4	                            jb 0x4002a90	      3781	mbyte.c	FUNCTION_68	WHILE_1
0x4002aac	        0x488b45f8	                mov rax, qword [rbp - 8]	      3783	mbyte.c	FUNCTION_68
0x4002ab0	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3783	mbyte.c	FUNCTION_68
0x4002ab4	           0xf95c0	                                setne al	      3783	mbyte.c	FUNCTION_68
0x4002ab7	           0xfb6c0	                           movzx eax, al	      3783	mbyte.c	FUNCTION_68
0x4002aba	              0xc9	                                   leave	      3784	mbyte.c	FUNCTION_68
0x4002abb	              0xc3	                                     ret	      3784	mbyte.c	FUNCTION_68
enc_locale	CALL,8:IF,4:ELSE,2:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	28
0x4003f2d	              0x55	                                push rbp	      4461	mbyte.c	FUNCTION_89
0x4003f2e	          0x4889e5	                            mov rbp, rsp	      4461	mbyte.c	FUNCTION_89
0x4003f31	        0x4883ec10	                           sub rsp, 0x10	      4461	mbyte.c	FUNCTION_89
0x4003f35	      0xbf0e000000	                            mov edi, 0xe	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x4003f3a	      0xe800000000	                          call 0x4003f3f	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x4003f3f	        0x488945f8	                mov qword [rbp - 8], rax	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x4003f43	      0x48837df800	                  cmp qword [rbp - 8], 0	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x4003f48	            0x740b	                            je 0x4003f55	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x4003f4a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x4003f4e	           0xfb600	                   movzx eax, byte [rax]	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x4003f51	            0x84c0	                             test al, al	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x4003f53	            0x752d	                           jne 0x4003f82	      4478	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x4003f55	      0xbe00000000	                              mov esi, 0	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x4003f5a	      0xbf00000000	                              mov edi, 0	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x4003f5f	      0xe800000000	                          call 0x4003f64	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x4003f64	        0x488945f8	                mov qword [rbp - 8], rax	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x4003f68	      0x48837df800	                  cmp qword [rbp - 8], 0	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x4003f6d	            0x740b	                            je 0x4003f7a	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x4003f6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x4003f73	           0xfb600	                   movzx eax, byte [rax]	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x4003f76	            0x84c0	                             test al, al	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x4003f78	            0x7508	                           jne 0x4003f82	      4481	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x4003f7a	    0x48c745f80000	                  mov qword [rbp - 8], 0	      4483	mbyte.c	FUNCTION_89	IF_3	IF_4
0x4003f82	        0x488b45f8	                mov rax, qword [rbp - 8]	      4485	mbyte.c	FUNCTION_89	CALL_8
0x4003f86	          0x4889c7	                            mov rdi, rax	      4485	mbyte.c	FUNCTION_89	CALL_8
0x4003f89	      0xe800000000	                          call 0x4003f8e	      4485	mbyte.c	FUNCTION_89	CALL_8
0x4003f8e	              0xc9	                                   leave	      4487	mbyte.c	FUNCTION_89
0x4003f8f	              0xc3	                                     ret	      4487	mbyte.c	FUNCTION_89
xim_queue_key_press_event	CALL,5:IF,11:ELSE,1:DO,0:WHILE,0:functions,0:SWITCH,1:FOR,0	204
0x4005949	              0x55	                                push rbp	      5737	mbyte.c	FUNCTION_122
0x400594a	          0x4889e5	                            mov rbp, rsp	      5737	mbyte.c	FUNCTION_122
0x400594d	        0x4883ec20	                           sub rsp, 0x20	      5737	mbyte.c	FUNCTION_122
0x4005951	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5737	mbyte.c	FUNCTION_122
0x4005955	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5737	mbyte.c	FUNCTION_122
0x4005958	        0x837de400	               cmp dword [rbp - 0x1c], 0	      5738	mbyte.c	FUNCTION_122	IF_1
0x400595c	     0xf84cf010000	                            je 0x4005b31	      5738	mbyte.c	FUNCTION_122	IF_1
0x4005962	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005966	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005969	      0x3db2ff0000	                         cmp eax, 0xffb2	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400596e	     0xf843d010000	                            je 0x4005ab1	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005974	      0x3db2ff0000	                         cmp eax, 0xffb2	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005979	            0x7767	                            ja 0x40059e2	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400597b	      0x3dadff0000	                         cmp eax, 0xffad	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005980	     0xf84c5000000	                            je 0x4005a4b	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005986	      0x3dadff0000	                         cmp eax, 0xffad	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400598b	            0x7724	                            ja 0x40059b1	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400598d	      0x3daaff0000	                         cmp eax, 0xffaa	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005992	     0xf84d1000000	                            je 0x4005a69	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005998	      0x3dabff0000	                         cmp eax, 0xffab	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x400599d	     0xf8499000000	                            je 0x4005a3c	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059a3	          0x83f820	                           cmp eax, 0x20	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059a6	     0xf8465010000	                            je 0x4005b11	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059ac	      0xe96c010000	                           jmp 0x4005b1d	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059b1	      0x3dafff0000	                         cmp eax, 0xffaf	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059b6	     0xf849e000000	                            je 0x4005a5a	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059bc	      0x3dafff0000	                         cmp eax, 0xffaf	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059c1	     0xf82b1000000	                            jb 0x4005a78	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059c7	      0x3db0ff0000	                         cmp eax, 0xffb0	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059cc	     0xf84c4000000	                            je 0x4005a96	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059d2	      0x3db1ff0000	                         cmp eax, 0xffb1	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059d7	     0xf84c8000000	                            je 0x4005aa5	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059dd	      0xe93b010000	                           jmp 0x4005b1d	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059e2	      0x3db6ff0000	                         cmp eax, 0xffb6	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059e7	     0xf84f4000000	                            je 0x4005ae1	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059ed	      0x3db6ff0000	                         cmp eax, 0xffb6	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059f2	            0x771b	                            ja 0x4005a0f	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059f4	      0x3db4ff0000	                         cmp eax, 0xffb4	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059f9	     0xf84ca000000	                            je 0x4005ac9	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x40059ff	      0x3db4ff0000	                         cmp eax, 0xffb4	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a04	     0xf87cb000000	                            ja 0x4005ad5	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a0a	      0xe9ae000000	                           jmp 0x4005abd	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a0f	      0x3db8ff0000	                         cmp eax, 0xffb8	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a14	     0xf84df000000	                            je 0x4005af9	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a1a	      0x3db8ff0000	                         cmp eax, 0xffb8	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a1f	     0xf82c8000000	                            jb 0x4005aed	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a25	      0x3db9ff0000	                         cmp eax, 0xffb9	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a2a	     0xf84d5000000	                            je 0x4005b05	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a30	      0x3dbdff0000	                         cmp eax, 0xffbd	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a35	            0x7450	                            je 0x4005a87	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a37	      0xe9e1000000	                           jmp 0x4005b1d	      5751	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a3c	    0xc70500000000	           mov dword [0x04005a46], 0x2b 	      5753	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a46	      0xe9dc000000	                           jmp 0x4005b27	      5753	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a4b	    0xc70500000000	           mov dword [0x04005a55], 0x2d 	      5754	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a55	      0xe9cd000000	                           jmp 0x4005b27	      5754	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a5a	    0xc70500000000	           mov dword [0x04005a64], 0x2f 	      5755	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a64	      0xe9be000000	                           jmp 0x4005b27	      5755	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a69	    0xc70500000000	           mov dword [0x04005a73], 0x2a 	      5756	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a73	      0xe9af000000	                           jmp 0x4005b27	      5756	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a78	    0xc70500000000	           mov dword [0x04005a82], 0x2e 	      5757	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a82	      0xe9a0000000	                           jmp 0x4005b27	      5757	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a87	    0xc70500000000	           mov dword [0x04005a91], 0x3d 	      5758	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a91	      0xe991000000	                           jmp 0x4005b27	      5758	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005a96	    0xc70500000000	           mov dword [0x04005aa0], 0x30 	      5759	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005aa0	      0xe982000000	                           jmp 0x4005b27	      5759	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005aa5	    0xc70500000000	           mov dword [0x04005aaf], 0x31 	      5760	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005aaf	            0xeb76	                           jmp 0x4005b27	      5760	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005ab1	    0xc70500000000	           mov dword [0x04005abb], 0x32 	      5761	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005abb	            0xeb6a	                           jmp 0x4005b27	      5761	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005abd	    0xc70500000000	           mov dword [0x04005ac7], 0x33 	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005ac7	            0xeb5e	                           jmp 0x4005b27	      5762	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005ac9	    0xc70500000000	           mov dword [0x04005ad3], 0x34 	      5763	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005ad3	            0xeb52	                           jmp 0x4005b27	      5763	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005ad5	    0xc70500000000	           mov dword [0x04005adf], 0x35 	      5764	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005adf	            0xeb46	                           jmp 0x4005b27	      5764	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005ae1	    0xc70500000000	           mov dword [0x04005aeb], 0x36 	      5765	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005aeb	            0xeb3a	                           jmp 0x4005b27	      5765	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005aed	    0xc70500000000	           mov dword [0x04005af7], 0x37 	      5766	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005af7	            0xeb2e	                           jmp 0x4005b27	      5766	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005af9	    0xc70500000000	           mov dword [0x04005b03], 0x38 	      5767	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005b03	            0xeb22	                           jmp 0x4005b27	      5767	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005b05	    0xc70500000000	           mov dword [0x04005b0f], 0x39 	      5768	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005b0f	            0xeb16	                           jmp 0x4005b27	      5768	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005b11	    0xc70500000000	           mov dword [0x04005b1b], 0x20 	      5769	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005b1b	            0xeb0a	                           jmp 0x4005b27	      5769	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005b1d	    0xc70500000000	               mov dword [0x04005b27], 0	      5770	mbyte.c	FUNCTION_122	IF_1	SWITCH_1
0x4005b27	    0xc70500000000	               mov dword [0x04005b31], 0	      5772	mbyte.c	FUNCTION_122	IF_1
0x4005b31	    0x488b05000000	            mov rax, qword [0x04005b38] 	      5780	mbyte.c	FUNCTION_122	IF_2
0x4005b38	          0x4885c0	                           test rax, rax	      5780	mbyte.c	FUNCTION_122	IF_2
0x4005b3b	     0xf84dd010000	                            je 0x4005d1e	      5780	mbyte.c	FUNCTION_122	IF_2
0x4005b41	    0x8b0500000000	            mov eax, dword [0x04005b47] 	      5780	mbyte.c	FUNCTION_122	IF_2
0x4005b47	            0x85c0	                           test eax, eax	      5780	mbyte.c	FUNCTION_122	IF_2
0x4005b49	     0xf85cf010000	                           jne 0x4005d1e	      5780	mbyte.c	FUNCTION_122	IF_2
0x4005b4f	    0x8b0500000000	            mov eax, dword [0x04005b55] 	      5781	mbyte.c	FUNCTION_122	IF_2
0x4005b55	      0x2519060000	                          and eax, 0x619	      5781	mbyte.c	FUNCTION_122	IF_2
0x4005b5a	            0x85c0	                           test eax, eax	      5781	mbyte.c	FUNCTION_122	IF_2
0x4005b5c	     0xf84bc010000	                            je 0x4005d1e	      5781	mbyte.c	FUNCTION_122	IF_2
0x4005b62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b66	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b69	    0x8b0500000000	            mov eax, dword [0x04005b6f] 	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b6f	            0x39c2	                            cmp edx, eax	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b71	     0xf8506010000	                           jne 0x4005c7d	      5788	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b7b	          0x8b5018	            mov edx, dword [rax + 0x18] 	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b7e	    0x8b0500000000	            mov eax, dword [0x04005b84] 	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b84	            0x21c2	                            and edx, eax	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b86	    0x8b0500000000	            mov eax, dword [0x04005b8c] 	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b8c	            0x39c2	                            cmp edx, eax	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b8e	     0xf85e9000000	                           jne 0x4005c7d	      5789	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b94	    0x8b0500000000	            mov eax, dword [0x04005b9a] 	      5796	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b9a	          0x8945f8	                mov dword [rbp - 8], eax	      5796	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005b9d	        0x834df80d	                 or dword [rbp - 8], 0xd	      5797	mbyte.c	FUNCTION_122	IF_2	IF_3
0x4005ba1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4005ba5	          0x8b4018	            mov eax, dword [rax + 0x18] 	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4005ba8	          0x2345f8	                and eax, dword [rbp - 8]	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4005bab	            0x89c2	                            mov edx, eax	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4005bad	    0x8b0500000000	            mov eax, dword [0x04005bb3] 	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4005bb3	            0x39c2	                            cmp edx, eax	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4005bb5	            0x740a	                            je 0x4005bc1	      5800	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4005bb7	      0xb800000000	                              mov eax, 0	      5801	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4005bbc	      0xe962010000	                           jmp 0x4005d23	      5801	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_4
0x4005bc1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5804	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x4005bc5	            0x8b00	                    mov eax, dword [rax]	      5804	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x4005bc7	          0x83f808	                              cmp eax, 8	      5804	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x4005bca	            0x740a	                            je 0x4005bd6	      5804	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x4005bcc	      0xb801000000	                              mov eax, 1	      5805	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x4005bd1	      0xe94d010000	                           jmp 0x4005d23	      5805	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_5
0x4005bd6	      0xba00000000	                              mov edx, 0	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4005bdb	      0xbe20000000	                           mov esi, 0x20	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4005be0	      0xbf00000000	                              mov edi, 0	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4005be5	      0xe800000000	                          call 0x4005bea	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4005bea	            0x85c0	                           test eax, eax	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4005bec	            0x7474	                            je 0x4005c62	      5807	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_1
0x4005bee	      0xbf00000000	                              mov edi, 0	      5809	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_2
0x4005bf3	      0xe800000000	                          call 0x4005bf8	      5809	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	CALL_2
0x4005bf8	    0x8b0500000000	            mov eax, dword [0x04005bfe] 	      5812	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x4005bfe	          0x83f020	                           xor eax, 0x20	      5812	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x4005c01	    0x890500000000	            mov dword [0x04005c07], eax 	      5812	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x4005c07	    0x8b0500000000	            mov eax, dword [0x04005c0d] 	      5813	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4005c0d	          0x83e020	                           and eax, 0x20	      5813	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4005c10	            0x85c0	                           test eax, eax	      5813	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4005c12	            0x7423	                            je 0x4005c37	      5813	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4005c14	    0x488b05000000	            mov rax, qword [0x04005c1b] 	      5815	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4005c1b	    0x48c780781200	            mov qword [rax + 0x1278], 0 	      5815	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4005c26	    0x8b0500000000	            mov eax, dword [0x04005c2c] 	      5816	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4005c2c	          0x83e0df	                     and eax, 0xffffffdf	      5816	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4005c2f	    0x890500000000	            mov dword [0x04005c35], eax 	      5816	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4005c35	            0xeb21	                           jmp 0x4005c58	      5816	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	IF_7
0x4005c37	    0x488b05000000	            mov rax, qword [0x04005c3e] 	      5820	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x4005c3e	    0x48c780781200	            mov qword [rax + 0x1278], 1 	      5820	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x4005c49	    0x8b0500000000	            mov eax, dword [0x04005c4f] 	      5821	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x4005c4f	          0x83c820	                            or eax, 0x20	      5821	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x4005c52	    0x890500000000	            mov dword [0x04005c58], eax 	      5821	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6	ELSE_1
0x4005c58	      0xb801000000	                              mov eax, 1	      5823	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x4005c5d	      0xe9c1000000	                           jmp 0x4005d23	      5823	mbyte.c	FUNCTION_122	IF_2	IF_3	IF_6
0x4005c62	    0x488b05000000	            mov rax, qword [0x04005c69] 	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x4005c69	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x4005c6d	          0x4889d6	                            mov rsi, rdx	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x4005c70	          0x4889c7	                            mov rdi, rax	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x4005c73	      0xe800000000	                          call 0x4005c78	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x4005c78	      0xe9a6000000	                           jmp 0x4005d23	      5826	mbyte.c	FUNCTION_122	IF_2	IF_3	CALL_3
0x4005c7d	    0x8b0500000000	            mov eax, dword [0x04005c83] 	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4005c83	      0x3dffffff00	                       cmp eax, 0xffffff	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4005c88	            0x740e	                            je 0x4005c98	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4005c8a	    0x8b0500000000	            mov eax, dword [0x04005c90] 	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4005c90	            0x85c0	                           test eax, eax	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4005c92	     0xf8486000000	                            je 0x4005d1e	      5832	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4005c98	    0x488b05000000	            mov rax, qword [0x04005c9f] 	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x4005c9f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x4005ca3	          0x4889d6	                            mov rsi, rdx	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x4005ca6	          0x4889c7	                            mov rdi, rax	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x4005ca9	      0xe800000000	                          call 0x4005cae	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x4005cae	          0x8945fc	                mov dword [rbp - 4], eax	      5834	mbyte.c	FUNCTION_122	IF_2	IF_8	CALL_4
0x4005cb1	    0x488b05000000	            mov rax, qword [0x04005cb8] 	      5836	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9
0x4005cb8	          0x4885c0	                           test rax, rax	      5836	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9
0x4005cbb	            0x7537	                           jne 0x4005cf4	      5836	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9
0x4005cbd	        0x837dfc00	                  cmp dword [rbp - 4], 0	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4005cc1	            0x7531	                           jne 0x4005cf4	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4005cc3	    0x8b0500000000	            mov eax, dword [0x04005cc9] 	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4005cc9	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4005cce	            0x7424	                            je 0x4005cf4	      5846	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4005cd0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5847	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4005cd4	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      5847	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4005cd7	      0x3d0dff0000	                         cmp eax, 0xff0d	      5847	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4005cdc	            0x7516	                           jne 0x4005cf4	      5847	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4005cde	      0xbe00000000	                              mov esi, 0	      5849	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10	CALL_5
0x4005ce3	      0xbf0dff0000	                         mov edi, 0xff0d	      5849	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10	CALL_5
0x4005ce8	      0xe850faffff	         call sym.im_synthesize_keypress	      5849	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10	CALL_5
0x4005ced	      0xb800000000	                              mov eax, 0	      5850	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4005cf2	            0xeb2f	                           jmp 0x4005d23	      5850	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_9	IF_10
0x4005cf4	    0x8b0500000000	            mov eax, dword [0x04005cfa] 	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4005cfa	            0x85c0	                           test eax, eax	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4005cfc	            0x7411	                            je 0x4005d0f	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4005cfe	    0x8b0500000000	            mov eax, dword [0x04005d04] 	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4005d04	            0x85c0	                           test eax, eax	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4005d06	            0x7407	                            je 0x4005d0f	      5856	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4005d08	      0xb800000000	                              mov eax, 0	      5858	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4005d0d	            0xeb14	                           jmp 0x4005d23	      5858	mbyte.c	FUNCTION_122	IF_2	IF_8	IF_11
0x4005d0f	    0xc70500000000	               mov dword [0x04005d19], 0	      5862	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4005d19	          0x8b45fc	                mov eax, dword [rbp - 4]	      5865	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4005d1c	            0xeb05	                           jmp 0x4005d23	      5865	mbyte.c	FUNCTION_122	IF_2	IF_8
0x4005d1e	      0xb800000000	                              mov eax, 0	      5869	mbyte.c	FUNCTION_122
0x4005d23	              0xc9	                                   leave	      5870	mbyte.c	FUNCTION_122
0x4005d24	              0xc3	                                     ret	      5870	mbyte.c	FUNCTION_122
latin_char2bytes	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	11
0x4000bb8	              0x55	                                push rbp	      1100	mbyte.c	FUNCTION_12
0x4000bb9	          0x4889e5	                            mov rbp, rsp	      1100	mbyte.c	FUNCTION_12
0x4000bbc	          0x897dfc	                mov dword [rbp - 4], edi	      1100	mbyte.c	FUNCTION_12
0x4000bbf	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1100	mbyte.c	FUNCTION_12
0x4000bc3	          0x8b45fc	                mov eax, dword [rbp - 4]	      1101	mbyte.c	FUNCTION_12
0x4000bc6	            0x89c2	                            mov edx, eax	      1101	mbyte.c	FUNCTION_12
0x4000bc8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1101	mbyte.c	FUNCTION_12
0x4000bcc	            0x8810	                      mov byte [rax], dl	      1101	mbyte.c	FUNCTION_12
0x4000bce	      0xb801000000	                              mov eax, 1	      1102	mbyte.c	FUNCTION_12
0x4000bd3	              0x5d	                                 pop rbp	      1103	mbyte.c	FUNCTION_12
0x4000bd4	              0xc3	                                     ret	      1103	mbyte.c	FUNCTION_12
utf_printable	CALL,2:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	14
0x40020d6	              0x55	                                push rbp	      2607	mbyte.c	FUNCTION_54
0x40020d7	          0x4889e5	                            mov rbp, rsp	      2607	mbyte.c	FUNCTION_54
0x40020da	        0x4883ec08	                              sub rsp, 8	      2607	mbyte.c	FUNCTION_54
0x40020de	          0x897dfc	                mov dword [rbp - 4], edi	      2607	mbyte.c	FUNCTION_54
0x40020e1	          0x8b45fc	                mov eax, dword [rbp - 4]	      2623	mbyte.c	FUNCTION_54	CALL_2
0x40020e4	            0x89c2	                            mov edx, eax	      2623	mbyte.c	FUNCTION_54	CALL_2
0x40020e6	      0xbe90000000	                           mov esi, 0x90	      2623	mbyte.c	FUNCTION_54	CALL_2
0x40020eb	      0xbf00000000	                              mov edi, 0	      2623	mbyte.c	FUNCTION_54	CALL_2
0x40020f0	      0xe838ecffff	                        call sym.intable	      2623	mbyte.c	FUNCTION_54	CALL_2
0x40020f5	            0x85c0	                           test eax, eax	      2623	mbyte.c	FUNCTION_54	CALL_2
0x40020f7	           0xf94c0	                                 sete al	      2623	mbyte.c	FUNCTION_54	CALL_2
0x40020fa	           0xfb6c0	                           movzx eax, al	      2623	mbyte.c	FUNCTION_54	CALL_2
0x40020fd	              0xc9	                                   leave	      2625	mbyte.c	FUNCTION_54
0x40020fe	              0xc3	                                     ret	      2625	mbyte.c	FUNCTION_54
dbcs_char2len	CALL,0:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	10
0x4000b9a	              0x55	                                push rbp	      1087	mbyte.c	FUNCTION_11
0x4000b9b	          0x4889e5	                            mov rbp, rsp	      1087	mbyte.c	FUNCTION_11
0x4000b9e	          0x897dfc	                mov dword [rbp - 4], edi	      1087	mbyte.c	FUNCTION_11
0x4000ba1	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1088	mbyte.c	FUNCTION_11	IF_1
0x4000ba8	            0x7e07	                           jle 0x4000bb1	      1088	mbyte.c	FUNCTION_11	IF_1
0x4000baa	      0xb802000000	                              mov eax, 2	      1089	mbyte.c	FUNCTION_11	IF_1
0x4000baf	            0xeb05	                           jmp 0x4000bb6	      1089	mbyte.c	FUNCTION_11	IF_1
0x4000bb1	      0xb801000000	                              mov eax, 1	      1090	mbyte.c	FUNCTION_11
0x4000bb6	              0x5d	                                 pop rbp	      1091	mbyte.c	FUNCTION_11
0x4000bb7	              0xc3	                                     ret	      1091	mbyte.c	FUNCTION_11
enc_canon_props	CALL,7:IF,7:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	44
0x4000090	              0x55	                                push rbp	       471	mbyte.c	FUNCTION_3
0x4000091	          0x4889e5	                            mov rbp, rsp	       471	mbyte.c	FUNCTION_3
0x4000094	        0x4883ec20	                           sub rsp, 0x20	       471	mbyte.c	FUNCTION_3
0x4000098	        0x48897de8	             mov qword [rbp - 0x18], rdi	       471	mbyte.c	FUNCTION_3
0x400009c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       474	mbyte.c	FUNCTION_3	CALL_1
0x40000a0	          0x4889c7	                            mov rdi, rax	       474	mbyte.c	FUNCTION_3	CALL_1
0x40000a3	      0xe898ffffff	               call sym.enc_canon_search	       474	mbyte.c	FUNCTION_3	CALL_1
0x40000a8	          0x8945fc	                mov dword [rbp - 4], eax	       474	mbyte.c	FUNCTION_3	CALL_1
0x40000ab	        0x837dfc00	                  cmp dword [rbp - 4], 0	       475	mbyte.c	FUNCTION_3	IF_1
0x40000af	            0x7813	                            js 0x40000c4	       475	mbyte.c	FUNCTION_3	IF_1
0x40000b1	          0x8b45fc	                mov eax, dword [rbp - 4]	       476	mbyte.c	FUNCTION_3	IF_1
0x40000b4	            0x4898	                                    cdqe	       476	mbyte.c	FUNCTION_3	IF_1
0x40000b6	        0x48c1e004	                              shl rax, 4	       476	mbyte.c	FUNCTION_3	IF_1
0x40000ba	    0x480500000000	                              add rax, 0	       476	mbyte.c	FUNCTION_3	IF_1
0x40000c0	            0x8b00	                    mov eax, dword [rax]	       476	mbyte.c	FUNCTION_3	IF_1
0x40000c2	            0xeb61	                           jmp 0x4000125	       476	mbyte.c	FUNCTION_3	IF_1
0x40000c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x40000c8	      0xba06000000	                              mov edx, 6	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x40000cd	      0xbe00000000	                              mov esi, 0	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x40000d2	          0x4889c7	                            mov rdi, rax	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x40000d5	      0xe800000000	                          call 0x40000da	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x40000da	            0x85c0	                           test eax, eax	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x40000dc	            0x7507	                           jne 0x40000e5	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x40000de	      0xb802000000	                              mov eax, 2	       496	mbyte.c	FUNCTION_3	IF_6
0x40000e3	            0xeb40	                           jmp 0x4000125	       496	mbyte.c	FUNCTION_3	IF_6
0x40000e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x40000e9	      0xba05000000	                              mov edx, 5	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x40000ee	      0xbe00000000	                              mov esi, 0	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x40000f3	          0x4889c7	                            mov rdi, rax	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x40000f6	      0xe800000000	                          call 0x40000fb	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x40000fb	            0x85c0	                           test eax, eax	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x40000fd	            0x741a	                            je 0x4000119	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x40000ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000103	      0xba09000000	                              mov edx, 9	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000108	      0xbe00000000	                              mov esi, 0	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x400010d	          0x4889c7	                            mov rdi, rax	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000110	      0xe800000000	                          call 0x4000115	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000115	            0x85c0	                           test eax, eax	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000117	            0x7507	                           jne 0x4000120	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0x4000119	      0xb801000000	                              mov eax, 1	       498	mbyte.c	FUNCTION_3	IF_7
0x400011e	            0xeb05	                           jmp 0x4000125	       498	mbyte.c	FUNCTION_3	IF_7
0x4000120	      0xb800000000	                              mov eax, 0	       499	mbyte.c	FUNCTION_3
0x4000125	              0xc9	                                   leave	       500	mbyte.c	FUNCTION_3
0x4000126	              0xc3	                                     ret	       500	mbyte.c	FUNCTION_3
dbcs_ptr2len_len	CALL,1:IF,3:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	34
0x4000cc3	              0x55	                                push rbp	      1163	mbyte.c	FUNCTION_17
0x4000cc4	          0x4889e5	                            mov rbp, rsp	      1163	mbyte.c	FUNCTION_17
0x4000cc7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1163	mbyte.c	FUNCTION_17
0x4000ccb	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1163	mbyte.c	FUNCTION_17
0x4000cce	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1166	mbyte.c	FUNCTION_17	IF_1
0x4000cd2	            0x7e0b	                           jle 0x4000cdf	      1166	mbyte.c	FUNCTION_17	IF_1
0x4000cd4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1166	mbyte.c	FUNCTION_17	IF_1
0x4000cd8	           0xfb600	                   movzx eax, byte [rax]	      1166	mbyte.c	FUNCTION_17	IF_1
0x4000cdb	            0x84c0	                             test al, al	      1166	mbyte.c	FUNCTION_17	IF_1
0x4000cdd	            0x7507	                           jne 0x4000ce6	      1166	mbyte.c	FUNCTION_17	IF_1
0x4000cdf	      0xb800000000	                              mov eax, 0	      1167	mbyte.c	FUNCTION_17	IF_1
0x4000ce4	            0xeb45	                           jmp 0x4000d2b	      1167	mbyte.c	FUNCTION_17	IF_1
0x4000ce6	        0x837de401	               cmp dword [rbp - 0x1c], 1	      1168	mbyte.c	FUNCTION_17	IF_2
0x4000cea	            0x7507	                           jne 0x4000cf3	      1168	mbyte.c	FUNCTION_17	IF_2
0x4000cec	      0xb801000000	                              mov eax, 1	      1169	mbyte.c	FUNCTION_17	IF_2
0x4000cf1	            0xeb38	                           jmp 0x4000d2b	      1169	mbyte.c	FUNCTION_17	IF_2
0x4000cf3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1171	mbyte.c	FUNCTION_17	CALL_1
0x4000cf7	           0xfb600	                   movzx eax, byte [rax]	      1171	mbyte.c	FUNCTION_17	CALL_1
0x4000cfa	           0xfb6c0	                           movzx eax, al	      1171	mbyte.c	FUNCTION_17	CALL_1
0x4000cfd	            0x4898	                                    cdqe	      1171	mbyte.c	FUNCTION_17	CALL_1
0x4000cff	     0xfb680000000	                   movzx eax, byte [rax]	      1171	mbyte.c	FUNCTION_17	CALL_1
0x4000d06	           0xfbec0	                           movsx eax, al	      1171	mbyte.c	FUNCTION_17	CALL_1
0x4000d09	          0x8945fc	                mov dword [rbp - 4], eax	      1171	mbyte.c	FUNCTION_17	CALL_1
0x4000d0c	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1172	mbyte.c	FUNCTION_17	IF_3
0x4000d10	            0x7516	                           jne 0x4000d28	      1172	mbyte.c	FUNCTION_17	IF_3
0x4000d12	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1172	mbyte.c	FUNCTION_17	IF_3
0x4000d16	        0x4883c001	                              add rax, 1	      1172	mbyte.c	FUNCTION_17	IF_3
0x4000d1a	           0xfb600	                   movzx eax, byte [rax]	      1172	mbyte.c	FUNCTION_17	IF_3
0x4000d1d	            0x84c0	                             test al, al	      1172	mbyte.c	FUNCTION_17	IF_3
0x4000d1f	            0x7507	                           jne 0x4000d28	      1172	mbyte.c	FUNCTION_17	IF_3
0x4000d21	    0xc745fc010000	                  mov dword [rbp - 4], 1	      1173	mbyte.c	FUNCTION_17	IF_3
0x4000d28	          0x8b45fc	                mov eax, dword [rbp - 4]	      1174	mbyte.c	FUNCTION_17
0x4000d2b	              0x5d	                                 pop rbp	      1175	mbyte.c	FUNCTION_17
0x4000d2c	              0xc3	                                     ret	      1175	mbyte.c	FUNCTION_17
dbcs_ptr2char	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	31
0x4001236	              0x55	                                push rbp	      1775	mbyte.c	FUNCTION_34
0x4001237	          0x4889e5	                            mov rbp, rsp	      1775	mbyte.c	FUNCTION_34
0x400123a	        0x48897df8	                mov qword [rbp - 8], rdi	      1775	mbyte.c	FUNCTION_34
0x400123e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4001242	           0xfb600	                   movzx eax, byte [rax]	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4001245	           0xfb6c0	                           movzx eax, al	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4001248	            0x4898	                                    cdqe	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x400124a	     0xfb680000000	                   movzx eax, byte [rax]	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4001251	            0x3c01	                               cmp al, 1	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4001253	            0x7e30	                           jle 0x4001285	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4001255	        0x488b45f8	                mov rax, qword [rbp - 8]	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4001259	        0x4883c001	                              add rax, 1	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x400125d	           0xfb600	                   movzx eax, byte [rax]	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4001260	            0x84c0	                             test al, al	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4001262	            0x7421	                            je 0x4001285	      1776	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x4001264	        0x488b45f8	                mov rax, qword [rbp - 8]	      1777	mbyte.c	FUNCTION_34	IF_1
0x4001268	           0xfb600	                   movzx eax, byte [rax]	      1777	mbyte.c	FUNCTION_34	IF_1
0x400126b	           0xfb6c0	                           movzx eax, al	      1777	mbyte.c	FUNCTION_34	IF_1
0x400126e	          0xc1e008	                              shl eax, 8	      1777	mbyte.c	FUNCTION_34	IF_1
0x4001271	            0x89c2	                            mov edx, eax	      1777	mbyte.c	FUNCTION_34	IF_1
0x4001273	        0x488b45f8	                mov rax, qword [rbp - 8]	      1777	mbyte.c	FUNCTION_34	IF_1
0x4001277	        0x4883c001	                              add rax, 1	      1777	mbyte.c	FUNCTION_34	IF_1
0x400127b	           0xfb600	                   movzx eax, byte [rax]	      1777	mbyte.c	FUNCTION_34	IF_1
0x400127e	           0xfb6c0	                           movzx eax, al	      1777	mbyte.c	FUNCTION_34	IF_1
0x4001281	             0x1d0	                            add eax, edx	      1777	mbyte.c	FUNCTION_34	IF_1
0x4001283	            0xeb0a	                           jmp 0x400128f	      1777	mbyte.c	FUNCTION_34	IF_1
0x4001285	        0x488b45f8	                mov rax, qword [rbp - 8]	      1778	mbyte.c	FUNCTION_34
0x4001289	           0xfb600	                   movzx eax, byte [rax]	      1778	mbyte.c	FUNCTION_34
0x400128c	           0xfb6c0	                           movzx eax, al	      1778	mbyte.c	FUNCTION_34
0x400128f	              0x5d	                                 pop rbp	      1779	mbyte.c	FUNCTION_34
0x4001290	              0xc3	                                     ret	      1779	mbyte.c	FUNCTION_34
utf_find_illegal	CALL,14:IF,6:ELSE,1:DO,0:WHILE,1:functions,0:SWITCH,0:FOR,2	163
0x4002f9c	              0x55	                                push rbp	      3966	mbyte.c	FUNCTION_74
0x4002f9d	          0x4889e5	                            mov rbp, rsp	      3966	mbyte.c	FUNCTION_74
0x4002fa0	              0x53	                                push rbx	      3966	mbyte.c	FUNCTION_74
0x4002fa1	        0x4883ec58	                           sub rsp, 0x58	      3966	mbyte.c	FUNCTION_74
0x4002fa5	    0x64488b042528	                mov rax, qword fs:[0x28]	      3966	mbyte.c	FUNCTION_74
0x4002fae	        0x488945e8	             mov qword [rbp - 0x18], rax	      3966	mbyte.c	FUNCTION_74
0x4002fb2	            0x31c0	                            xor eax, eax	      3966	mbyte.c	FUNCTION_74
0x4002fb4	    0x488b05000000	            mov rax, qword [0x04002fbb] 	      3967	mbyte.c	FUNCTION_74
0x4002fbb	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3967	mbyte.c	FUNCTION_74
0x4002fbf	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3967	mbyte.c	FUNCTION_74
0x4002fc3	        0x488945c0	             mov qword [rbp - 0x40], rax	      3967	mbyte.c	FUNCTION_74
0x4002fc7	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3967	mbyte.c	FUNCTION_74
0x4002fcb	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      3971	mbyte.c	FUNCTION_74
0x4002fd3	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      3973	mbyte.c	FUNCTION_74
0x4002fda	    0x8b0500000000	            mov eax, dword [0x04002fe0] 	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4002fe0	            0x85c0	                           test eax, eax	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4002fe2	            0x7441	                            je 0x4003025	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4002fe4	    0x488b05000000	            mov rax, qword [0x04002feb] 	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4002feb	    0x488b80881400	          mov rax, qword [rax + 0x1488] 	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4002ff2	          0x4889c7	                            mov rdi, rax	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4002ff5	      0xe800000000	                          call 0x4002ffa	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4002ffa	          0x83e001	                              and eax, 1	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4002ffd	            0x85c0	                           test eax, eax	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4002fff	            0x7424	                            je 0x4003025	      3974	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x4003001	    0x488b05000000	            mov rax, qword [0x04003008] 	      3979	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x4003008	    0x488b90881400	          mov rdx, qword [rax + 0x1488] 	      3979	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x400300f	    0x488b0d000000	            mov rcx, qword [0x04003016] 	      3979	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x4003016	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3979	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x400301a	          0x4889ce	                            mov rsi, rcx	      3979	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x400301d	          0x4889c7	                            mov rdi, rax	      3979	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x4003020	      0xe800000000	                          call 0x4003025	      3979	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x4003025	    0x488b05000000	            mov rax, qword [0x0400302c] 	      3983	mbyte.c	FUNCTION_74
0x400302c	    0xc74044000000	               mov dword [rax + 0x44], 0	      3983	mbyte.c	FUNCTION_74
0x4003033	      0xe800000000	                          call 0x4003038	      3987	mbyte.c	FUNCTION_74	FOR_1	CALL_3
0x4003038	        0x488945b0	             mov qword [rbp - 0x50], rax	      3987	mbyte.c	FUNCTION_74	FOR_1	CALL_3
0x400303c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3988	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x400303f	            0x85c0	                           test eax, eax	      3988	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x4003041	     0xf8427010000	                            je 0x400316e	      3988	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x4003047	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3990	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_4
0x400304b	          0x4889c7	                            mov rdi, rax	      3990	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_4
0x400304e	      0xe800000000	                          call 0x4003053	      3990	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_4
0x4003053	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x4003057	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x400305b	      0xba00000000	                              mov edx, 0	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x4003060	          0x4889ce	                            mov rsi, rcx	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x4003063	          0x4889c7	                            mov rdi, rax	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x4003066	      0xe800000000	                          call 0x400306b	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x400306b	        0x488945b8	             mov qword [rbp - 0x48], rax	      3991	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x400306f	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x4003074	     0xf8443010000	                            je 0x40031bd	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x400307a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3994	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x400307e	        0x488945b0	             mov qword [rbp - 0x50], rax	      3994	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x4003082	      0xe9e7000000	                           jmp 0x400316e	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x4003087	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4001	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	CALL_6
0x400308b	          0x4889c7	                            mov rdi, rax	      4001	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	CALL_6
0x400308e	      0xe800000000	                          call 0x4003093	      4001	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	CALL_6
0x4003093	          0x8945a8	             mov dword [rbp - 0x58], eax	      4001	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	CALL_6
0x4003096	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x400309a	           0xfb600	                   movzx eax, byte [rax]	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x400309d	            0x84c0	                             test al, al	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x400309f	     0xf89c0000000	                           jns 0x4003165	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40030a5	        0x837da801	               cmp dword [rbp - 0x58], 1	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40030a9	            0x741c	                            je 0x40030c7	      4002	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40030ab	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40030af	          0x4889c7	                            mov rdi, rax	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40030b2	      0xe800000000	                          call 0x40030b7	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40030b7	            0x89c7	                            mov edi, eax	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40030b9	      0xe800000000	                          call 0x40030be	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40030be	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40030c1	     0xf849e000000	                            je 0x4003165	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x40030c7	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	IF_5
0x40030ca	            0x85c0	                           test eax, eax	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	IF_5
0x40030cc	            0x752c	                           jne 0x40030fa	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	IF_5
0x40030ce	        0x488b5db0	             mov rbx, qword [rbp - 0x50]	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40030d2	      0xe800000000	                          call 0x40030d7	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40030d7	          0x4829c3	                            sub rbx, rax	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40030da	          0x4889d8	                            mov rax, rbx	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40030dd	            0x89c1	                            mov ecx, eax	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40030df	    0x488b05000000	            mov rax, qword [0x040030e6] 	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40030e6	    0x488b15000000	            mov rdx, qword [0x040030ed] 	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40030ed	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40030f0	             0x1ca	                            add edx, ecx	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40030f2	          0x895040	             mov dword [rax + 0x40], edx	      4006	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x40030f5	      0xe9e5000000	                           jmp 0x40031df	      4018	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40030fa	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      4011	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x40030fe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4011	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x4003102	          0x4829c2	                            sub rdx, rax	      4011	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x4003105	          0x4889d0	                            mov rax, rdx	      4011	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x4003108	          0x8945a8	             mov dword [rbp - 0x58], eax	      4011	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x400310b	      0xe800000000	                          call 0x4003110	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4003110	        0x488945b0	             mov qword [rbp - 0x50], rax	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4003114	            0xeb31	                           jmp 0x4003147	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4003116	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_11
0x400311a	          0x4889c7	                            mov rdi, rax	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_11
0x400311d	      0xe800000000	                          call 0x4003122	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_11
0x4003122	          0x8945ac	             mov dword [rbp - 0x54], eax	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_11
0x4003125	    0x488b05000000	            mov rax, qword [0x0400312c] 	      4015	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x400312c	    0x488b15000000	            mov rdx, qword [0x04003133] 	      4015	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x4003133	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      4015	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x4003136	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      4015	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x4003139	             0x1ca	                            add edx, ecx	      4015	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x400313b	          0x895040	             mov dword [rax + 0x40], edx	      4015	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x400313e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4003141	            0x4898	                                    cdqe	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4003143	        0x480145b0	            add qword [rbp - 0x50], rax 	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4003147	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x400314b	           0xfb600	                   movzx eax, byte [rax]	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x400314e	            0x84c0	                             test al, al	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4003150	     0xf8489000000	                            je 0x40031df	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4003156	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4003159	          0x8d50ff	                      lea edx, [rax - 1]	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x400315c	          0x8955a8	             mov dword [rbp - 0x58], edx	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x400315f	            0x85c0	                           test eax, eax	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4003161	            0x7fb3	                            jg 0x4003116	      4012	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x4003163	            0xeb7a	                           jmp 0x40031df	      4018	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x4003165	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      4020	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x4003168	            0x4898	                                    cdqe	      4020	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x400316a	        0x480145b0	            add qword [rbp - 0x50], rax 	      4020	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x400316e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x4003172	           0xfb600	                   movzx eax, byte [rax]	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x4003175	            0x84c0	                             test al, al	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x4003177	     0xf850affffff	                           jne 0x4003087	      3997	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x400317d	    0x488b05000000	            mov rax, qword [0x04003184] 	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x4003184	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x4003188	    0x488b05000000	            mov rax, qword [0x0400318f] 	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x400318f	          0x488b00	                    mov rax, qword [rax]	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x4003192	          0x4839c2	                            cmp rdx, rax	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x4003195	            0x7429	                            je 0x40031c0	      4022	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x4003197	    0x488b05000000	            mov rax, qword [0x0400319e] 	      4024	mbyte.c	FUNCTION_74	FOR_1
0x400319e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4024	mbyte.c	FUNCTION_74	FOR_1
0x40031a2	        0x4883c201	                              add rdx, 1	      4024	mbyte.c	FUNCTION_74	FOR_1
0x40031a6	        0x48895038	             mov qword [rax + 0x38], rdx	      4024	mbyte.c	FUNCTION_74	FOR_1
0x40031aa	    0x488b05000000	            mov rax, qword [0x040031b1] 	      4025	mbyte.c	FUNCTION_74	FOR_1
0x40031b1	    0xc74040000000	               mov dword [rax + 0x40], 0	      4025	mbyte.c	FUNCTION_74	FOR_1
0x40031b8	      0xe976feffff	                           jmp 0x4003033	      4026	mbyte.c	FUNCTION_74	FOR_1
0x40031bd	              0x90	                                     nop	      3993	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x40031be	            0xeb01	                           jmp 0x40031c1	      3993	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x40031c0	              0x90	                                     nop	      4023	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x40031c1	    0x488b0d000000	            mov rcx, qword [0x040031c8] 	      4029	mbyte.c	FUNCTION_74
0x40031c8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4029	mbyte.c	FUNCTION_74
0x40031cc	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4029	mbyte.c	FUNCTION_74
0x40031d0	        0x48894138	             mov qword [rcx + 0x38], rax	      4029	mbyte.c	FUNCTION_74
0x40031d4	        0x48895140	             mov qword [rcx + 0x40], rdx	      4029	mbyte.c	FUNCTION_74
0x40031d8	      0xe800000000	                          call 0x40031dd	      4030	mbyte.c	FUNCTION_74	CALL_12
0x40031dd	            0xeb01	                           jmp 0x40031e0	      4030	mbyte.c	FUNCTION_74	CALL_12
0x40031df	              0x90	                                     nop	      4018	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x40031e0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4033	mbyte.c	FUNCTION_74	CALL_13
0x40031e4	          0x4889c7	                            mov rdi, rax	      4033	mbyte.c	FUNCTION_74	CALL_13
0x40031e7	      0xe800000000	                          call 0x40031ec	      4033	mbyte.c	FUNCTION_74	CALL_13
0x40031ec	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4034	mbyte.c	FUNCTION_74	CALL_14
0x40031f0	      0xba00000000	                              mov edx, 0	      4034	mbyte.c	FUNCTION_74	CALL_14
0x40031f5	      0xbe00000000	                              mov esi, 0	      4034	mbyte.c	FUNCTION_74	CALL_14
0x40031fa	          0x4889c7	                            mov rdi, rax	      4034	mbyte.c	FUNCTION_74	CALL_14
0x40031fd	      0xe800000000	                          call 0x4003202	      4034	mbyte.c	FUNCTION_74	CALL_14
0x4003202	              0x90	                                     nop	      4035	mbyte.c	FUNCTION_74
0x4003203	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4035	mbyte.c	FUNCTION_74
0x4003207	    0x644833042528	                xor rax, qword fs:[0x28]	      4035	mbyte.c	FUNCTION_74
0x4003210	            0x7405	                            je 0x4003217	      4035	mbyte.c	FUNCTION_74
0x4003212	      0xe800000000	                          call 0x4003217	      4035	mbyte.c	FUNCTION_74
0x4003217	        0x4883c458	                           add rsp, 0x58	      4035	mbyte.c	FUNCTION_74
0x400321b	              0x5b	                                 pop rbx	      4035	mbyte.c	FUNCTION_74
0x400321c	              0x5d	                                 pop rbp	      4035	mbyte.c	FUNCTION_74
0x400321d	              0xc3	                                     ret	      4035	mbyte.c	FUNCTION_74
utf_class_buf	CALL,2:IF,6:ELSE,2:DO,0:WHILE,1:functions,0:SWITCH,0:FOR,0	92
0x4002120	              0x55	                                push rbp	      2787	mbyte.c	FUNCTION_56
0x4002121	          0x4889e5	                            mov rbp, rsp	      2787	mbyte.c	FUNCTION_56
0x4002124	        0x4883ec20	                           sub rsp, 0x20	      2787	mbyte.c	FUNCTION_56
0x4002128	          0x897dec	             mov dword [rbp - 0x14], edi	      2787	mbyte.c	FUNCTION_56
0x400212b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2787	mbyte.c	FUNCTION_56
0x400212f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2865	mbyte.c	FUNCTION_56
0x4002136	    0xc745f8420000	               mov dword [rbp - 8], 0x42	      2866	mbyte.c	FUNCTION_56
0x400213d	    0x817decff0000	           cmp dword [rbp - 0x14], 0xff 	      2870	mbyte.c	FUNCTION_56	IF_1
0x4002144	     0xf8fd9000000	                            jg 0x4002223	      2870	mbyte.c	FUNCTION_56	IF_1
0x400214a	        0x837dec20	           cmp dword [rbp - 0x14], 0x20 	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x400214e	            0x7415	                            je 0x4002165	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x4002150	        0x837dec09	               cmp dword [rbp - 0x14], 9	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x4002154	            0x740f	                            je 0x4002165	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x4002156	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x400215a	            0x7409	                            je 0x4002165	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x400215c	    0x817deca00000	           cmp dword [rbp - 0x14], 0xa0 	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x4002163	            0x750a	                           jne 0x400216f	      2872	mbyte.c	FUNCTION_56	IF_1	IF_2
0x4002165	      0xb800000000	                              mov eax, 0	      2873	mbyte.c	FUNCTION_56	IF_1	IF_2
0x400216a	      0xe9e4000000	                           jmp 0x4002253	      2873	mbyte.c	FUNCTION_56	IF_1	IF_2
0x400216f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2874	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x4002173	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2874	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x4002176	          0x4889d6	                            mov rsi, rdx	      2874	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x4002179	            0x89c7	                            mov edi, eax	      2874	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x400217b	      0xe800000000	                          call 0x4002180	      2874	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x4002180	            0x85c0	                           test eax, eax	      2874	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x4002182	            0x740a	                            je 0x400218e	      2874	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x4002184	      0xb802000000	                              mov eax, 2	      2875	mbyte.c	FUNCTION_56	IF_1	IF_3
0x4002189	      0xe9c5000000	                           jmp 0x4002253	      2875	mbyte.c	FUNCTION_56	IF_1	IF_3
0x400218e	      0xb801000000	                              mov eax, 1	      2876	mbyte.c	FUNCTION_56	IF_1
0x4002193	      0xe9bb000000	                           jmp 0x4002253	      2876	mbyte.c	FUNCTION_56	IF_1
0x4002198	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x400219b	          0x8b45f8	                mov eax, dword [rbp - 8]	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x400219e	             0x1d0	                            add eax, edx	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x40021a0	            0x89c2	                            mov edx, eax	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x40021a2	          0xc1ea1f	                           shr edx, 0x1f	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x40021a5	             0x1d0	                            add eax, edx	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x40021a7	            0xd1f8	                              sar eax, 1	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x40021a9	          0x8945fc	                mov dword [rbp - 4], eax	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x40021ac	          0x8b45fc	                mov eax, dword [rbp - 4]	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021af	          0x4863d0	                         movsxd rdx, eax	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021b2	          0x4889d0	                            mov rax, rdx	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021b5	          0x4801c0	                            add rax, rax	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021b8	          0x4801d0	                            add rax, rdx	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021bb	        0x48c1e002	                              shl rax, 2	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021bf	    0x480500000000	                              add rax, 0	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021c5	            0x8b10	                    mov edx, dword [rax]	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021c7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021ca	            0x39c2	                            cmp edx, eax	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021cc	            0x730b	                           jae 0x40021d9	      2883	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021ce	          0x8b45fc	                mov eax, dword [rbp - 4]	      2884	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021d1	          0x83c001	                              add eax, 1	      2884	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021d4	          0x8945f4	              mov dword [rbp - 0xc], eax	      2884	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021d7	            0xeb4a	                           jmp 0x4002223	      2884	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x40021d9	          0x8b45fc	                mov eax, dword [rbp - 4]	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021dc	          0x4863d0	                         movsxd rdx, eax	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021df	          0x4889d0	                            mov rax, rdx	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021e2	          0x4801c0	                            add rax, rax	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021e5	          0x4801d0	                            add rax, rdx	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021e8	        0x48c1e002	                              shl rax, 2	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021ec	    0x480500000000	                              add rax, 0	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021f2	            0x8b10	                    mov edx, dword [rax]	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021f4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021f7	            0x39c2	                            cmp edx, eax	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021f9	            0x760b	                           jbe 0x4002206	      2885	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021fb	          0x8b45fc	                mov eax, dword [rbp - 4]	      2886	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x40021fe	          0x83e801	                              sub eax, 1	      2886	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x4002201	          0x8945f8	                mov dword [rbp - 8], eax	      2886	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x4002204	            0xeb1d	                           jmp 0x4002223	      2886	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x4002206	          0x8b45fc	                mov eax, dword [rbp - 4]	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x4002209	          0x4863d0	                         movsxd rdx, eax	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x400220c	          0x4889d0	                            mov rax, rdx	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x400220f	          0x4801c0	                            add rax, rax	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x4002212	          0x4801d0	                            add rax, rdx	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x4002215	        0x48c1e002	                              shl rax, 2	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x4002219	    0x480500000000	                              add rax, 0	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x400221f	            0x8b00	                    mov eax, dword [rax]	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x4002221	            0xeb30	                           jmp 0x4002253	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x4002223	          0x8b45f8	                mov eax, dword [rbp - 8]	      2880	mbyte.c	FUNCTION_56	WHILE_1
0x4002226	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      2880	mbyte.c	FUNCTION_56	WHILE_1
0x4002229	     0xf8d69ffffff	                           jge 0x4002198	      2880	mbyte.c	FUNCTION_56	WHILE_1
0x400222f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2892	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x4002232	            0x89c2	                            mov edx, eax	      2892	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x4002234	      0xbec0080000	                          mov esi, 0x8c0	      2892	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x4002239	      0xbf00000000	                              mov edi, 0	      2892	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x400223e	      0xe8eaeaffff	                        call sym.intable	      2892	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x4002243	            0x85c0	                           test eax, eax	      2892	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x4002245	            0x7407	                            je 0x400224e	      2892	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x4002247	      0xb803000000	                              mov eax, 3	      2893	mbyte.c	FUNCTION_56	IF_6
0x400224c	            0xeb05	                           jmp 0x4002253	      2893	mbyte.c	FUNCTION_56	IF_6
0x400224e	      0xb802000000	                              mov eax, 2	      2896	mbyte.c	FUNCTION_56
0x4002253	              0xc9	                                   leave	      2897	mbyte.c	FUNCTION_56
0x4002254	              0xc3	                                     ret	      2897	mbyte.c	FUNCTION_56
mb_cptr2char_adv	CALL,1:IF,1:ELSE,1:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	40
0x400168f	              0x55	                                push rbp	      1907	mbyte.c	FUNCTION_38
0x4001690	          0x4889e5	                            mov rbp, rsp	      1907	mbyte.c	FUNCTION_38
0x4001693	        0x4883ec20	                           sub rsp, 0x20	      1907	mbyte.c	FUNCTION_38
0x4001697	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1907	mbyte.c	FUNCTION_38
0x400169b	    0x488b05000000	            mov rax, qword [0x040016a2] 	      1910	mbyte.c	FUNCTION_38
0x40016a2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1910	mbyte.c	FUNCTION_38
0x40016a6	          0x488b12	                    mov rdx, qword [rdx]	      1910	mbyte.c	FUNCTION_38
0x40016a9	          0x4889d7	                            mov rdi, rdx	      1910	mbyte.c	FUNCTION_38
0x40016ac	            0xffd0	                                call rax	      1910	mbyte.c	FUNCTION_38
0x40016ae	          0x8945fc	                mov dword [rbp - 4], eax	      1910	mbyte.c	FUNCTION_38
0x40016b1	    0x8b0500000000	            mov eax, dword [0x040016b7] 	      1911	mbyte.c	FUNCTION_38	IF_1
0x40016b7	            0x85c0	                           test eax, eax	      1911	mbyte.c	FUNCTION_38	IF_1
0x40016b9	            0x7427	                            je 0x40016e2	      1911	mbyte.c	FUNCTION_38	IF_1
0x40016bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016bf	          0x488b00	                    mov rax, qword [rax]	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016c2	          0x4889c7	                            mov rdi, rax	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016c5	      0xe800000000	                          call 0x40016ca	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016ca	            0x89c1	                            mov ecx, eax	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016d0	          0x488b10	                    mov rdx, qword [rax]	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016d3	          0x4863c1	                         movsxd rax, ecx	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016d6	          0x4801c2	                            add rdx, rax	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016dd	          0x488910	                    mov qword [rax], rdx	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016e0	            0xeb29	                           jmp 0x400170b	      1912	mbyte.c	FUNCTION_38	CALL_1
0x40016e2	    0x488b05000000	            mov rax, qword [0x040016e9] 	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x40016e9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x40016ed	          0x488b12	                    mov rdx, qword [rdx]	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x40016f0	          0x4889d7	                            mov rdi, rdx	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x40016f3	            0xffd0	                                call rax	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x40016f5	            0x89c1	                            mov ecx, eax	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x40016f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x40016fb	          0x488b10	                    mov rdx, qword [rax]	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x40016fe	          0x4863c1	                         movsxd rax, ecx	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x4001701	          0x4801c2	                            add rdx, rax	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x4001704	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x4001708	          0x488910	                    mov qword [rax], rdx	      1914	mbyte.c	FUNCTION_38	ELSE_1
0x400170b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1915	mbyte.c	FUNCTION_38
0x400170e	              0xc9	                                   leave	      1916	mbyte.c	FUNCTION_38
0x400170f	              0xc3	                                     ret	      1916	mbyte.c	FUNCTION_38
utf_ptr2char	CALL,0:IF,10:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	204
0x4001291	              0x55	                                push rbp	      1790	mbyte.c	FUNCTION_35
0x4001292	          0x4889e5	                            mov rbp, rsp	      1790	mbyte.c	FUNCTION_35
0x4001295	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1790	mbyte.c	FUNCTION_35
0x4001299	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1793	mbyte.c	FUNCTION_35	IF_1
0x400129d	           0xfb600	                   movzx eax, byte [rax]	      1793	mbyte.c	FUNCTION_35	IF_1
0x40012a0	            0x84c0	                             test al, al	      1793	mbyte.c	FUNCTION_35	IF_1
0x40012a2	            0x780f	                            js 0x40012b3	      1793	mbyte.c	FUNCTION_35	IF_1
0x40012a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1794	mbyte.c	FUNCTION_35	IF_1
0x40012a8	           0xfb600	                   movzx eax, byte [rax]	      1794	mbyte.c	FUNCTION_35	IF_1
0x40012ab	           0xfb6c0	                           movzx eax, al	      1794	mbyte.c	FUNCTION_35	IF_1
0x40012ae	      0xe98a020000	                           jmp 0x400153d	      1794	mbyte.c	FUNCTION_35	IF_1
0x40012b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1796	mbyte.c	FUNCTION_35
0x40012b7	           0xfb600	                   movzx eax, byte [rax]	      1796	mbyte.c	FUNCTION_35
0x40012ba	           0xfb6c0	                           movzx eax, al	      1796	mbyte.c	FUNCTION_35
0x40012bd	            0x4898	                                    cdqe	      1796	mbyte.c	FUNCTION_35
0x40012bf	     0xfb680000000	                   movzx eax, byte [rax]	      1796	mbyte.c	FUNCTION_35
0x40012c6	           0xfbec0	                           movsx eax, al	      1796	mbyte.c	FUNCTION_35
0x40012c9	          0x8945fc	                mov dword [rbp - 4], eax	      1796	mbyte.c	FUNCTION_35
0x40012cc	        0x837dfc01	                  cmp dword [rbp - 4], 1	      1797	mbyte.c	FUNCTION_35	IF_2
0x40012d0	     0xf8e5d020000	                           jle 0x4001533	      1797	mbyte.c	FUNCTION_35	IF_2
0x40012d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1797	mbyte.c	FUNCTION_35	IF_2
0x40012da	        0x4883c001	                              add rax, 1	      1797	mbyte.c	FUNCTION_35	IF_2
0x40012de	           0xfb600	                   movzx eax, byte [rax]	      1797	mbyte.c	FUNCTION_35	IF_2
0x40012e1	           0xfb6c0	                           movzx eax, al	      1797	mbyte.c	FUNCTION_35	IF_2
0x40012e4	      0x25c0000000	                           and eax, 0xc0	      1797	mbyte.c	FUNCTION_35	IF_2
0x40012e9	      0x3d80000000	                           cmp eax, 0x80	      1797	mbyte.c	FUNCTION_35	IF_2
0x40012ee	     0xf853f020000	                           jne 0x4001533	      1797	mbyte.c	FUNCTION_35	IF_2
0x40012f4	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1799	mbyte.c	FUNCTION_35	IF_2	IF_3
0x40012f8	            0x752a	                           jne 0x4001324	      1799	mbyte.c	FUNCTION_35	IF_2	IF_3
0x40012fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x40012fe	           0xfb600	                   movzx eax, byte [rax]	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4001301	           0xfb6c0	                           movzx eax, al	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4001304	          0x83e01f	                           and eax, 0x1f	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4001307	          0xc1e006	                              shl eax, 6	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x400130a	            0x89c2	                            mov edx, eax	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x400130c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4001310	        0x4883c001	                              add rax, 1	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4001314	           0xfb600	                   movzx eax, byte [rax]	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4001317	           0xfb6c0	                           movzx eax, al	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x400131a	          0x83e03f	                           and eax, 0x3f	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x400131d	             0x1d0	                            add eax, edx	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x400131f	      0xe919020000	                           jmp 0x400153d	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x4001324	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x4001328	        0x4883c002	                              add rax, 2	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x400132c	           0xfb600	                   movzx eax, byte [rax]	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x400132f	           0xfb6c0	                           movzx eax, al	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x4001332	      0x25c0000000	                           and eax, 0xc0	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x4001337	      0x3d80000000	                           cmp eax, 0x80	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x400133c	     0xf85f1010000	                           jne 0x4001533	      1801	mbyte.c	FUNCTION_35	IF_2	IF_4
0x4001342	        0x837dfc03	                  cmp dword [rbp - 4], 3	      1803	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001346	            0x753e	                           jne 0x4001386	      1803	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001348	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400134c	           0xfb600	                   movzx eax, byte [rax]	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400134f	           0xfb6c0	                           movzx eax, al	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001352	          0xc1e00c	                            shl eax, 0xc	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001355	           0xfb7c0	                           movzx eax, ax	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001358	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400135c	        0x4883c201	                              add rdx, 1	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001360	           0xfb612	                   movzx edx, byte [rdx]	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001363	           0xfb6d2	                           movzx edx, dl	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001366	          0x83e23f	                           and edx, 0x3f	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001369	          0xc1e206	                              shl edx, 6	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400136c	             0x1c2	                            add edx, eax	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400136e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001372	        0x4883c002	                              add rax, 2	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001376	           0xfb600	                   movzx eax, byte [rax]	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001379	           0xfb6c0	                           movzx eax, al	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400137c	          0x83e03f	                           and eax, 0x3f	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400137f	             0x1d0	                            add eax, edx	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001381	      0xe9b7010000	                           jmp 0x400153d	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001386	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x400138a	        0x4883c003	                              add rax, 3	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x400138e	           0xfb600	                   movzx eax, byte [rax]	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x4001391	           0xfb6c0	                           movzx eax, al	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x4001394	      0x25c0000000	                           and eax, 0xc0	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x4001399	      0x3d80000000	                           cmp eax, 0x80	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x400139e	     0xf858f010000	                           jne 0x4001533	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x40013a4	        0x837dfc04	                  cmp dword [rbp - 4], 4	      1808	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013a8	            0x7556	                           jne 0x4001400	      1808	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013ae	           0xfb600	                   movzx eax, byte [rax]	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013b1	           0xfb6c0	                           movzx eax, al	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013b4	          0x83e007	                              and eax, 7	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013b7	          0xc1e012	                           shl eax, 0x12	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013ba	            0x89c2	                            mov edx, eax	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013c0	        0x4883c001	                              add rax, 1	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013c4	           0xfb600	                   movzx eax, byte [rax]	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013c7	           0xfb6c0	                           movzx eax, al	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013ca	          0x83e03f	                           and eax, 0x3f	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013cd	          0xc1e00c	                            shl eax, 0xc	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013d0	             0x1c2	                            add edx, eax	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013d6	        0x4883c002	                              add rax, 2	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013da	           0xfb600	                   movzx eax, byte [rax]	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013dd	           0xfb6c0	                           movzx eax, al	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013e0	          0x83e03f	                           and eax, 0x3f	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013e3	          0xc1e006	                              shl eax, 6	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013e6	             0x1c2	                            add edx, eax	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013ec	        0x4883c003	                              add rax, 3	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013f0	           0xfb600	                   movzx eax, byte [rax]	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013f3	           0xfb6c0	                           movzx eax, al	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013f6	          0x83e03f	                           and eax, 0x3f	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013f9	             0x1d0	                            add eax, edx	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x40013fb	      0xe93d010000	                           jmp 0x400153d	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x4001400	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x4001404	        0x4883c004	                              add rax, 4	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x4001408	           0xfb600	                   movzx eax, byte [rax]	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x400140b	           0xfb6c0	                           movzx eax, al	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x400140e	      0x25c0000000	                           and eax, 0xc0	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x4001413	      0x3d80000000	                           cmp eax, 0x80	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x4001418	     0xf8515010000	                           jne 0x4001533	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x400141e	        0x837dfc05	                  cmp dword [rbp - 4], 5	      1813	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001422	            0x756c	                           jne 0x4001490	      1813	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001424	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001428	           0xfb600	                   movzx eax, byte [rax]	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400142b	           0xfb6c0	                           movzx eax, al	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400142e	          0x83e003	                              and eax, 3	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001431	          0xc1e018	                           shl eax, 0x18	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001434	            0x89c2	                            mov edx, eax	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001436	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400143a	        0x4883c001	                              add rax, 1	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400143e	           0xfb600	                   movzx eax, byte [rax]	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001441	           0xfb6c0	                           movzx eax, al	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001444	          0x83e03f	                           and eax, 0x3f	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001447	          0xc1e012	                           shl eax, 0x12	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400144a	             0x1c2	                            add edx, eax	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400144c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001450	        0x4883c002	                              add rax, 2	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001454	           0xfb600	                   movzx eax, byte [rax]	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001457	           0xfb6c0	                           movzx eax, al	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400145a	          0x83e03f	                           and eax, 0x3f	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400145d	          0xc1e00c	                            shl eax, 0xc	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001460	             0x1c2	                            add edx, eax	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001462	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001466	        0x4883c003	                              add rax, 3	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400146a	           0xfb600	                   movzx eax, byte [rax]	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400146d	           0xfb6c0	                           movzx eax, al	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001470	          0x83e03f	                           and eax, 0x3f	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001473	          0xc1e006	                              shl eax, 6	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001476	             0x1c2	                            add edx, eax	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001478	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400147c	        0x4883c004	                              add rax, 4	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001480	           0xfb600	                   movzx eax, byte [rax]	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001483	           0xfb6c0	                           movzx eax, al	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001486	          0x83e03f	                           and eax, 0x3f	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001489	             0x1d0	                            add eax, edx	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x400148b	      0xe9ad000000	                           jmp 0x400153d	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x4001490	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001494	        0x4883c005	                              add rax, 5	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001498	           0xfb600	                   movzx eax, byte [rax]	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x400149b	           0xfb6c0	                           movzx eax, al	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x400149e	      0x25c0000000	                           and eax, 0xc0	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014a3	      0x3d80000000	                           cmp eax, 0x80	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014a8	     0xf8585000000	                           jne 0x4001533	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014ae	        0x837dfc06	                  cmp dword [rbp - 4], 6	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014b2	            0x757f	                           jne 0x4001533	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014b8	           0xfb600	                   movzx eax, byte [rax]	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014bb	           0xfb6c0	                           movzx eax, al	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014be	          0x83e001	                              and eax, 1	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014c1	          0xc1e01e	                           shl eax, 0x1e	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014c4	            0x89c2	                            mov edx, eax	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014ca	        0x4883c001	                              add rax, 1	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014ce	           0xfb600	                   movzx eax, byte [rax]	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014d1	           0xfb6c0	                           movzx eax, al	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014d4	          0x83e03f	                           and eax, 0x3f	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014d7	          0xc1e018	                           shl eax, 0x18	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014da	             0x1c2	                            add edx, eax	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014e0	        0x4883c002	                              add rax, 2	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014e4	           0xfb600	                   movzx eax, byte [rax]	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014e7	           0xfb6c0	                           movzx eax, al	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014ea	          0x83e03f	                           and eax, 0x3f	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014ed	          0xc1e012	                           shl eax, 0x12	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014f0	             0x1c2	                            add edx, eax	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014f6	        0x4883c003	                              add rax, 3	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014fa	           0xfb600	                   movzx eax, byte [rax]	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x40014fd	           0xfb6c0	                           movzx eax, al	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001500	          0x83e03f	                           and eax, 0x3f	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001503	          0xc1e00c	                            shl eax, 0xc	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001506	             0x1c2	                            add edx, eax	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001508	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x400150c	        0x4883c004	                              add rax, 4	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001510	           0xfb600	                   movzx eax, byte [rax]	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001513	           0xfb6c0	                           movzx eax, al	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001516	          0x83e03f	                           and eax, 0x3f	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001519	          0xc1e006	                              shl eax, 6	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x400151c	             0x1c2	                            add edx, eax	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x400151e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001522	        0x4883c005	                              add rax, 5	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001526	           0xfb600	                   movzx eax, byte [rax]	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001529	           0xfb6c0	                           movzx eax, al	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x400152c	          0x83e03f	                           and eax, 0x3f	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x400152f	             0x1d0	                            add eax, edx	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001531	            0xeb0a	                           jmp 0x400153d	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x4001533	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1826	mbyte.c	FUNCTION_35
0x4001537	           0xfb600	                   movzx eax, byte [rax]	      1826	mbyte.c	FUNCTION_35
0x400153a	           0xfb6c0	                           movzx eax, al	      1826	mbyte.c	FUNCTION_35
0x400153d	              0x5d	                                 pop rbp	      1827	mbyte.c	FUNCTION_35
0x400153e	              0xc3	                                     ret	      1827	mbyte.c	FUNCTION_35
xim_reset	CALL,10:IF,6:ELSE,3:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	62
0x4005841	              0x55	                                push rbp	      5695	mbyte.c	FUNCTION_121
0x4005842	          0x4889e5	                            mov rbp, rsp	      5695	mbyte.c	FUNCTION_121
0x4005845	    0x8b0500000000	            mov eax, dword [0x0400584b] 	      5697	mbyte.c	FUNCTION_121	IF_1
0x400584b	            0x85c0	                           test eax, eax	      5697	mbyte.c	FUNCTION_121	IF_1
0x400584d	            0x7520	                           jne 0x400586f	      5697	mbyte.c	FUNCTION_121	IF_1
0x400584f	    0x488b05000000	            mov rax, qword [0x04005856] 	      5697	mbyte.c	FUNCTION_121	IF_1
0x4005856	           0xfb600	                   movzx eax, byte [rax]	      5697	mbyte.c	FUNCTION_121	IF_1
0x4005859	            0x84c0	                             test al, al	      5697	mbyte.c	FUNCTION_121	IF_1
0x400585b	            0x7412	                            je 0x400586f	      5697	mbyte.c	FUNCTION_121	IF_1
0x400585d	    0x8b0500000000	            mov eax, dword [0x04005863] 	      5698	mbyte.c	FUNCTION_121	CALL_1
0x4005863	            0x89c7	                            mov edi, eax	      5698	mbyte.c	FUNCTION_121	CALL_1
0x4005865	      0xe82bebffff	            call sym.call_imactivatefunc	      5698	mbyte.c	FUNCTION_121	CALL_1
0x400586a	      0xe9b7000000	                           jmp 0x4005926	      5698	mbyte.c	FUNCTION_121	CALL_1
0x400586f	    0x488b05000000	            mov rax, qword [0x04005876] 	      5701	mbyte.c	FUNCTION_121	ELSE_1	IF_2
0x4005876	          0x4885c0	                           test rax, rax	      5701	mbyte.c	FUNCTION_121	ELSE_1	IF_2
0x4005879	     0xf84a7000000	                            je 0x4005926	      5701	mbyte.c	FUNCTION_121	ELSE_1	IF_2
0x400587f	    0x488b05000000	            mov rax, qword [0x04005886] 	      5703	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x4005886	          0x4889c7	                            mov rdi, rax	      5703	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x4005889	      0xe800000000	                          call 0x400588e	      5703	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x400588e	    0x8b0500000000	            mov eax, dword [0x04005894] 	      5705	mbyte.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4005894	            0x85c0	                           test eax, eax	      5705	mbyte.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4005896	            0x740a	                            je 0x40058a2	      5705	mbyte.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4005898	      0xe800000000	                          call 0x400589d	      5706	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x400589d	      0xe984000000	                           jmp 0x4005926	      5706	mbyte.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x40058a2	    0x8b0500000000	            mov eax, dword [0x040058a8] 	      5709	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	CALL_4
0x40058a8	            0x89c7	                            mov edi, eax	      5709	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	CALL_4
0x40058aa	      0xe800000000	                          call 0x40058af	      5709	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	CALL_4
0x40058af	    0x8b0500000000	            mov eax, dword [0x040058b5] 	      5711	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4
0x40058b5	      0x3dffffff00	                       cmp eax, 0xffffff	      5711	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4
0x40058ba	            0x7453	                            je 0x400590f	      5711	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4
0x40058bc	    0x8b0500000000	            mov eax, dword [0x040058c2] 	      5713	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5
0x40058c2	            0x85c0	                           test eax, eax	      5713	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5
0x40058c4	            0x7460	                            je 0x4005926	      5713	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5
0x40058c6	    0x488b15000000	            mov rdx, qword [0x040058cd] 	      5715	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_5
0x40058cd	    0x488b05000000	            mov rax, qword [0x040058d4] 	      5715	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_5
0x40058d4	          0x4889d6	                            mov rsi, rdx	      5715	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_5
0x40058d7	          0x4889c7	                            mov rdi, rax	      5715	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_5
0x40058da	      0xe800000000	                          call 0x40058df	      5715	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_5
0x40058df	    0x8b1500000000	            mov edx, dword [0x040058e5] 	      5716	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_6
0x40058e5	    0x8b0500000000	            mov eax, dword [0x040058eb] 	      5716	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_6
0x40058eb	            0x89d6	                            mov esi, edx	      5716	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_6
0x40058ed	            0x89c7	                            mov edi, eax	      5716	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_6
0x40058ef	      0xe849feffff	         call sym.im_synthesize_keypress	      5716	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_6
0x40058f4	    0x488b15000000	            mov rdx, qword [0x040058fb] 	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x40058fb	    0x488b05000000	            mov rax, qword [0x04005902] 	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x4005902	          0x4889d6	                            mov rsi, rdx	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x4005905	          0x4889c7	                            mov rdi, rax	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x4005908	      0xe800000000	                          call 0x400590d	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x400590d	            0xeb17	                           jmp 0x4005926	      5718	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	IF_4	IF_5	CALL_7
0x400590f	      0xe800000000	                          call 0x4005914	      5723	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_8
0x4005914	      0xe800000000	                          call 0x4005919	      5724	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_9
0x4005919	    0x8b0500000000	            mov eax, dword [0x0400591f] 	      5725	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_10
0x400591f	            0x89c7	                            mov edi, eax	      5725	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_10
0x4005921	      0xe800000000	                          call 0x4005926	      5725	mbyte.c	FUNCTION_121	ELSE_1	IF_2	ELSE_2	ELSE_3	CALL_10
0x4005926	    0x488b05000000	            mov rax, qword [0x0400592d] 	      5730	mbyte.c	FUNCTION_121	IF_6
0x400592d	          0x4885c0	                           test rax, rax	      5730	mbyte.c	FUNCTION_121	IF_6
0x4005930	            0x750a	                           jne 0x400593c	      5730	mbyte.c	FUNCTION_121	IF_6
0x4005932	    0xc70500000000	     mov dword [0x0400593c], 0x7fffffff 	      5731	mbyte.c	FUNCTION_121	IF_6
0x400593c	    0xc70500000000	               mov dword [0x04005946], 0	      5732	mbyte.c	FUNCTION_121
0x4005946	              0x90	                                     nop	      5733	mbyte.c	FUNCTION_121
0x4005947	              0x5d	                                 pop rbp	      5733	mbyte.c	FUNCTION_121
0x4005948	              0xc3	                                     ret	      5733	mbyte.c	FUNCTION_121
enc_locale_env	CALL,10:IF,8:ELSE,3:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	192
0x4003c92	              0x55	                                push rbp	      4403	mbyte.c	FUNCTION_88
0x4003c93	          0x4889e5	                            mov rbp, rsp	      4403	mbyte.c	FUNCTION_88
0x4003c96	        0x4883ec70	                           sub rsp, 0x70	      4403	mbyte.c	FUNCTION_88
0x4003c9a	        0x48897d98	             mov qword [rbp - 0x68], rdi	      4403	mbyte.c	FUNCTION_88
0x4003c9e	    0x64488b042528	                mov rax, qword fs:[0x28]	      4403	mbyte.c	FUNCTION_88
0x4003ca7	        0x488945f8	                mov qword [rbp - 8], rax	      4403	mbyte.c	FUNCTION_88
0x4003cab	            0x31c0	                            xor eax, eax	      4403	mbyte.c	FUNCTION_88
0x4003cad	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4404	mbyte.c	FUNCTION_88
0x4003cb1	        0x488945b0	             mov qword [rbp - 0x50], rax	      4404	mbyte.c	FUNCTION_88
0x4003cb5	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4409	mbyte.c	FUNCTION_88	IF_1
0x4003cba	            0x740b	                            je 0x4003cc7	      4409	mbyte.c	FUNCTION_88	IF_1
0x4003cbc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4409	mbyte.c	FUNCTION_88	IF_1
0x4003cc0	           0xfb600	                   movzx eax, byte [rax]	      4409	mbyte.c	FUNCTION_88	IF_1
0x4003cc3	            0x84c0	                             test al, al	      4409	mbyte.c	FUNCTION_88	IF_1
0x4003cc5	            0x754e	                           jne 0x4003d15	      4409	mbyte.c	FUNCTION_88	IF_1
0x4003cc7	      0xbf00000000	                              mov edi, 0	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4003ccc	      0xe800000000	                          call 0x4003cd1	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4003cd1	        0x488945b0	             mov qword [rbp - 0x50], rax	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4003cd5	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4003cda	            0x740b	                            je 0x4003ce7	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4003cdc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4003ce0	           0xfb600	                   movzx eax, byte [rax]	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4003ce3	            0x84c0	                             test al, al	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4003ce5	            0x752e	                           jne 0x4003d15	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x4003ce7	      0xbf00000000	                              mov edi, 0	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4003cec	      0xe800000000	                          call 0x4003cf1	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4003cf1	        0x488945b0	             mov qword [rbp - 0x50], rax	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4003cf5	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4003cfa	            0x740b	                            je 0x4003d07	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4003cfc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4003d00	           0xfb600	                   movzx eax, byte [rax]	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4003d03	            0x84c0	                             test al, al	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4003d05	            0x750e	                           jne 0x4003d15	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x4003d07	      0xbf00000000	                              mov edi, 0	      4412	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x4003d0c	      0xe800000000	                          call 0x4003d11	      4412	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x4003d11	        0x488945b0	             mov qword [rbp - 0x50], rax	      4412	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x4003d15	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4414	mbyte.c	FUNCTION_88	IF_4
0x4003d1a	            0x740b	                            je 0x4003d27	      4414	mbyte.c	FUNCTION_88	IF_4
0x4003d1c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4414	mbyte.c	FUNCTION_88	IF_4
0x4003d20	           0xfb600	                   movzx eax, byte [rax]	      4414	mbyte.c	FUNCTION_88	IF_4
0x4003d23	            0x84c0	                             test al, al	      4414	mbyte.c	FUNCTION_88	IF_4
0x4003d25	            0x750a	                           jne 0x4003d31	      4414	mbyte.c	FUNCTION_88	IF_4
0x4003d27	      0xb800000000	                              mov eax, 0	      4415	mbyte.c	FUNCTION_88	IF_4
0x4003d2c	      0xe9e6010000	                           jmp 0x4003f17	      4415	mbyte.c	FUNCTION_88	IF_4
0x4003d31	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x4003d35	      0xbe2e000000	                           mov esi, 0x2e	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x4003d3a	          0x4889c7	                            mov rdi, rax	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x4003d3d	      0xe800000000	                          call 0x4003d42	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x4003d42	        0x488945b8	             mov qword [rbp - 0x48], rax	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x4003d46	      0x48837db800	               cmp qword [rbp - 0x48], 0	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x4003d4b	     0xf84c2000000	                            je 0x4003e13	      4425	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x4003d51	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d55	        0x4883c002	                              add rax, 2	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d59	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d5d	     0xf83a4000000	                           jae 0x4003e07	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d63	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d67	        0x4883c001	                              add rax, 1	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d6b	      0xba03000000	                              mov edx, 3	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d70	      0xbe00000000	                              mov esi, 0	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d75	          0x4889c7	                            mov rdi, rax	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d78	      0xe800000000	                          call 0x4003d7d	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d7d	            0x85c0	                           test eax, eax	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d7f	     0xf8582000000	                           jne 0x4003e07	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x4003d85	      0xe800000000	                          call 0x4003d8a	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003d8a	          0x488b00	                    mov rax, qword [rax]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003d8d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003d91	        0x4883c204	                              add rdx, 4	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003d95	           0xfb612	                   movzx edx, byte [rdx]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003d98	        0x480fbed2	                           movsx rdx, dl	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003d9c	          0x4801d2	                            add rdx, rdx	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003d9f	          0x4801d0	                            add rax, rdx	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003da2	           0xfb700	                   movzx eax, word [rax]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003da5	           0xfb7c0	                           movzx eax, ax	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003da8	          0x83e008	                              and eax, 8	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003dab	            0x85c0	                           test eax, eax	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003dad	            0x7558	                           jne 0x4003e07	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003daf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003db3	        0x4883c004	                              add rax, 4	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003db7	           0xfb600	                   movzx eax, byte [rax]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003dba	            0x3c2d	                            cmp al, 0x2d	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003dbc	            0x7449	                            je 0x4003e07	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003dbe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003dc2	        0x4883e803	                              sub rax, 3	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003dc6	           0xfb600	                   movzx eax, byte [rax]	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003dc9	            0x3c5f	                            cmp al, 0x5f	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003dcb	            0x753a	                           jne 0x4003e07	      4428	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x4003dcd	        0x488d45c0	                   lea rax, [rbp - 0x40]	      4431	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_7
0x4003dd1	        0x4883c00a	                            add rax, 0xa	      4431	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_7
0x4003dd5	    0xc7006575632d	            mov dword [rax], 0x2d637565 	      4431	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_7
0x4003ddb	        0xc6400400	                   mov byte [rax + 4], 0	      4431	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_7
0x4003ddf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4432	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003de3	         0xfb640fe	               movzx eax, byte [rax - 2]	      4432	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003de7	          0x8845ce	               mov byte [rbp - 0x32], al	      4432	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003dea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4433	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003dee	         0xfb640ff	               movzx eax, byte [rax - 1]	      4433	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003df2	          0x8845cf	               mov byte [rbp - 0x31], al	      4433	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003df5	        0xc645d000	                mov byte [rbp - 0x30], 0	      4434	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003df9	        0x488d45c0	                   lea rax, [rbp - 0x40]	      4435	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003dfd	        0x4883c00a	                            add rax, 0xa	      4435	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003e01	        0x488945b0	             mov qword [rbp - 0x50], rax	      4435	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003e05	            0xeb0c	                           jmp 0x4003e13	      4435	mbyte.c	FUNCTION_88	IF_5	IF_6
0x4003e07	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4438	mbyte.c	FUNCTION_88	IF_5	ELSE_1
0x4003e0b	        0x4883c001	                              add rax, 1	      4438	mbyte.c	FUNCTION_88	IF_5	ELSE_1
0x4003e0f	        0x488945b0	             mov qword [rbp - 0x50], rax	      4438	mbyte.c	FUNCTION_88	IF_5	ELSE_1
0x4003e13	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003e1a	      0xe9c1000000	                           jmp 0x4003ee0	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003e1f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e22	          0x4863d0	                         movsxd rdx, eax	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e25	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e29	          0x4801d0	                            add rax, rdx	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e2c	           0xfb600	                   movzx eax, byte [rax]	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e2f	            0x3c5f	                            cmp al, 0x5f	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e31	            0x7414	                            je 0x4003e47	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e33	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e36	          0x4863d0	                         movsxd rdx, eax	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e39	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e3d	          0x4801d0	                            add rax, rdx	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e40	           0xfb600	                   movzx eax, byte [rax]	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e43	            0x3c2d	                            cmp al, 0x2d	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e45	            0x750f	                           jne 0x4003e56	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e47	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e4a	            0x4898	                                    cdqe	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e4c	      0xc64405c02d	      mov byte [rbp + rax - 0x40], 0x2d 	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e51	      0xe986000000	                           jmp 0x4003edc	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x4003e56	      0xe800000000	                          call 0x4003e5b	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e5b	          0x488b00	                    mov rax, qword [rax]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e5e	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e61	          0x4863ca	                         movsxd rcx, edx	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e64	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e68	          0x4801ca	                            add rdx, rcx	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e6b	           0xfb612	                   movzx edx, byte [rdx]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e6e	        0x480fbed2	                           movsx rdx, dl	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e72	          0x4801d2	                            add rdx, rdx	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e75	          0x4801d0	                            add rax, rdx	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e78	           0xfb700	                   movzx eax, word [rax]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e7b	           0xfb7c0	                           movzx eax, ax	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e7e	          0x83e008	                              and eax, 8	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e81	            0x85c0	                           test eax, eax	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e83	            0x747b	                            je 0x4003f00	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x4003e85	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003e88	          0x4863d0	                         movsxd rdx, eax	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003e8b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003e8f	          0x4801d0	                            add rax, rdx	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003e92	           0xfb600	                   movzx eax, byte [rax]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003e95	            0x3c40	                            cmp al, 0x40	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003e97	            0x7e14	                           jle 0x4003ead	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003e99	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003e9c	          0x4863d0	                         movsxd rdx, eax	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003e9f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ea3	          0x4801d0	                            add rax, rdx	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ea6	           0xfb600	                   movzx eax, byte [rax]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ea9	            0x3c5a	                            cmp al, 0x5a	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003eab	            0x7e12	                           jle 0x4003ebf	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ead	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003eb0	          0x4863d0	                         movsxd rdx, eax	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003eb3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003eb7	          0x4801d0	                            add rax, rdx	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003eba	           0xfb600	                   movzx eax, byte [rax]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ebd	            0xeb13	                           jmp 0x4003ed2	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ebf	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ec2	          0x4863d0	                         movsxd rdx, eax	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ec5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ec9	          0x4801d0	                            add rax, rdx	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ecc	           0xfb600	                   movzx eax, byte [rax]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ecf	          0x83c020	                           add eax, 0x20	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ed2	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ed5	          0x4863d2	                         movsxd rdx, edx	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003ed8	        0x884415c0	         mov byte [rbp + rdx - 0x40], al	      4445	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x4003edc	        0x8345ac01	               add dword [rbp - 0x54], 1	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003ee0	        0x837dac30	           cmp dword [rbp - 0x54], 0x30 	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003ee4	            0x7f1b	                            jg 0x4003f01	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003ee6	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003ee9	          0x4863d0	                         movsxd rdx, eax	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003eec	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003ef0	          0x4801d0	                            add rax, rdx	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003ef3	           0xfb600	                   movzx eax, byte [rax]	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003ef6	            0x84c0	                             test al, al	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003ef8	     0xf8521ffffff	                           jne 0x4003e1f	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003efe	            0xeb01	                           jmp 0x4003f01	      4440	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x4003f00	              0x90	                                     nop	      4447	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_3
0x4003f01	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4449	mbyte.c	FUNCTION_88
0x4003f04	            0x4898	                                    cdqe	      4449	mbyte.c	FUNCTION_88
0x4003f06	      0xc64405c000	          mov byte [rbp + rax - 0x40], 0	      4449	mbyte.c	FUNCTION_88
0x4003f0b	        0x488d45c0	                   lea rax, [rbp - 0x40]	      4451	mbyte.c	FUNCTION_88	CALL_10
0x4003f0f	          0x4889c7	                            mov rdi, rax	      4451	mbyte.c	FUNCTION_88	CALL_10
0x4003f12	      0xe800000000	                          call 0x4003f17	      4451	mbyte.c	FUNCTION_88	CALL_10
0x4003f17	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4452	mbyte.c	FUNCTION_88
0x4003f1b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4452	mbyte.c	FUNCTION_88
0x4003f24	            0x7405	                            je 0x4003f2b	      4452	mbyte.c	FUNCTION_88
0x4003f26	      0xe800000000	                          call 0x4003f2b	      4452	mbyte.c	FUNCTION_88
0x4003f2b	              0xc9	                                   leave	      4452	mbyte.c	FUNCTION_88
0x4003f2c	              0xc3	                                     ret	      4452	mbyte.c	FUNCTION_88
my_iconv_open	CALL,6:IF,4:ELSE,1:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	61
0x4003f90	              0x55	                                push rbp	      4530	mbyte.c	FUNCTION_91
0x4003f91	          0x4889e5	                            mov rbp, rsp	      4530	mbyte.c	FUNCTION_91
0x4003f94	              0x53	                                push rbx	      4530	mbyte.c	FUNCTION_91
0x4003f95	    0x4881ecd80100	                          sub rsp, 0x1d8	      4530	mbyte.c	FUNCTION_91
0x4003f9c	    0x4889bd28feff	            mov qword [rbp - 0x1d8], rdi	      4530	mbyte.c	FUNCTION_91
0x4003fa3	    0x4889b520feff	            mov qword [rbp - 0x1e0], rsi	      4530	mbyte.c	FUNCTION_91
0x4003faa	    0x64488b042528	                mov rax, qword fs:[0x28]	      4530	mbyte.c	FUNCTION_91
0x4003fb3	        0x488945e8	             mov qword [rbp - 0x18], rax	      4530	mbyte.c	FUNCTION_91
0x4003fb7	            0x31c0	                            xor eax, eax	      4530	mbyte.c	FUNCTION_91
0x4003fb9	    0x8b0500000000	            mov eax, dword [0x04003fbf] 	      4538	mbyte.c	FUNCTION_91	IF_1
0x4003fbf	            0x85c0	                           test eax, eax	      4538	mbyte.c	FUNCTION_91	IF_1
0x4003fc1	            0x750c	                           jne 0x4003fcf	      4538	mbyte.c	FUNCTION_91	IF_1
0x4003fc3	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      4539	mbyte.c	FUNCTION_91	IF_1
0x4003fca	      0xe9d9000000	                           jmp 0x40040a8	      4539	mbyte.c	FUNCTION_91	IF_1
0x4003fcf	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4003fd6	          0x4889c7	                            mov rdi, rax	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4003fd9	      0xe800000000	                          call 0x4003fde	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4003fde	          0x4889c3	                            mov rbx, rax	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4003fe1	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4003fe8	          0x4889c7	                            mov rdi, rax	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4003feb	      0xe800000000	                          call 0x4003ff0	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4003ff0	          0x4889de	                            mov rsi, rbx	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4003ff3	          0x4889c7	                            mov rdi, rax	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4003ff6	      0xe800000000	                          call 0x4003ffb	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4003ffb	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      4547	mbyte.c	FUNCTION_91	CALL_4
0x4004002	    0x4883bd48feff	cmp qword [rbp - 0x1b8], 0xffffffffffffffff	      4549	mbyte.c	FUNCTION_91	IF_3
0x400400a	     0xf8491000000	                            je 0x40040a1	      4549	mbyte.c	FUNCTION_91	IF_3
0x4004010	    0x8b0500000000	            mov eax, dword [0x04004016] 	      4549	mbyte.c	FUNCTION_91	IF_3
0x4004016	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4549	mbyte.c	FUNCTION_91	IF_3
0x4004019	     0xf8582000000	                           jne 0x40040a1	      4549	mbyte.c	FUNCTION_91	IF_3
0x400401f	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      4558	mbyte.c	FUNCTION_91	IF_3
0x4004026	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	      4558	mbyte.c	FUNCTION_91	IF_3
0x400402d	    0x48c78540feff	         mov qword [rbp - 0x1c0], 0x190 	      4559	mbyte.c	FUNCTION_91	IF_3
0x4004038	    0x488d8d40feff	                  lea rcx, [rbp - 0x1c0]	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x400403f	    0x488d9538feff	                  lea rdx, [rbp - 0x1c8]	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x4004046	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x400404d	          0x4989c8	                             mov r8, rcx	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x4004050	          0x4889d1	                            mov rcx, rdx	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x4004053	      0xba00000000	                              mov edx, 0	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x4004058	      0xbe00000000	                              mov esi, 0	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x400405d	          0x4889c7	                            mov rdi, rax	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x4004060	      0xe800000000	                          call 0x4004065	      4560	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x4004065	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      4561	mbyte.c	FUNCTION_91	IF_3	IF_4
0x400406c	          0x4885c0	                           test rax, rax	      4561	mbyte.c	FUNCTION_91	IF_3	IF_4
0x400406f	            0x7526	                           jne 0x4004097	      4561	mbyte.c	FUNCTION_91	IF_3	IF_4
0x4004071	    0xc70500000000	               mov dword [0x0400407b], 0	      4563	mbyte.c	FUNCTION_91	IF_3	IF_4
0x400407b	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      4564	mbyte.c	FUNCTION_91	IF_3	IF_4	CALL_6
0x4004082	          0x4889c7	                            mov rdi, rax	      4564	mbyte.c	FUNCTION_91	IF_3	IF_4	CALL_6
0x4004085	      0xe800000000	                          call 0x400408a	      4564	mbyte.c	FUNCTION_91	IF_3	IF_4	CALL_6
0x400408a	    0x48c78548feff	mov qword [rbp - 0x1b8], 0xffffffffffffffff	      4565	mbyte.c	FUNCTION_91	IF_3	IF_4
0x4004095	            0xeb0a	                           jmp 0x40040a1	      4565	mbyte.c	FUNCTION_91	IF_3	IF_4
0x4004097	    0xc70500000000	               mov dword [0x040040a1], 1	      4568	mbyte.c	FUNCTION_91	IF_3	ELSE_1
0x40040a1	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      4571	mbyte.c	FUNCTION_91
0x40040a8	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4572	mbyte.c	FUNCTION_91
0x40040ac	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4572	mbyte.c	FUNCTION_91
0x40040b5	            0x7405	                            je 0x40040bc	      4572	mbyte.c	FUNCTION_91
0x40040b7	      0xe800000000	                          call 0x40040bc	      4572	mbyte.c	FUNCTION_91
0x40040bc	    0x4881c4d80100	                          add rsp, 0x1d8	      4572	mbyte.c	FUNCTION_91
0x40040c3	              0x5b	                                 pop rbx	      4572	mbyte.c	FUNCTION_91
0x40040c4	              0x5d	                                 pop rbp	      4572	mbyte.c	FUNCTION_91
0x40040c5	              0xc3	                                     ret	      4572	mbyte.c	FUNCTION_91
mb_unescape	CALL,0:IF,5:ELSE,3:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	136
0x40035bd	              0x55	                                push rbp	      4187	mbyte.c	FUNCTION_82
0x40035be	          0x4889e5	                            mov rbp, rsp	      4187	mbyte.c	FUNCTION_82
0x40035c1	        0x4883ec20	                           sub rsp, 0x20	      4187	mbyte.c	FUNCTION_82
0x40035c5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4187	mbyte.c	FUNCTION_82
0x40035c9	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4190	mbyte.c	FUNCTION_82
0x40035d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4191	mbyte.c	FUNCTION_82
0x40035d4	          0x488b00	                    mov rax, qword [rax]	      4191	mbyte.c	FUNCTION_82
0x40035d7	        0x488945f8	                mov qword [rbp - 8], rax	      4191	mbyte.c	FUNCTION_82
0x40035db	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4196	mbyte.c	FUNCTION_82	FOR_1
0x40035e2	      0xe968010000	                           jmp 0x400374f	      4196	mbyte.c	FUNCTION_82	FOR_1
0x40035e7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40035ea	          0x4863d0	                         movsxd rdx, eax	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40035ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40035f1	          0x4801d0	                            add rax, rdx	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40035f4	           0xfb600	                   movzx eax, byte [rax]	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40035f7	            0x3c80	                            cmp al, 0x80	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40035f9	            0x7549	                           jne 0x4003644	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40035fb	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x40035fe	            0x4898	                                    cdqe	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003600	        0x488d5001	                      lea rdx, [rax + 1]	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003604	        0x488b45f8	                mov rax, qword [rbp - 8]	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003608	          0x4801d0	                            add rax, rdx	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x400360b	           0xfb600	                   movzx eax, byte [rax]	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x400360e	            0x3cfe	                            cmp al, 0xfe	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003610	            0x7532	                           jne 0x4003644	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003612	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003615	            0x4898	                                    cdqe	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003617	        0x488d5002	                      lea rdx, [rax + 2]	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x400361b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x400361f	          0x4801d0	                            add rax, rdx	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003622	           0xfb600	                   movzx eax, byte [rax]	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003625	            0x3c58	                            cmp al, 0x58	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003627	            0x751b	                           jne 0x4003644	      4200	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003629	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4202	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x400362c	          0x8d5001	                      lea edx, [rax + 1]	      4202	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x400362f	          0x8955f4	              mov dword [rbp - 0xc], edx	      4202	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003632	            0x4898	                                    cdqe	      4202	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003634	    0xc68000000000	                    mov byte [rax], 0x80	      4202	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x400363b	        0x8345f002	               add dword [rbp - 0x10], 2	      4203	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x400363f	      0xe9bf000000	                           jmp 0x4003703	      4203	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x4003644	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4205	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003647	          0x4863d0	                         movsxd rdx, eax	      4205	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400364a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4205	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400364e	          0x4801d0	                            add rax, rdx	      4205	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003651	           0xfb600	                   movzx eax, byte [rax]	      4205	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003654	            0x3c80	                            cmp al, 0x80	      4205	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003656	            0x7414	                            je 0x400366c	      4205	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003658	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4207	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400365b	          0x4863d0	                         movsxd rdx, eax	      4207	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400365e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4207	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003662	          0x4801d0	                            add rax, rdx	      4207	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003665	           0xfb600	                   movzx eax, byte [rax]	      4207	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003668	            0x3c9b	                            cmp al, 0x9b	      4207	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400366a	            0x7546	                           jne 0x40036b2	      4207	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400366c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400366f	            0x4898	                                    cdqe	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003671	        0x488d5001	                      lea rdx, [rax + 1]	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003675	        0x488b45f8	                mov rax, qword [rbp - 8]	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003679	          0x4801d0	                            add rax, rdx	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400367c	           0xfb600	                   movzx eax, byte [rax]	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400367f	            0x3cfd	                            cmp al, 0xfd	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003681	            0x752f	                           jne 0x40036b2	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003683	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003686	            0x4898	                                    cdqe	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003688	        0x488d5002	                      lea rdx, [rax + 2]	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400368c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003690	          0x4801d0	                            add rax, rdx	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003693	           0xfb600	                   movzx eax, byte [rax]	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003696	            0x3c51	                            cmp al, 0x51	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x4003698	            0x7518	                           jne 0x40036b2	      4211	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400369a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4213	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x400369d	          0x8d5001	                      lea edx, [rax + 1]	      4213	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x40036a0	          0x8955f4	              mov dword [rbp - 0xc], edx	      4213	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x40036a3	            0x4898	                                    cdqe	      4213	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x40036a5	    0xc68000000000	                    mov byte [rax], 0x9b	      4213	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x40036ac	        0x8345f002	               add dword [rbp - 0x10], 2	      4214	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x40036b0	            0xeb51	                           jmp 0x4003703	      4214	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x40036b2	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4216	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036b5	          0x4863d0	                         movsxd rdx, eax	      4216	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4216	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036bc	          0x4801d0	                            add rax, rdx	      4216	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036bf	           0xfb600	                   movzx eax, byte [rax]	      4216	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036c2	            0x3c80	                            cmp al, 0x80	      4216	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036c4	     0xf84a6000000	                            je 0x4003770	      4216	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036ca	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4218	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036cd	          0x4863d0	                         movsxd rdx, eax	      4218	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4218	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036d4	          0x4801d0	                            add rax, rdx	      4218	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036d7	           0xfb600	                   movzx eax, byte [rax]	      4218	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036da	            0x3c9b	                            cmp al, 0x9b	      4218	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036dc	     0xf848e000000	                            je 0x4003770	      4218	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x40036e2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x40036e5	          0x8d5001	                      lea edx, [rax + 1]	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x40036e8	          0x8955f4	              mov dword [rbp - 0xc], edx	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x40036eb	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x40036ee	          0x4863ca	                         movsxd rcx, edx	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x40036f1	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x40036f5	          0x4801ca	                            add rdx, rcx	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x40036f8	           0xfb612	                   movzx edx, byte [rdx]	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x40036fb	            0x4898	                                    cdqe	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x40036fd	    0x889000000000	                      mov byte [rax], dl	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x4003703	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4224	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x4003706	            0x4898	                                    cdqe	      4224	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x4003708	    0xc68000000000	                       mov byte [rax], 0	      4224	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x400370f	    0x488b05000000	            mov rax, qword [0x04003716] 	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4003716	      0xbf00000000	                              mov edi, 0	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x400371b	            0xffd0	                                call rax	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x400371d	          0x83f801	                              cmp eax, 1	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4003720	            0x7e1e	                           jle 0x4003740	      4228	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4003722	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4003725	            0x4898	                                    cdqe	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4003727	        0x488d5001	                      lea rdx, [rax + 1]	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x400372b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x400372f	          0x4801c2	                            add rdx, rax	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4003732	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4003736	          0x488910	                    mov qword [rax], rdx	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4003739	      0xb800000000	                              mov eax, 0	      4231	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x400373e	            0xeb35	                           jmp 0x4003775	      4231	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x4003740	     0xfb605000000	           movzx eax, byte [0x04003747] 	      4235	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x4003747	            0x84c0	                             test al, al	      4235	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x4003749	            0x7924	                           jns 0x400376f	      4235	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x400374b	        0x8345f001	               add dword [rbp - 0x10], 1	      4196	mbyte.c	FUNCTION_82	FOR_1
0x400374f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4003752	          0x4863d0	                         movsxd rdx, eax	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4003755	        0x488b45f8	                mov rax, qword [rbp - 8]	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4003759	          0x4801d0	                            add rax, rdx	      4196	mbyte.c	FUNCTION_82	FOR_1
0x400375c	           0xfb600	                   movzx eax, byte [rax]	      4196	mbyte.c	FUNCTION_82	FOR_1
0x400375f	            0x84c0	                             test al, al	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4003761	            0x740d	                            je 0x4003770	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4003763	        0x837df403	                cmp dword [rbp - 0xc], 3	      4196	mbyte.c	FUNCTION_82	FOR_1
0x4003767	     0xf8e7afeffff	                           jle 0x40035e7	      4196	mbyte.c	FUNCTION_82	FOR_1
0x400376d	            0xeb01	                           jmp 0x4003770	      4196	mbyte.c	FUNCTION_82	FOR_1
0x400376f	              0x90	                                     nop	      4236	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x4003770	      0xb800000000	                              mov eax, 0	      4238	mbyte.c	FUNCTION_82
0x4003775	              0xc9	                                   leave	      4239	mbyte.c	FUNCTION_82
0x4003776	              0xc3	                                     ret	      4239	mbyte.c	FUNCTION_82
dbcs_ptr2cells_len	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	23
0x4001063	              0x55	                                push rbp	      1687	mbyte.c	FUNCTION_26
0x4001064	          0x4889e5	                            mov rbp, rsp	      1687	mbyte.c	FUNCTION_26
0x4001067	        0x48897df8	                mov qword [rbp - 8], rdi	      1687	mbyte.c	FUNCTION_26
0x400106b	          0x8975f4	              mov dword [rbp - 0xc], esi	      1687	mbyte.c	FUNCTION_26
0x400106e	        0x837df401	                cmp dword [rbp - 0xc], 1	      1690	mbyte.c	FUNCTION_26	IF_1
0x4001072	            0x7e18	                           jle 0x400108c	      1690	mbyte.c	FUNCTION_26	IF_1
0x4001074	    0x8b0500000000	            mov eax, dword [0x0400107a] 	      1690	mbyte.c	FUNCTION_26	IF_1
0x400107a	      0x3dcc260000	                         cmp eax, 0x26cc	      1690	mbyte.c	FUNCTION_26	IF_1
0x400107f	            0x7512	                           jne 0x4001093	      1690	mbyte.c	FUNCTION_26	IF_1
0x4001081	        0x488b45f8	                mov rax, qword [rbp - 8]	      1690	mbyte.c	FUNCTION_26	IF_1
0x4001085	           0xfb600	                   movzx eax, byte [rax]	      1690	mbyte.c	FUNCTION_26	IF_1
0x4001088	            0x3c8e	                            cmp al, 0x8e	      1690	mbyte.c	FUNCTION_26	IF_1
0x400108a	            0x7507	                           jne 0x4001093	      1690	mbyte.c	FUNCTION_26	IF_1
0x400108c	      0xb801000000	                              mov eax, 1	      1691	mbyte.c	FUNCTION_26	IF_1
0x4001091	            0xeb16	                           jmp 0x40010a9	      1691	mbyte.c	FUNCTION_26	IF_1
0x4001093	        0x488b45f8	                mov rax, qword [rbp - 8]	      1692	mbyte.c	FUNCTION_26	CALL_1
0x4001097	           0xfb600	                   movzx eax, byte [rax]	      1692	mbyte.c	FUNCTION_26	CALL_1
0x400109a	           0xfb6c0	                           movzx eax, al	      1692	mbyte.c	FUNCTION_26	CALL_1
0x400109d	            0x4898	                                    cdqe	      1692	mbyte.c	FUNCTION_26	CALL_1
0x400109f	     0xfb680000000	                   movzx eax, byte [rax]	      1692	mbyte.c	FUNCTION_26	CALL_1
0x40010a6	           0xfbec0	                           movsx eax, al	      1692	mbyte.c	FUNCTION_26	CALL_1
0x40010a9	              0x5d	                                 pop rbp	      1693	mbyte.c	FUNCTION_26
0x40010aa	              0xc3	                                     ret	      1693	mbyte.c	FUNCTION_26
dbcs_off2cells	CALL,1:IF,2:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	30
0x4001184	              0x55	                                push rbp	      1745	mbyte.c	FUNCTION_31
0x4001185	          0x4889e5	                            mov rbp, rsp	      1745	mbyte.c	FUNCTION_31
0x4001188	          0x897dfc	                mov dword [rbp - 4], edi	      1745	mbyte.c	FUNCTION_31
0x400118b	          0x8975f8	                mov dword [rbp - 8], esi	      1745	mbyte.c	FUNCTION_31
0x400118e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1747	mbyte.c	FUNCTION_31	IF_1
0x4001191	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1747	mbyte.c	FUNCTION_31	IF_1
0x4001194	            0x7207	                            jb 0x400119d	      1747	mbyte.c	FUNCTION_31	IF_1
0x4001196	      0xb801000000	                              mov eax, 1	      1748	mbyte.c	FUNCTION_31	IF_1
0x400119b	            0xeb47	                           jmp 0x40011e4	      1748	mbyte.c	FUNCTION_31	IF_1
0x400119d	    0x8b0500000000	            mov eax, dword [0x040011a3] 	      1752	mbyte.c	FUNCTION_31	IF_2
0x40011a3	      0x3dcc260000	                         cmp eax, 0x26cc	      1752	mbyte.c	FUNCTION_31	IF_2
0x40011a8	            0x751b	                           jne 0x40011c5	      1752	mbyte.c	FUNCTION_31	IF_2
0x40011aa	    0x488b15000000	            mov rdx, qword [0x040011b1] 	      1752	mbyte.c	FUNCTION_31	IF_2
0x40011b1	          0x8b45fc	                mov eax, dword [rbp - 4]	      1752	mbyte.c	FUNCTION_31	IF_2
0x40011b4	          0x4801d0	                            add rax, rdx	      1752	mbyte.c	FUNCTION_31	IF_2
0x40011b7	           0xfb600	                   movzx eax, byte [rax]	      1752	mbyte.c	FUNCTION_31	IF_2
0x40011ba	            0x3c8e	                            cmp al, 0x8e	      1752	mbyte.c	FUNCTION_31	IF_2
0x40011bc	            0x7507	                           jne 0x40011c5	      1752	mbyte.c	FUNCTION_31	IF_2
0x40011be	      0xb801000000	                              mov eax, 1	      1753	mbyte.c	FUNCTION_31	IF_2
0x40011c3	            0xeb1f	                           jmp 0x40011e4	      1753	mbyte.c	FUNCTION_31	IF_2
0x40011c5	    0x488b15000000	            mov rdx, qword [0x040011cc] 	      1754	mbyte.c	FUNCTION_31	CALL_1
0x40011cc	          0x8b45fc	                mov eax, dword [rbp - 4]	      1754	mbyte.c	FUNCTION_31	CALL_1
0x40011cf	          0x4801d0	                            add rax, rdx	      1754	mbyte.c	FUNCTION_31	CALL_1
0x40011d2	           0xfb600	                   movzx eax, byte [rax]	      1754	mbyte.c	FUNCTION_31	CALL_1
0x40011d5	           0xfb6c0	                           movzx eax, al	      1754	mbyte.c	FUNCTION_31	CALL_1
0x40011d8	            0x4898	                                    cdqe	      1754	mbyte.c	FUNCTION_31	CALL_1
0x40011da	     0xfb680000000	                   movzx eax, byte [rax]	      1754	mbyte.c	FUNCTION_31	CALL_1
0x40011e1	           0xfbec0	                           movsx eax, al	      1754	mbyte.c	FUNCTION_31	CALL_1
0x40011e4	              0x5d	                                 pop rbp	      1755	mbyte.c	FUNCTION_31
0x40011e5	              0xc3	                                     ret	      1755	mbyte.c	FUNCTION_31
im_preedit_window_close	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	11
0x4004af4	              0x55	                                push rbp	      5075	mbyte.c	FUNCTION_105
0x4004af5	          0x4889e5	                            mov rbp, rsp	      5075	mbyte.c	FUNCTION_105
0x4004af8	    0x488b05000000	            mov rax, qword [0x04004aff] 	      5076	mbyte.c	FUNCTION_105	IF_1
0x4004aff	          0x4885c0	                           test rax, rax	      5076	mbyte.c	FUNCTION_105	IF_1
0x4004b02	            0x740f	                            je 0x4004b13	      5076	mbyte.c	FUNCTION_105	IF_1
0x4004b04	    0x488b05000000	            mov rax, qword [0x04004b0b] 	      5077	mbyte.c	FUNCTION_105	CALL_1
0x4004b0b	          0x4889c7	                            mov rdi, rax	      5077	mbyte.c	FUNCTION_105	CALL_1
0x4004b0e	      0xe800000000	                          call 0x4004b13	      5077	mbyte.c	FUNCTION_105	CALL_1
0x4004b13	              0x90	                                     nop	      5078	mbyte.c	FUNCTION_105
0x4004b14	              0x5d	                                 pop rbp	      5078	mbyte.c	FUNCTION_105
0x4004b15	              0xc3	                                     ret	      5078	mbyte.c	FUNCTION_105
im_string_to_keyval	CALL,2:IF,3:ELSE,0:DO,0:WHILE,1:functions,0:SWITCH,1:FOR,0	75
0x40055f4	              0x55	                                push rbp	      5595	mbyte.c	FUNCTION_118
0x40055f5	          0x4889e5	                            mov rbp, rsp	      5595	mbyte.c	FUNCTION_118
0x40055f8	        0x4883ec30	                           sub rsp, 0x30	      5595	mbyte.c	FUNCTION_118
0x40055fc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5595	mbyte.c	FUNCTION_118
0x4005600	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5595	mbyte.c	FUNCTION_118
0x4005604	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5595	mbyte.c	FUNCTION_118
0x4005608	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      5598	mbyte.c	FUNCTION_118
0x400560f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5600	mbyte.c	FUNCTION_118	CALL_1
0x4005613	      0xbe2d000000	                           mov esi, 0x2d	      5600	mbyte.c	FUNCTION_118	CALL_1
0x4005618	          0x4889c7	                            mov rdi, rax	      5600	mbyte.c	FUNCTION_118	CALL_1
0x400561b	      0xe800000000	                          call 0x4005620	      5600	mbyte.c	FUNCTION_118	CALL_1
0x4005620	        0x488945f8	                mov qword [rbp - 8], rax	      5600	mbyte.c	FUNCTION_118	CALL_1
0x4005624	      0x48837df800	                  cmp qword [rbp - 8], 0	      5601	mbyte.c	FUNCTION_118
0x4005629	            0x740a	                            je 0x4005635	      5601	mbyte.c	FUNCTION_118
0x400562b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5601	mbyte.c	FUNCTION_118
0x400562f	        0x4883c001	                              add rax, 1	      5601	mbyte.c	FUNCTION_118
0x4005633	            0xeb04	                           jmp 0x4005639	      5601	mbyte.c	FUNCTION_118
0x4005635	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5601	mbyte.c	FUNCTION_118
0x4005639	        0x488945f8	                mov qword [rbp - 8], rax	      5601	mbyte.c	FUNCTION_118
0x400563d	            0xeb60	                           jmp 0x400569f	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x400563f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005643	        0x488d5001	                      lea rdx, [rax + 1]	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005647	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x400564b	           0xfb600	                   movzx eax, byte [rax]	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x400564e	           0xfbec0	                           movsx eax, al	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005651	          0x83e82d	                           sub eax, 0x2d	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005654	          0x83f846	                           cmp eax, 0x46	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005657	            0x773f	                            ja 0x4005698	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005659	            0x89c0	                            mov eax, eax	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x400565b	    0x488b04c50000	                  mov rax, qword [rax*8]	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005663	            0xffe0	                                 jmp rax	      5605	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005665	        0x834df001	                or dword [rbp - 0x10], 1	      5608	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005669	            0xeb34	                           jmp 0x400569f	      5608	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x400566b	        0x834df002	                or dword [rbp - 0x10], 2	      5609	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x400566f	            0xeb2e	                           jmp 0x400569f	      5609	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005671	        0x834df004	                or dword [rbp - 0x10], 4	      5610	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005675	            0xeb28	                           jmp 0x400569f	      5610	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005677	        0x834df008	                or dword [rbp - 0x10], 8	      5611	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x400567b	            0xeb22	                           jmp 0x400569f	      5611	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x400567d	        0x834df010	             or dword [rbp - 0x10], 0x10	      5612	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005681	            0xeb1c	                           jmp 0x400569f	      5612	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005683	        0x834df020	             or dword [rbp - 0x10], 0x20	      5613	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005687	            0xeb16	                           jmp 0x400569f	      5613	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005689	        0x834df040	            or dword [rbp - 0x10], 0x40 	      5614	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x400568d	            0xeb10	                           jmp 0x400569f	      5614	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x400568f	    0x814df0800000	             or dword [rbp - 0x10], 0x80	      5615	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005696	            0xeb07	                           jmp 0x400569f	      5615	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x4005698	      0xb800000000	                              mov eax, 0	      5617	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x400569d	            0xeb54	                           jmp 0x40056f3	      5617	mbyte.c	FUNCTION_118	WHILE_1	SWITCH_1
0x400569f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x40056a3	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x40056a7	            0x7296	                            jb 0x400563f	      5604	mbyte.c	FUNCTION_118	WHILE_1
0x40056a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5620	mbyte.c	FUNCTION_118	CALL_2
0x40056ad	          0x4889c7	                            mov rdi, rax	      5620	mbyte.c	FUNCTION_118	CALL_2
0x40056b0	      0xe800000000	                          call 0x40056b5	      5620	mbyte.c	FUNCTION_118	CALL_2
0x40056b5	          0x8945f4	              mov dword [rbp - 0xc], eax	      5620	mbyte.c	FUNCTION_118	CALL_2
0x40056b8	        0x837df400	                cmp dword [rbp - 0xc], 0	      5622	mbyte.c	FUNCTION_118	IF_1
0x40056bc	            0x7409	                            je 0x40056c7	      5622	mbyte.c	FUNCTION_118	IF_1
0x40056be	    0x817df4ffffff	        cmp dword [rbp - 0xc], 0xffffff 	      5622	mbyte.c	FUNCTION_118	IF_1
0x40056c5	            0x7507	                           jne 0x40056ce	      5622	mbyte.c	FUNCTION_118	IF_1
0x40056c7	      0xb800000000	                              mov eax, 0	      5623	mbyte.c	FUNCTION_118	IF_1
0x40056cc	            0xeb25	                           jmp 0x40056f3	      5623	mbyte.c	FUNCTION_118	IF_1
0x40056ce	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5625	mbyte.c	FUNCTION_118	IF_2
0x40056d3	            0x7409	                            je 0x40056de	      5625	mbyte.c	FUNCTION_118	IF_2
0x40056d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5626	mbyte.c	FUNCTION_118	IF_2
0x40056d9	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      5626	mbyte.c	FUNCTION_118	IF_2
0x40056dc	            0x8910	                    mov dword [rax], edx	      5626	mbyte.c	FUNCTION_118	IF_2
0x40056de	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      5627	mbyte.c	FUNCTION_118	IF_3
0x40056e3	            0x7409	                            je 0x40056ee	      5627	mbyte.c	FUNCTION_118	IF_3
0x40056e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5628	mbyte.c	FUNCTION_118	IF_3
0x40056e9	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      5628	mbyte.c	FUNCTION_118	IF_3
0x40056ec	            0x8910	                    mov dword [rax], edx	      5628	mbyte.c	FUNCTION_118	IF_3
0x40056ee	      0xb801000000	                              mov eax, 1	      5630	mbyte.c	FUNCTION_118
0x40056f3	              0xc9	                                   leave	      5631	mbyte.c	FUNCTION_118
0x40056f4	              0xc3	                                     ret	      5631	mbyte.c	FUNCTION_118
enc_canon_search	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	25
0x4000040	              0x55	                                push rbp	       452	mbyte.c	FUNCTION_2
0x4000041	          0x4889e5	                            mov rbp, rsp	       452	mbyte.c	FUNCTION_2
0x4000044	        0x4883ec20	                           sub rsp, 0x20	       452	mbyte.c	FUNCTION_2
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       452	mbyte.c	FUNCTION_2
0x400004c	    0xc745fc000000	                  mov dword [rbp - 4], 0	       455	mbyte.c	FUNCTION_2	FOR_1
0x4000053	            0xeb2e	                           jmp 0x4000083	       455	mbyte.c	FUNCTION_2	FOR_1
0x4000055	          0x8b45fc	                mov eax, dword [rbp - 4]	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000058	            0x4898	                                    cdqe	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400005a	        0x48c1e004	                              shl rax, 4	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400005e	    0x480500000000	                              add rax, 0	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000064	          0x488b10	                    mov rdx, qword [rax]	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000067	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400006b	          0x4889d6	                            mov rsi, rdx	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400006e	          0x4889c7	                            mov rdi, rax	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000071	      0xe800000000	                          call 0x4000076	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000076	            0x85c0	                           test eax, eax	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000078	            0x7505	                           jne 0x400007f	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400007a	          0x8b45fc	                mov eax, dword [rbp - 4]	       457	mbyte.c	FUNCTION_2	FOR_1	IF_1
0x400007d	            0xeb0f	                           jmp 0x400008e	       457	mbyte.c	FUNCTION_2	FOR_1	IF_1
0x400007f	        0x8345fc01	                  add dword [rbp - 4], 1	       455	mbyte.c	FUNCTION_2	FOR_1
0x4000083	        0x837dfc3b	               cmp dword [rbp - 4], 0x3b	       455	mbyte.c	FUNCTION_2	FOR_1
0x4000087	            0x7ecc	                           jle 0x4000055	       455	mbyte.c	FUNCTION_2	FOR_1
0x4000089	      0xb8ffffffff	                     mov eax, 0xffffffff	       458	mbyte.c	FUNCTION_2
0x400008e	              0xc9	                                   leave	       459	mbyte.c	FUNCTION_2
0x400008f	              0xc3	                                     ret	       459	mbyte.c	FUNCTION_2
latin_ptr2cells_len	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	7
0x4000fa7	              0x55	                                push rbp	      1659	mbyte.c	FUNCTION_24
0x4000fa8	          0x4889e5	                            mov rbp, rsp	      1659	mbyte.c	FUNCTION_24
0x4000fab	        0x48897df8	                mov qword [rbp - 8], rdi	      1659	mbyte.c	FUNCTION_24
0x4000faf	          0x8975f4	              mov dword [rbp - 0xc], esi	      1659	mbyte.c	FUNCTION_24
0x4000fb2	      0xb801000000	                              mov eax, 1	      1660	mbyte.c	FUNCTION_24
0x4000fb7	              0x5d	                                 pop rbp	      1661	mbyte.c	FUNCTION_24
0x4000fb8	              0xc3	                                     ret	      1661	mbyte.c	FUNCTION_24
im_xim_isvalid_imactivate	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	17
0x40056f5	              0x55	                                push rbp	      5644	mbyte.c	FUNCTION_119
0x40056f6	          0x4889e5	                            mov rbp, rsp	      5644	mbyte.c	FUNCTION_119
0x40056f9	    0x488b05000000	            mov rax, qword [0x04005700] 	      5645	mbyte.c	FUNCTION_119	IF_1
0x4005700	           0xfb600	                   movzx eax, byte [rax]	      5645	mbyte.c	FUNCTION_119	IF_1
0x4005703	            0x84c0	                             test al, al	      5645	mbyte.c	FUNCTION_119	IF_1
0x4005705	            0x751b	                           jne 0x4005722	      5645	mbyte.c	FUNCTION_119	IF_1
0x4005707	    0xc70500000000	       mov dword [0x04005711], 0xffffff 	      5647	mbyte.c	FUNCTION_119	IF_1
0x4005711	    0xc70500000000	               mov dword [0x0400571b], 0	      5648	mbyte.c	FUNCTION_119	IF_1
0x400571b	      0xb801000000	                              mov eax, 1	      5649	mbyte.c	FUNCTION_119	IF_1
0x4005720	            0xeb19	                           jmp 0x400573b	      5649	mbyte.c	FUNCTION_119	IF_1
0x4005722	    0x488b05000000	            mov rax, qword [0x04005729] 	      5652	mbyte.c	FUNCTION_119	CALL_1
0x4005729	      0xba00000000	                              mov edx, 0	      5652	mbyte.c	FUNCTION_119	CALL_1
0x400572e	      0xbe00000000	                              mov esi, 0	      5652	mbyte.c	FUNCTION_119	CALL_1
0x4005733	          0x4889c7	                            mov rdi, rax	      5652	mbyte.c	FUNCTION_119	CALL_1
0x4005736	      0xe8b9feffff	            call sym.im_string_to_keyval	      5652	mbyte.c	FUNCTION_119	CALL_1
0x400573b	              0x5d	                                 pop rbp	      5655	mbyte.c	FUNCTION_119
0x400573c	              0xc3	                                     ret	      5655	mbyte.c	FUNCTION_119
utf_composinglike	CALL,5:IF,2:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	33
0x400178e	              0x55	                                push rbp	      1955	mbyte.c	FUNCTION_41
0x400178f	          0x4889e5	                            mov rbp, rsp	      1955	mbyte.c	FUNCTION_41
0x4001792	        0x4883ec20	                           sub rsp, 0x20	      1955	mbyte.c	FUNCTION_41
0x4001796	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1955	mbyte.c	FUNCTION_41
0x400179a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1955	mbyte.c	FUNCTION_41
0x400179e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1958	mbyte.c	FUNCTION_41	CALL_1
0x40017a2	          0x4889c7	                            mov rdi, rax	      1958	mbyte.c	FUNCTION_41	CALL_1
0x40017a5	      0xe800000000	                          call 0x40017aa	      1958	mbyte.c	FUNCTION_41	CALL_1
0x40017aa	          0x8945fc	                mov dword [rbp - 4], eax	      1958	mbyte.c	FUNCTION_41	CALL_1
0x40017ad	          0x8b45fc	                mov eax, dword [rbp - 4]	      1959	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x40017b0	            0x89c7	                            mov edi, eax	      1959	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x40017b2	      0xe800000000	                          call 0x40017b7	      1959	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x40017b7	            0x85c0	                           test eax, eax	      1959	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x40017b9	            0x7407	                            je 0x40017c2	      1959	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x40017bb	      0xb801000000	                              mov eax, 1	      1960	mbyte.c	FUNCTION_41	IF_1
0x40017c0	            0xeb2f	                           jmp 0x40017f1	      1960	mbyte.c	FUNCTION_41	IF_1
0x40017c2	          0x8b45fc	                mov eax, dword [rbp - 4]	      1961	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x40017c5	            0x89c7	                            mov edi, eax	      1961	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x40017c7	      0xe800000000	                          call 0x40017cc	      1961	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x40017cc	            0x85c0	                           test eax, eax	      1961	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x40017ce	            0x7507	                           jne 0x40017d7	      1961	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x40017d0	      0xb800000000	                              mov eax, 0	      1962	mbyte.c	FUNCTION_41	IF_2
0x40017d5	            0xeb1a	                           jmp 0x40017f1	      1962	mbyte.c	FUNCTION_41	IF_2
0x40017d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1963	mbyte.c	FUNCTION_41	CALL_5
0x40017db	          0x4889c7	                            mov rdi, rax	      1963	mbyte.c	FUNCTION_41	CALL_5
0x40017de	      0xe800000000	                          call 0x40017e3	      1963	mbyte.c	FUNCTION_41	CALL_5
0x40017e3	            0x89c2	                            mov edx, eax	      1963	mbyte.c	FUNCTION_41	CALL_5
0x40017e5	          0x8b45fc	                mov eax, dword [rbp - 4]	      1963	mbyte.c	FUNCTION_41	CALL_5
0x40017e8	            0x89c6	                            mov esi, eax	      1963	mbyte.c	FUNCTION_41	CALL_5
0x40017ea	            0x89d7	                            mov edi, edx	      1963	mbyte.c	FUNCTION_41	CALL_5
0x40017ec	      0xe800000000	                          call 0x40017f1	      1963	mbyte.c	FUNCTION_41	CALL_5
0x40017f1	              0xc9	                                   leave	      1964	mbyte.c	FUNCTION_41
0x40017f2	              0xc3	                                     ret	      1964	mbyte.c	FUNCTION_41
arabic_maycombine	CALL,0:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	24
0x400173a	              0x55	                                push rbp	      1939	mbyte.c	FUNCTION_40
0x400173b	          0x4889e5	                            mov rbp, rsp	      1939	mbyte.c	FUNCTION_40
0x400173e	          0x897dfc	                mov dword [rbp - 4], edi	      1939	mbyte.c	FUNCTION_40
0x4001741	    0x8b0500000000	            mov eax, dword [0x04001747] 	      1940	mbyte.c	FUNCTION_40	IF_1
0x4001747	            0x85c0	                           test eax, eax	      1940	mbyte.c	FUNCTION_40	IF_1
0x4001749	            0x743c	                            je 0x4001787	      1940	mbyte.c	FUNCTION_40	IF_1
0x400174b	    0x8b0500000000	            mov eax, dword [0x04001751] 	      1940	mbyte.c	FUNCTION_40	IF_1
0x4001751	            0x85c0	                           test eax, eax	      1940	mbyte.c	FUNCTION_40	IF_1
0x4001753	            0x7532	                           jne 0x4001787	      1940	mbyte.c	FUNCTION_40	IF_1
0x4001755	    0x817dfc220600	              cmp dword [rbp - 4], 0x622	      1944	mbyte.c	FUNCTION_40	IF_1
0x400175c	            0x741b	                            je 0x4001779	      1944	mbyte.c	FUNCTION_40	IF_1
0x400175e	    0x817dfc230600	              cmp dword [rbp - 4], 0x623	      1942	mbyte.c	FUNCTION_40	IF_1
0x4001765	            0x7412	                            je 0x4001779	      1942	mbyte.c	FUNCTION_40	IF_1
0x4001767	    0x817dfc250600	              cmp dword [rbp - 4], 0x625	      1943	mbyte.c	FUNCTION_40	IF_1
0x400176e	            0x7409	                            je 0x4001779	      1943	mbyte.c	FUNCTION_40	IF_1
0x4001770	    0x817dfc270600	              cmp dword [rbp - 4], 0x627	      1944	mbyte.c	FUNCTION_40	IF_1
0x4001777	            0x7507	                           jne 0x4001780	      1944	mbyte.c	FUNCTION_40	IF_1
0x4001779	      0xb801000000	                              mov eax, 1	      1944	mbyte.c	FUNCTION_40	IF_1
0x400177e	            0xeb0c	                           jmp 0x400178c	      1941	mbyte.c	FUNCTION_40	IF_1
0x4001780	      0xb800000000	                              mov eax, 0	      1944	mbyte.c	FUNCTION_40	IF_1
0x4001785	            0xeb05	                           jmp 0x400178c	      1941	mbyte.c	FUNCTION_40	IF_1
0x4001787	      0xb800000000	                              mov eax, 0	      1945	mbyte.c	FUNCTION_40
0x400178c	              0x5d	                                 pop rbp	      1946	mbyte.c	FUNCTION_40
0x400178d	              0xc3	                                     ret	      1946	mbyte.c	FUNCTION_40
mb_prevptr	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	27
0x40034b3	              0x55	                                push rbp	      4136	mbyte.c	FUNCTION_79
0x40034b4	          0x4889e5	                            mov rbp, rsp	      4136	mbyte.c	FUNCTION_79
0x40034b7	        0x4883ec10	                           sub rsp, 0x10	      4136	mbyte.c	FUNCTION_79
0x40034bb	        0x48897df8	                mov qword [rbp - 8], rdi	      4136	mbyte.c	FUNCTION_79
0x40034bf	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4136	mbyte.c	FUNCTION_79
0x40034c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4137	mbyte.c	FUNCTION_79	IF_1
0x40034c7	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4137	mbyte.c	FUNCTION_79	IF_1
0x40034cb	            0x7638	                           jbe 0x4003505	      4137	mbyte.c	FUNCTION_79	IF_1
0x40034cd	    0x8b0500000000	            mov eax, dword [0x040034d3] 	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034d3	            0x85c0	                           test eax, eax	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034d5	            0x7420	                            je 0x40034f7	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034d7	    0x488b05000000	            mov rax, qword [0x040034de] 	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034de	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034e2	        0x488d4aff	                      lea rcx, [rdx - 1]	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034e6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034ea	          0x4889ce	                            mov rsi, rcx	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034ed	          0x4889d7	                            mov rdi, rdx	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034f0	            0xffd0	                                call rax	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034f2	          0x83c001	                              add eax, 1	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034f5	            0xeb05	                           jmp 0x40034fc	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034f7	      0xb801000000	                              mov eax, 1	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034fc	            0x4898	                                    cdqe	      4138	mbyte.c	FUNCTION_79	CALL_1
0x40034fe	          0x48f7d8	                                 neg rax	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4003501	        0x480145f0	            add qword [rbp - 0x10], rax 	      4138	mbyte.c	FUNCTION_79	CALL_1
0x4003505	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4139	mbyte.c	FUNCTION_79
0x4003509	              0xc9	                                   leave	      4140	mbyte.c	FUNCTION_79
0x400350a	              0xc3	                                     ret	      4140	mbyte.c	FUNCTION_79
arabic_combine	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	14
0x4001710	              0x55	                                push rbp	      1927	mbyte.c	FUNCTION_39
0x4001711	          0x4889e5	                            mov rbp, rsp	      1927	mbyte.c	FUNCTION_39
0x4001714	        0x4883ec10	                           sub rsp, 0x10	      1927	mbyte.c	FUNCTION_39
0x4001718	          0x897dfc	                mov dword [rbp - 4], edi	      1927	mbyte.c	FUNCTION_39
0x400171b	          0x8975f8	                mov dword [rbp - 8], esi	      1927	mbyte.c	FUNCTION_39
0x400171e	    0x817dfc440600	              cmp dword [rbp - 4], 0x644	      1928	mbyte.c	FUNCTION_39	IF_1
0x4001725	            0x750c	                           jne 0x4001733	      1928	mbyte.c	FUNCTION_39	IF_1
0x4001727	          0x8b45f8	                mov eax, dword [rbp - 8]	      1929	mbyte.c	FUNCTION_39	CALL_1
0x400172a	            0x89c7	                            mov edi, eax	      1929	mbyte.c	FUNCTION_39	CALL_1
0x400172c	      0xe800000000	                          call 0x4001731	      1929	mbyte.c	FUNCTION_39	CALL_1
0x4001731	            0xeb05	                           jmp 0x4001738	      1929	mbyte.c	FUNCTION_39	CALL_1
0x4001733	      0xb800000000	                              mov eax, 0	      1930	mbyte.c	FUNCTION_39
0x4001738	              0xc9	                                   leave	      1931	mbyte.c	FUNCTION_39
0x4001739	              0xc3	                                     ret	      1931	mbyte.c	FUNCTION_39
utf_toupper	CALL,4:IF,3:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	40
0x40023f4	              0x55	                                push rbp	      3525	mbyte.c	FUNCTION_60
0x40023f5	          0x4889e5	                            mov rbp, rsp	      3525	mbyte.c	FUNCTION_60
0x40023f8	        0x4883ec10	                           sub rsp, 0x10	      3525	mbyte.c	FUNCTION_60
0x40023fc	          0x897dfc	                mov dword [rbp - 4], edi	      3525	mbyte.c	FUNCTION_60
0x40023ff	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      3527	mbyte.c	FUNCTION_60	IF_1
0x4002403	            0x7f26	                            jg 0x400242b	      3527	mbyte.c	FUNCTION_60	IF_1
0x4002405	    0x8b0500000000	            mov eax, dword [0x0400240b] 	      3527	mbyte.c	FUNCTION_60	IF_1
0x400240b	          0x83e002	                              and eax, 2	      3527	mbyte.c	FUNCTION_60	IF_1
0x400240e	            0x85c0	                           test eax, eax	      3527	mbyte.c	FUNCTION_60	IF_1
0x4002410	            0x7419	                            je 0x400242b	      3527	mbyte.c	FUNCTION_60	IF_1
0x4002412	        0x837dfc60	               cmp dword [rbp - 4], 0x60	      3528	mbyte.c	FUNCTION_60	CALL_1
0x4002416	            0x7e0e	                           jle 0x4002426	      3528	mbyte.c	FUNCTION_60	CALL_1
0x4002418	        0x837dfc7a	               cmp dword [rbp - 4], 0x7a	      3528	mbyte.c	FUNCTION_60	CALL_1
0x400241c	            0x7f08	                            jg 0x4002426	      3528	mbyte.c	FUNCTION_60	CALL_1
0x400241e	          0x8b45fc	                mov eax, dword [rbp - 4]	      3528	mbyte.c	FUNCTION_60	CALL_1
0x4002421	          0x83e820	                           sub eax, 0x20	      3528	mbyte.c	FUNCTION_60	CALL_1
0x4002424	            0xeb44	                           jmp 0x400246a	      3528	mbyte.c	FUNCTION_60	CALL_1
0x4002426	          0x8b45fc	                mov eax, dword [rbp - 4]	      3528	mbyte.c	FUNCTION_60	CALL_1
0x4002429	            0xeb3f	                           jmp 0x400246a	      3528	mbyte.c	FUNCTION_60	CALL_1
0x400242b	    0x8b0500000000	            mov eax, dword [0x04002431] 	      3532	mbyte.c	FUNCTION_60	IF_2
0x4002431	          0x83e001	                              and eax, 1	      3532	mbyte.c	FUNCTION_60	IF_2
0x4002434	            0x85c0	                           test eax, eax	      3532	mbyte.c	FUNCTION_60	IF_2
0x4002436	            0x750c	                           jne 0x4002444	      3532	mbyte.c	FUNCTION_60	IF_2
0x4002438	          0x8b45fc	                mov eax, dword [rbp - 4]	      3533	mbyte.c	FUNCTION_60	CALL_2
0x400243b	            0x89c7	                            mov edi, eax	      3533	mbyte.c	FUNCTION_60	CALL_2
0x400243d	      0xe800000000	                          call 0x4002442	      3533	mbyte.c	FUNCTION_60	CALL_2
0x4002442	            0xeb26	                           jmp 0x400246a	      3533	mbyte.c	FUNCTION_60	CALL_2
0x4002444	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      3537	mbyte.c	FUNCTION_60	IF_3
0x4002448	            0x7f0c	                            jg 0x4002456	      3537	mbyte.c	FUNCTION_60	IF_3
0x400244a	          0x8b45fc	                mov eax, dword [rbp - 4]	      3538	mbyte.c	FUNCTION_60	CALL_3
0x400244d	            0x89c7	                            mov edi, eax	      3538	mbyte.c	FUNCTION_60	CALL_3
0x400244f	      0xe800000000	                          call 0x4002454	      3538	mbyte.c	FUNCTION_60	CALL_3
0x4002454	            0xeb14	                           jmp 0x400246a	      3538	mbyte.c	FUNCTION_60	CALL_3
0x4002456	          0x8b45fc	                mov eax, dword [rbp - 4]	      3541	mbyte.c	FUNCTION_60	CALL_4
0x4002459	      0xba300b0000	                          mov edx, 0xb30	      3541	mbyte.c	FUNCTION_60	CALL_4
0x400245e	      0xbe00000000	                              mov esi, 0	      3541	mbyte.c	FUNCTION_60	CALL_4
0x4002463	            0x89c7	                            mov edi, eax	      3541	mbyte.c	FUNCTION_60	CALL_4
0x4002465	      0xe83afeffff	                    call sym.utf_convert	      3541	mbyte.c	FUNCTION_60	CALL_4
0x400246a	              0xc9	                                   leave	      3542	mbyte.c	FUNCTION_60
0x400246b	              0xc3	                                     ret	      3542	mbyte.c	FUNCTION_60
im_show_preedit	CALL,2:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	12
0x4004b16	              0x55	                                push rbp	      5082	mbyte.c	FUNCTION_106
0x4004b17	          0x4889e5	                            mov rbp, rsp	      5082	mbyte.c	FUNCTION_106
0x4004b1a	      0xb800000000	                              mov eax, 0	      5083	mbyte.c	FUNCTION_106	CALL_1
0x4004b1f	      0xe804fdffff	         call sym.im_preedit_window_open	      5083	mbyte.c	FUNCTION_106	CALL_1
0x4004b24	    0x8b0500000000	            mov eax, dword [0x04004b2a] 	      5085	mbyte.c	FUNCTION_106	IF_1
0x4004b2a	            0x85c0	                           test eax, eax	      5085	mbyte.c	FUNCTION_106	IF_1
0x4004b2c	            0x740a	                            je 0x4004b38	      5085	mbyte.c	FUNCTION_106	IF_1
0x4004b2e	      0xbf01000000	                              mov edi, 1	      5086	mbyte.c	FUNCTION_106	CALL_2
0x4004b33	      0xe800000000	                          call 0x4004b38	      5086	mbyte.c	FUNCTION_106	CALL_2
0x4004b38	              0x90	                                     nop	      5087	mbyte.c	FUNCTION_106
0x4004b39	              0x5d	                                 pop rbp	      5087	mbyte.c	FUNCTION_106
0x4004b3a	              0xc3	                                     ret	      5087	mbyte.c	FUNCTION_106
dbcs_ptr2cells	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	20
0x4000f68	              0x55	                                push rbp	      1644	mbyte.c	FUNCTION_23
0x4000f69	          0x4889e5	                            mov rbp, rsp	      1644	mbyte.c	FUNCTION_23
0x4000f6c	        0x48897df8	                mov qword [rbp - 8], rdi	      1644	mbyte.c	FUNCTION_23
0x4000f70	    0x8b0500000000	            mov eax, dword [0x04000f76] 	      1647	mbyte.c	FUNCTION_23	IF_1
0x4000f76	      0x3dcc260000	                         cmp eax, 0x26cc	      1647	mbyte.c	FUNCTION_23	IF_1
0x4000f7b	            0x7512	                           jne 0x4000f8f	      1647	mbyte.c	FUNCTION_23	IF_1
0x4000f7d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1647	mbyte.c	FUNCTION_23	IF_1
0x4000f81	           0xfb600	                   movzx eax, byte [rax]	      1647	mbyte.c	FUNCTION_23	IF_1
0x4000f84	            0x3c8e	                            cmp al, 0x8e	      1647	mbyte.c	FUNCTION_23	IF_1
0x4000f86	            0x7507	                           jne 0x4000f8f	      1647	mbyte.c	FUNCTION_23	IF_1
0x4000f88	      0xb801000000	                              mov eax, 1	      1648	mbyte.c	FUNCTION_23	IF_1
0x4000f8d	            0xeb16	                           jmp 0x4000fa5	      1648	mbyte.c	FUNCTION_23	IF_1
0x4000f8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1649	mbyte.c	FUNCTION_23	CALL_1
0x4000f93	           0xfb600	                   movzx eax, byte [rax]	      1649	mbyte.c	FUNCTION_23	CALL_1
0x4000f96	           0xfb6c0	                           movzx eax, al	      1649	mbyte.c	FUNCTION_23	CALL_1
0x4000f99	            0x4898	                                    cdqe	      1649	mbyte.c	FUNCTION_23	CALL_1
0x4000f9b	     0xfb680000000	                   movzx eax, byte [rax]	      1649	mbyte.c	FUNCTION_23	CALL_1
0x4000fa2	           0xfbec0	                           movsx eax, al	      1649	mbyte.c	FUNCTION_23	CALL_1
0x4000fa5	              0x5d	                                 pop rbp	      1650	mbyte.c	FUNCTION_23
0x4000fa6	              0xc3	                                     ret	      1650	mbyte.c	FUNCTION_23
im_add_to_input	CALL,5:IF,3:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	39
0x4004646	              0x55	                                push rbp	      4910	mbyte.c	FUNCTION_102
0x4004647	          0x4889e5	                            mov rbp, rsp	      4910	mbyte.c	FUNCTION_102
0x400464a	        0x4883ec10	                           sub rsp, 0x10	      4910	mbyte.c	FUNCTION_102
0x400464e	        0x48897df8	                mov qword [rbp - 8], rdi	      4910	mbyte.c	FUNCTION_102
0x4004652	          0x8975f4	              mov dword [rbp - 0xc], esi	      4910	mbyte.c	FUNCTION_102
0x4004655	    0x8b0500000000	            mov eax, dword [0x0400465b] 	      4912	mbyte.c	FUNCTION_102	IF_1
0x400465b	            0x85c0	                           test eax, eax	      4912	mbyte.c	FUNCTION_102	IF_1
0x400465d	            0x7436	                            je 0x4004695	      4912	mbyte.c	FUNCTION_102	IF_1
0x400465f	        0x488d55f4	                    lea rdx, [rbp - 0xc]	      4914	mbyte.c	FUNCTION_102	IF_1	CALL_1
0x4004663	        0x488b45f8	                mov rax, qword [rbp - 8]	      4914	mbyte.c	FUNCTION_102	IF_1	CALL_1
0x4004667	          0x4889c6	                            mov rsi, rax	      4914	mbyte.c	FUNCTION_102	IF_1	CALL_1
0x400466a	      0xbf00000000	                              mov edi, 0	      4914	mbyte.c	FUNCTION_102	IF_1	CALL_1
0x400466f	      0xe800000000	                          call 0x4004674	      4914	mbyte.c	FUNCTION_102	IF_1	CALL_1
0x4004674	        0x488945f8	                mov qword [rbp - 8], rax	      4914	mbyte.c	FUNCTION_102	IF_1	CALL_1
0x4004678	      0x48837df800	                  cmp qword [rbp - 8], 0	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x400467d	            0x7516	                           jne 0x4004695	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x400467f	      0xba00000000	                              mov edx, 0	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x4004684	      0xbe00000000	                              mov esi, 0	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x4004689	      0xbf00000000	                              mov edi, 0	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x400468e	      0xe800000000	                          call 0x4004693	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x4004693	            0xeb3b	                           jmp 0x40046d0	      4915	mbyte.c	FUNCTION_102	IF_1	CALL_2
0x4004695	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4918	mbyte.c	FUNCTION_102	CALL_3
0x4004698	        0x488b45f8	                mov rax, qword [rbp - 8]	      4918	mbyte.c	FUNCTION_102	CALL_3
0x400469c	            0x89d6	                            mov esi, edx	      4918	mbyte.c	FUNCTION_102	CALL_3
0x400469e	          0x4889c7	                            mov rdi, rax	      4918	mbyte.c	FUNCTION_102	CALL_3
0x40046a1	      0xe800000000	                          call 0x40046a6	      4918	mbyte.c	FUNCTION_102	CALL_3
0x40046a6	    0x8b0500000000	            mov eax, dword [0x040046ac] 	      4920	mbyte.c	FUNCTION_102	IF_2
0x40046ac	            0x85c0	                           test eax, eax	      4920	mbyte.c	FUNCTION_102	IF_2
0x40046ae	            0x740c	                            je 0x40046bc	      4920	mbyte.c	FUNCTION_102	IF_2
0x40046b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4921	mbyte.c	FUNCTION_102	CALL_4
0x40046b4	          0x4889c7	                            mov rdi, rax	      4921	mbyte.c	FUNCTION_102	CALL_4
0x40046b7	      0xe800000000	                          call 0x40046bc	      4921	mbyte.c	FUNCTION_102	CALL_4
0x40046bc	    0x8b0500000000	            mov eax, dword [0x040046c2] 	      4923	mbyte.c	FUNCTION_102	IF_3
0x40046c2	            0x85c0	                           test eax, eax	      4923	mbyte.c	FUNCTION_102	IF_3
0x40046c4	            0x740a	                            je 0x40046d0	      4923	mbyte.c	FUNCTION_102	IF_3
0x40046c6	      0xbf01000000	                              mov edi, 1	      4924	mbyte.c	FUNCTION_102	CALL_5
0x40046cb	      0xe800000000	                          call 0x40046d0	      4924	mbyte.c	FUNCTION_102	CALL_5
0x40046d0	              0xc9	                                   leave	      4925	mbyte.c	FUNCTION_102
0x40046d1	              0xc3	                                     ret	      4925	mbyte.c	FUNCTION_102
utf_ptr2cells	CALL,4:IF,3:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	34
0x4000eff	              0x55	                                push rbp	      1624	mbyte.c	FUNCTION_22
0x4000f00	          0x4889e5	                            mov rbp, rsp	      1624	mbyte.c	FUNCTION_22
0x4000f03	        0x4883ec20	                           sub rsp, 0x20	      1624	mbyte.c	FUNCTION_22
0x4000f07	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1624	mbyte.c	FUNCTION_22
0x4000f0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1628	mbyte.c	FUNCTION_22	IF_1
0x4000f0f	           0xfb600	                   movzx eax, byte [rax]	      1628	mbyte.c	FUNCTION_22	IF_1
0x4000f12	            0x84c0	                             test al, al	      1628	mbyte.c	FUNCTION_22	IF_1
0x4000f14	            0x794b	                           jns 0x4000f61	      1628	mbyte.c	FUNCTION_22	IF_1
0x4000f16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1630	mbyte.c	FUNCTION_22	IF_1	CALL_1
0x4000f1a	          0x4889c7	                            mov rdi, rax	      1630	mbyte.c	FUNCTION_22	IF_1	CALL_1
0x4000f1d	      0xe800000000	                          call 0x4000f22	      1630	mbyte.c	FUNCTION_22	IF_1	CALL_1
0x4000f22	          0x8945fc	                mov dword [rbp - 4], eax	      1630	mbyte.c	FUNCTION_22	IF_1	CALL_1
0x4000f25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000f29	          0x4889c7	                            mov rdi, rax	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000f2c	      0xe800000000	                          call 0x4000f31	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000f31	          0x83f801	                              cmp eax, 1	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000f34	            0x7406	                            je 0x4000f3c	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000f36	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000f3a	            0x7507	                           jne 0x4000f43	      1632	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000f3c	      0xb804000000	                              mov eax, 4	      1633	mbyte.c	FUNCTION_22	IF_1	IF_2
0x4000f41	            0xeb23	                           jmp 0x4000f66	      1633	mbyte.c	FUNCTION_22	IF_1	IF_2
0x4000f43	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1635	mbyte.c	FUNCTION_22	IF_1	IF_3
0x4000f47	            0x7f0c	                            jg 0x4000f55	      1635	mbyte.c	FUNCTION_22	IF_1	IF_3
0x4000f49	          0x8b45fc	                mov eax, dword [rbp - 4]	      1636	mbyte.c	FUNCTION_22	IF_1	CALL_3
0x4000f4c	            0x89c7	                            mov edi, eax	      1636	mbyte.c	FUNCTION_22	IF_1	CALL_3
0x4000f4e	      0xe800000000	                          call 0x4000f53	      1636	mbyte.c	FUNCTION_22	IF_1	CALL_3
0x4000f53	            0xeb11	                           jmp 0x4000f66	      1636	mbyte.c	FUNCTION_22	IF_1	CALL_3
0x4000f55	          0x8b45fc	                mov eax, dword [rbp - 4]	      1637	mbyte.c	FUNCTION_22	IF_1	CALL_4
0x4000f58	            0x89c7	                            mov edi, eax	      1637	mbyte.c	FUNCTION_22	IF_1	CALL_4
0x4000f5a	      0xe800000000	                          call 0x4000f5f	      1637	mbyte.c	FUNCTION_22	IF_1	CALL_4
0x4000f5f	            0xeb05	                           jmp 0x4000f66	      1637	mbyte.c	FUNCTION_22	IF_1	CALL_4
0x4000f61	      0xb801000000	                              mov eax, 1	      1639	mbyte.c	FUNCTION_22
0x4000f66	              0xc9	                                   leave	      1640	mbyte.c	FUNCTION_22
0x4000f67	              0xc3	                                     ret	      1640	mbyte.c	FUNCTION_22
im_correct_cursor	CALL,1:IF,2:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	42
0x4004c11	              0x55	                                push rbp	      5124	mbyte.c	FUNCTION_108
0x4004c12	          0x4889e5	                            mov rbp, rsp	      5124	mbyte.c	FUNCTION_108
0x4004c15	        0x4883ec20	                           sub rsp, 0x20	      5124	mbyte.c	FUNCTION_108
0x4004c19	          0x897dec	             mov dword [rbp - 0x14], edi	      5124	mbyte.c	FUNCTION_108
0x4004c1c	    0x64488b042528	                mov rax, qword fs:[0x28]	      5124	mbyte.c	FUNCTION_108
0x4004c25	        0x488945f8	                mov qword [rbp - 8], rax	      5124	mbyte.c	FUNCTION_108
0x4004c29	            0x31c0	                            xor eax, eax	      5124	mbyte.c	FUNCTION_108
0x4004c2b	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      5125	mbyte.c	FUNCTION_108
0x4004c2f	        0xc645f16b	              mov byte [rbp - 0xf], 0x6b	      5125	mbyte.c	FUNCTION_108
0x4004c33	        0xc645f26c	              mov byte [rbp - 0xe], 0x6c	      5125	mbyte.c	FUNCTION_108
0x4004c37	    0x8b0500000000	            mov eax, dword [0x04004c3d] 	      5127	mbyte.c	FUNCTION_108	IF_1
0x4004c3d	          0x83e001	                              and eax, 1	      5127	mbyte.c	FUNCTION_108	IF_1
0x4004c40	            0x85c0	                           test eax, eax	      5127	mbyte.c	FUNCTION_108	IF_1
0x4004c42	            0x754d	                           jne 0x4004c91	      5127	mbyte.c	FUNCTION_108	IF_1
0x4004c44	    0x8b0500000000	            mov eax, dword [0x04004c4a] 	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004c4a	          0x83e008	                              and eax, 8	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004c4d	            0x85c0	                           test eax, eax	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004c4f	            0x7538	                           jne 0x4004c89	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004c51	    0x488b05000000	            mov rax, qword [0x04004c58] 	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004c58	          0x4885c0	                           test rax, rax	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004c5b	            0x742c	                            je 0x4004c89	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004c5d	    0x488b05000000	            mov rax, qword [0x04004c64] 	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004c64	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004c6a	            0x85c0	                           test eax, eax	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004c6c	            0x741b	                            je 0x4004c89	      5130	mbyte.c	FUNCTION_108	IF_2
0x4004c6e	        0xc645f272	              mov byte [rbp - 0xe], 0x72	      5131	mbyte.c	FUNCTION_108	IF_2
0x4004c72	            0xeb15	                           jmp 0x4004c89	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4004c74	        0x488d45f0	                   lea rax, [rbp - 0x10]	      5134	mbyte.c	FUNCTION_108	CALL_1
0x4004c78	      0xbe03000000	                              mov esi, 3	      5134	mbyte.c	FUNCTION_108	CALL_1
0x4004c7d	          0x4889c7	                            mov rdi, rax	      5134	mbyte.c	FUNCTION_108	CALL_1
0x4004c80	      0xe800000000	                          call 0x4004c85	      5134	mbyte.c	FUNCTION_108	CALL_1
0x4004c85	        0x836dec01	               sub dword [rbp - 0x14], 1	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4004c89	        0x837dec00	               cmp dword [rbp - 0x14], 0	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4004c8d	            0x7fe5	                            jg 0x4004c74	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4004c8f	            0xeb01	                           jmp 0x4004c92	      5133	mbyte.c	FUNCTION_108	FOR_1
0x4004c91	              0x90	                                     nop	      5128	mbyte.c	FUNCTION_108	IF_1
0x4004c92	        0x488b45f8	                mov rax, qword [rbp - 8]	      5135	mbyte.c	FUNCTION_108
0x4004c96	    0x644833042528	                xor rax, qword fs:[0x28]	      5135	mbyte.c	FUNCTION_108
0x4004c9f	            0x7405	                            je 0x4004ca6	      5135	mbyte.c	FUNCTION_108
0x4004ca1	      0xe800000000	                          call 0x4004ca6	      5135	mbyte.c	FUNCTION_108
0x4004ca6	              0xc9	                                   leave	      5135	mbyte.c	FUNCTION_108
0x4004ca7	              0xc3	                                     ret	      5135	mbyte.c	FUNCTION_108
utfc_ptr2len	CALL,3:IF,4:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	66
0x4001c54	              0x55	                                push rbp	      2139	mbyte.c	FUNCTION_48
0x4001c55	          0x4889e5	                            mov rbp, rsp	      2139	mbyte.c	FUNCTION_48
0x4001c58	        0x4883ec20	                           sub rsp, 0x20	      2139	mbyte.c	FUNCTION_48
0x4001c5c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2139	mbyte.c	FUNCTION_48
0x4001c60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2141	mbyte.c	FUNCTION_48
0x4001c64	           0xfb600	                   movzx eax, byte [rax]	      2141	mbyte.c	FUNCTION_48
0x4001c67	           0xfb6c0	                           movzx eax, al	      2141	mbyte.c	FUNCTION_48
0x4001c6a	          0x8945fc	                mov dword [rbp - 4], eax	      2141	mbyte.c	FUNCTION_48
0x4001c6d	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2146	mbyte.c	FUNCTION_48	IF_1
0x4001c71	            0x750a	                           jne 0x4001c7d	      2146	mbyte.c	FUNCTION_48	IF_1
0x4001c73	      0xb800000000	                              mov eax, 0	      2147	mbyte.c	FUNCTION_48	IF_1
0x4001c78	      0xe9aa000000	                           jmp 0x4001d27	      2147	mbyte.c	FUNCTION_48	IF_1
0x4001c7d	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      2148	mbyte.c	FUNCTION_48	IF_2
0x4001c81	            0x7f19	                            jg 0x4001c9c	      2148	mbyte.c	FUNCTION_48	IF_2
0x4001c83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2148	mbyte.c	FUNCTION_48	IF_2
0x4001c87	        0x4883c001	                              add rax, 1	      2148	mbyte.c	FUNCTION_48	IF_2
0x4001c8b	           0xfb600	                   movzx eax, byte [rax]	      2148	mbyte.c	FUNCTION_48	IF_2
0x4001c8e	            0x84c0	                             test al, al	      2148	mbyte.c	FUNCTION_48	IF_2
0x4001c90	            0x780a	                            js 0x4001c9c	      2148	mbyte.c	FUNCTION_48	IF_2
0x4001c92	      0xb801000000	                              mov eax, 1	      2149	mbyte.c	FUNCTION_48	IF_2
0x4001c97	      0xe98b000000	                           jmp 0x4001d27	      2149	mbyte.c	FUNCTION_48	IF_2
0x4001c9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2152	mbyte.c	FUNCTION_48	CALL_1
0x4001ca0	          0x4889c7	                            mov rdi, rax	      2152	mbyte.c	FUNCTION_48	CALL_1
0x4001ca3	      0xe800000000	                          call 0x4001ca8	      2152	mbyte.c	FUNCTION_48	CALL_1
0x4001ca8	          0x8945f4	              mov dword [rbp - 0xc], eax	      2152	mbyte.c	FUNCTION_48	CALL_1
0x4001cab	        0x837df401	                cmp dword [rbp - 0xc], 1	      2155	mbyte.c	FUNCTION_48	IF_3
0x4001caf	            0x750d	                           jne 0x4001cbe	      2155	mbyte.c	FUNCTION_48	IF_3
0x4001cb1	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      2155	mbyte.c	FUNCTION_48	IF_3
0x4001cb5	            0x7e07	                           jle 0x4001cbe	      2155	mbyte.c	FUNCTION_48	IF_3
0x4001cb7	      0xb801000000	                              mov eax, 1	      2156	mbyte.c	FUNCTION_48	IF_3
0x4001cbc	            0xeb69	                           jmp 0x4001d27	      2156	mbyte.c	FUNCTION_48	IF_3
0x4001cbe	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2163	mbyte.c	FUNCTION_48
0x4001cc5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cc8	          0x4863d0	                         movsxd rdx, eax	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001ccb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001ccf	          0x4801d0	                            add rax, rdx	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cd2	           0xfb600	                   movzx eax, byte [rax]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cd5	            0x84c0	                             test al, al	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cd7	            0x7929	                           jns 0x4001d02	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cd9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cdc	          0x4863d0	                         movsxd rdx, eax	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cdf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001ce3	          0x4801c2	                            add rdx, rax	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001ce6	          0x8b45f8	                mov eax, dword [rbp - 8]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001ce9	          0x4863c8	                         movsxd rcx, eax	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cf0	          0x4801c8	                            add rax, rcx	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cf3	          0x4889d6	                            mov rsi, rdx	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cf6	          0x4889c7	                            mov rdi, rax	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cf9	      0xe800000000	                          call 0x4001cfe	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001cfe	            0x85c0	                           test eax, eax	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001d00	            0x7505	                           jne 0x4001d07	      2167	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x4001d02	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4
0x4001d05	            0xeb20	                           jmp 0x4001d27	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4
0x4001d07	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2172	mbyte.c	FUNCTION_48	FOR_1
0x4001d0a	          0x8945f8	                mov dword [rbp - 8], eax	      2172	mbyte.c	FUNCTION_48	FOR_1
0x4001d0d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x4001d10	          0x4863d0	                         movsxd rdx, eax	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x4001d13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x4001d17	          0x4801d0	                            add rax, rdx	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x4001d1a	          0x4889c7	                            mov rdi, rax	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x4001d1d	      0xe800000000	                          call 0x4001d22	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x4001d22	           0x145f4	              add dword [rbp - 0xc], eax	      2174	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x4001d25	            0xeb9e	                           jmp 0x4001cc5	      2175	mbyte.c	FUNCTION_48	FOR_1
0x4001d27	              0xc9	                                   leave	      2176	mbyte.c	FUNCTION_48
0x4001d28	              0xc3	                                     ret	      2176	mbyte.c	FUNCTION_48
mb_string2cells	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	39
0x40010f5	              0x55	                                push rbp	      1723	mbyte.c	FUNCTION_29
0x40010f6	          0x4889e5	                            mov rbp, rsp	      1723	mbyte.c	FUNCTION_29
0x40010f9	        0x4883ec20	                           sub rsp, 0x20	      1723	mbyte.c	FUNCTION_29
0x40010fd	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1723	mbyte.c	FUNCTION_29
0x4001101	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1723	mbyte.c	FUNCTION_29
0x4001104	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1725	mbyte.c	FUNCTION_29
0x400110b	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001112	            0xeb38	                           jmp 0x400114c	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001114	    0x488b05000000	            mov rax, qword [0x0400111b] 	      1728	mbyte.c	FUNCTION_29	FOR_1
0x400111b	          0x8b55f8	                mov edx, dword [rbp - 8]	      1728	mbyte.c	FUNCTION_29	FOR_1
0x400111e	          0x4863ca	                         movsxd rcx, edx	      1728	mbyte.c	FUNCTION_29	FOR_1
0x4001121	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1728	mbyte.c	FUNCTION_29	FOR_1
0x4001125	          0x4801ca	                            add rdx, rcx	      1728	mbyte.c	FUNCTION_29	FOR_1
0x4001128	          0x4889d7	                            mov rdi, rdx	      1728	mbyte.c	FUNCTION_29	FOR_1
0x400112b	            0xffd0	                                call rax	      1728	mbyte.c	FUNCTION_29	FOR_1
0x400112d	           0x145fc	                add dword [rbp - 4], eax	      1728	mbyte.c	FUNCTION_29	FOR_1
0x4001130	    0x488b05000000	            mov rax, qword [0x04001137] 	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001137	          0x8b55f8	                mov edx, dword [rbp - 8]	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400113a	          0x4863ca	                         movsxd rcx, edx	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400113d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001141	          0x4801ca	                            add rdx, rcx	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001144	          0x4889d7	                            mov rdi, rdx	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001147	            0xffd0	                                call rax	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001149	           0x145f8	                add dword [rbp - 8], eax	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400114c	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001150	            0x7808	                            js 0x400115a	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001152	          0x8b45f8	                mov eax, dword [rbp - 8]	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001155	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001158	            0x7d14	                           jge 0x400116e	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400115a	          0x8b45f8	                mov eax, dword [rbp - 8]	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400115d	          0x4863d0	                         movsxd rdx, eax	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001160	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001164	          0x4801d0	                            add rax, rdx	      1727	mbyte.c	FUNCTION_29	FOR_1
0x4001167	           0xfb600	                   movzx eax, byte [rax]	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400116a	            0x84c0	                             test al, al	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400116c	            0x75a6	                           jne 0x4001114	      1727	mbyte.c	FUNCTION_29	FOR_1
0x400116e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1729	mbyte.c	FUNCTION_29
0x4001171	              0xc9	                                   leave	      1730	mbyte.c	FUNCTION_29
0x4001172	              0xc3	                                     ret	      1730	mbyte.c	FUNCTION_29
im_is_preediting	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	5
0x4005d5c	              0x55	                                push rbp	      5890	mbyte.c	FUNCTION_125
0x4005d5d	          0x4889e5	                            mov rbp, rsp	      5890	mbyte.c	FUNCTION_125
0x4005d60	    0x8b0500000000	            mov eax, dword [0x04005d66] 	      5891	mbyte.c	FUNCTION_125
0x4005d66	              0x5d	                                 pop rbp	      5892	mbyte.c	FUNCTION_125
0x4005d67	              0xc3	                                     ret	      5892	mbyte.c	FUNCTION_125
im_synthesize_keypress	CALL,10:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	66
0x400573d	              0x55	                                push rbp	      5659	mbyte.c	FUNCTION_120
0x400573e	          0x4889e5	                            mov rbp, rsp	      5659	mbyte.c	FUNCTION_120
0x4005741	              0x53	                                push rbx	      5659	mbyte.c	FUNCTION_120
0x4005742	        0x4883ec28	                           sub rsp, 0x28	      5659	mbyte.c	FUNCTION_120
0x4005746	          0x897ddc	             mov dword [rbp - 0x24], edi	      5659	mbyte.c	FUNCTION_120
0x4005749	          0x8975d8	             mov dword [rbp - 0x28], esi	      5659	mbyte.c	FUNCTION_120
0x400574c	      0xbf08000000	                              mov edi, 8	      5662	mbyte.c	FUNCTION_120	CALL_1
0x4005751	      0xe800000000	                          call 0x4005756	      5662	mbyte.c	FUNCTION_120	CALL_1
0x4005756	        0x488945e8	             mov qword [rbp - 0x18], rax	      5662	mbyte.c	FUNCTION_120	CALL_1
0x400575a	    0x488b05000000	            mov rax, qword [0x04005761] 	      5667	mbyte.c	FUNCTION_120	CALL_4
0x4005761	        0x488b4050	            mov rax, qword [rax + 0x50] 	      5667	mbyte.c	FUNCTION_120	CALL_4
0x4005765	          0x4889c7	                            mov rdi, rax	      5667	mbyte.c	FUNCTION_120	CALL_4
0x4005768	      0xe800000000	                          call 0x400576d	      5667	mbyte.c	FUNCTION_120	CALL_4
0x400576d	    0x488b05000000	            mov rax, qword [0x04005774] 	      5672	mbyte.c	FUNCTION_120
0x4005774	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      5672	mbyte.c	FUNCTION_120
0x4005778	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5672	mbyte.c	FUNCTION_120
0x400577c	        0x48895008	                mov qword [rax + 8], rdx	      5672	mbyte.c	FUNCTION_120
0x4005780	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5674	mbyte.c	FUNCTION_120
0x4005784	        0xc6401001	                mov byte [rax + 0x10], 1	      5674	mbyte.c	FUNCTION_120
0x4005788	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5675	mbyte.c	FUNCTION_120
0x400578c	    0xc74014000000	               mov dword [rax + 0x14], 0	      5675	mbyte.c	FUNCTION_120
0x4005793	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5676	mbyte.c	FUNCTION_120
0x4005797	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      5676	mbyte.c	FUNCTION_120
0x400579a	          0x895018	             mov dword [rax + 0x18], edx	      5676	mbyte.c	FUNCTION_120
0x400579d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5677	mbyte.c	FUNCTION_120
0x40057a1	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      5677	mbyte.c	FUNCTION_120
0x40057a4	          0x89501c	             mov dword [rax + 0x1c], edx	      5677	mbyte.c	FUNCTION_120
0x40057a7	          0x8b5ddc	             mov ebx, dword [rbp - 0x24]	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40057aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40057ae	        0x488b4008	                mov rax, qword [rax + 8]	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40057b2	          0x4889c7	                            mov rdi, rax	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40057b5	      0xe800000000	                          call 0x40057ba	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40057ba	          0x4889c7	                            mov rdi, rax	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40057bd	      0xe800000000	                          call 0x40057c2	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40057c2	          0x4889de	                            mov rsi, rbx	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40057c5	          0x4889c7	                            mov rdi, rax	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40057c8	      0xe800000000	                          call 0x40057cd	      5679	mbyte.c	FUNCTION_120	CALL_7
0x40057cd	           0xfb6d0	                           movzx edx, al	      5678	mbyte.c	FUNCTION_120
0x40057d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5678	mbyte.c	FUNCTION_120
0x40057d4	        0x66895030	               mov word [rax + 0x30], dx	      5678	mbyte.c	FUNCTION_120
0x40057d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5680	mbyte.c	FUNCTION_120
0x40057dc	    0xc74020000000	               mov dword [rax + 0x20], 0	      5680	mbyte.c	FUNCTION_120
0x40057e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5681	mbyte.c	FUNCTION_120
0x40057e7	    0x48c740280000	               mov qword [rax + 0x28], 0	      5681	mbyte.c	FUNCTION_120
0x40057ef	    0x488b05000000	            mov rax, qword [0x040057f6] 	      5683	mbyte.c	FUNCTION_120	CALL_8
0x40057f6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5683	mbyte.c	FUNCTION_120	CALL_8
0x40057fa	          0x4889d6	                            mov rsi, rdx	      5683	mbyte.c	FUNCTION_120	CALL_8
0x40057fd	          0x4889c7	                            mov rdi, rax	      5683	mbyte.c	FUNCTION_120	CALL_8
0x4005800	      0xe800000000	                          call 0x4005805	      5683	mbyte.c	FUNCTION_120	CALL_8
0x4005805	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5686	mbyte.c	FUNCTION_120
0x4005809	    0xc70009000000	                      mov dword [rax], 9	      5686	mbyte.c	FUNCTION_120
0x400580f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5687	mbyte.c	FUNCTION_120
0x4005813	        0xc6401000	                mov byte [rax + 0x10], 0	      5687	mbyte.c	FUNCTION_120
0x4005817	    0x488b05000000	            mov rax, qword [0x0400581e] 	      5688	mbyte.c	FUNCTION_120	CALL_9
0x400581e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5688	mbyte.c	FUNCTION_120	CALL_9
0x4005822	          0x4889d6	                            mov rsi, rdx	      5688	mbyte.c	FUNCTION_120	CALL_9
0x4005825	          0x4889c7	                            mov rdi, rax	      5688	mbyte.c	FUNCTION_120	CALL_9
0x4005828	      0xe800000000	                          call 0x400582d	      5688	mbyte.c	FUNCTION_120	CALL_9
0x400582d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5690	mbyte.c	FUNCTION_120	CALL_10
0x4005831	          0x4889c7	                            mov rdi, rax	      5690	mbyte.c	FUNCTION_120	CALL_10
0x4005834	      0xe800000000	                          call 0x4005839	      5690	mbyte.c	FUNCTION_120	CALL_10
0x4005839	              0x90	                                     nop	      5691	mbyte.c	FUNCTION_120
0x400583a	        0x4883c428	                           add rsp, 0x28	      5691	mbyte.c	FUNCTION_120
0x400583e	              0x5b	                                 pop rbx	      5691	mbyte.c	FUNCTION_120
0x400583f	              0x5d	                                 pop rbp	      5691	mbyte.c	FUNCTION_120
0x4005840	              0xc3	                                     ret	      5691	mbyte.c	FUNCTION_120
im_delete_preedit	CALL,4:IF,2:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,2	54
0x4004b3b	              0x55	                                push rbp	      5091	mbyte.c	FUNCTION_107
0x4004b3c	          0x4889e5	                            mov rbp, rsp	      5091	mbyte.c	FUNCTION_107
0x4004b3f	        0x4883ec20	                           sub rsp, 0x20	      5091	mbyte.c	FUNCTION_107
0x4004b43	    0x64488b042528	                mov rax, qword fs:[0x28]	      5091	mbyte.c	FUNCTION_107
0x4004b4c	        0x488945f8	                mov qword [rbp - 8], rax	      5091	mbyte.c	FUNCTION_107
0x4004b50	            0x31c0	                            xor eax, eax	      5091	mbyte.c	FUNCTION_107
0x4004b52	        0xc645e09b	            mov byte [rbp - 0x20], 0x9b 	      5092	mbyte.c	FUNCTION_107
0x4004b56	        0xc645e16b	            mov byte [rbp - 0x1f], 0x6b 	      5092	mbyte.c	FUNCTION_107
0x4004b5a	        0xc645e262	            mov byte [rbp - 0x1e], 0x62 	      5092	mbyte.c	FUNCTION_107
0x4004b5e	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      5093	mbyte.c	FUNCTION_107
0x4004b62	        0xc645f16b	              mov byte [rbp - 0xf], 0x6b	      5093	mbyte.c	FUNCTION_107
0x4004b66	        0xc645f244	              mov byte [rbp - 0xe], 0x44	      5093	mbyte.c	FUNCTION_107
0x4004b6a	    0x488b05000000	            mov rax, qword [0x04004b71] 	      5095	mbyte.c	FUNCTION_107	IF_1
0x4004b71	        0x4883f801	                              cmp rax, 1	      5095	mbyte.c	FUNCTION_107	IF_1
0x4004b75	            0x750c	                           jne 0x4004b83	      5095	mbyte.c	FUNCTION_107	IF_1
0x4004b77	      0xb800000000	                              mov eax, 0	      5097	mbyte.c	FUNCTION_107	IF_1	CALL_1
0x4004b7c	      0xe873ffffff	        call sym.im_preedit_window_close	      5097	mbyte.c	FUNCTION_107	IF_1	CALL_1
0x4004b81	            0xeb78	                           jmp 0x4004bfb	      5098	mbyte.c	FUNCTION_107	IF_1
0x4004b83	    0x8b0500000000	            mov eax, dword [0x04004b89] 	      5101	mbyte.c	FUNCTION_107	IF_2
0x4004b89	          0x83e001	                              and eax, 1	      5101	mbyte.c	FUNCTION_107	IF_2
0x4004b8c	            0x85c0	                           test eax, eax	      5101	mbyte.c	FUNCTION_107	IF_2
0x4004b8e	            0x7435	                            je 0x4004bc5	      5101	mbyte.c	FUNCTION_107	IF_2
0x4004b90	      0xe800000000	                          call 0x4004b95	      5103	mbyte.c	FUNCTION_107	IF_2	CALL_2
0x4004b95	            0x85c0	                           test eax, eax	      5103	mbyte.c	FUNCTION_107	IF_2	CALL_2
0x4004b97	            0x752c	                           jne 0x4004bc5	      5103	mbyte.c	FUNCTION_107	IF_2	CALL_2
0x4004b99	    0xc70500000000	               mov dword [0x04004ba3], 0	      5107	mbyte.c	FUNCTION_107	IF_2
0x4004ba3	            0xeb56	                           jmp 0x4004bfb	      5108	mbyte.c	FUNCTION_107	IF_2
0x4004ba5	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5111	mbyte.c	FUNCTION_107	CALL_3
0x4004ba9	      0xbe03000000	                              mov esi, 3	      5111	mbyte.c	FUNCTION_107	CALL_3
0x4004bae	          0x4889c7	                            mov rdi, rax	      5111	mbyte.c	FUNCTION_107	CALL_3
0x4004bb1	      0xe800000000	                          call 0x4004bb6	      5111	mbyte.c	FUNCTION_107	CALL_3
0x4004bb6	    0x8b0500000000	            mov eax, dword [0x04004bbc] 	      5110	mbyte.c	FUNCTION_107	FOR_1
0x4004bbc	          0x83e801	                              sub eax, 1	      5110	mbyte.c	FUNCTION_107	FOR_1
0x4004bbf	    0x890500000000	            mov dword [0x04004bc5], eax 	      5110	mbyte.c	FUNCTION_107	FOR_1
0x4004bc5	    0x8b0500000000	            mov eax, dword [0x04004bcb] 	      5110	mbyte.c	FUNCTION_107	FOR_1
0x4004bcb	            0x85c0	                           test eax, eax	      5110	mbyte.c	FUNCTION_107	FOR_1
0x4004bcd	            0x7fd6	                            jg 0x4004ba5	      5110	mbyte.c	FUNCTION_107	FOR_1
0x4004bcf	            0xeb20	                           jmp 0x4004bf1	      5113	mbyte.c	FUNCTION_107	FOR_2
0x4004bd1	        0x488d45f0	                   lea rax, [rbp - 0x10]	      5114	mbyte.c	FUNCTION_107	CALL_4
0x4004bd5	      0xbe03000000	                              mov esi, 3	      5114	mbyte.c	FUNCTION_107	CALL_4
0x4004bda	          0x4889c7	                            mov rdi, rax	      5114	mbyte.c	FUNCTION_107	CALL_4
0x4004bdd	      0xe800000000	                          call 0x4004be2	      5114	mbyte.c	FUNCTION_107	CALL_4
0x4004be2	    0x8b0500000000	            mov eax, dword [0x04004be8] 	      5113	mbyte.c	FUNCTION_107	FOR_2
0x4004be8	          0x83e801	                              sub eax, 1	      5113	mbyte.c	FUNCTION_107	FOR_2
0x4004beb	    0x890500000000	            mov dword [0x04004bf1], eax 	      5113	mbyte.c	FUNCTION_107	FOR_2
0x4004bf1	    0x8b0500000000	            mov eax, dword [0x04004bf7] 	      5113	mbyte.c	FUNCTION_107	FOR_2
0x4004bf7	            0x85c0	                           test eax, eax	      5113	mbyte.c	FUNCTION_107	FOR_2
0x4004bf9	            0x7fd6	                            jg 0x4004bd1	      5113	mbyte.c	FUNCTION_107	FOR_2
0x4004bfb	        0x488b45f8	                mov rax, qword [rbp - 8]	      5115	mbyte.c	FUNCTION_107
0x4004bff	    0x644833042528	                xor rax, qword fs:[0x28]	      5115	mbyte.c	FUNCTION_107
0x4004c08	            0x7405	                            je 0x4004c0f	      5115	mbyte.c	FUNCTION_107
0x4004c0a	      0xe800000000	                          call 0x4004c0f	      5115	mbyte.c	FUNCTION_107
0x4004c0f	              0xc9	                                   leave	      5115	mbyte.c	FUNCTION_107
0x4004c10	              0xc3	                                     ret	      5115	mbyte.c	FUNCTION_107
utf_char2bytes	CALL,0:IF,5:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	156
0x4001ea2	              0x55	                                push rbp	      2264	mbyte.c	FUNCTION_51
0x4001ea3	          0x4889e5	                            mov rbp, rsp	      2264	mbyte.c	FUNCTION_51
0x4001ea6	          0x897dfc	                mov dword [rbp - 4], edi	      2264	mbyte.c	FUNCTION_51
0x4001ea9	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2264	mbyte.c	FUNCTION_51
0x4001ead	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      2265	mbyte.c	FUNCTION_51	IF_1
0x4001eb1	            0x7f15	                            jg 0x4001ec8	      2265	mbyte.c	FUNCTION_51	IF_1
0x4001eb3	          0x8b45fc	                mov eax, dword [rbp - 4]	      2267	mbyte.c	FUNCTION_51	IF_1
0x4001eb6	            0x89c2	                            mov edx, eax	      2267	mbyte.c	FUNCTION_51	IF_1
0x4001eb8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2267	mbyte.c	FUNCTION_51	IF_1
0x4001ebc	            0x8810	                      mov byte [rax], dl	      2267	mbyte.c	FUNCTION_51	IF_1
0x4001ebe	      0xb801000000	                              mov eax, 1	      2268	mbyte.c	FUNCTION_51	IF_1
0x4001ec3	      0xe9d4010000	                           jmp 0x400209c	      2268	mbyte.c	FUNCTION_51	IF_1
0x4001ec8	    0x817dfcff0700	              cmp dword [rbp - 4], 0x7ff	      2270	mbyte.c	FUNCTION_51	IF_2
0x4001ecf	            0x7f2c	                            jg 0x4001efd	      2270	mbyte.c	FUNCTION_51	IF_2
0x4001ed1	          0x8b45fc	                mov eax, dword [rbp - 4]	      2272	mbyte.c	FUNCTION_51	IF_2
0x4001ed4	          0xc1e806	                              shr eax, 6	      2272	mbyte.c	FUNCTION_51	IF_2
0x4001ed7	          0x8d50c0	                   lea edx, [rax - 0x40]	      2272	mbyte.c	FUNCTION_51	IF_2
0x4001eda	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2272	mbyte.c	FUNCTION_51	IF_2
0x4001ede	            0x8810	                      mov byte [rax], dl	      2272	mbyte.c	FUNCTION_51	IF_2
0x4001ee0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2273	mbyte.c	FUNCTION_51	IF_2
0x4001ee4	        0x4883c001	                              add rax, 1	      2273	mbyte.c	FUNCTION_51	IF_2
0x4001ee8	          0x8b55fc	                mov edx, dword [rbp - 4]	      2273	mbyte.c	FUNCTION_51	IF_2
0x4001eeb	          0x83e23f	                           and edx, 0x3f	      2273	mbyte.c	FUNCTION_51	IF_2
0x4001eee	          0x83c280	             add edx, 0xffffffffffffff80	      2273	mbyte.c	FUNCTION_51	IF_2
0x4001ef1	            0x8810	                      mov byte [rax], dl	      2273	mbyte.c	FUNCTION_51	IF_2
0x4001ef3	      0xb802000000	                              mov eax, 2	      2274	mbyte.c	FUNCTION_51	IF_2
0x4001ef8	      0xe99f010000	                           jmp 0x400209c	      2274	mbyte.c	FUNCTION_51	IF_2
0x4001efd	    0x817dfcffff00	            cmp dword [rbp - 4], 0xffff 	      2276	mbyte.c	FUNCTION_51	IF_3
0x4001f04	            0x7f42	                            jg 0x4001f48	      2276	mbyte.c	FUNCTION_51	IF_3
0x4001f06	          0x8b45fc	                mov eax, dword [rbp - 4]	      2278	mbyte.c	FUNCTION_51	IF_3
0x4001f09	          0xc1e80c	                            shr eax, 0xc	      2278	mbyte.c	FUNCTION_51	IF_3
0x4001f0c	          0x8d50e0	                   lea edx, [rax - 0x20]	      2278	mbyte.c	FUNCTION_51	IF_3
0x4001f0f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2278	mbyte.c	FUNCTION_51	IF_3
0x4001f13	            0x8810	                      mov byte [rax], dl	      2278	mbyte.c	FUNCTION_51	IF_3
0x4001f15	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2279	mbyte.c	FUNCTION_51	IF_3
0x4001f19	        0x4883c001	                              add rax, 1	      2279	mbyte.c	FUNCTION_51	IF_3
0x4001f1d	          0x8b55fc	                mov edx, dword [rbp - 4]	      2279	mbyte.c	FUNCTION_51	IF_3
0x4001f20	          0xc1ea06	                              shr edx, 6	      2279	mbyte.c	FUNCTION_51	IF_3
0x4001f23	          0x83e23f	                           and edx, 0x3f	      2279	mbyte.c	FUNCTION_51	IF_3
0x4001f26	          0x83c280	             add edx, 0xffffffffffffff80	      2279	mbyte.c	FUNCTION_51	IF_3
0x4001f29	            0x8810	                      mov byte [rax], dl	      2279	mbyte.c	FUNCTION_51	IF_3
0x4001f2b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2280	mbyte.c	FUNCTION_51	IF_3
0x4001f2f	        0x4883c002	                              add rax, 2	      2280	mbyte.c	FUNCTION_51	IF_3
0x4001f33	          0x8b55fc	                mov edx, dword [rbp - 4]	      2280	mbyte.c	FUNCTION_51	IF_3
0x4001f36	          0x83e23f	                           and edx, 0x3f	      2280	mbyte.c	FUNCTION_51	IF_3
0x4001f39	          0x83c280	             add edx, 0xffffffffffffff80	      2280	mbyte.c	FUNCTION_51	IF_3
0x4001f3c	            0x8810	                      mov byte [rax], dl	      2280	mbyte.c	FUNCTION_51	IF_3
0x4001f3e	      0xb803000000	                              mov eax, 3	      2281	mbyte.c	FUNCTION_51	IF_3
0x4001f43	      0xe954010000	                           jmp 0x400209c	      2281	mbyte.c	FUNCTION_51	IF_3
0x4001f48	    0x817dfcffff1f	          cmp dword [rbp - 4], 0x1fffff 	      2283	mbyte.c	FUNCTION_51	IF_4
0x4001f4f	            0x7f58	                            jg 0x4001fa9	      2283	mbyte.c	FUNCTION_51	IF_4
0x4001f51	          0x8b45fc	                mov eax, dword [rbp - 4]	      2285	mbyte.c	FUNCTION_51	IF_4
0x4001f54	          0xc1e812	                           shr eax, 0x12	      2285	mbyte.c	FUNCTION_51	IF_4
0x4001f57	          0x8d50f0	                   lea edx, [rax - 0x10]	      2285	mbyte.c	FUNCTION_51	IF_4
0x4001f5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2285	mbyte.c	FUNCTION_51	IF_4
0x4001f5e	            0x8810	                      mov byte [rax], dl	      2285	mbyte.c	FUNCTION_51	IF_4
0x4001f60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2286	mbyte.c	FUNCTION_51	IF_4
0x4001f64	        0x4883c001	                              add rax, 1	      2286	mbyte.c	FUNCTION_51	IF_4
0x4001f68	          0x8b55fc	                mov edx, dword [rbp - 4]	      2286	mbyte.c	FUNCTION_51	IF_4
0x4001f6b	          0xc1ea0c	                            shr edx, 0xc	      2286	mbyte.c	FUNCTION_51	IF_4
0x4001f6e	          0x83e23f	                           and edx, 0x3f	      2286	mbyte.c	FUNCTION_51	IF_4
0x4001f71	          0x83c280	             add edx, 0xffffffffffffff80	      2286	mbyte.c	FUNCTION_51	IF_4
0x4001f74	            0x8810	                      mov byte [rax], dl	      2286	mbyte.c	FUNCTION_51	IF_4
0x4001f76	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2287	mbyte.c	FUNCTION_51	IF_4
0x4001f7a	        0x4883c002	                              add rax, 2	      2287	mbyte.c	FUNCTION_51	IF_4
0x4001f7e	          0x8b55fc	                mov edx, dword [rbp - 4]	      2287	mbyte.c	FUNCTION_51	IF_4
0x4001f81	          0xc1ea06	                              shr edx, 6	      2287	mbyte.c	FUNCTION_51	IF_4
0x4001f84	          0x83e23f	                           and edx, 0x3f	      2287	mbyte.c	FUNCTION_51	IF_4
0x4001f87	          0x83c280	             add edx, 0xffffffffffffff80	      2287	mbyte.c	FUNCTION_51	IF_4
0x4001f8a	            0x8810	                      mov byte [rax], dl	      2287	mbyte.c	FUNCTION_51	IF_4
0x4001f8c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2288	mbyte.c	FUNCTION_51	IF_4
0x4001f90	        0x4883c003	                              add rax, 3	      2288	mbyte.c	FUNCTION_51	IF_4
0x4001f94	          0x8b55fc	                mov edx, dword [rbp - 4]	      2288	mbyte.c	FUNCTION_51	IF_4
0x4001f97	          0x83e23f	                           and edx, 0x3f	      2288	mbyte.c	FUNCTION_51	IF_4
0x4001f9a	          0x83c280	             add edx, 0xffffffffffffff80	      2288	mbyte.c	FUNCTION_51	IF_4
0x4001f9d	            0x8810	                      mov byte [rax], dl	      2288	mbyte.c	FUNCTION_51	IF_4
0x4001f9f	      0xb804000000	                              mov eax, 4	      2289	mbyte.c	FUNCTION_51	IF_4
0x4001fa4	      0xe9f3000000	                           jmp 0x400209c	      2289	mbyte.c	FUNCTION_51	IF_4
0x4001fa9	    0x817dfcffffff	         cmp dword [rbp - 4], 0x3ffffff 	      2291	mbyte.c	FUNCTION_51	IF_5
0x4001fb0	            0x7f6b	                            jg 0x400201d	      2291	mbyte.c	FUNCTION_51	IF_5
0x4001fb2	          0x8b45fc	                mov eax, dword [rbp - 4]	      2293	mbyte.c	FUNCTION_51	IF_5
0x4001fb5	          0xc1e818	                           shr eax, 0x18	      2293	mbyte.c	FUNCTION_51	IF_5
0x4001fb8	          0x8d50f8	                      lea edx, [rax - 8]	      2293	mbyte.c	FUNCTION_51	IF_5
0x4001fbb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2293	mbyte.c	FUNCTION_51	IF_5
0x4001fbf	            0x8810	                      mov byte [rax], dl	      2293	mbyte.c	FUNCTION_51	IF_5
0x4001fc1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2294	mbyte.c	FUNCTION_51	IF_5
0x4001fc5	        0x4883c001	                              add rax, 1	      2294	mbyte.c	FUNCTION_51	IF_5
0x4001fc9	          0x8b55fc	                mov edx, dword [rbp - 4]	      2294	mbyte.c	FUNCTION_51	IF_5
0x4001fcc	          0xc1ea12	                           shr edx, 0x12	      2294	mbyte.c	FUNCTION_51	IF_5
0x4001fcf	          0x83e23f	                           and edx, 0x3f	      2294	mbyte.c	FUNCTION_51	IF_5
0x4001fd2	          0x83c280	             add edx, 0xffffffffffffff80	      2294	mbyte.c	FUNCTION_51	IF_5
0x4001fd5	            0x8810	                      mov byte [rax], dl	      2294	mbyte.c	FUNCTION_51	IF_5
0x4001fd7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2295	mbyte.c	FUNCTION_51	IF_5
0x4001fdb	        0x4883c002	                              add rax, 2	      2295	mbyte.c	FUNCTION_51	IF_5
0x4001fdf	          0x8b55fc	                mov edx, dword [rbp - 4]	      2295	mbyte.c	FUNCTION_51	IF_5
0x4001fe2	          0xc1ea0c	                            shr edx, 0xc	      2295	mbyte.c	FUNCTION_51	IF_5
0x4001fe5	          0x83e23f	                           and edx, 0x3f	      2295	mbyte.c	FUNCTION_51	IF_5
0x4001fe8	          0x83c280	             add edx, 0xffffffffffffff80	      2295	mbyte.c	FUNCTION_51	IF_5
0x4001feb	            0x8810	                      mov byte [rax], dl	      2295	mbyte.c	FUNCTION_51	IF_5
0x4001fed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2296	mbyte.c	FUNCTION_51	IF_5
0x4001ff1	        0x4883c003	                              add rax, 3	      2296	mbyte.c	FUNCTION_51	IF_5
0x4001ff5	          0x8b55fc	                mov edx, dword [rbp - 4]	      2296	mbyte.c	FUNCTION_51	IF_5
0x4001ff8	          0xc1ea06	                              shr edx, 6	      2296	mbyte.c	FUNCTION_51	IF_5
0x4001ffb	          0x83e23f	                           and edx, 0x3f	      2296	mbyte.c	FUNCTION_51	IF_5
0x4001ffe	          0x83c280	             add edx, 0xffffffffffffff80	      2296	mbyte.c	FUNCTION_51	IF_5
0x4002001	            0x8810	                      mov byte [rax], dl	      2296	mbyte.c	FUNCTION_51	IF_5
0x4002003	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2297	mbyte.c	FUNCTION_51	IF_5
0x4002007	        0x4883c004	                              add rax, 4	      2297	mbyte.c	FUNCTION_51	IF_5
0x400200b	          0x8b55fc	                mov edx, dword [rbp - 4]	      2297	mbyte.c	FUNCTION_51	IF_5
0x400200e	          0x83e23f	                           and edx, 0x3f	      2297	mbyte.c	FUNCTION_51	IF_5
0x4002011	          0x83c280	             add edx, 0xffffffffffffff80	      2297	mbyte.c	FUNCTION_51	IF_5
0x4002014	            0x8810	                      mov byte [rax], dl	      2297	mbyte.c	FUNCTION_51	IF_5
0x4002016	      0xb805000000	                              mov eax, 5	      2298	mbyte.c	FUNCTION_51	IF_5
0x400201b	            0xeb7f	                           jmp 0x400209c	      2298	mbyte.c	FUNCTION_51	IF_5
0x400201d	          0x8b45fc	                mov eax, dword [rbp - 4]	      2301	mbyte.c	FUNCTION_51
0x4002020	          0xc1e81e	                           shr eax, 0x1e	      2301	mbyte.c	FUNCTION_51
0x4002023	          0x8d50fc	                      lea edx, [rax - 4]	      2301	mbyte.c	FUNCTION_51
0x4002026	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2301	mbyte.c	FUNCTION_51
0x400202a	            0x8810	                      mov byte [rax], dl	      2301	mbyte.c	FUNCTION_51
0x400202c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2302	mbyte.c	FUNCTION_51
0x4002030	        0x4883c001	                              add rax, 1	      2302	mbyte.c	FUNCTION_51
0x4002034	          0x8b55fc	                mov edx, dword [rbp - 4]	      2302	mbyte.c	FUNCTION_51
0x4002037	          0xc1ea18	                           shr edx, 0x18	      2302	mbyte.c	FUNCTION_51
0x400203a	          0x83e23f	                           and edx, 0x3f	      2302	mbyte.c	FUNCTION_51
0x400203d	          0x83c280	             add edx, 0xffffffffffffff80	      2302	mbyte.c	FUNCTION_51
0x4002040	            0x8810	                      mov byte [rax], dl	      2302	mbyte.c	FUNCTION_51
0x4002042	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2303	mbyte.c	FUNCTION_51
0x4002046	        0x4883c002	                              add rax, 2	      2303	mbyte.c	FUNCTION_51
0x400204a	          0x8b55fc	                mov edx, dword [rbp - 4]	      2303	mbyte.c	FUNCTION_51
0x400204d	          0xc1ea12	                           shr edx, 0x12	      2303	mbyte.c	FUNCTION_51
0x4002050	          0x83e23f	                           and edx, 0x3f	      2303	mbyte.c	FUNCTION_51
0x4002053	          0x83c280	             add edx, 0xffffffffffffff80	      2303	mbyte.c	FUNCTION_51
0x4002056	            0x8810	                      mov byte [rax], dl	      2303	mbyte.c	FUNCTION_51
0x4002058	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2304	mbyte.c	FUNCTION_51
0x400205c	        0x4883c003	                              add rax, 3	      2304	mbyte.c	FUNCTION_51
0x4002060	          0x8b55fc	                mov edx, dword [rbp - 4]	      2304	mbyte.c	FUNCTION_51
0x4002063	          0xc1ea0c	                            shr edx, 0xc	      2304	mbyte.c	FUNCTION_51
0x4002066	          0x83e23f	                           and edx, 0x3f	      2304	mbyte.c	FUNCTION_51
0x4002069	          0x83c280	             add edx, 0xffffffffffffff80	      2304	mbyte.c	FUNCTION_51
0x400206c	            0x8810	                      mov byte [rax], dl	      2304	mbyte.c	FUNCTION_51
0x400206e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2305	mbyte.c	FUNCTION_51
0x4002072	        0x4883c004	                              add rax, 4	      2305	mbyte.c	FUNCTION_51
0x4002076	          0x8b55fc	                mov edx, dword [rbp - 4]	      2305	mbyte.c	FUNCTION_51
0x4002079	          0xc1ea06	                              shr edx, 6	      2305	mbyte.c	FUNCTION_51
0x400207c	          0x83e23f	                           and edx, 0x3f	      2305	mbyte.c	FUNCTION_51
0x400207f	          0x83c280	             add edx, 0xffffffffffffff80	      2305	mbyte.c	FUNCTION_51
0x4002082	            0x8810	                      mov byte [rax], dl	      2305	mbyte.c	FUNCTION_51
0x4002084	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2306	mbyte.c	FUNCTION_51
0x4002088	        0x4883c005	                              add rax, 5	      2306	mbyte.c	FUNCTION_51
0x400208c	          0x8b55fc	                mov edx, dword [rbp - 4]	      2306	mbyte.c	FUNCTION_51
0x400208f	          0x83e23f	                           and edx, 0x3f	      2306	mbyte.c	FUNCTION_51
0x4002092	          0x83c280	             add edx, 0xffffffffffffff80	      2306	mbyte.c	FUNCTION_51
0x4002095	            0x8810	                      mov byte [rax], dl	      2306	mbyte.c	FUNCTION_51
0x4002097	      0xb806000000	                              mov eax, 6	      2307	mbyte.c	FUNCTION_51
0x400209c	              0x5d	                                 pop rbp	      2308	mbyte.c	FUNCTION_51
0x400209d	              0xc3	                                     ret	      2308	mbyte.c	FUNCTION_51
iconv_string	CALL,6:IF,11:ELSE,3:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	202
0x40040c6	              0x55	                                push rbp	      4588	mbyte.c	FUNCTION_92
0x40040c7	          0x4889e5	                            mov rbp, rsp	      4588	mbyte.c	FUNCTION_92
0x40040ca	        0x4883c480	             add rsp, 0xffffffffffffff80	      4588	mbyte.c	FUNCTION_92
0x40040ce	        0x48897da8	             mov qword [rbp - 0x58], rdi	      4588	mbyte.c	FUNCTION_92
0x40040d2	        0x488975a0	             mov qword [rbp - 0x60], rsi	      4588	mbyte.c	FUNCTION_92
0x40040d6	          0x89559c	             mov dword [rbp - 0x64], edx	      4588	mbyte.c	FUNCTION_92
0x40040d9	        0x48894d90	             mov qword [rbp - 0x70], rcx	      4588	mbyte.c	FUNCTION_92
0x40040dd	        0x4c894588	              mov qword [rbp - 0x78], r8	      4588	mbyte.c	FUNCTION_92
0x40040e1	    0x64488b042528	                mov rax, qword fs:[0x28]	      4588	mbyte.c	FUNCTION_92
0x40040ea	        0x488945f8	                mov qword [rbp - 8], rax	      4588	mbyte.c	FUNCTION_92
0x40040ee	            0x31c0	                            xor eax, eax	      4588	mbyte.c	FUNCTION_92
0x40040f0	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      4593	mbyte.c	FUNCTION_92
0x40040f8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4594	mbyte.c	FUNCTION_92
0x4004100	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4595	mbyte.c	FUNCTION_92
0x4004108	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4599	mbyte.c	FUNCTION_92
0x400410c	        0x488945b8	             mov qword [rbp - 0x48], rax	      4599	mbyte.c	FUNCTION_92
0x4004110	          0x8b459c	             mov eax, dword [rbp - 0x64]	      4600	mbyte.c	FUNCTION_92
0x4004113	            0x4898	                                    cdqe	      4600	mbyte.c	FUNCTION_92
0x4004115	        0x488945c0	             mov qword [rbp - 0x40], rax	      4600	mbyte.c	FUNCTION_92
0x4004119	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x400411e	            0x740c	                            je 0x400412c	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4004120	      0xe800000000	                          call 0x4004125	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4004125	            0x8b00	                    mov eax, dword [rax]	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4004127	          0x83f807	                              cmp eax, 7	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x400412a	            0x756a	                           jne 0x4004196	      4603	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x400412c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4004130	        0x488d1400	                    lea rdx, [rax + rax]	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4004134	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4004138	          0x4801d0	                            add rax, rdx	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x400413b	        0x4883c028	                           add rax, 0x28	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x400413f	        0x488945d8	             mov qword [rbp - 0x28], rax	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4004143	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x4004147	            0x89c7	                            mov edi, eax	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x4004149	      0xe800000000	                          call 0x400414e	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x400414e	        0x488945f0	             mov qword [rbp - 0x10], rax	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x4004152	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4004157	            0x741e	                            je 0x4004177	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4004159	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400415e	            0x7417	                            je 0x4004177	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4004160	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4610	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x4004164	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      4610	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x4004168	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4610	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x400416c	          0x4889ce	                            mov rsi, rcx	      4610	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x400416f	          0x4889c7	                            mov rdi, rax	      4610	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x4004172	      0xe800000000	                          call 0x4004177	      4610	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x4004177	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400417b	          0x4889c7	                            mov rdi, rax	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400417e	      0xe800000000	                          call 0x4004183	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4004183	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4612	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x4004187	        0x488945e8	             mov qword [rbp - 0x18], rax	      4612	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x400418b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x4004190	     0xf84ba010000	                            je 0x4004350	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x4004196	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4617	mbyte.c	FUNCTION_92	FOR_1
0x400419a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4617	mbyte.c	FUNCTION_92	FOR_1
0x400419e	          0x4801d0	                            add rax, rdx	      4617	mbyte.c	FUNCTION_92	FOR_1
0x40041a1	        0x488945c8	             mov qword [rbp - 0x38], rax	      4617	mbyte.c	FUNCTION_92	FOR_1
0x40041a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4618	mbyte.c	FUNCTION_92	FOR_1
0x40041a9	        0x482b45e0	             sub rax, qword [rbp - 0x20]	      4618	mbyte.c	FUNCTION_92	FOR_1
0x40041ad	        0x4883e802	                              sub rax, 2	      4618	mbyte.c	FUNCTION_92	FOR_1
0x40041b1	        0x488945d0	             mov qword [rbp - 0x30], rax	      4618	mbyte.c	FUNCTION_92	FOR_1
0x40041b5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40041b9	        0x488b4008	                mov rax, qword [rax + 8]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40041bd	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40041c1	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40041c5	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40041c9	        0x488d75b8	                   lea rsi, [rbp - 0x48]	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40041cd	          0x4989f8	                             mov r8, rdi	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40041d0	          0x4889c7	                            mov rdi, rax	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40041d3	      0xe800000000	                          call 0x40041d8	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40041d8	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40041dc	            0x740c	                            je 0x40041ea	      4621	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x40041de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4625	mbyte.c	FUNCTION_92	FOR_1	IF_4
0x40041e2	          0xc60000	                       mov byte [rax], 0	      4625	mbyte.c	FUNCTION_92	FOR_1	IF_4
0x40041e5	      0xe96a010000	                           jmp 0x4004354	      4626	mbyte.c	FUNCTION_92	FOR_1	IF_4
0x40041ea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40041ee	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40041f1	            0x85c0	                           test eax, eax	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40041f3	            0x7537	                           jne 0x400422c	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40041f5	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40041fa	            0x7430	                            je 0x400422c	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x40041fc	      0xe800000000	                          call 0x4004201	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004201	            0x8b00	                    mov eax, dword [rax]	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004203	          0x83f816	                           cmp eax, 0x16	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004206	            0x740c	                            je 0x4004214	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004208	      0xe800000000	                          call 0x400420d	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x400420d	            0x8b00	                    mov eax, dword [rax]	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x400420f	          0x83f816	                           cmp eax, 0x16	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004212	            0x7518	                           jne 0x400422c	      4632	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004214	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4635	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004218	          0xc60000	                       mov byte [rax], 0	      4635	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x400421b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x400421f	            0x89c2	                            mov edx, eax	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004221	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004225	            0x8910	                    mov dword [rax], edx	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4004227	      0xe928010000	                           jmp 0x4004354	      4637	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x400422c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004230	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004233	            0x85c0	                           test eax, eax	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004235	     0xf85d2000000	                           jne 0x400430d	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400423b	      0xe800000000	                          call 0x4004240	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004240	            0x8b00	                    mov eax, dword [rax]	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004242	          0x83f854	                           cmp eax, 0x54	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004245	            0x7428	                            je 0x400426f	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004247	      0xe800000000	                          call 0x400424c	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400424c	            0x8b00	                    mov eax, dword [rax]	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400424e	          0x83f854	                           cmp eax, 0x54	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004251	            0x741c	                            je 0x400426f	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004253	      0xe800000000	                          call 0x4004258	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004258	            0x8b00	                    mov eax, dword [rax]	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400425a	          0x83f816	                           cmp eax, 0x16	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400425d	            0x7410	                            je 0x400426f	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400425f	      0xe800000000	                          call 0x4004264	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004264	            0x8b00	                    mov eax, dword [rax]	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004266	          0x83f816	                           cmp eax, 0x16	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004269	     0xf859e000000	                           jne 0x400430d	      4644	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400426f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004273	        0x488d5001	                      lea rdx, [rax + 1]	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004277	        0x488955c8	             mov qword [rbp - 0x38], rdx	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400427b	          0xc6003f	                    mov byte [rax], 0x3f	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400427e	    0x488b05000000	            mov rax, qword [0x04004285] 	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4004285	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4004289	          0x4889d7	                            mov rdi, rdx	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x400428c	            0xffd0	                                call rax	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x400428e	          0x83f801	                              cmp eax, 1	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4004291	            0x7e0f	                           jle 0x40042a2	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4004293	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x4004297	        0x488d5001	                      lea rdx, [rax + 1]	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x400429b	        0x488955c8	             mov qword [rbp - 0x38], rdx	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x400429f	          0xc6003f	                    mov byte [rax], 0x3f	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x40042a2	    0x8b0500000000	            mov eax, dword [0x040042a8] 	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_8
0x40042a8	            0x85c0	                           test eax, eax	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_8
0x40042aa	            0x7419	                            je 0x40042c5	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_8
0x40042ac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40042b0	            0x89c2	                            mov edx, eax	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40042b2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40042b6	            0x89d6	                            mov esi, edx	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40042b8	          0x4889c7	                            mov rdi, rax	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40042bb	      0xe800000000	                          call 0x40042c0	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40042c0	          0x8945b4	             mov dword [rbp - 0x4c], eax	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40042c3	            0xeb23	                           jmp 0x40042e8	      4653	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40042c5	    0x488b05000000	            mov rax, qword [0x040042cc] 	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x40042cc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x40042d0	          0x4889d7	                            mov rdi, rdx	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x40042d3	            0xffd0	                                call rax	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x40042d5	          0x8945b4	             mov dword [rbp - 0x4c], eax	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x40042d8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x40042dc	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x40042df	            0x7d07	                           jge 0x40042e8	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x40042e1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4658	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x40042e5	          0x8945b4	             mov dword [rbp - 0x4c], eax	      4658	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x40042e8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40042ec	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40042ef	            0x4898	                                    cdqe	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40042f1	          0x4801d0	                            add rax, rdx	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40042f4	        0x488945b8	             mov qword [rbp - 0x48], rax	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40042f8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40042fc	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x40042ff	            0x4898	                                    cdqe	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004301	          0x4829c2	                            sub rdx, rax	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004304	          0x4889d0	                            mov rax, rdx	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4004307	        0x488945c0	             mov qword [rbp - 0x40], rax	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400430b	            0xeb29	                           jmp 0x4004336	      4661	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x400430d	      0xe800000000	                          call 0x4004312	      4663	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4004312	            0x8b00	                    mov eax, dword [rax]	      4663	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4004314	          0x83f807	                              cmp eax, 7	      4663	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4004317	            0x741d	                            je 0x4004336	      4663	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4004319	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x400431e	            0x7433	                            je 0x4004353	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4004320	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4004324	          0x4889c7	                            mov rdi, rax	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4004327	      0xe800000000	                          call 0x400432c	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x400432c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4004334	            0xeb1d	                           jmp 0x4004353	      4667	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4004336	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4670	mbyte.c	FUNCTION_92	FOR_1
0x400433a	          0x4889c2	                            mov rdx, rax	      4670	mbyte.c	FUNCTION_92	FOR_1
0x400433d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4670	mbyte.c	FUNCTION_92	FOR_1
0x4004341	          0x4829c2	                            sub rdx, rax	      4670	mbyte.c	FUNCTION_92	FOR_1
0x4004344	          0x4889d0	                            mov rax, rdx	      4670	mbyte.c	FUNCTION_92	FOR_1
0x4004347	        0x488945e0	             mov qword [rbp - 0x20], rax	      4670	mbyte.c	FUNCTION_92	FOR_1
0x400434b	      0xe9c9fdffff	                           jmp 0x4004119	      4671	mbyte.c	FUNCTION_92	FOR_1
0x4004350	              0x90	                                     nop	      4614	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x4004351	            0xeb01	                           jmp 0x4004354	      4614	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x4004353	              0x90	                                     nop	      4667	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4004354	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4673	mbyte.c	FUNCTION_92	IF_11
0x4004359	            0x7420	                            je 0x400437b	      4673	mbyte.c	FUNCTION_92	IF_11
0x400435b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4673	mbyte.c	FUNCTION_92	IF_11
0x4004360	            0x7419	                            je 0x400437b	      4673	mbyte.c	FUNCTION_92	IF_11
0x4004362	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004366	          0x4889c2	                            mov rdx, rax	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004369	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4674	mbyte.c	FUNCTION_92	IF_11
0x400436d	          0x4829c2	                            sub rdx, rax	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004370	          0x4889d0	                            mov rax, rdx	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004373	            0x89c2	                            mov edx, eax	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004375	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4674	mbyte.c	FUNCTION_92	IF_11
0x4004379	            0x8910	                    mov dword [rax], edx	      4674	mbyte.c	FUNCTION_92	IF_11
0x400437b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4675	mbyte.c	FUNCTION_92
0x400437f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4676	mbyte.c	FUNCTION_92
0x4004383	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4676	mbyte.c	FUNCTION_92
0x400438c	            0x7405	                            je 0x4004393	      4676	mbyte.c	FUNCTION_92
0x400438e	      0xe800000000	                          call 0x4004393	      4676	mbyte.c	FUNCTION_92
0x4004393	              0xc9	                                   leave	      4676	mbyte.c	FUNCTION_92
0x4004394	              0xc3	                                     ret	      4676	mbyte.c	FUNCTION_92
utf_off2cells	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	21
0x40011e6	              0x55	                                push rbp	      1759	mbyte.c	FUNCTION_32
0x40011e7	          0x4889e5	                            mov rbp, rsp	      1759	mbyte.c	FUNCTION_32
0x40011ea	          0x897dfc	                mov dword [rbp - 4], edi	      1759	mbyte.c	FUNCTION_32
0x40011ed	          0x8975f8	                mov dword [rbp - 8], esi	      1759	mbyte.c	FUNCTION_32
0x40011f0	          0x8b45fc	                mov eax, dword [rbp - 4]	      1760	mbyte.c	FUNCTION_32
0x40011f3	          0x83c001	                              add eax, 1	      1760	mbyte.c	FUNCTION_32
0x40011f6	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1760	mbyte.c	FUNCTION_32
0x40011f9	            0x7320	                           jae 0x400121b	      1760	mbyte.c	FUNCTION_32
0x40011fb	    0x488b05000000	            mov rax, qword [0x04001202] 	      1760	mbyte.c	FUNCTION_32
0x4001202	          0x8b55fc	                mov edx, dword [rbp - 4]	      1760	mbyte.c	FUNCTION_32
0x4001205	          0x83c201	                              add edx, 1	      1760	mbyte.c	FUNCTION_32
0x4001208	            0x89d2	                            mov edx, edx	      1760	mbyte.c	FUNCTION_32
0x400120a	          0x4801d0	                            add rax, rdx	      1760	mbyte.c	FUNCTION_32
0x400120d	           0xfb600	                   movzx eax, byte [rax]	      1760	mbyte.c	FUNCTION_32
0x4001210	            0x84c0	                             test al, al	      1760	mbyte.c	FUNCTION_32
0x4001212	            0x7507	                           jne 0x400121b	      1760	mbyte.c	FUNCTION_32
0x4001214	      0xb802000000	                              mov eax, 2	      1760	mbyte.c	FUNCTION_32
0x4001219	            0xeb05	                           jmp 0x4001220	      1760	mbyte.c	FUNCTION_32
0x400121b	      0xb801000000	                              mov eax, 1	      1760	mbyte.c	FUNCTION_32
0x4001220	              0x5d	                                 pop rbp	      1761	mbyte.c	FUNCTION_32
0x4001221	              0xc3	                                     ret	      1761	mbyte.c	FUNCTION_32
utf_isupper	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	12
0x4002515	              0x55	                                push rbp	      3578	mbyte.c	FUNCTION_63
0x4002516	          0x4889e5	                            mov rbp, rsp	      3578	mbyte.c	FUNCTION_63
0x4002519	        0x4883ec10	                           sub rsp, 0x10	      3578	mbyte.c	FUNCTION_63
0x400251d	          0x897dfc	                mov dword [rbp - 4], edi	      3578	mbyte.c	FUNCTION_63
0x4002520	          0x8b45fc	                mov eax, dword [rbp - 4]	      3579	mbyte.c	FUNCTION_63	CALL_1
0x4002523	            0x89c7	                            mov edi, eax	      3579	mbyte.c	FUNCTION_63	CALL_1
0x4002525	      0xe800000000	                          call 0x400252a	      3579	mbyte.c	FUNCTION_63	CALL_1
0x400252a	          0x3b45fc	                cmp eax, dword [rbp - 4]	      3579	mbyte.c	FUNCTION_63	CALL_1
0x400252d	           0xf95c0	                                setne al	      3579	mbyte.c	FUNCTION_63	CALL_1
0x4002530	           0xfb6c0	                           movzx eax, al	      3579	mbyte.c	FUNCTION_63	CALL_1
0x4002533	              0xc9	                                   leave	      3580	mbyte.c	FUNCTION_63
0x4002534	              0xc3	                                     ret	      3580	mbyte.c	FUNCTION_63
im_shutdown	CALL,3:IF,2:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	22
0x4005583	              0x55	                                push rbp	      5569	mbyte.c	FUNCTION_117
0x4005584	          0x4889e5	                            mov rbp, rsp	      5569	mbyte.c	FUNCTION_117
0x4005587	    0x488b05000000	            mov rax, qword [0x0400558e] 	      5574	mbyte.c	FUNCTION_117	IF_1
0x400558e	          0x4885c0	                           test rax, rax	      5574	mbyte.c	FUNCTION_117	IF_1
0x4005591	            0x7429	                            je 0x40055bc	      5574	mbyte.c	FUNCTION_117	IF_1
0x4005593	    0x488b05000000	            mov rax, qword [0x0400559a] 	      5576	mbyte.c	FUNCTION_117	IF_1	CALL_2
0x400559a	          0x4889c7	                            mov rdi, rax	      5576	mbyte.c	FUNCTION_117	IF_1	CALL_2
0x400559d	      0xe800000000	                          call 0x40055a2	      5576	mbyte.c	FUNCTION_117	IF_1	CALL_2
0x40055a2	    0x488b05000000	            mov rax, qword [0x040055a9] 	      5577	mbyte.c	FUNCTION_117	IF_1	CALL_3
0x40055a9	          0x4889c7	                            mov rdi, rax	      5577	mbyte.c	FUNCTION_117	IF_1	CALL_3
0x40055ac	      0xe800000000	                          call 0x40055b1	      5577	mbyte.c	FUNCTION_117	IF_1	CALL_3
0x40055b1	    0x48c705000000	               mov qword [0x040055bc], 0	      5578	mbyte.c	FUNCTION_117	IF_1
0x40055bc	    0xc70500000000	               mov dword [0x040055c6], 0	      5580	mbyte.c	FUNCTION_117
0x40055c6	    0x48c705000000	               mov qword [0x040055d1], 0	      5581	mbyte.c	FUNCTION_117
0x40055d1	    0x488b05000000	            mov rax, qword [0x040055d8] 	      5582	mbyte.c	FUNCTION_117	IF_2
0x40055d8	          0x4885c0	                           test rax, rax	      5582	mbyte.c	FUNCTION_117	IF_2
0x40055db	            0x750a	                           jne 0x40055e7	      5582	mbyte.c	FUNCTION_117	IF_2
0x40055dd	    0xc70500000000	     mov dword [0x040055e7], 0x7fffffff 	      5583	mbyte.c	FUNCTION_117	IF_2
0x40055e7	    0xc70500000000	               mov dword [0x040055f1], 0	      5584	mbyte.c	FUNCTION_117
0x40055f1	              0x90	                                     nop	      5585	mbyte.c	FUNCTION_117
0x40055f2	              0x5d	                                 pop rbp	      5585	mbyte.c	FUNCTION_117
0x40055f3	              0xc3	                                     ret	      5585	mbyte.c	FUNCTION_117
utf_class	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	11
0x40020ff	              0x55	                                push rbp	      2781	mbyte.c	FUNCTION_55
0x4002100	          0x4889e5	                            mov rbp, rsp	      2781	mbyte.c	FUNCTION_55
0x4002103	        0x4883ec10	                           sub rsp, 0x10	      2781	mbyte.c	FUNCTION_55
0x4002107	          0x897dfc	                mov dword [rbp - 4], edi	      2781	mbyte.c	FUNCTION_55
0x400210a	    0x488b15000000	            mov rdx, qword [0x04002111] 	      2782	mbyte.c	FUNCTION_55	CALL_1
0x4002111	          0x8b45fc	                mov eax, dword [rbp - 4]	      2782	mbyte.c	FUNCTION_55	CALL_1
0x4002114	          0x4889d6	                            mov rsi, rdx	      2782	mbyte.c	FUNCTION_55	CALL_1
0x4002117	            0x89c7	                            mov edi, eax	      2782	mbyte.c	FUNCTION_55	CALL_1
0x4002119	      0xe800000000	                          call 0x400211e	      2782	mbyte.c	FUNCTION_55	CALL_1
0x400211e	              0xc9	                                   leave	      2783	mbyte.c	FUNCTION_55
0x400211f	              0xc3	                                     ret	      2783	mbyte.c	FUNCTION_55
enc_alias_search	CALL,1:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	34
0x4003c23	              0x55	                                push rbp	      4379	mbyte.c	FUNCTION_87
0x4003c24	          0x4889e5	                            mov rbp, rsp	      4379	mbyte.c	FUNCTION_87
0x4003c27	        0x4883ec20	                           sub rsp, 0x20	      4379	mbyte.c	FUNCTION_87
0x4003c2b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4379	mbyte.c	FUNCTION_87
0x4003c2f	    0xc745fc000000	                  mov dword [rbp - 4], 0	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4003c36	            0xeb3c	                           jmp 0x4003c74	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4003c38	          0x8b45fc	                mov eax, dword [rbp - 4]	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x4003c3b	            0x4898	                                    cdqe	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x4003c3d	        0x48c1e004	                              shl rax, 4	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x4003c41	    0x480500000000	                              add rax, 0	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x4003c47	          0x488b10	                    mov rdx, qword [rax]	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x4003c4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x4003c4e	          0x4889d6	                            mov rsi, rdx	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x4003c51	          0x4889c7	                            mov rdi, rax	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x4003c54	      0xe800000000	                          call 0x4003c59	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x4003c59	            0x85c0	                           test eax, eax	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x4003c5b	            0x7513	                           jne 0x4003c70	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x4003c5d	          0x8b45fc	                mov eax, dword [rbp - 4]	      4384	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x4003c60	            0x4898	                                    cdqe	      4384	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x4003c62	        0x48c1e004	                              shl rax, 4	      4384	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x4003c66	    0x480500000000	                              add rax, 0	      4384	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x4003c6c	            0x8b00	                    mov eax, dword [rax]	      4384	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x4003c6e	            0xeb20	                           jmp 0x4003c90	      4384	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x4003c70	        0x8345fc01	                  add dword [rbp - 4], 1	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4003c74	          0x8b45fc	                mov eax, dword [rbp - 4]	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4003c77	            0x4898	                                    cdqe	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4003c79	        0x48c1e004	                              shl rax, 4	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4003c7d	    0x480500000000	                              add rax, 0	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4003c83	          0x488b00	                    mov rax, qword [rax]	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4003c86	          0x4885c0	                           test rax, rax	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4003c89	            0x75ad	                           jne 0x4003c38	      4382	mbyte.c	FUNCTION_87	FOR_1
0x4003c8b	      0xb8ffffffff	                     mov eax, 0xffffffff	      4385	mbyte.c	FUNCTION_87
0x4003c90	              0xc9	                                   leave	      4386	mbyte.c	FUNCTION_87
0x4003c91	              0xc3	                                     ret	      4386	mbyte.c	FUNCTION_87
utfc_char2bytes	CALL,2:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	54
0x4001a94	              0x55	                                push rbp	      2059	mbyte.c	FUNCTION_44
0x4001a95	          0x4889e5	                            mov rbp, rsp	      2059	mbyte.c	FUNCTION_44
0x4001a98	        0x4883ec20	                           sub rsp, 0x20	      2059	mbyte.c	FUNCTION_44
0x4001a9c	          0x897dec	             mov dword [rbp - 0x14], edi	      2059	mbyte.c	FUNCTION_44
0x4001a9f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2059	mbyte.c	FUNCTION_44
0x4001aa3	    0x488b05000000	            mov rax, qword [0x04001aaa] 	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001aaa	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001aad	          0x4863d2	                         movsxd rdx, edx	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001ab0	        0x48c1e202	                              shl rdx, 2	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001ab4	          0x4801d0	                            add rax, rdx	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001ab7	            0x8b00	                    mov eax, dword [rax]	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001ab9	            0x89c2	                            mov edx, eax	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001abb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001abf	          0x4889c6	                            mov rsi, rax	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001ac2	            0x89d7	                            mov edi, edx	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001ac4	      0xe800000000	                          call 0x4001ac9	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001ac9	          0x8945f8	                mov dword [rbp - 8], eax	      2063	mbyte.c	FUNCTION_44	CALL_1
0x4001acc	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001ad3	            0xeb5a	                           jmp 0x4001b2f	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001ad5	          0x8b45fc	                mov eax, dword [rbp - 4]	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001ad8	            0x4898	                                    cdqe	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001ada	    0x488b04c50000	                  mov rax, qword [rax*8]	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001ae2	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001ae5	          0x4863d2	                         movsxd rdx, edx	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001ae8	        0x48c1e202	                              shl rdx, 2	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001aec	          0x4801d0	                            add rax, rdx	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001aef	            0x8b00	                    mov eax, dword [rax]	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001af1	            0x85c0	                           test eax, eax	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001af3	            0x7447	                            je 0x4001b3c	      2066	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001af5	          0x8b45f8	                mov eax, dword [rbp - 8]	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001af8	          0x4863d0	                         movsxd rdx, eax	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001afb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001aff	          0x4801c2	                            add rdx, rax	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b02	          0x8b45fc	                mov eax, dword [rbp - 4]	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b05	            0x4898	                                    cdqe	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b07	    0x488b04c50000	                  mov rax, qword [rax*8]	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b0f	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b12	          0x4863c9	                         movsxd rcx, ecx	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b15	        0x48c1e102	                              shl rcx, 2	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b19	          0x4801c8	                            add rax, rcx	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b1c	            0x8b00	                    mov eax, dword [rax]	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b1e	          0x4889d6	                            mov rsi, rdx	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b21	            0x89c7	                            mov edi, eax	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b23	      0xe800000000	                          call 0x4001b28	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b28	           0x145f8	                add dword [rbp - 8], eax	      2068	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x4001b2b	        0x8345fc01	                  add dword [rbp - 4], 1	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001b2f	    0x8b0500000000	            mov eax, dword [0x04001b35] 	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001b35	          0x3945fc	                cmp dword [rbp - 4], eax	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001b38	            0x7c9b	                            jl 0x4001ad5	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001b3a	            0xeb01	                           jmp 0x4001b3d	      2064	mbyte.c	FUNCTION_44	FOR_1
0x4001b3c	              0x90	                                     nop	      2067	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x4001b3d	          0x8b45f8	                mov eax, dword [rbp - 8]	      2070	mbyte.c	FUNCTION_44
0x4001b40	              0xc9	                                   leave	      2071	mbyte.c	FUNCTION_44
0x4001b41	              0xc3	                                     ret	      2071	mbyte.c	FUNCTION_44
utf_byte2len	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	9
0x4001bb5	              0x55	                                push rbp	      2101	mbyte.c	FUNCTION_46
0x4001bb6	          0x4889e5	                            mov rbp, rsp	      2101	mbyte.c	FUNCTION_46
0x4001bb9	          0x897dfc	                mov dword [rbp - 4], edi	      2101	mbyte.c	FUNCTION_46
0x4001bbc	          0x8b45fc	                mov eax, dword [rbp - 4]	      2102	mbyte.c	FUNCTION_46
0x4001bbf	            0x4898	                                    cdqe	      2102	mbyte.c	FUNCTION_46
0x4001bc1	     0xfb680000000	                   movzx eax, byte [rax]	      2102	mbyte.c	FUNCTION_46
0x4001bc8	           0xfbec0	                           movsx eax, al	      2102	mbyte.c	FUNCTION_46
0x4001bcb	              0x5d	                                 pop rbp	      2103	mbyte.c	FUNCTION_46
0x4001bcc	              0xc3	                                     ret	      2103	mbyte.c	FUNCTION_46
utf_char2cells	CALL,6:IF,8:ELSE,1:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	61
0x4000e25	              0x55	                                push rbp	      1418	mbyte.c	FUNCTION_20
0x4000e26	          0x4889e5	                            mov rbp, rsp	      1418	mbyte.c	FUNCTION_20
0x4000e29	        0x4883ec10	                           sub rsp, 0x10	      1418	mbyte.c	FUNCTION_20
0x4000e2d	          0x897dfc	                mov dword [rbp - 4], edi	      1418	mbyte.c	FUNCTION_20
0x4000e30	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1577	mbyte.c	FUNCTION_20	IF_1
0x4000e37	            0x7e62	                           jle 0x4000e9b	      1577	mbyte.c	FUNCTION_20	IF_1
0x4000e39	          0x8b45fc	                mov eax, dword [rbp - 4]	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x4000e3c	            0x89c7	                            mov edi, eax	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x4000e3e	      0xe800000000	                          call 0x4000e43	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x4000e43	            0x85c0	                           test eax, eax	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x4000e45	            0x750a	                           jne 0x4000e51	      1591	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0x4000e47	      0xb806000000	                              mov eax, 6	      1592	mbyte.c	FUNCTION_20	IF_1	IF_4
0x4000e4c	      0xe99d000000	                           jmp 0x4000eee	      1592	mbyte.c	FUNCTION_20	IF_1	IF_4
0x4000e51	          0x8b45fc	                mov eax, dword [rbp - 4]	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x4000e54	            0x89c2	                            mov edx, eax	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x4000e56	      0xbea0060000	                          mov esi, 0x6a0	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x4000e5b	      0xbf00000000	                              mov edi, 0	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x4000e60	      0xe8c8feffff	                        call sym.intable	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x4000e65	            0x85c0	                           test eax, eax	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x4000e67	            0x7407	                            je 0x4000e70	      1593	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0x4000e69	      0xb802000000	                              mov eax, 2	      1594	mbyte.c	FUNCTION_20	IF_1	IF_5
0x4000e6e	            0xeb7e	                           jmp 0x4000eee	      1594	mbyte.c	FUNCTION_20	IF_1	IF_5
0x4000e70	    0x488b05000000	            mov rax, qword [0x04000e77] 	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4000e77	          0x4885c0	                           test rax, rax	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4000e7a	            0x743a	                            je 0x4000eb6	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4000e7c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4000e7f	            0x89c2	                            mov edx, eax	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4000e81	      0xbe70020000	                          mov esi, 0x270	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4000e86	      0xbf00000000	                              mov edi, 0	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4000e8b	      0xe89dfeffff	                        call sym.intable	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4000e90	            0x85c0	                           test eax, eax	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4000e92	            0x7422	                            je 0x4000eb6	      1596	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0x4000e94	      0xb802000000	                              mov eax, 2	      1597	mbyte.c	FUNCTION_20	IF_1	IF_6
0x4000e99	            0xeb53	                           jmp 0x4000eee	      1597	mbyte.c	FUNCTION_20	IF_1	IF_6
0x4000e9b	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4000e9f	            0x7e15	                           jle 0x4000eb6	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4000ea1	          0x8b45fc	                mov eax, dword [rbp - 4]	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4000ea4	            0x89c7	                            mov edi, eax	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4000ea6	      0xe800000000	                          call 0x4000eab	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4000eab	            0x85c0	                           test eax, eax	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4000ead	            0x7507	                           jne 0x4000eb6	      1601	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0x4000eaf	      0xb804000000	                              mov eax, 4	      1602	mbyte.c	FUNCTION_20	ELSE_1	IF_7
0x4000eb4	            0xeb38	                           jmp 0x4000eee	      1602	mbyte.c	FUNCTION_20	ELSE_1	IF_7
0x4000eb6	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000eba	            0x7e2d	                           jle 0x4000ee9	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000ebc	    0x488b05000000	            mov rax, qword [0x04000ec3] 	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000ec3	           0xfb600	                   movzx eax, byte [rax]	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000ec6	            0x3c64	                            cmp al, 0x64	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000ec8	            0x751f	                           jne 0x4000ee9	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000eca	          0x8b45fc	                mov eax, dword [rbp - 4]	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000ecd	            0x89c2	                            mov edx, eax	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000ecf	      0xbe300b0000	                          mov esi, 0xb30	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000ed4	      0xbf00000000	                              mov edi, 0	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000ed9	      0xe84ffeffff	                        call sym.intable	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000ede	            0x85c0	                           test eax, eax	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000ee0	            0x7407	                            je 0x4000ee9	      1604	mbyte.c	FUNCTION_20	IF_8	CALL_6
0x4000ee2	      0xb802000000	                              mov eax, 2	      1605	mbyte.c	FUNCTION_20	IF_8
0x4000ee7	            0xeb05	                           jmp 0x4000eee	      1605	mbyte.c	FUNCTION_20	IF_8
0x4000ee9	      0xb801000000	                              mov eax, 1	      1607	mbyte.c	FUNCTION_20
0x4000eee	              0xc9	                                   leave	      1608	mbyte.c	FUNCTION_20
0x4000eef	              0xc3	                                     ret	      1608	mbyte.c	FUNCTION_20
mb_tail_off	CALL,2:IF,5:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,2	97
0x4002e60	              0x55	                                push rbp	      3931	mbyte.c	FUNCTION_73
0x4002e61	          0x4889e5	                            mov rbp, rsp	      3931	mbyte.c	FUNCTION_73
0x4002e64	        0x4883ec20	                           sub rsp, 0x20	      3931	mbyte.c	FUNCTION_73
0x4002e68	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3931	mbyte.c	FUNCTION_73
0x4002e6c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3931	mbyte.c	FUNCTION_73
0x4002e70	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3935	mbyte.c	FUNCTION_73	IF_1
0x4002e74	           0xfb600	                   movzx eax, byte [rax]	      3935	mbyte.c	FUNCTION_73	IF_1
0x4002e77	            0x84c0	                             test al, al	      3935	mbyte.c	FUNCTION_73	IF_1
0x4002e79	            0x750a	                           jne 0x4002e85	      3935	mbyte.c	FUNCTION_73	IF_1
0x4002e7b	      0xb800000000	                              mov eax, 0	      3936	mbyte.c	FUNCTION_73	IF_1
0x4002e80	      0xe915010000	                           jmp 0x4002f9a	      3936	mbyte.c	FUNCTION_73	IF_1
0x4002e85	    0x8b0500000000	            mov eax, dword [0x04002e8b] 	      3938	mbyte.c	FUNCTION_73	IF_2
0x4002e8b	            0x85c0	                           test eax, eax	      3938	mbyte.c	FUNCTION_73	IF_2
0x4002e8d	     0xf84b4000000	                            je 0x4002f47	      3938	mbyte.c	FUNCTION_73	IF_2
0x4002e93	    0xc745f8000000	                  mov dword [rbp - 8], 0	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002e9a	            0xeb04	                           jmp 0x4002ea0	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002e9c	        0x8345f801	                  add dword [rbp - 8], 1	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002ea0	          0x8b45f8	                mov eax, dword [rbp - 8]	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002ea3	            0x4898	                                    cdqe	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002ea5	        0x488d5001	                      lea rdx, [rax + 1]	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002ea9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002ead	          0x4801d0	                            add rax, rdx	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002eb0	           0xfb600	                   movzx eax, byte [rax]	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002eb3	           0xfb6c0	                           movzx eax, al	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002eb6	      0x25c0000000	                           and eax, 0xc0	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002ebb	      0x3d80000000	                           cmp eax, 0x80	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002ec0	            0x74da	                            je 0x4002e9c	      3941	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x4002ec2	    0xc745fc000000	                  mov dword [rbp - 4], 0	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002ec9	            0xeb25	                           jmp 0x4002ef0	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002ecb	          0x8b45fc	                mov eax, dword [rbp - 4]	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002ece	            0xf7d8	                                 neg eax	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002ed0	          0x4863d0	                         movsxd rdx, eax	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002ed3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002ed7	          0x4801d0	                            add rax, rdx	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002eda	           0xfb600	                   movzx eax, byte [rax]	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002edd	           0xfb6c0	                           movzx eax, al	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002ee0	      0x25c0000000	                           and eax, 0xc0	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002ee5	      0x3d80000000	                           cmp eax, 0x80	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002eea	            0x751e	                           jne 0x4002f0a	      3945	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002eec	        0x8345fc01	                  add dword [rbp - 4], 1	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002ef0	          0x8b45fc	                mov eax, dword [rbp - 4]	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002ef3	            0x4898	                                    cdqe	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002ef5	          0x48f7d8	                                 neg rax	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002ef8	          0x4889c2	                            mov rdx, rax	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002efb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002eff	          0x4801d0	                            add rax, rdx	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002f02	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002f06	            0x77c3	                            ja 0x4002ecb	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002f08	            0xeb01	                           jmp 0x4002f0b	      3944	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x4002f0a	              0x90	                                     nop	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x4002f0b	          0x8b45fc	                mov eax, dword [rbp - 4]	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f0e	            0xf7d8	                                 neg eax	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f10	          0x4863d0	                         movsxd rdx, eax	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f13	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f17	          0x4801d0	                            add rax, rdx	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f1a	           0xfb600	                   movzx eax, byte [rax]	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f1d	           0xfb6c0	                           movzx eax, al	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f20	            0x4898	                                    cdqe	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f22	     0xfb680000000	                   movzx eax, byte [rax]	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f29	           0xfbec0	                           movsx eax, al	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f2c	          0x8b4df8	                mov ecx, dword [rbp - 8]	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f2f	          0x8b55fc	                mov edx, dword [rbp - 4]	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f32	             0x1ca	                            add edx, ecx	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f34	          0x83c201	                              add edx, 1	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f37	            0x39d0	                            cmp eax, edx	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f39	            0x7407	                            je 0x4002f42	      3947	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f3b	      0xb800000000	                              mov eax, 0	      3948	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f40	            0xeb58	                           jmp 0x4002f9a	      3948	mbyte.c	FUNCTION_73	IF_2	IF_4
0x4002f42	          0x8b45f8	                mov eax, dword [rbp - 8]	      3949	mbyte.c	FUNCTION_73	IF_2
0x4002f45	            0xeb53	                           jmp 0x4002f9a	      3949	mbyte.c	FUNCTION_73	IF_2
0x4002f47	    0x8b0500000000	            mov eax, dword [0x04002f4d] 	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f4d	            0x85c0	                           test eax, eax	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f4f	            0x7426	                            je 0x4002f77	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f51	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f55	        0x4883c001	                              add rax, 1	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f59	           0xfb600	                   movzx eax, byte [rax]	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f5c	            0x84c0	                             test al, al	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f5e	            0x7417	                            je 0x4002f77	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f60	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f64	           0xfb600	                   movzx eax, byte [rax]	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f67	           0xfb6c0	                           movzx eax, al	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f6a	            0x4898	                                    cdqe	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f6c	     0xfb680000000	                   movzx eax, byte [rax]	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f73	            0x3c01	                               cmp al, 1	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f75	            0x7507	                           jne 0x4002f7e	      3954	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x4002f77	      0xb800000000	                              mov eax, 0	      3955	mbyte.c	FUNCTION_73	IF_5
0x4002f7c	            0xeb1c	                           jmp 0x4002f9a	      3955	mbyte.c	FUNCTION_73	IF_5
0x4002f7e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002f82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002f86	          0x4889d6	                            mov rsi, rdx	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002f89	          0x4889c7	                            mov rdi, rax	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002f8c	      0xe800000000	                          call 0x4002f91	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002f91	      0xba01000000	                              mov edx, 1	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002f96	            0x29c2	                            sub edx, eax	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002f98	            0x89d0	                            mov eax, edx	      3958	mbyte.c	FUNCTION_73	CALL_2
0x4002f9a	              0xc9	                                   leave	      3959	mbyte.c	FUNCTION_73
0x4002f9b	              0xc3	                                     ret	      3959	mbyte.c	FUNCTION_73
mb_adjust_cursor	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	11
0x4003364	              0x55	                                push rbp	      4093	mbyte.c	FUNCTION_77
0x4003365	          0x4889e5	                            mov rbp, rsp	      4093	mbyte.c	FUNCTION_77
0x4003368	    0x488b05000000	            mov rax, qword [0x0400336f] 	      4094	mbyte.c	FUNCTION_77	CALL_1
0x400336f	        0x488d5038	                   lea rdx, [rax + 0x38]	      4094	mbyte.c	FUNCTION_77	CALL_1
0x4003373	    0x488b05000000	            mov rax, qword [0x0400337a] 	      4094	mbyte.c	FUNCTION_77	CALL_1
0x400337a	          0x4889d6	                            mov rsi, rdx	      4094	mbyte.c	FUNCTION_77	CALL_1
0x400337d	          0x4889c7	                            mov rdi, rax	      4094	mbyte.c	FUNCTION_77	CALL_1
0x4003380	      0xe800000000	                          call 0x4003385	      4094	mbyte.c	FUNCTION_77	CALL_1
0x4003385	              0x90	                                     nop	      4095	mbyte.c	FUNCTION_77
0x4003386	              0x5d	                                 pop rbp	      4095	mbyte.c	FUNCTION_77
0x4003387	              0xc3	                                     ret	      4095	mbyte.c	FUNCTION_77
dbcs_char2bytes	CALL,0:IF,2:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	32
0x4000bd5	              0x55	                                push rbp	      1107	mbyte.c	FUNCTION_13
0x4000bd6	          0x4889e5	                            mov rbp, rsp	      1107	mbyte.c	FUNCTION_13
0x4000bd9	          0x897dfc	                mov dword [rbp - 4], edi	      1107	mbyte.c	FUNCTION_13
0x4000bdc	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1107	mbyte.c	FUNCTION_13
0x4000be0	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1108	mbyte.c	FUNCTION_13	IF_1
0x4000be7	            0x7e3c	                           jle 0x4000c25	      1108	mbyte.c	FUNCTION_13	IF_1
0x4000be9	          0x8b45fc	                mov eax, dword [rbp - 4]	      1110	mbyte.c	FUNCTION_13	IF_1
0x4000bec	          0xc1e808	                              shr eax, 8	      1110	mbyte.c	FUNCTION_13	IF_1
0x4000bef	            0x89c2	                            mov edx, eax	      1110	mbyte.c	FUNCTION_13	IF_1
0x4000bf1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1110	mbyte.c	FUNCTION_13	IF_1
0x4000bf5	            0x8810	                      mov byte [rax], dl	      1110	mbyte.c	FUNCTION_13	IF_1
0x4000bf7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1111	mbyte.c	FUNCTION_13	IF_1
0x4000bfb	        0x4883c001	                              add rax, 1	      1111	mbyte.c	FUNCTION_13	IF_1
0x4000bff	          0x8b55fc	                mov edx, dword [rbp - 4]	      1111	mbyte.c	FUNCTION_13	IF_1
0x4000c02	            0x8810	                      mov byte [rax], dl	      1111	mbyte.c	FUNCTION_13	IF_1
0x4000c04	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1114	mbyte.c	FUNCTION_13	IF_1	IF_2
0x4000c08	        0x4883c001	                              add rax, 1	      1114	mbyte.c	FUNCTION_13	IF_1	IF_2
0x4000c0c	           0xfb600	                   movzx eax, byte [rax]	      1114	mbyte.c	FUNCTION_13	IF_1	IF_2
0x4000c0f	            0x84c0	                             test al, al	      1114	mbyte.c	FUNCTION_13	IF_1	IF_2
0x4000c11	            0x750b	                           jne 0x4000c1e	      1114	mbyte.c	FUNCTION_13	IF_1	IF_2
0x4000c13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1115	mbyte.c	FUNCTION_13	IF_1	IF_2
0x4000c17	        0x4883c001	                              add rax, 1	      1115	mbyte.c	FUNCTION_13	IF_1	IF_2
0x4000c1b	          0xc6000a	                     mov byte [rax], 0xa	      1115	mbyte.c	FUNCTION_13	IF_1	IF_2
0x4000c1e	      0xb802000000	                              mov eax, 2	      1116	mbyte.c	FUNCTION_13	IF_1
0x4000c23	            0xeb10	                           jmp 0x4000c35	      1116	mbyte.c	FUNCTION_13	IF_1
0x4000c25	          0x8b45fc	                mov eax, dword [rbp - 4]	      1118	mbyte.c	FUNCTION_13
0x4000c28	            0x89c2	                            mov edx, eax	      1118	mbyte.c	FUNCTION_13
0x4000c2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1118	mbyte.c	FUNCTION_13
0x4000c2e	            0x8810	                      mov byte [rax], dl	      1118	mbyte.c	FUNCTION_13
0x4000c30	      0xb801000000	                              mov eax, 1	      1119	mbyte.c	FUNCTION_13
0x4000c35	              0x5d	                                 pop rbp	      1120	mbyte.c	FUNCTION_13
0x4000c36	              0xc3	                                     ret	      1120	mbyte.c	FUNCTION_13
convert_input	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	15
0x4005faa	              0x55	                                push rbp	      6657	mbyte.c	FUNCTION_142
0x4005fab	          0x4889e5	                            mov rbp, rsp	      6657	mbyte.c	FUNCTION_142
0x4005fae	        0x4883ec10	                           sub rsp, 0x10	      6657	mbyte.c	FUNCTION_142
0x4005fb2	        0x48897df8	                mov qword [rbp - 8], rdi	      6657	mbyte.c	FUNCTION_142
0x4005fb6	          0x8975f4	              mov dword [rbp - 0xc], esi	      6657	mbyte.c	FUNCTION_142
0x4005fb9	          0x8955f0	             mov dword [rbp - 0x10], edx	      6657	mbyte.c	FUNCTION_142
0x4005fbc	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4005fbf	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4005fc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4005fc6	    0x41b800000000	                              mov r8d, 0	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4005fcc	      0xb900000000	                              mov ecx, 0	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4005fd1	          0x4889c7	                            mov rdi, rax	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4005fd4	      0xe800000000	                          call 0x4005fd9	      6658	mbyte.c	FUNCTION_142	CALL_1
0x4005fd9	              0xc9	                                   leave	      6659	mbyte.c	FUNCTION_142
0x4005fda	              0xc3	                                     ret	      6659	mbyte.c	FUNCTION_142
mb_strnicmp	CALL,4:IF,7:ELSE,2:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	118
0x4002782	              0x55	                                push rbp	      3668	mbyte.c	FUNCTION_65
0x4002783	          0x4889e5	                            mov rbp, rsp	      3668	mbyte.c	FUNCTION_65
0x4002786	              0x53	                                push rbx	      3668	mbyte.c	FUNCTION_65
0x4002787	        0x4883ec38	                           sub rsp, 0x38	      3668	mbyte.c	FUNCTION_65
0x400278b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3668	mbyte.c	FUNCTION_65
0x400278f	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3668	mbyte.c	FUNCTION_65
0x4002793	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3668	mbyte.c	FUNCTION_65
0x4002797	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3671	mbyte.c	FUNCTION_65
0x400279b	          0x8945e8	             mov dword [rbp - 0x18], eax	      3671	mbyte.c	FUNCTION_65
0x400279e	    0x8b0500000000	            mov eax, dword [0x040027a4] 	      3673	mbyte.c	FUNCTION_65	IF_1
0x40027a4	            0x85c0	                           test eax, eax	      3673	mbyte.c	FUNCTION_65	IF_1
0x40027a6	            0x741d	                            je 0x40027c5	      3673	mbyte.c	FUNCTION_65	IF_1
0x40027a8	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40027ac	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40027b0	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40027b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40027b8	          0x4889c7	                            mov rdi, rax	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40027bb	      0xe875fdffff	                   call sym.utf_strnicmp	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40027c0	      0xe934010000	                           jmp 0x40028f9	      3675	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x40027c5	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x40027cc	      0xe917010000	                           jmp 0x40028e8	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x40027d1	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027d4	          0x4863d0	                         movsxd rdx, eax	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027db	          0x4801d0	                            add rax, rdx	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027de	           0xfb600	                   movzx eax, byte [rax]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027e1	            0x84c0	                             test al, al	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027e3	            0x751e	                           jne 0x4002803	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027e5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027e8	          0x4863d0	                         movsxd rdx, eax	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027eb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027ef	          0x4801d0	                            add rax, rdx	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027f2	           0xfb600	                   movzx eax, byte [rax]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027f5	            0x84c0	                             test al, al	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027f7	            0x750a	                           jne 0x4002803	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027f9	      0xb800000000	                              mov eax, 0	      3682	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x40027fe	      0xe9f6000000	                           jmp 0x40028f9	      3682	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x4002803	    0x488b05000000	            mov rax, qword [0x0400280a] 	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x400280a	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x400280d	          0x4863ca	                         movsxd rcx, edx	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4002810	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4002814	          0x4801ca	                            add rdx, rcx	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x4002817	          0x4889d7	                            mov rdi, rdx	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x400281a	            0xffd0	                                call rax	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x400281c	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x400281f	        0x837de401	               cmp dword [rbp - 0x1c], 1	      3685	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3
0x4002823	            0x7f70	                            jg 0x4002895	      3685	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3
0x4002825	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x4002828	          0x4863d0	                         movsxd rdx, eax	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x400282b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x400282f	          0x4801d0	                            add rax, rdx	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x4002832	           0xfb610	                   movzx edx, byte [rax]	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x4002835	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x4002838	          0x4863c8	                         movsxd rcx, eax	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x400283b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x400283f	          0x4801c8	                            add rax, rcx	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x4002842	           0xfb600	                   movzx eax, byte [rax]	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x4002845	            0x38c2	                              cmp dl, al	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x4002847	     0xf8495000000	                            je 0x40028e2	      3688	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x400284d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002850	          0x4863d0	                         movsxd rdx, eax	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002853	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002857	          0x4801d0	                            add rax, rdx	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x400285a	           0xfb600	                   movzx eax, byte [rax]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x400285d	           0xfb6c0	                           movzx eax, al	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002860	            0x89c7	                            mov edi, eax	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002862	      0xe800000000	                          call 0x4002867	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002867	            0x89c3	                            mov ebx, eax	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002869	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x400286c	          0x4863d0	                         movsxd rdx, eax	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x400286f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002873	          0x4801d0	                            add rax, rdx	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002876	           0xfb600	                   movzx eax, byte [rax]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002879	           0xfb6c0	                           movzx eax, al	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x400287c	            0x89c7	                            mov edi, eax	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x400287e	      0xe800000000	                          call 0x4002883	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002883	            0x29c3	                            sub ebx, eax	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002885	            0x89d8	                            mov eax, ebx	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x4002887	          0x8945ec	             mov dword [rbp - 0x14], eax	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x400288a	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3691	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x400288e	            0x7452	                            je 0x40028e2	      3691	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x4002890	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x4002893	            0xeb64	                           jmp 0x40028f9	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x4002895	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x4002898	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x400289b	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x400289e	            0x7d09	                           jge 0x40028a9	      3698	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x40028a0	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3699	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x40028a3	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      3699	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x40028a6	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3699	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x40028a9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028ac	            0x4898	                                    cdqe	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028ae	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028b1	          0x4863ca	                         movsxd rcx, edx	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028b4	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028b8	        0x488d3411	                    lea rsi, [rcx + rdx]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028bc	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028bf	          0x4863ca	                         movsxd rcx, edx	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028c2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028c6	          0x4801d1	                            add rcx, rdx	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028c9	          0x4889c2	                            mov rdx, rax	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028cc	          0x4889cf	                            mov rdi, rcx	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028cf	      0xe800000000	                          call 0x40028d4	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028d4	          0x8945ec	             mov dword [rbp - 0x14], eax	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x40028d7	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3701	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x40028db	            0x7405	                            je 0x40028e2	      3701	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x40028dd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x40028e0	            0xeb17	                           jmp 0x40028f9	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x40028e2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x40028e5	           0x145e0	             add dword [rbp - 0x20], eax	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x40028e8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x40028eb	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x40028ee	     0xf8cddfeffff	                            jl 0x40027d1	      3679	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x40028f4	      0xb800000000	                              mov eax, 0	      3706	mbyte.c	FUNCTION_65
0x40028f9	        0x4883c438	                           add rsp, 0x38	      3707	mbyte.c	FUNCTION_65
0x40028fd	              0x5b	                                 pop rbx	      3707	mbyte.c	FUNCTION_65
0x40028fe	              0x5d	                                 pop rbp	      3707	mbyte.c	FUNCTION_65
0x40028ff	              0xc3	                                     ret	      3707	mbyte.c	FUNCTION_65
translate_pango_attributes	CALL,4:IF,5:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	65
0x40051be	              0x55	                                push rbp	      5450	mbyte.c	FUNCTION_114
0x40051bf	          0x4889e5	                            mov rbp, rsp	      5450	mbyte.c	FUNCTION_114
0x40051c2	        0x4883ec30	                           sub rsp, 0x30	      5450	mbyte.c	FUNCTION_114
0x40051c6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5450	mbyte.c	FUNCTION_114
0x40051ca	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      5452	mbyte.c	FUNCTION_114
0x40051d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5454	mbyte.c	FUNCTION_114	CALL_1
0x40051d5	      0xbe0b000000	                            mov esi, 0xb	      5454	mbyte.c	FUNCTION_114	CALL_1
0x40051da	          0x4889c7	                            mov rdi, rax	      5454	mbyte.c	FUNCTION_114	CALL_1
0x40051dd	      0xe800000000	                          call 0x40051e2	      5454	mbyte.c	FUNCTION_114	CALL_1
0x40051e2	        0x488945f0	             mov qword [rbp - 0x10], rax	      5454	mbyte.c	FUNCTION_114	CALL_1
0x40051e6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5455	mbyte.c	FUNCTION_114	IF_1
0x40051eb	            0x740f	                            je 0x40051fc	      5455	mbyte.c	FUNCTION_114	IF_1
0x40051ed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5455	mbyte.c	FUNCTION_114	IF_1
0x40051f1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5455	mbyte.c	FUNCTION_114	IF_1
0x40051f4	            0x85c0	                           test eax, eax	      5455	mbyte.c	FUNCTION_114	IF_1
0x40051f6	            0x7404	                            je 0x40051fc	      5455	mbyte.c	FUNCTION_114	IF_1
0x40051f8	        0x834dec08	                or dword [rbp - 0x14], 8	      5457	mbyte.c	FUNCTION_114	IF_1
0x40051fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5459	mbyte.c	FUNCTION_114	CALL_2
0x4005200	      0xbe04000000	                              mov esi, 4	      5459	mbyte.c	FUNCTION_114	CALL_2
0x4005205	          0x4889c7	                            mov rdi, rax	      5459	mbyte.c	FUNCTION_114	CALL_2
0x4005208	      0xe800000000	                          call 0x400520d	      5459	mbyte.c	FUNCTION_114	CALL_2
0x400520d	        0x488945f0	             mov qword [rbp - 0x10], rax	      5459	mbyte.c	FUNCTION_114	CALL_2
0x4005211	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5460	mbyte.c	FUNCTION_114	IF_2
0x4005216	            0x7412	                            je 0x400522a	      5460	mbyte.c	FUNCTION_114	IF_2
0x4005218	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5460	mbyte.c	FUNCTION_114	IF_2
0x400521c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5460	mbyte.c	FUNCTION_114	IF_2
0x400521f	      0x3dbb020000	                          cmp eax, 0x2bb	      5460	mbyte.c	FUNCTION_114	IF_2
0x4005224	            0x7e04	                           jle 0x400522a	      5460	mbyte.c	FUNCTION_114	IF_2
0x4005226	        0x834dec02	                or dword [rbp - 0x14], 2	      5461	mbyte.c	FUNCTION_114	IF_2
0x400522a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5463	mbyte.c	FUNCTION_114	CALL_3
0x400522e	      0xbe03000000	                              mov esi, 3	      5463	mbyte.c	FUNCTION_114	CALL_3
0x4005233	          0x4889c7	                            mov rdi, rax	      5463	mbyte.c	FUNCTION_114	CALL_3
0x4005236	      0xe800000000	                          call 0x400523b	      5463	mbyte.c	FUNCTION_114	CALL_3
0x400523b	        0x488945f0	             mov qword [rbp - 0x10], rax	      5463	mbyte.c	FUNCTION_114	CALL_3
0x400523f	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5464	mbyte.c	FUNCTION_114	IF_3
0x4005244	            0x740f	                            je 0x4005255	      5464	mbyte.c	FUNCTION_114	IF_3
0x4005246	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5464	mbyte.c	FUNCTION_114	IF_3
0x400524a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5464	mbyte.c	FUNCTION_114	IF_3
0x400524d	            0x85c0	                           test eax, eax	      5464	mbyte.c	FUNCTION_114	IF_3
0x400524f	            0x7404	                            je 0x4005255	      5464	mbyte.c	FUNCTION_114	IF_3
0x4005251	        0x834dec04	                or dword [rbp - 0x14], 4	      5466	mbyte.c	FUNCTION_114	IF_3
0x4005255	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5468	mbyte.c	FUNCTION_114	CALL_4
0x4005259	      0xbe0a000000	                            mov esi, 0xa	      5468	mbyte.c	FUNCTION_114	CALL_4
0x400525e	          0x4889c7	                            mov rdi, rax	      5468	mbyte.c	FUNCTION_114	CALL_4
0x4005261	      0xe800000000	                          call 0x4005266	      5468	mbyte.c	FUNCTION_114	CALL_4
0x4005266	        0x488945f0	             mov qword [rbp - 0x10], rax	      5468	mbyte.c	FUNCTION_114	CALL_4
0x400526a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5469	mbyte.c	FUNCTION_114	IF_4
0x400526f	            0x7430	                            je 0x40052a1	      5469	mbyte.c	FUNCTION_114	IF_4
0x4005271	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5471	mbyte.c	FUNCTION_114	IF_4
0x4005275	        0x4883c010	                           add rax, 0x10	      5471	mbyte.c	FUNCTION_114	IF_4
0x4005279	        0x488945f8	                mov qword [rbp - 8], rax	      5471	mbyte.c	FUNCTION_114	IF_4
0x400527d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4005281	           0xfb710	                   movzx edx, word [rax]	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4005284	        0x488b45f8	                mov rax, qword [rbp - 8]	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4005288	         0xfb74002	               movzx eax, word [rax + 2]	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x400528c	             0x9c2	                             or edx, eax	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x400528e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4005292	         0xfb74004	               movzx eax, word [rax + 4]	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4005296	             0x9d0	                             or eax, edx	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x4005298	          0x6685c0	                             test ax, ax	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x400529b	            0x7504	                           jne 0x40052a1	      5474	mbyte.c	FUNCTION_114	IF_4	IF_5
0x400529d	        0x834dec01	                or dword [rbp - 0x14], 1	      5475	mbyte.c	FUNCTION_114	IF_4	IF_5
0x40052a1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5478	mbyte.c	FUNCTION_114
0x40052a4	              0xc9	                                   leave	      5479	mbyte.c	FUNCTION_114
0x40052a5	              0xc3	                                     ret	      5479	mbyte.c	FUNCTION_114
utf_tolower	CALL,4:IF,3:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	40
0x400249d	              0x55	                                push rbp	      3557	mbyte.c	FUNCTION_62
0x400249e	          0x4889e5	                            mov rbp, rsp	      3557	mbyte.c	FUNCTION_62
0x40024a1	        0x4883ec10	                           sub rsp, 0x10	      3557	mbyte.c	FUNCTION_62
0x40024a5	          0x897dfc	                mov dword [rbp - 4], edi	      3557	mbyte.c	FUNCTION_62
0x40024a8	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      3559	mbyte.c	FUNCTION_62	IF_1
0x40024ac	            0x7f26	                            jg 0x40024d4	      3559	mbyte.c	FUNCTION_62	IF_1
0x40024ae	    0x8b0500000000	            mov eax, dword [0x040024b4] 	      3559	mbyte.c	FUNCTION_62	IF_1
0x40024b4	          0x83e002	                              and eax, 2	      3559	mbyte.c	FUNCTION_62	IF_1
0x40024b7	            0x85c0	                           test eax, eax	      3559	mbyte.c	FUNCTION_62	IF_1
0x40024b9	            0x7419	                            je 0x40024d4	      3559	mbyte.c	FUNCTION_62	IF_1
0x40024bb	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      3560	mbyte.c	FUNCTION_62	CALL_1
0x40024bf	            0x7e0e	                           jle 0x40024cf	      3560	mbyte.c	FUNCTION_62	CALL_1
0x40024c1	        0x837dfc5a	               cmp dword [rbp - 4], 0x5a	      3560	mbyte.c	FUNCTION_62	CALL_1
0x40024c5	            0x7f08	                            jg 0x40024cf	      3560	mbyte.c	FUNCTION_62	CALL_1
0x40024c7	          0x8b45fc	                mov eax, dword [rbp - 4]	      3560	mbyte.c	FUNCTION_62	CALL_1
0x40024ca	          0x83c020	                           add eax, 0x20	      3560	mbyte.c	FUNCTION_62	CALL_1
0x40024cd	            0xeb44	                           jmp 0x4002513	      3560	mbyte.c	FUNCTION_62	CALL_1
0x40024cf	          0x8b45fc	                mov eax, dword [rbp - 4]	      3560	mbyte.c	FUNCTION_62	CALL_1
0x40024d2	            0xeb3f	                           jmp 0x4002513	      3560	mbyte.c	FUNCTION_62	CALL_1
0x40024d4	    0x8b0500000000	            mov eax, dword [0x040024da] 	      3564	mbyte.c	FUNCTION_62	IF_2
0x40024da	          0x83e001	                              and eax, 1	      3564	mbyte.c	FUNCTION_62	IF_2
0x40024dd	            0x85c0	                           test eax, eax	      3564	mbyte.c	FUNCTION_62	IF_2
0x40024df	            0x750c	                           jne 0x40024ed	      3564	mbyte.c	FUNCTION_62	IF_2
0x40024e1	          0x8b45fc	                mov eax, dword [rbp - 4]	      3565	mbyte.c	FUNCTION_62	CALL_2
0x40024e4	            0x89c7	                            mov edi, eax	      3565	mbyte.c	FUNCTION_62	CALL_2
0x40024e6	      0xe800000000	                          call 0x40024eb	      3565	mbyte.c	FUNCTION_62	CALL_2
0x40024eb	            0xeb26	                           jmp 0x4002513	      3565	mbyte.c	FUNCTION_62	CALL_2
0x40024ed	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      3569	mbyte.c	FUNCTION_62	IF_3
0x40024f1	            0x7f0c	                            jg 0x40024ff	      3569	mbyte.c	FUNCTION_62	IF_3
0x40024f3	          0x8b45fc	                mov eax, dword [rbp - 4]	      3570	mbyte.c	FUNCTION_62	CALL_3
0x40024f6	            0x89c7	                            mov edi, eax	      3570	mbyte.c	FUNCTION_62	CALL_3
0x40024f8	      0xe800000000	                          call 0x40024fd	      3570	mbyte.c	FUNCTION_62	CALL_3
0x40024fd	            0xeb14	                           jmp 0x4002513	      3570	mbyte.c	FUNCTION_62	CALL_3
0x40024ff	          0x8b45fc	                mov eax, dword [rbp - 4]	      3573	mbyte.c	FUNCTION_62	CALL_4
0x4002502	      0xba500a0000	                          mov edx, 0xa50	      3573	mbyte.c	FUNCTION_62	CALL_4
0x4002507	      0xbe00000000	                              mov esi, 0	      3573	mbyte.c	FUNCTION_62	CALL_4
0x400250c	            0x89c7	                            mov edi, eax	      3573	mbyte.c	FUNCTION_62	CALL_4
0x400250e	      0xe891fdffff	                    call sym.utf_convert	      3573	mbyte.c	FUNCTION_62	CALL_4
0x4002513	              0xc9	                                   leave	      3574	mbyte.c	FUNCTION_62
0x4002514	              0xc3	                                     ret	      3574	mbyte.c	FUNCTION_62
convert_setup	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	16
0x4005d68	              0x55	                                push rbp	      6530	mbyte.c	FUNCTION_140
0x4005d69	          0x4889e5	                            mov rbp, rsp	      6530	mbyte.c	FUNCTION_140
0x4005d6c	        0x4883ec20	                           sub rsp, 0x20	      6530	mbyte.c	FUNCTION_140
0x4005d70	        0x48897df8	                mov qword [rbp - 8], rdi	      6530	mbyte.c	FUNCTION_140
0x4005d74	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6530	mbyte.c	FUNCTION_140
0x4005d78	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6530	mbyte.c	FUNCTION_140
0x4005d7c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005d80	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005d84	        0x488b45f8	                mov rax, qword [rbp - 8]	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005d88	    0x41b801000000	                              mov r8d, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005d8e	          0x4889d1	                            mov rcx, rdx	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005d91	      0xba01000000	                              mov edx, 1	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005d96	          0x4889c7	                            mov rdi, rax	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005d99	      0xe800000000	                          call 0x4005d9e	      6531	mbyte.c	FUNCTION_140	CALL_1
0x4005d9e	              0xc9	                                   leave	      6532	mbyte.c	FUNCTION_140
0x4005d9f	              0xc3	                                     ret	      6532	mbyte.c	FUNCTION_140
dbcs_class	CALL,0:IF,8:ELSE,8:DO,0:WHILE,0:functions,0:SWITCH,4:FOR,0	120
0x40009ce	              0x55	                                push rbp	       906	mbyte.c	FUNCTION_9
0x40009cf	          0x4889e5	                            mov rbp, rsp	       906	mbyte.c	FUNCTION_9
0x40009d2	          0x897dec	             mov dword [rbp - 0x14], edi	       906	mbyte.c	FUNCTION_9
0x40009d5	          0x8975e8	             mov dword [rbp - 0x18], esi	       906	mbyte.c	FUNCTION_9
0x40009d8	    0x8b0500000000	            mov eax, dword [0x040009de] 	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40009de	      0x3db5030000	                          cmp eax, 0x3b5	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40009e3	     0xf84f3000000	                            je 0x4000adc	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40009e9	      0x3db5030000	                          cmp eax, 0x3b5	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40009ee	            0x7f0c	                            jg 0x40009fc	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40009f0	      0x3da4030000	                          cmp eax, 0x3a4	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40009f5	            0x741c	                            je 0x4000a13	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x40009f7	      0xe988010000	                           jmp 0x4000b84	      1068	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_8
0x40009fc	      0x3dcc260000	                         cmp eax, 0x26cc	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000a01	            0x7410	                            je 0x4000a13	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000a03	      0x3ddd260000	                         cmp eax, 0x26dd	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000a08	     0xf84ce000000	                            je 0x4000adc	       907	mbyte.c	FUNCTION_9	SWITCH_1
0x4000a0e	      0xe971010000	                           jmp 0x4000b84	      1068	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_8
0x4000a13	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       915	mbyte.c	FUNCTION_9	SWITCH_1
0x4000a16	          0x8845fc	                  mov byte [rbp - 4], al	       915	mbyte.c	FUNCTION_9	SWITCH_1
0x4000a19	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       916	mbyte.c	FUNCTION_9	SWITCH_1
0x4000a1c	          0x8845fd	                  mov byte [rbp - 3], al	       916	mbyte.c	FUNCTION_9	SWITCH_1
0x4000a1f	        0x8065fc7f	                and byte [rbp - 4], 0x7f	       945	mbyte.c	FUNCTION_9	SWITCH_1
0x4000a23	        0x8065fd7f	                and byte [rbp - 3], 0x7f	       946	mbyte.c	FUNCTION_9	SWITCH_1
0x4000a27	         0xfb645fc	               movzx eax, byte [rbp - 4]	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a2b	          0xc1e008	                              shl eax, 8	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a2e	            0x89c2	                            mov edx, eax	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a30	         0xfb645fd	               movzx eax, byte [rbp - 3]	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a34	             0x9d0	                             or eax, edx	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a36	      0x3d25210000	                         cmp eax, 0x2125	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a3b	            0x7f10	                            jg 0x4000a4d	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a3d	      0x3d22210000	                         cmp eax, 0x2122	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a42	            0x7d1c	                           jge 0x4000a60	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a44	      0x3d21210000	                         cmp eax, 0x2121	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a49	            0x740b	                            je 0x4000a56	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a4b	            0xeb27	                           jmp 0x4000a74	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a4d	      0x3d3c210000	                         cmp eax, 0x213c	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a52	            0x7416	                            je 0x4000a6a	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a54	            0xeb1e	                           jmp 0x4000a74	       949	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a56	      0xb800000000	                              mov eax, 0	       952	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a5b	      0xe92a010000	                           jmp 0x4000b8a	       952	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a60	      0xb801000000	                              mov eax, 1	       957	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a65	      0xe920010000	                           jmp 0x4000b8a	       957	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a6a	      0xb80d000000	                            mov eax, 0xd	       959	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a6f	      0xe916010000	                           jmp 0x4000b8a	       959	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x4000a74	         0xfb645fc	               movzx eax, byte [rbp - 4]	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000a78	          0x83e821	                           sub eax, 0x21	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000a7b	          0x83f807	                              cmp eax, 7	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000a7e	            0x7752	                            ja 0x4000ad2	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000a80	            0x89c0	                            mov eax, eax	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000a82	    0x488b04c50000	                  mov rax, qword [rax*8]	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000a8a	            0xffe0	                                 jmp rax	       962	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000a8c	      0xb80a000000	                            mov eax, 0xa	       967	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000a91	      0xe9f4000000	                           jmp 0x4000b8a	       967	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000a96	      0xb80b000000	                            mov eax, 0xb	       970	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000a9b	      0xe9ea000000	                           jmp 0x4000b8a	       970	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000aa0	      0xb80c000000	                            mov eax, 0xc	       973	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000aa5	      0xe9e0000000	                           jmp 0x4000b8a	       973	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000aaa	      0xb80d000000	                            mov eax, 0xd	       976	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000aaf	      0xe9d6000000	                           jmp 0x4000b8a	       976	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000ab4	      0xb80e000000	                            mov eax, 0xe	       979	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000ab9	      0xe9cc000000	                           jmp 0x4000b8a	       979	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000abe	      0xb80f000000	                            mov eax, 0xf	       982	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000ac3	      0xe9c2000000	                           jmp 0x4000b8a	       982	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000ac8	      0xb810000000	                           mov eax, 0x10	       985	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000acd	      0xe9b8000000	                           jmp 0x4000b8a	       985	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000ad2	      0xb811000000	                           mov eax, 0x11	       988	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000ad7	      0xe9ae000000	                           jmp 0x4000b8a	       988	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0x4000adc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       996	mbyte.c	FUNCTION_9	SWITCH_1
0x4000adf	          0x8845fe	                  mov byte [rbp - 2], al	       996	mbyte.c	FUNCTION_9	SWITCH_1
0x4000ae2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       997	mbyte.c	FUNCTION_9	SWITCH_1
0x4000ae5	          0x8845ff	                  mov byte [rbp - 1], al	       997	mbyte.c	FUNCTION_9	SWITCH_1
0x4000ae8	        0x807dfeaf	                cmp byte [rbp - 2], 0xaf	      1013	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x4000aec	            0x7610	                           jbe 0x4000afe	      1013	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x4000aee	        0x807dfec8	                cmp byte [rbp - 2], 0xc8	      1013	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x4000af2	            0x770a	                            ja 0x4000afe	      1013	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x4000af4	      0xb814000000	                           mov eax, 0x14	      1015	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x4000af9	      0xe98c000000	                           jmp 0x4000b8a	      1015	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0x4000afe	        0x807dfec9	                cmp byte [rbp - 2], 0xc9	      1025	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4000b02	            0x760d	                           jbe 0x4000b11	      1025	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4000b04	        0x807dfefd	                cmp byte [rbp - 2], 0xfd	      1025	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4000b08	            0x7707	                            ja 0x4000b11	      1025	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4000b0a	      0xb815000000	                           mov eax, 0x15	      1027	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4000b0f	            0xeb79	                           jmp 0x4000b8a	      1027	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0x4000b11	         0xfb645fe	               movzx eax, byte [rbp - 2]	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b15	      0x2da1000000	                           sub eax, 0xa1	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b1a	          0x83f80b	                            cmp eax, 0xb	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b1d	            0x7765	                            ja 0x4000b84	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b1f	            0x89c0	                            mov eax, eax	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b21	    0x488b04c50000	                  mov rax, qword [rax*8]	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b29	            0xffe0	                                 jmp rax	      1028	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b2b	      0xb816000000	                           mov eax, 0x16	      1033	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b30	            0xeb58	                           jmp 0x4000b8a	      1033	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b32	      0xb817000000	                           mov eax, 0x17	      1036	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b37	            0xeb51	                           jmp 0x4000b8a	      1036	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b39	      0xb818000000	                           mov eax, 0x18	      1039	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b3e	            0xeb4a	                           jmp 0x4000b8a	      1039	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b40	      0xb819000000	                           mov eax, 0x19	      1042	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b45	            0xeb43	                           jmp 0x4000b8a	      1042	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b47	      0xb81a000000	                           mov eax, 0x1a	      1045	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b4c	            0xeb3c	                           jmp 0x4000b8a	      1045	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b4e	      0xb81b000000	                           mov eax, 0x1b	      1048	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b53	            0xeb35	                           jmp 0x4000b8a	      1048	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0x4000b55	        0x807dffaf	                cmp byte [rbp - 1], 0xaf	      1051	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0x4000b59	            0x7707	                            ja 0x4000b62	      1051	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0x4000b5b	      0xb819000000	                           mov eax, 0x19	      1052	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0x4000b60	            0xeb28	                           jmp 0x4000b8a	      1052	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0x4000b62	        0x807dfff5	                cmp byte [rbp - 1], 0xf5	      1053	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_7	IF_8
0x4000b66	            0x7607	                           jbe 0x4000b6f	      1053	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_7	IF_8
0x4000b68	      0xb816000000	                           mov eax, 0x16	      1054	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_7	IF_8
0x4000b6d	            0xeb1b	                           jmp 0x4000b8a	      1054	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_7	IF_8
0x4000b6f	      0xb81c000000	                           mov eax, 0x1c	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000b74	            0xeb14	                           jmp 0x4000b8a	      1057	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000b76	      0xb81d000000	                           mov eax, 0x1d	      1061	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000b7b	            0xeb0d	                           jmp 0x4000b8a	      1061	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000b7d	      0xb81e000000	                           mov eax, 0x1e	      1064	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000b82	            0xeb06	                           jmp 0x4000b8a	      1064	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0x4000b84	              0x90	                                     nop	      1068	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_8
0x4000b85	      0xb803000000	                              mov eax, 3	      1070	mbyte.c	FUNCTION_9	ELSE_8
0x4000b8a	              0x5d	                                 pop rbp	      1071	mbyte.c	FUNCTION_9	ELSE_8
0x4000b8b	              0xc3	                                     ret	      1071	mbyte.c	FUNCTION_9	ELSE_8
string_convert_ext	CALL,30:IF,29:ELSE,10:DO,0:WHILE,0:functions,0:SWITCH,3:FOR,3	372
0x4006121	              0x55	                                push rbp	      6731	mbyte.c	FUNCTION_145
0x4006122	          0x4889e5	                            mov rbp, rsp	      6731	mbyte.c	FUNCTION_145
0x4006125	        0x4883ec50	                           sub rsp, 0x50	      6731	mbyte.c	FUNCTION_145
0x4006129	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      6731	mbyte.c	FUNCTION_145
0x400612d	        0x488975c0	             mov qword [rbp - 0x40], rsi	      6731	mbyte.c	FUNCTION_145
0x4006131	        0x488955b8	             mov qword [rbp - 0x48], rdx	      6731	mbyte.c	FUNCTION_145
0x4006135	        0x48894db0	             mov qword [rbp - 0x50], rcx	      6731	mbyte.c	FUNCTION_145
0x4006139	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      6732	mbyte.c	FUNCTION_145
0x4006141	      0x48837db800	               cmp qword [rbp - 0x48], 0	      6739	mbyte.c	FUNCTION_145	IF_1
0x4006146	            0x7511	                           jne 0x4006159	      6739	mbyte.c	FUNCTION_145	IF_1
0x4006148	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6740	mbyte.c	FUNCTION_145	CALL_1
0x400614c	          0x4889c7	                            mov rdi, rax	      6740	mbyte.c	FUNCTION_145	CALL_1
0x400614f	      0xe800000000	                          call 0x4006154	      6740	mbyte.c	FUNCTION_145	CALL_1
0x4006154	          0x8945dc	             mov dword [rbp - 0x24], eax	      6740	mbyte.c	FUNCTION_145	CALL_1
0x4006157	            0xeb09	                           jmp 0x4006162	      6740	mbyte.c	FUNCTION_145	CALL_1
0x4006159	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6742	mbyte.c	FUNCTION_145	ELSE_1
0x400615d	            0x8b00	                    mov eax, dword [rax]	      6742	mbyte.c	FUNCTION_145	ELSE_1
0x400615f	          0x8945dc	             mov dword [rbp - 0x24], eax	      6742	mbyte.c	FUNCTION_145	ELSE_1
0x4006162	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      6743	mbyte.c	FUNCTION_145	IF_2
0x4006166	            0x750f	                           jne 0x4006177	      6743	mbyte.c	FUNCTION_145	IF_2
0x4006168	      0xbf00000000	                              mov edi, 0	      6744	mbyte.c	FUNCTION_145	CALL_2
0x400616d	      0xe800000000	                          call 0x4006172	      6744	mbyte.c	FUNCTION_145	CALL_2
0x4006172	      0xe9f2040000	                           jmp 0x4006669	      6744	mbyte.c	FUNCTION_145	CALL_2
0x4006177	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x400617b	            0x8b00	                    mov eax, dword [rax]	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x400617d	          0x83f805	                              cmp eax, 5	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x4006180	     0xf87df040000	                            ja 0x4006665	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x4006186	            0x89c0	                            mov eax, eax	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x4006188	    0x488b04c50000	                  mov rax, qword [rax*8]	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x4006190	            0xffe0	                                 jmp rax	      6746	mbyte.c	FUNCTION_145	SWITCH_1
0x4006192	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x4006195	             0x1c0	                            add eax, eax	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x4006197	          0x83c001	                              add eax, 1	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x400619a	            0x89c7	                            mov edi, eax	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x400619c	      0xe800000000	                          call 0x40061a1	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x40061a1	        0x488945f0	             mov qword [rbp - 0x10], rax	      6749	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x40061a5	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6750	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x40061aa	     0xf84a5040000	                            je 0x4006655	      6750	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x40061b0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6752	mbyte.c	FUNCTION_145	SWITCH_1
0x40061b4	        0x488945f8	                mov qword [rbp - 8], rax	      6752	mbyte.c	FUNCTION_145	SWITCH_1
0x40061b8	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40061bf	            0xeb61	                           jmp 0x4006222	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40061c1	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6755	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40061c4	          0x4863d0	                         movsxd rdx, eax	      6755	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40061c7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6755	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40061cb	          0x4801d0	                            add rax, rdx	      6755	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40061ce	           0xfb600	                   movzx eax, byte [rax]	      6755	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40061d1	           0xfb6c0	                           movzx eax, al	      6755	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40061d4	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6755	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x40061d7	        0x837de47f	           cmp dword [rbp - 0x1c], 0x7f 	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40061db	            0x7f13	                            jg 0x40061f0	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40061dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      6757	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40061e1	        0x488d5001	                      lea rdx, [rax + 1]	      6757	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40061e5	        0x488955f8	                mov qword [rbp - 8], rdx	      6757	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40061e9	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6757	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40061ec	            0x8810	                      mov byte [rax], dl	      6757	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40061ee	            0xeb2e	                           jmp 0x400621e	      6757	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x40061f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x40061f4	        0x488d5001	                      lea rdx, [rax + 1]	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x40061f8	        0x488955f8	                mov qword [rbp - 8], rdx	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x40061fc	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x40061ff	          0xc1ea06	                              shr edx, 6	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4006202	          0x83ea40	                           sub edx, 0x40	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4006205	            0x8810	                      mov byte [rax], dl	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4006207	        0x488b45f8	                mov rax, qword [rbp - 8]	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x400620b	        0x488d5001	                      lea rdx, [rax + 1]	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x400620f	        0x488955f8	                mov qword [rbp - 8], rdx	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4006213	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4006216	          0x83e23f	                           and edx, 0x3f	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4006219	          0x83c280	             add edx, 0xffffffffffffff80	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x400621c	            0x8810	                      mov byte [rax], dl	      6761	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x400621e	        0x8345e001	               add dword [rbp - 0x20], 1	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4006222	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4006225	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4006228	            0x7c97	                            jl 0x40061c1	      6753	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x400622a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6764	mbyte.c	FUNCTION_145	SWITCH_1
0x400622e	          0xc60000	                       mov byte [rax], 0	      6764	mbyte.c	FUNCTION_145	SWITCH_1
0x4006231	      0x48837db800	               cmp qword [rbp - 0x48], 0	      6765	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4006236	     0xf841c040000	                            je 0x4006658	      6765	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x400623c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4006240	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4006244	          0x4829c2	                            sub rdx, rax	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4006247	          0x4889d0	                            mov rax, rdx	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x400624a	            0x89c2	                            mov edx, eax	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x400624c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4006250	            0x8910	                    mov dword [rax], edx	      6766	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4006252	      0xe901040000	                           jmp 0x4006658	      6767	mbyte.c	FUNCTION_145	SWITCH_1
0x4006257	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x400625a	            0x89d0	                            mov eax, edx	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x400625c	             0x1c0	                            add eax, eax	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x400625e	             0x1d0	                            add eax, edx	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x4006260	          0x83c001	                              add eax, 1	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x4006263	            0x89c7	                            mov edi, eax	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x4006265	      0xe800000000	                          call 0x400626a	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x400626a	        0x488945f0	             mov qword [rbp - 0x10], rax	      6770	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x400626e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6771	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x4006273	     0xf84e2030000	                            je 0x400665b	      6771	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x4006279	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6773	mbyte.c	FUNCTION_145	SWITCH_1
0x400627d	        0x488945f8	                mov qword [rbp - 8], rax	      6773	mbyte.c	FUNCTION_145	SWITCH_1
0x4006281	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4006288	      0xe991000000	                           jmp 0x400631e	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x400628d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4006290	          0x4863d0	                         movsxd rdx, eax	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4006293	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4006297	          0x4801d0	                            add rax, rdx	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x400629a	           0xfb600	                   movzx eax, byte [rax]	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x400629d	           0xfb6c0	                           movzx eax, al	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40062a0	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6776	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x40062a3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062a6	      0x2da4000000	                           sub eax, 0xa4	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062ab	          0x83f81a	                           cmp eax, 0x1a	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062ae	            0x7753	                            ja 0x4006303	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062b0	            0x89c0	                            mov eax, eax	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062b2	    0x488b04c50000	                  mov rax, qword [rax*8]	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062ba	            0xffe0	                                 jmp rax	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062bc	    0xc745e4ac2000	          mov dword [rbp - 0x1c], 0x20ac	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062c3	            0xeb3e	                           jmp 0x4006303	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062c5	    0xc745e4600100	          mov dword [rbp - 0x1c], 0x160 	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062cc	            0xeb35	                           jmp 0x4006303	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062ce	    0xc745e4610100	          mov dword [rbp - 0x1c], 0x161 	      6781	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062d5	            0xeb2c	                           jmp 0x4006303	      6781	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062d7	    0xc745e47d0100	          mov dword [rbp - 0x1c], 0x17d 	      6782	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062de	            0xeb23	                           jmp 0x4006303	      6782	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062e0	    0xc745e47e0100	          mov dword [rbp - 0x1c], 0x17e 	      6783	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062e7	            0xeb1a	                           jmp 0x4006303	      6783	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062e9	    0xc745e4520100	          mov dword [rbp - 0x1c], 0x152 	      6784	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062f0	            0xeb11	                           jmp 0x4006303	      6784	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062f2	    0xc745e4530100	          mov dword [rbp - 0x1c], 0x153 	      6785	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062f9	            0xeb08	                           jmp 0x4006303	      6785	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x40062fb	    0xc745e4780100	          mov dword [rbp - 0x1c], 0x178 	      6786	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4006302	              0x90	                                     nop	      6786	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4006303	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x4006307	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x400630a	          0x4889d6	                            mov rsi, rdx	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x400630d	            0x89c7	                            mov edi, eax	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x400630f	      0xe800000000	                          call 0x4006314	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x4006314	            0x4898	                                    cdqe	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x4006316	        0x480145f8	                add qword [rbp - 8], rax	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x400631a	        0x8345e001	               add dword [rbp - 0x20], 1	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x400631e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4006321	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4006324	     0xf8c63ffffff	                            jl 0x400628d	      6774	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x400632a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6790	mbyte.c	FUNCTION_145	SWITCH_1
0x400632e	          0xc60000	                       mov byte [rax], 0	      6790	mbyte.c	FUNCTION_145	SWITCH_1
0x4006331	      0x48837db800	               cmp qword [rbp - 0x48], 0	      6791	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x4006336	     0xf8422030000	                            je 0x400665e	      6791	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x400633c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x4006340	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x4006344	          0x4829c2	                            sub rdx, rax	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x4006347	          0x4889d0	                            mov rax, rdx	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x400634a	            0x89c2	                            mov edx, eax	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x400634c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x4006350	            0x8910	                    mov dword [rax], edx	      6792	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x4006352	      0xe907030000	                           jmp 0x400665e	      6793	mbyte.c	FUNCTION_145	SWITCH_1
0x4006357	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x400635a	          0x83c001	                              add eax, 1	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x400635d	            0x89c7	                            mov edi, eax	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x400635f	      0xe800000000	                          call 0x4006364	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x4006364	        0x488945f0	             mov qword [rbp - 0x10], rax	      6797	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x4006368	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6798	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x400636d	     0xf84ee020000	                            je 0x4006661	      6798	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x4006373	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6800	mbyte.c	FUNCTION_145	SWITCH_1
0x4006377	        0x488945f8	                mov qword [rbp - 8], rax	      6800	mbyte.c	FUNCTION_145	SWITCH_1
0x400637b	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4006382	      0xe978020000	                           jmp 0x40065ff	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4006387	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x400638a	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x400638d	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4006390	          0x4863ca	                         movsxd rcx, edx	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4006393	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4006397	          0x4801ca	                            add rdx, rcx	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x400639a	            0x89c6	                            mov esi, eax	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x400639c	          0x4889d7	                            mov rdi, rdx	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x400639f	      0xe800000000	                          call 0x40063a4	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x40063a4	          0x8945e8	             mov dword [rbp - 0x18], eax	      6803	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x40063a7	        0x837de800	               cmp dword [rbp - 0x18], 0	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x40063ab	            0x7514	                           jne 0x40063c1	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x40063ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      6805	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x40063b1	        0x488d5001	                      lea rdx, [rax + 1]	      6805	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x40063b5	        0x488955f8	                mov qword [rbp - 8], rdx	      6805	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x40063b9	          0xc60000	                       mov byte [rax], 0	      6805	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x40063bc	      0xe93a020000	                           jmp 0x40065fb	      6805	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x40063c1	        0x837de801	               cmp dword [rbp - 0x18], 1	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063c5	     0xf8586000000	                           jne 0x4006451	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063cb	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063ce	          0x4863d0	                         movsxd rdx, eax	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063d1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063d5	          0x4801d0	                            add rax, rdx	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063d8	           0xfb600	                   movzx eax, byte [rax]	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063db	           0xfb6c0	                           movzx eax, al	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063de	            0x4898	                                    cdqe	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063e0	     0xfb680000000	                   movzx eax, byte [rax]	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063e7	           0xfbec0	                           movsx eax, al	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063ea	          0x8945ec	             mov dword [rbp - 0x14], eax	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x40063ed	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6810	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x40063f1	            0x7516	                           jne 0x4006409	      6810	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x40063f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6813	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11	CALL_8
0x40063f7	          0x4889c7	                            mov rdi, rax	      6813	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11	CALL_8
0x40063fa	      0xe800000000	                          call 0x40063ff	      6813	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11	CALL_8
0x40063ff	      0xb800000000	                              mov eax, 0	      6814	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x4006404	      0xe960020000	                           jmp 0x4006669	      6814	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x4006409	      0x48837db000	               cmp qword [rbp - 0x50], 0	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x400640e	            0x741e	                            je 0x400642e	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4006410	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4006413	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4006416	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4006419	            0x7d13	                           jge 0x400642e	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x400641b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x400641e	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4006421	            0x89c2	                            mov edx, eax	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4006423	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4006427	            0x8910	                    mov dword [rax], edx	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4006429	      0xe9dd010000	                           jmp 0x400660b	      6820	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x400642e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4006432	        0x488d5001	                      lea rdx, [rax + 1]	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4006436	        0x488955f8	                mov qword [rbp - 8], rdx	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x400643a	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x400643d	          0x4863ca	                         movsxd rcx, edx	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4006440	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4006444	          0x4801ca	                            add rdx, rcx	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4006447	           0xfb612	                   movzx edx, byte [rdx]	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x400644a	            0x8810	                      mov byte [rax], dl	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x400644c	      0xe9aa010000	                           jmp 0x40065fb	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4006451	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6826	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x4006454	          0x4863d0	                         movsxd rdx, eax	      6826	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x4006457	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6826	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x400645b	          0x4801d0	                            add rax, rdx	      6826	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x400645e	          0x4889c7	                            mov rdi, rax	      6826	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x4006461	      0xe800000000	                          call 0x4006466	      6826	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x4006466	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6826	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x4006469	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6827	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x400646d	            0x8b00	                    mov eax, dword [rax]	      6827	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x400646f	          0x83f804	                              cmp eax, 4	      6827	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x4006472	     0xf8502010000	                           jne 0x400657a	      6827	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x4006478	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400647b	      0x3d52010000	                          cmp eax, 0x152	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006480	     0xf84d1000000	                            je 0x4006557	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006486	      0x3d52010000	                          cmp eax, 0x152	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400648b	            0x7f61	                            jg 0x40064ee	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400648d	      0x3db4000000	                           cmp eax, 0xb4	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006492	     0xf84da000000	                            je 0x4006572	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006498	      0x3db4000000	                           cmp eax, 0xb4	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400649d	            0x7f26	                            jg 0x40064c5	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400649f	      0x3da6000000	                           cmp eax, 0xa6	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064a4	     0xf84c8000000	                            je 0x4006572	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064aa	      0x3da8000000	                           cmp eax, 0xa8	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064af	     0xf84bd000000	                            je 0x4006572	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064b5	      0x3da4000000	                           cmp eax, 0xa4	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064ba	     0xf84b2000000	                            je 0x4006572	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064c0	      0xe9b5000000	                           jmp 0x400657a	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064c5	      0x3db8000000	                           cmp eax, 0xb8	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064ca	     0xf84a2000000	                            je 0x4006572	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064d0	      0x3db8000000	                           cmp eax, 0xb8	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064d5	     0xf8c9f000000	                            jl 0x400657a	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064db	      0x2dbc000000	                           sub eax, 0xbc	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064e0	          0x83f802	                              cmp eax, 2	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064e3	     0xf8791000000	                            ja 0x400657a	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064e9	      0xe984000000	                           jmp 0x4006572	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064ee	      0x3d78010000	                          cmp eax, 0x178	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064f3	            0x7474	                            je 0x4006569	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064f5	      0x3d78010000	                          cmp eax, 0x178	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064fa	            0x7f17	                            jg 0x4006513	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x40064fc	      0x3d60010000	                          cmp eax, 0x160	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006501	            0x7430	                            je 0x4006533	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006503	      0x3d61010000	                          cmp eax, 0x161	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006508	            0x7432	                            je 0x400653c	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400650a	      0x3d53010000	                          cmp eax, 0x153	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400650f	            0x744f	                            je 0x4006560	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006511	            0xeb67	                           jmp 0x400657a	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006513	      0x3d7e010000	                          cmp eax, 0x17e	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006518	            0x7434	                            je 0x400654e	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400651a	      0x3dac200000	                         cmp eax, 0x20ac	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400651f	            0x7409	                            je 0x400652a	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006521	      0x3d7d010000	                          cmp eax, 0x17d	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006526	            0x741d	                            je 0x4006545	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006528	            0xeb50	                           jmp 0x400657a	      6828	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400652a	    0xc745e4a40000	           mov dword [rbp - 0x1c], 0xa4 	      6830	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006531	            0xeb47	                           jmp 0x400657a	      6830	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006533	    0xc745e4a60000	           mov dword [rbp - 0x1c], 0xa6 	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400653a	            0xeb3e	                           jmp 0x400657a	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400653c	    0xc745e4a80000	           mov dword [rbp - 0x1c], 0xa8 	      6832	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006543	            0xeb35	                           jmp 0x400657a	      6832	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006545	    0xc745e4b40000	           mov dword [rbp - 0x1c], 0xb4 	      6833	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400654c	            0xeb2c	                           jmp 0x400657a	      6833	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400654e	    0xc745e4b80000	           mov dword [rbp - 0x1c], 0xb8 	      6834	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006555	            0xeb23	                           jmp 0x400657a	      6834	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006557	    0xc745e4bc0000	           mov dword [rbp - 0x1c], 0xbc 	      6835	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400655e	            0xeb1a	                           jmp 0x400657a	      6835	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006560	    0xc745e4bd0000	           mov dword [rbp - 0x1c], 0xbd 	      6836	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006567	            0xeb11	                           jmp 0x400657a	      6836	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006569	    0xc745e4be0000	           mov dword [rbp - 0x1c], 0xbe 	      6837	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006570	            0xeb08	                           jmp 0x400657a	      6837	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006572	    0xc745e4000100	          mov dword [rbp - 0x1c], 0x100 	      6845	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4006579	              0x90	                                     nop	      6845	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x400657a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x400657d	            0x89c7	                            mov edi, eax	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x400657f	      0xe800000000	                          call 0x4006584	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4006584	            0x85c0	                           test eax, eax	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4006586	            0x756a	                           jne 0x40065f2	      6847	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4006588	    0x817de4ff0000	           cmp dword [rbp - 0x1c], 0xff 	      6849	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x400658f	            0x7f13	                            jg 0x40065a4	      6849	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4006591	        0x488b45f8	                mov rax, qword [rbp - 8]	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4006595	        0x488d5001	                      lea rdx, [rax + 1]	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4006599	        0x488955f8	                mov qword [rbp - 8], rdx	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x400659d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x40065a0	            0x8810	                      mov byte [rax], dl	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x40065a2	            0xeb4e	                           jmp 0x40065f2	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x40065a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6851	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40065a8	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6851	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40065ab	            0x85c0	                           test eax, eax	      6851	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40065ad	            0x7416	                            je 0x40065c5	      6851	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40065af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16	CALL_11
0x40065b3	          0x4889c7	                            mov rdi, rax	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16	CALL_11
0x40065b6	      0xe800000000	                          call 0x40065bb	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16	CALL_11
0x40065bb	      0xb800000000	                              mov eax, 0	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40065c0	      0xe9a4000000	                           jmp 0x4006669	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40065c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      6858	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x40065c9	        0x488d5001	                      lea rdx, [rax + 1]	      6858	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x40065cd	        0x488955f8	                mov qword [rbp - 8], rdx	      6858	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x40065d1	          0xc600bf	                    mov byte [rax], 0xbf	      6858	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x40065d4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40065d7	            0x89c7	                            mov edi, eax	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40065d9	      0xe800000000	                          call 0x40065de	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40065de	          0x83f801	                              cmp eax, 1	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40065e1	            0x7e0f	                           jle 0x40065f2	      6859	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x40065e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      6860	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x40065e7	        0x488d5001	                      lea rdx, [rax + 1]	      6860	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x40065eb	        0x488955f8	                mov qword [rbp - 8], rdx	      6860	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x40065ef	          0xc6003f	                    mov byte [rax], 0x3f	      6860	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x40065f2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x40065f5	          0x83e801	                              sub eax, 1	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x40065f8	           0x145e0	             add dword [rbp - 0x20], eax	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x40065fb	        0x8345e001	               add dword [rbp - 0x20], 1	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x40065ff	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4006602	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4006605	     0xf8c7cfdffff	                            jl 0x4006387	      6801	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x400660b	        0x488b45f8	                mov rax, qword [rbp - 8]	      6866	mbyte.c	FUNCTION_145	SWITCH_1
0x400660f	          0xc60000	                       mov byte [rax], 0	      6866	mbyte.c	FUNCTION_145	SWITCH_1
0x4006612	      0x48837db800	               cmp qword [rbp - 0x48], 0	      6867	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4006617	            0x744b	                            je 0x4006664	      6867	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4006619	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x400661d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4006621	          0x4829c2	                            sub rdx, rax	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4006624	          0x4889d0	                            mov rax, rdx	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4006627	            0x89c2	                            mov edx, eax	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4006629	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x400662d	            0x8910	                    mov dword [rax], edx	      6868	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x400662f	            0xeb33	                           jmp 0x4006664	      6869	mbyte.c	FUNCTION_145	SWITCH_1
0x4006631	        0x488b7db8	             mov rdi, qword [rbp - 0x48]	      6895	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4006635	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      6895	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4006639	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      6895	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x400663c	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      6895	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4006640	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6895	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4006644	          0x4989f8	                             mov r8, rdi	      6895	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4006647	          0x4889c7	                            mov rdi, rax	      6895	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x400664a	      0xe877daffff	                   call sym.iconv_string	      6895	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x400664f	        0x488945f0	             mov qword [rbp - 0x10], rax	      6895	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4006653	            0xeb10	                           jmp 0x4006665	      6896	mbyte.c	FUNCTION_145	SWITCH_1
0x4006655	              0x90	                                     nop	      6751	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x4006656	            0xeb0d	                           jmp 0x4006665	      6751	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x4006658	              0x90	                                     nop	      6767	mbyte.c	FUNCTION_145	SWITCH_1
0x4006659	            0xeb0a	                           jmp 0x4006665	      6767	mbyte.c	FUNCTION_145	SWITCH_1
0x400665b	              0x90	                                     nop	      6772	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x400665c	            0xeb07	                           jmp 0x4006665	      6772	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x400665e	              0x90	                                     nop	      6793	mbyte.c	FUNCTION_145	SWITCH_1
0x400665f	            0xeb04	                           jmp 0x4006665	      6793	mbyte.c	FUNCTION_145	SWITCH_1
0x4006661	              0x90	                                     nop	      6799	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x4006662	            0xeb01	                           jmp 0x4006665	      6799	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x4006664	              0x90	                                     nop	      6869	mbyte.c	FUNCTION_145	SWITCH_1
0x4006665	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6960	mbyte.c	FUNCTION_145
0x4006669	              0xc9	                                   leave	      6961	mbyte.c	FUNCTION_145
0x400666a	              0xc3	                                     ret	      6961	mbyte.c	FUNCTION_145
mb_charlen	CALL,0:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	26
0x400350b	              0x55	                                push rbp	      4148	mbyte.c	FUNCTION_80
0x400350c	          0x4889e5	                            mov rbp, rsp	      4148	mbyte.c	FUNCTION_80
0x400350f	        0x4883ec20	                           sub rsp, 0x20	      4148	mbyte.c	FUNCTION_80
0x4003513	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4148	mbyte.c	FUNCTION_80
0x4003517	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4149	mbyte.c	FUNCTION_80
0x400351b	        0x488945f8	                mov qword [rbp - 8], rax	      4149	mbyte.c	FUNCTION_80
0x400351f	      0x48837df800	                  cmp qword [rbp - 8], 0	      4152	mbyte.c	FUNCTION_80	IF_1
0x4003524	            0x7507	                           jne 0x400352d	      4152	mbyte.c	FUNCTION_80	IF_1
0x4003526	      0xb800000000	                              mov eax, 0	      4153	mbyte.c	FUNCTION_80	IF_1
0x400352b	            0xeb31	                           jmp 0x400355e	      4153	mbyte.c	FUNCTION_80	IF_1
0x400352d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4003534	            0xeb1a	                           jmp 0x4003550	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4003536	    0x488b05000000	            mov rax, qword [0x0400353d] 	      4156	mbyte.c	FUNCTION_80	FOR_1
0x400353d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4156	mbyte.c	FUNCTION_80	FOR_1
0x4003541	          0x4889d7	                            mov rdi, rdx	      4156	mbyte.c	FUNCTION_80	FOR_1
0x4003544	            0xffd0	                                call rax	      4156	mbyte.c	FUNCTION_80	FOR_1
0x4003546	            0x4898	                                    cdqe	      4156	mbyte.c	FUNCTION_80	FOR_1
0x4003548	        0x480145f8	                add qword [rbp - 8], rax	      4156	mbyte.c	FUNCTION_80	FOR_1
0x400354c	        0x8345f401	                add dword [rbp - 0xc], 1	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4003550	        0x488b45f8	                mov rax, qword [rbp - 8]	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4003554	           0xfb600	                   movzx eax, byte [rax]	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4003557	            0x84c0	                             test al, al	      4155	mbyte.c	FUNCTION_80	FOR_1
0x4003559	            0x75db	                           jne 0x4003536	      4155	mbyte.c	FUNCTION_80	FOR_1
0x400355b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4158	mbyte.c	FUNCTION_80
0x400355e	              0xc9	                                   leave	      4159	mbyte.c	FUNCTION_80
0x400355f	              0xc3	                                     ret	      4159	mbyte.c	FUNCTION_80
dbcs_screen_head_off	CALL,2:IF,2:ELSE,1:DO,0:WHILE,1:functions,0:SWITCH,0:FOR,0	56
0x4002abc	              0x55	                                push rbp	      3792	mbyte.c	FUNCTION_69
0x4002abd	          0x4889e5	                            mov rbp, rsp	      3792	mbyte.c	FUNCTION_69
0x4002ac0	        0x4883ec20	                           sub rsp, 0x20	      3792	mbyte.c	FUNCTION_69
0x4002ac4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3792	mbyte.c	FUNCTION_69
0x4002ac8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3792	mbyte.c	FUNCTION_69
0x4002acc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3799	mbyte.c	FUNCTION_69	IF_1
0x4002ad0	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3799	mbyte.c	FUNCTION_69	IF_1
0x4002ad4	            0x7642	                           jbe 0x4002b18	      3799	mbyte.c	FUNCTION_69	IF_1
0x4002ad6	    0x8b0500000000	            mov eax, dword [0x04002adc] 	      3800	mbyte.c	FUNCTION_69	IF_1
0x4002adc	      0x3dcc260000	                         cmp eax, 0x26cc	      3800	mbyte.c	FUNCTION_69	IF_1
0x4002ae1	            0x750f	                           jne 0x4002af2	      3800	mbyte.c	FUNCTION_69	IF_1
0x4002ae3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3800	mbyte.c	FUNCTION_69	IF_1
0x4002ae7	        0x4883e801	                              sub rax, 1	      3800	mbyte.c	FUNCTION_69	IF_1
0x4002aeb	           0xfb600	                   movzx eax, byte [rax]	      3800	mbyte.c	FUNCTION_69	IF_1
0x4002aee	            0x3c8e	                            cmp al, 0x8e	      3800	mbyte.c	FUNCTION_69	IF_1
0x4002af0	            0x7426	                            je 0x4002b18	      3800	mbyte.c	FUNCTION_69	IF_1
0x4002af2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3801	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x4002af6	        0x4883e801	                              sub rax, 1	      3801	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x4002afa	           0xfb600	                   movzx eax, byte [rax]	      3801	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x4002afd	           0xfb6c0	                           movzx eax, al	      3801	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x4002b00	            0x4898	                                    cdqe	      3801	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x4002b02	     0xfb680000000	                   movzx eax, byte [rax]	      3801	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x4002b09	            0x3c01	                               cmp al, 1	      3801	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x4002b0b	            0x740b	                            je 0x4002b18	      3801	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x4002b0d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3802	mbyte.c	FUNCTION_69	IF_1
0x4002b11	           0xfb600	                   movzx eax, byte [rax]	      3802	mbyte.c	FUNCTION_69	IF_1
0x4002b14	            0x84c0	                             test al, al	      3802	mbyte.c	FUNCTION_69	IF_1
0x4002b16	            0x7507	                           jne 0x4002b1f	      3802	mbyte.c	FUNCTION_69	IF_1
0x4002b18	      0xb800000000	                              mov eax, 0	      3803	mbyte.c	FUNCTION_69	IF_1
0x4002b1d	            0xeb53	                           jmp 0x4002b72	      3803	mbyte.c	FUNCTION_69	IF_1
0x4002b1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3809	mbyte.c	FUNCTION_69
0x4002b23	        0x488945f8	                mov qword [rbp - 8], rax	      3809	mbyte.c	FUNCTION_69
0x4002b27	            0xeb31	                           jmp 0x4002b5a	      3810	mbyte.c	FUNCTION_69	WHILE_1
0x4002b29	    0x8b0500000000	            mov eax, dword [0x04002b2f] 	      3812	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4002b2f	      0x3dcc260000	                         cmp eax, 0x26cc	      3812	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4002b34	            0x7512	                           jne 0x4002b48	      3812	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4002b36	        0x488b45f8	                mov rax, qword [rbp - 8]	      3812	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4002b3a	           0xfb600	                   movzx eax, byte [rax]	      3812	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4002b3d	            0x3c8e	                            cmp al, 0x8e	      3812	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4002b3f	            0x7507	                           jne 0x4002b48	      3812	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4002b41	      0x488345f801	                  add qword [rbp - 8], 1	      3813	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4002b46	            0xeb12	                           jmp 0x4002b5a	      3813	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x4002b48	        0x488b45f8	                mov rax, qword [rbp - 8]	      3815	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x4002b4c	          0x4889c7	                            mov rdi, rax	      3815	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x4002b4f	      0xe803e1ffff	                   call sym.dbcs_ptr2len	      3815	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x4002b54	            0x4898	                                    cdqe	      3815	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x4002b56	        0x480145f8	                add qword [rbp - 8], rax	      3815	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x4002b5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3810	mbyte.c	FUNCTION_69	WHILE_1
0x4002b5e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3810	mbyte.c	FUNCTION_69	WHILE_1
0x4002b62	            0x72c5	                            jb 0x4002b29	      3810	mbyte.c	FUNCTION_69	WHILE_1
0x4002b64	        0x488b45f8	                mov rax, qword [rbp - 8]	      3817	mbyte.c	FUNCTION_69
0x4002b68	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3817	mbyte.c	FUNCTION_69
0x4002b6c	           0xf95c0	                                setne al	      3817	mbyte.c	FUNCTION_69
0x4002b6f	           0xfb6c0	                           movzx eax, al	      3817	mbyte.c	FUNCTION_69
0x4002b72	              0xc9	                                   leave	      3818	mbyte.c	FUNCTION_69
0x4002b73	              0xc3	                                     ret	      3818	mbyte.c	FUNCTION_69
latin_ptr2len	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	11
0x4000c37	              0x55	                                push rbp	      1130	mbyte.c	FUNCTION_14
0x4000c38	          0x4889e5	                            mov rbp, rsp	      1130	mbyte.c	FUNCTION_14
0x4000c3b	        0x48897df8	                mov qword [rbp - 8], rdi	      1130	mbyte.c	FUNCTION_14
0x4000c3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1131	mbyte.c	FUNCTION_14	CALL_1
0x4000c43	           0xfb600	                   movzx eax, byte [rax]	      1131	mbyte.c	FUNCTION_14	CALL_1
0x4000c46	           0xfb6c0	                           movzx eax, al	      1131	mbyte.c	FUNCTION_14	CALL_1
0x4000c49	            0x4898	                                    cdqe	      1131	mbyte.c	FUNCTION_14	CALL_1
0x4000c4b	     0xfb680000000	                   movzx eax, byte [rax]	      1131	mbyte.c	FUNCTION_14	CALL_1
0x4000c52	           0xfbec0	                           movsx eax, al	      1131	mbyte.c	FUNCTION_14	CALL_1
0x4000c55	              0x5d	                                 pop rbp	      1132	mbyte.c	FUNCTION_14
0x4000c56	              0xc3	                                     ret	      1132	mbyte.c	FUNCTION_14
utf_iscomposing_uint	CALL,1:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	9
0x400209e	              0x55	                                push rbp	      2316	mbyte.c	FUNCTION_52
0x400209f	          0x4889e5	                            mov rbp, rsp	      2316	mbyte.c	FUNCTION_52
0x40020a2	        0x4883ec10	                           sub rsp, 0x10	      2316	mbyte.c	FUNCTION_52
0x40020a6	          0x897dfc	                mov dword [rbp - 4], edi	      2316	mbyte.c	FUNCTION_52
0x40020a9	          0x8b45fc	                mov eax, dword [rbp - 4]	      2317	mbyte.c	FUNCTION_52	CALL_1
0x40020ac	            0x89c7	                            mov edi, eax	      2317	mbyte.c	FUNCTION_52	CALL_1
0x40020ae	      0xe800000000	                          call 0x40020b3	      2317	mbyte.c	FUNCTION_52	CALL_1
0x40020b3	              0xc9	                                   leave	      2318	mbyte.c	FUNCTION_52
0x40020b4	              0xc3	                                     ret	      2318	mbyte.c	FUNCTION_52
mb_ptr2char_adv	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	25
0x400163f	              0x55	                                push rbp	      1893	mbyte.c	FUNCTION_37
0x4001640	          0x4889e5	                            mov rbp, rsp	      1893	mbyte.c	FUNCTION_37
0x4001643	        0x4883ec20	                           sub rsp, 0x20	      1893	mbyte.c	FUNCTION_37
0x4001647	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1893	mbyte.c	FUNCTION_37
0x400164b	    0x488b05000000	            mov rax, qword [0x04001652] 	      1896	mbyte.c	FUNCTION_37
0x4001652	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1896	mbyte.c	FUNCTION_37
0x4001656	          0x488b12	                    mov rdx, qword [rdx]	      1896	mbyte.c	FUNCTION_37
0x4001659	          0x4889d7	                            mov rdi, rdx	      1896	mbyte.c	FUNCTION_37
0x400165c	            0xffd0	                                call rax	      1896	mbyte.c	FUNCTION_37
0x400165e	          0x8945fc	                mov dword [rbp - 4], eax	      1896	mbyte.c	FUNCTION_37
0x4001661	    0x488b05000000	            mov rax, qword [0x04001668] 	      1897	mbyte.c	FUNCTION_37
0x4001668	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1897	mbyte.c	FUNCTION_37
0x400166c	          0x488b12	                    mov rdx, qword [rdx]	      1897	mbyte.c	FUNCTION_37
0x400166f	          0x4889d7	                            mov rdi, rdx	      1897	mbyte.c	FUNCTION_37
0x4001672	            0xffd0	                                call rax	      1897	mbyte.c	FUNCTION_37
0x4001674	            0x89c1	                            mov ecx, eax	      1897	mbyte.c	FUNCTION_37
0x4001676	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1897	mbyte.c	FUNCTION_37
0x400167a	          0x488b10	                    mov rdx, qword [rax]	      1897	mbyte.c	FUNCTION_37
0x400167d	          0x4863c1	                         movsxd rax, ecx	      1897	mbyte.c	FUNCTION_37
0x4001680	          0x4801c2	                            add rdx, rax	      1897	mbyte.c	FUNCTION_37
0x4001683	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1897	mbyte.c	FUNCTION_37
0x4001687	          0x488910	                    mov qword [rax], rdx	      1897	mbyte.c	FUNCTION_37
0x400168a	          0x8b45fc	                mov eax, dword [rbp - 4]	      1898	mbyte.c	FUNCTION_37
0x400168d	              0xc9	                                   leave	      1899	mbyte.c	FUNCTION_37
0x400168e	              0xc3	                                     ret	      1899	mbyte.c	FUNCTION_37
utf_ptr2len	CALL,0:IF,2:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	36
0x4001b42	              0x55	                                push rbp	      2081	mbyte.c	FUNCTION_45
0x4001b43	          0x4889e5	                            mov rbp, rsp	      2081	mbyte.c	FUNCTION_45
0x4001b46	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2081	mbyte.c	FUNCTION_45
0x4001b4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2085	mbyte.c	FUNCTION_45	IF_1
0x4001b4e	           0xfb600	                   movzx eax, byte [rax]	      2085	mbyte.c	FUNCTION_45	IF_1
0x4001b51	            0x84c0	                             test al, al	      2085	mbyte.c	FUNCTION_45	IF_1
0x4001b53	            0x7507	                           jne 0x4001b5c	      2085	mbyte.c	FUNCTION_45	IF_1
0x4001b55	      0xb800000000	                              mov eax, 0	      2086	mbyte.c	FUNCTION_45	IF_1
0x4001b5a	            0xeb57	                           jmp 0x4001bb3	      2086	mbyte.c	FUNCTION_45	IF_1
0x4001b5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2087	mbyte.c	FUNCTION_45
0x4001b60	           0xfb600	                   movzx eax, byte [rax]	      2087	mbyte.c	FUNCTION_45
0x4001b63	           0xfb6c0	                           movzx eax, al	      2087	mbyte.c	FUNCTION_45
0x4001b66	            0x4898	                                    cdqe	      2087	mbyte.c	FUNCTION_45
0x4001b68	     0xfb680000000	                   movzx eax, byte [rax]	      2087	mbyte.c	FUNCTION_45
0x4001b6f	           0xfbec0	                           movsx eax, al	      2087	mbyte.c	FUNCTION_45
0x4001b72	          0x8945fc	                mov dword [rbp - 4], eax	      2087	mbyte.c	FUNCTION_45
0x4001b75	    0xc745f8010000	                  mov dword [rbp - 8], 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001b7c	            0xeb2a	                           jmp 0x4001ba8	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001b7e	          0x8b45f8	                mov eax, dword [rbp - 8]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001b81	          0x4863d0	                         movsxd rdx, eax	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001b84	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001b88	          0x4801d0	                            add rax, rdx	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001b8b	           0xfb600	                   movzx eax, byte [rax]	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001b8e	           0xfb6c0	                           movzx eax, al	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001b91	      0x25c0000000	                           and eax, 0xc0	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001b96	      0x3d80000000	                           cmp eax, 0x80	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001b9b	            0x7407	                            je 0x4001ba4	      2089	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001b9d	      0xb801000000	                              mov eax, 1	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001ba2	            0xeb0f	                           jmp 0x4001bb3	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x4001ba4	        0x8345f801	                  add dword [rbp - 8], 1	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001ba8	          0x8b45f8	                mov eax, dword [rbp - 8]	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001bab	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001bae	            0x7cce	                            jl 0x4001b7e	      2088	mbyte.c	FUNCTION_45	FOR_1
0x4001bb0	          0x8b45fc	                mov eax, dword [rbp - 4]	      2091	mbyte.c	FUNCTION_45
0x4001bb3	              0x5d	                                 pop rbp	      2092	mbyte.c	FUNCTION_45
0x4001bb4	              0xc3	                                     ret	      2092	mbyte.c	FUNCTION_45
utf_safe_read_char_adv	CALL,1:IF,4:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	78
0x400153f	              0x55	                                push rbp	      1847	mbyte.c	FUNCTION_36
0x4001540	          0x4889e5	                            mov rbp, rsp	      1847	mbyte.c	FUNCTION_36
0x4001543	        0x4883ec20	                           sub rsp, 0x20	      1847	mbyte.c	FUNCTION_36
0x4001547	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1847	mbyte.c	FUNCTION_36
0x400154b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1847	mbyte.c	FUNCTION_36
0x400154f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1850	mbyte.c	FUNCTION_36	IF_1
0x4001553	          0x488b00	                    mov rax, qword [rax]	      1850	mbyte.c	FUNCTION_36	IF_1
0x4001556	          0x4885c0	                           test rax, rax	      1850	mbyte.c	FUNCTION_36	IF_1
0x4001559	            0x750a	                           jne 0x4001565	      1850	mbyte.c	FUNCTION_36	IF_1
0x400155b	      0xb800000000	                              mov eax, 0	      1851	mbyte.c	FUNCTION_36	IF_1
0x4001560	      0xe9d8000000	                           jmp 0x400163d	      1851	mbyte.c	FUNCTION_36	IF_1
0x4001565	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1853	mbyte.c	FUNCTION_36
0x4001569	          0x488b00	                    mov rax, qword [rax]	      1853	mbyte.c	FUNCTION_36
0x400156c	           0xfb600	                   movzx eax, byte [rax]	      1853	mbyte.c	FUNCTION_36
0x400156f	           0xfb6c0	                           movzx eax, al	      1853	mbyte.c	FUNCTION_36
0x4001572	            0x4898	                                    cdqe	      1853	mbyte.c	FUNCTION_36
0x4001574	     0xfb680000000	                   movzx eax, byte [rax]	      1853	mbyte.c	FUNCTION_36
0x400157b	           0xfbec0	                           movsx eax, al	      1853	mbyte.c	FUNCTION_36
0x400157e	          0x8945f8	                mov dword [rbp - 8], eax	      1853	mbyte.c	FUNCTION_36
0x4001581	        0x837df801	                  cmp dword [rbp - 8], 1	      1855	mbyte.c	FUNCTION_36	IF_2
0x4001585	            0x752f	                           jne 0x40015b6	      1855	mbyte.c	FUNCTION_36	IF_2
0x4001587	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1858	mbyte.c	FUNCTION_36	IF_2
0x400158b	          0x488b00	                    mov rax, qword [rax]	      1858	mbyte.c	FUNCTION_36	IF_2
0x400158e	        0x488d50ff	                      lea rdx, [rax - 1]	      1858	mbyte.c	FUNCTION_36	IF_2
0x4001592	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1858	mbyte.c	FUNCTION_36	IF_2
0x4001596	          0x488910	                    mov qword [rax], rdx	      1858	mbyte.c	FUNCTION_36	IF_2
0x4001599	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1859	mbyte.c	FUNCTION_36	IF_2
0x400159d	          0x488b00	                    mov rax, qword [rax]	      1859	mbyte.c	FUNCTION_36	IF_2
0x40015a0	        0x488d4801	                      lea rcx, [rax + 1]	      1859	mbyte.c	FUNCTION_36	IF_2
0x40015a4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1859	mbyte.c	FUNCTION_36	IF_2
0x40015a8	          0x48890a	                    mov qword [rdx], rcx	      1859	mbyte.c	FUNCTION_36	IF_2
0x40015ab	           0xfb600	                   movzx eax, byte [rax]	      1859	mbyte.c	FUNCTION_36	IF_2
0x40015ae	           0xfb6c0	                           movzx eax, al	      1859	mbyte.c	FUNCTION_36	IF_2
0x40015b1	      0xe987000000	                           jmp 0x400163d	      1859	mbyte.c	FUNCTION_36	IF_2
0x40015b6	          0x8b45f8	                mov eax, dword [rbp - 8]	      1862	mbyte.c	FUNCTION_36	IF_3
0x40015b9	          0x4863d0	                         movsxd rdx, eax	      1862	mbyte.c	FUNCTION_36	IF_3
0x40015bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1862	mbyte.c	FUNCTION_36	IF_3
0x40015c0	          0x488b00	                    mov rax, qword [rax]	      1862	mbyte.c	FUNCTION_36	IF_3
0x40015c3	          0x4839c2	                            cmp rdx, rax	      1862	mbyte.c	FUNCTION_36	IF_3
0x40015c6	            0x7770	                            ja 0x4001638	      1862	mbyte.c	FUNCTION_36	IF_3
0x40015c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x40015cc	          0x488b00	                    mov rax, qword [rax]	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x40015cf	          0x4889c7	                            mov rdi, rax	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x40015d2	      0xe800000000	                          call 0x40015d7	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x40015d7	          0x8945fc	                mov dword [rbp - 4], eax	      1867	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x40015da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40015de	          0x488b00	                    mov rax, qword [rax]	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40015e1	           0xfb600	                   movzx eax, byte [rax]	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40015e4	           0xfb6c0	                           movzx eax, al	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40015e7	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40015ea	            0x751b	                           jne 0x4001607	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40015ec	    0x817dfcc30000	               cmp dword [rbp - 4], 0xc3	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40015f3	            0x7543	                           jne 0x4001638	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40015f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40015f9	          0x488b00	                    mov rax, qword [rax]	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x40015fc	        0x4883c001	                              add rax, 1	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001600	           0xfb600	                   movzx eax, byte [rax]	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001603	            0x3c83	                            cmp al, 0x83	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001605	            0x7531	                           jne 0x4001638	      1874	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001607	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1877	mbyte.c	FUNCTION_36	IF_3	IF_4
0x400160b	          0x488b10	                    mov rdx, qword [rax]	      1877	mbyte.c	FUNCTION_36	IF_3	IF_4
0x400160e	          0x8b45f8	                mov eax, dword [rbp - 8]	      1877	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001611	            0x4898	                                    cdqe	      1877	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001613	          0x4801c2	                            add rdx, rax	      1877	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001616	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1877	mbyte.c	FUNCTION_36	IF_3	IF_4
0x400161a	          0x488910	                    mov qword [rax], rdx	      1877	mbyte.c	FUNCTION_36	IF_3	IF_4
0x400161d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001621	          0x488b10	                    mov rdx, qword [rax]	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001624	          0x8b45f8	                mov eax, dword [rbp - 8]	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001627	            0x4898	                                    cdqe	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001629	          0x4829c2	                            sub rdx, rax	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x400162c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001630	          0x488910	                    mov qword [rax], rdx	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001633	          0x8b45fc	                mov eax, dword [rbp - 4]	      1879	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001636	            0xeb05	                           jmp 0x400163d	      1879	mbyte.c	FUNCTION_36	IF_3	IF_4
0x4001638	      0xb8ffffffff	                     mov eax, 0xffffffff	      1884	mbyte.c	FUNCTION_36
0x400163d	              0xc9	                                   leave	      1885	mbyte.c	FUNCTION_36
0x400163e	              0xc3	                                     ret	      1885	mbyte.c	FUNCTION_36
im_set_position	CALL,0:IF,0:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	57
0x4004572	              0x55	                                push rbp	      4883	mbyte.c	FUNCTION_100
0x4004573	          0x4889e5	                            mov rbp, rsp	      4883	mbyte.c	FUNCTION_100
0x4004576	              0x53	                                push rbx	      4883	mbyte.c	FUNCTION_100
0x4004577	        0x4883ec38	                           sub rsp, 0x38	      4883	mbyte.c	FUNCTION_100
0x400457b	          0x897dcc	             mov dword [rbp - 0x34], edi	      4883	mbyte.c	FUNCTION_100
0x400457e	          0x8975c8	             mov dword [rbp - 0x38], esi	      4883	mbyte.c	FUNCTION_100
0x4004581	    0x64488b042528	                mov rax, qword fs:[0x28]	      4883	mbyte.c	FUNCTION_100
0x400458a	        0x488945e8	             mov qword [rbp - 0x18], rax	      4883	mbyte.c	FUNCTION_100
0x400458e	            0x31c0	                            xor eax, eax	      4883	mbyte.c	FUNCTION_100
0x4004590	    0x488b05000000	            mov rax, qword [0x04004597] 	      4884	mbyte.c	FUNCTION_100	IF_1
0x4004597	          0x4885c0	                           test rax, rax	      4884	mbyte.c	FUNCTION_100	IF_1
0x400459a	     0xf848a000000	                            je 0x400462a	      4884	mbyte.c	FUNCTION_100	IF_1
0x40045a0	    0x8b0500000000	            mov eax, dword [0x040045a6] 	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x40045a6	         0xfaf45c8	            imul eax, dword [rbp - 0x38]	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x40045aa	            0x89c2	                            mov edx, eax	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x40045ac	    0x8b0500000000	            mov eax, dword [0x040045b2] 	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x40045b2	             0x1d0	                            add eax, edx	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x40045b4	          0x8945d0	             mov dword [rbp - 0x30], eax	      4888	mbyte.c	FUNCTION_100	IF_1	CALL_1
0x40045b7	    0x8b0500000000	            mov eax, dword [0x040045bd] 	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x40045bd	         0xfaf45cc	            imul eax, dword [rbp - 0x34]	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x40045c1	            0x89c2	                            mov edx, eax	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x40045c3	    0x8b0500000000	            mov eax, dword [0x040045c9] 	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x40045c9	             0x1d0	                            add eax, edx	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x40045cb	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4889	mbyte.c	FUNCTION_100	IF_1	CALL_2
0x40045ce	    0x8b1d00000000	            mov ebx, dword [0x040045d4] 	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045d4	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045d7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045da	            0x89d6	                            mov esi, edx	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045dc	            0x89c7	                            mov edi, eax	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045de	      0xe800000000	                          call 0x40045e3	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045e3	            0x85c0	                           test eax, eax	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045e5	            0x7407	                            je 0x40045ee	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045e7	      0xb802000000	                              mov eax, 2	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045ec	            0xeb05	                           jmp 0x40045f3	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045ee	      0xb801000000	                              mov eax, 1	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045f3	           0xfafc3	                           imul eax, ebx	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045f6	          0x8945d8	             mov dword [rbp - 0x28], eax	      4890	mbyte.c	FUNCTION_100	IF_1	CALL_3
0x40045f9	    0x8b0500000000	            mov eax, dword [0x040045ff] 	      4891	mbyte.c	FUNCTION_100	IF_1
0x40045ff	          0x8945dc	             mov dword [rbp - 0x24], eax	      4891	mbyte.c	FUNCTION_100	IF_1
0x4004602	    0x488b05000000	            mov rax, qword [0x04004609] 	      4893	mbyte.c	FUNCTION_100	IF_1	CALL_4
0x4004609	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4893	mbyte.c	FUNCTION_100	IF_1	CALL_4
0x400460d	          0x4889d6	                            mov rsi, rdx	      4893	mbyte.c	FUNCTION_100	IF_1	CALL_4
0x4004610	          0x4889c7	                            mov rdi, rax	      4893	mbyte.c	FUNCTION_100	IF_1	CALL_4
0x4004613	      0xe800000000	                          call 0x4004618	      4893	mbyte.c	FUNCTION_100	IF_1	CALL_4
0x4004618	    0x488b05000000	            mov rax, qword [0x0400461f] 	      4895	mbyte.c	FUNCTION_100	IF_1	IF_2
0x400461f	        0x4883f801	                              cmp rax, 1	      4895	mbyte.c	FUNCTION_100	IF_1	IF_2
0x4004623	            0x7505	                           jne 0x400462a	      4895	mbyte.c	FUNCTION_100	IF_1	IF_2
0x4004625	      0xe8a8000000	 call sym.im_preedit_window_set_position	      4896	mbyte.c	FUNCTION_100	IF_1	CALL_5
0x400462a	              0x90	                                     nop	      4898	mbyte.c	FUNCTION_100
0x400462b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4898	mbyte.c	FUNCTION_100
0x400462f	    0x644833042528	                xor rax, qword fs:[0x28]	      4898	mbyte.c	FUNCTION_100
0x4004638	            0x7405	                            je 0x400463f	      4898	mbyte.c	FUNCTION_100
0x400463a	      0xe800000000	                          call 0x400463f	      4898	mbyte.c	FUNCTION_100
0x400463f	        0x4883c438	                           add rsp, 0x38	      4898	mbyte.c	FUNCTION_100
0x4004643	              0x5b	                                 pop rbx	      4898	mbyte.c	FUNCTION_100
0x4004644	              0x5d	                                 pop rbp	      4898	mbyte.c	FUNCTION_100
0x4004645	              0xc3	                                     ret	      4898	mbyte.c	FUNCTION_100
init_preedit_start_col	CALL,2:IF,2:ELSE,1:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	30
0x4004468	              0x55	                                push rbp	      4834	mbyte.c	FUNCTION_97
0x4004469	          0x4889e5	                            mov rbp, rsp	      4834	mbyte.c	FUNCTION_97
0x400446c	    0x8b0500000000	            mov eax, dword [0x04004472] 	      4835	mbyte.c	FUNCTION_97	IF_1
0x4004472	          0x83e008	                              and eax, 8	      4835	mbyte.c	FUNCTION_97	IF_1
0x4004475	            0x85c0	                           test eax, eax	      4835	mbyte.c	FUNCTION_97	IF_1
0x4004477	            0x740d	                            je 0x4004486	      4835	mbyte.c	FUNCTION_97	IF_1
0x4004479	      0xe800000000	                          call 0x400447e	      4836	mbyte.c	FUNCTION_97	CALL_1
0x400447e	    0x890500000000	            mov dword [0x04004484], eax 	      4836	mbyte.c	FUNCTION_97	CALL_1
0x4004484	            0xeb46	                           jmp 0x40044cc	      4836	mbyte.c	FUNCTION_97	CALL_1
0x4004486	    0x488b05000000	            mov rax, qword [0x0400448d] 	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x400448d	          0x4885c0	                           test rax, rax	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x4004490	            0x743a	                            je 0x40044cc	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x4004492	    0x488b05000000	            mov rax, qword [0x04004499] 	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x4004499	        0x488b4008	                mov rax, qword [rax + 8]	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x400449d	          0x4885c0	                           test rax, rax	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40044a0	            0x742a	                            je 0x40044cc	      4837	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40044a2	    0x488b05000000	            mov rax, qword [0x040044a9] 	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40044a9	        0x488d7038	                   lea rsi, [rax + 0x38]	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40044ad	    0x488b05000000	            mov rax, qword [0x040044b4] 	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40044b4	    0x41b800000000	                              mov r8d, 0	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40044ba	      0xb900000000	                              mov ecx, 0	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40044bf	      0xba00000000	                              mov edx, 0	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40044c4	          0x4889c7	                            mov rdi, rax	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40044c7	      0xe800000000	                          call 0x40044cc	      4838	mbyte.c	FUNCTION_97	ELSE_1	IF_2
0x40044cc	    0x488b05000000	            mov rax, qword [0x040044d3] 	      4840	mbyte.c	FUNCTION_97
0x40044d3	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      4840	mbyte.c	FUNCTION_97
0x40044d9	    0x890500000000	            mov dword [0x040044df], eax 	      4840	mbyte.c	FUNCTION_97
0x40044df	              0x90	                                     nop	      4841	mbyte.c	FUNCTION_97
0x40044e0	              0x5d	                                 pop rbp	      4841	mbyte.c	FUNCTION_97
0x40044e1	              0xc3	                                     ret	      4841	mbyte.c	FUNCTION_97
xim_init	CALL,5:IF,1:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,0	77
0x4005414	              0x55	                                push rbp	      5536	mbyte.c	FUNCTION_116
0x4005415	          0x4889e5	                            mov rbp, rsp	      5536	mbyte.c	FUNCTION_116
0x4005418	    0x488b05000000	            mov rax, qword [0x0400541f] 	      5541	mbyte.c	FUNCTION_116	CALL_2
0x400541f	          0x4885c0	                           test rax, rax	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4005422	            0x7519	                           jne 0x400543d	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4005424	      0xba00000000	                              mov edx, 0	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4005429	      0xbe00000000	                              mov esi, 0	      5541	mbyte.c	FUNCTION_116	CALL_2
0x400542e	      0xbf00000000	                              mov edi, 0	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4005433	      0xe800000000	                          call 0x4005438	      5541	mbyte.c	FUNCTION_116	CALL_2
0x4005438	      0xe944010000	                           jmp 0x4005581	      5541	mbyte.c	FUNCTION_116	CALL_2
0x400543d	    0x488b05000000	            mov rax, qword [0x04005444] 	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4005444	        0x488b4050	            mov rax, qword [rax + 0x50] 	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4005448	          0x4885c0	                           test rax, rax	      5545	mbyte.c	FUNCTION_116	CALL_5
0x400544b	            0x7519	                           jne 0x4005466	      5545	mbyte.c	FUNCTION_116	CALL_5
0x400544d	      0xba00000000	                              mov edx, 0	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4005452	      0xbe00000000	                              mov esi, 0	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4005457	      0xbf00000000	                              mov edi, 0	      5545	mbyte.c	FUNCTION_116	CALL_5
0x400545c	      0xe800000000	                          call 0x4005461	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4005461	      0xe91b010000	                           jmp 0x4005581	      5545	mbyte.c	FUNCTION_116	CALL_5
0x4005466	      0xe800000000	                          call 0x400546b	      5548	mbyte.c	FUNCTION_116	CALL_6
0x400546b	    0x488905000000	            mov qword [0x04005472], rax 	      5548	mbyte.c	FUNCTION_116	CALL_6
0x4005472	    0x488b05000000	            mov rax, qword [0x04005479] 	      5549	mbyte.c	FUNCTION_116	CALL_7
0x4005479	          0x4889c7	                            mov rdi, rax	      5549	mbyte.c	FUNCTION_116	CALL_7
0x400547c	      0xe800000000	                          call 0x4005481	      5549	mbyte.c	FUNCTION_116	CALL_7
0x4005481	    0x488b05000000	            mov rax, qword [0x04005488] 	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4005488	      0xbe50000000	                           mov esi, 0x50	      5551	mbyte.c	FUNCTION_116	CALL_9
0x400548d	          0x4889c7	                            mov rdi, rax	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4005490	      0xe800000000	                          call 0x4005495	      5551	mbyte.c	FUNCTION_116	CALL_9
0x4005495	    0x41b900000000	                              mov r9d, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x400549b	    0x41b800000000	                              mov r8d, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x40054a1	      0xb900000000	                              mov ecx, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x40054a6	      0xba00000000	                              mov edx, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x40054ab	      0xbe00000000	                              mov esi, 0	      5551	mbyte.c	FUNCTION_116	CALL_9
0x40054b0	          0x4889c7	                            mov rdi, rax	      5551	mbyte.c	FUNCTION_116	CALL_9
0x40054b3	      0xe800000000	                          call 0x40054b8	      5551	mbyte.c	FUNCTION_116	CALL_9
0x40054b8	    0x488905000000	            mov qword [0x040054bf], rax 	      5551	mbyte.c	FUNCTION_116	CALL_9
0x40054bf	    0x488b05000000	            mov rax, qword [0x040054c6] 	      5553	mbyte.c	FUNCTION_116	CALL_12
0x40054c6	      0xbe50000000	                           mov esi, 0x50	      5553	mbyte.c	FUNCTION_116	CALL_12
0x40054cb	          0x4889c7	                            mov rdi, rax	      5553	mbyte.c	FUNCTION_116	CALL_12
0x40054ce	      0xe800000000	                          call 0x40054d3	      5553	mbyte.c	FUNCTION_116	CALL_12
0x40054d3	    0x41b900000000	                              mov r9d, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x40054d9	    0x41b800000000	                              mov r8d, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x40054df	      0xb900000000	                              mov ecx, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x40054e4	      0xba00000000	                              mov edx, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x40054e9	      0xbe00000000	                              mov esi, 0	      5553	mbyte.c	FUNCTION_116	CALL_12
0x40054ee	          0x4889c7	                            mov rdi, rax	      5553	mbyte.c	FUNCTION_116	CALL_12
0x40054f1	      0xe800000000	                          call 0x40054f6	      5553	mbyte.c	FUNCTION_116	CALL_12
0x40054f6	    0x488b05000000	            mov rax, qword [0x040054fd] 	      5555	mbyte.c	FUNCTION_116	CALL_15
0x40054fd	      0xbe50000000	                           mov esi, 0x50	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4005502	          0x4889c7	                            mov rdi, rax	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4005505	      0xe800000000	                          call 0x400550a	      5555	mbyte.c	FUNCTION_116	CALL_15
0x400550a	    0x41b900000000	                              mov r9d, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4005510	    0x41b800000000	                              mov r8d, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4005516	      0xb900000000	                              mov ecx, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x400551b	      0xba00000000	                              mov edx, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4005520	      0xbe00000000	                              mov esi, 0	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4005525	          0x4889c7	                            mov rdi, rax	      5555	mbyte.c	FUNCTION_116	CALL_15
0x4005528	      0xe800000000	                          call 0x400552d	      5555	mbyte.c	FUNCTION_116	CALL_15
0x400552d	    0x488b05000000	            mov rax, qword [0x04005534] 	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4005534	      0xbe50000000	                           mov esi, 0x50	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4005539	          0x4889c7	                            mov rdi, rax	      5557	mbyte.c	FUNCTION_116	CALL_18
0x400553c	      0xe800000000	                          call 0x4005541	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4005541	    0x41b900000000	                              mov r9d, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4005547	    0x41b800000000	                              mov r8d, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x400554d	      0xb900000000	                              mov ecx, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4005552	      0xba00000000	                              mov edx, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4005557	      0xbe00000000	                              mov esi, 0	      5557	mbyte.c	FUNCTION_116	CALL_18
0x400555c	          0x4889c7	                            mov rdi, rax	      5557	mbyte.c	FUNCTION_116	CALL_18
0x400555f	      0xe800000000	                          call 0x4005564	      5557	mbyte.c	FUNCTION_116	CALL_18
0x4005564	    0x488b05000000	            mov rax, qword [0x0400556b] 	      5563	mbyte.c	FUNCTION_116	CALL_22
0x400556b	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      5563	mbyte.c	FUNCTION_116	CALL_22
0x400556f	    0x488b05000000	            mov rax, qword [0x04005576] 	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4005576	          0x4889d6	                            mov rsi, rdx	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4005579	          0x4889c7	                            mov rdi, rax	      5563	mbyte.c	FUNCTION_116	CALL_22
0x400557c	      0xe800000000	                          call 0x4005581	      5563	mbyte.c	FUNCTION_116	CALL_22
0x4005581	              0x5d	                                 pop rbp	      5565	mbyte.c	FUNCTION_116
0x4005582	              0xc3	                                     ret	      5565	mbyte.c	FUNCTION_116
utfc_ptr2char	CALL,7:IF,4:ELSE,0:DO,0:WHILE,0:functions,0:SWITCH,0:FOR,1	94
0x40017f3	              0x55	                                push rbp	      1975	mbyte.c	FUNCTION_42
0x40017f4	          0x4889e5	                            mov rbp, rsp	      1975	mbyte.c	FUNCTION_42
0x40017f7	        0x4883ec20	                           sub rsp, 0x20	      1975	mbyte.c	FUNCTION_42
0x40017fb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1975	mbyte.c	FUNCTION_42
0x40017ff	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1975	mbyte.c	FUNCTION_42
0x4001803	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1979	mbyte.c	FUNCTION_42
0x400180a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1981	mbyte.c	FUNCTION_42	CALL_1
0x400180e	          0x4889c7	                            mov rdi, rax	      1981	mbyte.c	FUNCTION_42	CALL_1
0x4001811	      0xe800000000	                          call 0x4001816	      1981	mbyte.c	FUNCTION_42	CALL_1
0x4001816	          0x8945fc	                mov dword [rbp - 4], eax	      1981	mbyte.c	FUNCTION_42	CALL_1
0x4001819	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1982	mbyte.c	FUNCTION_42	CALL_2
0x400181d	          0x4889c7	                            mov rdi, rax	      1982	mbyte.c	FUNCTION_42	CALL_2
0x4001820	      0xe800000000	                          call 0x4001825	      1982	mbyte.c	FUNCTION_42	CALL_2
0x4001825	          0x8945f0	             mov dword [rbp - 0x10], eax	      1982	mbyte.c	FUNCTION_42	CALL_2
0x4001828	        0x837df001	               cmp dword [rbp - 0x10], 1	      1985	mbyte.c	FUNCTION_42	IF_1
0x400182c	            0x7f0f	                            jg 0x400183d	      1985	mbyte.c	FUNCTION_42	IF_1
0x400182e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1985	mbyte.c	FUNCTION_42	IF_1
0x4001832	           0xfb600	                   movzx eax, byte [rax]	      1985	mbyte.c	FUNCTION_42	IF_1
0x4001835	            0x84c0	                             test al, al	      1985	mbyte.c	FUNCTION_42	IF_1
0x4001837	     0xf88ce000000	                            js 0x400190b	      1985	mbyte.c	FUNCTION_42	IF_1
0x400183d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1986	mbyte.c	FUNCTION_42	IF_1
0x4001840	          0x4863d0	                         movsxd rdx, eax	      1986	mbyte.c	FUNCTION_42	IF_1
0x4001843	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1986	mbyte.c	FUNCTION_42	IF_1
0x4001847	          0x4801d0	                            add rax, rdx	      1986	mbyte.c	FUNCTION_42	IF_1
0x400184a	           0xfb600	                   movzx eax, byte [rax]	      1986	mbyte.c	FUNCTION_42	IF_1
0x400184d	            0x84c0	                             test al, al	      1986	mbyte.c	FUNCTION_42	IF_1
0x400184f	     0xf89b6000000	                           jns 0x400190b	      1986	mbyte.c	FUNCTION_42	IF_1
0x4001855	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x4001858	          0x4863d0	                         movsxd rdx, eax	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x400185b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x400185f	          0x4801c2	                            add rdx, rax	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x4001862	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x4001866	          0x4889d6	                            mov rsi, rdx	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x4001869	          0x4889c7	                            mov rdi, rax	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x400186c	      0xe800000000	                          call 0x4001871	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x4001871	            0x85c0	                           test eax, eax	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x4001873	     0xf8492000000	                            je 0x400190b	      1987	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x4001879	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1989	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x400187c	          0x4863d0	                         movsxd rdx, eax	      1989	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x400187f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1989	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x4001883	          0x4801d0	                            add rax, rdx	      1989	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x4001886	          0x4889c7	                            mov rdi, rax	      1989	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x4001889	      0xe800000000	                          call 0x400188e	      1989	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x400188e	          0x8945f4	              mov dword [rbp - 0xc], eax	      1989	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x4001891	          0x8b45f8	                mov eax, dword [rbp - 8]	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x4001894	          0x8d5001	                      lea edx, [rax + 1]	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x4001897	          0x8955f8	                mov dword [rbp - 8], edx	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x400189a	            0x4898	                                    cdqe	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x400189c	    0x488d14850000	                        lea rdx, [rax*4]	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40018a4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40018a8	          0x4801c2	                            add rdx, rax	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40018ab	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40018ae	            0x8902	                    mov dword [rdx], eax	      1992	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x40018b0	        0x837df806	                  cmp dword [rbp - 8], 6	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x40018b4	            0x7454	                            je 0x400190a	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x40018b6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x40018b9	          0x4863d0	                         movsxd rdx, eax	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x40018bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x40018c0	          0x4801d0	                            add rax, rdx	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x40018c3	          0x4889c7	                            mov rdi, rax	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x40018c6	      0xe800000000	                          call 0x40018cb	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x40018cb	           0x145f0	             add dword [rbp - 0x10], eax	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x40018ce	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018d1	          0x4863d0	                         movsxd rdx, eax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018d8	          0x4801d0	                            add rax, rdx	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018db	           0xfb600	                   movzx eax, byte [rax]	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018de	            0x84c0	                             test al, al	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018e0	            0x7929	                           jns 0x400190b	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018e2	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018e5	          0x4863d0	                         movsxd rdx, eax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018ec	          0x4801d0	                            add rax, rdx	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018ef	          0x4889c7	                            mov rdi, rax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018f2	      0xe800000000	                          call 0x40018f7	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018f7	          0x8945f4	              mov dword [rbp - 0xc], eax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018fa	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018fd	            0x89c7	                            mov edi, eax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x40018ff	      0xe800000000	                          call 0x4001904	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x4001904	            0x85c0	                           test eax, eax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x4001906	            0x7403	                            je 0x400190b	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x4001908	            0xeb87	                           jmp 0x4001891	      1998	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x400190a	              0x90	                                     nop	      1994	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x400190b	        0x837df805	                  cmp dword [rbp - 8], 5	      2001	mbyte.c	FUNCTION_42	IF_4
0x400190f	            0x7f1a	                            jg 0x400192b	      2001	mbyte.c	FUNCTION_42	IF_4
0x4001911	          0x8b45f8	                mov eax, dword [rbp - 8]	      2002	mbyte.c	FUNCTION_42	IF_4
0x4001914	            0x4898	                                    cdqe	      2002	mbyte.c	FUNCTION_42	IF_4
0x4001916	    0x488d14850000	                        lea rdx, [rax*4]	      2002	mbyte.c	FUNCTION_42	IF_4
0x400191e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2002	mbyte.c	FUNCTION_42	IF_4
0x4001922	          0x4801d0	                            add rax, rdx	      2002	mbyte.c	FUNCTION_42	IF_4
0x4001925	    0xc70000000000	                      mov dword [rax], 0	      2002	mbyte.c	FUNCTION_42	IF_4
0x400192b	          0x8b45fc	                mov eax, dword [rbp - 4]	      2004	mbyte.c	FUNCTION_42
0x400192e	              0xc9	                                   leave	      2005	mbyte.c	FUNCTION_42
0x400192f	              0xc3	                                     ret	      2005	mbyte.c	FUNCTION_42
